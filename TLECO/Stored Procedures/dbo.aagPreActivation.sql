SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
Create procedure [dbo].[aagPreActivation]( @UserID varchar(15), @Series smallint) as  begin  if @Series = 1  begin  INSERT INTO AAG05001(USERID,JRNENTRY,DCSTATUS,RCTRXSEQ,YEAR1,TRXSORCE,TRXDATE)  SELECT DISTINCT USERID,A.JRNENTRY,DCSTATUS,A.RCTRXSEQ,YEAR1,TRXSORCE,A.TRXDATE FROM   (  select @UserID as USERID,JRNENTRY,1 as DCSTATUS,RCTRXSEQ,0 as YEAR1,TRXSORCE,TRXDATE,Ledger_ID  from GL10000  union all  select @UserID as USERID,JRNENTRY,1 as DCSTATUS,0 RCTRXSEQ,0 as YEAR1,TRXSORCE,TRXDATE,1 Ledger_ID  from GL10100  ) as A INNER JOIN  (SELECT * FROM  (select JRNENTRY,RCTRXSEQ,TRXDATE  from GL10000  union all  select JRNENTRY,0 RCTRXSEQ,TRXDATE  from GL10100) B GROUP BY JRNENTRY,RCTRXSEQ,TRXDATE HAVING COUNT(JRNENTRY)>1) C ON A.JRNENTRY = C.JRNENTRY AND A.RCTRXSEQ = C.RCTRXSEQ AND A.TRXDATE = C.TRXDATE   INSERT INTO AAG05001(USERID,JRNENTRY,DCSTATUS,RCTRXSEQ,YEAR1,TRXSORCE,TRXDATE)  SELECT @UserID as USERID,JRNENTRY,2 as DCSTATUS,RCTRXSEQ,OPENYEAR,TRXSORCE,TRXDATE FROM   (SELECT JRNENTRY, RCTRXSEQ,OPENYEAR,TRXSORCE,MAX(TRXDATE) TRXDATE FROM  (SELECT JRNENTRY, RCTRXSEQ,OPENYEAR,TRXSORCE,TRXDATE,Ledger_ID  FROM GL20000   GROUP BY OPENYEAR,JRNENTRY,RCTRXSEQ,TRXSORCE,TRXDATE,Ledger_ID) A  GROUP BY JRNENTRY,RCTRXSEQ,OPENYEAR,TRXSORCE HAVING   COUNT(CAST(JRNENTRY AS VARCHAR(15))+CAST(RCTRXSEQ AS VARCHAR(50))+CAST(OPENYEAR AS VARCHAR(10))+CAST(TRXSORCE AS VARCHAR(15))) > 1)B  INSERT INTO AAG05001(USERID,JRNENTRY,DCSTATUS,RCTRXSEQ,YEAR1,TRXSORCE,TRXDATE)  SELECT @UserID as USERID,JRNENTRY,3 as DCSTATUS,RCTRXSEQ,HSTYEAR,TRXSORCE,TRXDATE FROM   (SELECT JRNENTRY, RCTRXSEQ,HSTYEAR,TRXSORCE,MAX(TRXDATE) TRXDATE FROM  (SELECT JRNENTRY, RCTRXSEQ,HSTYEAR,TRXSORCE,TRXDATE,Ledger_ID  FROM GL30000   GROUP BY HSTYEAR,JRNENTRY,RCTRXSEQ,TRXSORCE,TRXDATE,Ledger_ID) A  GROUP BY JRNENTRY,RCTRXSEQ,HSTYEAR,TRXSORCE HAVING   COUNT(CAST(JRNENTRY AS VARCHAR(15))+CAST(RCTRXSEQ AS VARCHAR(50))+CAST(HSTYEAR AS VARCHAR(10))+CAST(TRXSORCE AS VARCHAR(15))) > 1)B  end  else if @Series = 2  insert into AAG05000(USERID,SERIES,DOCTYPE,DOCNUMBR)  SELECT DISTINCT UserID,Series,CMTrxType,TrxNum  FROM (SELECT @UserID as UserID,@Series as Series,CMTrxType,  CASE WHEN CMTrxType >= 2 AND CMTrxType <= 6 THEN cast(CMRECNUM as varchar(21)) ELSE cast(CMTrxNum as varchar(21)) END AS TrxNum,  CHEKBKID  FROM CM20200  WHERE CMRECNUM IN (SELECT DISTINCT CMDNUMWK FROM CM20400)   INTERSECT  SELECT @UserID as UserID,@Series as Series,SRCDOCTYP,   CASE WHEN SRCDOCTYP >= 2 AND SRCDOCTYP <= 6 THEN cast(CMRECNUM as varchar(21)) ELSE cast(RCPTNMBR as varchar(21)) END AS TrxNum,  CHEKBKID  FROM CM20300  WHERE CMRECNUM IN (SELECT DISTINCT CMDNUMWK FROM CM20400)) A  else if @Series = 4   insert into AAG05000(USERID,SERIES,DOCTYPE,DOCNUMBR)  SELECT DISTINCT 'sa' as UserID,4 as Series,DOCTYPE,VCHRNMBR  from PM30600 P WHERE   Exists(SELECT CNTRLTYP,VCHRNMBR FROM PM10100 WHERE CNTRLTYP=P.CNTRLTYP AND VCHRNMBR = P.VCHRNMBR  group by CNTRLTYP,VCHRNMBR)  else if @Series = 5  insert into AAG05000(USERID,SERIES,DOCTYPE,DOCNUMBR)  SELECT DISTINCT * from (select @UserID as UserID,@Series as Series, IVDOCTYP,IVDOCNBR  from IV10001  group by IVDOCTYP,IVDOCNBR  INTERSECT   select @UserID as UserID,@Series as Series, DOCTYPE,DOCNUMBR  from IV30300  group by DOCTYPE,DOCNUMBR) A  else if @Series = 11  insert into AAG05000(USERID,SERIES,DOCTYPE,DOCNUMBR)  SELECT DISTINCT * from (select @UserID as UserID,@Series as Series,SOPTYPE,SOPNUMBE   from SOP10100  INTERSECT  select @UserID,@Series,SOPTYPE,SOPNUMBE  from SOP30200) A   else if @Series = 12  insert into AAG05000(USERID,SERIES,DOCTYPE,DOCNUMBR)  SELECT DISTINCT * from (select @UserID as UserID,@Series as Series,POPTYPE,POPRCTNM  from POP10300   INTERSECT  select @UserID as UserID,@Series as Series,POPTYPE,POPRCTNM   from POP30300) A   end  GRANT EXECUTE ON [dbo].aagPreActivation TO [DYNGRP]    
GO
GRANT EXECUTE ON  [dbo].[aagPreActivation] TO [DYNGRP]
GO

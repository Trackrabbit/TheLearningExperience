SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateAssetInsurance]  @I_vASSETID char(15),    @I_vASSETIDSUF   smallint = 1,   @I_vINSURANCECLASS char(15),   @I_vINSURANCEYEAR smallint = 0,   @I_vINSURANCEVALUE numeric(19,5) = 0,  @I_vREPLACEMENTCOST numeric(19,5) = 0,  @I_vREPROCOST numeric(19,5) = 0,  @I_vDEPRREPROCOST numeric(19,5) = 0,  @I_vEXCLUSIONAMT numeric(19,5) = 0,  @I_vEXCLUSIONTYPE char(15) = '',   @I_vUSRDEFND1   char(50) = '',       @I_vUSRDEFND2   char(50) = '',       @I_vUSRDEFND3   char(50) = '',       @I_vUSRDEFND4   varchar(8000) = '',  @I_vUSRDEFND5   varchar(8000) = '',  @O_iErrorState   int output,   @oErrString   varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @ASSETINDEX int,    @INSCLASSINDX int,    @NOTEINDX numeric(19,5),  @CMPANYID smallint,  @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,    @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @ASSETINDEX = 0,    @INSCLASSINDX = 0,    @CMPANYID = 0,  @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateAssetInsurancePre  @I_vASSETID output,  @I_vASSETIDSUF output,  @I_vINSURANCECLASS output,  @I_vINSURANCEYEAR output,  @I_vINSURANCEVALUE output,  @I_vREPLACEMENTCOST output,  @I_vREPROCOST output,  @I_vDEPRREPROCOST output,  @I_vEXCLUSIONAMT output,  @I_vEXCLUSIONTYPE output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3209    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vASSETID is NULL or  @I_vASSETIDSUF is NULL or  @I_vINSURANCECLASS is NULL or  @I_vINSURANCEYEAR is NULL or  @I_vINSURANCEVALUE is NULL or  @I_vREPLACEMENTCOST is NULL or  @I_vREPROCOST is NULL or  @I_vDEPRREPROCOST is NULL or  @I_vEXCLUSIONAMT is NULL or  @I_vEXCLUSIONTYPE is NULL or   @I_vUSRDEFND1 is NULL or   @I_vUSRDEFND2 is NULL or   @I_vUSRDEFND3 is NULL or   @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   )  begin  select @O_iErrorState = 3210    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vASSETID = UPPER(@I_vASSETID),  @I_vINSURANCECLASS = UPPER(@I_vINSURANCECLASS),  @I_vEXCLUSIONTYPE = UPPER(@I_vEXCLUSIONTYPE)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 3211   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if  ( @I_vASSETID = '' ) begin  select @O_iErrorState = 3212     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vASSETIDSUF < 1 or @I_vASSETIDSUF > 999 )  begin   select @O_iErrorState = 3214     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vASSETID <> '' ) begin  if (not exists(select 1 from FA00100 (nolock) where ASSETID = @I_vASSETID and ASSETIDSUF = @I_vASSETIDSUF))  begin  select @O_iErrorState = 5652     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if  ( @I_vINSURANCECLASS = '' ) begin  select @O_iErrorState = 3213     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vINSURANCEYEAR < 0 or @I_vINSURANCEYEAR > 9999 ) begin  select @O_iErrorState = 5102     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vINSURANCECLASS <> '' ) begin  if (not exists(select 1 from FA41200 (nolock) where INSCLASSID = @I_vINSURANCECLASS))  begin  select @O_iErrorState = 3215    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @ASSETINDEX = ASSETINDEX from FA00100 (nolock) where ASSETID = @I_vASSETID and ASSETIDSUF = @I_vASSETIDSUF  select @INSCLASSINDX = INSCLASSINDX from FA41200 (nolock) where INSCLASSID = @I_vINSURANCECLASS  if (@O_iErrorState = 0) begin  if not exists( select 1 from FA00600 (nolock) where  ASSETINDEX = @ASSETINDEX )   begin  insert into FA00600 ( ASSETINDEX,  INSCLASSINDX,  INSURANCEYEAR,  INSURANCEVALUE,  REPLACEMENTCOST,  REPROCOST,  DEPRREPROCOST,  EXCLUSIONAMT,  EXCLUSIONTYPE,  NOTEINDX,  LASTMNTDDATE,  LASTMNTDTIME,  LASTMNTDUSERID  )  select   @ASSETINDEX,      @INSCLASSINDX,      @I_vINSURANCEYEAR,     @I_vINSURANCEVALUE,     @I_vREPLACEMENTCOST,     @I_vREPROCOST,      @I_vDEPRREPROCOST,     @I_vEXCLUSIONAMT,     @I_vEXCLUSIONTYPE,     0,       convert(varchar(12),getdate()),    '',       'eConnect'       if @@error <> 0  begin  select @O_iErrorState = 3216    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 3217    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taCreateAssetInsurancePost  @I_vASSETID,  @I_vASSETIDSUF,  @I_vINSURANCECLASS,  @I_vINSURANCEYEAR,  @I_vINSURANCEVALUE,  @I_vREPLACEMENTCOST,  @I_vREPROCOST,  @I_vDEPRREPROCOST,  @I_vEXCLUSIONAMT,  @I_vEXCLUSIONTYPE,   @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3218    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateAssetInsurance] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[LoadGLTrxListData]  @I_sTableName char(10) = NULL,  @I_nModule smallint = NULL,  @I_nCurrencyIndex   smallint = NULL,  @I_dtStart datetime = NULL,  @I_dtEnd datetime = NULL,  @I_fIncludeHistory tinyint  = NULL,  @I_nLanguageID smallint = 0,  @I_sRestriction char(255) = NULL,  @I_iAccountIndex int   = NULL,  @I_fUseReptoringLedgers tinyint  = 0,  @I_fFilterForALS tinyint  = 0,  @I_sUserLevel smallint = 0,  @I_iALSRelationID int   = 0,  @O_SQL_Error_State int   = NULL   output  as  declare  @StartDate nvarchar(30),  @EndDate nvarchar(30),  @iStatus int,  @iError int,  @AccountColumns char(1000),  @AcctColWithTable char(1000),  @AcctMstrName char(10),  @JoinString char(50),  @ALSRelIDString char(50),  @InvalidAcctString char(255)  select  @O_SQL_Error_State = 0,  @iStatus = 0,  @iError = 0  if (  @I_sTableName is NULL or  @I_dtStart is NULL or  @I_dtEnd is NULL or  @I_nModule is NULL or  @I_nCurrencyIndex is NULL or  @I_fIncludeHistory is NULL )  begin  select @O_SQL_Error_State = 26000  return end  if @I_fFilterForALS = 0  begin  set @AcctMstrName = 'GL00100'  set @JoinString = 'left outer join'  set @ALSRelIDString = ''  end else  begin  set @JoinString = 'left outer join'  set @ALSRelIDString = ' and AccountMaster.RELID = ' + rtrim(STR(@I_iALSRelationID))  select @AcctMstrName = case @I_sUserLevel  when 1 then 'GL00100F1'  when 2 then 'GL00100F2'  when 3 then 'GL00100F3'  else 'GL00100F4'  end  end  select @StartDate = convert(nvarchar(30), @I_dtStart, 110) select @EndDate = convert(nvarchar(30), @I_dtEnd, 110) set @AccountColumns = (dbo.glGetAccountSegmentColumns('', 0)) set @AcctColWithTable = rtrim(dbo.glGetAccountSegmentColumns('AccountMaster', 1)) select @InvalidAcctString = '''' + RTRIM((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = @I_nLanguageID and MSGNUM = 232)) + ''''  if @I_nModule = 1  or @I_nModule = 0   begin  exec ('insert into ' + @I_sTableName +  '(TRXDATE, JRNENTRY, DOCTYNAM, ' +   @AccountColumns +  'ACTINDX, ACTDESCR, DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  'CURRNIDX, RCTRXSEQ, QKOFSET, YEAR1, VOIDED, NOTEINDX, ' +   'STSDESCR, Ledger_Name, ORD, InfoValue, MKTOPROC) ' +  'select ' +   'TRXDATE, JRNENTRY, ' +  '(select DOCTYNAM = ' +  'case ' +  'when DOCTYPE = 1 then ' +  '(select case ' +  'when RVRSNGDT = ''01-01-1900'' then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18304) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'else (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 7049) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'end) ' +  'when DOCTYPE = 2 then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 171) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'when DOCTYPE = 3 then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 172) ' +  'end), ' +  @AcctColWithTable +  'glWorkTransactions.ACTINDX, ' +  'ISNULL(AccountMaster.ACTDESCR, ' + @InvalidAcctString + '), ' +  'DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  '(select case AccountMaster.ACCTTYPE ' +  'when 2 then -1 ' +  'when 4 then 3 ' +  'else ' +  @I_nCurrencyIndex +  ' end), ' +  'RCTRXSEQ, QKOFSET, YEAR1, VOIDED, glWorkTransactions.NOTEINDX, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18682)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  '(select case ' +  'when isnull([glWorkTransactions].Ledger_ID, '''') = '''' then ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'when ' + @I_fUseReptoringLedgers + ' = 0 then (select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'else (select (isnull((select Ledger_Name from GL40001 where Ledger_ID = [glWorkTransactions].Ledger_ID), ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 17879))))))) ' +  'end), ' +  'ORD, ' +  '(select dbo.syGetListInfoValue(0, 0, 0, 0, (select VOIDED), 0, 0, 0, 0, 0, 0, 0)), ' +  'MKTOPROC ' +  'from [dbo].[glWorkTransactions] ' +  @JoinString + ' [dbo].[' + @AcctMstrName + '] as AccountMaster with (NOLOCK) ' +  'on (glWorkTransactions.ACTINDX = AccountMaster.ACTINDX' + @ALSRelIDString + ') ' +  'where TRXDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and (' + @I_iAccountIndex + ' = 0 or ' + @I_iAccountIndex + ' = glWorkTransactions.ACTINDX)' +  ' and (isnull(glWorkTransactions.JRNENTRY, 0) > 0)' +  ' and ' + @I_sRestriction)   exec ('insert into ' + @I_sTableName +  '(TRXDATE, JRNENTRY, DOCTYNAM, ' +   @AccountColumns +  'ACTINDX, ACTDESCR, DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  'CURRNIDX, RCTRXSEQ, QKOFSET, YEAR1, VOIDED, NOTEINDX, ' +   'STSDESCR, Ledger_Name, ORD, InfoValue, MKTOPROC) ' +  'select ' +   'TRXDATE, JRNENTRY, ' +  '(select DOCTYNAM = ' +  'case ' +  'when DOCTYPE = 1 then ' +  '(select case ' +  'when RVRSNGDT = ''01-01-1900'' then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18304) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'else (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 7049) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'end) ' +  'when DOCTYPE = 2 then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 171) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'when DOCTYPE = 3 then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 172) ' +  'end), ' +  @AcctColWithTable +  'glWorkOffsetTransactions.ACTINDX, ' +  'ISNULL(AccountMaster.ACTDESCR, ' + @InvalidAcctString + '), ' +  'DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  '(select case AccountMaster.ACCTTYPE ' +  'when 2 then -1 ' +  'when 4 then 3 ' +  'else ' +  @I_nCurrencyIndex +  ' end), ' +  'RCTRXSEQ, QKOFSET, YEAR1, VOIDED, glWorkOffsetTransactions.NOTEINDX, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18682)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  '(select case ' +  'when isnull([glWorkOffsetTransactions].Ledger_ID, '''') = '''' then ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'when ' + @I_fUseReptoringLedgers + ' = 0 then (select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'else (select (isnull((select Ledger_Name from GL40001 where Ledger_ID = [glWorkOffsetTransactions].Ledger_ID), ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 17879))))))) ' +  'end), ' +  'ORD, ' +  '(select dbo.syGetListInfoValue(0, 0, 0, 0, (select VOIDED), 0, 0, 0, 0, 0, 0, 0)), ' +  'MKTOPROC ' +  'from [dbo].[glWorkOffsetTransactions] ' +  @JoinString + ' [dbo].[' + @AcctMstrName + '] as AccountMaster with (NOLOCK) ' +  'on (glWorkOffsetTransactions.ACTINDX = AccountMaster.ACTINDX' + @ALSRelIDString + ') ' +  'where TRXDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and (' + @I_iAccountIndex + ' = 0 or ' + @I_iAccountIndex + ' = glWorkOffsetTransactions.ACTINDX)' +  ' and ' + @I_sRestriction)   exec ('insert into ' + @I_sTableName +  '(TRXDATE, JRNENTRY, DOCTYNAM, ' +   @AccountColumns +  'ACTINDX, ACTDESCR, DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  'CURRNIDX, RCTRXSEQ, QKOFSET, YEAR1, VOIDED, NOTEINDX, ' +   'STSDESCR, Ledger_Name, ORD, InfoValue, MKTOPROC) ' +  'select ' +   'TRXDATE, JRNENTRY, ' +  '(select DOCTYNAM = ' +  'case ' +  'when RVRSNGDT = ''01-01-1900'' then (select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18304))) + (select ISNULL((select ''*'' where VOIDED = 1), ''''))) ' +  'else (select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 7049))) + (select ISNULL((select ''*'' where VOIDED = 1), ''''))) ' +  'end), ' +  @AcctColWithTable +  'glOpenTransactions.ACTINDX, ' +  'ISNULL(AccountMaster.ACTDESCR, ' + @InvalidAcctString + '), ' +  'DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  '(select case AccountMaster.ACCTTYPE ' +  'when 2 then -1 ' +  'when 4 then 3 ' +  'else ' +  @I_nCurrencyIndex +  ' end), ' +  'RCTRXSEQ, QKOFSET, YEAR1, VOIDED, glOpenTransactions.NOTEINDX, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 17213)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  '(select case ' +  'when isnull([glOpenTransactions].Ledger_ID, '''') = '''' then ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'when ' + @I_fUseReptoringLedgers + ' = 0 then (select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'else (select (isnull((select Ledger_Name from GL40001 where Ledger_ID = [glOpenTransactions].Ledger_ID), ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 17879))))))) ' +  'end), ' +  'ORD, ' +  '(select dbo.syGetListInfoValue(0, 0, 0, 0, (select VOIDED), 0, 0, 0, 0, 0, 0, 0)), ' +  'MKTOPROC ' +  'from [dbo].[glOpenTransactions] ' +  @JoinString + ' [dbo].[' + @AcctMstrName + '] as AccountMaster with (NOLOCK) ' +  'on (glOpenTransactions.ACTINDX = AccountMaster.ACTINDX' + @ALSRelIDString + ') ' +  'where TRXDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and (' + @I_iAccountIndex + ' = 0 or ' + @I_iAccountIndex + ' = glOpenTransactions.ACTINDX)' +  ' and ' + @I_sRestriction + ' ' +  'order by glOpenTransactions.JRNENTRY, glOpenTransactions.RCTRXSEQ, glOpenTransactions.ACTINDX, glOpenTransactions.TRXDATE, glOpenTransactions.PERIODID')  if @I_fIncludeHistory > 0 begin  exec ('insert into ' + @I_sTableName +  '(TRXDATE, JRNENTRY, DOCTYNAM, ' +   @AccountColumns +  'ACTINDX, ACTDESCR, DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  'CURRNIDX, RCTRXSEQ, QKOFSET, YEAR1, VOIDED, NOTEINDX, ' +   'STSDESCR, Ledger_Name, ORD, InfoValue, MKTOPROC) ' +  'select ' +   'TRXDATE, JRNENTRY, ' +  '(select DOCTYNAM = ' +  'case ' +  'when RVRSNGDT = ''01-01-1900'' then (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18304) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'else (select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 7049) + (select ISNULL((select ''*'' where VOIDED = 1), '''')) ' +  'end), ' +  @AcctColWithTable +  'glHistoryTransactions.ACTINDX, ' +  'ISNULL(AccountMaster.ACTDESCR, ' + @InvalidAcctString + '), ' +  'DEBITAMT, CRDTAMNT, SOURCDOC, ' +  'AUDITTRAIL, REFRENCE, SEQNUMBR, DCSTATUS, DOCTYPE, ' +  '(select case AccountMaster.ACCTTYPE ' +  'when 2 then -1 ' +  'when 4 then 3 ' +  'else ' +  @I_nCurrencyIndex +  ' end), ' +  'RCTRXSEQ, QKOFSET, YEAR1, VOIDED, glHistoryTransactions.NOTEINDX, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 12085)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  '(select case ' +  'when isnull([glHistoryTransactions].Ledger_ID, '''') = '''' then ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'when ' + @I_fUseReptoringLedgers + ' = 0 then (select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 9656)))) ' +  'else (select (isnull((select Ledger_Name from GL40001 where Ledger_ID = [glHistoryTransactions].Ledger_ID), ' +  '(select (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 17879))))))) ' +  'end), ' +  'ORD, ' +  '(select dbo.syGetListInfoValue(0, 0, 0, 0, (select VOIDED), 0, 0, 0, 0, 0, 0, 0)), ' +  'MKTOPROC ' +  'from [dbo].[glHistoryTransactions] ' +  @JoinString + ' [dbo].[' + @AcctMstrName + '] as AccountMaster with (NOLOCK) ' +  'on (glHistoryTransactions.ACTINDX = AccountMaster.ACTINDX' + @ALSRelIDString + ') ' +  'where TRXDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and (' + @I_iAccountIndex + ' = 0 or ' + @I_iAccountIndex + ' = glHistoryTransactions.ACTINDX)' +  ' and ' + @I_sRestriction) end  exec ('update ' + @I_sTableName + 'set ORD = DEX_ROW_ID')  exec ('update ' + @I_sTableName + ' set CURRNIDX = ((select DECPLACS from GL00100 where GL00100.ACTINDX = ' + @I_sTableName + '.ACTINDX)) ' +  'where CURRNIDX = -1')  end  select @iError = @@error  if @iStatus = 0 and @iError <> 0  Begin  select @iStatus = @iError  End  if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)  return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[LoadGLTrxListData] TO [DYNGRP]
GO

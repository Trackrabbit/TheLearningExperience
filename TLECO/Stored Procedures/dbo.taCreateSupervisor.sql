SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateSupervisor] @I_vSUPERVISORCODE_I char(6),   @I_vSUPERVISOR char(30),   @I_vEMPLOYID char(15) = '',   @I_vCHANGEBY_I char(15) = '',   @I_vCHANGEDATE_I datetime = null,  @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @O_oErrorState int,  @iError int      select  @O_iErrorState = 0,     @sCompanyID = CMPANYID from DYNAMICS..SY01500 where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateSupervisorPre  @I_vSUPERVISORCODE_I  output,  @I_vSUPERVISOR  output,  @I_vEMPLOYID output,  @I_vCHANGEBY_I  output,  @I_vCHANGEDATE_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4471    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vSUPERVISORCODE_I is NULL or  @I_vSUPERVISOR is NULL or  @I_vEMPLOYID is NULL or   @I_vCHANGEBY_I is NULL or   @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 4472    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vSUPERVISORCODE_I = UPPER(@I_vSUPERVISORCODE_I),  @I_vEMPLOYID = UPPER(@I_vEMPLOYID)  if ( @I_vSUPERVISORCODE_I = '' ) begin  select @O_iErrorState = 4473    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vSUPERVISOR = '' ) begin  select @O_iErrorState = 4474    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  if ( @I_vEMPLOYID <> '' ) begin  if (not exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID ))  begin  select @O_iErrorState = 4475     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 3675     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 3676     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4514   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  begin  if not exists( select 1 from UPR41700 (nolock) where SUPERVISORCODE_I = @I_vSUPERVISORCODE_I and EMPLOYID = @I_vEMPLOYID )  begin  insert UPR41700 (  SUPERVISORCODE_I,  SUPERVISOR,  EMPLOYID,  NOTEINDX,  CHANGEBY_I,  CHANGEDATE_I  )  select  @I_vSUPERVISORCODE_I,    @I_vSUPERVISOR,     @I_vEMPLOYID,     @nNextNoteIndex,    @I_vCHANGEBY_I,       case       WHEN @I_vCHANGEDATE_I is null  THEN convert(varchar(12),getdate())   ELSE @I_vCHANGEDATE_I  end  if @@error <> 0  begin  select @O_iErrorState = 4476    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if ( @I_vUpdateIfExists = 1 )  begin  update UPR41700   set SUPERVISOR =  case  WHEN @I_vSUPERVISOR = ''  THEN SUPERVISOR  ELSE @I_vSUPERVISOR  end,  CHANGEBY_I =   case   WHEN @I_vCHANGEBY_I = ''  THEN CHANGEBY_I  ELSE @I_vCHANGEBY_I  end,  CHANGEDATE_I =   case   WHEN @I_vCHANGEDATE_I is null  THEN CHANGEDATE_I  ELSE @I_vCHANGEDATE_I  end  where  SUPERVISORCODE_I = @I_vSUPERVISORCODE_I and  SUPERVISOR <> @I_vSUPERVISOR  if @@error <> 0  begin  select @O_iErrorState = 4477    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateSupervisorPost  @I_vSUPERVISORCODE_I,  @I_vSUPERVISOR,  @I_vEMPLOYID,  @I_vCHANGEBY_I,  @I_vCHANGEDATE_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4478    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateSupervisor] TO [DYNGRP]
GO

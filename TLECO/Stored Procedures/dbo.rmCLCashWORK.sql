SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[rmCLCashWORK]   @I_cUserID char(15) = NULL,  @I_cUserDate char(12) = NULL,  @I_cFunctionalCurrency char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cFileName2 varchar(40) = NULL,  @I_cFileName3 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @I_tMCRegistered tinyint  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,   @iStatus int,   @tLoop tinyint,  @cMessage1 varchar(255),   @cCheckbkid char(15),   @cDBName char(5),  @XRM_Cash varchar(255),   @RM_Cash varchar(255),   @CHECK int,  @WORK int,  @TRUE int,  @sDefaultDate char(12),  @FALSE tinyint  select  @O_iErrorState = 0,  @iStatus  = 0,  @TRUE  = 1,  @FALSE  = 0  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL  or @I_cUserDate is NULL  or @I_cFunctionalCurrency is NULL  or @I_cFileName1 is NULL  or @I_cFileName2 is NULL  or @I_cFileName3 is NULL  or @I_cSearchString1 is NULL  or @I_tMCRegistered is NULL  begin  select @O_iErrorState = 20846  break  end   exec @iStatus = smGetDefaultDate @sDefaultDate output   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'CHECK',   @CHECK output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'WORK',   @WORK output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @cDBName = db_name()  exec @iStatus = DYNAMICS.dbo.smGetMsgString  10331,   @cDBName,  @cMessage1 output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantString   'XRM_CASH_STR',   @XRM_Cash output,   @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantString   'RM_CASH_STR',   @RM_Cash output,   @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM10201  where RM10201.CURNCYID <> ''  and RM10201.CURNCYID <> @I_cFunctionalCurrency  and RM10201.BCHSOURC = @RM_Cash  and  NOT EXISTS  (select 1  from MC020102  where RM10201.DOCNUMBR = MC020102.DOCNUMBR  and RM10201.RMDTYPAL = MC020102.RMDTYPAL )   if @@rowcount <> 0  begin  if @I_tMCRegistered = @TRUE   begin  delete  RM10201  where RM10201.CURNCYID <> ''  and RM10201.CURNCYID <> @I_cFunctionalCurrency  and RM10201.BCHSOURC = @RM_Cash  and NOT EXISTS  (select 1  from MC020102  where RM10201.DOCNUMBR = MC020102.DOCNUMBR  and RM10201.RMDTYPAL = MC020102.RMDTYPAL )   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  17638,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end  else   begin  update  RM10201  set  CURNCYID = ''  where RM10201.CURNCYID <> ''  and RM10201.CURNCYID <> @I_cFunctionalCurrency  and RM10201.BCHSOURC = @RM_Cash  and NOT EXISTS  (select 1  from MC020102  where RM10201.DOCNUMBR = MC020102.DOCNUMBR  and RM10201.RMDTYPAL = MC020102.RMDTYPAL )  end   end    update RM00401   set  DCSTATUS = 1,  BCHSOURC = RM10201.BCHSOURC,  TRXSORCE = '',  CUSTNMBR = RM10201.CUSTNMBR,  CHEKNMBR =  case CSHRCTYP  when @CHECK then RM10201.CHEKNMBR  else ''  end,  DOCDATE = RM10201.DOCDATE  from  RM10201,  RM00401  where RM10201.DOCNUMBR = RM00401.DOCNUMBR  and RM10201.RMDTYPAL = RM00401.RMDTYPAL   and  RM10201.POSTED = @FALSE   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM10201  where RM10201.BCHSOURC = @RM_Cash  and  RM10201.POSTED = @FALSE  and NOT EXISTS  (select 1  from RM00401  where RM00401.DOCNUMBR = RM10201.DOCNUMBR  and RM00401.RMDTYPAL = RM10201.RMDTYPAL  and  RM00401.DCSTATUS = @WORK)   if @@rowcount <> 0  begin  insert into   RM00401(  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,  CUSTNMBR,  CHEKNMBR,  DOCDATE)  select  DOCNUMBR,  RMDTYPAL,  1,  BCHSOURC,  CUSTNMBR,  CHEKNMBR =  case CSHRCTYP  when @CHECK then CHEKNMBR  else ''  end,  DOCDATE  from  RM10201  where RM10201.BCHSOURC = @RM_Cash  and  RM10201.POSTED = @FALSE  and NOT EXISTS  (select 1  from RM00401  where RM00401.DOCNUMBR = RM10201.DOCNUMBR  and RM00401.RMDTYPAL = RM10201.RMDTYPAL)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10324,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select distinct  BACHNUMB,  0,  ''  from  RM10201  where RM10201.BCHSOURC = @RM_Cash  and NOT EXISTS  (select 1  from SY00500  where SY00500.BCHSOURC = RM10201.BCHSOURC  and SY00500.BACHNUMB = RM10201.BACHNUMB)   if @@rowcount <> 0  begin  select  @cCheckbkid = CHEKBKID   from  RM40101 with (NOLOCK)   insert into  SY00500(  GLPOSTDT,  BCHSOURC,  BACHNUMB,  SERIES,   MKDTOPST,  NUMOFTRX,  BACHFREQ,  BCHCOMNT,  USERID,   CHEKBKID,   BCHTOTAL,   BACHDATE,  POSTTOGL,  CREATDDT,  BCHSTTUS,  ORIGIN )  select distinct  @I_cUserDate,  @RM_Cash,  BACHNUMB,  3,  0,  1,  1,  substring(@cMessage1,1,30),  @I_cUserID,  @cCheckbkid,  0.00,  @I_cUserDate,  0,  @sDefaultDate,  0,  1  from  RM10201  where RM10201.BCHSOURC = @RM_Cash  and NOT EXISTS  (select 1  from SY00500  where SY00500.BCHSOURC = RM10201.BCHSOURC  and SY00500.BACHNUMB = RM10201.BACHNUMB)   update  SY00500  set  BCHTOTAL = ( select sum(RM10201.ORTRXAMT)  from RM10201  where SY00500.BACHNUMB = RM10201.BACHNUMB  and SY00500.BCHSOURC = RM10201.BCHSOURC ),  NUMOFTRX = ( select count(RM10201.BACHNUMB)  from RM10201  where SY00500.BACHNUMB = RM10201.BACHNUMB  and SY00500.BCHSOURC = RM10201.BCHSOURC )  from  SY00500,  RM10201,  #CNTRLNUMTEMP  where SY00500.BACHNUMB = RM10201.BACHNUMB  and SY00500.BCHSOURC = RM10201.BCHSOURC  and SY00500.BACHNUMB = #CNTRLNUMTEMP.CNTRLNUM   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName2,  @I_cSearchString1,  11506,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select distinct  BACHNUMB,  0,  ''  from  RM10201  where RM10201.BCHSOURC = @XRM_Cash  and NOT EXISTS  (select 1  from SY00500  where SY00500.BCHSOURC = RM10201.BCHSOURC  and SY00500.BACHNUMB = RM10201.BACHNUMB)   if @@rowcount <> 0  begin   delete  RM10201  where RM10201.BCHSOURC = @XRM_Cash  and NOT EXISTS  (select 1  from SY00500  where SY00500.BCHSOURC = RM10201.BCHSOURC  and SY00500.BACHNUMB = RM10201.BACHNUMB)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end   end   return(@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[rmCLCashWORK] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateLockboxBankDetails]  @I_vCUSTNMBR char(15),   @I_vBANKNAME    char(30) = '',   @I_vBNKBRNCH char(20) = '',   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output,   @oErrString  varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iAddCodeErrState int,    @iStatus int,      @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @iError int     select  @iStatus = 0,  @iAddCodeErrState =0,  @iCustomState = 0,  @O_oErrorState = 0,  @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateLockboxBankDetailsPre  @I_vCUSTNMBR output,  @I_vBANKNAME    output,  @I_vBNKBRNCH output,  @I_vUSRDEFND1  output,  @I_vUSRDEFND2  output,  @I_vUSRDEFND3  output,  @I_vUSRDEFND4  output,  @I_vUSRDEFND5  output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2650     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vCUSTNMBR is null or  @I_vBANKNAME    is null or  @I_vBNKBRNCH is null  ) begin  select @O_iErrorState = 2651    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR)  if ( @I_vCUSTNMBR = '' ) begin  select @O_iErrorState = 2652     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vCUSTNMBR <> '' ) begin  if (not exists(select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR))  begin  select @O_iErrorState = 2653     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vBANKNAME = '' and @I_vBNKBRNCH = '' ) begin  select @O_iErrorState = 2654     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (not exists (select 1 from PA00010 (nolock) where CUSTNMBR = @I_vCUSTNMBR and BANKNAME = @I_vBANKNAME and BNKBRNCH = @I_vBNKBRNCH))  begin  insert into PA00010  (  CUSTNMBR,  BANKNAME,  BNKBRNCH   )  select  @I_vCUSTNMBR,   @I_vBANKNAME,   @I_vBNKBRNCH   if (@@error <> 0)  begin  select @O_iErrorState = 2655      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 2656     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taCreateLockboxBankDetailsPost  @I_vCUSTNMBR,  @I_vBANKNAME,  @I_vBNKBRNCH,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error  if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2657    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateLockboxBankDetails] TO [DYNGRP]
GO

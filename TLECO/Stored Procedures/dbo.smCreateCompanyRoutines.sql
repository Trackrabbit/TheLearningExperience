SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smCreateCompanyRoutines] @O_iErrorState int = NULL output  as  declare @tTransaction   tinyint,  @sTempSequence   smallint,  @sSeries smallint,  @sEndType smallint,  @sModule1 smallint,  @sIndex1 smallint,  @cRutiname char(31),  @dDateDone datetime,  @cUserID char(15),  @sPalCommandType smallint,  @cPalCommand char(255),  @cApplicFil char(255),  @sDictID smallint,  @DEFAULT_DATE datetime,  @iStatus int  select @O_iErrorState = 0  exec @iStatus = smGetMinDate @DEFAULT_DATE output  if (@@trancount = 0) begin  select @tTransaction = 1  begin transaction end  DECLARE Routines INSENSITIVE CURSOR for  select   ENDTYPE,   SERIES,   MODULE1,   INDEX1,   RUTINAME,   DATEDONE,   USERID,   PALCMDTP,   PALETCMD,   APLICFIL,   DICTID   from   DYNAMICS.dbo.SY02700   where   convert(char(32),ENDTYPE) +   convert(char(32),SERIES) +   PALETCMD    not in   (select   convert(char(32),ENDTYPE) +   convert(char(32),SERIES)  +   PALETCMD   from   SY02500)  OPEN Routines  FETCH NEXT FROM Routines INTO   @sEndType,  @sSeries,  @sModule1,  @sIndex1,  @cRutiname,  @dDateDone,  @cUserID,  @sPalCommandType,  @cPalCommand,  @cApplicFil,  @sDictID  while @@FETCH_STATUS = 0 begin  select   @sTempSequence = max(INDEX1)  from  SY02500  where  @sEndType = ENDTYPE   and  @sSeries  = SERIES   if @sTempSequence is NULL  begin  select @sTempSequence = 0  end   insert into  SY02500  values (@sEndType,  @sSeries,  @sModule1,  @sTempSequence + 1,  @cRutiname,  @dDateDone,  @cUserID,  @sPalCommandType,  @cPalCommand,  @cApplicFil,  @sDictID,  convert(char(8),@DEFAULT_DATE,108) ) FETCH NEXT FROM Routines INTO   @sEndType,  @sSeries,  @sModule1,  @sIndex1,  @cRutiname,  @dDateDone,  @cUserID,  @sPalCommandType,  @cPalCommand,  @cApplicFil,  @sDictID  end  DEALLOCATE Routines  if (@tTransaction = 1) begin  commit transaction end  return    
GO
GRANT EXECUTE ON  [dbo].[smCreateCompanyRoutines] TO [DYNGRP]
GO

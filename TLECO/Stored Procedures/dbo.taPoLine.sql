SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPoLine]  @I_vPOTYPE smallint = null,     @I_vPONUMBER char(17),       @I_vDOCDATE datetime = null,    @I_vVENDORID char(15),       @I_vLOCNCODE char(10) = null,    @I_vVNDITNUM char(30) = null,    @I_vITEMNMBR char(30) = null,    @I_vQUANTITY numeric (19,5) = null,     @I_vQTYCANCE numeric (19,5) = null,   @I_vFREEONBOARD smallint = null,   @I_vREQSTDBY char(20) = null,    @I_vCOMMNTID char(15) = null,    @I_vCOMMENT_1 char(50) = null,    @I_vCOMMENT_2 char(50) = null,    @I_vCOMMENT_3 char(50) = null,    @I_vCOMMENT_4 char(50) = null,    @I_vREQDATE datetime = null,    @I_vRELEASEBYDATE datetime = null,   @I_vPRMDATE datetime = null,      @I_vPRMSHPDTE datetime = null,    @I_vNONINVEN smallint = 0,           @I_vIVIVINDX int = null,     @I_vInventoryAccount varchar(75) = '',  @I_vITEMDESC char(100) = null,    @I_vUNITCOST numeric (19,5) = null,   @I_vVNDITDSC char(100) = null,    @I_vUOFM char(8) = null,     @I_vPurchase_IV_Item_Taxable smallint = null,  @I_vPurchase_Item_Tax_Schedu char(15) = null,  @I_vPurchase_Site_Tax_Schedu char(15) = null,  @I_vBSIVCTTL smallint = null,    @I_vTAXAMNT numeric (19,5) = null,   @I_vBCKTXAMT numeric (19,5) = null,   @I_vLanded_Cost_Group_ID char(15) = null,  @I_vPLNNDSPPLID smallint = null,   @I_vSHIPMTHD char(15) = null,    @I_vBackoutTradeDiscTax numeric (19,5) = null,  @I_vPOLNESTA smallint = null,    @I_vCMMTTEXT varchar(500) = null,   @I_vORD int = null,       @I_vCUSTNMBR char(15) = null,    @I_vADRSCODE char(15) = null,    @I_vCMPNYNAM char(64) = null,    @I_vCONTACT char(60) = null,    @I_vADDRESS1 char(60) = null,    @I_vADDRESS2 char(60) = null,    @I_vADDRESS3 char(60) = null,    @I_vCITY char(35) = null,     @I_vSTATE char(29) = null,     @I_vZIPCODE char(10) = null,    @I_vCCode char(6) = null,     @I_vCOUNTRY char(60) = null,    @I_vPHONE1 char(21) = null,     @I_vPHONE2 char(21) = null,     @I_vPHONE3 char(21) = null,     @I_vFAX char(21) = null,     @I_vPrint_Phone_NumberGB smallint = null,      @I_vCURNCYID char(15) = null,    @I_vProjNum char(15) = null,    @I_vCostCatID char(15) = null,    @I_vLineNumber int = null,     @I_vUpdateIfExists smallint = 0,   @I_vNOTETEXT varchar(8000) = null,   @I_vRequesterTrx smallint = 0,    @I_vUSRDEFND1 char(50) = null,       @I_vUSRDEFND2 char(50) = null,       @I_vUSRDEFND3 char(50) = null,       @I_vUSRDEFND4 varchar(8000) = null,   @I_vUSRDEFND5 varchar(8000) = null,   @O_iErrorState int output,     @oErrString varchar(255) output     with encryption as  set deadlock_priority low  set transaction isolation level read uncommitted set nocount on  declare @PACONTNUMBER char(11),  @POTYPE smallint,  @ITMTRKOP smallint,  @ITEMTYPE smallint,  @INVINDX int,  @UNITCOST numeric (19,5),  @ITEMDESC char(100),  @VNDITDSC char(100),  @CURRNIDX int,  @SEQNUMBR int,  @LINEORIGIN smallint,  @VCTNMTHD smallint,  @PLANNINGLEADTIME smallint,  @VendItemCount int,  @DECPLQTY int,  @DECPLCUR int,  @ODECPLCU smallint,  @FREEONBOARD smallint,  @UMQTYINB numeric(19,5),  @cUMQTYINB numeric(19,5),  @UOFM char(8),  @PRCHSUOM char(8),  @UOMSCHDL char(10),  @LOCNCODE char(10),  @POLNEARY_1 numeric(19,5),  @POLNEARY_2 numeric(19,5),  @POLNEARY_3 numeric(19,5),  @POLNEARY_4 numeric(19,5),  @POLNEARY_5 numeric(19,5),  @POLNEARY_6 numeric(19,5),  @POLNEARY_7 numeric(19,5),  @POLNEARY_8 numeric(19,5),  @POLNEARY_9 numeric(19,5),  @SHIPTYPE tinyint,  @ADDRSOURCE tinyint,  @CMPANYID int,  @MAXSEG int,  @Location_Segment char(67),  @ACSGFLOC smallint,  @ACTINDX int,  @ACCNT_STRING char(100),  @NEW_ACCNT_STRING varchar(100),  @LOFSGMNT int,  @LOFSGMNTALL int,  @LOFSGMNTEND int,  @iStatus int,  @iError int,  @iCursorError int,  @O_oErrorState int,  @iInsertComponent int,  @O_iCommentMstErrState int,  @iCustomState int,  @ISMCTRX int,  @FUNLCURR char(15),  @FUNDECPLCUR int,  @EDITDECPLCUR int,  @ITEMFUNCTDEC int,  @MCINSTALLED smallint,  @LineCount int,  @cPOLNESTA smallint,  @cQTYCANCE numeric(19,5),  @cUOFM char(8),  @cLOCNCODE char(10),  @cQTYSHPPD0 numeric(19,5),  @cQTYINVCD0 numeric(19,5),  @cQTYREJ0 numeric(19,5),  @cQTYMATCH0 numeric(19,5),  @cNETQTYSHPP0 numeric(19,5),  @cQTYSHPPD1 numeric(19,5),  @cQTYINVCD1 numeric(19,5),  @cQTYREJ1 numeric(19,5),   @cQTYMATCH1 numeric(19,5),   @cNETQTYSHPP1 numeric(19,5),  @cQTYCMTBASE numeric(19,5),  @cQTYUNCMTBASE numeric(19,5),  @cCOMMNTID char(15),  @cCMMTTEXT varchar(500),  @cUNITCOST numeric(19,5),  @cQUANTITY numeric(19,5),  @cReleased_Date datetime,  @cCOMMENT_1 char(50),  @cCOMMENT_2 char(50),  @cCOMMENT_3 char(50),  @cCOMMENT_4 char(50),  @existscomment smallint,  @projectexists smallint,  @PASTAT smallint,  @PAcloseProjcosts smallint,  @costcatexists smallint,  @PATU smallint,  @PAinactive smallint,  @CANCELLED tinyint,  @PAsetupkey tinyint,  @USEADVTX tinyint,  @TAXSCHID char(15),  @PApounitostfrom tinyint,  @PAPROJNUMBER char(15),  @PAprojname char(31),  @PANONE char(6),  @PAProjectType tinyint,  @PAAcctgMethod tinyint,  @PAIV_Item_Checkbox tinyint,  @Purchase_Tax_Options tinyint,  @PABase_Unit_Cost numeric(19,5),  @Purchase_Item_Tax_Schedu char(15),  @PACogs_Idx int,  @PACGBWIPIDX int,  @PACOSTCATID char(15),  @COPTXSCH char(15),  @ITEMNMBR char(30),  @QTYBSUOM numeric(19,5),  @PABase_Qty numeric(19,5),  @PRICELVL char(15),  @CUSTNMBR char(15),  @PALineItemSeq int,  @UserDate datetime,  @PeriodID int,  @Closed int,  @Year int,  @iCustomGLPeriodErr int,  @iCustomGLPeriodState int,  @QTYUNCMTBASE numeric(19,5),  @Rec_QTYSHPPD numeric(19,5),  @Rec_QTYINVCD numeric(19,5),  @Rec_QTYREJ numeric(19,5),  @sCompanyID smallint,  @nNextNoteIndex numeric(19,5),  @iGetNextNoteIdxErrState int,  @NOTEINDX numeric(19,5),  @POSTATUS tinyint,  @BACKOUTAMT numeric(19,7),  @AllowReverseTaxes tinyint,  @ISMCREG tinyint,  @PAINCPRCHTXPRJCST tinyint,  @PAMCCURNCYID char(15),  @O_glCalculateGLPeriodErrorState1 int,  @O_glCalculateGLPeriodErrorState2 int,  @PA_Create_Periodic_Budget_RecordsErrorState int,  @PA_IVCreate_Periodic_Budget_RecordsErrorState int,  @PABBeginDate_Period int,  @PABEndDate_YEAR int,  @PAFBeginDate_Period int,  @PAFEndDate_YEAR int,  @PABBeginDate_YEAR int,  @PAFBeginDate_YEAR int,  @NUMOFPER int,  @l_fore_ctr int,  @l_base_ctr int,  @PABBeginDate datetime,  @PABEndDate datetime,  @PAFBeginDate datetime,  @PAFEndDate datetime,  @PAFEndDate_Period int,  @PABEndDate_Period int,  @i_startyearupdate int,  @i_endyearupdate int,  @i_baselinestartyearupdate int,  @i_forecaststartyearupdate int,  @PAOVERIDESEGTMWIP tinyint,  @PAOVERIDESEGTMCOGS tinyint,  @O_iINDEX int,  @SGMTNUMB int,  @SGMTNAME varchar(50),  @SGMNTID varchar(50),  @ACTIVE int,  @multiplycost tinyint,  @Purchase_Non_IV_Item_Taxable tinyint,  @INACTIVE tinyint,  @Print_Phone_NumberGB smallint,  @ShipToName char (64),  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint,  @CMPNYNAM_Source char (64),   @CNTCPRSN_Source char (60),   @ADDRESS1_Source char (60),   @ADDRESS2_Source char (60),   @ADDRESS3_Source char (60),  @CITY_Source char (35),   @STATE_Source char (29),   @ZIPCODE_Source char (10),   @CCODE_Source char (6),   @COUNTRY_Source char (60),   @PHONE1_Source char (21),  @PHONE2_Source char (21),   @PHONE3_Source char (21),   @FAX_Source char (21) select @PACONTNUMBER = '',  @ITMTRKOP = 1,  @ITEMTYPE = 0,  @INVINDX = 0,  @UNITCOST = 0,  @ITEMDESC = '',  @VNDITDSC = '',  @CURRNIDX = 0,  @SEQNUMBR = 16384,  @LINEORIGIN = 1,    @VCTNMTHD = 0,  @PLANNINGLEADTIME = 0,  @VendItemCount = 0,  @DECPLQTY = 0,  @DECPLCUR = 0,  @ODECPLCU = 0,  @FREEONBOARD = 0,  @UMQTYINB = 1,  @cUMQTYINB = 0,  @UOFM = '',  @PRCHSUOM = '',  @UOMSCHDL = '',  @LOCNCODE = '',  @POLNEARY_1 = 0,  @POLNEARY_2 = 0,  @POLNEARY_3 = 0,  @POLNEARY_4 = 0,  @POLNEARY_5 = 0,  @POLNEARY_6 = 0,  @POLNEARY_7 = 0,  @POLNEARY_8 = 0,  @POLNEARY_9 = 0,  @SHIPTYPE = 3,  @ADDRSOURCE = 0,  @CMPANYID = 0,  @MAXSEG = 0,  @Location_Segment = '',  @ACSGFLOC = 0,  @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = '',  @LOFSGMNT = 0,  @LOFSGMNTALL = 0,  @LOFSGMNTEND = 0,  @iStatus = 0,  @O_iErrorState = 0,  @oErrString = '',  @O_oErrorState = 0,  @ISMCTRX = 0,  @FUNLCURR = '',  @FUNDECPLCUR = 0,  @EDITDECPLCUR = 0,  @ITEMFUNCTDEC = 0,  @MCINSTALLED = 1,  @LineCount = 0,  @cPOLNESTA = 0,  @cQTYCANCE = 0,  @cUOFM = '',  @cLOCNCODE = '',  @cQTYSHPPD0 = 0,  @cQTYINVCD0 = 0,  @cQTYREJ0 = 0,  @cQTYMATCH0 = 0,  @cNETQTYSHPP0 = 0,  @cQTYSHPPD1 = 0,  @cQTYINVCD1 = 0,  @cQTYREJ1 = 0,  @cQTYMATCH1 = 0,  @cNETQTYSHPP1 = 0,  @cQTYCMTBASE = 0,  @cQTYUNCMTBASE = 0,  @cCOMMNTID = '',  @cCMMTTEXT = '',  @cUNITCOST = 0,  @cQUANTITY = 0,  @cReleased_Date = '',  @POTYPE = @I_vPOTYPE,  @cCOMMENT_1 = '',  @cCOMMENT_2 = '',  @cCOMMENT_3 = '',  @cCOMMENT_4 = '',  @existscomment = 0,  @projectexists = 0,  @PASTAT = 0,  @PAcloseProjcosts = 0,  @costcatexists = 0,  @PATU = 4,  @PAinactive = 0,  @CANCELLED = 0,  @PAsetupkey = 0,  @USEADVTX = 0,  @TAXSCHID = '',  @PApounitostfrom = 0,  @PAPROJNUMBER = '',  @PAprojname ='',  @PANONE = '<NONE>',  @PAProjectType = 0,  @PAAcctgMethod = 0,  @PAIV_Item_Checkbox = 0,  @Purchase_Tax_Options = 0,  @PABase_Unit_Cost = 0,  @Purchase_Item_Tax_Schedu = '',  @PACogs_Idx = 0,  @PACGBWIPIDX = 0,  @PACOSTCATID = '',  @COPTXSCH = '',  @ITEMNMBR = '',  @QTYBSUOM = 0,  @PABase_Qty = 0,  @PRICELVL = '',  @CUSTNMBR = '',  @PALineItemSeq = 0,  @UserDate = cast(getdate() as varchar(12)),  @PeriodID = 0,  @Closed = 0,  @Year = 0,  @iCustomGLPeriodErr = 0,  @iCustomGLPeriodState = 0,  @QTYUNCMTBASE = 0,  @Rec_QTYSHPPD = 0,  @Rec_QTYINVCD = 0,  @Rec_QTYREJ = 0,  @sCompanyID = 0,  @nNextNoteIndex = 0,  @iGetNextNoteIdxErrState = 0,  @NOTEINDX = 0,  @POSTATUS = 0,  @BACKOUTAMT = 0,  @AllowReverseTaxes = 0,  @ISMCREG = 1,  @PAINCPRCHTXPRJCST = 0,  @PAMCCURNCYID = '',  @O_glCalculateGLPeriodErrorState1 = 0,  @O_glCalculateGLPeriodErrorState2 = 0,  @PA_Create_Periodic_Budget_RecordsErrorState = 0,  @PA_IVCreate_Periodic_Budget_RecordsErrorState = 0,  @PABBeginDate = '',  @PABEndDate = '',  @PAFBeginDate = '',  @PAFEndDate = '',  @PABBeginDate_Period = 0,  @PABEndDate_YEAR = 0,  @PAFBeginDate_Period = 0,  @PAFEndDate_YEAR = 0,  @PABBeginDate_YEAR = 0,  @PAFBeginDate_YEAR = 0,  @NUMOFPER = 0,  @l_fore_ctr = 0,  @l_base_ctr = 0,  @PAFEndDate_Period = 0,  @PABEndDate_Period = 0,  @i_startyearupdate = 0,  @i_endyearupdate = 0,  @i_baselinestartyearupdate = 0,  @i_forecaststartyearupdate = 0,  @PAOVERIDESEGTMWIP = 0,  @PAOVERIDESEGTMCOGS = 0,  @O_iINDEX = 0,  @SGMTNUMB=0,  @SGMTNAME='',  @SGMNTID='',  @ACTIVE = 0,  @multiplycost = 0,  @Purchase_Non_IV_Item_Taxable = 0,  @INACTIVE = 0,  @Print_Phone_NumberGB = 0,  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0,  @CNTCPRSN_Source = '',   @ADDRESS1_Source = '',   @ADDRESS2_Source = '',   @ADDRESS3_Source = '',  @CITY_Source = '',   @STATE_Source = '',   @ZIPCODE_Source = '',   @CCODE_Source = '',   @COUNTRY_Source = '',   @PHONE1_Source = '',  @PHONE2_Source = '',   @PHONE3_Source = '',   @FAX_Source = ''  exec @iStatus = taPoLinePre  @I_vPOTYPE output,  @I_vPONUMBER output,  @I_vDOCDATE output,  @I_vVENDORID output,  @I_vLOCNCODE output,  @I_vVNDITNUM output,  @I_vITEMNMBR output,  @I_vQUANTITY output,  @I_vQTYCANCE output,  @I_vFREEONBOARD output,  @I_vREQSTDBY output,  @I_vCOMMNTID output,  @I_vCOMMENT_1 output,  @I_vCOMMENT_2 output,  @I_vCOMMENT_3 output,  @I_vCOMMENT_4 output,  @I_vREQDATE output,  @I_vRELEASEBYDATE output,  @I_vPRMDATE output,  @I_vPRMSHPDTE output,  @I_vNONINVEN output,  @I_vIVIVINDX output,  @I_vInventoryAccount output,  @I_vITEMDESC output,  @I_vUNITCOST output,  @I_vVNDITDSC output,  @I_vUOFM output,  @I_vPurchase_IV_Item_Taxable output,  @I_vPurchase_Item_Tax_Schedu output,  @I_vPurchase_Site_Tax_Schedu output,  @I_vBSIVCTTL output,  @I_vTAXAMNT output,  @I_vBCKTXAMT output,  @I_vLanded_Cost_Group_ID output,  @I_vPLNNDSPPLID output,  @I_vSHIPMTHD output,  @I_vBackoutTradeDiscTax output,  @I_vPOLNESTA output,  @I_vCMMTTEXT output,  @I_vORD output,  @I_vCUSTNMBR output,  @I_vADRSCODE output,  @I_vCMPNYNAM output,  @I_vCONTACT output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIPCODE output,  @I_vCCode output,  @I_vCOUNTRY output,  @I_vPHONE1 output,  @I_vPHONE2 output,  @I_vPHONE3 output,  @I_vFAX output,  @I_vPrint_Phone_NumberGB output,  @I_vCURNCYID output,  @I_vProjNum output,  @I_vCostCatID output,  @I_vLineNumber output,  @I_vUpdateIfExists output,  @I_vNOTETEXT output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 496    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vPONUMBER = upper(@I_vPONUMBER),        @I_vCOMMNTID = upper(@I_vCOMMNTID),  @I_vITEMNMBR = upper(@I_vITEMNMBR),  @I_vVENDORID = upper(@I_vVENDORID),  @I_vLOCNCODE = upper(@I_vLOCNCODE),  @I_vCUSTNMBR = upper(@I_vCUSTNMBR),  @I_vSHIPMTHD = upper(@I_vSHIPMTHD),  @I_vCCode = upper(@I_vCCode),  @I_vCURNCYID = upper(@I_vCURNCYID),  @I_vProjNum   = upper(@I_vProjNum),  @I_vCostCatID  = upper(@I_vCostCatID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if ((not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> ''))) begin  select @ISMCREG = 0 end  if (@I_vUpdateIfExists = 1) begin   select @LineCount = isnull(count(PONUMBER),0) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR   if @LineCount > 1 and  ((@I_vORD is null and @I_vPOTYPE in (1,2)) or  (@I_vORD is null and @I_vLineNumber is null and @I_vPOTYPE in (3,4)))  begin  select @O_iErrorState = 9178     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (exists(select ORD from POP10110 (nolock)  where PONUMBER = @I_vPONUMBER and ORD = @I_vORD and ITEMNMBR <> @I_vITEMNMBR))  begin  select @O_iErrorState = 9179     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPOTYPE in (1,2) and @I_vORD is null and exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR)) or  (exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and ORD = @I_vORD))  or  (exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and LineNumber = @I_vLineNumber))  begin  if (@I_vORD is null and @I_vPOTYPE in (1,2))  begin  select @I_vORD = ORD from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR  end  else  if (@I_vORD is null and @I_vPOTYPE in (3,4))  begin  select @I_vORD = ORD from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and LineNumber = @I_vLineNumber  end   select   @POTYPE = POTYPE,  @I_vPOTYPE =  case  when @I_vPOTYPE is null  then POTYPE  else @I_vPOTYPE  end,   @I_vProjNum =  case   when @I_vProjNum is null  then ProjNum  else @I_vProjNum  end,  @I_vCostCatID =  case   when @I_vCostCatID is null  then CostCatID  else @I_vCostCatID  end,   @I_vVENDORID =  case   when @I_vVENDORID is null or @I_vVENDORID = ''  then VENDORID  else @I_vVENDORID  end,  @cLOCNCODE = LOCNCODE,  @I_vLOCNCODE =  case   when @I_vLOCNCODE is null  then LOCNCODE  else @I_vLOCNCODE  end,  @I_vVNDITNUM =  case  when @I_vVNDITNUM is null  then VNDITNUM  else @I_vVNDITNUM  end,  @I_vQUANTITY =  case  when @I_vQUANTITY is null  then QTYORDER  else @I_vQUANTITY  end,   @I_vQTYCANCE =  case   when @I_vQTYCANCE is null and POLNESTA in (6) and @I_vPOLNESTA in (3)  then 0  when @I_vQTYCANCE is null  then QTYCANCE  else @I_vQTYCANCE  end,  @cQTYCANCE = QTYCANCE,  @I_vFREEONBOARD =  case  when @I_vFREEONBOARD is null  then FREEONBOARD  else @I_vFREEONBOARD  end,  @I_vREQSTDBY =  case  when @I_vREQSTDBY is null  then REQSTDBY  else @I_vREQSTDBY  end,  @cCOMMNTID = COMMNTID,  @I_vCOMMNTID =  case  when @I_vCOMMNTID is null  then COMMNTID  else @I_vCOMMNTID  end,  @I_vREQDATE =  case  when @I_vREQDATE is null  then REQDATE  else @I_vREQDATE  end,  @I_vRELEASEBYDATE =  case  when @I_vRELEASEBYDATE is null  then RELEASEBYDATE  else @I_vRELEASEBYDATE  end,  @I_vPRMDATE =  case  when @I_vPRMDATE is null  then PRMDATE  else @I_vPRMDATE  end,  @I_vPRMSHPDTE =  case  when @I_vPRMSHPDTE is null  then PRMSHPDTE  else @I_vPRMSHPDTE  end,  @I_vIVIVINDX =  case  when @I_vIVIVINDX is null and @I_vPOTYPE <> POTYPE  then 0  when @I_vIVIVINDX is null and @I_vPOTYPE = POTYPE  then INVINDX  else @I_vIVIVINDX  end,  @I_vITEMDESC =  case  when @I_vITEMDESC is null  then ITEMDESC  else @I_vITEMDESC  end,  @I_vUNITCOST =  case  when @I_vUNITCOST is null  then ORUNTCST  else @I_vUNITCOST  end,  @I_vVNDITDSC =  case  when @I_vVNDITDSC is null  then VNDITDSC  else @I_vVNDITDSC  end,  @UOFM = UOFM,  @I_vUOFM =  case  when @I_vUOFM is null  then UOFM  else @I_vUOFM  end,  @I_vPurchase_IV_Item_Taxable =  case  when @I_vPurchase_IV_Item_Taxable is null  then Purchase_IV_Item_Taxable  else @I_vPurchase_IV_Item_Taxable  end,  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu is null  then Purchase_Item_Tax_Schedu  else @I_vPurchase_Item_Tax_Schedu  end,  @I_vPurchase_Site_Tax_Schedu =  case  when @I_vPurchase_Site_Tax_Schedu is null  then Purchase_Site_Tax_Schedu  else @I_vPurchase_Site_Tax_Schedu  end,  @I_vBSIVCTTL =  case  when @I_vBSIVCTTL is null  then BSIVCTTL  else @I_vBSIVCTTL  end,  @I_vTAXAMNT =  case  when @I_vTAXAMNT is null  then ORTAXAMT  else @I_vTAXAMNT  end,  @I_vBCKTXAMT =  case  when @I_vBCKTXAMT is null  then OBTAXAMT  else @I_vBCKTXAMT  end,  @I_vLanded_Cost_Group_ID =  case  when @I_vLanded_Cost_Group_ID is null  then Landed_Cost_Group_ID  else @I_vLanded_Cost_Group_ID  end,  @I_vPLNNDSPPLID =  case  when @I_vPLNNDSPPLID is null  then PLNNDSPPLID  else @I_vPLNNDSPPLID  end,  @I_vSHIPMTHD =  case  when @I_vSHIPMTHD is null  then SHIPMTHD  else @I_vSHIPMTHD  end,  @I_vBackoutTradeDiscTax =  case  when @I_vBackoutTradeDiscTax is null  then OrigBackoutTradeDiscTax  else @I_vBackoutTradeDiscTax  end,  @I_vPOLNESTA =  case  when @I_vPOLNESTA is null  then POLNESTA  else @I_vPOLNESTA  end,  @cPOLNESTA = POLNESTA,  @I_vADRSCODE =  case  when @I_vADRSCODE is null  then ADRSCODE  else @I_vADRSCODE  end,  @I_vCMPNYNAM =  case  when @I_vCMPNYNAM is null  then CMPNYNAM  else @I_vCMPNYNAM  end,  @I_vCONTACT =  case  when @I_vCONTACT is null  then CONTACT  else @I_vCONTACT  end,  @I_vADDRESS1 =  case  when @I_vADDRESS1 is null  then ADDRESS1  else @I_vADDRESS1  end,  @I_vADDRESS2 =  case  when @I_vADDRESS2 is null  then ADDRESS2  else @I_vADDRESS2  end,  @I_vADDRESS3 =  case  when @I_vADDRESS3 is null  then ADDRESS3  else @I_vADDRESS3  end,  @I_vCITY =  case  when @I_vCITY is null  then CITY  else @I_vCITY  end,  @I_vSTATE =  case  when @I_vSTATE is null  then STATE  else @I_vSTATE  end,  @I_vZIPCODE =  case  when @I_vZIPCODE is null  then ZIPCODE  else @I_vZIPCODE  end,  @I_vCCode =  case  when @I_vCCode is null  then CCode  else @I_vCCode  end,  @I_vCOUNTRY =  case  when @I_vCOUNTRY is null  then COUNTRY  else @I_vCOUNTRY  end,  @I_vPHONE1 =  case  when @I_vPHONE1 is null  then PHONE1  else @I_vPHONE1  end,  @I_vPHONE2 =  case  when @I_vPHONE2 is null  then PHONE2  else @I_vPHONE2  end,  @I_vPHONE3 =  case  when @I_vPHONE3 is null  then PHONE3  else @I_vPHONE3  end,  @I_vFAX =  case  when @I_vFAX is null  then FAX  else @I_vFAX  end,  @I_vCURNCYID =  case  when @I_vCURNCYID is null  then CURNCYID  else @I_vCURNCYID  end,  @cUNITCOST = ORUNTCST,  @cQUANTITY = QTYORDER,  @cUOFM = UOFM,  @cReleased_Date = Released_Date,  @POLNEARY_5 = POLNEARY_5,  @cUMQTYINB = UMQTYINB,    @cQTYUNCMTBASE = QTYUNCMTBASE,  @I_vORD = ORD,  @I_vLineNumber = LineNumber,  @I_vPrint_Phone_NumberGB =   case  when @I_vPrint_Phone_NumberGB is null  then Print_Phone_NumberGB  else @I_vPrint_Phone_NumberGB  end  from POP10110 (UPDLOCK)  where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and  ORD = case when @I_vORD is not null then @I_vORD else ORD end and  LineNumber = case when @I_vLineNumber is not null then @I_vLineNumber else LineNumber end   select @INACTIVE = INACTIVE from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@INACTIVE = 1 and @cQUANTITY <> @I_vQUANTITY)  begin  select @O_iErrorState = 11750     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vCMMTTEXT is null or  @I_vCOMMENT_1 is null or  @I_vCOMMENT_2 is null or  @I_vCOMMENT_3 is null or  @I_vCOMMENT_4 is null)  begin  select @cCMMTTEXT =  convert(varchar(500),CMMTTEXT),  @cCOMMENT_1 = COMMENT_1,  @cCOMMENT_2 = COMMENT_2,  @cCOMMENT_3 = COMMENT_3,  @cCOMMENT_4 = COMMENT_4  from POP10550 (UPDLOCK)  where POPNUMBE = @I_vPONUMBER and ORD = @I_vORD  end   if @I_vCMMTTEXT is null and @I_vCOMMENT_1 is null and @I_vCOMMENT_2 is null and @I_vCOMMENT_3 is null and @I_vCOMMENT_4 is null  begin  select @I_vCMMTTEXT = @cCMMTTEXT  end   else if @I_vCMMTTEXT is null  begin  select @I_vCMMTTEXT = ''  end   if @I_vCMMTTEXT is null  begin  if @I_vCOMMENT_1 is null select @I_vCOMMENT_1 = @cCOMMENT_1  if @I_vCOMMENT_2 is null select @I_vCOMMENT_2 = @cCOMMENT_2  if @I_vCOMMENT_3 is null select @I_vCOMMENT_3 = @cCOMMENT_3  if @I_vCOMMENT_4 is null select @I_vCOMMENT_4 = @cCOMMENT_4  end  else  begin  if @I_vCOMMENT_1 is null select @I_vCOMMENT_1 = ''  if @I_vCOMMENT_2 is null select @I_vCOMMENT_2 = ''  if @I_vCOMMENT_3 is null select @I_vCOMMENT_3 = ''  if @I_vCOMMENT_4 is null select @I_vCOMMENT_4 = ''  end   select  @I_vCUSTNMBR =  case  when @I_vCUSTNMBR is null and @I_vPOTYPE in (2,4)  then CUSTNMBR  when @I_vCUSTNMBR is null and @I_vPOTYPE in (1,3)  then ''  else @I_vCUSTNMBR  end  from POP10100 (nolock)  where PONUMBER = @I_vPONUMBER  if (@cLOCNCODE <> @I_vLOCNCODE or @cUOFM <> @I_vUOFM) and exists(select 1 from POP10500 (nolock) where PONUMBER = @I_vPONUMBER and POLNENUM = @I_vORD)  begin  select @O_iErrorState = 9208      exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vQTYCANCE * @cUMQTYINB) > (@cQTYUNCMTBASE + (@cQTYCANCE * @cUMQTYINB))    begin  select @O_iErrorState = 11482      exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end    select @POSTATUS = POSTATUS from POP10100 (nolock) where PONUMBER = @I_vPONUMBER   if @POSTATUS in(4,5,6)  begin  select @O_iErrorState = 8248    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @LineCount > 0   begin  if @I_vLineNumber is null  begin  select @I_vLineNumber = isnull(max(LineNumber),0) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER  select @I_vLineNumber = @I_vLineNumber + 1  end  end   if (@I_vNOTETEXT is null)  begin  select @I_vNOTETEXT = TXTFIELD from SY03900 (nolock) where NOTEINDX = @POLNEARY_5  end  end  if (@I_vUNITCOST is null) and (@I_vUOFM <> '') begin   select @multiplycost = 1 end   if (@I_vUNITCOST is null) and (@I_vUOFM is null) begin   select @multiplycost = 1 end  if (@I_vUNITCOST is not null) begin   select @multiplycost = 0 end  if @I_vUpdateIfExists = 0 and exists(select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER) begin  select @O_iErrorState = 9127    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vUpdateIfExists = 0 or @LineCount = 0 or  (@I_vUpdateIfExists = 1 and @I_vORD is not null and not exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and ORD = @I_vORD)) or  (@I_vUpdateIfExists = 1 and @I_vLineNumber is not null and not exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and LineNumber = @I_vLineNumber)) begin  if @I_vProjNum is NULL select @I_vProjNum = ''  if @I_vCostCatID is NULL select @I_vCostCatID = ''  if @I_vPOTYPE is NULL select @I_vPOTYPE = 1  if @I_vLOCNCODE is NULL select @I_vLOCNCODE = ''  if @I_vITEMNMBR is NULL select @I_vITEMNMBR = ''  if @I_vREQSTDBY is NULL select @I_vREQSTDBY = ''  if @I_vCOMMNTID is NULL select @I_vCOMMNTID = ''  if @I_vCOMMENT_1 is NULL select @I_vCOMMENT_1 = ''  if @I_vCOMMENT_2 is NULL select @I_vCOMMENT_2 = ''  if @I_vCOMMENT_3 is NULL select @I_vCOMMENT_3 = ''  if @I_vCOMMENT_4 is NULL select @I_vCOMMENT_4 = ''  if @I_vREQDATE is NULL select @I_vREQDATE = ''  if @I_vRELEASEBYDATE is NULL select @I_vRELEASEBYDATE = ''  if @I_vPRMDATE is NULL select @I_vPRMDATE = ''  if @I_vPRMSHPDTE is NULL select @I_vPRMSHPDTE = ''  if @I_vNONINVEN is NULL select @I_vNONINVEN = 0  if @I_vIVIVINDX is NULL select @I_vIVIVINDX = 0  if @I_vInventoryAccount is NULL select @I_vInventoryAccount = ''  if @I_vITEMDESC is NULL select @I_vITEMDESC = ''  if @I_vVNDITNUM is NULL select @I_vVNDITNUM = ''  if @I_vVNDITDSC is NULL select @I_vVNDITDSC = ''  if @I_vUOFM is NULL select @I_vUOFM = ''  if @I_vPOLNESTA is NULL  select @I_vPOLNESTA = 1  if @I_vCMMTTEXT is NULL select @I_vCMMTTEXT = ''  if @I_vCURNCYID is NULL select @I_vCURNCYID = ''  if @I_vBSIVCTTL is NULL select @I_vBSIVCTTL = 0  if @I_vTAXAMNT is NULL select @I_vTAXAMNT = 0  if @I_vBCKTXAMT is NULL select @I_vBCKTXAMT = 0  if @I_vPLNNDSPPLID is NULL select @I_vPLNNDSPPLID = 0  if @I_vBackoutTradeDiscTax is NULL select @I_vBackoutTradeDiscTax = 0  if @I_vORD is NULL select @I_vORD = 0  if @I_vCUSTNMBR is NULL select @I_vCUSTNMBR = ''  if @I_vQTYCANCE is NULL select @I_vQTYCANCE = 0  if @I_vQUANTITY is NULL select @I_vQUANTITY = 0  if @I_vNOTETEXT is NULL select @I_vNOTETEXT = ''   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement = 1,  @O_mNoteIndex = @POLNEARY_5 output,  @O_iErrorState = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 8211    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vPONUMBER is NULL or  @I_vLOCNCODE is NULL or  @I_vITEMNMBR is NULL or  @I_vREQSTDBY is NULL or  @I_vCOMMNTID is NULL or  @I_vCOMMENT_1 is NULL or  @I_vCOMMENT_2 is NULL or  @I_vCOMMENT_3 is NULL or  @I_vCOMMENT_4 is NULL or  @I_vREQDATE is NULL or  @I_vRELEASEBYDATE is NULL or  @I_vPRMDATE is NULL or  @I_vPRMSHPDTE is NULL or  @I_vNONINVEN is NULL or  @I_vIVIVINDX is NULL or  @I_vInventoryAccount is NULL or  @I_vITEMDESC is NULL or  @I_vVNDITNUM is NULL or  @I_vVNDITDSC is NULL or  @I_vUOFM is NULL or  @I_vQUANTITY is NULL or  @I_vPOLNESTA is NULL  or  @I_vCMMTTEXT is NULL or  @I_vCURNCYID is NULL or  @I_vProjNum is NULL or  @I_vCostCatID is NULL) begin  select @O_iErrorState = 238    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCOMMNTID = 'untitled*') begin  select @I_vCOMMNTID = '' end  if @I_vLineNumber is null and @I_vPOTYPE in (3,4) and @LineCount = 0  select @I_vLineNumber = 0  else if (@I_vLineNumber is null and @I_vPOTYPE in (3,4) and @LineCount > 0) or  ((@LineCount = 0 or @I_vUpdateIfExists = 0) and @I_vLineNumber is null) begin  select @I_vLineNumber = isnull(max(LineNumber),0) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER  select @I_vLineNumber = @I_vLineNumber + 1 end  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@LineCount = 0) and (@I_vProjNum <> '') and (@I_vCostCatID <> '')  begin  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = 1,  @O_mNoteIndex = @NOTEINDX output,  @O_iErrorState = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 8238    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = 1,  @O_mNoteIndex = @nNextNoteIndex output,  @O_iErrorState = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 8213    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vNONINVEN = 1) begin  if (exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 5466     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vNONINVEN = 0) begin  if (@I_vVNDITNUM = '' and @I_vITEMNMBR = '')  begin  select @O_iErrorState = 396     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @VendItemCount = count(VENDORID) from IV00103 (nolock)   where VENDORID = @I_vVENDORID  and (VNDITNUM = @I_vVNDITNUM or @I_vVNDITNUM = '')  and (ITEMNMBR = @I_vITEMNMBR or @I_vITEMNMBR = '')   if (@VendItemCount = 1)  begin  select @I_vITEMNMBR = ITEMNMBR, @I_vVNDITNUM = VNDITNUM, @VNDITDSC = VNDITDSC, @UNITCOST = Last_Originating_Cost  from IV00103 (nolock)  where VENDORID = @I_vVENDORID  and (VNDITNUM = @I_vVNDITNUM or @I_vVNDITNUM = '')  and (ITEMNMBR = @I_vITEMNMBR or @I_vITEMNMBR = '')   if (@I_vVNDITNUM = '')  begin  select @O_iErrorState = 9002     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   end  else  begin  if (@VendItemCount = 0)  begin  select @O_iErrorState = 397     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  select @O_iErrorState = 234     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end end else begin  if ((@I_vITEMNMBR <> '') and (@I_vVNDITNUM = ''))  begin  select  @I_vVNDITNUM = @I_vITEMNMBR,  @VNDITDSC = ''  end  else  begin  if ((@I_vVNDITNUM <> '') and (@I_vITEMNMBR = ''))  begin  select @I_vITEMNMBR = @I_vVNDITNUM,  @I_vVNDITNUM = @I_vVNDITNUM,  @VNDITDSC = ''  end  else  begin  select  @I_vITEMNMBR = @I_vITEMNMBR,  @I_vVNDITNUM = @I_vVNDITNUM  end  end   if ((@I_vITEMNMBR = '') and (@I_vVNDITNUM = ''))  begin  select @O_iErrorState = 246     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUpdateIfExists = 1) begin  if (@I_vPOLNESTA = 6)  begin  select @I_vQTYCANCE = @I_vQUANTITY  end   if @cPOLNESTA in (1) and @I_vPOLNESTA in (3,4,5)  begin  select @O_iErrorState = 9188     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (2) and @I_vPOLNESTA in (1)  begin  select @O_iErrorState = 9189     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if @cPOLNESTA in (3) and @I_vPOLNESTA in (1)  begin  select @O_iErrorState = 9223     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (3) and @I_vPOLNESTA in (2)  begin  select @O_iErrorState = 9191     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (4) and @I_vPOLNESTA in (1)  begin  select @O_iErrorState = 9192     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (4) and @I_vPOLNESTA in (2)  begin  select @O_iErrorState = 9193     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (4) and @I_vPOLNESTA in (6)  begin  select @O_iErrorState = 9194     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (5)  begin  select @O_iErrorState = 9195     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @cPOLNESTA in (6) and @I_vPOLNESTA in (4,5)  begin  select @O_iErrorState = 9196     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOLNESTA in (5) and exists(select 1 from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POLNENUM = @I_vORD and Status = 0)  begin  select @O_iErrorState = 9228     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select  @cQTYSHPPD0 = isnull(sum(QTYSHPPD*UMQTYINB),0),  @cQTYINVCD0 = isnull(sum(QTYINVCD*UMQTYINB),0),  @cQTYREJ0 = isnull(sum(QTYREJ*UMQTYINB),0),  @cQTYMATCH0 = isnull(sum(QTYMATCH*UMQTYINB),0),  @cNETQTYSHPP0 = isnull(sum((QTYSHPPD - QTYREJ)*UMQTYINB),0) from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POLNENUM = @I_vORD and Status = 0   select  @cQTYSHPPD1 = isnull(sum(QTYSHPPD*UMQTYINB),0),  @cQTYINVCD1 = isnull(sum(QTYINVCD*UMQTYINB),0),  @cQTYREJ1 = isnull(sum(QTYREJ*UMQTYINB),0),  @cQTYMATCH1 = isnull(sum(QTYMATCH*UMQTYINB),0),  @cNETQTYSHPP1 = isnull(sum((QTYSHPPD - QTYREJ)*UMQTYINB),0) from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POLNENUM = @I_vORD and Status = 1  if ( @cQTYSHPPD0 + @cQTYINVCD0 + @cQTYSHPPD1 + @cQTYINVCD1 + @cQTYMATCH0 + @cQTYMATCH1 ) > 0  and @I_vPOTYPE <> @POTYPE  begin  select @O_iErrorState = 7771     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@cQTYSHPPD1 + @cQTYSHPPD0) > (@I_vQUANTITY * @cUMQTYINB) and @I_vQUANTITY <> @cQUANTITY  begin  select @O_iErrorState = 9230     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOLNESTA in (5) and (@cQTYSHPPD1 - @cQTYREJ1) > @cQTYMATCH1 and @cQTYMATCH1 <> 0  begin  select @O_iErrorState = 9209     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOLNESTA in (6) and (@cQTYSHPPD0 > 0 or @cQTYSHPPD1 > 0)  begin  select @O_iErrorState = 9211     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOLNESTA in (4,5) and (@cQTYSHPPD0 > 0)   begin  select @O_iErrorState = 9214     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOLNESTA in (4) and @I_vPOTYPE in (2,4)   begin  select @O_iErrorState = 9217     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if @I_vUpdateIfExists = 1 and ( @I_vQTYCANCE <> @cQTYCANCE or @cUNITCOST <> @I_vUNITCOST or @cQUANTITY <> @I_vQUANTITY) and @cPOLNESTA = @I_vPOLNESTA and @cPOLNESTA = 2 begin  select @I_vPOLNESTA = 3 end  if (@I_vUpdateIfExists = 1 and @LineCount > 0) and (@I_vQTYCANCE + @cQTYSHPPD1 = @I_vQUANTITY) and (@I_vQTYCANCE + @cQTYINVCD1 <> @I_vQUANTITY) begin  select @I_vPOLNESTA = 4 end else if (@I_vUpdateIfExists = 1 and @LineCount > 0) and (@I_vQTYCANCE + @cQTYSHPPD1 = @I_vQUANTITY) and (@I_vQTYCANCE + @cQTYINVCD1 = @I_vQUANTITY) and @I_vPOLNESTA = 3 begin  select @I_vPOLNESTA = 5 end  if (@I_vPOTYPE not in (1,2,3,4)) begin  select @O_iErrorState = 377     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (not exists(select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID)) begin  select @O_iErrorState = 252    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists (select 1 from POP10170 (nolock) where PONUMBER = @I_vPONUMBER) begin  select @O_iErrorState = 11967    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vPOTYPE = 3) and (@I_vCostCatID <> '') begin  select @O_iErrorState = 8209     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPOTYPE = 4) and (@I_vCostCatID <> '') begin  select @O_iErrorState = 8210     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPOTYPE = 3) and (@I_vProjNum <> '') begin  select @O_iErrorState = 8274     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPOTYPE = 4) and (@I_vProjNum <> '')  begin  select @O_iErrorState = 8212     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCostCatID <> '')  begin  select @PAsetupkey = PAsetupkey,  @PApounitostfrom = PApounitostfrom  from PA42201 (nolock) where PAsetupkey = 1  if (@PAsetupkey = '')  begin  select @O_iErrorState = 8214    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select  @USEADVTX = USEADVTX,  @TAXSCHID = TAXSCHID  from PA42401 (nolock) where PAsetupkey = 1  end  if (@I_vProjNum <> '') and (@I_vProjNum <> '<NONE>') begin  select  @PAPROJNUMBER = PAPROJNUMBER,   @PAprojname = PAprojname,  @PAProjectType = PAProjectType,  @PAAcctgMethod = PAAcctgMethod,  @PACONTNUMBER = PACONTNUMBER,  @CUSTNMBR = CUSTNMBR  from PA01201 (nolock) where PAPROJNUMBER = @I_vProjNum   if (@PAPROJNUMBER='')  begin  select @O_iErrorState = 8215     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCostCatID <> '') and (@I_vCostCatID <> '<NONE>') begin  if not exists(select 1 from PA01001 (nolock) where PACOSTCATID = @I_vCostCatID)  begin  select @O_iErrorState = 8216     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vProjNum <> '') and (@I_vProjNum <> '<NONE>')    begin   if not exists(select 1 from PA01301 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and PATU = @PATU)   begin  select @O_iErrorState = 8217     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if @I_vProjNum <> '' begin  if @I_vPOTYPE in (1,3)  begin  select  @projectexists = 1,  @PASTAT = PASTAT,  @PAcloseProjcosts = PAcloseProjcosts,  @PACONTNUMBER = PACONTNUMBER,  @I_vCUSTNMBR = @CUSTNMBR,  @PAMCCURNCYID = PAMCCURNCYID  from PA01201 (nolock) where PAPROJNUMBER = @I_vProjNum  end  else  if @I_vPOTYPE in (2,4)  begin  select  @projectexists = 1,  @PASTAT = PASTAT,  @PAcloseProjcosts = PAcloseProjcosts,  @PACONTNUMBER = PACONTNUMBER,  @PAMCCURNCYID = PAMCCURNCYID  from PA01201 (nolock) where PAPROJNUMBER = @I_vProjNum and CUSTNMBR = @I_vCUSTNMBR  end   if @projectexists <> 1  begin  select @O_iErrorState = 7773     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @PASTAT > 1 and @PASTAT < 5  begin  select @O_iErrorState = 7774     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @PAcloseProjcosts = 1  begin  select @O_iErrorState = 7775     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select  @PASTAT = PASTAT,   @PAcloseProjcosts = PAcloseProjcosts,   @PACONTNUMBER = PACONTNUMBER   from PA01101 (nolock) where PACONTNUMBER = @PACONTNUMBER   if @PASTAT > 1 and @PASTAT < 5  begin  select @O_iErrorState = 7776     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @PAcloseProjcosts = 1  begin  select @O_iErrorState = 8104     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if exists(select 1 from PA00501 (nolock) where CUSTNMBR = @I_vCUSTNMBR and PAcloseProjcosts = 1)  begin  select @O_iErrorState = 8105     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCostCatID <> '') begin  select  @costcatexists = 1,  @PATU = PATU,  @PAinactive = PAinactive  from PA01001 (nolock) where PACOSTCATID = @I_vCostCatID   if @costcatexists <> 1  begin  select @O_iErrorState = 7779     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if @PATU <> 4  begin  select @O_iErrorState = 7780     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if @PAinactive = 1  begin  select @O_iErrorState = 7781     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@projectexists = 1) begin  if ((@I_vProjNum <> @PANONE) AND (@I_vCostCatID <> @PANONE))  begin  select  @PAPROJNUMBER = PAPROJNUMBER,  @PAIV_Item_Checkbox = PAIV_Item_Checkbox,  @Purchase_Tax_Options = PAForecastPTaxOptions,  @Purchase_Item_Tax_Schedu = PAForecastCTaxSchedID,  @DECPLQTY = (DECPLQTY),  @DECPLCUR = ((DECPLCUR-1) + 7),  @ODECPLCU = (DECPLCUR-1)  from PA01301 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and PATU = @PATU   select @PAINCPRCHTXPRJCST = PAINCPRCHTXPRJCST from PA41701 (nolock)   if (@PAPROJNUMBER <> '')  begin  if (@PAIV_Item_Checkbox = 0)  begin  if exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR)  begin  select @O_iErrorState = 8700     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ITEMNMBR = '')  begin  select @UOMSCHDL = '',  @UOFM = 'Each'  end  end  else  begin  if not exists(select 1 from PA01303 where PAPROJNUMBER = @I_vProjNum  and PACOSTCATID = @I_vCostCatID and ITEMNMBR = @I_vITEMNMBR)  begin  select @O_iErrorState = 11480     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select  @ITEMNMBR = ITEMNMBR,  @Purchase_Tax_Options = Purchase_Tax_Options,  @Purchase_Item_Tax_Schedu = Purchase_Item_Tax_Schedu  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   set @PAPROJNUMBER = ''   select top 1 @PAPROJNUMBER = PAPROJNUMBER,  @PALineItemSeq = PALineItemSeq  from PA01303 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and ITEMNMBR = @I_vITEMNMBR   if (@PAPROJNUMBER = '')  begin  select @UOMSCHDL = '',  @UOFM = 'Each',  @PALineItemSeq = 0  end  end  end  end  else if ((@I_vProjNum = @PANONE) AND (@I_vCostCatID <> @PANONE))  begin  select @PACOSTCATID = PACOSTCATID,  @Purchase_Tax_Options = PAPurchase_Tax_Options,  @Purchase_Item_Tax_Schedu = PAcostaxscheduleid  from PA01001 (nolock) where PACOSTCATID = @I_vCostCatID   select  @UOMSCHDL = '',  @UOFM = 'Each'  from PA01001 (nolock) where PACOSTCATID = @I_vCostCatID  end  else if ((@I_vProjNum = @PANONE) AND (@I_vCostCatID = @PANONE))  begin  select  @ITEMNMBR = ITEMNMBR,  @UOMSCHDL = UOMSCHDL,  @UOFM = PRCHSUOM,  @Purchase_Tax_Options = Purchase_Tax_Options,  @Purchase_Item_Tax_Schedu = Purchase_Item_Tax_Schedu  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if (@ITEMNMBR = '')  begin  select  @UOMSCHDL = '',  @UOFM = 'Each',  @Purchase_Item_Tax_Schedu = NONIVSCH  from PA42501 (nolock)     end  end   select  @I_vPurchase_IV_Item_Taxable =  case  when (@I_vPurchase_IV_Item_Taxable > 0)   then @I_vPurchase_IV_Item_Taxable  when (@USEADVTX = 0)   then @Purchase_Tax_Options  else 3  end   select  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu <> ''  then @I_vPurchase_Item_Tax_Schedu  when (@Purchase_Tax_Options = 1) and (@USEADVTX = 0)   then @Purchase_Item_Tax_Schedu   when (@Purchase_Tax_Options = 2) and (@USEADVTX = 0)   then ''      when (@Purchase_Tax_Options = 3) and (@USEADVTX = 0)   then @TAXSCHID     when (@TAXSCHID <> '')   then @TAXSCHID  else @COPTXSCH  end end  if (@projectexists = 1) begin  select  @PAIV_Item_Checkbox = PAIV_Item_Checkbox  from PA01301 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and PATU = @PATU end  if (@I_vUNITCOST is null) and (@projectexists = 1) begin  select @I_vUNITCOST = 0  if (@projectexists = 1)  begin  if ((@I_vProjNum <> @PANONE) or (@I_vCostCatID <> @PANONE))  begin  if (@PApounitostfrom = 2)     begin  if ((@I_vProjNum <> @PANONE) and (@I_vCostCatID <> @PANONE))  begin  if (@PAIV_Item_Checkbox = 0)  begin  select  @I_vUNITCOST = PAFUnitCost,  @PABase_Unit_Cost = PAFUnitCost  from PA01301 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and PATU = @PATU  end  else  begin  set @PAPROJNUMBER = ''   select top 1 @PAPROJNUMBER = PAPROJNUMBER,  @I_vUNITCOST = PAFUnitCost,   @PABase_Unit_Cost = PAFUnitCost,  @PALineItemSeq = PALineItemSeq  from PA01303 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and   ITEMNMBR = @I_vITEMNMBR   if (@PAPROJNUMBER = '')  begin  select  @I_vUNITCOST = PAFUnitCost,  @PABase_Unit_Cost = PAFUnitCost,  @PALineItemSeq = 0   from PA01301 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and PATU = @PATU  end  end  end  else if ((@I_vProjNum = @PANONE) and (@I_vCostCatID <> @PANONE))  begin  select  @I_vUNITCOST = PAUNITCOST,  @PABase_Unit_Cost = PAUNITCOST  from PA01001 (nolock) where PACOSTCATID = @I_vCostCatID  end  end  else if (@PApounitostfrom = 3)     begin  select  @I_vUNITCOST = PAUNITCOST,  @PABase_Unit_Cost = PAUNITCOST  from PA01001 (nolock) where PACOSTCATID = @I_vCostCatID  end  end  end   if (@I_vUNITCOST is null)  begin  select @I_vUNITCOST = 0, @PABase_Unit_Cost = 0  end end else begin  select  @PABase_Unit_Cost =  case  when @I_vUNITCOST is null  then 0   else @I_vUNITCOST  end,  @PABase_Qty = @I_vQUANTITY     end  if (@UOMSCHDL = '') begin  select  @PABase_Qty = @I_vQUANTITY,          @UMQTYINB = 1 end else begin  if (@PAIV_Item_Checkbox = 1)  begin  select @UMQTYINB = b.EQUOMQTY,@QTYBSUOM = b.QTYBSUOM from PA40101 a (nolock) join PA40102 b (nolock) on a.UOMSCHDL = b.UOMSCHDL  where a.UOMSCHDL = @UOMSCHDL and a.BASEUOFM = b.EQUIVUOM and UOFM = @I_vUOFM  end  else  begin  select @UMQTYINB = b.EQUOMQTY,@QTYBSUOM = b.QTYBSUOM from IV40201 a (nolock) join IV40202 b (nolock) on a.UOMSCHDL = b.UOMSCHDL  where a.UOMSCHDL = @UOMSCHDL and a.BASEUOFM = b.EQUIVUOM and UOFM = @I_vUOFM  end   if (@UMQTYINB > 0)  begin  select  @PABase_Qty = (@I_vQUANTITY * @UMQTYINB),       @PABase_Unit_Cost = (@I_vUNITCOST / @UMQTYINB)  end  else  begin  select  @PABase_Qty = @I_vQUANTITY,         @PABase_Unit_Cost = @I_vUNITCOST,  @UMQTYINB = 1  end end  if (@I_vNONINVEN = 0) begin  select  @I_vLOCNCODE =  case  when @I_vLOCNCODE = ''  then LOCNCODE  else @I_vLOCNCODE  end,  @ITMTRKOP = ITMTRKOP,  @ITEMDESC = ITEMDESC,  @INVINDX =  case  when @I_vPOTYPE in(1,3)  then IVIVINDX  else DPSHPIDX  end,  @ITEMTYPE = ITEMTYPE,  @INACTIVE = INACTIVE,  @VCTNMTHD = VCTNMTHD,  @DECPLQTY = ((DECPLQTY-1) + 1),  @UOMSCHDL = UOMSCHDL,  @I_vPurchase_IV_Item_Taxable =  case  when @I_vPurchase_IV_Item_Taxable is null or @I_vPurchase_IV_Item_Taxable = 0  then Purchase_Tax_Options  else @I_vPurchase_IV_Item_Taxable  end,  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu is null or @I_vPurchase_Item_Tax_Schedu = ''   then Purchase_Item_Tax_Schedu  else @I_vPurchase_Item_Tax_Schedu  end  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR end else begin   select @Purchase_Non_IV_Item_Taxable = Purchase_Non_IV_Taxable from POP40100   select  @UOFM = 'Each',  @ITMTRKOP = 1,  @ITEMDESC = '',  @UNITCOST = 0,  @INVINDX  = 0,  @ITEMTYPE = 0,  @INACTIVE = 0,  @VCTNMTHD = 0,  @UMQTYINB = 1,  @I_vPurchase_IV_Item_Taxable =  case   when @Purchase_Non_IV_Item_Taxable = 0   then 2  when (@I_vPurchase_IV_Item_Taxable is null and @Purchase_Non_IV_Item_Taxable > 0)  then @Purchase_Non_IV_Item_Taxable  else @I_vPurchase_IV_Item_Taxable  end,  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu is null  then ''  else @I_vPurchase_Item_Tax_Schedu  end   select  @DECPLQTY = DECPLQTY,  @DECPLCUR = DECPLCUR,  @ODECPLCU = (DECPLCUR - 1)  from POP40100 (nolock) where INDEX1 = 1   if (round(@I_vQUANTITY, @DECPLQTY - 1) <> (@I_vQUANTITY))  begin  select @O_iErrorState = 8504     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPOTYPE in (2,4))  select @INVINDX = ACTINDX from SY01100 (nolock) where SERIES = 5 and SEQNUMBR = 1100    end  select @AllowReverseTaxes = abs(sign(isnull(Company_Options,0) & power(2,20))) from DYNAMICS..SY01500 (nolock) where INTERID = db_name() if ((@I_vTAXAMNT < 0) and (@AllowReverseTaxes = 0)) begin  select @O_iErrorState = 8698     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select top 1 @LOCNCODE = LOCNCODE from IV40700 (nolock) where LOCNCODE <> ''  if (@I_vLOCNCODE = '') begin  if (@LOCNCODE <> '')  begin   if (@projectexists = 0) or ((@projectexists = 1) and (@I_vNONINVEN = 0))     begin  select @O_iErrorState = 254     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end else begin  if (not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE))  begin  select @O_iErrorState = 256     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vNONINVEN = 0) and (not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)))  begin  select @O_iErrorState = 261     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @SITEINACTIVE = INACTIVE from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE select @ITEMSITEINACTIVE = INACTIVE from IV00102 (nolock) where (ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)  if (@I_vLOCNCODE <> '' and @SITEINACTIVE = 1) begin  select @O_iErrorState = 11817     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end if (@I_vLOCNCODE <> '' and @I_vITEMNMBR <> '' and @ITEMSITEINACTIVE = 1) begin  select @O_iErrorState = 11818     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(CURNCYID, '') from PM00200 (nolock) where VENDORID  = @I_vVENDORID   if (@I_vCURNCYID <> '')  begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end  else  begin  select @I_vCURNCYID = isnull(FUNLCURR, ''),  @CURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock)  end end else begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  if ((@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1 end  if ((@CURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 6620     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@ITEMTYPE in (2,3)) begin  select @O_iErrorState = 9338     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@INACTIVE = 1) and (@LineCount = 0) begin  select @O_iErrorState = 11751     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vNONINVEN = 0) begin  if (@ISMCTRX = 1)  begin  select @DECPLCUR = DECPLCUR - 1,  @ODECPLCU = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and CURNCYID = @I_vCURNCYID   select @ITEMFUNCTDEC = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and CURNCYID = @FUNLCURR  end  else  begin  select top 1 @DECPLCUR = DECPLCUR - 1,  @ODECPLCU = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and (CURNCYID = '' or CURNCYID = @I_vCURNCYID)   select top 1 @ITEMFUNCTDEC = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and (CURNCYID = '' or CURNCYID = @FUNLCURR)  end end else begin  select @ITEMFUNCTDEC = DECPLCUR - 1,@ODECPLCU = DECPLCUR - 1  from POP40600 (nolock) where CURNCYID = @FUNLCURR end  select @FUNDECPLCUR = DECPLCUR - 1 from MC40000 a (nolock), DYNAMICS..MC40200 b (nolock)  where a.FUNCRIDX = b.CURRNIDX and a.FUNLCURR = b.CURNCYID and a.FUNLCURR = @FUNLCURR  if (@ISMCTRX = 1) begin  select @EDITDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock)  where CURNCYID = @I_vCURNCYID end else begin  select @EDITDECPLCUR = @FUNDECPLCUR end  if (@I_vNONINVEN = 1) begin   if (@ISMCREG = 1)  begin  if exists(select 1 from POP40600 (nolock) where CURNCYID = @I_vCURNCYID)  begin  select @DECPLCUR = DECPLCUR - 1 from POP40600 (nolock) where CURNCYID = @I_vCURNCYID  end  end  else  begin  select @DECPLCUR = DECPLCUR - 1,  @ITEMFUNCTDEC = DECPLCUR - 1,  @ODECPLCU = DECPLCUR - 1  from POP40100 (nolock) where INDEX1 = 1  end end  if (round(@I_vUNITCOST, @DECPLCUR) <> (@I_vUNITCOST)) begin  select @O_iErrorState = 6621     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR) and (@I_vNONINVEN = 0)) begin  select @O_iErrorState = 304     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vFREEONBOARD is null) or (@I_vFREEONBOARD = 0)) begin  if (@I_vNONINVEN = 0)  begin  select @FREEONBOARD = FREEONBOARD from IV00103 (nolock) where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR and VNDITNUM = @I_vVNDITNUM  end  else  begin  select @FREEONBOARD = 1  end end else begin  select @FREEONBOARD = @I_vFREEONBOARD end  if (@FREEONBOARD not in (1,2,3)) begin  select @O_iErrorState = 387    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vREQDATE = '') begin  select @I_vREQDATE = convert(varchar(12),getdate()) end  if (@I_vNONINVEN = 0) begin  select @PLANNINGLEADTIME = PLANNINGLEADTIME from IV00103 (nolock) where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR end else begin  select @PLANNINGLEADTIME = 0 end  if (@I_vREQDATE < @I_vRELEASEBYDATE) begin  select @O_iErrorState = 393     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCMMTTEXT <> @cCMMTTEXT) and (@I_vCMMTTEXT <> '') and ((@I_vCOMMENT_1 <> '') or (@I_vCOMMENT_2 <> '') or (@I_vCOMMENT_3 <> '') or (@I_vCOMMENT_4 <> ''))) begin  select @O_iErrorState = 2295    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPRMDATE = '') begin  select @I_vPRMDATE = convert(varchar(12),getdate()) end  if (@I_vPRMSHPDTE = '') begin  select @I_vPRMSHPDTE = convert(varchar(12),getdate()) end  if (@I_vNONINVEN = 0) begin  select @PRCHSUOM = PRCHSUOM from IV00103 (nolock) where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR and VNDITNUM = @I_vVNDITNUM   if (@PRCHSUOM = '')  begin  select @PRCHSUOM = PRCHSUOM from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  end   if (@PRCHSUOM <> '')  begin  select @UOFM = @PRCHSUOM  end end  if (@I_vUOFM <> '') begin  select @UOFM = @I_vUOFM end  if ((@I_vNONINVEN = 0) and (@LOCNCODE <> '')) begin  if (not exists(select 1 from IV40202 (nolock) where UOFM = @UOFM and UOMSCHDL = @UOMSCHDL))  begin  select @O_iErrorState = 4599    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@UOFM = '') begin  select @O_iErrorState = 1600    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vNONINVEN = 0) begin  select @UMQTYINB = QTYBSUOM from IV00106 (nolock) where ITEMNMBR = @I_vITEMNMBR and UOFM = @UOFM   if (@UMQTYINB = 0)  begin  select @O_iErrorState = 321    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vVNDITDSC <> '') begin  select @VNDITDSC = @I_vVNDITDSC end  if (@I_vITEMDESC <> '') begin  select @ITEMDESC = @I_vITEMDESC end  if (@I_vProjNum <> '') begin   select  @PAOVERIDESEGTMWIP = isnull(PAOVERIDESEGTMWIP,0),  @PAOVERIDESEGTMCOGS = isnull(PAOVERIDESEGTMCOGS,0)  from PA41301 (nolock) where PAPROJNUMBER = @I_vProjNum end  if (@I_vInventoryAccount <> '') begin  set @INVINDX = isnull((select ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vInventoryAccount),0)   if (@INVINDX = 0)  begin  select @O_iErrorState = 442     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vIVIVINDX <> 0)  begin  select @INVINDX = ACTINDX from GL00105 (nolock) where ACTINDX = @I_vIVIVINDX   if (@INVINDX = 0)  begin  select @O_iErrorState = 443     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if (@INVINDX = 0)  begin  if (@I_vPOTYPE in (1,3))  begin  if (@I_vNONINVEN = 1) and (@I_vProjNum = '') and (@I_vCostCatID = '')     begin  select @INVINDX = PMPRCHIX from PM00200 (nolock) where VENDORID = @I_vVENDORID  end  else  begin  if (@PAAcctgMethod) = 1 and (@projectexists = 1)   begin  select @INVINDX = isnull(PAACTINDX,0) from PA43001 (nolock) where PArecordid = @I_vProjNum and PAcosttrxid = @I_vCostCatID and PAsfid = 29 and PAaccttype = 2   begin  if @INVINDX = 0  begin  select @INVINDX = isnull(PAACTINDX,0) from PA43001 (nolock) where PArecordid = @I_vCostCatID and PAsfid = 26 and PAaccttype = 2  end  end  end  else  begin  if (@projectexists = 1)  begin  select @INVINDX = isnull(PAACTINDX,0) from PA43001 (nolock) where PArecordid = @I_vProjNum and PAcosttrxid = @I_vCostCatID and PAsfid = 29 and PAaccttype = 1  begin  if @INVINDX = 0  begin  select @INVINDX = isnull(PAACTINDX,0) from PA43001 (nolock) where PArecordid = @I_vCostCatID and PAsfid = 26 and PAaccttype = 1  end  end  end  end  end   if (@PAOVERIDESEGTMWIP = 1)  begin  select @MAXSEG = max(SGMTNUMB) from SY00300 (nolock)   if (@PAOVERIDESEGTMWIP <> 0)   begin  select @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = ''   select @ACCNT_STRING = ACTNUMST from GL00105 (nolock) where ACTINDX = @INVINDX   declare PASegmentOveride INSENSITIVE cursor for select  isnull(SGMTNUMB,0),  isnull(SGMTNAME,''),  isnull(SGMNTID,'')  from PA41302 (nolock) WHERE PAPROJNUMBER = @I_vProjNum  open PASegmentOveride  select @iCursorError = @@cursor_rows   if (@iCursorError > 0)  begin  fetch next from PASegmentOveride into  @SGMTNUMB,  @SGMTNAME,  @SGMNTID   while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 20160   break  end  select @SGMNTID = substring(@SGMNTID,1,(select LOFSGMNT from SY00300 (nolock) where SGMTNUMB = @SGMTNUMB))   if (@SGMNTID <> '')  begin  if (@SGMTNUMB < @MAXSEG)  begin  select @LOFSGMNT = sum(LOFSGMNT) + (@MAXSEG - @SGMTNUMB) from SY00300 (nolock) where SGMTNUMB >= @SGMTNUMB  select @LOFSGMNTEND = sum(LOFSGMNT) + (@MAXSEG - @SGMTNUMB) from SY00300 (nolock) where SGMTNUMB > @SGMTNUMB  end  else  begin  select @LOFSGMNT = sum(LOFSGMNT) from SY00300 (nolock) where SGMTNUMB = @SGMTNUMB  end   select @LOFSGMNTALL = sum(LOFSGMNT) + (@MAXSEG - 1) from SY00300 (nolock)   if (@SGMTNUMB = @MAXSEG)  begin   select @NEW_ACCNT_STRING = substring(@ACCNT_STRING,1,@LOFSGMNTALL - @LOFSGMNT) + @SGMNTID  end  else  begin   select @NEW_ACCNT_STRING = substring(@ACCNT_STRING, 1, @LOFSGMNTALL - @LOFSGMNT) + @SGMNTID +  substring(@ACCNT_STRING, @LOFSGMNTALL - @LOFSGMNTEND + 1, @LOFSGMNTALL)  end   select @ACCNT_STRING = @NEW_ACCNT_STRING  end   fetch next from PASegmentOveride into  @SGMTNUMB,  @SGMTNAME,  @SGMNTID  end  end  deallocate PASegmentOveride   select @INVINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @ACCNT_STRING   if (@INVINDX = 0)  begin  select @O_iErrorState = 20158   return @O_iErrorState  end  else  begin  select @ACTINDX=isnull(ACTINDX,0),@ACTIVE=isnull(ACTIVE,0) from GL00100 (nolock) where ACTINDX = @INVINDX   if ((@ACTINDX=0) or (@ACTIVE=0))  begin  select @O_iErrorState = 20159   return @O_iErrorState  end  else  begin  select @O_iINDEX = @INVINDX  end  end  end  end  if (@INVINDX = 0)  begin  select @INVINDX = ACTINDX from SY01100 (nolock) where SERIES = 5 and SEQNUMBR = 100  end  end  else  begin  select @INVINDX = ACTINDX from SY01100 (nolock) where SERIES = 5 and SEQNUMBR = 1100  end  end  end end  if ((@I_vCostCatID <> @PANONE) and (@projectexists = 1)) begin  if (@PAProjectType = 1) or (@I_vProjNum = @PANONE)  begin  if ((@PAIV_Item_Checkbox = 0) or (@I_vProjNum = @PANONE) or ((@PAIV_Item_Checkbox = 0) and (@I_vPOTYPE = 2)))  begin  if (@I_vProjNum <> @PANONE)  begin  if (@PAAcctgMethod = 1)  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',  2,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACogs_Idx output,    @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8218    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  if (@PAAcctgMethod = 2)  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',  1,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACGBWIPIDX output,  @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8219    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@PACGBWIPIDX = 0)  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',  2,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACogs_Idx output,  @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8220    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end  end  if (@PACogs_Idx =0)  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',  2,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACogs_Idx output,  @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8221    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end   else  begin  if (@PACogs_Idx =0) and (@I_vPOTYPE = 2)  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',  2,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACogs_Idx output,  @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8222    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@PACGBWIPIDX = 0) and (@I_vPOTYPE = 2)  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',   1,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACGBWIPIDX output,  @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8223    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end  end  else  begin  exec @iStatus = taPAAuxAcctsGetIdx  @I_vProjNum,  @I_vCostCatID,  @I_vVENDORID,  4,  'VI',  30,  @I_vCUSTNMBR ,  @PACONTNUMBER,  @PACGBWIPIDX output,  @O_oErrorState  output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if ((@O_oErrorState = 2055) or (@iStatus = 2055)) and (@PAIV_Item_Checkbox = 1)  select @O_oErrorState = 0,@iStatus = 0   if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 8224    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  select @MAXSEG = max(SGMTNUMB) from SY00300 (nolock) select @Location_Segment = Location_Segment from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE select @ACSGFLOC = ACSGFLOC from IV40100 (nolock) where SETUPKEY = 1  if ((@INVINDX <> 0) and (@Location_Segment <> '') and (@ACSGFLOC <> 0)) begin  select @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = ''   select @ACCNT_STRING = ACTNUMST from GL00105 (nolock) where ACTINDX = @INVINDX   if (@ACSGFLOC < @MAXSEG)  begin  select @LOFSGMNT = sum(LOFSGMNT) + (@MAXSEG - @ACSGFLOC) from SY00300 (nolock) where SGMTNUMB >= @ACSGFLOC  select @LOFSGMNTEND = sum(LOFSGMNT) + (@MAXSEG - @ACSGFLOC) from SY00300 (nolock) where SGMTNUMB > @ACSGFLOC  end  else  begin  select @LOFSGMNT = sum(LOFSGMNT) from SY00300 (nolock) where SGMTNUMB = @ACSGFLOC  end   select @LOFSGMNTALL = sum(LOFSGMNT) + (@MAXSEG - 1) from SY00300 (nolock)   if (@ACSGFLOC = @MAXSEG)  begin  select @NEW_ACCNT_STRING = substring(@ACCNT_STRING,1,@LOFSGMNTALL - @LOFSGMNT) + rtrim(ltrim(@Location_Segment))  end  else  begin  select @NEW_ACCNT_STRING = substring(@ACCNT_STRING, 1, @LOFSGMNTALL - @LOFSGMNT) + rtrim(ltrim(@Location_Segment)) +  substring(@ACCNT_STRING, @LOFSGMNTALL - @LOFSGMNTEND + 1, @LOFSGMNTALL)  end   select @ACTINDX = isnull(ACTINDX, 0) from GL00105 (nolock) where ACTNUMST = @NEW_ACCNT_STRING   if (@ACTINDX <> 0)  select @INVINDX = @ACTINDX end  if (@I_vUNITCOST is not null)  begin  select @UNITCOST = @I_vUNITCOST end  if (@UNITCOST < 0) begin  select @O_iErrorState = 395     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUNITCOST is null) begin  select @I_vUNITCOST = @UNITCOST end  if ((@I_vNONINVEN <> 0) and (@I_vNONINVEN <> 1)) begin  select @O_iErrorState = 398     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vQUANTITY < 0) begin  select @O_iErrorState = 253     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vQTYCANCE < 0) begin  select @O_iErrorState = 315     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vQTYCANCE > @I_vQUANTITY) begin  select @O_iErrorState = 323     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vORD < 0) begin  select @O_iErrorState = 8136     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vQUANTITY = @I_vQTYCANCE) and (@I_vQUANTITY > 0) and (@I_vPOLNESTA = 6)) begin  select @CANCELLED = 1 end   if ((@I_vQTYCANCE * @UMQTYINB) > (@I_vQUANTITY * @UMQTYINB)) begin  select @O_iErrorState = 8225     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @I_vLineNumber <> 0   select @QTYUNCMTBASE = (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) - (@Rec_QTYSHPPD - @Rec_QTYREJ))  if @QTYUNCMTBASE < 0 select @QTYUNCMTBASE = 0  if ((@I_vPOLNESTA not in (1,2))) and (@I_vUpdateIfExists = 0 or @LineCount = 0) and (@CANCELLED = 0) begin  select @O_iErrorState = 1333     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPOLNESTA < 1) or (@I_vPOLNESTA > 6))  begin  select @O_iErrorState = 9229     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPOLNESTA = 2) begin  select @I_vRELEASEBYDATE = convert(varchar(12),getdate()) end  if ((@I_vQUANTITY = @I_vQTYCANCE) and (@I_vQUANTITY > 0)) begin  select @I_vPOLNESTA = 6 end  if (@projectexists = 1) begin  select @PRICELVL = PRICELVL  from PA01303 (nolock) where PAPROJNUMBER = @I_vProjNum and PACOSTCATID = @I_vCostCatID and  ITEMNMBR = @I_vITEMNMBR and PALineItemSeq = @PALineItemSeq   if (@I_vDOCDATE is null)  begin  select @O_iErrorState = 8701     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   exec @iStatus = glCalculateGLPeriod  @I_sSeries = 7,  @I_cOrigin = 'PA Receivings Trx Entry',  @I_dDate = @I_vDOCDATE,  @I_dUserDate = @UserDate,  @O_sPeriodID = @PABBeginDate_Period output,  @O_tClosed = @Closed output,  @O_sYear = @PABBeginDate_YEAR output,  @O_iOUTErr = @iCustomGLPeriodErr output,  @O_iErrorState = @O_glCalculateGLPeriodErrorState1 output  select @iError = @@error  if ((@iStatus <> 0) or (@O_glCalculateGLPeriodErrorState1 <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@O_glCalculateGLPeriodErrorState1))  select @O_iErrorState = 20154    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = glCalculateGLPeriod  @I_sSeries = 7,  @I_cOrigin = 'PA Receivings Trx Entry',  @I_dDate = @I_vDOCDATE,  @I_dUserDate = @UserDate,  @O_sPeriodID = @PABEndDate_Period output,  @O_tClosed = @Closed output,  @O_sYear = @PABEndDate_YEAR output,  @O_iOUTErr = @iCustomGLPeriodErr output,  @O_iErrorState = @O_glCalculateGLPeriodErrorState2 output  select @iError = @@error  if ((@iStatus <> 0) or (@O_glCalculateGLPeriodErrorState2 <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@O_glCalculateGLPeriodErrorState2))  select @O_iErrorState = 20155    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select  @PAFBeginDate_Period = @PABBeginDate_Period,  @PAFBeginDate_YEAR = @PABBeginDate_YEAR,  @PAFEndDate_Period = @PABEndDate_Period,  @PAFEndDate_YEAR = @PABEndDate_YEAR,  @i_startyearupdate = @PABBeginDate_YEAR,  @i_endyearupdate = @PABEndDate_YEAR,  @i_baselinestartyearupdate = @PABEndDate_YEAR,  @i_forecaststartyearupdate = @PABEndDate_YEAR   select @NUMOFPER = NUMOFPER from SY40101 (nolock) where YEAR1 = @PABEndDate_YEAR   if (@PABEndDate_YEAR - @PABBeginDate_YEAR) = 1  begin  set @l_base_ctr = (@NUMOFPER - @PABBeginDate_Period) + (@PABEndDate_Period) + 1  end  else if (@PABEndDate_YEAR = @PABBeginDate_YEAR)  begin  set @l_base_ctr = (@PABEndDate_Period - @PABBeginDate_Period) + 1  end  else  begin  set @l_base_ctr = (((@PABEndDate_YEAR - @PABBeginDate_YEAR) * @NUMOFPER) + (@NUMOFPER - @PABBeginDate_Period) + (@NUMOFPER - @PABBeginDate_Period))  end   if (@PABEndDate_YEAR <> @PABBeginDate_YEAR)  begin  set @l_fore_ctr = (@NUMOFPER - @PAFBeginDate_Period) + (@PAFEndDate_Period) + 1  end  else if (@PABEndDate_YEAR = @PABBeginDate_YEAR)  begin  set @l_fore_ctr = (@PAFEndDate_Period - @PAFBeginDate_Period) + 1  end  else  begin  set @l_fore_ctr = (((@PAFEndDate_YEAR - @PAFBeginDate_YEAR - 1) * @NUMOFPER) + (@NUMOFPER - @PAFBeginDate_Period) + (@NUMOFPER-@PABBeginDate_Period))  end   if (@costcatexists = 1  and @CUSTNMBR <> '' and @I_vNONINVEN = 0)  begin  if (@PAIV_Item_Checkbox = 1)  begin  exec @iStatus = PA_IVCreate_Periodic_Budget_Records  @I_projectnumber = @I_vProjNum,  @I_transactionusage = @PATU,  @I_costcategory = @I_vCostCatID,  @I_contractnumber = @PACONTNUMBER,  @I_customernumber = @I_vCUSTNMBR,  @I_sourcefileID = 0,  @I_basestartdate = @PABBeginDate,  @I_baseenddate = @PABEndDate,  @I_forestartdate = @PAFBeginDate,  @I_foreenddate = @PAFEndDate,  @I_actualstartdate = @I_vDOCDATE,  @I_actualenddate = '',  @I_userdate = @UserDate,  @I_deciqty = @DECPLQTY,  @I_functionaldeciglobals = @FUNDECPLCUR,  @I_create = 0,  @I_change_baseline = 1,  @I_change_forecast = 1,  @i_firstdate = '',  @i_lastdate = '',  @i_year_start = 0,  @i_year_end = 0,  @i_startyearupdate = @i_startyearupdate,  @i_endyearupdate = @i_endyearupdate,  @i_baselinestartyearupdate = @i_baselinestartyearupdate,  @i_baseline_period = @PABEndDate_Period,  @i_forecaststartyearupdate = @i_forecaststartyearupdate,  @i_forecast_period = @PAFEndDate_Period,  @l_base_ctr = @l_base_ctr,  @l_fore_ctr = @l_base_ctr,  @I_err = @PA_IVCreate_Periodic_Budget_RecordsErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@PA_IVCreate_Periodic_Budget_RecordsErrorState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@PA_IVCreate_Periodic_Budget_RecordsErrorState))  select @O_iErrorState = 20156    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  execute @iStatus = PA_Create_Periodic_Budget_Records  @I_projectnumber = @I_vProjNum,  @I_transactionusage = @PATU,  @I_costcategory = @I_vCostCatID,  @I_contractnumber = @PACONTNUMBER,  @I_customernumber = @I_vCUSTNMBR,  @I_sourcefileID = 0,  @I_basestartdate = @PABBeginDate,  @I_baseenddate = @PABEndDate,  @I_forestartdate = @PAFBeginDate,  @I_foreenddate = @PAFEndDate,  @I_actualstartdate = @I_vDOCDATE,  @I_actualenddate = '',  @I_userdate = @UserDate,  @I_deciqty = @DECPLQTY,  @I_functionaldeciglobals = @FUNDECPLCUR,  @I_create = 0,  @I_change_baseline = 1,  @I_change_forecast = 1,  @i_firstdate = '',  @i_lastdate = '',  @i_year_start = 0,  @i_year_end = 0,  @i_startyearupdate = @i_startyearupdate,  @i_endyearupdate = @i_endyearupdate,  @i_baselinestartyearupdate = @i_baselinestartyearupdate,  @i_baseline_period = @PABEndDate_Period,  @i_forecaststartyearupdate = @i_forecaststartyearupdate,  @i_forecast_period = @PAFEndDate_Period,  @l_base_ctr = @l_base_ctr,  @l_fore_ctr = @l_base_ctr,  @I_err = @PA_Create_Periodic_Budget_RecordsErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@PA_Create_Periodic_Budget_RecordsErrorState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@PA_Create_Periodic_Budget_RecordsErrorState))  select @O_iErrorState = 20157    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  end  if (@I_vPurchase_IV_Item_Taxable not in (1,2,3)) begin  select @O_iErrorState = 880     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end else begin  if (@I_vPurchase_IV_Item_Taxable <> 1)  begin  select @I_vPurchase_Item_Tax_Schedu = ''  end end  if (@I_vPurchase_Item_Tax_Schedu <> '') begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Item_Tax_Schedu))  begin  select @O_iErrorState = 881     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vPurchase_Site_Tax_Schedu <> '') begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Site_Tax_Schedu))  begin  select @O_iErrorState = 882     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vPOTYPE in (2,4))  begin  if (@I_vCUSTNMBR = '')  begin  select @O_iErrorState = 6333     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if not exists(select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR)  begin  select @O_iErrorState = 6334     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vSHIPMTHD is null) and (@I_vPOTYPE in (1,3))) begin  select @I_vSHIPMTHD = SHIPMTHD from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@I_vSHIPMTHD is null)  begin  select @O_iErrorState = 6335     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vLanded_Cost_Group_ID is null) begin  select @I_vLanded_Cost_Group_ID =  Landed_Cost_Group_ID from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE  if @I_vLanded_Cost_Group_ID is null select @I_vLanded_Cost_Group_ID = '' end else begin  if @I_vLanded_Cost_Group_ID <> '' and not exists(select 1 from IV41101 where Landed_Cost_Group_ID = @I_vLanded_Cost_Group_ID)  begin  select @O_iErrorState = 9231     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vSHIPMTHD is null) and (@I_vPOTYPE in (2,4)))  begin  select @I_vSHIPMTHD = SHIPMTHD from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@I_vSHIPMTHD is null)  begin  select @O_iErrorState = 6336     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vSHIPMTHD <> '') begin  select @SHIPTYPE = SHIPTYPE, @POLNEARY_9 = NOTEINDX from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD  if (@SHIPTYPE not in(0,1))  begin  select @O_iErrorState = 989     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vORD = 0) begin  select @I_vORD = @SEQNUMBR + isnull(max(ORD),0) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER  end else begin  if @I_vUpdateIfExists = 0 and exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ORD = @I_vORD)  begin  select @O_iErrorState = 3806    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCCode is not null) and (@I_vCCode <> '') begin  if (not exists(select 1 from VAT10001 (nolock) where CCode = @I_vCCode))  begin  select @O_iErrorState = 6337     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vPOTYPE in (1,3))  begin  if ((@I_vADRSCODE is null) and (@SHIPTYPE = 1))   begin  select @I_vADRSCODE = @I_vLOCNCODE  end  else  if ((@I_vADRSCODE is null) and (@SHIPTYPE = 0))   begin  select @I_vADRSCODE = isnull(VADCDPAD,'') from PM00200 (nolock) where VENDORID = @I_vVENDORID  end  else  if ((@I_vADRSCODE is null) and (@SHIPTYPE = 3))   begin  select @I_vADRSCODE = ''  end   if (@I_vPurchase_Site_Tax_Schedu is null)    begin  if (@SHIPTYPE = 1)   begin  select @I_vPurchase_Site_Tax_Schedu = PCTAXSCH from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE  end  else  if (@SHIPTYPE = 0) and @I_vADRSCODE<> ''   begin  select @I_vPurchase_Site_Tax_Schedu = TAXSCHID from PM00300 (nolock) where VENDORID = @I_vVENDORID and ADRSCODE = @I_vADRSCODE  end  else  begin  select @I_vPurchase_Site_Tax_Schedu = ''  end  end end else if (@I_vPOTYPE in (2,4)) begin  if (@I_vPurchase_Site_Tax_Schedu is null)    begin  if (@SHIPTYPE = 1)   begin  select @I_vPurchase_Site_Tax_Schedu = TAXSCHID from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and LOCNCODE = @I_vLOCNCODE  end  if (@SHIPTYPE = 0)   begin  select @I_vPurchase_Site_Tax_Schedu = TAXSCHID from PM00200 (nolock) where VENDORID = @I_vVENDORID  end  else  begin  select @I_vPurchase_Site_Tax_Schedu = ''  end  end   if (@I_vADRSCODE is null)  begin  select @I_vADRSCODE = isnull(PRSTADCD,'') from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@I_vADRSCODE = '')  begin  select @O_iErrorState = 6338    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if not exists(select 1 from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE)  begin  select @O_iErrorState = 6342     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  if (@I_vPOTYPE in (2,4)) begin  if (@I_vPrint_Phone_NumberGB is null)  begin  select @I_vPrint_Phone_NumberGB = Print_Phone_NumberGB from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE  end  end else begin  select @I_vPrint_Phone_NumberGB = @Print_Phone_NumberGB end   if (@I_vPrint_Phone_NumberGB not in(0,1,2,3,4)) begin  select @O_iErrorState = 11766     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if (@I_vCCode <> '') and (@I_vCOUNTRY is null) begin  select @I_vCOUNTRY = CCodeDesc from VAT10001 (nolock) where CCode = @I_vCCode end  select @ADDRSOURCE =  case  when @I_vPOTYPE <> @POTYPE   then 1  when (@I_vSHIPMTHD = '') and (@I_vADRSCODE = '')  then 0  when (@I_vSHIPMTHD = '') and (@I_vPOTYPE in (2,4))   then 1  when (@I_vSHIPMTHD = '') and (@I_vPOTYPE in (1,3))  then 5   when (@I_vSHIPMTHD <> '') and (@SHIPTYPE = 0)  then 2  when (@I_vSHIPMTHD <> '') and (@SHIPTYPE = 1) and (@I_vPOTYPE in (2,4))  then 1  when (@I_vSHIPMTHD <> '') and (@SHIPTYPE = 1) and (@I_vPOTYPE in (1,3)) and @LOCNCODE <> ''  then 3   when (@I_vSHIPMTHD <> '') and (@SHIPTYPE = 1) and (@I_vPOTYPE in (1,3)) and @LOCNCODE = ''  then 4   else 0  end  if (@ADDRSOURCE = 0)  begin  select @I_vADRSCODE = '',  @I_vCMPNYNAM = case when (@I_vCMPNYNAM is null) then '' else @I_vCMPNYNAM end,  @I_vCONTACT = case when (@I_vCONTACT is null) then '' else @I_vCONTACT end,  @I_vADDRESS1 = case when (@I_vADDRESS1 is null) then '' else @I_vADDRESS1 end,  @I_vADDRESS2 = case when (@I_vADDRESS2 is null) then '' else @I_vADDRESS2 end,  @I_vADDRESS3 = case when (@I_vADDRESS3 is null) then '' else @I_vADDRESS3 end,  @I_vCITY = case when (@I_vCITY is null) then '' else @I_vCITY end,  @I_vSTATE = case when (@I_vSTATE is null) then '' else @I_vSTATE end,  @I_vZIPCODE = case when (@I_vZIPCODE is null) then '' else @I_vZIPCODE end,  @I_vCCode = case when (@I_vCCode is null) then '' else @I_vCCode end,  @I_vCOUNTRY = case when (@I_vCOUNTRY is null) then '' else @I_vCOUNTRY end,  @I_vPHONE1 = case when (@I_vPHONE1 is null) then '' else @I_vPHONE1 end,  @I_vPHONE2 = case when (@I_vPHONE2 is null) then '' else @I_vPHONE2 end,  @I_vPHONE3 = case when (@I_vPHONE3 is null) then '' else @I_vPHONE3 end,  @I_vFAX  = case when (@I_vFAX is null) then '' else @I_vFAX end end else if (@ADDRSOURCE = 1)  begin   select @ShipToName = ShipToName from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE  select @I_vCMPNYNAM = case when @I_vCMPNYNAM is null then @ShipToName else @I_vCMPNYNAM end   select @I_vCONTACT = case when (@I_vCONTACT is null) then CNTCPRSN else @I_vCONTACT end,  @I_vADDRESS1 = case when (@I_vADDRESS1 is null) then ADDRESS1 else @I_vADDRESS1 end,  @I_vADDRESS2 = case when (@I_vADDRESS2 is null) then ADDRESS2 else @I_vADDRESS2 end,  @I_vADDRESS3 = case when (@I_vADDRESS3 is null) then ADDRESS3 else @I_vADDRESS3 end,  @I_vCITY = case when (@I_vCITY is null) then CITY else @I_vCITY end,  @I_vSTATE = case when (@I_vSTATE is null) then STATE else @I_vSTATE end,  @I_vZIPCODE = case when (@I_vZIPCODE is null) then ZIP else @I_vZIPCODE end,  @I_vCCode = case when (@I_vCCode is null) then CCode else @I_vCCode end,  @I_vCOUNTRY = case when (@I_vCOUNTRY is null) then COUNTRY else @I_vCOUNTRY end,  @I_vPHONE1 = case when (@I_vPHONE1 is null) then PHONE1 else @I_vPHONE1 end,  @I_vPHONE2 = case when (@I_vPHONE2 is null) then PHONE2 else @I_vPHONE2 end,  @I_vPHONE3 = case when (@I_vPHONE3 is null) then PHONE3 else @I_vPHONE3 end,  @I_vFAX  = case when (@I_vFAX is null) then FAX else @I_vFAX end  from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE end else if (@ADDRSOURCE = 2)  begin  select @I_vCMPNYNAM = case when (@I_vCMPNYNAM is null) then VENDNAME else @I_vCMPNYNAM end  from PM00200 (nolock) where VENDORID = @I_vVENDORID   select @I_vCONTACT = case when (@I_vCONTACT is null) then VNDCNTCT else @I_vCONTACT end,  @I_vADDRESS1 = case when (@I_vADDRESS1 is null) then ADDRESS1 else @I_vADDRESS1 end,  @I_vADDRESS2 = case when (@I_vADDRESS2 is null) then ADDRESS2 else @I_vADDRESS2 end,  @I_vADDRESS3 = case when (@I_vADDRESS3 is null) then ADDRESS3 else @I_vADDRESS3 end,  @I_vCITY = case when (@I_vCITY is null) then CITY else @I_vCITY end,  @I_vSTATE = case when (@I_vSTATE is null) then STATE else @I_vSTATE end,  @I_vZIPCODE = case when (@I_vZIPCODE is null) then ZIPCODE else @I_vZIPCODE end,  @I_vCCode = case when (@I_vCCode is null) then CCode else @I_vCCode end,  @I_vCOUNTRY = case when (@I_vCOUNTRY is null) then COUNTRY else @I_vCOUNTRY end,  @I_vPHONE1 = case when (@I_vPHONE1 is null) then PHNUMBR1 else @I_vPHONE1 end,  @I_vPHONE2 = case when (@I_vPHONE2 is null) then PHNUMBR2 else @I_vPHONE2 end,  @I_vPHONE3 = case when (@I_vPHONE3 is null) then PHONE3 else @I_vPHONE3 end,  @I_vFAX  = case when (@I_vFAX is null) then FAXNUMBR else @I_vFAX end  from PM00300 (nolock) where VENDORID = @I_vVENDORID and ADRSCODE = @I_vADRSCODE end else if (@ADDRSOURCE = 3)  begin  if (not exists(select (1) from IV40700 (nolock) where LOCNCODE = @I_vADRSCODE) and (@I_vADRSCODE <> ''))  begin  select @O_iErrorState = 11453     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  select @I_vCMPNYNAM = '',  @I_vCONTACT = '',  @I_vADDRESS1 = ADDRESS1,  @I_vADDRESS2 = ADDRESS2,  @I_vADDRESS3 = ADDRESS3,  @I_vCITY = CITY,  @I_vSTATE = STATE,  @I_vZIPCODE = ZIPCODE,  @I_vCCode = CCode,  @I_vCOUNTRY = COUNTRY,  @I_vPHONE1 = PHONE1,  @I_vPHONE2 = PHONE2,  @I_vPHONE3 = PHONE3,  @I_vFAX  = FAXNUMBR  from IV40700 (nolock) where LOCNCODE = @I_vADRSCODE end else if (@ADDRSOURCE = 4)  begin  select @CMPANYID = CMPANYID, @COPTXSCH = COPTXSCH from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   if not exists(select (1) from SY00600 (nolock) where LOCATNID = @I_vADRSCODE and CMPANYID = @CMPANYID)  begin  select @O_iErrorState = 11452     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  select @I_vCMPNYNAM = LOCATNNM,  @I_vCONTACT = '',  @I_vADDRESS1 = ADDRESS1,  @I_vADDRESS2 = ADDRESS2,  @I_vADDRESS3 = ADDRESS3,  @I_vCITY = CITY,  @I_vSTATE = STATE,  @I_vZIPCODE = ZIPCODE,  @I_vCCode = CCode,  @I_vCOUNTRY = COUNTRY,  @I_vPHONE1 = PHONE1,  @I_vPHONE2 = PHONE2,  @I_vPHONE3 = PHONE3,  @I_vFAX  = FAXNUMBR  from SY00600 (nolock) where LOCATNID = @I_vADRSCODE and CMPANYID = @CMPANYID end else if (@ADDRSOURCE = 5)  begin  if not exists(select (1) from SY00600 (nolock) where LOCATNID = @I_vADRSCODE and CMPANYID = @CMPANYID)  begin  select @O_iErrorState = 11451     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @I_vCMPNYNAM = case when (@I_vCMPNYNAM is null) then LOCATNNM else @I_vCMPNYNAM end,  @I_vCONTACT = case when (@I_vCONTACT is null) then ADRCNTCT else @I_vCONTACT end,  @I_vADDRESS1 = case when (@I_vADDRESS1 is null) then ADDRESS1 else @I_vADDRESS1 end,  @I_vADDRESS2 = case when (@I_vADDRESS2 is null) then ADDRESS2 else @I_vADDRESS2 end,  @I_vADDRESS3 = case when (@I_vADDRESS3 is null) then ADDRESS3 else @I_vADDRESS3 end,  @I_vCITY = case when (@I_vCITY is null) then CITY else @I_vCITY end,  @I_vSTATE = case when (@I_vSTATE is null) then STATE else @I_vSTATE end,  @I_vZIPCODE = case when (@I_vZIPCODE is null) then ZIPCODE else @I_vZIPCODE end,  @I_vCCode = case when (@I_vCCode is null) then CCode else @I_vCCode end,  @I_vCOUNTRY = case when (@I_vCOUNTRY is null) then COUNTRY else @I_vCOUNTRY end,  @I_vPHONE1 = case when (@I_vPHONE1 is null) then PHONE1 else @I_vPHONE1 end,  @I_vPHONE2 = case when (@I_vPHONE2 is null) then PHONE2 else @I_vPHONE2 end,  @I_vPHONE3 = case when (@I_vPHONE3 is null) then PHONE3 else @I_vPHONE3 end,  @I_vFAX  = case when (@I_vFAX is null) then FAXNUMBR else @I_vFAX end  from SY00600 (nolock) where LOCATNID = @I_vADRSCODE and CMPANYID = @CMPANYID  select @ADDRSOURCE = 4  end end else begin  if (@I_vCMPNYNAM is null) select @I_vCMPNYNAM = ''  if (@I_vCONTACT is null) select @I_vCONTACT = ''  if (@I_vADDRESS1 is null) select @I_vADDRESS1 = ''  if (@I_vADDRESS2 is null) select @I_vADDRESS2 = ''  if (@I_vADDRESS3 is null) select @I_vADDRESS3 = ''  if (@I_vCITY is null) select @I_vCITY = ''  if (@I_vSTATE is null) select @I_vSTATE = ''  if (@I_vZIPCODE is null) select @I_vZIPCODE = ''  if (@I_vCCode is null) select @I_vCCode = ''  if (@I_vCOUNTRY is null) select @I_vCOUNTRY = ''  if (@I_vPHONE1 is null) select @I_vPHONE1 = ''  if (@I_vPHONE2 is null) select @I_vPHONE2 = ''  if (@I_vPHONE3 is null) select @I_vPHONE3 = ''  if (@I_vFAX is null) select @I_vFAX = '' end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  while 1=1 begin  if (@I_vRequesterTrx=0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1285    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @existscomment = isnull(1,0) from POP10550 (nolock) where POPNUMBE = @I_vPONUMBER and ORD = @I_vORD   if  (@I_vCOMMENT_1 <> '' or  @I_vCOMMENT_2 <> '' or  @I_vCOMMENT_3 <> '' or  @I_vCOMMENT_4 <> '')  begin  if (@I_vCOMMENT_1 <> @cCOMMENT_1 or  @I_vCOMMENT_2 <> @cCOMMENT_2 or  @I_vCOMMENT_3 <> @cCOMMENT_3 or  @I_vCOMMENT_4 <> @cCOMMENT_4)  begin  if (DataLength(rtrim(@I_vCOMMENT_1) + rtrim(@I_vCOMMENT_2) + rtrim(@I_vCOMMENT_3) + rtrim(@I_vCOMMENT_4)) > 0)  begin  select @I_vCMMTTEXT =  rtrim(@I_vCOMMENT_1) + char(13) +  rtrim(@I_vCOMMENT_2) + char(13) +  rtrim(@I_vCOMMENT_3) + char(13) +  rtrim(@I_vCOMMENT_4)  end  else  begin  select @I_vCMMTTEXT  = ''  select @I_vCOMMENT_1 = ''  select @I_vCOMMENT_2 = ''  select @I_vCOMMENT_3 = ''  select @I_vCOMMENT_4 = ''  end  end  else  begin  select @I_vCMMTTEXT = @cCMMTTEXT  end  end  else  begin  if (@I_vCMMTTEXT <> '')  begin  if  (@I_vCMMTTEXT <> @cCMMTTEXT or (@I_vCOMMENT_1 = '' and @I_vCOMMENT_2 = '' and @I_vCOMMENT_3 = '' and @I_vCOMMENT_4 = ''))  begin  exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 2290    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end  end   if  (@I_vCOMMNTID <> '' and  (@cCOMMNTID <> @I_vCOMMNTID or  @I_vCOMMENT_1 <> @cCOMMENT_1 or  @I_vCOMMENT_2 <> @cCOMMENT_2 or  @I_vCOMMENT_3 <> @cCOMMENT_3 or  @I_vCOMMENT_4 <> @cCOMMENT_4))  begin  if (not exists(select 1 from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID))  begin   if (isnull(@I_vCMMTTEXT, '') = '')  select @I_vCMMTTEXT = ''  exec @iStatus = taCreateCommentMaster  4,  @I_vCOMMNTID,  @I_vCMMTTEXT,  @O_iErrorState = @O_iCommentMstErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iCommentMstErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @O_iCommentMstErrState  select @O_iErrorState = 2289    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  select @I_vCMMTTEXT = Cast(CMMTTEXT as varchar(500)) from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID  end  else  begin  if (@I_vCMMTTEXT = '')  begin  select @I_vCMMTTEXT = Cast(CMMTTEXT as varchar(500)) from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID  end  end   if (@I_vCMMTTEXT <> '')  begin  exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 391    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (((@cCMMTTEXT <> @I_vCMMTTEXT or @I_vCOMMNTID <> @cCOMMNTID) and @I_vUpdateIfExists = 1 and @existscomment = 0) or  (@I_vUpdateIfExists = 0 and (@I_vCMMTTEXT <> '' or @I_vCOMMNTID <> '')) or  ((@I_vUpdateIfExists = 1 or @LineCount = 1) and (@cCMMTTEXT <> @I_vCMMTTEXT or @I_vCOMMNTID <> @cCOMMNTID)))  begin  if @I_vUpdateIfExists = 0 or @existscomment = 0  begin  insert POP10550  (  DOCTYPE,  POPNUMBE,  ORD,  COMMNTID,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select  1,      @I_vPONUMBER,   @I_vORD,    @I_vCOMMNTID,   @I_vCOMMENT_1,   @I_vCOMMENT_2,   @I_vCOMMENT_3,   @I_vCOMMENT_4,   @I_vCMMTTEXT   if (@@error <> 0)  begin  select @O_iErrorState = 2293    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  update POP10550 set  COMMNTID = @I_vCOMMNTID,  COMMENT_1 = isnull(@I_vCOMMENT_1,''),  COMMENT_2 = isnull(@I_vCOMMENT_2,''),  COMMENT_3 = isnull(@I_vCOMMENT_3,''),  COMMENT_4 = isnull(@I_vCOMMENT_4,''),  CMMTTEXT = isnull(@I_vCMMTTEXT,'')  where POPNUMBE = @I_vPONUMBER and ORD = @I_vORD  if (@@error <> 0)  begin  select @O_iErrorState = 8207     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   select @POLNEARY_1 = NOTEINDX from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  select @POLNEARY_2 = NOTEINDX from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE  select @POLNEARY_3 = NOTEINDX from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID  select @POLNEARY_4 = NOTEINDX from GL00100 (nolock) where ACTINDX = @INVINDX  select @POLNEARY_6 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Item_Tax_Schedu  select @POLNEARY_7 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Site_Tax_Schedu  select @POLNEARY_8 = NOTEINDX from IV41101 (nolock) where Landed_Cost_Group_ID = @I_vLanded_Cost_Group_ID   if (@ISMCTRX = 0)  begin  if (exists(select distinct 1 from IV00105 a (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  if (not exists(select 1 from IV00105 a (nolock) where ITEMNMBR = @I_vITEMNMBR and a.CURNCYID <> ''))  begin  select @MCINSTALLED = 0  end  end  else  begin  if (not exists(select distinct 1 from IV00105 a (nolock) where CURNCYID <> ''))  begin  select @MCINSTALLED = 0  end  end  end   select @BACKOUTAMT = isnull(sum(TAXAMNT),0.00) from POP10160 (nolock) where PONUMBER = @I_vPONUMBER and ORD = 0 and BKOUTTAX = 1   if (@multiplycost = 1)  begin  select @UNITCOST = round((@UNITCOST * @UMQTYINB), @ITEMFUNCTDEC)  end   select @CMPNYNAM_Source = ShipToName, @CNTCPRSN_Source = CNTCPRSN, @ADDRESS1_Source = ADDRESS1, @ADDRESS2_Source = ADDRESS2, @ADDRESS3_Source = ADDRESS3,  @CITY_Source = CITY, @STATE_Source = STATE, @ZIPCODE_Source = ZIP, @CCODE_Source = CCode, @COUNTRY_Source = COUNTRY, @PHONE1_Source = PHONE1,  @PHONE2_Source = PHONE2, @PHONE3_Source = PHONE3, @FAX_Source = FAX from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if @I_vUpdateIfExists = 0 or @LineCount = 0 or  (@I_vUpdateIfExists = 1 and @I_vORD is not null and not exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and ORD = @I_vORD))  begin  insert POP10110  (  PONUMBER,  ORD,  POLNESTA,  POTYPE,  ITEMNMBR,  ITEMDESC,  VENDORID,  VNDITNUM,  VNDITDSC,  NONINVEN,  LOCNCODE,  UOFM,  UMQTYINB,  QTYORDER,  QTYCANCE,  QTYCMTBASE,  QTYUNCMTBASE,  UNITCOST,  EXTDCOST,  INVINDX,  REQDATE,  PRMDATE,  PRMSHPDTE,  REQSTDBY,  COMMNTID,  DOCTYPE,  POLNEARY_1,  POLNEARY_2,  POLNEARY_3,  POLNEARY_4,  POLNEARY_5,  POLNEARY_6,  POLNEARY_7,  POLNEARY_8,  POLNEARY_9,  DECPLCUR,  DECPLQTY,  ITMTRKOP,  VCTNMTHD,  BRKFLD1,  PO_Line_Status_Orig,  QTY_Canceled_Orig,  OPOSTSUB,  JOBNUMBR,  COSTCODE,  COSTTYPE,  CURNCYID,  CURRNIDX,  XCHGRATE,  RATECALC,  DENXRATE,  ORUNTCST,  OREXTCST,  LINEORIGIN,  FREEONBOARD,  ODECPLCU,  Capital_Item,  Product_Indicator,  Source_Document_Number,  Source_Document_Line_Num,  RELEASEBYDATE,  Released_Date,  Change_Order_Flag,  Purchase_IV_Item_Taxable,  Purchase_Item_Tax_Schedu,  Purchase_Site_Tax_Schedu,  PURCHSITETXSCHSRC,  BSIVCTTL,  TAXAMNT,  ORTAXAMT,  BCKTXAMT,  OBTAXAMT,  Landed_Cost_Group_ID,  PLNNDSPPLID,  SHIPMTHD,  BackoutTradeDiscTax,  OrigBackoutTradeDiscTax,  LineNumber,  ORIGPRMDATE,  FSTRCPTDT,  LSTRCPTDT,  RELEASE,  ADRSCODE,  CMPNYNAM,  CONTACT,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  CCode,  COUNTRY,  PHONE1,  PHONE2,  PHONE3,  FAX,  ADDRSOURCE,  Flags,  ProjNum,  CostCatID,  Print_Phone_NumberGB  )  select  @I_vPONUMBER,      @I_vORD,       @I_vPOLNESTA,      @I_vPOTYPE,       @I_vITEMNMBR,      @ITEMDESC,       @I_vVENDORID,      @I_vVNDITNUM,      @VNDITDSC,       @I_vNONINVEN,      @I_vLOCNCODE,      @UOFM,        @UMQTYINB,       @I_vQUANTITY,      @I_vQTYCANCE,      0,         case        when @I_vLineNumber <> 0  then (@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB  else 0  end,  @UNITCOST,       round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR),  case        when @projectexists = 1 and @PACogs_Idx <> 0 and @PAAcctgMethod = 1  then @PACogs_Idx  when @projectexists = 1 and @PACGBWIPIDX <>0 and @PAAcctgMethod = 2  then @PACGBWIPIDX  when @projectexists = 1 and @PACogs_Idx <> 0 and @PAAcctgMethod = 2  then @PACogs_Idx  else @INVINDX  end,  @I_vREQDATE,      @I_vPRMDATE,      @I_vPRMSHPDTE,      @I_vREQSTDBY,      @I_vCOMMNTID,      1,         @POLNEARY_1,      @POLNEARY_2,      @POLNEARY_3,      @POLNEARY_4,      @POLNEARY_5,      @POLNEARY_6,      @POLNEARY_7,      @POLNEARY_8,      @POLNEARY_9,      @ITEMFUNCTDEC + 7,     @DECPLQTY,       @ITMTRKOP,       @VCTNMTHD,       0,         0,         0,         0,         '',         '',         0,         case        when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  case        when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  0,         0,         0,         @UNITCOST,       round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR),   @LINEORIGIN,      @FREEONBOARD,      @ODECPLCU,       0,         0,         '',         0,         @I_vRELEASEBYDATE,     case        when @I_vPOLNESTA = 2  then @I_vRELEASEBYDATE  else ''  end,  case        when @I_vPOLNESTA = 2  then 0  else 1  end,  @I_vPurchase_IV_Item_Taxable,   @I_vPurchase_Item_Tax_Schedu,   @I_vPurchase_Site_Tax_Schedu,   0,         @I_vBSIVCTTL,      @I_vTAXAMNT,      @I_vTAXAMNT,      case        when @I_vBCKTXAMT = 0 and @BACKOUTAMT > 0  then 0  else @I_vBCKTXAMT  end,  case        when @I_vBCKTXAMT = 0 and @BACKOUTAMT > 0  then 0  else @I_vBCKTXAMT  end,  @I_vLanded_Cost_Group_ID,   @I_vPLNNDSPPLID,     @I_vSHIPMTHD,      @I_vBackoutTradeDiscTax,   @I_vBackoutTradeDiscTax,   @I_vLineNumber,      @I_vPRMDATE,      '',         '',         1,         @I_vADRSCODE,      @I_vCMPNYNAM,      @I_vCONTACT,      @I_vADDRESS1,      @I_vADDRESS2,      @I_vADDRESS3,      @I_vCITY,       @I_vSTATE,       @I_vZIPCODE,      @I_vCCode,       @I_vCOUNTRY,      @I_vPHONE1,       @I_vPHONE2,       @I_vPHONE3,       @I_vFAX,       @ADDRSOURCE,      Flags =  case  when ((@I_vCOMMNTID = '' and (@I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> '')) and @ADDRSOURCE = 0)   then 3   when (@I_vCOMMNTID = '' and (@I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> ''))  then 2  When (@ADDRSOURCE = 0 and @I_vADRSCODE='' and (@I_vCMPNYNAM<>'' or @I_vCONTACT<>'' or @I_vADDRESS1<>'' or @I_vADDRESS2<>'' or @I_vADDRESS3<>'' or @I_vCITY<>'' or @I_vSTATE<>'' or @I_vZIPCODE<>'' or @I_vCCode<>'' or @I_vCOUNTRY<>'' or @I_vPHONE1<>'' or   @I_vPHONE2<>'' or @I_vPHONE3<>'' or @I_vFAX<>''))   then 1   When (@ADDRSOURCE = 1 and (@I_vCMPNYNAM<>@CMPNYNAM_Source or @I_vCONTACT<>@CNTCPRSN_Source or @I_vADDRESS1<>@ADDRESS1_Source or @I_vADDRESS2<>@ADDRESS2_Source or @I_vADDRESS3<>@ADDRESS3_Source or @I_vCITY<>@CITY_Source or @I_vSTATE<>@STATE_Source or @I_vZIPCODE<>@ZIPCODE_Source or @I_vCCode<>@CCODE_Source or @I_vCOUNTRY<>@COUNTRY_Source or @I_vPHONE1<>@PHONE1_Source or   @I_vPHONE2<>@PHONE2_Source or @I_vPHONE3<>@PHONE3_Source or @I_vFAX<>@FAX_Source))   then 1   else 0  end,  @I_vProjNum,      @I_vCostCatID,      @I_vPrint_Phone_NumberGB      if @@error <> 0  begin  select @O_iErrorState = 649    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  update POP10110 set  POTYPE = @I_vPOTYPE,  QTY_Canceled_Orig = @cQTYCANCE,  PO_Line_Status_Orig =   case   when @cPOLNESTA <> @I_vPOLNESTA and @cPOLNESTA <> 1 and @I_vPOLNESTA not in (4,5)   then @cPOLNESTA  else PO_Line_Status_Orig  end,  POLNESTA = @I_vPOLNESTA,  VENDORID = @I_vVENDORID,  VNDITNUM = @I_vVNDITNUM,  VNDITDSC = @VNDITDSC,  LOCNCODE = @I_vLOCNCODE,  UOFM = @UOFM,  UMQTYINB = @UMQTYINB,  QTYORDER = @I_vQUANTITY,  QTYCANCE = @I_vQTYCANCE,  QTYUNCMTBASE =                   case  when @I_vPOLNESTA = 1   then ((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB)  else ((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) - @cQTYSHPPD1        end,   UNITCOST = @UNITCOST,  EXTDCOST = round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR),  INVINDX = @INVINDX,  REQDATE = @I_vREQDATE,  PRMDATE = @I_vPRMDATE,  PRMSHPDTE = @I_vPRMSHPDTE,  REQSTDBY = @I_vREQSTDBY,  COMMNTID = @I_vCOMMNTID,  DECPLCUR = @ITEMFUNCTDEC + 7,  DECPLQTY = @DECPLQTY,  ITMTRKOP = @ITMTRKOP,  VCTNMTHD = @VCTNMTHD,  CURNCYID =  case  when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  CURRNIDX =  case  when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  ORUNTCST = @UNITCOST,  OREXTCST = round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR),  LINEORIGIN = @LINEORIGIN,  FREEONBOARD = @FREEONBOARD,  ODECPLCU = @ODECPLCU,  RELEASEBYDATE = @I_vRELEASEBYDATE,  Released_Date =  case  when @I_vPOLNESTA = 2  then @I_vRELEASEBYDATE  else ''  end,  Change_Order_Flag =  case  when @I_vPOLNESTA = 2  then 0  else 1  end,  Purchase_IV_Item_Taxable = @I_vPurchase_IV_Item_Taxable,  Purchase_Item_Tax_Schedu = @I_vPurchase_Item_Tax_Schedu,  Purchase_Site_Tax_Schedu = @I_vPurchase_Site_Tax_Schedu,  BSIVCTTL = @I_vBSIVCTTL,  TAXAMNT = @I_vTAXAMNT,  ORTAXAMT = @I_vTAXAMNT,  BCKTXAMT = @I_vBCKTXAMT,  OBTAXAMT = @I_vBCKTXAMT,  Landed_Cost_Group_ID = @I_vLanded_Cost_Group_ID,  PLNNDSPPLID = @I_vPLNNDSPPLID,  SHIPMTHD = @I_vSHIPMTHD,  BackoutTradeDiscTax = @I_vBackoutTradeDiscTax,  OrigBackoutTradeDiscTax = @I_vBackoutTradeDiscTax,  ORIGPRMDATE = @I_vPRMDATE,  ADRSCODE = @I_vADRSCODE,  CMPNYNAM = @I_vCMPNYNAM,  CONTACT = @I_vCONTACT,  ADDRESS1 = @I_vADDRESS1,  ADDRESS2 = @I_vADDRESS2,  ADDRESS3 = @I_vADDRESS3,  CITY = @I_vCITY,  STATE = @I_vSTATE,  ZIPCODE = @I_vZIPCODE,  CCode = @I_vCCode,  COUNTRY = @I_vCOUNTRY,  PHONE1 = @I_vPHONE1,  PHONE2 = @I_vPHONE2,  PHONE3 = @I_vPHONE3,  FAX = @I_vFAX,  ADDRSOURCE = @ADDRSOURCE,  Flags =  case  when ((@I_vCOMMNTID = '' and (@I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> '')) and @ADDRSOURCE = 0)   then 3   when (@I_vCOMMNTID = '' and (@I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> ''))  then 2  When (@ADDRSOURCE = 0 and @I_vADRSCODE='' and (@I_vCMPNYNAM<>'' or @I_vCONTACT<>'' or @I_vADDRESS1<>'' or @I_vADDRESS2<>'' or @I_vADDRESS3<>'' or @I_vCITY<>'' or @I_vSTATE<>'' or @I_vZIPCODE<>'' or @I_vCCode<>'' or @I_vCOUNTRY<>'' or @I_vPHONE1<>'' or   @I_vPHONE2<>'' or @I_vPHONE3<>'' or @I_vFAX<>''))   then 1   when (@ADDRSOURCE = 1 and (@I_vCMPNYNAM<>@CMPNYNAM_Source or @I_vCONTACT<>@CNTCPRSN_Source or @I_vADDRESS1<>@ADDRESS1_Source or @I_vADDRESS2<>@ADDRESS2_Source or @I_vADDRESS3<>@ADDRESS3_Source or @I_vCITY<>@CITY_Source or @I_vSTATE<>@STATE_Source or @I_vZIPCODE<>@ZIPCODE_Source or @I_vCCode<>@CCODE_Source or @I_vCOUNTRY<>@COUNTRY_Source or @I_vPHONE1<>@PHONE1_Source or   @I_vPHONE2<>@PHONE2_Source or @I_vPHONE3<>@PHONE3_Source or @I_vFAX<>@FAX_Source))   then 1   else 0  end,  ProjNum = @I_vProjNum,  CostCatID = @I_vCostCatID,  ITEMDESC = @ITEMDESC,  Print_Phone_NumberGB = @I_vPrint_Phone_NumberGB  where PONUMBER = @I_vPONUMBER and ORD = @I_vORD and ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 9224     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vCostCatID <> '')  begin  if not exists(select 1 from PA10601 (nolock) where PApurordnum = @I_vPONUMBER and ORD = @I_vORD)  begin  insert PA10601  (  PApurordnum,  ORD,  BRKFLD1,  ITEMNMBR,  VNDITNUM,  DATEVAL,  FRTAMNT,  ITMTSHID,  MSCCHAMT,  ORFRTAMT,  OMISCAMT,  ORTDISAM,  PABase_Qty,  PABase_Unit_Cost,  PAbillnoteidx,  PACBADDFRMFLY,  PACHGORDNO,  PACogs_Idx,  PACOSTCATID,  PAIV_Item_Checkbox,  PALineItemSeq,  PAORGBSUNITCST,  PAprojname,  PAPROJNUMBER,  PAProjectType,  PAPurchase_Tax_Options,  PATU,  PACGBWIPIDX,  PostedSubtotal,  PRICELVL,  TRDISAMT,  UOMSCHDL  )  select  @I_vPONUMBER,     @I_vORD,            0,             @I_vITEMNMBR,       @I_vVNDITNUM,     @I_vDOCDATE,       0,        @I_vPurchase_Item_Tax_Schedu,   0,         0,        0,         0,        @PABase_Qty,       @PABase_Unit_Cost,     @nNextNoteIndex,    0,        '',           @PACogs_Idx,        @I_vCostCatID,       @PAIV_Item_Checkbox,    @PALineItemSeq,      0,        @PAprojname,     @I_vProjNum,     @PAProjectType,     @I_vPurchase_IV_Item_Taxable,   @PATU,        @PACGBWIPIDX,     0,         @PRICELVL,       0,        @UOMSCHDL      if @@error <> 0  begin  select @O_iErrorState = 8227    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (@projectexists = 1)  begin  if (@I_vCostCatID <> '') and not exists (select 1 from PA10600 (nolock) where PApurordnum = @I_vPONUMBER)  begin  insert PA10600  (  PApurordnum,  NOTEINDX,  PApodeformatouse,  PAFreight_Taxable_P,  PAlastprtby,  PAMisc_Taxable_P,  PA_Trade_Discount_Pcnt,  RegKey,  TRXTYPE,  USEADVTX,  USERID  )  select  @I_vPONUMBER,   @NOTEINDX,       0,           2,      '',      2,      0,      '',      0,      @USEADVTX,    'eConnect'    if @@error <> 0  begin  select @O_iErrorState = 8237    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (@I_vPOLNESTA in (2,3,4,5,6) )  begin  update IV00102 set  QTYONORD =  case  when (@I_vPOLNESTA = 2 and @I_vPOTYPE = 2)    then QTYONORD   when @cPOLNESTA in (2,3,4,5,6)  then QTYONORD + (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) -  ((@cQUANTITY - @cQTYCANCE) * @cUMQTYINB))  else QTYONORD + ((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB)  end,  LSORDQTY = (@I_vQUANTITY * @UMQTYINB),  LSTORDDT = @I_vRELEASEBYDATE,  LSORDVND = @I_vVENDORID,  QTY_Drop_Shipped =   case   when @I_vPOLNESTA = 2 and @I_vPOTYPE = 2   then QTY_Drop_Shipped + (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) -  ((@cQUANTITY - @cQTYCANCE) * @cUMQTYINB))  else QTY_Drop_Shipped  end   where ITEMNMBR = @I_vITEMNMBR AND LOCNCODE = @I_vLOCNCODE AND RCRDTYPE = 2  if @@error <> 0  begin  select @O_iErrorState = 1334     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set  QTYONORD =  case  when (@I_vPOLNESTA = 2 and @I_vPOTYPE = 2)    then QTYONORD   when @cPOLNESTA in (2,3,4,5,6)  then QTYONORD + (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) -  ((@cQUANTITY - @cQTYCANCE) * @cUMQTYINB))  else QTYONORD + ((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB)  end,  LSORDQTY = (@I_vQUANTITY * @UMQTYINB),  LSTORDDT = @I_vRELEASEBYDATE,  LSORDVND = @I_vVENDORID,  QTY_Drop_Shipped =   case   when @I_vPOLNESTA = 2 and @I_vPOTYPE = 2   then QTY_Drop_Shipped + (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) -  ((@cQUANTITY - @cQTYCANCE) * @cUMQTYINB))  else QTY_Drop_Shipped  end   where ITEMNMBR = @I_vITEMNMBR AND LOCNCODE = '' AND RCRDTYPE = 1  if @@error <> 0  begin  select @O_iErrorState = 1335     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00103 set   QTYONORD =  case  when (@I_vPOLNESTA = 2 and @I_vPOTYPE = 2)    then QTYONORD   when @cPOLNESTA in (2,3,4,5,6)  then QTYONORD + (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) -  ((@cQUANTITY - @cQTYCANCE) * @cUMQTYINB))  else QTYONORD + ((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB)  end,  LSORDQTY = (@I_vQUANTITY * @UMQTYINB),  LSTORDDT = @I_vRELEASEBYDATE,  QTY_Drop_Shipped =   case   when @I_vPOLNESTA = 2 and @I_vPOTYPE = 2   then QTY_Drop_Shipped + (((@I_vQUANTITY - @I_vQTYCANCE) * @UMQTYINB) -  ((@cQUANTITY - @cQTYCANCE) * @cUMQTYINB))  else QTY_Drop_Shipped  end   where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR  if @@error <> 0  begin  select @O_iErrorState = 1272     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vCostCatID <> '')  begin  if (@I_vNONINVEN = 0)  begin   update PA01303 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      else PAPOCost  end,  PACommitted_Costs =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA <> @I_vPOLNESTA)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when @I_vPOLNESTA in (3) and (@I_vUpdateIfExists= 1)  then PACommitted_Costs + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  else PACommitted_Costs  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  else PAPOQty  end  where PAPROJNUMBER = @I_vProjNum AND PACOSTCATID = @I_vCostCatID AND ITEMNMBR = @I_vITEMNMBR AND PALineItemSeq = @PALineItemSeq  if @@error <> 0  begin  select @O_iErrorState = 8228     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  update PA01301 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PACommitted_Costs =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA <> @I_vPOLNESTA)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when @I_vPOLNESTA in (3) and (@I_vUpdateIfExists = 1)  then PACommitted_Costs + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  else PACommitted_Costs  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end,  PACommitted_Qty =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0) or (@I_vUpdateIfExists = 1 and @LineCount = 0)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 3) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA in (2,3))  and (@I_vQUANTITY <> @cQUANTITY)  then PACommitted_Qty + ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE))  else PACommitted_Qty  end  where PAPROJNUMBER = @I_vProjNum AND PACOSTCATID = @I_vCostCatID AND PATU = @PATU  if @@error <> 0  begin  select @O_iErrorState = 8229     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update PA01201 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PACommitted_Costs =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA <> @I_vPOLNESTA)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when @I_vPOLNESTA in (3) and (@I_vUpdateIfExists= 1)  then PACommitted_Costs + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  else PACommitted_Costs  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end,  PACommitted_Qty =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 3) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA in (2,3))  and (@I_vQUANTITY <> @cQUANTITY)  then PACommitted_Qty + ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE))  else PACommitted_Qty  end  where PAPROJNUMBER = @I_vProjNum  if @@error <> 0  begin  select @O_iErrorState = 8230     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update PA01101 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PACommitted_Costs =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA <> @I_vPOLNESTA)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when @I_vPOLNESTA in (3) and (@I_vUpdateIfExists= 1)  then PACommitted_Costs + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  else PACommitted_Costs  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end,  PACommitted_Qty =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 3) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA in (2,3))  and (@I_vQUANTITY <> @cQUANTITY)  then PACommitted_Qty + ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE))  else PACommitted_Qty  end  where PACONTNUMBER = @PACONTNUMBER  if @@error <> 0  begin  select @O_iErrorState = 8231    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update PA00501 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PACommitted_Costs =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA <> @I_vPOLNESTA)  then PACommitted_Costs + round(@UNITCOST * (@I_vQUANTITY - @I_vQTYCANCE), @EDITDECPLCUR) + @I_vTAXAMNT  when @I_vPOLNESTA in (3) and (@I_vUpdateIfExists= 1)  then PACommitted_Costs + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  else PACommitted_Costs  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end,  PACommitted_Qty =  case  when (@I_vPOLNESTA in (2,3)) and (@I_vUpdateIfExists = 0)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PACommitted_Qty + @QTYUNCMTBASE  when (@I_vPOLNESTA = 3) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA in (2,3))  and (@I_vQUANTITY <> @cQUANTITY)  then PACommitted_Qty + ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE))  else PACommitted_Qty  end  where CUSTNMBR = @CUSTNMBR  if @@error <> 0  begin  select @O_iErrorState = 8232     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if exists(select 1 from PA01304 (nolock) where PAPROJNUMBER = @I_vProjNum AND PACOSTCATID = @I_vCostCatID AND PATU = @PATU AND  PAsfid = 0  AND ((PERIODID = @PeriodID AND YEAR1 = @Year) or (PERIODID = 0 AND YEAR1 = @Year)))  begin  Update PA01304 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end  where PAPROJNUMBER = @I_vProjNum AND PACOSTCATID = @I_vCostCatID AND PATU = @PATU AND  PAsfid = 0  AND ((PERIODID = @PeriodID AND YEAR1 = @Year) or (PERIODID = 0 AND YEAR1 = @Year))  if @@error <> 0  begin  select @O_iErrorState = 8233     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if exists(select 1 from PA01221 (nolock) where PAPROJNUMBER = @I_vProjNum AND ((PERIODID = @PeriodID AND YEAR1 = @Year)  or (PERIODID = 0 AND YEAR1 = @Year)))  begin  update PA01221 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PAPOQty =   case   when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)   when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end  where PAPROJNUMBER = @I_vProjNum AND ((PERIODID = @PeriodID AND YEAR1 = @Year) or (PERIODID = 0 AND YEAR1 = @Year))  if @@error <> 0  begin  select @O_iErrorState = 8234     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if exists(select 1 from PA01121 (nolock) where PACONTNUMBER = @PACONTNUMBER AND ((PERIODID = @PeriodID AND YEAR1 = @Year)   or (PERIODID = 0 AND YEAR1 = @Year)))  begin   update PA01121 set  PAPOCost =   case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)   then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)   then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)   else PAPOCost  end,  PAPOQty =   case   when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)   when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end  where PACONTNUMBER = @PACONTNUMBER AND ((PERIODID = @PeriodID AND YEAR1 = @Year) or (PERIODID = 0 AND YEAR1 = @Year))  if @@error <> 0  begin  select @O_iErrorState = 8235    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if exists(select 1 from PA00511 (nolock) where CUSTNMBR = @CUSTNMBR AND ((PERIODID = @PeriodID AND YEAR1 = @Year)   or (PERIODID = 0 AND YEAR1 = @Year)))  begin  update PA00511 set  PAPOCost =  case  when (@I_vUpdateIfExists = 0) and (@I_vPOLNESTA = 1)  then PAPOCost + (@QTYUNCMTBASE * @I_vUNITCOST) + @I_vTAXAMNT      when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY = @cQUANTITY)  then PAPOCost + round((@UNITCOST - @cUNITCOST) * (@I_vQUANTITY - @I_vQTYCANCE ), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST = @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@UNITCOST <> @cUNITCOST) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOCost + round(@UNITCOST * ((@I_vQUANTITY - @cQUANTITY) - (@I_vQTYCANCE - @cQTYCANCE)) + ((@UNITCOST - @cUNITCOST) * @cQUANTITY), @EDITDECPLCUR) + @I_vTAXAMNT  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vUNITCOST = @cUNITCOST)  then PAPOCost - (@QTYUNCMTBASE * @I_vUNITCOST)  else PAPOCost  end,  PAPOQty =  case  when (@I_vPOLNESTA = 1) and (@I_vUpdateIfExists = 0)  then PAPOQty + @QTYUNCMTBASE  when (@I_vUpdateIfExists = 1) and (@I_vPOLNESTA = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY <> @cQUANTITY)  then PAPOQty + (@I_vQUANTITY - @cQUANTITY)  when (@I_vPOLNESTA = 2) and (@I_vUpdateIfExists = 1) and (@cPOLNESTA = 1) and (@I_vQUANTITY = @cQUANTITY)  then PAPOQty - @QTYUNCMTBASE  else PAPOQty  end  where CUSTNMBR = @CUSTNMBR AND ((PERIODID = @PeriodID AND YEAR1 = @Year) or (PERIODID = 0 AND YEAR1 = @Year))  if @@error <> 0  begin  select @O_iErrorState = 8236    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   if (@I_vNOTETEXT <> '')  begin  if not exists(select 1 from SY03900 (nolock) where NOTEINDX = @POLNEARY_5)  begin  insert SY03900  (  NOTEINDX,  DATE1,  TIME1,  TXTFIELD  )  select  @POLNEARY_5,  convert(varchar(12),getdate()),  substring(convert(varchar(25),getdate()),12,12),  @I_vNOTETEXT  if (@@error <> 0)  begin  select @O_iErrorState = 8279   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  update SY03900 set  DATE1 = convert(varchar(12),getdate()),  TIME1 = substring(convert(varchar(25),getdate()),12,12),  TXTFIELD = @I_vNOTETEXT  where NOTEINDX = @POLNEARY_5  if (@@error <> 0)  begin  select @O_iErrorState = 8280   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  else  begin  delete SY03900 where NOTEINDX = @POLNEARY_5  if (@@error <> 0)  begin  select @O_iErrorState = 8281   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end break end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taPoLinePost  @I_vPOTYPE,  @I_vPONUMBER,  @I_vDOCDATE,  @I_vVENDORID,  @I_vLOCNCODE,  @I_vVNDITNUM,  @I_vITEMNMBR,  @I_vQUANTITY,  @I_vQTYCANCE,  @I_vFREEONBOARD,  @I_vREQSTDBY,  @I_vCOMMNTID,  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vREQDATE,  @I_vRELEASEBYDATE,  @I_vPRMDATE,  @I_vPRMSHPDTE,  @I_vNONINVEN,  @I_vIVIVINDX,  @I_vInventoryAccount,  @I_vITEMDESC,  @I_vUNITCOST,  @I_vVNDITDSC,  @I_vUOFM,  @I_vPurchase_IV_Item_Taxable,  @I_vPurchase_Item_Tax_Schedu,  @I_vPurchase_Site_Tax_Schedu,  @I_vBSIVCTTL,  @I_vTAXAMNT,  @I_vBCKTXAMT,  @I_vLanded_Cost_Group_ID,  @I_vPLNNDSPPLID,  @I_vSHIPMTHD,  @I_vBackoutTradeDiscTax,  @I_vPOLNESTA,  @I_vCMMTTEXT,  @I_vORD,  @I_vCUSTNMBR,  @I_vADRSCODE,  @I_vCMPNYNAM,  @I_vCONTACT,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCCode,  @I_vCOUNTRY,  @I_vPHONE1,  @I_vPHONE2,  @I_vPHONE3,  @I_vFAX,  @I_vPrint_Phone_NumberGB,  @I_vCURNCYID,  @I_vProjNum,  @I_vCostCatID,  @I_vLineNumber,  @I_vUpdateIfExists,  @I_vNOTETEXT,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 692    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1286    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPoLine] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[zDP_GL20000UN_1] (@BS int, @JRNENTRY int, @RCTRXSEQ numeric(19,5), @ACTINDX int, @TRXDATE datetime, @PERIODID smallint, @JRNENTRY_RS int, @RCTRXSEQ_RS numeric(19,5), @ACTINDX_RS int, @TRXDATE_RS datetime, @PERIODID_RS smallint, @JRNENTRY_RE int, @RCTRXSEQ_RE numeric(19,5), @ACTINDX_RE int, @TRXDATE_RE datetime, @PERIODID_RE smallint) AS /* 14.00.0084.000 */ set nocount on IF @JRNENTRY_RS IS NULL BEGIN SELECT TOP 25  OPENYEAR, JRNENTRY, RCTRXSEQ, SOURCDOC, REFRENCE, DSCRIPTN, TRXDATE, TRXSORCE, ACTINDX, POLLDTRX, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXTYP, ORCTRNUM, ORMSTRID, ORMSTRNM, ORDOCNUM, ORPSTDDT, ORTRXSRC, OrigDTASeries, OrigSeqNum, SEQNUMBR, DTA_GL_Status, DTA_Index, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, NOTEINDX, ICTRX, ORCOMID, ORIGINJE, PERIODID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, DOCDATE, PSTGNMBR, PPSGNMBR, DENXRATE, MCTRXSTT, CorrespondingUnit, VOIDED, Back_Out_JE, Back_Out_JE_Year, Correcting_JE, Correcting_JE_Year, Original_JE, Original_JE_Seq_Num, Original_JE_Year, Ledger_ID, Adjustment_Transaction, APRVLUSERID, APPRVLDT, DEX_ROW_TS, DEX_ROW_ID FROM .GL20000 WHERE ( JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX = @ACTINDX AND TRXDATE = @TRXDATE AND PERIODID > @PERIODID OR JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX = @ACTINDX AND TRXDATE > @TRXDATE OR JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX > @ACTINDX OR JRNENTRY = @JRNENTRY AND RCTRXSEQ > @RCTRXSEQ OR JRNENTRY > @JRNENTRY ) ORDER BY JRNENTRY ASC, RCTRXSEQ ASC, ACTINDX ASC, TRXDATE ASC, PERIODID ASC, DEX_ROW_ID ASC END ELSE IF @JRNENTRY_RS = @JRNENTRY_RE BEGIN SELECT TOP 25  OPENYEAR, JRNENTRY, RCTRXSEQ, SOURCDOC, REFRENCE, DSCRIPTN, TRXDATE, TRXSORCE, ACTINDX, POLLDTRX, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXTYP, ORCTRNUM, ORMSTRID, ORMSTRNM, ORDOCNUM, ORPSTDDT, ORTRXSRC, OrigDTASeries, OrigSeqNum, SEQNUMBR, DTA_GL_Status, DTA_Index, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, NOTEINDX, ICTRX, ORCOMID, ORIGINJE, PERIODID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, DOCDATE, PSTGNMBR, PPSGNMBR, DENXRATE, MCTRXSTT, CorrespondingUnit, VOIDED, Back_Out_JE, Back_Out_JE_Year, Correcting_JE, Correcting_JE_Year, Original_JE, Original_JE_Seq_Num, Original_JE_Year, Ledger_ID, Adjustment_Transaction, APRVLUSERID, APPRVLDT, DEX_ROW_TS, DEX_ROW_ID FROM .GL20000 WHERE JRNENTRY = @JRNENTRY_RS AND RCTRXSEQ BETWEEN @RCTRXSEQ_RS AND @RCTRXSEQ_RE AND ACTINDX BETWEEN @ACTINDX_RS AND @ACTINDX_RE AND TRXDATE BETWEEN @TRXDATE_RS AND @TRXDATE_RE AND PERIODID BETWEEN @PERIODID_RS AND @PERIODID_RE AND ( JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX = @ACTINDX AND TRXDATE = @TRXDATE AND PERIODID > @PERIODID OR JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX = @ACTINDX AND TRXDATE > @TRXDATE OR JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX > @ACTINDX OR JRNENTRY = @JRNENTRY AND RCTRXSEQ > @RCTRXSEQ OR JRNENTRY > @JRNENTRY ) ORDER BY JRNENTRY ASC, RCTRXSEQ ASC, ACTINDX ASC, TRXDATE ASC, PERIODID ASC, DEX_ROW_ID ASC END ELSE BEGIN SELECT TOP 25  OPENYEAR, JRNENTRY, RCTRXSEQ, SOURCDOC, REFRENCE, DSCRIPTN, TRXDATE, TRXSORCE, ACTINDX, POLLDTRX, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXTYP, ORCTRNUM, ORMSTRID, ORMSTRNM, ORDOCNUM, ORPSTDDT, ORTRXSRC, OrigDTASeries, OrigSeqNum, SEQNUMBR, DTA_GL_Status, DTA_Index, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, NOTEINDX, ICTRX, ORCOMID, ORIGINJE, PERIODID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, DOCDATE, PSTGNMBR, PPSGNMBR, DENXRATE, MCTRXSTT, CorrespondingUnit, VOIDED, Back_Out_JE, Back_Out_JE_Year, Correcting_JE, Correcting_JE_Year, Original_JE, Original_JE_Seq_Num, Original_JE_Year, Ledger_ID, Adjustment_Transaction, APRVLUSERID, APPRVLDT, DEX_ROW_TS, DEX_ROW_ID FROM .GL20000 WHERE JRNENTRY BETWEEN @JRNENTRY_RS AND @JRNENTRY_RE AND RCTRXSEQ BETWEEN @RCTRXSEQ_RS AND @RCTRXSEQ_RE AND ACTINDX BETWEEN @ACTINDX_RS AND @ACTINDX_RE AND TRXDATE BETWEEN @TRXDATE_RS AND @TRXDATE_RE AND PERIODID BETWEEN @PERIODID_RS AND @PERIODID_RE AND ( JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX = @ACTINDX AND TRXDATE = @TRXDATE AND PERIODID > @PERIODID OR JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX = @ACTINDX AND TRXDATE > @TRXDATE OR JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND ACTINDX > @ACTINDX OR JRNENTRY = @JRNENTRY AND RCTRXSEQ > @RCTRXSEQ OR JRNENTRY > @JRNENTRY ) ORDER BY JRNENTRY ASC, RCTRXSEQ ASC, ACTINDX ASC, TRXDATE ASC, PERIODID ASC, DEX_ROW_ID ASC END set nocount off 
GO
GRANT EXECUTE ON  [dbo].[zDP_GL20000UN_1] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_METER_Post_Serial_Readings] (  @EquipID                integer,  @Meter1                 integer,  @Meter2                 integer,  @Meter3                 integer,  @Meter4                 integer,  @Meter5                 integer,  @Rep1                   tinyint,  @Rep2                   tinyint,  @Rep3                   tinyint,  @Rep4                   tinyint,  @Rep5                   tinyint,  @Date                   datetime,  @User                   char(15),  @From                   char(31),  @SourceModule           char(3),  @SourceDocument         varchar(255) )  AS  DECLARE @srvrectype             int ,   @callnbr                varchar(10),  @SerialNumber           char(21),   @ItemNumber             char(31),   @PrevMeter1             integer,   @PrevMeter2             integer,   @PrevMeter3             integer,   @PrevMeter4             integer,   @PrevMeter5             integer,   @Daily1                 numeric(19,5),   @Daily2                 numeric(19,5),  @Daily3                 numeric(19,5),   @Daily4                 numeric(19,5),   @Daily5                 numeric(19,5),   @Base1                  integer,   @Base2                  integer,  @Base3                  integer,   @Base4                  integer,   @Base5                  integer,   @ContractNumber         char(11),   @LineNumber             numeric(19,5),   @ContStartDate          datetime,   @Delta1                 integer,   @Delta2                 integer,   @Delta3                 integer,   @Delta4                 integer,   @Delta5                 integer,   @Failures               integer,  @LIABTYPE               integer,   @BILLAMOUNT             numeric(19,2),   @LIABILITY              integer,   @LastPostedDate1        datetime,  @LastPostedDate2        datetime,   @LastPostedDate3        datetime,   @LastPostedDate4        datetime,   @LastPostedDate5        datetime,   @NEXTLine               integer,  @InstallDate            datetime DECLARE @I_sRateCalcMethod      smallint ,            @I_sViewMode            smallint,                  @I_nExchangeRate        numeric(15,7),          @I_nDenomExchangeRate   numeric(15,7),      @I_sMCTrxState          smallint,                @I_sDecimalPlaces       smallint,              @O_iErrorState          int,   @TransactionTime        datetime,   @PostRevenue            tinyint select @SerialNumber = SERLNMBR,   @ItemNumber = ITEMNMBR,  @InstallDate = INSTDTE from SVC00300  where EQUIPID = @EquipID  IF @SourceModule = 'CL' BEGIN  select @srvrectype = CONVERT(integer,SUBSTRING(@SourceDocument,1,1)),  @callnbr = SUBSTRING(@SourceDocument,3,11)  IF @srvrectype is not null and @callnbr is not null  select @ContractNumber =  CONTNBR,  @LineNumber = SVC_Contract_Line_SEQ  from SVC00200 WITH (NOLOCK)   where SRVRECTYPE = @srvrectype and  CALLNBR = @callnbr END  select @TransactionTime = convert(char(12),getdate(),108)  EXEC SVC_METER_CheckReadings 1, @EquipID,@Date, @Meter1,@Rep1,@InstallDate,@ContractNumber,@LineNumber,  @Base1 OUTPUT,   @Daily1 OUTPUT,   @Delta1 OUTPUT,  @PrevMeter1 OUTPUT,  @LastPostedDate1 OUTPUT EXEC SVC_METER_CheckReadings 2, @EquipID,@Date, @Meter2,@Rep2,@InstallDate,@ContractNumber,@LineNumber,  @Base2 OUTPUT,   @Daily2 OUTPUT,   @Delta2 OUTPUT,  @PrevMeter2 OUTPUT,  @LastPostedDate2 OUTPUT EXEC SVC_METER_CheckReadings 3, @EquipID,@Date, @Meter3,@Rep3,@InstallDate,@ContractNumber,@LineNumber,  @Base3 OUTPUT,  @Daily3 OUTPUT,   @Delta3 OUTPUT,  @PrevMeter3 OUTPUT,  @LastPostedDate3 OUTPUT EXEC SVC_METER_CheckReadings 4, @EquipID,@Date, @Meter4,@Rep4,@InstallDate,@ContractNumber,@LineNumber,  @Base4 OUTPUT,  @Daily4 OUTPUT,   @Delta4 OUTPUT,  @PrevMeter4 OUTPUT,  @LastPostedDate4 OUTPUT EXEC SVC_METER_CheckReadings 5, @EquipID,@Date, @Meter5,@Rep5,@InstallDate,@ContractNumber,@LineNumber,  @Base5 OUTPUT,   @Daily5 OUTPUT,   @Delta5 OUTPUT,  @PrevMeter5 OUTPUT,  @LastPostedDate5 OUTPUT  select @NEXTLine = max(LNITMSEQ) from SVC00301 WITH (NOLOCK) where EQUIPID = @EquipID select @NEXTLine = isnull(@NEXTLine,0) + 1 insert SVC00301 values (@EquipID,@NEXTLine,@SerialNumber,@ItemNumber,@Meter1,@Meter2,@Meter3,@Date,0,@User,  @Meter1,@Meter2,@Meter3,@Meter4,@Meter5,@Daily1,@Daily2,@Daily3,@Daily4,@Daily5,  @Rep1,@Rep2,@Rep3,@Rep4,@Rep5,@From,@Delta1,@Delta2,@Delta3,@Delta4,@Delta5)  select @Failures = count(*) from SVC00200 H WITH (NOLOCK) inner join SVC00202 E WITH (NOLOCK) on H.CALLNBR = E.CALLNBR and H.SRVRECTYPE = E.SRVRECTYPE where E.EQPLINE=1 and H.COMPDTE > '1/1/1990 0:0:0' and H.SRVRECTYPE > 1 and H.Callback = 0 and E.EQUIPID = @EquipID  IF @Failures = 0   select @Failures = 1  update SVC00300 set MTBFs_1 = Meter_Deltas_1 / @Failures,  MTBFs_2 = Meter_Deltas_2 / @Failures,  MTBFs_3 = Meter_Deltas_3 / @Failures,  MTBFs_4 = Meter_Deltas_4 / @Failures,  MTBFs_5 = Meter_Deltas_5 / @Failures where EQUIPID = @EquipID  DECLARE Contract_CURSOR CURSOR FOR select Lines.CONTNBR, Lines.LNSEQNBR,Lines.SVC_Liability_Type,Lines.BILCYC, Lines.STRTDATE,Lines.RATECALC,Lines.XCHGRATE,  Lines.DENXRATE,Lines.MCTRXSTT,Lines.DECPLACS  from SVC00601 Lines WITH (NOLOCK) INNER JOIN   SVC00607 Readings WITH (NOLOCK) on (Readings.CONSTS = Lines.CONSTS and Readings.CONTNBR = Lines.CONTNBR and Readings.LNSEQNBR = Lines.LNSEQNBR)  where Lines.EQUIPID = @EquipID and Lines.CONSTS = 2 and   Lines.STRTDATE <= @Date and @Date <= Lines.ENDDATE  OPEN Contract_CURSOR FETCH NEXT from Contract_CURSOR INTO @ContractNumber,@LineNumber,@LIABTYPE , @LIABILITY,@ContStartDate,  @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,@I_sMCTrxState,  @I_sDecimalPlaces WHILE (@@FETCH_STATUS <> -1)  BEGIN  IF @LIABILITY <> 1 and @LIABTYPE = 5  select @PostRevenue = 1  ELSE  select @PostRevenue = 0  IF @Base1 = 0  BEGIN  exec SVC_METER_PostBase 1,@EquipID,@Meter1,@LastPostedDate1,@Date,@TransactionTime, @ContractNumber, @LineNumber,  @ContStartDate, @PrevMeter1,@SourceModule, @SourceDocument,  @PostRevenue, @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,   @I_sMCTrxState,@I_sDecimalPlaces   END  IF @Base2 = 0  BEGIN  exec SVC_METER_PostBase 2,@EquipID,@Meter2,@LastPostedDate2, @Date,@TransactionTime, @ContractNumber, @LineNumber,  @ContStartDate, @PrevMeter2,@SourceModule, @SourceDocument,  @PostRevenue, @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,   @I_sMCTrxState,@I_sDecimalPlaces   END  IF @Base3 = 0  BEGIN  exec SVC_METER_PostBase 3,@EquipID,@Meter3,@LastPostedDate3,@Date,@TransactionTime, @ContractNumber, @LineNumber,  @ContStartDate, @PrevMeter3,@SourceModule, @SourceDocument,  @PostRevenue, @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,   @I_sMCTrxState,@I_sDecimalPlaces   END  IF @Base4 = 0  BEGIN  exec SVC_METER_PostBase 4,@EquipID,@Meter4,@LastPostedDate4,@Date,@TransactionTime, @ContractNumber, @LineNumber,  @ContStartDate, @PrevMeter4,@SourceModule, @SourceDocument,  @PostRevenue, @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,   @I_sMCTrxState,@I_sDecimalPlaces   END  IF @Base5 = 0  BEGIN  exec SVC_METER_PostBase 5,@EquipID,@Meter5,@LastPostedDate5, @Date,@TransactionTime, @ContractNumber, @LineNumber,  @ContStartDate, @PrevMeter5,@SourceModule, @SourceDocument,  @PostRevenue, @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,   @I_sMCTrxState,@I_sDecimalPlaces   END  FETCH NEXT from Contract_CURSOR INTO @ContractNumber,@LineNumber,@LIABTYPE , @LIABILITY,@ContStartDate,  @I_sRateCalcMethod,@I_nExchangeRate,@I_nDenomExchangeRate,@I_sMCTrxState,  @I_sDecimalPlaces END DEALLOCATE Contract_CURSOR return    
GO
GRANT EXECUTE ON  [dbo].[SVC_METER_Post_Serial_Readings] TO [DYNGRP]
GO

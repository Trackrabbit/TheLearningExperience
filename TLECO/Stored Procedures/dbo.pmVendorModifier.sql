SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmVendorModifier]   @I_charStartVendor char(30),   @I_charEndVendor char(30),   @O_iErrorState  int = NULL  output  as  set transaction isolation level read uncommitted set nocount on  declare   @DBNAME   char(25),  @DBID   smallint,  @VENDORID  char(255),  @tTransaction tinyint,  @tLoop tinyint,  @iStatus int,  @cStartVendor char(50),  @cEndVendor char(50)  select @DBNAME = DB_NAME() select @DBID = CMPANYID from DYNAMICS..SY01500 where INTERID = @DBNAME  exec @iStatus = smFormatStringsForExecs  @I_vInputString  = @I_charStartVendor,  @O_cOutputString = @cStartVendor output,  @O_iErrorState  = @O_iErrorState output  if @iStatus <> 0 or @O_iErrorState <> 0  begin  set @O_iErrorState = 90  return end  exec @iStatus = smFormatStringsForExecs  @I_vInputString  = @I_charEndVendor,  @O_cOutputString = @cEndVendor output,  @O_iErrorState  = @O_iErrorState output  if @iStatus <> 0 or @O_iErrorState <> 0  begin  set @O_iErrorState = 91  return end  select  @O_iErrorState   = 0 if @@trancount = 0   begin  select @tTransaction = 1  begin transaction end  while ( @tLoop is NULL ) begin  select @tLoop = 1   exec @iStatus = pmVendorModifierPre  @I_charStartVendor output,   @I_charEndVendor output,   @cStartVendor output,  @cEndVendor output,  @O_iErrorState  output  if @O_iErrorState <> 0   begin  break  end   if  @I_charStartVendor is NULL or  @I_charEndVendor is NULL or  @cStartVendor is NULL or  @cEndVendor is NULL   begin  select @O_iErrorState = 1    break  end   if exists (select * from sysobjects where id = object_id('dbo.taVendorInsert'))  alter table PM00200 disable trigger taVendorInsert  if @@error <> 0   begin  select @O_iErrorState = 2   break  end    if exists (select * from sysobjects where id = object_id('dbo.taVendorAddressInsert'))  alter table PM00300 disable trigger taVendorAddressInsert  if @@error <> 0   begin  select @O_iErrorState = 3   break  end    declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set VENDORID =' + rtrim(@cEndVendor) +  ' where VENDORID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'VENDORID'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin   exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 4   break  end   FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set CustomerVendor_ID =' + rtrim(@cEndVendor) +  ' where SERIES = 4 and CustomerVendor_ID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'CustomerVendor_ID'  and o.name <> 'EDCVAT26'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin   exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 5   break  end   FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set VNDID =' + rtrim(@cEndVendor) +  ' where VNDID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'VNDID'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin   exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 6   break  end   FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set LCVENDORID =' + rtrim(@cEndVendor) +  ' where LCVENDORID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'LCVENDORID'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin   exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 7   break  end   FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   update a set ORMSTRID = @I_charEndVendor from GL10001 a, GL10000 b  where  a.ORMSTRID = @I_charStartVendor and  a.JRNENTRY = b.JRNENTRY and  b.SERIES = 4  if @@error <> 0   begin  select @O_iErrorState = 8   break  end    update GL20000 set ORMSTRID = @I_charEndVendor where ORMSTRID = @I_charStartVendor and SERIES = 4  if @@error <> 0   begin  select @O_iErrorState = 9   break  end   update GL30000 set ORMSTRID = @I_charEndVendor where ORMSTRID = @I_charStartVendor and SERIES = 4  if @@error <> 0   begin  select @O_iErrorState = 10   break  end   update PJOURNAL set ORMSTRID = @I_charEndVendor where ORMSTRID = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 11   break  end   update IV30300 set CUSTNMBR = @I_charEndVendor where CUSTNMBR = @I_charStartVendor and HSTMODUL = 'POP'  if @@error <> 0   begin  select @O_iErrorState = 35   break  end   if exists (select * from sysobjects where id = object_id('dbo.ME234602')  and sysstat & 0xf = 3)  begin  update ME234602 set ORMSTRID = @I_charEndVendor where ORMSTRID = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 12   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.COM00700')  and sysstat & 0xf = 3)  begin  update COM00700 set ENDVENDR = @I_charEndVendor where ENDVENDR = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 112   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA50105')  and sysstat & 0xf = 3)  begin  update PA50105 set CustVenID = @I_charEndVendor where CustVenID = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 13   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA01901')  and sysstat & 0xf = 3)  begin  update PA01901 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and (PATranType = 4 or PATranType = 5)  if @@error <> 0   begin  select @O_iErrorState = 14   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA11800')  and sysstat & 0xf = 3)  begin  update PA11800 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and PATU = 4   if @@error <> 0   begin  select @O_iErrorState = 15   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA11801')  and sysstat & 0xf = 3)  begin  update PA11801 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and PATU = 4   if @@error <> 0   begin  select @O_iErrorState = 16   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA13202')  and sysstat & 0xf = 3)  begin  update PA13202 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and PATU = 4   if @@error <> 0   begin  select @O_iErrorState = 17   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA23203')  and sysstat & 0xf = 3)  begin  update PA23203 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and PATU = 4   if @@error <> 0   begin  select @O_iErrorState = 18   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA33203')  and sysstat & 0xf = 3)  begin  update PA33203 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and PATU = 4   if @@error <> 0   begin  select @O_iErrorState = 19   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA43001')  and sysstat & 0xf = 3)  begin  update PA43001 set PArecordid = @I_charEndVendor where PArecordid = @I_charStartVendor and PAsfid = 25   if @@error <> 0   begin  select @O_iErrorState = 20   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PP100100')  and sysstat & 0xf = 3)  begin  update PP100100 set CUSTVNDR = @I_charEndVendor where CUSTVNDR = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 20   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA01901')  and sysstat & 0xf = 3)   begin  if exists( select 1 from PA01901 (nolock) where PACOSTOWNER = @I_charStartVendor and (PATranType = 4 or PATranType = 5) )  begin  update PA01901 set PACOSTOWNER = @I_charEndVendor where PACOSTOWNER = @I_charStartVendor and (PATranType = 4 or PATranType = 5)  if @@error <> 0   begin  select @O_iErrorState = 21   break  end   exec uprEmployeeModifier  @I_charStartEmployee = @I_charStartVendor,   @I_charEndEmployee = @I_charEndVendor,  @O_iErrorState = @O_iErrorState output  if @O_iErrorState <> 0   begin  select @O_iErrorState = 22   break  end  end  end   update SY01200 set Master_ID = @I_charEndVendor where Master_ID = @I_charStartVendor and Master_Type = 'VEN'  if @@error <> 0   begin  select @O_iErrorState = 23   break  end   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set PRIMVNDR =' + rtrim(@cEndVendor) +  ' where PRIMVNDR = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PRIMVNDR'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 24   break  end    FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set STVNDRID =' + rtrim(@cEndVendor) +  ' where STVNDRID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'STVNDRID'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 25   break  end   FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set ENDVNDID =' + rtrim(@cEndVendor) +  ' where ENDVNDID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'ENDVNDID'  order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 26   break  end    FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update DYNAMICS..['+o.name+'] set ReqVendor = ' + rtrim(@cEndVendor) +  ' where ReqVendor = ' + rtrim(@cStartVendor) + ' and CompanyID = ' + str(@DBID)   from DYNAMICS..sysobjects o, DYNAMICS..syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'ReqVendor'   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 27   break  end   FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break   declare ta_VCCursor insensitive CURSOR for select 'update ['+o.name+'] set aaVendID='+rtrim(@cEndVendor) +  ' where aaVendID='+rtrim(@cStartVendor)  from sysobjects o, syscolumns c  where o.id=c.id  and o.type='U'  and c.name='aaVendID'   order by o.name  set nocount on  OPEN ta_VCCursor  FETCH NEXT FROM ta_VCCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@VENDORID)  if @@error <> 0  begin  select @O_iErrorState=88   break  end  FETCH NEXT FROM ta_VCCursor INTO @VENDORID  end  DEALLOCATE ta_VCCursor   if @O_iErrorState <> 0  break   update CM20200 set CMLinkID = @I_charEndVendor where CMLinkID = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 28   break  end   update IV00102 set LSORDVND = @I_charEndVendor where LSORDVND = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 29   break  end   update MC10000 set StartCustOrVendID = @I_charEndVendor where StartCustOrVendID = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 30   break  end   update MC10000 set EndCustOrVendID = @I_charEndVendor where EndCustOrVendID = @I_charStartVendor  if @@error <> 0   begin  select @O_iErrorState = 31   break  end   if @O_iErrorState <> 0  break   declare ta_VMCursor insensitive CURSOR for select 'update ['+o.name+'] set NAME =' + rtrim(@cEndVendor) +   ' where NAME = ' + rtrim(@cStartVendor)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'NAME'  and (o.name = 'PO010300'   or   o.name = 'PO020000')   order by o.name   set nocount on  OPEN ta_VMCursor  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@VENDORID)  if @@error <> 0   begin  select @O_iErrorState = 32   break  end  FETCH NEXT FROM ta_VMCursor INTO @VENDORID  end  DEALLOCATE ta_VMCursor   if @O_iErrorState <> 0  break  end  if exists (select * from sysobjects where id = object_id('dbo.taVendorInsert')) alter table PM00200 enable trigger taVendorInsert if @@error <> 0  begin  select @O_iErrorState = 33  end  if exists (select * from sysobjects where id = object_id('dbo.taVendorAddressInsert')) alter table PM00300 enable trigger taVendorAddressInsert if @@error <> 0  begin  select @O_iErrorState = 34  end   exec @iStatus = pmVendorModifierPost  @I_charStartVendor ,   @I_charEndVendor ,   @cStartVendor ,  @cEndVendor ,  @O_iErrorState  if @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1 begin  commit transaction end  return    
GO
GRANT EXECUTE ON  [dbo].[pmVendorModifier] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateCheckbook] @I_vCHEKBKID char(15),     @I_vDSCRIPTN char(30),     @I_vBANKID char(15) = '',     @I_vCURNCYID char(15),     @I_vACTNUMST char(75),     @I_vBNKACTNM char(15) = '',     @I_vNXTCHNUM char(20) = '00000000000000000001',  @I_vNext_Deposit_Number char(20)='00000000000000000001', @I_vINACTIVE tinyint = 0,     @I_vMXCHDLR numeric(19,5) = 0,    @I_vDUPCHNUM tinyint = 0,     @I_vOVCHNUM1 tinyint = 1,     @I_vLOCATNID char(15) = '',     @I_vCMUSRDF1 char(20) = '',     @I_vCMUSRDF2 char(20) = '',     @I_vLast_Reconciled_Date  datetime = '',   @I_vLast_Reconciled_Balance numeric(19,5) = 0,   @I_vDDACTNUM char(17) = '',     @I_vDDINDNAM char(22) = '',     @I_vDDTRANS char(2) = 27,      @I_vPaymentRateTypeID char(15) = '',     @I_vDepositRateTypeID char(15) = '',    @I_vRequesterTrx smallint = 0,     @I_vUSRDEFND1  char(50) = '',         @I_vUSRDEFND2  char(50) = '',         @I_vUSRDEFND3  char(50) = '',         @I_vUSRDEFND4  varchar(8000) = '',        @I_vUSRDEFND5  varchar(8000) = '',        @O_iErrorState int output,     @oErrString  varchar(255) output     with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @DYDEPCLR int,      @NOTEINDX numeric(19,5),    @XCDMCHPW char(10),     @CURRBLNC numeric(19,5),    @Recond tinyint,     @Reconcile_In_Progress numeric(19,5),    @Deposit_In_Progress char(20),    @CHBKPSWD char(10),     @CURNCYPD char(15),      @CRNCYRCD char(15),     @ADPVADLR numeric(19,5),    @ADPVAPWD char(10),     @DYCHTCLR smallint,     @CMPANYID smallint,     @CHKBKTYP smallint,     @iGetNextNoteIdxErrState int,  @ACTINDX int,      @iAddCodeErrState int,     @iStatus int,       @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @ACTIVE tinyint,  @ACCTTYPE smallint,  @iError int      select  @DYDEPCLR = 0,  @XCDMCHPW = '',  @CURRBLNC = 0,  @Recond = 0,   @Reconcile_In_Progress = 0,  @Deposit_In_Progress = '',  @CHBKPSWD = '',  @CURNCYPD = '',  @CRNCYRCD = '',  @ADPVADLR = 0,  @ADPVAPWD = '',  @DYCHTCLR = 0,  @CMPANYID = 0,  @CHKBKTYP = 0,   @ACTINDX = 0,   @iStatus = 0,  @iAddCodeErrState =0,  @iCustomState = 0,  @O_oErrorState = 0,  @ACTIVE = 0,  @ACCTTYPE = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateCheckbookPre  @I_vCHEKBKID output,  @I_vDSCRIPTN output,  @I_vBANKID output,  @I_vCURNCYID output,  @I_vACTNUMST output,  @I_vBNKACTNM output,  @I_vNXTCHNUM output,  @I_vNext_Deposit_Number output,  @I_vINACTIVE output,  @I_vMXCHDLR output,  @I_vDUPCHNUM output,  @I_vOVCHNUM1 output,  @I_vLOCATNID output,  @I_vCMUSRDF1 output,  @I_vCMUSRDF2 output,  @I_vLast_Reconciled_Date  output,  @I_vLast_Reconciled_Balance output,  @I_vDDACTNUM output,  @I_vDDINDNAM output,  @I_vDDTRANS output,  @I_vPaymentRateTypeID output,  @I_vDepositRateTypeID output,  @I_vRequesterTrx output,  @I_vUSRDEFND1  output,  @I_vUSRDEFND2  output,  @I_vUSRDEFND3  output,  @I_vUSRDEFND4  output,  @I_vUSRDEFND5  output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1392     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vCHEKBKID is null or  @I_vDSCRIPTN is null or  @I_vBANKID is null or  @I_vCURNCYID is null or  @I_vACTNUMST is null or  @I_vBNKACTNM is null or  @I_vNXTCHNUM is null or  @I_vNext_Deposit_Number is null or  @I_vINACTIVE is null or  @I_vMXCHDLR is null or  @I_vDUPCHNUM is null or  @I_vOVCHNUM1 is null or  @I_vLOCATNID is null or  @I_vCMUSRDF1 is null or  @I_vCMUSRDF2 is null or  @I_vLast_Reconciled_Date  is null or  @I_vLast_Reconciled_Balance is null or  @I_vDDACTNUM is null or  @I_vDDINDNAM is null or  @I_vDDTRANS is null or  @I_vPaymentRateTypeID is null or  @I_vDepositRateTypeID is null or   @I_vRequesterTrx is null or   @I_vUSRDEFND1  is null or  @I_vUSRDEFND2  is null or  @I_vUSRDEFND3  is null or  @I_vUSRDEFND4  is null or  @I_vUSRDEFND5  is null   ) begin  select @O_iErrorState = 1508    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vBANKID = UPPER(@I_vBANKID),   @I_vLOCATNID = UPPER(@I_vLOCATNID),  @I_vPaymentRateTypeID = UPPER(@I_vPaymentRateTypeID),  @I_vDepositRateTypeID = UPPER(@I_vDepositRateTypeID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 3385   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vINACTIVE < 0 or @I_vINACTIVE > 1) begin  select @O_iErrorState = 1514     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vDUPCHNUM < 0 or @I_vDUPCHNUM > 1) begin  select @O_iErrorState = 1513     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vOVCHNUM1 < 0 or @I_vOVCHNUM1 > 1) begin  select @O_iErrorState = 1512     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vCHEKBKID = '') begin  select @O_iErrorState = 1511    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vDSCRIPTN = '') begin  select @O_iErrorState = 1510    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vBANKID <> '' ) begin  if not exists(select 1 from SY04100 (nolock) where BANKID = @I_vBANKID)  begin  select @O_iErrorState = 6300     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCURNCYID = '') begin  select @O_iErrorState = 1509     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vCURNCYID <> '') begin  if not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID)  begin  select @O_iErrorState = 1398     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end     if not exists(select 1 from DYNAMICS..MC60100 (nolock) where CURNCYID = @I_vCURNCYID and CMPANYID = @CMPANYID and INACTIVE = 0)  begin  select @O_iErrorState = 1394     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vACTNUMST = '') begin  select @O_iErrorState = 1397     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vACTNUMST <> '') begin  select @ACTINDX = isnull(ACTINDX,0) from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST   if (@ACTINDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @ACTINDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 9542     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 9543     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 1396     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if not exists(select 1 from MC40000 (nolock) where FUNLCURR = @I_vCURNCYID) begin  if (@ACTINDX <> 0)  begin   if not exists(select 1 from MC00200 (nolock) where CURNCYID = @I_vCURNCYID and ACTINDX = @ACTINDX)  begin  select @O_iErrorState = 1395     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vDDTRANS <> '27' and @I_vDDTRANS <> '37') begin  select @O_iErrorState = 1399     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vLOCATNID <> '') begin  if not exists(select 1 from SY00600 (nolock) where LOCATNID = @I_vLOCATNID)  begin  select @O_iErrorState = 1400     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vPaymentRateTypeID <> '') begin  if not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vPaymentRateTypeID)  begin  select @O_iErrorState = 1401     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vDepositRateTypeID <> '') begin  if not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vDepositRateTypeID)  begin  select @O_iErrorState = 1402     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vMXCHDLR < 0 ) begin  select @O_iErrorState = 5449      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3696     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (not exists (select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID))  begin  insert into CM00100  (  CHEKBKID,  DSCRIPTN,  BANKID,  CURNCYID,  ACTINDX,  BNKACTNM,  NXTCHNUM,  Next_Deposit_Number,  INACTIVE,  DYDEPCLR,  XCDMCHPW,  MXCHDLR,  DUPCHNUM,  OVCHNUM1,  LOCATNID,  NOTEINDX,  CMUSRDF1,  CMUSRDF2,  Last_Reconciled_Date,  Last_Reconciled_Balance,  CURRBLNC,  CREATDDT,  MODIFDT,  Recond,  Reconcile_In_Progress,  Deposit_In_Progress,  CHBKPSWD,  CURNCYPD,  CRNCYRCD,  ADPVADLR,  ADPVAPWD,  DYCHTCLR,  CMPANYID,  CHKBKTYP,  DDACTNUM,  DDINDNAM,  DDTRANS,  PaymentRateTypeID,  DepositRateTypeID,  CashInTransAcctIdx  )  select  @I_vCHEKBKID,      @I_vDSCRIPTN,      @I_vBANKID,      @I_vCURNCYID,      @ACTINDX,      @I_vBNKACTNM,      @I_vNXTCHNUM,      @I_vNext_Deposit_Number,    @I_vINACTIVE,      @DYDEPCLR,      @XCDMCHPW,      @I_vMXCHDLR,      @I_vDUPCHNUM,      @I_vOVCHNUM1,      @I_vLOCATNID,      @NOTEINDX,      @I_vCMUSRDF1,      @I_vCMUSRDF2,      @I_vLast_Reconciled_Date,    @I_vLast_Reconciled_Balance,    @CURRBLNC,      convert(varchar(12),getdate()),     convert(varchar(12),getdate()),     @Recond,      @Reconcile_In_Progress,     @Deposit_In_Progress,     @CHBKPSWD,      @CURNCYPD,      @CRNCYRCD,      @ADPVADLR,      @ADPVAPWD,      @DYCHTCLR,      @CMPANYID,      @CHKBKTYP,      @I_vDDACTNUM,      @I_vDDINDNAM,      @I_vDDTRANS,      @I_vPaymentRateTypeID,     @I_vDepositRateTypeID,     0          if (@@error <> 0)  begin  select @O_iErrorState = 1403    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 1390    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateCheckbookPost  @I_vCHEKBKID,  @I_vDSCRIPTN,  @I_vBANKID,  @I_vCURNCYID,  @I_vACTNUMST,  @I_vBNKACTNM,  @I_vNXTCHNUM,  @I_vNext_Deposit_Number,  @I_vINACTIVE,  @I_vMXCHDLR,  @I_vDUPCHNUM,  @I_vOVCHNUM1,  @I_vLOCATNID,  @I_vCMUSRDF1,  @I_vCMUSRDF2,  @I_vLast_Reconciled_Date,  @I_vLast_Reconciled_Balance,  @I_vDDACTNUM,  @I_vDDINDNAM,  @I_vDDTRANS,  @I_vPaymentRateTypeID,  @I_vDepositRateTypeID,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1506    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateCheckbook] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[pmPopulateEditCheckBatchPrepaymentTemp]  @I_cDebitTemp char(40) = NULL,  @I_cBatchSource char(15) = NULL,  @I_cBatchNumber char(15) = NULL,  @I_tFuncBatch tinyint=NULL,  @I_cBatchCurrencyID char(15) = NULL,  @I_cFunctionalCurrencyID char(15) = NULL,  @I_cVendorID char(15) = NULL,  @I_tPMWorkflowEnabled tinyint=NULL,  @O_iErrorState int          = NULL output as  declare  @cBatchNumber char(32),  @cBatchSource char(32),  @cVendorID char(32),  @cBatchCurrencyID char(32),  @cFunctionalCurrencyID char(32),  @cRemittance   char(32),  @iError int,  @iStatus int,  @TRUE int,  @FALSE int  select  @O_iErrorState   = 0,  @iStatus         = 0   if @I_cDebitTemp is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_cVendorID is NULL or  @I_tFuncBatch is NULL or  @I_cBatchCurrencyID is NULL or  @I_cFunctionalCurrencyID is NULL or  @I_tPMWorkflowEnabled is NULL  begin  select @O_iErrorState = 21096  return  end    exec @iStatus = DYNAMICS..smGetConstantInt 'TRUE', @TRUE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantInt 'FALSE', @FALSE output, @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantString 'KEYSOURCE_PM', @cRemittance output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchNumber,  @cBatchNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchSource,  @cBatchSource output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cVendorID,  @cVendorID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchCurrencyID,  @cBatchCurrencyID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cFunctionalCurrencyID,  @cFunctionalCurrencyID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @cRemittance,  @cRemittance output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   exec ('delete ' + @I_cDebitTemp)   if @I_tPMWorkflowEnabled = 0    exec('insert into ' + @I_cDebitTemp + '  select  P.VENDORID,  T.PONUMBER,  T.DOCNUMBR,  P.POTYPE,  P.REQDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   and (P.CURNCYID = ''''  or P.CURNCYID = ' + @cFunctionalCurrencyID + ') then  T.PrepaymentAmount  else  T.OriginatingPrepaymentAmt  end,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   and (P.CURNCYID = ''''  or P.CURNCYID = ' + @cFunctionalCurrencyID + ') then  T.PrepaymentAmount  else  T.OriginatingPrepaymentAmt  end,  0,'''','''',0,0,  '''',  P.CURNCYID,  P.CURRNIDX,   case when exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP  and B.DSTINDX=0)  then 1   when exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP and B.DSTINDX=0) then 1  when exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP  and not exists (select ACTINDX from GL00100 where ACTINDX=B.DSTINDX)) then 1  when not exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)  and T.PrepaymentAccountIndex=0 then 1  when not exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)  and not exists (select ACTINDX from GL00100 where ACTINDX=T.PrepaymentAccountIndex) then 1  when (select SUM(B.CRDTAMNT)-SUM(B.DEBITAMT) from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)<> 0.0 then 1  when (select COUNT(A.BACHNUMB) from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)= 0   and exists(select 1 from PM10300 Q  where  Q.BACHNUMB = ' + @cBatchNumber + '   and Q.BCHSOURC  = ' + @cBatchSource + '   and Q.VENDORID = ' + @cVendorID + '   and Q.PONUMBER = T.PONUMBER) then 1  else  0  end,  case when exists(select 1 from PM10300 Q  where  Q.BACHNUMB = ' + @cBatchNumber + '   and Q.BCHSOURC  = ' + @cBatchSource + '   and Q.VENDORID = ' + @cVendorID + '   and Q.PONUMBER = T.PONUMBER)   then  1  else  0  end,0.0   from POP10100 P, POP10170 T  where T.PONUMBER<>'''' and T.PONUMBER = P.PONUMBER  and P.HOLD=0   and T.PrepaymentSource=0 and T.PYENTTYP=0  and P.VENDORID = ' + @cVendorID + '   and T.PSTGSTUS not in (40,80)  and T.CURNCYID = ' +  @cBatchCurrencyID + '  and T.PONUMBER not in (select PONUMBER from POA40003 where POA_PO_Approval_Status=1)   ')  else   exec('insert into ' + @I_cDebitTemp + '  select  P.VENDORID,  T.PONUMBER,  T.DOCNUMBR,  P.POTYPE,  P.REQDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   and (P.CURNCYID = ''''  or P.CURNCYID = ' + @cFunctionalCurrencyID + ') then  T.PrepaymentAmount  else  T.OriginatingPrepaymentAmt  end,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   and (P.CURNCYID = ''''  or P.CURNCYID = ' + @cFunctionalCurrencyID + ') then  T.PrepaymentAmount  else  T.OriginatingPrepaymentAmt  end,  0,'''','''',0,0,  '''',  P.CURNCYID,  P.CURRNIDX,  case when exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP  and B.DSTINDX=0)  then 1   when exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP and B.DSTINDX=0) then 1  when exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP  and not exists (select ACTINDX from GL00100 where ACTINDX=B.DSTINDX)) then 1  when not exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)  and T.PrepaymentAccountIndex=0 then 1  when not exists(select 1 from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)  and not exists (select ACTINDX from GL00100 where ACTINDX=T.PrepaymentAccountIndex) then 1  when (select SUM(B.CRDTAMNT)-SUM(B.DEBITAMT) from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)<> 0.0 then 1  when (select COUNT(A.BACHNUMB) from PM10300 A, PM10100 B  where   A.BACHNUMB = ' + @cBatchNumber + '   and A.BCHSOURC  = ' + @cBatchSource + '   and A.VENDORID = ' + @cVendorID + '   and A.PONUMBER = T.PONUMBER  and A.VCHRNMBR=B.VCHRNMBR and A.CNTRLTYP=B.CNTRLTYP)= 0   and exists(select 1 from PM10300 Q  where  Q.BACHNUMB = ' + @cBatchNumber + '   and Q.BCHSOURC  = ' + @cBatchSource + '   and Q.VENDORID = ' + @cVendorID + '   and Q.PONUMBER = T.PONUMBER) then 1  else  0  end,  case when exists(select 1 from PM10300 Q  where  Q.BACHNUMB = ' + @cBatchNumber + '   and Q.BCHSOURC  = ' + @cBatchSource + '   and Q.VENDORID = ' + @cVendorID + '   and Q.PONUMBER = T.PONUMBER)   then  1  else  0  end,0.0   from POP10100 P, POP10170 T  where T.PONUMBER<>'''' and T.PONUMBER = P.PONUMBER  and P.HOLD=0  and P.Workflow_Approval_Status in (1,2,4,5,7,8)  and T.PrepaymentSource=0 and T.PYENTTYP=0  and P.VENDORID = ' + @cVendorID + '   and T.PSTGSTUS not in (40,80)  and T.CURNCYID = ' +  @cBatchCurrencyID + '  and T.PONUMBER not in (select PONUMBER from POA40003 where POA_PO_Approval_Status=1)  ')  exec('update ' + @I_cDebitTemp + ' set AMNTREMA=0 where MARKED=1 ') exec('update ' + @I_cDebitTemp + ' set AMNTPAID=0 where MARKED=0 ') exec('update ' + @I_cDebitTemp + ' set Amount_Paid_Prepayment=AMNTPAID ')  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmPopulateEditCheckBatchPrepaymentTemp] TO [DYNGRP]
GO

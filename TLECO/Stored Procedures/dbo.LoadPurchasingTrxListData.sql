SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[LoadPurchasingTrxListData]  @I_sTableName char(10) = NULL,  @I_nModule smallint = NULL,  @I_nCurrencyIndex   smallint = NULL,  @I_dtStart datetime = NULL,  @I_dtEnd datetime = NULL,  @I_fIncludeHistory tinyint  = NULL,  @I_nLanguageID smallint = 0,  @I_nFuncCurrDecPlaces smallint = 0,  @I_sRestriction char(255) = NULL,  @I_vUserID varchar(15) = NULL,  @I_vDomainUserName varchar(255) = NULL,  @I_fIsWFManager tinyint  = NULL,  @I_ListValue smallint = 0,  @O_SQL_Error_State int   = NULL   output  as  declare  @StartDate nvarchar(30),  @EndDate nvarchar(30),  @iStatus int,  @iError int,  @cRecvgPrefix char(13),  @cPOIvcPrefix char(13),  @cPORetPrefix char(13),  @string char(5000),  @cPOPReqStatusDesc char(4),   @cPOPReqHistStatusDesc char(7)    select  @O_SQL_Error_State = 0,  @iStatus = 0,  @iError = 0  if (  @I_sTableName is NULL or  @I_dtStart is NULL or  @I_dtEnd is NULL or  @I_nModule is NULL or  @I_nCurrencyIndex is NULL or  @I_fIncludeHistory is NULL or  @I_vUserID is NULL or  @I_vDomainUserName is NULL)  begin  select @O_SQL_Error_State = 26000  return end  select @StartDate = convert(nvarchar(30), @I_dtStart, 110) select @EndDate = convert(nvarchar(30), @I_dtEnd, 110) select @cRecvgPrefix = rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = str(@I_nLanguageID) and MSGNUM=17794)) select @cPOIvcPrefix = rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = str(@I_nLanguageID) and MSGNUM=18742)) select @cPORetPrefix = rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = str(@I_nLanguageID) and MSGNUM=4820))  select @cPOPReqStatusDesc = rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = str(@I_nLanguageID) and MSGNUM=18682)) select @cPOPReqHistStatusDesc = rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = str(@I_nLanguageID) and MSGNUM=12085)) if @I_nModule = 19   and  @I_ListValue > 1 begin exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18682)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  'DOCAMNT, CURNCYID, ' + @I_nCurrencyIndex + ', PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, '''', Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  ''''','''','''',0, '+  'MKTOPROC, ' +   '(select dbo.syGetListInfoValue(0, 0, (select HOLD), 0, (select VOIDED), (select Emailed),0, 0, 0, 0, 0, 0)), ' +  'HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, '''', '''', 0, '''', '''', '''' ' +   'from [dbo].[pmWorkTransactions] ' +  'where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and DOCTYPE <> 6 and DOCTYPE <> 7' +  ' and ' + @I_sRestriction) end if (@I_nModule = 19  or @I_nModule = 0 ) and @I_ListValue = 1 begin exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18682)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  'DOCAMNT, CURNCYID, ' + @I_nCurrencyIndex + ', PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, '''', Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  ''''','''','''',0, '+  'MKTOPROC, ' +   '(select dbo.syGetListInfoValue(0, 0, (select HOLD), 0, (select VOIDED), (select Emailed),0, 0, 0, 0, 0, 0)), ' +  'HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, '''', '''', 0, '''', '''', '''' ' +   'from [dbo].[pmWorkTransactions] ' +  'where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and ' + @I_sRestriction)  exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, VENDORID, VENDNAME, CONTACT, ' +  '(select SOURCE = dbo.pmGetSourceFromTrxSource(TRXSORCE, ' + @I_nLanguageID + ', ' +  '''' + @cRecvgPrefix + '''' + ', ' +   '''' + @cPOIvcPrefix + '''' + ', ' +  '''' + @cPORetPrefix + '''' + ')), ' +  '(select DOCTYPE = dbo.pmGetDocTypeFromTrxSource(TRXSORCE, ' + @I_nLanguageID + ', DOCNUMBR, DOCTYPE, ' +  '''' + @cRecvgPrefix + '''' + ', ' +   '''' + @cPOIvcPrefix + '''' + ', ' +  '''' + @cPORetPrefix + '''' + ')), ' +   'DOCTYNAM ,' +  'DOCNUMBR, Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 17213)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  'DOCAMNT, CURNCYID, ' + @I_nCurrencyIndex + ', PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, '''', Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  ''''','''','''',0, '+  'MKTOPROC, ' +   '(select dbo.syGetListInfoValue(0, 0, (select HOLD), 0, (select VOIDED), (select Emailed), 0, (select Recond),0, 0, 0, 0)), ' +  'HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, '''', '''', 0, '''', '''', '''' ' +   'from [dbo].[pmOpenTransactions] ' +  'where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and ' + @I_sRestriction)  if @I_fIncludeHistory > 0 begin  exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2) ' +  'select ' +   'DOCDATE, VENDORID, VENDNAME, CONTACT, ' +  '(select SOURCE = dbo.pmGetSourceFromTrxSource(TRXSORCE, ' + @I_nLanguageID + ', ' +  '''' + @cRecvgPrefix + '''' + ', ' +   '''' + @cPOIvcPrefix + '''' + ', ' +  '''' + @cPORetPrefix + '''' + ')), ' +  '(select DOCTYPE = dbo.pmGetDocTypeFromTrxSource(TRXSORCE, ' + @I_nLanguageID + ', DOCNUMBR, DOCTYPE, ' +  '''' + @cRecvgPrefix + '''' + ', ' +   '''' + @cPOIvcPrefix + '''' + ', ' +  '''' + @cPORetPrefix + '''' + ')), ' +  'DOCTYNAM ,' +  'DOCNUMBR, Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, ' +  '(select STSDESCR = (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 12085)) + (select ISNULL((select ''*'' where VOIDED = 1), '''')))), ' +  'DOCAMNT, CURNCYID, ' + @I_nCurrencyIndex + ', PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, '''', Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  ''''','''','''',0, '+  'MKTOPROC, ' +   '(select dbo.syGetListInfoValue(0, 0, (select HOLD), 0, (select VOIDED), (select Emailed), 0, (select Recond),0, 0, 0, 0)), ' +  'HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, '''', '''', 0, '''', '''', '''' ' +   'from [dbo].[pmHistoryTransactions] ' +  'where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and ' + @I_sRestriction) end  exec ('update ' + @I_sTableName + 'set DOCTYNAM = dbo.pmGetDocTypeNameFromSourceDocType(' + @I_nLanguageID + ', ' +   'SOURCE , ' +  'DOCTYPE , ' +  'VOIDED , ' +   'DOCTYNAM) where SOURCE = 2 or SOURCE = 4'  )  end  if @I_nModule = 12  or @I_nModule = 0   begin exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2) ' +  'select ' +   'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, ' +   '(select STSDESCR = ' +  'case ' +  'when SOURCE = 1 then STSDESCR ' +  'else (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 18682)) + (select ISNULL((select ''*'' where VOIDED = 1), ''''))) ' +  'end), '+   '(select DOCAMNT = dbo.mcFuncCalculateAmount(' +   'RATECALC, ' +  '4, '  +  'XCHGRATE, ' +  'DENXRATE, ' +  '(select dbo.mcFuncGetMCTrxState(CURNCYID)), ' +  @I_nFuncCurrDecPlaces + ', ' +  'DOCAMNT)), ' +   'CURNCYID, ' + @I_nCurrencyIndex + ', PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, '''', Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  ''''','''','''',0, '+  'MKTOPROC, ' +   '(select dbo.syGetListInfoValue(0, 0, (select HOLD), 0, (select VOIDED), (select Emailed), 0, 0, 0, 0, 0, 0)), ' +   'HOLD, DUEDATE, DISCDATE, WF_Step_Type, '''', '''', '''', 0, '''', '''', '''' ' +   'from [dbo].[popWorkTransactions] ' +  'where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and ' + @I_sRestriction)  exec ('if (select count(Workflow_Type_Name) from WF100002 where ACTIVE=1 and Workflow_Type_Name=''Purchase Order Approval'')=0 '+  'begin update '+ @I_sTableName + ' set Workflow_Status=9  end ')   if @I_fIncludeHistory > 0  begin  exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2) ' +  'select ' +   'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, ' +   '(select STSDESCR = ' +  'case ' +  'when SOURCE = 1 then STSDESCR ' +  'else (rtrim((select SQL_MSG from DYNAMICS.dbo.MESSAGES where Language_ID = ' + @I_nLanguageID + ' and MSGNUM = 12085)) + (select ISNULL((select ''*'' where VOIDED = 1), ''''))) ' +  'end), '+   '(select DOCAMNT = dbo.mcFuncCalculateAmount(' +   'RATECALC, ' +  '4, '  +  'XCHGRATE, ' +  'DENXRATE, ' +  '(select dbo.mcFuncGetMCTrxState(CURNCYID)), ' +  @I_nFuncCurrDecPlaces + ', ' +  'DOCAMNT)), ' +   'CURNCYID, ' + @I_nCurrencyIndex + ', PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, '''', Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  ''''','''','''',0, '+  'MKTOPROC, ' +   '(select dbo.syGetListInfoValue(0, 0, (select HOLD), 0, (select VOIDED), (select Emailed), 0, 0, 0, 0, 0, 0)), ' +   'HOLD, DUEDATE, DISCDATE, WF_Step_Type, '''', '''', '''', 0, '''', '''', '''' ' +   'from [dbo].[popHistoryTransactions] ' +   'where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and ' + @I_sRestriction +   ' and ' +   '((SOURCE = 1) or ' +  '(SOURCE = 2 and ' +  '(((' + @I_nModule + ' <> 12) and (DOCTYPE=1 or DOCTYPE=4 or DOCTYPE=6 or DOCTYPE=8 or VOIDED=1)) or ' +   '((' + @I_nModule + ' = 12) and (DOCTYPE<=8)))))'   )  end  end  if @I_nModule = 24   begin  if exists(select * from DYNAMICS..SY01400 where USERID = @I_vUserID )  begin   exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, '''', '''', REQSTDBY, 5 , 1, '''', POPRequisitionNumber, ' +  ''''', '''', '''', 1, RequisitionStatus, ''' + @cPOPReqStatusDesc + ''','+  'DOCAMNT,  '''', ' + @I_nCurrencyIndex + ', PRSTADCD, 0, REQDATE, REQDATE, ' +  'REQDATE, '''', Workflow_Status, Workflow_Status, '''', ' +  ''''', 0, '''', ' +  ''''','''','''',0, '+  '0, ' +   '(select dbo.syGetListInfoValue(0, 0, 0, 0, 0, 0, 0, 0 , (select top 1 1 from [POP10210] line where line.POPRequisitionNumber = hdr.POPRequisitionNumber and line.InvalidDataFlag > 0), ' +  '(select top 1 1 from CO00102 where BusObjKey = ''0\PM\Requisition\''+POPRequisitionNumber) , 0, 0)), ' +  '0, REQDATE, REQDATE, 0, '''', REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ' +   'from [POP10200] hdr where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and REQSTDBY = ''' +  @I_vUserID  + ''' '  + '  or (not exists(select (1) from DYNAMICS..SY01400 U where U.USERID = hdr.REQSTDBY) and hdr.DomainUserName = ''' + @I_vDomainUserName + ''' )' +  ' or dbo.wfGetUserAssignedTaskForDocument(''Purchase Requisition Approval'',POPRequisitionNumber,'''+@I_vDomainUserName+''','+@I_fIsWFManager+')<>'''' '+  ' and RequisitionStatus > 0' +   ' and ' + @I_sRestriction)    exec ('if (select count(Workflow_Type_Name) from WF100002 where ACTIVE=1 and Workflow_Type_Name=''Purchase Requisition Approval'')=0 '+  'begin update '+ @I_sTableName + ' set Workflow_Status=9  end ')   if @I_fIncludeHistory > 0  begin  exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status, Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, '''', '''', REQSTDBY, 6 , 1, '''', POPRequisitionNumber, ' +  ''''', '''', '''', 3, RequisitionStatus, ''' + @cPOPReqHistStatusDesc + ''','+  'DOCAMNT,  '''', ' + @I_nCurrencyIndex + ', PRSTADCD, 0, REQDATE, REQDATE, ' +  'REQDATE, '''', Workflow_Status,Workflow_Status, '''', ' +  ''''', 0, '''', ' +  ''''','''','''',0, '+  '0, ' +   '(select dbo.syGetListInfoValue(0, 0, 0, 0, 0, 0, 0, 0, 0, (select top 1 1 from CO00102 where BusObjKey = ''0\PM\Requisition History\''+POPRequisitionNumber), 0, 0)), ' +  '0, REQDATE, REQDATE, 0, '''', REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ' +   'from [POP30200] hdr where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and REQSTDBY = ''' +  @I_vUserID  + ''' '  + '  or (not exists(select (1) from DYNAMICS..SY01400 U where U.USERID = hdr.REQSTDBY) and hdr.DomainUserName = ''' + @I_vDomainUserName + ''' )' +  ' and ' + @I_sRestriction)    end  end  else  begin  exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status,Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, '''', '''', REQSTDBY, 5 , 1, '''', POPRequisitionNumber, ' +  ''''', '''', '''', 1, RequisitionStatus, ''' + @cPOPReqStatusDesc + ''','+  'DOCAMNT,  '''', ' + @I_nCurrencyIndex + ', PRSTADCD, 0, REQDATE, REQDATE, ' +  'REQDATE, '''', Workflow_Status, Workflow_Status,'''', ' +  ''''', 0, '''', ' +  ''''','''','''',0, '+  '0, ' +   '(select dbo.syGetListInfoValue(0, 0, 0, 0, 0, 0, 0, 0 , (select top 1 1 from [POP10210] line where line.POPRequisitionNumber = hdr.POPRequisitionNumber and line.InvalidDataFlag > 0), ' +  '(select top 1 1 from CO00102 where BusObjKey = ''0\PM\Requisition\''+POPRequisitionNumber) , 0, 0)), ' +  '0, REQDATE, REQDATE, 0, '''', REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ' +   'from [POP10200] hdr where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and RequisitionStatus > 0' +   ' and ' + @I_sRestriction)    exec ('if (select count(Workflow_Type_Name) from WF100002 where ACTIVE=1 and Workflow_Type_Name=''Purchase Requisition Approval'')=0 '+  'begin update '+ @I_sTableName + ' set Workflow_Status=9  end ')   if @I_fIncludeHistory > 0  begin  exec ('insert into ' + @I_sTableName + ' (' +  'DOCDATE, VENDORID, VENDNAME, CONTACT, SOURCE, DOCTYPE, DOCTYNAM, DOCNUMBR, ' +  'Other_Number, TRXSORCE, CNTRLTYP, DCSTATUS, POSTATUS, STSDESCR, ' +  'DOCAMNT, CURNCYID, CURRNIDX, PRSTADCD, VOIDED, PRMDATE, REQDATE, ' +  'Workflow_Due_Date, Workflow_Due_Time, Workflow_Approval_Status,Workflow_Status, Workflow_Name, ' +  'Workflow_Approver, Workflow_Priority, Workflow_Originator, ' +  'Workflow_Type_Name, WorkflowInstanceID, WorkflowStepInstanceID, Workflow_Step_Type, '+  'MKTOPROC, InfoValue, HOLD, DUEDATE, DISCDATE, WF_Step_Type, BCHSOURC, REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ) ' +  'select ' +   'DOCDATE, '''', '''', REQSTDBY, 6 , 1, '''', POPRequisitionNumber, ' +  ''''', '''', '''', 3, RequisitionStatus, ''' + @cPOPReqHistStatusDesc + ''','+  'DOCAMNT,  '''', ' + @I_nCurrencyIndex + ', PRSTADCD, 0, REQDATE, REQDATE, ' +  'REQDATE, '''', Workflow_Status, Workflow_Status,'''', ' +  ''''', 0, '''', ' +  ''''','''','''',0, '+  '0, ' +   '(select dbo.syGetListInfoValue(0, 0, 0, 0, 0, 0, 0, 0, 0, (select top 1 1 from CO00102 where BusObjKey = ''0\PM\Requisition History\''+POPRequisitionNumber), 0, 0)), ' +  '0, REQDATE, REQDATE, 0, '''', REQSTDBY, RequisitionDescription, RequisitionStatus, COMMNTID, USERDEF1, USERDEF2 ' +   'from [POP30200] hdr where DOCDATE between ' + '''' + @StartDate + ''' and ''' + @EndDate + '''' +  ' and ' + @I_sRestriction)    end  end end  select @iError = @@error  if @iStatus = 0 and @iError <> 0  Begin  select @iStatus = @iError  End  if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus) return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[LoadPurchasingTrxListData] TO [DYNGRP]
GO

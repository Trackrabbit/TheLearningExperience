SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[seeRMQuotesPerMonth]  @I_dUserDate datetime = NULL,  @I_iPeriodMonths int   = NULL,  @I_vProspectNumber varchar(max) as  declare  @iterator int,    @startDate datetime,   @endDate datetime   select  @I_dUserDate = DATEADD(HOUR, -DATEPART(HOUR, @I_dUserDate), @I_dUserDate) select  @I_dUserDate = DATEADD(MINUTE, -DATEPART(MINUTE, @I_dUserDate), @I_dUserDate) select  @I_dUserDate = DATEADD(SECOND, -DATEPART(SECOND, @I_dUserDate), @I_dUserDate) select  @I_dUserDate = DATEADD(MILLISECOND, -DATEPART(MILLISECOND, @I_dUserDate), @I_dUserDate)  select  @endDate = DATEADD(day, -DAY(@I_dUserDate), @I_dUserDate) select  @startDate = DATEADD(month, -@I_iPeriodMonths, DATEADD(day, -DAY(@I_dUserDate)+1, @I_dUserDate))  create table #QuotesCountsTemp (SalesAmount int not null,  MonthDate datetime not null,  Filter varchar(15) not null)  if (@I_vProspectNumber <> '') begin   declare @Prospects table (CUSTNMBR nvarchar(500))  insert into @Prospects select * from dbo.seeSplitString(@I_vProspectNumber, ',')   select  @iterator = @I_iPeriodMonths  while (@iterator >= 1)  begin  insert #QuotesCountsTemp   select   0,  DATEADD(month, -@iterator, DATEADD(day, -day(@I_dUserDate)+1, @I_dUserDate)),   ProspectList.CUSTNMBR  from @Prospects ProspectList  select @iterator = @iterator - 1  end    insert #QuotesCountsTemp  (SalesAmount,  MonthDate,  Filter)  select  sum (DOCAMNT) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  SOP10100.CUSTNMBR as Filter  from  SOP10100 with (NOLOCK)  INNER JOIN @Prospects a ON SOP10100.CUSTNMBR = a.CUSTNMBR  where  SOPTYPE = 1 and   PROSPECT = 1 and  DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE),  SOP10100.CUSTNMBR  union all  select  sum (DOCAMNT) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  SOP30200.CUSTNMBR as Filter  from  SOP30200 with (NOLOCK)  INNER JOIN @Prospects a ON SOP30200.CUSTNMBR = a.CUSTNMBR  where  SOPTYPE = 1 and   PROSPECT = 1 and  DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE),  SOP30200.CUSTNMBR  order by  MonthDate end else begin  select  @iterator = @I_iPeriodMonths  while (@iterator >= 1)  begin  insert #QuotesCountsTemp values(0, DATEADD(month, -@iterator, DATEADD(day, -day(@I_dUserDate)+1,   @I_dUserDate)), '')  select @iterator = @iterator - 1  end   insert #QuotesCountsTemp  (SalesAmount,  MonthDate,  Filter)  select  sum (DOCAMNT) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  '' as Filter  from  SOP10100 with (NOLOCK)  where  SOPTYPE = 1 and   PROSPECT = 1 and  DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE)  union all  select  sum (DOCAMNT ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  '' as Filter  from  SOP30200 with (NOLOCK)  where  (SOPTYPE = 1) and   PROSPECT = 1 and   DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE)  order by  MonthDate end  update #QuotesCountsTemp set Filter = rtrim(ltrim(upper(Filter)))  select SUM(SalesAmount) as SalesAmount, MonthDate, Filter from  #QuotesCountsTemp group by   MonthDate, Filter order by  MonthDate  drop table #QuotesCountsTemp    
GO
GRANT EXECUTE ON  [dbo].[seeRMQuotesPerMonth] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seeRMQuotesPerMonth] TO [rpt_accounts receivable coordinator]
GO
GRANT EXECUTE ON  [dbo].[seeRMQuotesPerMonth] TO [rpt_executive]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpPostTransaction]  @I_iSQLSessionID int  = NULL,  @I_sTransactionType smallint = NULL,  @I_tPrinting tinyint  = NULL,  @I_tPosting tinyint  = NULL,  @I_tRealTimePosting tinyint  = NULL,  @I_iJournalEntry int  = NULL,  @I_cUserID char(15) = NULL,  @I_cBatchSource char(15) = NULL,  @I_cBatchNumber char(15) = NULL,  @I_sBatchFrequency smallint = NULL,  @I_tPrintDistributions tinyint  = NULL,  @I_bBatchValid binary(4) = NULL,  @I_tDeleteBatch tinyint  = NULL,  @I_sCompanyID smallint = NULL,  @I_cFuncCurrencyID char(15) = NULL,  @I_sFuncCurrencyIndex smallint = NULL,  @I_sFuncDecimalPlaces smallint = NULL,  @I_tMCRegistered tinyint  = NULL,  @I_tMCReport tinyint  = NULL,  @I_cProductName char(30) = NULL,  @I_sWindowType smallint = NULL,  @I_tICRegistered tinyint  = NULL,  @I_cOrigIntercompanyID char(5)  = NULL,  @I_tMDARegistered tinyint  = NULL,  @I_tCalculateGLTaxes tinyint  = NULL,  @I_tICEREnabled tinyint  = NULL,  @I_tUseTaxPeriods        tinyint         = NULL,  @I_AllowReportingLedgers tinyint  = NULL,  @IO_cOpenAuditTrailCode char(13) = NULL output,  @IO_cHistoryAuditTrailCode char(13) = NULL output,  @IO_cICOpenAuditTrailCode char(13) = NULL output,  @IO_cICHistoryAuditTrailCode char(13) = NULL output,  @O_mSequenceLine numeric(19,5) = NULL output,  @O_bHeaderMessages binary(4) = NULL output,  @O_bHeaderMessages2 binary(4) = NULL output,  @O_bLineMessages binary(4) = NULL output,  @O_bLineMessages2 binary(4) = NULL output,  @O_bOffsetMessages binary(4) = NULL output,  @O_bOffsetMessages2 binary(4) = NULL output,  @O_iPrintErrorState int  = NULL output,  @O_iPostErrorState int  = NULL output as  declare  @TRUE tinyint,  @FALSE tinyint,  @POSTED smallint,  @UNPOSTED smallint,  @RECURRING_POSTED smallint,  @POSTED_WITH_ERROR smallint,  @NORMAL_TRX smallint,  @CLEARING_TRX smallint,  @BUDGET_TRX smallint,     @BUSINESS_FORM smallint,  @DEFAULT_DATE datetime,  @FINANCIAL smallint,  @RECURRING_TRX smallint,  @NEW smallint,  @SINGLE_USE smallint,  @REVERSING smallint,  @GL_TRANSACTION smallint,  @MC_TRANSACTION smallint,  @MS_ITEM_1 int,  @MS_ITEM_2 int,  @MS_ITEM_8 int,  @MS_ITEM_9 int,  @MS_ITEM_15 int,    @MS_ITEM_16 int,    @MS_ITEM_21 int,   @MS_ITEM_22 int,   @MS_ITEM_23 int,  @MS_ITEM_26 int,  @MS_ITEM_31 int,  @ICMODULEID smallint,  @tRecurring tinyint,  @sJournalStatus smallint,  @iErrorState int,  @iError int,  @iStatus int,  @cReversingAuditTrailCode char(13),   @cAuditTrailCode char(13),   @iTransactionError int,  @tEditList tinyint,  @bHeaderValid binary(4),  @tTransaction tinyint,  @tLoop1 tinyint,  @tLoop2 tinyint,  @tLoop3 tinyint,  @sMCTransaction smallint,  @sDecimalPlaces smallint,  @sPostingStatus smallint,  @tUnknownError tinyint,  @bHeaderMessages binary(4),  @bHeaderMessagesPrint binary(4),  @bLineMessages binary(4),  @bICBlackBoxLineMessages binary(4),   @cDestIntercompanyID char(5),   @tBuildICAuditTrailCode tinyint,  @sHdrTransactionType smallint,  @nHdrRecurringTRXSequence numeric(19,5),  @dHdrTransactionDate datetime,  @tHdrTransactionHistory tinyint,  @tHdrReversingHistory tinyint,  @cHdrOrigCurrencyID char(15),  @sHdrOrigCurrencyIndex smallint,  @tHdrICDistributionsExist tinyint,  @cHdrOrigIntercompanyID char(5),  @sHdrSeries smallint,  @nHdrDTAIndex numeric(19,5),  @sHdrDTASeries smallint,  @cHdrOrigTrxSource char(13),  @dHdrTaxDate datetime,  @sHdrTransactionYear smallint,  @sHdrTransactionClosingYear smallint,  @sHdrTransactionPeriodID smallint,  @dMinDate datetime,  @tGlTaxesError tinyint,  @tPostNumEnabled tinyint,  @iPostingNumber int,  @iPeriodPostingNumber int,  @iPostingNumberHist int,  @iPeriodPostingNumberHist int,  @tNegDebitsAndCredits   tinyint  select  @O_mSequenceLine = 0.0,  @O_bHeaderMessages = 0x00000000,  @O_bHeaderMessages2 = 0x00000000,  @O_bLineMessages = 0x00000000,  @O_bLineMessages2 = 0x00000000,  @O_bOffsetMessages = 0x00000000,  @O_bOffsetMessages2 = 0x00000000,  @O_iPrintErrorState = 0,  @O_iPostErrorState = 0,  @iStatus  = 0,  @bICBlackBoxLineMessages = 0x00000000  exec @iStatus = smGetMinDate @dMinDate output  while (@tLoop1 is NULL) begin  select @tLoop1 = 1   if @@trancount <> 0  begin  select @O_iPostErrorState = 20713  break  end   else  select @tTransaction = 0   if @I_iSQLSessionID is NULL or  @I_sTransactionType is NULL or  @I_tPrinting is NULL or  @I_tPosting is NULL or  @I_tRealTimePosting is NULL or  @I_iJournalEntry is NULL or  @I_cUserID is NULL or  @I_cBatchSource is NULL or   @I_cBatchNumber is NULL or  @I_sBatchFrequency is NULL or  @I_tPrintDistributions is NULL or   @IO_cOpenAuditTrailCode is NULL or  @IO_cHistoryAuditTrailCode is NULL or  @IO_cICOpenAuditTrailCode is NULL or  @IO_cICHistoryAuditTrailCode is NULL or  @I_bBatchValid is NULL or  @I_tDeleteBatch is NULL or  @I_sCompanyID is NULL or  @I_cFuncCurrencyID is NULL or   @I_sFuncCurrencyIndex is NULL or  @I_sFuncDecimalPlaces is NULL or  @I_tMCRegistered is NULL or  @I_tCalculateGLTaxes is NULL or  @I_tMCReport is NULL or  @I_cProductName is NULL or  @I_sWindowType is NULL or  @I_tICRegistered is NULL or  @I_cOrigIntercompanyID is NULL or  @I_tMDARegistered is NULL  begin  select @iErrorState = 20000  break  end    select  @TRUE   = 1,  @FALSE   = 0,  @POSTED   = 2,  @UNPOSTED  = 1,  @RECURRING_POSTED = 4,  @POSTED_WITH_ERROR = 3,  @NORMAL_TRX  = 1,  @CLEARING_TRX  = 2,  @BUDGET_TRX  = 4,    @BUSINESS_FORM  = 5,  @DEFAULT_DATE  = @dMinDate,  @FINANCIAL  = 2,  @RECURRING_TRX  = 3,  @NEW   = 0,  @SINGLE_USE  = 1,  @REVERSING  = 1,  @GL_TRANSACTION  = 0,  @MC_TRANSACTION  = 1,   @ICMODULEID  = 22,  @MS_ITEM_1  = power(2,24),   @MS_ITEM_2  = power(2,25),  @MS_ITEM_8  = convert(int, 0x80000000),  @MS_ITEM_9  = power(2,16),  @MS_ITEM_15  = power(2,22),  @MS_ITEM_16  = power(2,23),  @MS_ITEM_21  = power(2,12),  @MS_ITEM_22  = power(2,13),  @MS_ITEM_23  = power(2,14),  @MS_ITEM_26  = power(2,1),  @MS_ITEM_31  = power(2,6)   if @I_sTransactionType <> @NORMAL_TRX and   @I_sTransactionType <> @CLEARING_TRX and  @I_sTransactionType <> @BUSINESS_FORM and  @I_sTransactionType <> @BUDGET_TRX    begin   select @iErrorState = 20272  break  end    if @I_tPosting = @FALSE and  @I_tPrinting = @FALSE   begin  select @O_iPostErrorState = 20728  break  end    if @I_tPosting = @FALSE and  @I_tPrinting = @TRUE   select @tEditList = @TRUE  else  select @tEditList = @FALSE   select   @tUnknownError = @FALSE,  @bHeaderMessages = 0x00000000,  @bLineMessages = 0x00000000    if @I_AllowReportingLedgers = @FALSE  update GL10000 set Ledger_ID = 1 where Ledger_ID <> 1 and BACHNUMB <> ''  and JRNENTRY = @I_iJournalEntry    while (@tLoop2 is NULL)  begin  select @tLoop2 = 1   while (@tLoop3 is NULL)  begin  select @tLoop3 = 1   select @bHeaderMessagesPrint = 0x00000000   if (@O_bHeaderMessages & @MS_ITEM_26) = @MS_ITEM_26  begin  select @bHeaderMessagesPrint =   @bHeaderMessagesPrint | @MS_ITEM_26  end   delete #TRXHeader  delete #LineItems  delete #Breakout   exec @iStatus = glpLoadJournalEntry  @I_cBatchSource,  @I_iJournalEntry,  @I_sTransactionType,  @iErrorState output   update   #TRXHeader  set  HeaderMessages =   HeaderMessages | convert(int, @bHeaderMessagesPrint)   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  exec @iStatus = glpVerifyTransaction  @I_sTransactionType,  @I_tPosting,  @I_iJournalEntry,  @I_cBatchNumber,  @I_sBatchFrequency,  @I_bBatchValid,  @I_sCompanyID,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @I_sFuncDecimalPlaces,  @I_tMCRegistered,  @I_cUserID,  @I_tUseTaxPeriods,  @I_AllowReportingLedgers,  @I_tPrintDistributions output,  @sMCTransaction  output,  @sDecimalPlaces  output,  @O_bHeaderMessages output,  @O_bHeaderMessages2  output,  @iErrorState   output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break   if @I_tPosting = @TRUE  if (@O_bHeaderMessages | @MS_ITEM_21) = @O_bHeaderMessages or  (@O_bHeaderMessages | @MS_ITEM_22) = @O_bHeaderMessages or  (@O_bHeaderMessages | @MS_ITEM_23) = @O_bHeaderMessages  begin  select @iErrorState = 21030  break   end   select   @dHdrTransactionDate  = TransactionDate,  @tHdrTransactionHistory  = TransactionHistory,  @tHdrReversingHistory  = ReversingHistory,  @sHdrTransactionType  = TransactionType,  @nHdrRecurringTRXSequence = RecurringTRXSequence,  @cHdrOrigCurrencyID   = CurrencyID,  @sHdrOrigCurrencyIndex   = CurrencyIndex,  @tHdrICDistributionsExist = ICDistributionsExist,  @cHdrOrigIntercompanyID  = OrigIntercompanyID,  @sHdrSeries   = Series,  @nHdrDTAIndex   = DTAIndex,  @sHdrDTASeries   = OrigDTASeries,  @cHdrOrigTrxSource  = OrigTransactionSource,  @sHdrTransactionYear  = TransactionYear,  @sHdrTransactionClosingYear = TransactionClosingYear,  @sHdrTransactionPeriodID = TransactionPeriodID,  @dHdrTaxDate   = TaxDate  from  #TRXHeader  where  JournalEntry = @I_iJournalEntry   if @@rowcount <> 1  begin  select @iErrorState = 20892  break  end   if @tHdrICDistributionsExist = @TRUE  begin  exec @iStatus = icpBreakoutDists  @I_iJournalEntry,  @I_cBatchNumber,  @I_cBatchSource,  @I_cOrigIntercompanyID,  @FALSE,     @I_tMCRegistered,  @I_tICEREnabled,  @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break   exec @iStatus = icpmcCreateRoundingDists   @I_tPosting,   @I_cOrigIntercompanyID,   @O_bLineMessages output,  @iErrorState   output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break   if @I_tPosting = @TRUE  begin  if exists(  select  1  from  #LineItems  where  LineMessages2 <> 0x00000000)  begin  select @iErrorState = 20923  break  end  end   if @I_tMCRegistered = @TRUE  begin  exec @iStatus = icpVerifyMC  @I_cOrigIntercompanyID,  @cHdrOrigCurrencyID,  @dHdrTransactionDate,  @I_tPosting,  @O_bLineMessages2 output,  @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  end      if @cDestIntercompanyID <> '' and   @cDestIntercompanyID is not NULL  begin  update  #LineItems  set  LineMessages2 = LineMessages2 | convert(int, @bICBlackBoxLineMessages)  where  IntercompanyID = @cDestIntercompanyID   if @@rowcount = 0  begin  select @iErrorState = 20893  break  end   end    end    select   @cAuditTrailCode = ' ',  @cReversingAuditTrailCode = ' '   if @I_tPosting = @TRUE  begin  if @tHdrICDistributionsExist = @TRUE or  (@cHdrOrigIntercompanyID <> '' and @cHdrOrigIntercompanyID <> @I_cOrigIntercompanyID)  select @tBuildICAuditTrailCode = @TRUE  else  select @tBuildICAuditTrailCode = @FALSE   if (@tHdrTransactionHistory = @FALSE or  (@sHdrTransactionType = @REVERSING and @tHdrReversingHistory = @FALSE))  begin  if @tBuildICAuditTrailCode = @FALSE and  isnull (ltrim(@IO_cOpenAuditTrailCode), '') = ''  begin  exec @iStatus = glpBuildAuditTrailCode  @I_iSQLSessionID,  @I_sTransactionType,  @FINANCIAL,    @FALSE,     @tBuildICAuditTrailCode,   @O_bHeaderMessages output,  @IO_cOpenAuditTrailCode output,  @iErrorState output  select @iError = @@error  end  else if @tBuildICAuditTrailCode = @TRUE and  isnull (ltrim(@IO_cICOpenAuditTrailCode), '') = ''  begin  exec @iStatus = glpBuildAuditTrailCode  @I_iSQLSessionID,  @I_sTransactionType,  @FINANCIAL,    @FALSE,     @tBuildICAuditTrailCode,   @O_bHeaderMessages output,  @IO_cICOpenAuditTrailCode output,  @iErrorState output  select @iError = @@error  end   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  end    if (@tHdrTransactionHistory = @TRUE or  (@sHdrTransactionType = @REVERSING and @tHdrReversingHistory = @TRUE))  begin  if @tBuildICAuditTrailCode = @FALSE and  isnull (ltrim(@IO_cHistoryAuditTrailCode), '') = ''  begin  exec @iStatus = glpBuildAuditTrailCode  @I_iSQLSessionID,  @I_sTransactionType,  @FINANCIAL,    @TRUE,     @tBuildICAuditTrailCode,   @O_bHeaderMessages output,  @IO_cHistoryAuditTrailCode output,  @iErrorState output  select @iError = @@error  end  else if @tBuildICAuditTrailCode = @TRUE and  isnull (ltrim(@IO_cICHistoryAuditTrailCode), '') = ''  begin  exec @iStatus = glpBuildAuditTrailCode  @I_iSQLSessionID,  @I_sTransactionType,  @FINANCIAL,    @TRUE,     @tBuildICAuditTrailCode,   @O_bHeaderMessages output,  @IO_cICHistoryAuditTrailCode output,  @iErrorState output   select @iError = @@error  end   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  end    if @tHdrTransactionHistory = @TRUE  begin  if @tBuildICAuditTrailCode = @TRUE  select @cAuditTrailCode = @IO_cICHistoryAuditTrailCode  else  select @cAuditTrailCode = @IO_cHistoryAuditTrailCode  end  else  begin  if @tBuildICAuditTrailCode = @TRUE  select @cAuditTrailCode = @IO_cICOpenAuditTrailCode  else  select @cAuditTrailCode = @IO_cOpenAuditTrailCode  end   if @sHdrTransactionType = @REVERSING  begin  if @tHdrReversingHistory = @TRUE  begin  if @tBuildICAuditTrailCode = @TRUE  select @cReversingAuditTrailCode = @IO_cICHistoryAuditTrailCode  else  select @cReversingAuditTrailCode = @IO_cHistoryAuditTrailCode  end  else  begin  if @tBuildICAuditTrailCode = @TRUE  select @cReversingAuditTrailCode = @IO_cICOpenAuditTrailCode  else  select @cReversingAuditTrailCode = @IO_cOpenAuditTrailCode  end   exec @iStatus = glpGetReversingAuditTrailCode  @tBuildICAuditTrailCode,  @cReversingAuditTrailCode output,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  end    update  #TRXHeader  set  TRXSource  = @cAuditTrailCode,  ReversingTRXSource = @cReversingAuditTrailCode  where  JournalEntry = @I_iJournalEntry   if @@rowcount <> 1  begin  select @iErrorState = 20894  break  end  end    if @I_tPrinting = @FALSE  select @I_tPrintDistributions = @FALSE   select   @tPostNumEnabled = abs(sign(isnull(Company_Options, 0) & @MS_ITEM_8)),  @tNegDebitsAndCredits = abs(sign(isnull(Company_Options, 0) & @MS_ITEM_9))  from   DYNAMICS..SY01500 with (NOLOCK)  where   CMPANYID = @I_sCompanyID   if @@trancount = 0  begin  begin transaction  select @tTransaction = 1  end   if @tPostNumEnabled = @TRUE and @I_tPosting = @TRUE  if @tHdrTransactionHistory = @TRUE    begin  exec @iStatus = glpIncPostingNumbers  @sHdrTransactionYear,  @sHdrTransactionPeriodID,  @iPostingNumberHist output,  @iPeriodPostingNumberHist output,  @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  exec @iStatus = glpIncPostingNumbers  @sHdrTransactionClosingYear,  0,  @iPostingNumber output,  @iPeriodPostingNumber output,  @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  end  else   begin  select   @iPostingNumberHist = 0,  @iPeriodPostingNumberHist = 0   exec @iStatus = glpIncPostingNumbers  @sHdrTransactionYear,  @sHdrTransactionPeriodID,  @iPostingNumber output,  @iPeriodPostingNumber output,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @iErrorState <> 0  break  end   else   select   @iPostingNumberHist = 0,  @iPeriodPostingNumberHist = 0,  @iPostingNumber = 0,  @iPeriodPostingNumber = 0  if @I_sTransactionType = @NORMAL_TRX  begin  if @I_sBatchFrequency > 1  select @tRecurring = @TRUE  else  select @tRecurring = @FALSE  exec @iStatus = glpPostNormalTransaction  @I_iSQLSessionID,  @I_iJournalEntry,  @I_cUserID,  @I_tPrinting,  @I_tPosting,  @I_tPrintDistributions,  @I_bBatchValid,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @I_sFuncDecimalPlaces,  @I_tMCRegistered,  @I_tMCReport,  @sMCTransaction,  @cHdrOrigCurrencyID,  @sHdrOrigCurrencyIndex,  @sDecimalPlaces,  @I_cProductName,  @I_sWindowType,  @I_cOrigIntercompanyID,  @I_tMDARegistered,  @tRecurring,  @iPostingNumber,  @iPeriodPostingNumber,  @iPostingNumberHist,  @iPeriodPostingNumberHist,  @tNegDebitsAndCredits,  @cDestIntercompanyID output,  @O_mSequenceLine output,  @O_bHeaderMessages output,  @O_bLineMessages output,  @O_bLineMessages2 output,  @iErrorState output    select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @cDestIntercompanyID <> ''  begin  if @O_bLineMessages2 = (@O_bLineMessages2 | @MS_ITEM_15)  select @bICBlackBoxLineMessages =   (@bICBlackBoxLineMessages | @MS_ITEM_15)  if @O_bLineMessages2 = (@O_bLineMessages2 | @MS_ITEM_16)  select @bICBlackBoxLineMessages =   (@bICBlackBoxLineMessages | @MS_ITEM_16)  end   if @tGlTaxesError is null and @iErrorState = 0 and @iStatus = 0 and @tHdrICDistributionsExist = @FALSE  begin   if @I_tCalculateGLTaxes = @TRUE  begin  exec @iStatus = glpPostTaxes  @I_iJournalEntry,  @nHdrRecurringTRXSequence,  @dHdrTaxDate,  @dHdrTransactionDate,  @sHdrTransactionYear,  @sHdrTransactionPeriodID,  @I_tPosting,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if @iErrorState = 21064   begin  select @tGlTaxesError = 1  if @tEditList = @TRUE  select @iErrorState = 0  end  end  end   if @tGlTaxesError = 1  select  @O_bHeaderMessages = @O_bHeaderMessages | @MS_ITEM_2   end   else if @I_sTransactionType = @CLEARING_TRX  begin  exec @iStatus = glpPostClearingTransaction  @I_iSQLSessionID,  @I_iJournalEntry,  @I_cUserID,  @I_tPrinting,  @I_tPosting,  @I_tPrintDistributions,  @I_bBatchValid,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @I_sFuncDecimalPlaces,  @I_tMCRegistered,  @I_tMCReport,  @I_sCompanyID,  @I_cOrigIntercompanyID,  @iPostingNumber,  @iPeriodPostingNumber,  @iPostingNumberHist,  @iPeriodPostingNumberHist,  @O_mSequenceLine output,   @O_bLineMessages output,  @O_bLineMessages2 output,  @O_bOffsetMessages output,  @O_bOffsetMessages2 output,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  end    else if @I_sTransactionType = @BUDGET_TRX  begin  exec @iStatus = glpPostBudgetTransaction  @I_iSQLSessionID,  @I_iJournalEntry,  @I_cUserID,  @I_tPrinting,  @I_tPosting,  @I_bBatchValid,  @O_bHeaderMessages output,   @O_bLineMessages output,  @O_bLineMessages2 output,  @iErrorState output    select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   end    else if @I_sTransactionType = @BUSINESS_FORM  begin  exec @iStatus = glpPostQuickTransaction  @I_iSQLSessionID,  @I_iJournalEntry,  @I_cUserID,  @I_tPrinting,  @I_tPosting,  @I_tPrintDistributions,  @I_bBatchValid,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @I_sFuncDecimalPlaces,  @I_tMCRegistered,   @I_tRealTimePosting,  @I_cOrigIntercompanyID,  @iPostingNumber,  @iPeriodPostingNumber,  @iPostingNumberHist,  @iPeriodPostingNumberHist,  @O_bHeaderMessages output,  @O_bLineMessages output,  @O_bLineMessages2 output,  @O_mSequenceLine output,   @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   end    end    if @iStatus <> 0 or @iErrorState <> 0   begin   if @iStatus <> 0   break  if @I_tRealTimePosting = @TRUE  begin  select @O_iPostErrorState = @iErrorState   if @O_bHeaderMessages = 0x00000000 and  @O_bHeaderMessages2 = 0x00000000 and  @O_bLineMessages = 0x00000000 and  @O_bLineMessages2 = 0x00000000 and  @O_bOffsetMessages = 0x00000000 and  @O_bOffsetMessages2 = 0x00000000 and  @O_iPostErrorState <> 0  select @O_bHeaderMessages = @O_bHeaderMessages | @MS_ITEM_31   break  end   else if @I_tPosting = @TRUE  begin  if @tTransaction = 1  begin  select @tTransaction = 0  rollback transaction  end   select   @O_iPostErrorState = @iErrorState,  @iErrorState = 0,  @I_tPosting = @FALSE   if @I_tPrinting = @TRUE  begin   if @O_bHeaderMessages = 0x00000000 and  @O_bHeaderMessages2 = 0x00000000 and  @O_bLineMessages = 0x00000000 and  @O_bLineMessages2 = 0x00000000       and  @O_bOffsetMessages = 0x00000000 and  @O_bOffsetMessages2 = 0x00000000  select @tUnknownError = @TRUE   if @tHdrTransactionHistory = @TRUE  select  @bHeaderMessages = @O_bHeaderMessages,  @bLineMessages = @O_bLineMessages   select @bHeaderMessagesPrint = 0x00000000   if (@O_bHeaderMessages & @MS_ITEM_26) = @MS_ITEM_26  begin  select @bHeaderMessagesPrint =   @bHeaderMessagesPrint | @MS_ITEM_26  end   select   @tLoop2 = NULL,  @tLoop3 = NULL,  @O_bHeaderMessages = @bHeaderMessagesPrint,  @O_bLineMessages = 0x00000000,  @O_bLineMessages2 = 0x00000000,  @O_bOffsetMessages = 0x00000000,  @O_bOffsetMessages2 = 0x00000000   continue  end   else  begin   select   @cAuditTrailCode = ' ',  @cReversingAuditTrailCode = ' ',  @I_tPosting = @FALSE,  @nHdrRecurringTRXSequence = @nHdrRecurringTRXSequence - 1.0   if @nHdrRecurringTRXSequence < 0.0   select @nHdrRecurringTRXSequence = 0.0   if @@trancount = 0   begin  begin transaction  select @tTransaction = 1  end   end   end   else if @I_tPrinting = @TRUE   begin  select   @O_iPrintErrorState = @iErrorState,  @iErrorState = 0   end    end    if @I_tPosting = @TRUE  begin   if @I_sBatchFrequency = @SINGLE_USE  select @sPostingStatus = @POSTED  else  select @sPostingStatus = @RECURRING_POSTED  end  else if @tEditList = @TRUE   select @sPostingStatus = @UNPOSTED   else  begin  select @sPostingStatus = @POSTED_WITH_ERROR   if @tHdrTransactionHistory = @TRUE  select  @bHeaderMessages = @bHeaderMessages | convert(int, @O_bHeaderMessages),  @bLineMessages = @bLineMessages | convert(int, @O_bLineMessages )   if @O_bHeaderMessages = 0x00000000 and  @O_bHeaderMessages2 = 0x00000000 and  @O_bLineMessages = 0x00000000 and  @O_bLineMessages2 = 0x00000000 and  @O_bOffsetMessages = 0x00000000 and  @O_bOffsetMessages2 = 0x00000000 and  @tUnknownError = @TRUE and  @O_iPrintErrorState <> 0   select @O_bHeaderMessages = @O_bHeaderMessages | @MS_ITEM_31   end    if @O_iPrintErrorState <> 0  select @iTransactionError = @O_iPrintErrorState  else  select @iTransactionError = @O_iPostErrorState   exec @iStatus = glpUpdatePostingStatus  @I_iSQLSessionID,  @I_cBatchSource,  @I_cBatchNumber,  @I_sTransactionType,  @I_iJournalEntry,  @I_cUserID,  @cAuditTrailCode,  @cReversingAuditTrailCode,  @sPostingStatus,  @nHdrRecurringTRXSequence,  @O_bHeaderMessages,  @O_bHeaderMessages2,  @tEditList,  @iTransactionError,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @iErrorState <> 0  break   if @tEditList <> @TRUE and  @I_tDeleteBatch = @TRUE and  @I_tPosting = @TRUE and  (@sPostingStatus = @POSTED or  @sPostingStatus = @RECURRING_POSTED)  begin  if @I_tMDARegistered = @TRUE  begin  if ((@tHdrTransactionHistory = @TRUE) and   (EXISTS(select 1 from GL40000 with (NOLOCK) where KPGTRXHS = 0)))  or (@sPostingStatus = @RECURRING_POSTED)  begin  exec @iStatus = dtaDeleteSummaryTrxAnalysis  @I_iJournalEntry,  @nHdrRecurringTRXSequence,  @sHdrSeries,  @nHdrDTAIndex,  @sHdrDTASeries,  @cHdrOrigTrxSource,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @iErrorState <> 0  break  end  end   exec @iStatus = glpDeleteLineItems  @I_cBatchNumber,   @I_iJournalEntry,  @I_sTransactionType,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @iErrorState <> 0  break  end   if @I_tPrinting = @TRUE and  @tHdrTransactionHistory = @TRUE  begin     exec @iStatus = glpDeleteHistoryAllocations  @I_iSQLSessionID,  @I_cBatchSource,  @I_cBatchNumber,  @I_iJournalEntry,  @I_cUserID,  @bHeaderMessages,  @bLineMessages,  @iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @iErrorState <> 0  break   end    end   end   if @iStatus <> 0 or @iErrorState <> 0 begin  if @O_iPostErrorState = 0 and @O_iPrintErrorState = 0  select @O_iPostErrorState = @iErrorState  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpPostTransaction] TO [DYNGRP]
GO

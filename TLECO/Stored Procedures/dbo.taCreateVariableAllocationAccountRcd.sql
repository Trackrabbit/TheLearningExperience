SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateVariableAllocationAccountRcd]  @I_vACTNUMST char(75) = '',   @I_vDISTACTNUMST char(75) = '',   @I_vBREAKACTNUMST char(75) = '',  @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @ACTINDX int,     @DISTACTINDX int,    @BREAKACTINDX int,    @ACCTTYPE smallint,    @DISTACCTTYPE smallint,    @BREAKACCTTYPE smallint,   @iStatus int,  @iAddCodeErrState int,    @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int  select @O_iErrorState = 0,  @iStatus = 0,  @ACCTTYPE = 0,      @DISTACCTTYPE = 0,     @BREAKACCTTYPE = 0,     @ACTINDX = 0,      @DISTACTINDX = 0,     @BREAKACTINDX = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateVariableAllocationAccountRcdPre  @I_vACTNUMST output,  @I_vDISTACTNUMST output,  @I_vBREAKACTNUMST output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 919     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vACTNUMST is NULL or  @I_vDISTACTNUMST is NULL or  @I_vBREAKACTNUMST is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL  ) begin  select @O_iErrorState = 921    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vACTNUMST = '') begin  select @O_iErrorState = 1242     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (not exists(select 1 from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST)) begin  select @O_iErrorState = 1243     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @ACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  if (@I_vDISTACTNUMST = '') begin  select @O_iErrorState = 922     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (not exists(select 1 from GL00105 (nolock) where ACTNUMST = @I_vDISTACTNUMST)) begin  select @O_iErrorState = 923     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @DISTACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vDISTACTNUMST  if (exists(select 1 from DTA00300 (nolock) where ACTINDX = @DISTACTINDX)) begin  select @O_iErrorState = 3763     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vBREAKACTNUMST <> '') begin  if (not exists(select 1 from GL00105 (nolock) where ACTNUMST = @I_vBREAKACTNUMST))  begin  select @O_iErrorState = 924     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  select @BREAKACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vBREAKACTNUMST  if (@I_vDISTACTNUMST = @I_vBREAKACTNUMST) begin  select @O_iErrorState = 1309     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @ACCTTYPE = ACCTTYPE from GL00100 (nolock) where ACTINDX = @ACTINDX if (@ACCTTYPE < 3 or @ACCTTYPE > 4)  begin  select @O_iErrorState = 1244     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  select @DISTACCTTYPE = ACCTTYPE from GL00100 (nolock) where ACTINDX = @DISTACTINDX if (@DISTACCTTYPE < 0 or @DISTACCTTYPE > 2)  begin  select @O_iErrorState = 925     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  select @BREAKACCTTYPE = ACCTTYPE from GL00100 (nolock) where ACTINDX = @BREAKACTINDX  if (@BREAKACCTTYPE < 0 or @BREAKACCTTYPE > 2)  begin  select @O_iErrorState = 865     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1 ) begin  select @O_iErrorState = 3619     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3620     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if not exists(select 1 from GL00103 a (nolock) where a.ACTINDX = @ACTINDX and DSTINDX = @DISTACTINDX)   begin  insert into GL00103(  ACTINDX,  PRCNTAGE,  DSTINDX  )  select  @ACTINDX,     0,     @DISTACTINDX    if (@@error <> 0)  begin  select @O_iErrorState = 863    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  if (@O_iErrorState = 0) begin  if (@BREAKACTINDX <> 0)  begin  if not exists(select 1 from GL00104 a (nolock) where a.ACTINDX = @ACTINDX and BDNINDX = @BREAKACTINDX)   begin  insert into GL00104(  ACTINDX,  SEPRATR1,  DSTINDX,  SEPRATR2,  BDNINDX  )  select  @ACTINDX,    0,     @DISTACTINDX,    0,     @BREAKACTINDX    if (@@error <> 0)  begin  select @O_iErrorState = 864    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 8087    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateVariableAllocationAccountRcdPost  @I_vACTNUMST,   @I_vDISTACTNUMST,  @I_vBREAKACTNUMST,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 920    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateVariableAllocationAccountRcd] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpGetAccountNumber]  @I_iAccountIndex                int             = NULL,  @I_iRelationID int  = NULL,  @I_sUserLevel int  = NULL,  @I_iAccessAllAccounts int  = NULL,  @O_tValidAccountNumber   tinyint         = NULL  output,  @O_tActive                      tinyint         = NULL  output,  @O_sAccountType                 smallint        = NULL  output,  @O_sAccountCategory             smallint        = NULL  output,  @O_sFixedOrVariable             smallint        = NULL  output,  @O_sBalanceForCalculation       smallint        = NULL  output,  @O_sPostingType                 smallint        = NULL  output,  @O_sUnitDecimalPlaces           smallint        = NULL  output,  @O_iErrorState                  int             = NULL  output  as  declare  @TRUE                           tinyint,  @FALSE                          tinyint,  @POST_ACCT                      smallint,  @DEFAULT_DECIMAL_PLACES  smallint,  @tTransaction                   tinyint,  @tLoop                          tinyint,  @where1 varchar(255),  @accountfiltertable varchar(255)  select  @O_tValidAccountNumber  = 0,      @O_iErrorState                  = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin   if      @I_iAccountIndex          is NULL or  @I_iRelationID            is NULL or  @I_sUserLevel             is NULL or  @I_iAccessAllAccounts     is NULL   begin  select @O_iErrorState = 21039  break  end    select @tLoop = 1   if      @I_iAccountIndex        is NULL  begin  select @O_iErrorState = 20027  break  end    select  @TRUE                           = 1,  @FALSE                          = 0,  @POST_ACCT                      = 1,  @DEFAULT_DECIMAL_PLACES = 3   delete #AccountNumberInfo   if @I_iAccessAllAccounts = @TRUE  begin  select @accountfiltertable = 'GL00100 acct '  select @where1 = 'acct.ACTINDX = ' + str(@I_iAccountIndex)  end  else  begin  select @where1 = 'acctfilter.ACTINDX = ' + str(@I_iAccountIndex)  select @where1 = @where1  + ' and acct.ACTINDX = acctfilter.ACTINDX and acctfilter.RELID = '  + str(@I_iRelationID)   select @accountfiltertable =   case when @I_sUserLevel = 0 then  'GL00100 acct, GL00100F1 acctfilter '  else  'GL00100 acct, GL00100F' + str(@I_sUserLevel,1) + ' acctfilter '  end end   exec ('insert into #AccountNumberInfo select acct.ACCTTYPE, acct.ACTIVE,acct.ACCATNUM,  acct.FXDORVAR,acct.BALFRCLC, acct.PSTNGTYP, acct.DECPLACS from ' +  @accountfiltertable + ' where ' + @where1)  if @@rowcount <> 1   begin  insert into #AccountNumberInfo    values(@POST_ACCT,@FALSE,0,0,0,0,@DEFAULT_DECIMAL_PLACES)  select  @O_tValidAccountNumber  = @FALSE   end   else  begin  select  @O_tValidAccountNumber = @TRUE   end   select  @O_tActive  = Active,  @O_sAccountType  = AccountType,  @O_sAccountCategory = AccountCategory,  @O_sFixedOrVariable = FixedOrVariable,  @O_sBalanceForCalculation = BalanceForCalculation,  @O_sPostingType  = PostingType,  @O_sUnitDecimalPlaces = UnitDecimalPlaces  from  #AccountNumberInfo   end   if @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return    
GO
GRANT EXECUTE ON  [dbo].[glpGetAccountNumber] TO [DYNGRP]
GO

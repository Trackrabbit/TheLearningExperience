SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMDistribution] @I_vRMDTYPAL smallint,    @I_vDOCNUMBR char(20),    @I_vCUSTNMBR char(15),    @I_vSEQNUMBR int = 0,     @I_vDISTTYPE smallint,     @I_vDistRef char(30) = '',   @I_vDSTINDX int = 0,    @I_vACTNUMST varchar(75) = '',   @I_vDEBITAMT numeric(19,5) = 0,   @I_vCRDTAMNT numeric(19,5) = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int = NULL output, @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @CURRNIDX smallint,    @CURNCYID char(15),    @DOCDATE datetime,  @DECPLCUR tinyint,  @DTAREF char(25),  @GROUPAMT numeric(19,5),  @IsMC tinyint,  @updated tinyint,  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @ISMCREG tinyint,  @ACCTENTR tinyint,  @AcctRecvAccount int  select  @CURRNIDX = 0,  @CURNCYID = '',  @DOCDATE = '',  @DECPLCUR = 2,  @DTAREF = '',  @GROUPAMT = 0,  @IsMC = 0,  @updated = 0,  @iStatus = 0,  @O_iErrorState = 0,  @oErrString = '',  @ISMCREG = 0,  @AcctRecvAccount = 0  exec @iStatus = taRMDistributionPre  @I_vRMDTYPAL output,  @I_vDOCNUMBR output,  @I_vCUSTNMBR output,  @I_vSEQNUMBR output,  @I_vDISTTYPE output,  @I_vDistRef output,  @I_vDSTINDX output,  @I_vACTNUMST output,  @I_vDEBITAMT output,  @I_vCRDTAMNT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 200    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vRMDTYPAL is NULL or  @I_vDOCNUMBR is NULL or  @I_vDSTINDX  is NULL or  @I_vCUSTNMBR is NULL or  @I_vDEBITAMT is NULL or  @I_vCRDTAMNT is NULL or  @I_vDISTTYPE is NULL or  @I_vDistRef  is NULL or  @I_vSEQNUMBR is NULL)  begin  select @O_iErrorState = 1336    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vRMDTYPAL = 0  or  @I_vDOCNUMBR = '' or  @I_vDISTTYPE = 0) begin  select @O_iErrorState = 1337    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vCUSTNMBR = upper(@I_vCUSTNMBR)  select @CURNCYID = isnull(CURNCYID,'') from RM00101 (nolock) where CUSTNMBR  = @I_vCUSTNMBR if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX,0), @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end  if (exists(select 1 from CM00100 (nolock) where CURNCYID <> '')) begin  select @ISMCREG = 1 end  if (@I_vSEQNUMBR <= 0) begin  select @I_vSEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from RM10101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR end  if (@I_vRMDTYPAL not in (1,3,4,5,6,7,8,9)) begin  select @O_iErrorState = 1338    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (    @I_vRMDTYPAL = 1 and @I_vDISTTYPE not in (1,2,3,5,8,9,10,11,12,13,14,15,23,24,25)  or @I_vRMDTYPAL = 3 and @I_vDISTTYPE not in (1,2,3,5,8,10,11,12,13,14,15,18,23,24,25)  or @I_vRMDTYPAL = 4 and @I_vDISTTYPE not in (1,2,3,5,8,10,11,12,13,14,15,16,23,24,25)  or @I_vRMDTYPAL = 5 and @I_vDISTTYPE not in (1,2,3,5,8,10,11,12,13,14,15,20,23,24,25)  or @I_vRMDTYPAL = 6 and @I_vDISTTYPE not in (8,10,11,12,13,14,15,21,22,25)  or @I_vRMDTYPAL = 7 and @I_vDISTTYPE not in (1,2,3,4,5,6,7,8,10,11,12,13,14,15,19,25)  or @I_vRMDTYPAL = 8 and @I_vDISTTYPE not in (1,2,3,4,5,6,7,8,10,11,12,13,14,15,17,21,23,24,25)   or @I_vRMDTYPAL = 9 and @I_vDISTTYPE not in (1,2,3,4,5,6,7,8,25)) begin  select @O_iErrorState = 1339    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vACTNUMST <> '') begin  select @I_vDSTINDX = 0  select @I_vDSTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  if (@I_vDSTINDX = 0)  begin  select @O_iErrorState = 1340     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if not exists( select 1 from GL00105 (nolock) where ACTINDX = @I_vDSTINDX )  begin  select @O_iErrorState = 1341     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @AcctRecvAccount = isnull(RMARACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100  select @ACCTENTR = ACCTENTR from GL00100 (nolock) where ACTINDX = @I_vDSTINDX  if ((@ACCTENTR = 0) and (@I_vDISTTYPE <> 3)) or ((@ACCTENTR = 0) and (@I_vDISTTYPE = 3) and (@I_vDSTINDX <> @AcctRecvAccount)) begin  select @O_iErrorState = 9564     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDEBITAMT > 0 and @I_vCRDTAMNT > 0) begin  select @O_iErrorState = 1342     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vDEBITAMT < 0 or @I_vCRDTAMNT < 0) begin  select @O_iErrorState = 1343     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vDEBITAMT = 0 and @I_vCRDTAMNT = 0) begin  select @O_iErrorState = 1344     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vCUSTNMBR  = '') begin  select @O_iErrorState = 1345    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if not exists (select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR) begin  select @O_iErrorState = 1346    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if not exists(select 1 from RM10101 (nolock) where USERID = '' and PSTGSTUS = 3 and RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and SEQNUMBR = @I_vSEQNUMBR) begin  insert RM10101  (  TRXSORCE,  POSTED,  POSTEDDT,  PSTGSTUS,  CHANGED,  DOCNUMBR,  DCSTATUS,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,  DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef  )  select  '',     0,      '',     3,     0,     @I_vDOCNUMBR,  1,     @I_vDISTTYPE,  @I_vRMDTYPAL,  @I_vSEQNUMBR,  @I_vCUSTNMBR,  @I_vDSTINDX,  @I_vDEBITAMT,  @I_vCRDTAMNT,  '',     '',     0,     case     when @ISMCREG = 1  then @CURNCYID  else ''  end,  case     when @ISMCREG = 1  then @CURRNIDX  else 0  end,  @I_vCRDTAMNT,  @I_vDEBITAMT,  @I_vDistRef  if (@@error <> 0)  begin  select @O_iErrorState = 1347   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  update RM10101 set  CRDTAMNT = CRDTAMNT + @I_vCRDTAMNT,  DEBITAMT = DEBITAMT + @I_vDEBITAMT  where USERID = '' and PSTGSTUS = 3 and RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and SEQNUMBR = @I_vSEQNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 1348    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @updated = 1 end  if exists (select 1 from DTA00300 (nolock) where ACTINDX = @I_vDSTINDX) begin  select @DOCDATE =  DOCDATE from RM00401 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL   exec @iStatus = taMdaInsert  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDTASERIES = 3,  @I_vACTINDX = @I_vDSTINDX,  @I_vSEQNUMBR = @I_vSEQNUMBR,  @I_vDEBITAMT = @I_vDEBITAMT,  @I_vCRDTAMNT = @I_vCRDTAMNT,  @I_vTRXDATE = @DOCDATE,  @I_vDECPLCUR = @DECPLCUR,  @I_vUpdated = @updated,  @O_iErrorState  = @O_iErrorState output,  @oErrString  = @oErrString output  if @O_iErrorState <> 0 or @@error <> 0 or @iStatus <> 0  begin  select @O_iErrorState = 3733    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taRMDistributionPost  @I_vRMDTYPAL,  @I_vDOCNUMBR,  @I_vCUSTNMBR,  @I_vSEQNUMBR,  @I_vDISTTYPE,  @I_vDistRef,  @I_vDSTINDX,  @I_vACTNUMST,  @I_vDEBITAMT,  @I_vCRDTAMNT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1349    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMDistribution] TO [DYNGRP]
GO

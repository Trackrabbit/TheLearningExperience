SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_Schedule_Work_Order]   (@WORECTYPE smallint,  @WORKORDNUM char(11),  @SEQUENCE numeric(19,5),   @Status smallint)   AS declare @cStation char(11) declare @cStationGroup char(11) declare @vStartDate datetime declare @vStartTime datetime declare @vCombinedDate datetime declare @TECHID char(11) declare @vETTR numeric(19,5) declare @Priority numeric(19,5) declare @cNextStation char(11) declare @vNextETTR numeric(19,5) declare @cNextGroup char(11) declare @NextTech char(11) declare @vTempStartDate datetime declare @vTempStartTime datetime declare @Route_Sequence numeric(19,5) declare @NextRoute_Sequence numeric(19,5) declare @msg varchar(255) declare @Last_Station char(11) declare @cFirst_Station char(11) declare @TempStatus smallint declare @NextStatus smallint declare @SetFirstStation smallint declare @Ahhugah integer declare @PrevDate datetime declare @PrevTime datetime declare WO_cursor INSENSITIVE CURSOR for select TECHID,DEPSTATGRP,STATIONID,ETTR, SEQUENCE1, Status   from SVC06105   where WORECTYPE = @WORECTYPE AND   WORKORDNUM = @WORKORDNUM AND   SEQUENCE1 >= @SEQUENCE and  Status < 2  order by WORECTYPE, WORKORDNUM, SEQUENCE1 set nocount on  delete from SVC06300   where Status <> 2 and   WORECTYPE = @WORECTYPE AND   WORKORDNUM = @WORKORDNUM   OPEN WO_cursor FETCH NEXT FROM WO_cursor INTO @TECHID,  @cStationGroup,   @cStation,   @vETTR,  @Route_Sequence,  @TempStatus IF @@FETCH_STATUS = 0  BEGIN  if exists (select *   from SVC06100   where WORECTYPE = @WORECTYPE and   WORKORDNUM = @WORKORDNUM and  Commit_Date > '01/01/1900 00:00' and  NUMRESCHED > 0)  BEGIN  select @Ahhugah = 1  END  ELSE  BEGIN  select @Ahhugah = 0  END   select @vCombinedDate = case   when SVC06105.ENDDATE <> '01/01/1900 00:00:00' then  CONVERT(char(10),SVC06105.ENDDATE,102) + ' ' +   CONVERT(char(5),SVC06105.ENDTIME,108)   else  CONVERT(char(10),SVC06105.ECOMPDT,102) + ' ' +   CONVERT(char(5),SVC06105.EComp_Time,108)  end  from SVC06105   where WORECTYPE = @WORECTYPE AND   WORKORDNUM = @WORKORDNUM AND   SEQUENCE1 = @Route_Sequence - 1  select @Last_Station = ''   IF @SEQUENCE = 0   select @cFirst_Station = @cStation, @SetFirstStation = 1  ELSE   select @cFirst_Station = '',@SetFirstStation = 0  select @cFirst_Station = isnull(@cFirst_Station,'')   select @Priority = SVC_Depot_Priority,  @vTempStartDate = CONVERT(char(10),SVC06100.ETADTE,102),  @vTempStartTime = CONVERT(char(5),SVC06100.ETATME,108)  from SVC06100  where WORECTYPE = @WORECTYPE AND WORKORDNUM = @WORKORDNUM   IF @vTempStartDate < CONVERT(char(10),GETDATE(),102)  select @vTempStartDate = CONVERT(char(10),GETDATE(),102),  @vTempStartTime = CONVERT(char(5),GETDATE(),108)  IF @vCombinedDate = '01/01/1900 00:00' or @vCombinedDate is null  select @vStartDate = @vTempStartDate,  @vStartTime = @vTempStartTime  ELSE  select @vStartDate = CONVERT(char(10),@vCombinedDate,102),  @vStartTime = CONVERT(char(5),@vCombinedDate,108)  FETCH NEXT FROM WO_cursor INTO @NextTech,  @cNextGroup,   @cNextStation,   @vNextETTR,  @NextRoute_Sequence,  @NextStatus   WHILE (@@FETCH_STATUS = 0)  BEGIN   select @cNextStation = isnull(@cNextStation ,'')  select @Last_Station = isnull(@Last_Station ,'')  select @PrevDate = @vStartDate   select @PrevTime = @vStartTime  exec SVC_Add_Station_Schedule @cStation OUTPUT,  @cStationGroup,  @WORKORDNUM,  @WORECTYPE,  @TECHID,  @vStartDate OUTPUT,  @vStartTime OUTPUT,  @vTempStartDate OUTPUT,   @vTempStartTime OUTPUT,   @vETTR,   @Status ,   @Priority,   @cNextStation,  @Last_Station,  @Route_Sequence,  @Ahhugah    IF @SetFirstStation = 1 and @cFirst_Station = ''  select @cFirst_Station = @cStation   if @vStartDate = '01/01/1900 00:00' or @vStartDate is null  BEGIN  select @vStartDate = @PrevDate  select @vStartTime = @PrevTime  select @vTempStartDate = @PrevDate  select @vTempStartTime = @PrevTime  END  if not (@cStation is null) or @cStation <> ''   update SVC06105   set Status = @Status,  ECOMPDT = @vStartDate,  EComp_Time = @vStartTime,   ETADTE = @vTempStartDate,  ETATME = @vTempStartTime,  STATIONID = @cStation  where WORECTYPE = @WORECTYPE AND   WORKORDNUM = @WORKORDNUM and   SEQUENCE1 = @Route_Sequence    select @Last_Station = @cStation,  @Status = @NextStatus,   @TempStatus = @NextStatus,  @cStation = @cNextStation,   @cStationGroup = @cNextGroup,  @TECHID = @NextTech,  @vETTR = @vNextETTR,  @Route_Sequence = @NextRoute_Sequence  FETCH NEXT FROM WO_cursor INTO @NextTech,  @cNextGroup,   @cNextStation,   @vNextETTR,  @NextRoute_Sequence,  @NextStatus   END    select @cNextStation = isnull(@cNextStation ,'')  select @Last_Station = isnull(@Last_Station ,'')  select @PrevDate = @vStartDate   select @PrevTime = @vStartTime  exec SVC_Add_Station_Schedule @cStation OUTPUT,  @cStationGroup,  @WORKORDNUM,  @WORECTYPE,  @TECHID,  @vStartDate OUTPUT,  @vStartTime OUTPUT,  @vTempStartDate OUTPUT,   @vTempStartTime OUTPUT,   @vETTR,   @Status ,   @Priority,   @cNextStation,  @Last_Station,  @Route_Sequence,  @Ahhugah   if not (@cStation is null) or @cStation <> ''   update SVC06105   set Status = @Status,  ECOMPDT = @vStartDate,  EComp_Time = @vStartTime,   ETADTE = @vTempStartDate,  ETATME = @vTempStartTime,  STATIONID = @cStation  where WORECTYPE = @WORECTYPE AND   WORKORDNUM = @WORKORDNUM and   SEQUENCE1 = @Route_Sequence    update SVC06100  set NUMRESCHED = NUMRESCHED + 1,  ECOMPDT = @vStartDate,  EComp_Time = @vStartTime,  STATIONID = case  when @SetFirstStation = 1 THEN @cFirst_Station   else STATIONID  end  where WORECTYPE = @WORECTYPE and WORKORDNUM = @WORKORDNUM  select @SetFirstStation = 0  END DEALLOCATE WO_cursor    
GO
GRANT EXECUTE ON  [dbo].[SVC_Schedule_Work_Order] TO [DYNGRP]
GO

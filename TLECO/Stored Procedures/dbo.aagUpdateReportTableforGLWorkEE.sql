SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE       procedure [dbo].[aagUpdateReportTableforGLWorkEE]  @USERID   nvarchar(15),  @BACHNUMB char(15),  @I_cTableAssign nvarchar(30) = null,  @I_cTableCode nvarchar(30) = null,  @I_cTableError nvarchar(30) = null,  @ErrFlag int output,  @SqlSessionID   int,  @val int output,  @I_UserID varchar(20),  @I_Right int  as begin  declare @JRNENTRY  int,  @RCTRXSEQ  numeric(19,5),  @TRXDATE  datetime,  @aaGLWorkHdrID  int,  @isint int,  @isval tinyint,  @BCHSOURC char(15),  @RecHdrID int,  @nCompanyID smallint,  @InterID char(5),  @Ledger_ID smallint   select  @JRNENTRY  = 0,  @RCTRXSEQ  = 0,  @aaGLWorkHdrID  = 0,  @isint   = 0,  @isval  = 0,  @RecHdrID = 0,  @nCompanyID = 0   if @val = 0  begin  delete AAG3000E   end   else  begin  delete AAG60000  delete AAG60001  delete AAG60002  end   declare cgl cursor fast_forward for  select JRNENTRY, RCTRXSEQ, TRXDATE , 'GL_Normal', Ledger_ID   from GL10000  where BACHNUMB = @BACHNUMB and   JRNENTRY >=0  union all  Select JRNENTRY, 0, TRXDATE, 'GL_Business', 1  from GL10100  where BSNSFMID = @BACHNUMB and  JRNENTRY > 0  union all  Select JRNENTRY, RCTRXSEQ, GLPOSTDT, 'GL_Normal', Ledger_ID  from AAG10000  where aaGLWorkHdrID in (Select aaGLWorkHdrID  from AAG3000E where aaErrorNum = 601)  open cgl  fetch next from cgl into @JRNENTRY, @RCTRXSEQ, @TRXDATE,@BCHSOURC ,@Ledger_ID   while @@fetch_status = 0  begin  exec aagIsInitialiseGLWork @JRNENTRY, @RCTRXSEQ,  @TRXDATE, @aaGLWorkHdrID output, @isint output  if @isint  = 0 and @RCTRXSEQ <> 0  begin  Select @nCompanyID = CMPANYID  from DYNAMICS..SY01500  where INTERID = db_name()   exec aagGLWorkRecurringBatch  @JRNENTRY,  @RCTRXSEQ,   @TRXDATE,  @RecHdrID output,  @nCompanyID,  @Ledger_ID  end  if @isint = 0  begin  select @InterID = db_name()  exec aagCreateDefaultAAForGLWork  @JRNENTRY,  @InterID,  @SqlSessionID,  @USERID   exec aagIsInitialiseGLWork @JRNENTRY, @RCTRXSEQ,  @TRXDATE, @aaGLWorkHdrID output, @isint output   end  if @val = 0  begin  exec aagValidateCodeGLWorkHdr @I_cTableAssign, @I_cTableCode,  @I_cTableError, @aaGLWorkHdrID , @isval output,@I_UserID,@I_Right   end   if not exists (Select aaGLWorkHdrID from AAG60000 where aaGLWorkHdrID = @aaGLWorkHdrID)  begin  insert into AAG60000  (USERID,TRXBTCHSRC,aaGLWorkHdrID,JRNENTRY,SERIES,GLPOSTDT)  values (@USERID,@BCHSOURC,@aaGLWorkHdrID, @JRNENTRY, 1, @TRXDATE)  end   fetch next from cgl into @JRNENTRY, @RCTRXSEQ, @TRXDATE,@BCHSOURC,@Ledger_ID  end  close cgl  deallocate cgl   if @val = 1  begin   set @val = 3  end   Select @ErrFlag = count(*) from AAG3000E end    
GO
GRANT EXECUTE ON  [dbo].[aagUpdateReportTableforGLWorkEE] TO [DYNGRP]
GO

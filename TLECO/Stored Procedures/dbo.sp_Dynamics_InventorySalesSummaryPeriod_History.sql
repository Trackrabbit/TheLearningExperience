SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[sp_Dynamics_InventorySalesSummaryPeriod_History] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqldefaultstring varchar(8000),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlstring3 varchar(8000),  @sqlstring4 varchar(8000),  @sqlstring5 varchar(8000),  @sqlstring6 varchar(8000),  @sqlstring7 varchar(8000),  @sqlstring8 varchar(8000),  @sqlstring9 varchar(8000),  @sqlstring10 varchar(8000),  @sqlstring11 varchar(8000),  @sqlstring12 varchar(8000),  @sqlstring13 varchar(8000),  @sqlstring14 varchar(8000),  @sqlstring15 varchar(8000),  @sqlstring16 varchar(8000),  @sqlstring17 varchar(8000),  @sqlstring18 varchar(8000),  @sqlstring19 varchar(8000),  @sqlstring20 varchar(8000),  @sqlstring21 varchar(8000),  @sqlstring22 varchar(8000),  @sqljoinstring varchar(8000),  @sqlaccessstring varchar(2000),  @tNumberSegments int,  @tSegment int,  @I_iDictID int,  @I_iLangID int,  @I_iMessageNumber int,  @I_iAliasMessageNumber int,  @I_iIntegerValue int,   @Summary_Type varchar(255), @Item_Number varchar(255), @Location_Code varchar(255), @Year varchar(255), @Summary_Period_Month varchar(255), @Summary_Costs varchar(255), @Summary_QTYS varchar(255), @Summary_Sales varchar(255), @Item_Description varchar(255), @DrillBack_Base_Url varchar(255), @Item_Number_For_DrillBack varchar(255)  select @DrillBack_Base_Url = DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)  select @I_iDictID = 0 select @I_iMessageNumber = 22030 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Summary_Type output   select @I_iDictID = 1493 select @I_iMessageNumber = 23100 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 26311 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Location_Code output   select @I_iDictID = 1493 select @I_iMessageNumber = 24958 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Year output   select @I_iDictID = 0 select @I_iMessageNumber = 22031 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Summary_Period_Month output   select @I_iDictID = 0 select @I_iMessageNumber = 22032 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Summary_Costs output   select @I_iDictID = 0 select @I_iMessageNumber = 22033 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Summary_QTYS output   select @I_iDictID = 0 select @I_iMessageNumber = 22034 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Summary_Sales output   select @I_iDictID = 1493 select @I_iMessageNumber = 23101 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Description output   select @I_iDictID = 1493 select @I_iMessageNumber = 23100 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Number_For_DrillBack output   select @sqldropstring =   'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[InventorySalesSummaryPeriod_History]'') and OBJECTPROPERTY(id, N''IsView'') = 1) ' +  'drop view [dbo].[InventorySalesSummaryPeriod_History] '  select @sqldefaultstring =   'CREATE VIEW InventorySalesSummaryPeriod_History AS ' +   'select ' +   '''' + @Summary_Type + ''' = dbo.DYN_FUNC_Summary_Type([''InventorySalesSummaryPeriod_History''].[SMRYTYPE]), ' + 'rtrim([''InventorySalesSummaryPeriod_History''].[ITEMNMBR]) as ''' + @Item_Number + ''', ' +  'rtrim([''InventorySalesSummaryPeriod_History''].[LOCNCODE]) as ''' + @Location_Code + ''', ' +  '[''InventorySalesSummaryPeriod_History''].[YEAR1] as ''' + @Year + ''', ' +  '[''InventorySalesSummaryPeriod_History''].[SMRYPMTH] as ''' + @Summary_Period_Month + ''', ' +  '[''InventorySalesSummaryPeriod_History''].[SMRYCOST] as ''' + @Summary_Costs + ''', ' +  '[''InventorySalesSummaryPeriod_History''].[SMRYQTYS] as ''' + @Summary_QTYS + ''', ' +  '[''InventorySalesSummaryPeriod_History''].[SMRYSALS] as ''' + @Summary_Sales + ''', ' +  'rtrim([''Item Master''].[ITEMDESC]) as ''' + @Item_Description + ''', ' +  '''' + @Item_Number_For_DrillBack + ''' = ''' + @DrillBack_Base_Url + ''' +dbo.dgppItemID(1,[''InventorySalesSummaryPeriod_History''].[ITEMNMBR],[''InventorySalesSummaryPeriod_History''].[LOCNCODE] ) '+  'from [IV30102] as [''InventorySalesSummaryPeriod_History''] with (NOLOCK) '  + 'left outer join [IV00101] as [''Item Master''] with (NOLOCK) on ' + '[''Item Master''].[ITEMNMBR] = [''InventorySalesSummaryPeriod_History''].[ITEMNMBR] '   select @sqlaccessstring =   'GRANT SELECT ON [dbo].[InventorySalesSummaryPeriod_History] TO [rpt_warehouse manager]' + 'GRANT SELECT ON [dbo].[InventorySalesSummaryPeriod_History] TO [rpt_materials manager]' + 'GRANT SELECT ON [dbo].[InventorySalesSummaryPeriod_History] TO [rpt_operations manager]' + 'GRANT SELECT ON [dbo].[InventorySalesSummaryPeriod_History] TO [rpt_executive]' + 'GRANT SELECT ON [dbo].[InventorySalesSummaryPeriod_History] TO [rpt_production manager]'   exec (@sqldropstring)  exec (@sqldefaultstring+' '+@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10+' '+@sqlstring11+' '+@sqlstring12+' '+@sqlstring13+' '+@sqlstring14+' '+@sqlstring15+' '+@sqlstring16+' '+@sqlstring17+' '+@sqlstring18+' '+@sqlstring19+' '+@sqlstring20+' '+@sqljoinstring)  exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[sp_Dynamics_InventorySalesSummaryPeriod_History] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create  procedure [dbo].[aagValidateCodeGLWorkHdr] @I_cTableAssign nvarchar(30) = null, @I_cTableCode nvarchar(30) = null, @I_cTableError nvarchar(30) = null, @I_nHdrID int, @O_fValidCode tinyint = 1 output, @I_UserID varchar(20), @I_Right int  as begin  set nocount on  declare  @nDistID int,  @nDebitAmt numeric(19,5),  @nCreditAmt numeric(19,5),  @nActIndx int,  @nAcctClassID int,  @nErrorCount int,  @fValidCode tinyint,  @dAcctDate datetime,   @dTransDate datetime,   @aaBrowseType smallint  set @fValidCode = 1  set @O_fValidCode = 1  set @aaBrowseType = 0  declare aaGLWorkHdr cursor fast_forward FOR  select AAG10001.aaGLWorkDistID,  case when aaBrowseType < 2 then  case when (select aaIsOptionSet from AAG00700 where aaOption = 6) = 1 then   case when Ass.aaAssignedPercent < 10000 then 2 else 1 end  else 1 end  else aaBrowseType end as aaBrowseType,  DEBITAMT,CRDTAMNT,ACTINDX,convert(datetime,convert(char(12),aaChangeDate,102)+ convert(char(12),aaChangeTime,108))  from AAG10001 Inner join (Select sum(aaAssignedPercent) aaAssignedPercent, aaGLWorkHdrID, aaGLWorkDistID  from AAG10002 where aaGLWorkHdrID = @I_nHdrID  group by aaGLWorkHdrID, aaGLWorkDistID) Ass   on AAG10001.aaGLWorkHdrID = Ass.aaGLWorkHdrID and AAG10001.aaGLWorkDistID = Ass.aaGLWorkDistID   where AAG10001.aaGLWorkHdrID = @I_nHdrID and INTERID = DB_NAME()  open aaGLWorkHdr  Fetch next from aaGLWorkHdr into @nDistID,@aaBrowseType,@nDebitAmt,@nCreditAmt, @nActIndx,@dTransDate  while @@fetch_status = 0  Begin  Set @fValidCode = 1  If exists(select aaAcctClassID from AAG00200 where ACTINDX = @nActIndx)  begin  select @nAcctClassID = aaAcctClassID from AAG00200 where ACTINDX = @nActIndx  select @dAcctDate = convert(datetime,convert(char(12),aaChangeDate,102)+ convert(char(12),aaChangeTime,108)) from AAG00200 where ACTINDX = @nActIndx  end  Else  set @nAcctClassID = 0   if @dAcctDate>@dTransDate  begin    Exec aagValidateCodeGLWorkDist  1,  @I_cTableAssign,  @I_cTableCode,  @I_cTableError,  @I_nHdrID,  @nDistID,  @nDebitAmt,  @nCreditAmt,  @nAcctClassID,  @nActIndx,  1,  @fValidCode output,  @I_UserID,  @I_Right    If @fValidCode = 0  set @O_fValidCode = 0  else  if exists (select Top 1 aaTrxCodeID from AAG10001 a inner join AAG10003 d on a.aaGLWorkHdrID = d.aaGLWorkHdrID AND   a.aaGLWorkDistID = d.aaGLWorkDistID  inner join AAG00202 c on d.aaTrxDimID = c.aaTrxDimID and   c.aaAcctClassID = @nAcctClassID   where a.aaGLWorkHdrID = @I_nHdrID  and a.aaGLWorkDistID = @nDistID  and a.ACTINDX = @nActIndx and   ((aaDataEntry = 2 and aaTrxCodeID = 0 ) or (aaDataEntry = 4 and (aaTrxCodeID = 0 or aaTrxCodeID <> aaTrxDimCodeIDDflt))))  set @aaBrowseType = 2   end  else set @fValidCode = 1   If (@fValidCode = 1 and @aaBrowseType > 1)   Begin   exec aagValidateCodeGLWorkDist  2,  @I_cTableAssign,  @I_cTableCode,  @I_cTableError,  @I_nHdrID,  @nDistID,  @nDebitAmt,  @nCreditAmt,  @nAcctClassID,  @nActIndx,  1,  @fValidCode output,  @I_UserID,  @I_Right   If @fValidCode = 0 set @O_fValidCode = 0  End   Fetch next from aaGLWorkHdr into @nDistID,@aaBrowseType,@nDebitAmt,@nCreditAmt, @nActIndx,@dTransDate  End  close aaGLWorkHdr  deallocate aaGLWorkHdr   exec aagUpdateSLDistForBrowseTypeGLWork  @I_cTableError,  @I_nHdrID,  1  exec aagUpdateSLDistForBrowseTypeGLWork  @I_cTableError,  @I_nHdrID,  0  set nocount off  return end    
GO
GRANT EXECUTE ON  [dbo].[aagValidateCodeGLWorkHdr] TO [DYNGRP]
GO

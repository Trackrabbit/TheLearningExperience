SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_RET_Convert_Contract_Revenue] AS  declare     @CONSTS smallint ,  @CONTNBR char (11) ,  @LNSEQNBR numeric(19, 5),  @Billed numeric(19,5),  @Remaining numeric(19,5),  @STRTDATE datetime ,  @ENDDATE datetime ,  @NextDate datetime,  @LastDate datetime,  @TransactionDate datetime,  @SourceDocument varchar(255),  @ErrorCondition integer,  @DiscountPercent numeric(19,5),  @UserID char(30)  set nocount on  DECLARE PostedRevenueCursor CURSOR FOR select CONSTS, CONTNBR, LNSEQNBR,STRTDATE,ENDDATE,Last_Liability_Date,Next_Liability_Date,Total_Liability_Billed,TOTAL - Total_Liability_Billed,case when DSCDLRAM > 0 then DSCDLRAM / TOTAL else 0 end from SVC00601  where CONSTS = 2 and  BILCYC > 1 and not exists(select * from SVC_ContractConvert where SVC_ContractConvert.CONSTS = SVC00601.CONSTS and  SVC_ContractConvert.CONTNBR = SVC00601.CONTNBR and   SVC_ContractConvert.LNSEQNBR = SVC00601.LNSEQNBR and  SVC_ContractConvert.Status = 3)  select @TransactionDate = convert(char(12),getdate(),102),  @UserID = SYSTEM_USER OPEN PostedRevenueCursor  FETCH NEXT FROM PostedRevenueCursor into @CONSTS, @CONTNBR, @LNSEQNBR,@STRTDATE , @ENDDATE,@LastDate,@NextDate,@Billed,@Remaining,@DiscountPercent WHILE (@@fetch_status <> -1) BEGIN  select @SourceDocument = '2-' + RTRIM(@CONTNBR) + '-' + CONVERT(varchar(20),@LNSEQNBR) + '-DCP'  begin transaction  IF @Billed > 0   BEGIN   IF CONVERT(varchar(10),@LastDate,101) = '01/01/1900'  select @LastDate = @ENDDATE  exec SVC_RET_Create_Revenue_Recognition_Lines  -99,   -99,  @CONSTS,  @CONTNBR,  @LNSEQNBR ,  1,  '01/01/1900 00:00:00',  'CAL',  @SourceDocument ,  @TransactionDate,  @Billed,  @UserID ,  @STRTDATE,  @LastDate,  @DiscountPercent,  @ErrorCondition OUTPUT  IF exists (select * from SVC_ContractConvert where SVC_ContractConvert.CONSTS = @CONSTS and  SVC_ContractConvert.CONTNBR = @CONTNBR and   SVC_ContractConvert.LNSEQNBR = @LNSEQNBR)  UPDATE SVC_ContractConvert  SET Status=2  WHERE SVC_ContractConvert.CONSTS = @CONSTS and  SVC_ContractConvert.CONTNBR = @CONTNBR and   SVC_ContractConvert.LNSEQNBR = @LNSEQNBR   ELSE  INSERT INTO SVC_ContractConvert(CONSTS, CONTNBR, LNSEQNBR, Status)  VALUES(@CONSTS,@CONTNBR,@LNSEQNBR ,2)   END   IF @Remaining > 0  BEGIN   IF CONVERT(varchar(10),@NextDate,101) = '01/01/1900'  select @NextDate = @STRTDATE  select @SourceDocument = '2-' + RTRIM(@CONTNBR) + '-' + CONVERT(varchar(20),@LNSEQNBR) + '-DCU'  exec SVC_RET_Create_Revenue_Recognition_Lines  -1,   -1,  @CONSTS,  @CONTNBR,  @LNSEQNBR ,  0,  '01/01/1900 00:00:00',  'CAL',  @SourceDocument ,  @TransactionDate,  @Remaining,  @UserID ,  @NextDate,  @ENDDATE,  @DiscountPercent,  @ErrorCondition OUTPUT   IF exists (select * from SVC_ContractConvert where SVC_ContractConvert.CONSTS = @CONSTS and  SVC_ContractConvert.CONTNBR = @CONTNBR and   SVC_ContractConvert.LNSEQNBR = @LNSEQNBR)  UPDATE SVC_ContractConvert  SET Status=3  WHERE SVC_ContractConvert.CONSTS = @CONSTS and  SVC_ContractConvert.CONTNBR = @CONTNBR and   SVC_ContractConvert.LNSEQNBR = @LNSEQNBR   ELSE  INSERT INTO SVC_ContractConvert(CONSTS, CONTNBR, LNSEQNBR, Status)  VALUES(@CONSTS,@CONTNBR,@LNSEQNBR ,3)   END  commit transaction   FETCH NEXT FROM PostedRevenueCursor into @CONSTS, @CONTNBR, @LNSEQNBR,@STRTDATE , @ENDDATE,@LastDate,@NextDate,@Billed,@Remaining,@DiscountPercent END  CLOSE PostedRevenueCursor DEALLOCATE PostedRevenueCursor    
GO
GRANT EXECUTE ON  [dbo].[SVC_RET_Convert_Contract_Revenue] TO [DYNGRP]
GO

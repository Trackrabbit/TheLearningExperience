SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taFSRTVLineSerial] @I_vRTV_Number char(15),   @I_vRTV_Line numeric(19,5),   @I_vVENDORID char(15) = null,   @I_vADRSCODE char(15) = null,   @I_vQTYTYPE smallint = null,   @I_vSERLTQTY numeric(19,5) = 1,   @I_vSLTSQNUM integer = 0,   @I_vInOrOut smallint = 1,   @I_vITEMNMBR char(31) = null,   @I_vSERLNMBR char(21) = null,    @I_vBIN char(15) = null,   @I_vLOCNCODE char(11) = null,   @I_vSVC_Original_Serial tinyint = null,  @I_vDATERECD datetime = null,   @I_vShipped tinyint = null,   @I_vCREATEEQUIPMENT tinyint = 0,   @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',     @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @O_TODAY datetime,  @O_DUMMYDT datetime,  @Line_Seq_Exists smallint,  @iStatus int,  @iCustomState int,  @iVendorrString varchar(255),  @iAddCodeErrState int,    @O_oErrorState int,  @iError int,  @sCompanyID smallint,    @O_vEquipment_ID int,  @iPREVSERLNMBR char(21),  @O_vTRXSORCE char(13),  @O_vMARKED tinyint,  @O_vPOSTED tinyint,  @iQtySold numeric(19,5),  @iSerialSold smallint,  @SRLSTAT char(10),  @O_vADDRESS1 char(30),  @O_vADDRESS2 char(30),  @O_vADDRESS3 char(30),  @O_vCOUNTRY char(30),  @O_vCITY char(30),  @O_vSTATE char(30),  @O_vZIPCODE char(10),  @O_vVNDCNTCT char(30),  @O_vPHONE1 char(22),  @O_vSERLTQTY numeric(17,5),  @iValueExists smallint,  @O_vDTSEQNUM numeric(19,5),  @iITMTRKOP smallint,  @O_vITEMNMBR char(31),  @O_vSERLNMBR char(21),  @O_vBIN char(15),  @O_vSVC_Serial_ID char(21),  @O_vEQUIPID int,  @Serial_ID char(21),  @O_vReturn_Item_Number char(31),  @O_vReturn_Serial_Number char(21),  @O_vTOBIN char(15),  @O_vSVC_Return_Serial_ID char(21),  @O_vReturn_Equipment_ID int,  @iSTNDCOST numeric(19,5),  @iCURRCOST numeric(19,5),  @O_vRETCOST numeric(19,5),  @RETCSTNR char(15),  @RETADRSCODE char(15)  select   @O_TODAY = convert(varchar(10), getdate(), 101),  @O_DUMMYDT = convert(varchar(10), '1900/01/01', 100),  @Line_Seq_Exists = 0,  @iStatus  = 0,  @iCustomState  = 0,  @iVendorrString = '',  @iAddCodeErrState  = 0,  @O_oErrorState  = 0,  @iError  = 0,  @sCompanyID  = 0,  @O_vEquipment_ID = 0,  @iPREVSERLNMBR = '',  @O_vTRXSORCE = '',  @O_vMARKED = 0,  @O_vPOSTED = 0,  @O_iErrorState = 0,  @oErrString = '',  @iQtySold = 0,  @iSerialSold = 0,  @SRLSTAT = '',  @O_vADDRESS1 = '',  @O_vADDRESS2 = '',  @O_vADDRESS3 = '',  @O_vCOUNTRY = '',  @O_vCITY = '',  @O_vSTATE = '',  @O_vZIPCODE = '',  @O_vVNDCNTCT = '',  @O_vPHONE1 = '',  @O_vSERLTQTY =1,  @iValueExists = 0,  @O_vDTSEQNUM = 1,  @iITMTRKOP = 1,  @O_vITEMNMBR = '',  @O_vSERLNMBR = '',  @O_vBIN = '',  @O_vSVC_Serial_ID = '',  @O_vEQUIPID = 0,  @O_vReturn_Item_Number = '',  @O_vReturn_Serial_Number = '',  @O_vTOBIN = '',  @O_vSVC_Return_Serial_ID = '',  @O_vReturn_Equipment_ID = 0,  @O_vRETCOST = 0,  @RETCSTNR = '',  @RETADRSCODE = '',  @iSTNDCOST = 0,  @iCURRCOST = 0,  @Serial_ID = ''  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taFSRTVLineSerialPre  @I_vRTV_Number output,  @I_vRTV_Line output,  @I_vVENDORID output,  @I_vADRSCODE output,  @I_vQTYTYPE output,  @I_vSERLTQTY output,  @I_vSLTSQNUM output,  @I_vInOrOut output,  @I_vITEMNMBR output,  @I_vSERLNMBR output,  @I_vBIN output,   @I_vLOCNCODE output,    @I_vSVC_Original_Serial output,  @I_vDATERECD output,   @I_vShipped output,  @I_vCREATEEQUIPMENT output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iVendorrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iVendorrString))  set @O_iErrorState = 10240     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @SRLSTAT = isnull(SRLSTAT, ''), @RETCSTNR = RETCSTNR  from SVC00998 (nolock)  if( @I_vRTV_Number is NULL or  @I_vRTV_Line is NULL or  @I_vITEMNMBR is NULL or  @I_vVENDORID is NULL or  @I_vADRSCODE is NULL or  @I_vLOCNCODE is NULL or   @I_vQTYTYPE is NULL or  @I_vSERLNMBR is NULL  ) begin  set @O_iErrorState = 10241    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vRTV_Number='' or  @I_vVENDORID = '' or  @I_vADRSCODE = '' or  @I_vITEMNMBR = '' or  @I_vSERLNMBR = '' or  @I_vLOCNCODE = '' or  @I_vRTV_Line = 0  ) begin  set @O_iErrorState = 10242    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vRTV_Line < 0 or  @I_vSLTSQNUM < 0 or  @I_vQTYTYPE < 0 or  @I_vSVC_Original_Serial < 0   ) begin  set @O_iErrorState = 10243    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vUpdateIfExists not in (0,1)) begin  set @O_iErrorState = 10262     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vRTV_Number = UPPER(@I_vRTV_Number),  @I_vITEMNMBR = UPPER(rtrim(@I_vITEMNMBR)),  @I_vSERLNMBR = UPPER(rtrim(@I_vSERLNMBR)),  @I_vVENDORID = UPPER(rtrim(@I_vVENDORID)),  @I_vADRSCODE = UPPER(rtrim(@I_vADRSCODE)),  @I_vLOCNCODE = UPPER(rtrim(@I_vLOCNCODE))  if exists(select 1 from SVC05635 (nolock) where RTV_Number = @I_vRTV_Number and (MKDTOPST = 1 or POSTED = 1)) begin  set @O_iErrorState = 10342    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC05625 (nolock) where RTV_Number = @I_vRTV_Number and (MKDTOPST = 1 or POSTED = 1)) begin  set @O_iErrorState = 10333    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC05615 (nolock) where RTV_Number = @I_vRTV_Number and (MKDTOPST = 1 or POSTED = 1)) begin  set @O_iErrorState = 10244    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vQTYTYPE < 1 or @I_vQTYTYPE > 5) begin  set @O_iErrorState = 10334     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vInOrOut not in(1,2)) begin  set @O_iErrorState = 10266     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vSLTSQNUM = 0) begin  select @I_vSLTSQNUM = (isnull(max(SLTSQNUM),0) + 1) from SVC05602 (nolock)   where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE end  if exists (select 1 from SVC35602 (nolock) where RTV_Number = @I_vRTV_Number   and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM) begin  select @Line_Seq_Exists=1   set @O_iErrorState = 10340    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if exists(select 1 from SVC05602 (nolock) where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM) begin  select @Line_Seq_Exists=1 end  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)  begin  set @O_iErrorState = 10254    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@Line_Seq_Exists = 1) begin  select @O_vSERLTQTY = case  when @I_vSERLTQTY <= 0 then isnull(SERLTQTY, 1)  else @I_vSERLTQTY  end,  @I_vITEMNMBR = case     when @I_vITEMNMBR is null then isnull(ITEMNMBR, '')  else @I_vITEMNMBR  end,  @I_vSERLNMBR = case  when @I_vSERLNMBR is null then isnull(SERLNMBR, '')  else @I_vSERLNMBR  end,  @iPREVSERLNMBR = isnull(SERLNMBR, ''),  @I_vBIN = case  when @I_vBIN is null then isnull(BIN, '')  else @I_vBIN  end,  @O_vSVC_Serial_ID = isnull(SVC_Serial_ID, 0),  @O_vEQUIPID = isnull(EQUIPID, 0),  @O_vReturn_Item_Number = isnull(Return_Item_Number, ''),  @O_vReturn_Serial_Number = isnull(Return_Serial_Number, ''),  @O_vTOBIN = isnull(TOBIN, ''),  @O_vSVC_Return_Serial_ID = isnull(SVC_Return_Serial_ID, 0),  @O_vReturn_Equipment_ID = isnull(Return_Equipment_ID, 0),  @O_vRETCOST = isnull(RETCOST, 0),  @I_vSVC_Original_Serial = case  when @I_vSVC_Original_Serial is null then isnull(SVC_Original_Serial, 0)  else @I_vSVC_Original_Serial  end,  @I_vDATERECD = case  when @I_vDATERECD is null then isnull(DATERECD, @O_TODAY)  else @I_vDATERECD  end,  @O_vDTSEQNUM = isnull(DTSEQNUM, 1),  @O_vTRXSORCE = isnull(TRXSORCE, ''),  @O_vMARKED = isnull(MARKED, 0),  @O_vPOSTED = isnull(POSTED, 0),  @I_vShipped = case  when @I_vShipped is null then isnull(Shipped, 0)  else @I_vShipped  end  from SVC05602 (nolock)  where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM end  select @O_vSERLTQTY = case  when @I_vSERLTQTY <= 0 then 1  else @I_vSERLTQTY  end,  @I_vITEMNMBR = case   when @I_vITEMNMBR is null then ''  else @I_vITEMNMBR  end,  @I_vSERLNMBR = case  when @I_vSERLNMBR is null then ''  else @I_vSERLNMBR  end,  @I_vBIN = case  when @I_vBIN is null then ''  else @I_vBIN  end,  @O_vRETCOST = case  when @O_vRETCOST <> 0 then @O_vRETCOST  else 0  end,  @I_vSVC_Original_Serial = case  when @I_vSVC_Original_Serial is null then 0  else @I_vSVC_Original_Serial  end,  @I_vDATERECD = case  when @I_vDATERECD is null then @O_TODAY  else @I_vDATERECD  end,  @I_vShipped = case  when @I_vShipped is null then 0  else @I_vShipped  end  if (@I_vITEMNMBR <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @iITMTRKOP = ITMTRKOP, @iSTNDCOST = isnull(STNDCOST, 0.0), @iCURRCOST = isnull(CURRCOST, 0.0)  from IV00101 (nolock) where ITEMNMBR=@I_vITEMNMBR  if @iValueExists <> 1  begin  set @O_iErrorState = 10335     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vVENDORID <> '') begin  if not exists(select 1 from PM00200 (nolock) where VENDORID=@I_vVENDORID)  begin  set @O_iErrorState = 10336     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vADRSCODE <> '') begin  set @iValueExists = 0  select  @iValueExists = 1,  @O_vADDRESS1=isnull(ADDRESS1,''),  @O_vADDRESS2=isnull(ADDRESS2,''),  @O_vADDRESS3=isnull(ADDRESS3,''),  @O_vCOUNTRY=isnull(COUNTRY,''),  @O_vCITY=isnull(CITY,''),  @O_vSTATE=isnull(STATE,''),  @O_vZIPCODE=isnull(ZIPCODE,''),  @O_vVNDCNTCT=isnull(VNDCNTCT,0),  @O_vPHONE1=isnull(PHNUMBR1,'')  from PM00300 (nolock) where VENDORID=@I_vVENDORID and ADRSCODE = @I_vADRSCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10338    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vLOCNCODE <> '')  begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10337    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  if not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10339    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@Line_Seq_Exists = 1) and (@I_vSERLTQTY < 0) begin  delete from SVC05602 where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  if (@@error <> 0)  begin  set @O_iErrorState = 10255     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vSERLNMBR <> '') begin  set @O_vEquipment_ID = 0  set @iValueExists = 0  select @iValueExists = 1, @iSerialSold = isnull(SERLNSLD, 0),   @O_vDTSEQNUM = isnull(DTSEQNUM, 0),   @O_vRETCOST = case   when @O_vRETCOST = 0 then isnull(UNITCOST, 0)  else @O_vRETCOST  end  from IV00200 (nolock) where ITEMNMBR=@I_vITEMNMBR AND LOCNCODE = @I_vLOCNCODE AND SERLNMBR = @I_vSERLNMBR   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10256     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   set @iValueExists = 0  select @iValueExists = 1,   @Serial_ID = case  when @O_vSVC_Serial_ID <> '' and @I_vInOrOut = 1 and @I_vSERLNMBR = @iPREVSERLNMBR then @O_vSVC_Serial_ID  when @O_vSVC_Return_Serial_ID <> '' and @I_vInOrOut <> 1 and @I_vSERLNMBR = @iPREVSERLNMBR then @O_vSVC_Return_Serial_ID  else isnull(SVC_Serial_ID, '')  end  from SVC00300 (nolock) where ITEMNMBR=@I_vITEMNMBR AND SERLNMBR = @I_vSERLNMBR   if (@iValueExists <> 1)  begin  if @I_vCREATEEQUIPMENT = 1  begin  if (@RETCSTNR = '')  begin  set @O_iErrorState = 10263    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@RETCSTNR <> '')  begin  set @iValueExists = 0  select  @iValueExists=1,  @RETADRSCODE = ADRSCODE  from RM00101 (nolock) where CUSTNMBR=@RETCSTNR  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10264     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   exec @iStatus = taFSEquipmentMaster  @I_vSERLNMBR = @I_vSERLNMBR,  @I_vITEMNMBR = @I_vITEMNMBR,  @I_vCUSTNMBR = @RETCSTNR,  @I_vADRSCODE = @RETADRSCODE,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  set @O_iErrorState = 10265   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  select @Serial_ID = case  when @Serial_ID = '' then @I_vSERLNMBR  else @Serial_ID  end   if (@O_vEquipment_ID = 0) or (@iPREVSERLNMBR <> '' and @I_vSERLNMBR <> @iPREVSERLNMBR)  begin  select @O_vEquipment_ID = isnull(EQUIPID, 0) from SVC00300 (nolock) where SERLNMBR = @I_vSERLNMBR and ITEMNMBR = @I_vITEMNMBR  end end  select @O_vRETCOST = case  when @O_vRETCOST = 0 and @iCURRCOST > 0 then @iCURRCOST  when @O_vRETCOST = 0 and @iSTNDCOST > 0 then @iSTNDCOST  when @O_vRETCOST <> 0 then @O_vRETCOST  else 0  end  if (@I_vDATERECD is NULL)  set @I_vDATERECD = ''  if (@I_vDATERECD <> '') and not (datepart(hour,@I_vDATERECD) = 0 and datepart(minute,@I_vDATERECD) = 0 and datepart(second,@I_vDATERECD) = 0   and datepart(millisecond,@I_vDATERECD) = 0) begin  set @O_iErrorState = 10257    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end if (@I_vDATERECD = '')  set @I_vDATERECD = @O_TODAY  if (@Line_Seq_Exists = 0) and (@I_vInOrOut <> 1) begin  set @O_iErrorState = 10258     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@Line_Seq_Exists=0) begin  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name() end  if (@O_iErrorState <> '')  return (@O_iErrorState)  if (@I_vInOrOut = 1)   begin  select @O_vITEMNMBR = @I_vITEMNMBR,  @O_vSERLNMBR = @I_vSERLNMBR,  @O_vBIN = @I_vBIN,  @O_vSVC_Serial_ID = case  when @Serial_ID <> '' and  (@iITMTRKOP = 2 or @iITMTRKOP = 3) then @Serial_ID  when @Serial_ID = '' and (@iITMTRKOP = 2 or @iITMTRKOP = 3) then @I_vSERLNMBR  else ''  end,  @O_vEQUIPID = @O_vEquipment_ID,  @O_vReturn_Item_Number = '',  @O_vReturn_Serial_Number = '',  @O_vTOBIN = '',  @O_vSVC_Return_Serial_ID = '',  @O_vReturn_Equipment_ID = 0 end else  begin  select @O_vReturn_Item_Number = @I_vITEMNMBR,  @O_vReturn_Serial_Number = @I_vSERLNMBR,  @O_vTOBIN = @I_vBIN,  @O_vSVC_Return_Serial_ID = case  when @Serial_ID <> '' and (@iITMTRKOP = 2 or @iITMTRKOP = 3) then @Serial_ID  when @Serial_ID = '' and (@iITMTRKOP = 2 or @iITMTRKOP = 3) then @I_vSERLNMBR  else ''  end,  @O_vReturn_Equipment_ID = @O_vEquipment_ID  from SVC05602 where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM end  if (@Line_Seq_Exists=0) begin  insert into SVC05602( RTV_Number,  RTV_Line,  QTYTYPE,  SERLTQTY,  SLTSQNUM,  ITEMNMBR,  SERLNMBR,  BIN,  SVC_Serial_ID,  EQUIPID,  Return_Item_Number,  Return_Serial_Number,  TOBIN,  SVC_Return_Serial_ID,  Return_Equipment_ID,  RETCOST,  SVC_Original_Serial,  DATERECD,  DTSEQNUM,  TRXSORCE,  MARKED,  POSTED,  Shipped,  MFGDATE,  EXPNDATE  )  select  @I_vRTV_Number,  @I_vRTV_Line,  @I_vQTYTYPE,  @O_vSERLTQTY,  @I_vSLTSQNUM,  @O_vITEMNMBR,  @O_vSERLNMBR,  @O_vBIN,  @O_vSVC_Serial_ID,  @O_vEQUIPID,  @O_vReturn_Item_Number,  @O_vReturn_Serial_Number,  @O_vTOBIN,  @O_vSVC_Return_Serial_ID,  @O_vReturn_Equipment_ID,  @O_vRETCOST,  @I_vSVC_Original_Serial,  @I_vDATERECD,  @O_vDTSEQNUM,  @O_vTRXSORCE,  @O_vMARKED,  @O_vPOSTED,  @I_vShipped,  '1900-01-01',    '1900-01-01'    if (@@error <> 0)  begin  set @O_iErrorState = 10259    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end else begin  if (@I_vUpdateIfExists > 0)  begin  update SVC05602 set SERLTQTY = @O_vSERLTQTY,  SLTSQNUM = @I_vSLTSQNUM,  ITEMNMBR = @O_vITEMNMBR,  SERLNMBR = @O_vSERLNMBR,  BIN = @O_vBIN,  SVC_Serial_ID = @O_vSVC_Serial_ID,  EQUIPID = @O_vEQUIPID,  Return_Item_Number = @O_vReturn_Item_Number,  Return_Serial_Number = @O_vReturn_Serial_Number,  TOBIN = @O_vTOBIN,  SVC_Return_Serial_ID = @O_vSVC_Return_Serial_ID,  Return_Equipment_ID = @O_vReturn_Equipment_ID,  RETCOST = @O_vRETCOST,  SVC_Original_Serial = @I_vSVC_Original_Serial,  DATERECD = @I_vDATERECD,  DTSEQNUM = @O_vDTSEQNUM,  TRXSORCE = @O_vTRXSORCE,  MARKED = @O_vMARKED,  POSTED = @O_vPOSTED,  Shipped = @I_vShipped  where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  if (@@error <> 0)  begin  set @O_iErrorState = 10260    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  if @I_vITEMNMBR <> '' and @I_vLOCNCODE <> '' and @iPREVSERLNMBR <> '' and @I_vSERLNMBR <> '' begin  update IV00200 set SERLNSLD = 0 where ITEMNMBR = @I_vITEMNMBR AND LOCNCODE = @I_vLOCNCODE AND SERLNMBR = @iPREVSERLNMBR  if (@@error <> 0)  begin  set @O_iErrorState = 10267     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if @iSerialSold <> 1 and @I_vITEMNMBR <> '' and @I_vLOCNCODE <> '' and @I_vSERLNMBR <> '' begin  update IV00200 set SERLNSLD = 1 where ITEMNMBR = @I_vITEMNMBR AND LOCNCODE = @I_vLOCNCODE AND SERLNMBR = @I_vSERLNMBR  if (@@error <> 0)  begin  set @O_iErrorState = 10268     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  exec @iStatus = taFSRTVLineSerialPost  @I_vRTV_Number,  @I_vRTV_Line,  @I_vVENDORID,  @I_vADRSCODE,  @I_vQTYTYPE,  @I_vSERLTQTY,  @I_vSLTSQNUM,  @I_vInOrOut,  @I_vITEMNMBR,  @I_vSERLNMBR,  @I_vBIN,   @I_vLOCNCODE,   @I_vSVC_Original_Serial,  @I_vDATERECD,   @I_vShipped,  @I_vCREATEEQUIPMENT,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iVendorrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iVendorrString))  set @O_iErrorState = 10261    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taFSRTVLineSerial] TO [DYNGRP]
GO

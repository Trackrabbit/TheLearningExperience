SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopEnterMatchInvHdr]  @I_vPOPRCTNM char(17),     @I_vVNDDOCNM char(20),     @I_vreceiptdate datetime,    @I_vBACHNUMB char(15),     @I_vVENDORID char(15),     @I_vVENDNAME char(64) = '',    @I_vSUBTOTAL numeric(19,5),    @I_vTRDISAMT numeric(19,5) = 0,    @I_vFRTAMNT numeric(19,5) = 0,    @I_vMISCAMNT numeric(19,5) = 0,    @I_vTAXAMNT numeric(19,5) = 0,    @I_vTEN99AMNT numeric(19,5) = 0,   @I_vPYMTRMID char(20) = null,    @I_vDSCPCTAM numeric(19,2) = null,   @I_vDSCDLRAM numeric(19,5) = null,   @I_vDISAVAMT numeric(19,5) = null,   @I_vUSER2ENT char(15) = '',    @I_vTIME1 datetime = '',    @I_vAUTOCOST int = 0,     @I_vTAXSCHID char(15) = '',    @I_vPurchase_Freight_Taxable smallint = 2,  @I_vPurchase_Misc_Taxable smallint = 2,   @I_vFRTSCHID char(15) = '',    @I_vMSCSCHID char(15) = '',    @I_vFRTTXAMT numeric(19,5) = 0,    @I_vMSCTXAMT numeric(19,5) = 0,    @I_vUSINGHEADERLEVELTAXES smallint = 0,   @I_vCURNCYID char(15) = '',    @I_vXCHGRATE numeric(19,7) = 0,    @I_vRATETPID char(15) = '',    @I_vEXPNDATE datetime = '',    @I_vEXCHDATE datetime = '',    @I_vEXGTBDSC char(30) = '',    @I_vEXTBLSRC char(50) = '',    @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,    @I_vRATEVARC numeric(19,7) = 0,    @I_vTRXDTDEF smallint = -1,    @I_vRTCLCMTD smallint = -1,    @I_vPRVDSLMT smallint = 0,    @I_vDATELMTS smallint = 0,    @I_vDUEDATE datetime = '',    @I_vDISCDATE datetime = '',    @I_vNOTETEXT varchar(8000) = '',   @I_vRequesterTrx smallint = 0,    @I_vCREATEDIST smallint = 1,    @I_vBackoutTradeDiscTax numeric(19,5) = 0,  @I_vVADCDTRO char(15) = null,    @I_vUSRDEFND1 char(50) = '',    @I_vUSRDEFND2 char(50) = '',    @I_vUSRDEFND3 char(50) = '',    @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iStatus int,  @O_iInitErrorState int,  @oInitErrString varchar(255),  @O_oErrorState int,  @iCustomState int,  @iCustomErrString varchar(255),  @iError int,  @EXTDCOST numeric(19,5),  @ACCTAMNT numeric(19,5),  @BCHSOURC char(15),  @iUpdtBthErrState int,  @iCreateBatchErrString varchar(255),  @VENDNAME char(64),  @SHIPMTHD char(15),  @dDISCDATE datetime,  @dDUEDATE datetime,  @iCalcDueDateErrString varchar(255),  @iCalcDueDateErrState int,  @TAXAMNTL numeric(19,5),  @TAXAMNTH numeric(19,5),  @FRTTXAMT numeric(19,5),  @ORFRTTAX numeric(19,5),  @MSCTXAMT numeric(19,5),  @ORMSCTAX numeric(19,5),  @FUNLCURR char(15),  @DECPLCUR int,  @ORSUBTOT numeric(19,5),  @ORTDISAM numeric(19,5),  @ORFRTAMT numeric(19,5),  @ORMISCAMT numeric(19,5),  @ORTAXAMT numeric(19,5),  @OR1099AM numeric(19,5),  @ORDDLRAT numeric(19,5),  @ORDAVAMT numeric(19,5),  @OBTAXAMT numeric(19,5),  @OrigBackoutFreightTaxAmt numeric(19,5),  @OrigBackoutMiscTaxAmt numeric(19,5),  @OrigBackoutTradeDiscTax numeric(19,5),  @CURRNIDX int,  @ISMCTRX int,  @EXGTBLID char(15),  @taMCCurrencyValidateErrString varchar(255),  @taMCCurrencyValidateErrState int,  @linecount int,  @sCompanyID smallint,  @iGetNextNoteIdxErrState int,  @RCPTNOTE_1 numeric(19,5),  @RCPTNOTE_2 numeric(19,5),  @RCPTNOTE_3 numeric(19,5),  @RCPTNOTE_4 numeric(19,5),  @RCPTNOTE_5 numeric(19,5),  @RCPTNOTE_6 numeric (19,5),  @RCPTNOTE_7 numeric (19,5),  @RCPTNOTE_8 numeric (19,5),  @dtDEFAULT datetime,  @iUpdDistErrState int,  @ORTOTTax numeric(19,5),  @TOTTAXAMNT numeric(19,5),  @UpdDistErrString varchar(255),  @LNVENDORID char(15),  @PYMTRMID char(20),  @DSCLCTYP smallint,  @DSCDLRAM numeric(19,5),  @DSCPCTAM numeric(19,5),  @SALPURCH smallint,  @DISCNTCB smallint,  @FREIGHT smallint,  @MISC smallint,  @TAX smallint,  @PymtTermAmnt numeric(19,5),  @curncount int,  @curnid char(15),  @ORDECPLCUR smallint,  @BCKTXAMT numeric(19,5),  @BackoutFreightTaxAmt numeric(19,5),  @BackoutMiscTaxAmt numeric(19,5),  @BackoutTradeDiscTax numeric(19,5),  @SumLineORTAXAMT numeric(19,5),  @TrDisTax numeric(19,5),  @TrDisTaxDif numeric(19,5),  @OrTrDisTax numeric(19,5),  @OrTrDisTaxDif numeric(19,5),  @BckRunTax numeric(19,5),  @BckRunFrt numeric(19,5),  @BckRunMsc numeric(19,5),  @BckRunLn numeric(19,5),  @iCursorError int,  @POPRCTNM char(17),  @RCPTLNNM int,  @TAXDTLID char(15),  @ACTINDX int,  @LocRcptLine int,  @VENDSTTS tinyint,  @MCINSTALLED smallint,  @TXRGNNUM char(25),  @INTERID char(5),  @TRDPCTPR numeric(25,0),  @TRDPCTPRNUM numeric(25,24),  @TRDISAMT numeric(19,5),  @TRDDISCT numeric(19,5),  @TEN99TYPE smallint,     @TEN99BOXNUMBER smallint    select  @iStatus = 0,  @O_iInitErrorState = 0,  @oInitErrString = '',  @O_oErrorState = 0,  @iCustomState = 0,  @iCustomErrString = '',  @iError = 0,  @EXTDCOST = 0,  @ACCTAMNT = 0,  @BCHSOURC = 'Rcvg Trx Ivc',  @iUpdtBthErrState = 0,  @iCreateBatchErrString = '',  @VENDNAME = '',  @SHIPMTHD = '',  @dDISCDATE = '',  @dDUEDATE = '',  @iCalcDueDateErrString = '',  @iCalcDueDateErrState = 0,  @TAXAMNTL = 0,  @TAXAMNTH = 0,  @FRTTXAMT = 0,  @ORFRTTAX = 0,  @MSCTXAMT = 0,  @ORMSCTAX = 0,  @FUNLCURR = '',  @DECPLCUR = 0,  @ORSUBTOT = 0,  @ORTDISAM = 0,  @ORFRTAMT = 0,  @ORMISCAMT = 0,  @ORTAXAMT = 0,  @OR1099AM = 0,  @ORDDLRAT = 0,  @ORDAVAMT = 0,  @OBTAXAMT = 0,  @OrigBackoutFreightTaxAmt = 0,  @OrigBackoutMiscTaxAmt = 0,  @OrigBackoutTradeDiscTax = 0,  @CURRNIDX = 0,  @ISMCTRX = 0,  @EXGTBLID = '',  @taMCCurrencyValidateErrString = '',  @taMCCurrencyValidateErrState = 0,  @linecount = 0,  @sCompanyID = 0,  @iGetNextNoteIdxErrState = 0,  @RCPTNOTE_1 = 0,  @RCPTNOTE_2 = 0,  @RCPTNOTE_3 = 0,  @RCPTNOTE_4 = 0,  @RCPTNOTE_5 = 0,  @RCPTNOTE_6 = 0,  @RCPTNOTE_7 = 0,  @RCPTNOTE_8 = 0,  @dtDEFAULT = '',  @iUpdDistErrState = 0,  @ORTOTTax = 0,  @TOTTAXAMNT = 0,  @UpdDistErrString = '',  @LNVENDORID = '',  @PYMTRMID = '',  @DSCLCTYP = 0,  @DSCDLRAM = 0,  @DSCPCTAM = 0,  @SALPURCH = 1,  @DISCNTCB = 1,  @FREIGHT = 1,  @MISC = 1,  @TAX = 1,  @PymtTermAmnt = 0,  @curncount = 0,  @curnid = '',  @ORDECPLCUR = 0,  @BCKTXAMT = 0,  @BackoutFreightTaxAmt = 0,  @BackoutMiscTaxAmt = 0,  @BackoutTradeDiscTax = 0,  @SumLineORTAXAMT = 0,  @TrDisTax = 0,  @TrDisTaxDif = 0,  @OrTrDisTax = 0,  @OrTrDisTaxDif = 0,  @BckRunTax = 0,  @BckRunFrt = 0,  @BckRunMsc = 0,  @BckRunLn = 0,  @iCursorError = 0,  @POPRCTNM = '',  @RCPTLNNM = 0,  @TAXDTLID = '',  @ACTINDX = 0,  @LocRcptLine = 0,  @VENDSTTS = 0,  @MCINSTALLED = 1,  @O_iErrorState = 0,  @TXRGNNUM = '',  @INTERID = '',  @TRDPCTPR = 100000000000000000000,  @TRDPCTPRNUM = 0,  @TRDISAMT = 0,  @TRDDISCT = 0,  @TEN99TYPE = 0,  @TEN99BOXNUMBER = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopEnterMatchInvHdrPre  @I_vPOPRCTNM output,  @I_vVNDDOCNM output,  @I_vreceiptdate output,  @I_vBACHNUMB output,  @I_vVENDORID output,  @I_vVENDNAME output,  @I_vSUBTOTAL output,  @I_vTRDISAMT output,  @I_vFRTAMNT output,  @I_vMISCAMNT output,  @I_vTAXAMNT output,  @I_vTEN99AMNT output,  @I_vPYMTRMID output,  @I_vDSCPCTAM output,  @I_vDSCDLRAM output,  @I_vDISAVAMT output,  @I_vUSER2ENT output,  @I_vTIME1 output,  @I_vAUTOCOST output,  @I_vTAXSCHID output,  @I_vPurchase_Freight_Taxable output,  @I_vPurchase_Misc_Taxable output,  @I_vFRTSCHID output,  @I_vMSCSCHID output,  @I_vFRTTXAMT output,  @I_vMSCTXAMT output,  @I_vUSINGHEADERLEVELTAXES output,  @I_vCURNCYID output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vDUEDATE output,  @I_vDISCDATE output,  @I_vNOTETEXT output,  @I_vRequesterTrx output,  @I_vCREATEDIST output,  @I_vBackoutTradeDiscTax output,  @I_vVADCDTRO output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4779    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM is null or  @I_vVNDDOCNM is null or  @I_vreceiptdate is null or  @I_vBACHNUMB is null or  @I_vVENDORID is null or  @I_vVENDNAME is null or  @I_vSUBTOTAL is null or  @I_vTRDISAMT is null or  @I_vFRTAMNT is null or  @I_vMISCAMNT is null or  @I_vTAXAMNT is null or  @I_vTEN99AMNT is null or  @I_vUSER2ENT is null or  @I_vTIME1 is null or  @I_vAUTOCOST is null or  @I_vTAXSCHID is null or  @I_vPurchase_Freight_Taxable is null or  @I_vPurchase_Misc_Taxable is null or  @I_vFRTSCHID is null or  @I_vMSCSCHID is null or  @I_vFRTTXAMT is null or  @I_vMSCTXAMT is null or  @I_vUSINGHEADERLEVELTAXES is null or  @I_vCURNCYID is null or  @I_vXCHGRATE is null or  @I_vRATETPID is null or  @I_vEXPNDATE is null or  @I_vEXCHDATE is null or  @I_vEXGTBDSC is null or  @I_vEXTBLSRC is null or  @I_vRATEEXPR is null or  @I_vDYSTINCR is null or  @I_vRATEVARC is null or  @I_vTRXDTDEF is null or  @I_vRTCLCMTD is null or  @I_vPRVDSLMT is null or  @I_vDATELMTS is null or  @I_vDUEDATE is null or  @I_vDISCDATE is null or  @I_vNOTETEXT is null or  @I_vRequesterTrx is null or  @I_vCREATEDIST is null or  @I_vUSRDEFND1 is null or  @I_vUSRDEFND2 is null or  @I_vUSRDEFND3 is null or  @I_vUSRDEFND4 is null or  @I_vUSRDEFND5 is null) begin  select @O_iErrorState = 4780    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vPOPRCTNM = '' or  @I_vVNDDOCNM = '' or  @I_vreceiptdate = '' or  @I_vBACHNUMB = '' or  @I_vVENDORID = '') begin  select @O_iErrorState = 4781     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vPOPRCTNM = UPPER(@I_vPOPRCTNM),  @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vVNDDOCNM = UPPER(@I_vVNDDOCNM),  @I_vTAXSCHID = upper(@I_vTAXSCHID),  @I_vFRTSCHID = upper(@I_vFRTSCHID),  @I_vMSCSCHID = upper(@I_vMSCSCHID),  @I_vVADCDTRO = upper(@I_vVADCDTRO)  if ( (@I_vSUBTOTAL < 0) or  (@I_vTRDISAMT < 0) or  (@I_vFRTAMNT < 0) or  (@I_vMISCAMNT < 0) or  (@I_vTAXAMNT < 0) or  (@I_vTEN99AMNT < 0) or  (@I_vDSCPCTAM < 0) or  (@I_vDSCDLRAM < 0) or  (@I_vDISAVAMT < 0) or  (@I_vFRTTXAMT < 0) or  (@I_vMSCTXAMT < 0) or  (@I_vXCHGRATE < 0) or  (@I_vRATEVARC < 0)) begin  select @O_iErrorState = 4782    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDSCPCTAM > 100) begin  select @O_iErrorState = 4783     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAUTOCOST not in(0,1)) begin  select @O_iErrorState = 4784     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_Freight_Taxable not in(1,2,3)) begin  select @O_iErrorState = 4785     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_Misc_Taxable not in(1,2,3)) begin  select @O_iErrorState = 4786     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUSINGHEADERLEVELTAXES not in(0,1)) begin  select @O_iErrorState = 4787     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRATEEXPR not in(-1,0,1,2,3,4,5,6,7,8,9)) begin  select @O_iErrorState = 4788     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRXDTDEF not in(-1,0,1,2)) begin  select @O_iErrorState = 4789     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRTCLCMTD not in(-1,0,1)) begin  select @O_iErrorState = 4790     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDATELMTS not in(0,1)) begin  select @O_iErrorState = 4791     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRequesterTrx not in(0,1)) begin  select @O_iErrorState = 4792     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCREATEDIST not in(0,1)) begin  select @O_iErrorState = 6257     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vAUTOCOST = 1) and (@I_vSUBTOTAL > 0))  begin   select @O_iErrorState = 4793     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((exists(select 1 from POP10300 (nolock) where VENDORID = @I_vVENDORID and VNDDOCNM = @I_vVNDDOCNM and POPTYPE in(2,3))) or  (exists(select 1 from POP10300 (nolock) where VENDORID = @I_vVENDORID and VNDDOCNM = @I_vVNDDOCNM and POPTYPE in(2,3)))) begin  select @O_iErrorState = 4794     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((exists(select 1 from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM)) or  (exists(select 1 from POP30300 (nolock) where POPRCTNM = @I_vPOPRCTNM))) begin  select @O_iErrorState = 4795     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_Misc_Taxable <> 1) begin  select @I_vMSCSCHID = '' end  if (@I_vPurchase_Freight_Taxable <> 1) begin  select @I_vFRTSCHID = '' end  if (not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID)) begin  select @O_iErrorState = 4796     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM)) begin  select @LNVENDORID = VENDORID from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM   if @LNVENDORID <> @I_vVENDORID  begin  select @O_iErrorState = 5314     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @TXRGNNUM = TXRGNNUM,  @TRDDISCT = TRDDISCT  from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@I_vAUTOCOST = 0) begin  select @EXTDCOST = isnull(sum(EXTDCOST), 0) from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM   if (@EXTDCOST <> @I_vSUBTOTAL)  begin  select @O_iErrorState = 4797     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vAUTOCOST = 1) begin   select @I_vSUBTOTAL = isnull(sum(EXTDCOST), 0) from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  select @EXTDCOST = @I_vSUBTOTAL end  if (@I_vDISAVAMT > (@EXTDCOST + @I_vTAXAMNT + @I_vFRTAMNT + @I_vMISCAMNT - @I_vTRDISAMT)) begin  select @O_iErrorState = 4798     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRDISAMT > @I_vSUBTOTAL) begin  select @O_iErrorState = 5301     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vTRDISAMT is null) begin  select @TRDISAMT = round(@I_vSUBTOTAL*(@TRDDISCT/10000),@ORDECPLCUR) end  if (@I_vSUBTOTAL <> 0) begin  if (@I_vTRDISAMT is null)  begin  select @I_vTRDISAMT = @TRDISAMT   if (@I_vTRDISAMT = 0)  begin  select @TRDPCTPR = 0  end  else  begin  select @TRDPCTPR = 100000000000000000000  end  end  else  begin  if ((@I_vTRDISAMT = 0) and (@TRDISAMT = 0))  begin  select @TRDPCTPR = 0  end  else  begin  select @TRDPCTPRNUM = round(@I_vTRDISAMT / @I_vSUBTOTAL,15)   if (@TRDPCTPRNUM < 1)  begin  select @TRDPCTPR = cast(substring(cast(@TRDPCTPRNUM as varchar(27)),3,21)as numeric(21,0))  end  else  begin  select @TRDPCTPR = cast(substring( cast(@TRDPCTPRNUM as varchar (27)),1,1) + substring( cast(@TRDPCTPRNUM as varchar(27)),3,20) as numeric(23,0))  end  end  end end  select @ACCTAMNT = @EXTDCOST + @I_vTAXAMNT + @I_vFRTAMNT + @I_vMISCAMNT - @I_vTRDISAMT  exec @iStatus = taCreateUpdateBatchHeaderRcd  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vSERIES = 4,  @I_vGLPOSTDT = @I_vreceiptdate,  @I_vBCHSOURC = @BCHSOURC,  @I_vDOCAMT = @ACCTAMNT,  @I_vORIGIN = 2,  @I_vNUMOFTRX = 1,  @I_vCHEKBKID = '',  @I_vUSERID = @I_vUSER2ENT,  @O_iErrorState = @iUpdtBthErrState output,  @oErrString = @iCreateBatchErrString output select @iError = @@error if ((@iStatus <> 0) or (@iUpdtBthErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCreateBatchErrString  select @O_iErrorState = 4799    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @PYMTRMID = PYMTRMID,  @VENDNAME = VENDNAME,  @SHIPMTHD = SHIPMTHD,  @RCPTNOTE_3 = NOTEINDX,  @VENDSTTS = VENDSTTS,  @I_vVADCDTRO =   case  when @I_vVADCDTRO is null  then VADCDTRO  else @I_vVADCDTRO  end,  @TEN99TYPE = TEN99TYPE,  @TEN99BOXNUMBER = TEN99BOXNUMBER  from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@VENDSTTS = 2) begin  select @O_iErrorState = 5417     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vVADCDTRO <> '' begin  if not exists(select 1 from PM00300 (nolock) where VENDORID = @I_vVENDORID and ADRSCODE = @I_vVADCDTRO)  begin  select @O_iErrorState = 8094     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vVENDNAME = '') begin  select @I_vVENDNAME = @VENDNAME end  if (@I_vVENDNAME = '') begin  select @O_iErrorState = 4800     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(CURNCYID, '') from PM00200 (nolock) where VENDORID = @I_vVENDORID   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(FUNLCURR, ''), @CURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock)  end end  if (@CURRNIDX = 0) begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  select @curncount = count(distinct CURNCYID) from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  if (@curncount > 1) begin  select @O_iErrorState = 7037    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end else begin  if (@curncount = 1)  begin  select @curnid = CURNCYID from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM   if ((@I_vCURNCYID <> @curnid) and (@curnid <> ''))  begin  select @O_iErrorState = 7038    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if ((@CURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 4812     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @FUNLCURR = FUNLCURR from MC40000 (nolock) select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR select @ORDECPLCUR = DECPLCUR - 1, @RCPTNOTE_5 = NOTEINDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if ((@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vVENDORID,  @I_vDOCDATE = @I_vreceiptdate,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @taMCCurrencyValidateErrString output,  @O_iErrorState = @taMCCurrencyValidateErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@taMCCurrencyValidateErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taMCCurrencyValidateErrString  select @O_iErrorState = 4814     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @ISMCTRX = 0, @I_vRATEEXPR = 0, @I_vDYSTINCR = 0, @I_vRTCLCMTD = 0 end  if (@I_vPYMTRMID is null) begin  select @I_vPYMTRMID = @PYMTRMID end  select @SALPURCH = SALPURCH,  @DISCNTCB = DISCNTCB,  @FREIGHT = FREIGHT,  @MISC = MISC,  @TAX = TAX,  @RCPTNOTE_4 = NOTEINDX  from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID  select @PymtTermAmnt = @PymtTermAmnt + (@I_vSUBTOTAL * @SALPURCH),  @PymtTermAmnt = @PymtTermAmnt - (@I_vTRDISAMT * @DISCNTCB),  @PymtTermAmnt = @PymtTermAmnt + (@I_vFRTAMNT * @FREIGHT),  @PymtTermAmnt = @PymtTermAmnt + (@I_vMISCAMNT * @MISC),  @PymtTermAmnt = @PymtTermAmnt + ((@I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT) * (@TAX))  if ((@I_vPYMTRMID = '') and (@I_vDISAVAMT is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null)) begin  select @I_vDISAVAMT = 0, @I_vDSCDLRAM = 0, @I_vDSCPCTAM = 0 end  if ((@I_vDISAVAMT is not null) and (@I_vDSCDLRAM is null or @I_vDSCDLRAM <> @I_vDISAVAMT)) begin  select @I_vDSCDLRAM = 0 end  if ((@I_vDISAVAMT is not null) and (@I_vDSCPCTAM is null or round((@I_vDSCPCTAM / 100) * @PymtTermAmnt, @ORDECPLCUR) <> @I_vDISAVAMT)) begin  select @I_vDSCPCTAM = 0 end  if ((@I_vDSCDLRAM is not null and @I_vDSCDLRAM <> 0) and (@I_vDSCPCTAM is not null and @I_vDSCPCTAM <> 0)) begin  select @O_iErrorState = 1209     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDSCDLRAM is not null) and (@I_vDISAVAMT is null)) begin  select @I_vDISAVAMT = @I_vDSCDLRAM  select @ORDAVAMT = @I_vDISAVAMT,  @I_vDSCPCTAM = 0 end  if ((@I_vDSCPCTAM is not null) and (@I_vDISAVAMT is null)) begin  select @I_vDISAVAMT = ((@I_vDSCPCTAM / 100) * @PymtTermAmnt)  select @ORDAVAMT = @I_vDISAVAMT,  @I_vDSCDLRAM = 0 end  select @DSCLCTYP = DSCLCTYP, @DSCDLRAM = DSCDLRAM, @DSCPCTAM = DSCPCTAM from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID  if ((@I_vPYMTRMID <> '') and (@I_vDISAVAMT is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null)) begin  if (@DSCLCTYP = 1)   begin  select @I_vDSCPCTAM = @DSCPCTAM / 100.0,  @I_vDSCDLRAM = 0   if (@ISMCTRX = 1)   begin  select @ORDAVAMT = round((@I_vDSCPCTAM / 100.0) * @PymtTermAmnt, @ORDECPLCUR)  select @ORDDLRAT = 0  select @I_vDISAVAMT =  case  when (@I_vRTCLCMTD = 0)  then round(@ORDAVAMT * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ORDAVAMT / @I_vXCHGRATE, @DECPLCUR)  else 0  end  end  else  begin  select @I_vDISAVAMT = round((@I_vDSCPCTAM / 100.0) * @PymtTermAmnt, @DECPLCUR)  select @ORDAVAMT = @I_vDISAVAMT,  @ORDDLRAT = 0  end  end  else  if (@DSCLCTYP = 2)     begin  select @I_vDSCPCTAM = 0   if (@ISMCTRX = 1)   begin  select @I_vDISAVAMT = @DSCDLRAM,  @I_vDSCDLRAM = @DSCDLRAM   if (@I_vDISAVAMT > @EXTDCOST + @I_vTAXAMNT + @I_vFRTAMNT + @I_vMISCAMNT - @I_vTRDISAMT)  begin  select @I_vDISAVAMT = @EXTDCOST + @I_vTAXAMNT + @I_vFRTAMNT + @I_vMISCAMNT - @I_vTRDISAMT  end   select @ORDAVAMT =  case  when (@I_vRTCLCMTD = 0)  then round(@I_vDISAVAMT / @I_vXCHGRATE, @ORDECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@I_vDISAVAMT * @I_vXCHGRATE, @ORDECPLCUR)  else 0  end   select @ORDDLRAT = @ORDAVAMT  end  else  begin  select @I_vDSCDLRAM = @DSCDLRAM,  @I_vDISAVAMT = @DSCDLRAM   if (@I_vDISAVAMT > @EXTDCOST + @I_vTAXAMNT + @I_vFRTAMNT + @I_vMISCAMNT - @I_vTRDISAMT)  begin  select @I_vDISAVAMT = @EXTDCOST + @I_vTAXAMNT + @I_vFRTAMNT + @I_vMISCAMNT - @I_vTRDISAMT  end   select @ORDDLRAT = @I_vDSCDLRAM,  @ORDAVAMT = @I_vDISAVAMT  end  end end else if (@ISMCTRX = 1)   begin  select @ORDAVAMT = @I_vDISAVAMT  select @I_vDISAVAMT =   case   when (@I_vRTCLCMTD = 0)  then round(@ORDAVAMT * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ORDAVAMT / @I_vXCHGRATE, @DECPLCUR)  else 0  end   select @ORDAVAMT = round(@ORDAVAMT,@ORDECPLCUR)    if (@I_vDSCPCTAM = 0)  begin  select @ORDDLRAT = @ORDAVAMT,  @I_vDSCDLRAM = @I_vDISAVAMT  end end else begin  select @I_vDISAVAMT = round(@I_vDISAVAMT,@DECPLCUR),  @ORDAVAMT = @I_vDISAVAMT   if (@I_vDSCPCTAM = 0)  begin  select @I_vDSCDLRAM = @I_vDISAVAMT,  @ORDDLRAT = @I_vDISAVAMT  end  end  if (@I_vPYMTRMID <> '') begin  if (not exists(select 1 from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID))  begin  select @O_iErrorState = 1910     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vPYMTRMID <> '') and (@I_vDUEDATE = '' or @I_vDISCDATE = '')) begin  exec @iStatus = taCalcDueDatePM  @I_vVENDORID = @I_vVENDORID,  @I_vPYMTRMID = @I_vPYMTRMID,  @I_vDOCDATE = @I_vreceiptdate,  @O_dDISCDATE = @dDISCDATE output,  @O_dDUEDATE = @dDUEDATE output,  @O_iErrorState = @iCalcDueDateErrState output,  @oErrString = @iCalcDueDateErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iCalcDueDateErrState <> 0) or (@iError <> 0) or (@dDUEDATE is null) or (@dDISCDATE is null))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCalcDueDateErrString  select @O_iErrorState = 4801    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vDUEDATE = '')  begin  select @I_vDUEDATE = @dDUEDATE  end   if (@I_vDISCDATE = '')  begin  select @I_vDISCDATE = @dDISCDATE  end end  if ((@I_vDSCDLRAM <> @DSCDLRAM) or (@I_vDSCPCTAM <> @DSCPCTAM/100)) begin  select @I_vPYMTRMID = '' end  if (@I_vTAXSCHID <> '') begin  if not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vTAXSCHID)  begin  select @O_iErrorState = 4802     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vTAXAMNT > 0)  begin  select @O_iErrorState = 4803     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @TAXAMNTL = ISNULL(sum(ORTAXAMT),0.00)+ISNULL(sum(ORFRTTAX),0.00)+ISNULL(sum(ORMSCTAX),0.00) from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and BKOUTTAX = 0  if ((@TAXAMNTL) <> (@I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT)) begin  select @O_iErrorState = 4804     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUSINGHEADERLEVELTAXES = 0) begin  select @SumLineORTAXAMT = isnull(sum(ORTAXAMT),0) from POP10310 (nolock)  where POPRCTNM = @I_vPOPRCTNM   if (@SumLineORTAXAMT <> @I_vTAXAMNT)   begin  select @O_iErrorState = 6666     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @TAXAMNTH = (isnull(sum(TXDTOTTX),0)) from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM <> 0 and BKOUTTAX = 0   if (@TAXAMNTH <> @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT)  begin  select @O_iErrorState = 4805     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vFRTSCHID <> '') begin  if not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vFRTSCHID)  begin  select @O_iErrorState = 4806     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vFRTTXAMT > 0)  begin  select @O_iErrorState = 4807     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @FRTTXAMT = isnull(sum(FRTTXAMT), 0), @ORFRTTAX = isnull(sum(ORFRTTAX), 0) from POP10360 (nolock)  where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 2147483646 and BKOUTTAX = 0  if ((@I_vFRTTXAMT <> @FRTTXAMT) or (@I_vFRTTXAMT <> @ORFRTTAX)) begin  select @O_iErrorState = 4808     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vMSCSCHID <> '') begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vMSCSCHID))  begin  select @O_iErrorState = 4809     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vMSCTXAMT > 0)  begin  select @O_iErrorState = 4810     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @MSCTXAMT = isnull(sum(MSCTXAMT), 0), @ORMSCTAX = isnull(sum(ORMSCTAX), 0) from POP10360 (nolock)  where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 2147483645 and BKOUTTAX = 0  if ((@I_vMSCTXAMT <> @MSCTXAMT) or (@I_vMSCTXAMT <> @ORMSCTAX)) begin  select @O_iErrorState = 6288     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @ORSUBTOT = @I_vSUBTOTAL,  @ORFRTTAX = @I_vFRTTXAMT,  @ORMSCTAX = @I_vMSCTXAMT,  @ORTDISAM = @I_vTRDISAMT,  @ORFRTAMT = @I_vFRTAMNT,  @ORMISCAMT = @I_vMISCAMNT,  @ORTAXAMT = @I_vTAXAMNT,  @OR1099AM = @I_vTEN99AMNT,  @ORTOTTax = @ORTAXAMT+@ORFRTTAX+@ORMSCTAX,  @OrigBackoutTradeDiscTax = @I_vBackoutTradeDiscTax  if (@I_vBackoutTradeDiscTax > 0) begin  update POP10310 set  BackoutTradeDiscTax = round((EXTDCOST / @I_vSUBTOTAL) * @I_vBackoutTradeDiscTax, @DECPLCUR),  OrigBackoutTradeDiscTax = round((OREXTCST / @ORSUBTOT) * @OrigBackoutTradeDiscTax, @ORDECPLCUR)  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 6664    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @TrDisTax = isnull(sum(BackoutTradeDiscTax),0) from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  select @TrDisTaxDif = @I_vBackoutTradeDiscTax - @TrDisTax   select @OrTrDisTax = isnull(sum(OrigBackoutTradeDiscTax),0) from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  select @OrTrDisTaxDif = @OrigBackoutTradeDiscTax - @OrTrDisTax  if ((@TrDisTaxDif <> 0) or (@OrTrDisTaxDif <> 0))  begin  update b set  BackoutTradeDiscTax = BackoutTradeDiscTax + @TrDisTaxDif,  OrigBackoutTradeDiscTax = OrigBackoutTradeDiscTax + @OrTrDisTaxDif  from POP10310 b, (select max(DEX_ROW_ID)as Dex from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM) as t1  where b.POPRCTNM = @I_vPOPRCTNM and b.DEX_ROW_ID = t1.Dex  if (@@error <> 0)  begin  select @O_iErrorState = 6665    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  select @linecount = count(POPRCTNM) + 2 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  select @INTERID = INTERID, @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID  = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = @linecount,  @O_mNoteIndex   = @RCPTNOTE_1 output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  if @iGetNextNoteIdxErrState <> 0 select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 4815    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @RCPTNOTE_2 = NOTEINDX from SY00500 (nolock) where BACHNUMB = @I_vBACHNUMB and BCHSOURC = @BCHSOURC select @RCPTNOTE_6 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vTAXSCHID select @RCPTNOTE_7 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vFRTSCHID select @RCPTNOTE_8 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vMSCSCHID  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 4816     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (exists(select 1 from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and BKOUTTAX = 1) and (@I_vBackoutTradeDiscTax = 0)) begin  select @BckRunTax = @I_vSUBTOTAL + @I_vFRTAMNT + @I_vMISCAMNT, @BckRunFrt = @I_vFRTAMNT, @BckRunMsc = @I_vMISCAMNT   declare PopTax INSENSITIVE cursor for select  POPRCTNM,  RCPTLNNM,  TAXDTLID,  ACTINDX  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM  order by RCPTLNNM asc, BKOUTTAX desc, TAXDTLID asc   open PopTax  select @iCursorError = @@cursor_rows   if (@iCursorError > 0)  begin  fetch next from PopTax into  @POPRCTNM,  @RCPTLNNM,  @TAXDTLID,  @ACTINDX  while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 6213    break  end   if ((@RCPTLNNM <> @LocRcptLine) and (@RCPTLNNM not in(0,2147483645,2147483646)))  begin  select @BckRunLn = OREXTCST from POP10310 (nolock) where POPRCTNM = @POPRCTNM and RCPTLNNM = @RCPTLNNM and RCPTLNNM not in(0,2147483645,2147483646)  end   update POP10360 set  ORGTXPCH =  case  when BKOUTTAX = 1 and @BckRunTax = @I_vSUBTOTAL + @I_vFRTAMNT + @I_vMISCAMNT and RCPTLNNM = 0  then @BckRunTax - ORTAXAMT - ORFRTTAX - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 0  then @BckRunTax  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc = @I_vMISCAMNT  then @BckRunMsc - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc <> @I_vMISCAMNT  then @BckRunMsc  when BKOUTTAX = 0 and RCPTLNNM = 2147483645  then @BckRunMsc  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt = @I_vFRTAMNT  then @BckRunFrt - ORFRTTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt <> @I_vFRTAMNT  then @BckRunFrt  when BKOUTTAX = 0 and RCPTLNNM = 2147483646  then @BckRunFrt  when BKOUTTAX = 1 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  when BKOUTTAX = 0 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  else @BckRunTax  end,  TAXPURCH =  case  when BKOUTTAX = 1 and @BckRunTax = @I_vSUBTOTAL + @I_vFRTAMNT + @I_vMISCAMNT and RCPTLNNM = 0  then @BckRunTax - ORTAXAMT - ORFRTTAX - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 0  then @BckRunTax  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc = @I_vMISCAMNT  then @BckRunMsc - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc <> @I_vMISCAMNT  then @BckRunMsc  when BKOUTTAX = 0 and RCPTLNNM = 2147483645  then @BckRunMsc  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt = @I_vFRTAMNT  then @BckRunFrt - ORFRTTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt <> @I_vFRTAMNT  then @BckRunFrt  when BKOUTTAX = 0 and RCPTLNNM = 2147483646  then @BckRunFrt  when BKOUTTAX = 1 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  when BKOUTTAX = 0 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  else @BckRunTax  end,  TOTPURCH =  case  when BKOUTTAX = 1 and @BckRunTax = @I_vSUBTOTAL + @I_vFRTAMNT + @I_vMISCAMNT and RCPTLNNM = 0  then @BckRunTax - ORTAXAMT - ORFRTTAX - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 0  then @BckRunTax  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc = @I_vMISCAMNT  then @BckRunMsc - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc <> @I_vMISCAMNT  then @BckRunMsc  when BKOUTTAX = 0 and RCPTLNNM = 2147483645  then @BckRunMsc  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt = @I_vFRTAMNT  then @BckRunFrt - ORFRTTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt <> @I_vFRTAMNT  then @BckRunFrt  when BKOUTTAX = 0 and RCPTLNNM = 2147483646  then @BckRunFrt  when BKOUTTAX = 1 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  when BKOUTTAX = 0 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  else @BckRunTax  end,  ORTOTPUR =  case  when BKOUTTAX = 1 and @BckRunTax = @I_vSUBTOTAL + @I_vFRTAMNT + @I_vMISCAMNT and RCPTLNNM = 0  then @BckRunTax - ORTAXAMT - ORFRTTAX - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 0  then @BckRunTax  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc = @I_vMISCAMNT  then @BckRunMsc - ORMSCTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483645 and @BckRunMsc <> @I_vMISCAMNT  then @BckRunMsc  when BKOUTTAX = 0 and RCPTLNNM = 2147483645  then @BckRunMsc  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt = @I_vFRTAMNT  then @BckRunFrt - ORFRTTAX  when BKOUTTAX = 1 and RCPTLNNM = 2147483646 and @BckRunFrt <> @I_vFRTAMNT  then @BckRunFrt  when BKOUTTAX = 0 and RCPTLNNM = 2147483646  then @BckRunFrt  when BKOUTTAX = 1 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  when BKOUTTAX = 0 and RCPTLNNM not in(0,2147483645,2147483646)  then @BckRunLn  else @BckRunTax  end,  @BckRunTax =  case  when BKOUTTAX = 1 and RCPTLNNM = 0  then @BckRunTax - ORTAXAMT - ORFRTTAX - ORMSCTAX   else @BckRunTax  end,  @BckRunFrt =  case  when BKOUTTAX = 1 and RCPTLNNM = 2147483646  then @BckRunFrt - ORFRTTAX  else @BckRunFrt  end,  @BckRunMsc =  case  when BKOUTTAX = 1 and RCPTLNNM = 2147483645  then @BckRunMsc - ORMSCTAX  else @BckRunMsc  end,  @BckRunLn =  case  when BKOUTTAX = 1 and RCPTLNNM not in(0,2147483646,2147483645)  then @BckRunLn - ORTAXAMT  else @BckRunLn  end  from POP10360 (nolock)  where POPRCTNM = @POPRCTNM and  RCPTLNNM = @RCPTLNNM and  TAXDTLID = @TAXDTLID and  ACTINDX = @ACTINDX  if (@@error <> 0)  begin  select @O_iErrorState = 6668    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  deallocate PopTax  return (@O_iErrorState)  end   select @LocRcptLine = @RCPTLNNM   fetch next from PopTax into  @POPRCTNM,  @RCPTLNNM,  @TAXDTLID,  @ACTINDX  end  end  deallocate PopTax end  if (@ISMCTRX = 1) begin  if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 4817     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRTCLCMTD = 0)   begin  select   @I_vSUBTOTAL = round(@I_vSUBTOTAL * @I_vXCHGRATE, @DECPLCUR),  @I_vFRTTXAMT = round(@I_vFRTTXAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vMSCTXAMT = round(@I_vMSCTXAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vTRDISAMT = round(@I_vTRDISAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vFRTAMNT = round(@I_vFRTAMNT  * @I_vXCHGRATE, @DECPLCUR),  @I_vMISCAMNT = round(@I_vMISCAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vTAXAMNT = round(@I_vTAXAMNT  * @I_vXCHGRATE, @DECPLCUR),  @I_vTEN99AMNT = round(@I_vTEN99AMNT* @I_vXCHGRATE, @DECPLCUR)  end  else  if (@I_vRTCLCMTD = 1)   begin  select  @I_vSUBTOTAL = round(@I_vSUBTOTAL / @I_vXCHGRATE, @DECPLCUR),  @I_vFRTTXAMT = round(@I_vFRTTXAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vMSCTXAMT = round(@I_vMSCTXAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vTRDISAMT = round(@I_vTRDISAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vFRTAMNT = round(@I_vFRTAMNT  / @I_vXCHGRATE, @DECPLCUR),  @I_vMISCAMNT = round(@I_vMISCAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vTAXAMNT = round(@I_vTAXAMNT  / @I_vXCHGRATE, @DECPLCUR),  @I_vTEN99AMNT = round(@I_vTEN99AMNT/ @I_vXCHGRATE, @DECPLCUR)  end   if (@I_vRTCLCMTD = 0)   begin  update POP10310 set  UNITCOST = round(UNITCOST * @I_vXCHGRATE, (DECPLCUR - 7)),    EXTDCOST = round(EXTDCOST * @I_vXCHGRATE, @DECPLCUR),  TAXAMNT  = round(TAXAMNT * @I_vXCHGRATE, @DECPLCUR),  BCKTXAMT = round(BCKTXAMT * @I_vXCHGRATE, @DECPLCUR),  BackoutTradeDiscTax = round(BackoutTradeDiscTax * @I_vXCHGRATE, @DECPLCUR),  OrigBackoutTradeDiscTax = BackoutTradeDiscTax,  DENXRATE = 0,  RATETPID = @I_vRATETPID,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  RATECALC = @I_vRTCLCMTD  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4818    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10360 set  TAXAMNT = round(TAXAMNT * @I_vXCHGRATE, @DECPLCUR),  TAXPURCH = round(TAXPURCH * @I_vXCHGRATE, @DECPLCUR),  TOTPURCH = round(TOTPURCH * @I_vXCHGRATE, @DECPLCUR),  FRTTXAMT = round(FRTTXAMT * @I_vXCHGRATE, @DECPLCUR),  MSCTXAMT = round(MSCTXAMT * @I_vXCHGRATE, @DECPLCUR),  TXDTOTTX = round(TXDTOTTX * @I_vXCHGRATE, @DECPLCUR),  CURRNIDX = @CURRNIDX  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4819    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10390 set  CURRNIDX = @CURRNIDX,  DEBITAMT = round(DEBITAMT * @I_vXCHGRATE, @DECPLCUR),  ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT * @I_vXCHGRATE, @DECPLCUR),  ORCRDAMT = CRDTAMNT   where POPRCTNM = @I_vPOPRCTNM   if (@@error <> 0)  begin  select @O_iErrorState = 6254    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10500 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  DENXRATE = 0,  RATETPID = @I_vRATETPID,  RATECALC = @I_vRTCLCMTD,  EXGTBLID = @EXGTBLID,  OSTDCOST = round(OSTDCOST / @I_vXCHGRATE, @DECPLCUR)   where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4820    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10600 set  XCHGRATE = @I_vXCHGRATE  where POPIVCNO = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4828    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vRTCLCMTD = 1)   begin  update POP10310 set  UNITCOST = round(UNITCOST / @I_vXCHGRATE, (DECPLCUR - 7)),    EXTDCOST = round(EXTDCOST / @I_vXCHGRATE, @DECPLCUR),  TAXAMNT  = round(TAXAMNT / @I_vXCHGRATE, @DECPLCUR ),  BCKTXAMT = round(BCKTXAMT / @I_vXCHGRATE, @DECPLCUR),  BackoutTradeDiscTax = round(BackoutTradeDiscTax / @I_vXCHGRATE, @DECPLCUR),  OrigBackoutTradeDiscTax = BackoutTradeDiscTax,  DENXRATE = 0,  RATETPID = @I_vRATETPID,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  RATECALC = @I_vRTCLCMTD  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4821    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10360 set  TAXAMNT  = round(TAXAMNT / @I_vXCHGRATE, @DECPLCUR),  TAXPURCH = round(TAXPURCH / @I_vXCHGRATE, @DECPLCUR),  TOTPURCH = round(TOTPURCH / @I_vXCHGRATE, @DECPLCUR),  FRTTXAMT = round(FRTTXAMT / @I_vXCHGRATE, @DECPLCUR),  MSCTXAMT = round(MSCTXAMT / @I_vXCHGRATE, @DECPLCUR),  TXDTOTTX = round(TXDTOTTX / @I_vXCHGRATE, @DECPLCUR),  CURRNIDX = @CURRNIDX  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4822    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10390 set  CURRNIDX = @CURRNIDX,  DEBITAMT = round(DEBITAMT / @I_vXCHGRATE, @DECPLCUR),  ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT / @I_vXCHGRATE, @DECPLCUR),  ORCRDAMT = CRDTAMNT   where POPRCTNM = @I_vPOPRCTNM   if (@@error <> 0)  begin  select @O_iErrorState = 6255    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10500 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  DENXRATE = 0,  RATETPID = @I_vRATETPID,  RATECALC = @I_vRTCLCMTD,  EXGTBLID = @EXGTBLID,  OSTDCOST = round(OSTDCOST * @I_vXCHGRATE, @DECPLCUR)   where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4823    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10600 set  XCHGRATE = @I_vXCHGRATE  where POPIVCNO = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 5302    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   update i set  i.RUPPVAMT = ((i.ORCPTCOST * i.QTYINVCD) - (i.OSTDCOST * (i.QTYINVCD * i.UMQTYINB)))  from POP10500 i (nolock), IV00101 b (nolock)  where POPRCTNM = @I_vPOPRCTNM and i.ITEMNMBR = b.ITEMNMBR and b.VCTNMTHD in (4,5)  if (@@error <> 0)  begin  select @O_iErrorState = 5306    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update s set  s.RUPPVAMT = (((s.ORCPTCOST) * (s.QTYSHPPD - s.QTYMATCH)) - ((s.OSTDCOST) * ((s.QTYSHPPD - s.QTYMATCH) * (s.UMQTYINB))))  from POP10500 s (nolock), POP10500 i (nolock), IV00101 b (nolock), POP10600 c (nolock)  where i.POPRCTNM = @I_vPOPRCTNM and c.POPIVCNO = @I_vPOPRCTNM and c.IVCLINNO = i.RCPTLNNM and c.POPRCTNM = s.POPRCTNM and  c.RCPTLNNM = s.RCPTLNNM and s.PONUMBER = i.PONUMBER and s.POPTYPE = 1 and i.POPTYPE = 2 and i.ITEMNMBR = b.ITEMNMBR and  b.VCTNMTHD in (4,5)  if (@@error <> 0)  begin  select @O_iErrorState = 5305    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update c set  c.UPPVTOTL = (((i.ORCPTCOST) * (i.QTYINVCD)) - ((s.OSTDCOST) * ((i.QTYINVCD) * (s.UMQTYINB))))  from POP10500 s (nolock), POP10500 i (nolock), IV00101 b (nolock), POP10600 c (nolock)  where i.POPRCTNM = @I_vPOPRCTNM and c.POPIVCNO = @I_vPOPRCTNM and c.IVCLINNO = i.RCPTLNNM and c.POPRCTNM = s.POPRCTNM and  c.RCPTLNNM = s.RCPTLNNM and s.PONUMBER = i.PONUMBER and s.POPTYPE = 1 and i.POPTYPE = 2 and i.ITEMNMBR = b.ITEMNMBR and  b.VCTNMTHD in (4,5)  if (@@error <> 0)  begin  select @O_iErrorState = 5304    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update c set  c.Revalue_Inventory = 1  from POP10500 s (nolock), POP10500 i (nolock), POP10600 c (nolock)  where i.POPRCTNM = @I_vPOPRCTNM and c.POPIVCNO = @I_vPOPRCTNM and c.IVCLINNO = i.RCPTLNNM and c.POPRCTNM = s.POPRCTNM and  c.RCPTLNNM = s.RCPTLNNM and s.PONUMBER = i.PONUMBER and s.POPTYPE = 1 and i.POPTYPE = 2 and  s.XCHGRATE <> i.XCHGRATE  if (@@error <> 0)  begin  select @O_iErrorState = 3769    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin   if (not exists(select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID and (CURNCYID = @I_vCURNCYID or CURNCYID = '')))  begin  update POP10360 set  CURRNIDX = @CURRNIDX  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 4824    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10390 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where POPRCTNM = @I_vPOPRCTNM  if (@@error <> 0)  begin  select @O_iErrorState = 6256    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  select @TOTTAXAMNT = @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT  select @BCKTXAMT = round(isnull(sum(TXDTOTTX),0),@DECPLCUR),  @OBTAXAMT = round(isnull(sum(OTTAXPON),0),@ORDECPLCUR)  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and BKOUTTAX = 1  select @BackoutFreightTaxAmt = round(isnull(sum(TXDTOTTX),0),@DECPLCUR),  @OrigBackoutFreightTaxAmt = round(isnull(sum(OTTAXPON),0),@ORDECPLCUR)  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 2147483646 and BKOUTTAX = 1  select @BackoutMiscTaxAmt = round(isnull(sum(TXDTOTTX),0),@DECPLCUR),  @OrigBackoutMiscTaxAmt = round(isnull(sum(OTTAXPON),0),@ORDECPLCUR)  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 2147483645 and BKOUTTAX = 1  if (@BCKTXAMT <> 0 or @OBTAXAMT <> 0) begin  update b set  b.BCKTXAMT = t1.TAX + b.BackoutTradeDiscTax,  b.OBTAXAMT = t1.ORTAX + b.OrigBackoutTradeDiscTax  from POP10310 b (nolock),  (select isnull(sum(TAXAMNT),0) as TAX, isnull(sum(ORTAXAMT),0) as ORTAX, RCPTLNNM, POPRCTNM from POP10360 a (nolock)  where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM <> 0 and BKOUTTAX = 1 group by POPRCTNM,RCPTLNNM) as t1  where b.POPRCTNM = @I_vPOPRCTNM and b.RCPTLNNM = t1.RCPTLNNM and b.POPRCTNM = t1.POPRCTNM end  if (@ISMCTRX = 0) begin  if (exists(select distinct 1 from IV00105 a (nolock), POP10310 b (nolock) where   b.POPRCTNM = @I_vPOPRCTNM and b.ITEMNMBR = a.ITEMNMBR))  begin  if (not exists(select 1 from IV00105 a (nolock), POP10310 b (nolock) where  b.POPRCTNM = @I_vPOPRCTNM and b.ITEMNMBR = a.ITEMNMBR and a.CURNCYID <> ''))  begin  select @MCINSTALLED = 0  end  end  else  begin  if (not exists(select distinct 1 from IV00105 a (nolock) where CURNCYID <> ''))  begin  select @MCINSTALLED = 0  end  end end  insert POP10300  (  POPRCTNM,  POPTYPE,  VNDDOCNM,  receiptdate,  GLPOSTDT,  ACTLSHIP,  BCHSOURC,  BACHNUMB,  VENDORID,  VENDNAME,  SUBTOTAL,  TRDISAMT,  TRDPCTPR,  FRTAMNT,  MISCAMNT,  TAXAMNT,  TEN99AMNT,  PYMTRMID,  DSCPCTAM,  DSCDLRAM,  DISAVAMT,  DISCDATE,  DUEDATE,  REFRENCE,  RCPTNOTE_1,  RCPTNOTE_2,  RCPTNOTE_3,  RCPTNOTE_4,  RCPTNOTE_5,  RCPTNOTE_6,  RCPTNOTE_7,  RCPTNOTE_8,  POPHDR1,  POPHDR2,  POPLNERR,  POSTEDDT,  PTDUSRID,  USER2ENT,  CREATDDT,  MODIFDT,  TRXSORCE,  VCHRNMBR,  Tax_Date,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RATECALC,  DENXRATE,  MCTRXSTT,  ORSUBTOT,  ORTDISAM,  ORFRTAMT,  ORMISCAMT,  ORTAXAMT,  OR1099AM,  ORDDLRAT,  ORDAVAMT,  WITHHAMT,  SIMPLIFD,  BNKRCAMT,  ECTRX,  TXRGNNUM,  TAXSCHID,  TXENGCLD,  BSIVCTTL,  Purchase_Freight_Taxable,  Purchase_Misc_Taxable,  FRTSCHID,  MSCSCHID,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  BCKTXAMT,  OBTAXAMT,  BackoutFreightTaxAmt,  OrigBackoutFreightTaxAmt,  BackoutMiscTaxAmt,  OrigBackoutMiscTaxAmt,  TaxInvReqd,  TaxInvRecvd,  APLYWITH,  PPSTAXRT,  SHIPMTHD,  DocPrinted,  Total_Landed_Cost_Amount,  BackoutTradeDiscTax,  OrigBackoutTradeDiscTax,  CBVAT,  VADCDTRO,  TEN99TYPE,  TEN99BOXNUMBER,  REPLACEGOODS,  INVOICEEXPECTED   )  select  @I_vPOPRCTNM,     2,      @I_vVNDDOCNM,     @I_vreceiptdate,    @I_vreceiptdate,    @dtDEFAULT,     @BCHSOURC,     @I_vBACHNUMB,     @I_vVENDORID,     @I_vVENDNAME,     @I_vSUBTOTAL,     @I_vTRDISAMT,     @TRDPCTPR,     @I_vFRTAMNT,     @I_vMISCAMNT,     @TOTTAXAMNT,     @I_vTEN99AMNT,     @I_vPYMTRMID,     @I_vDSCPCTAM * 100,    @I_vDSCDLRAM,     @I_vDISAVAMT,     @I_vDISCDATE,     @I_vDUEDATE,               'Purchasing Invoice Entry',   @RCPTNOTE_1,     @RCPTNOTE_2,     @RCPTNOTE_3,     @RCPTNOTE_4,     @RCPTNOTE_5,     @RCPTNOTE_6,     @RCPTNOTE_7,     @RCPTNOTE_8,     0,       0,       0,      '',      '',      @I_vUSER2ENT,     convert(varchar(12),getdate()),   convert(varchar(12),getdate()),   '',      '',      @I_vreceiptdate,    case  when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  case  when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  @I_vRATETPID,     @EXGTBLID,     @I_vXCHGRATE,     @I_vEXCHDATE,     case      when (@ISMCTRX = 1)  then @I_vTIME1  else @dtDEFAULT  end,  @I_vRTCLCMTD,     0,      0,      @ORSUBTOT,     @ORTDISAM,     @ORFRTAMT,     @ORMISCAMT,     @ORTOTTax,     @OR1099AM,     @ORDDLRAT,     @ORDAVAMT,     0,      0,      0,      0,      @TXRGNNUM,        @I_vTAXSCHID,     1,      0,      @I_vPurchase_Freight_Taxable,   @I_vPurchase_Misc_Taxable,   @I_vFRTSCHID,     @I_vMSCSCHID,     @I_vFRTTXAMT,     @ORFRTTAX,     @I_vMSCTXAMT,     @ORMSCTAX,     @BCKTXAMT,     @OBTAXAMT,     @BackoutFreightTaxAmt,    @OrigBackoutFreightTaxAmt,   @BackoutMiscTaxAmt,    @OrigBackoutMiscTaxAmt,    0,      0,      0,      0,      @SHIPMTHD,     0,      0,      @I_vBackoutTradeDiscTax,   @OrigBackoutTradeDiscTax,   0,      @I_vVADCDTRO,     @TEN99TYPE,     @TEN99BOXNUMBER,     0,      0     if (@@error <> 0) begin  select @O_iErrorState = 4825    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taPopCreateDistributions  2,  @I_vPOPRCTNM,  @I_vVENDORID,  @CURRNIDX,  @I_vTRDISAMT,  @I_vFRTAMNT,  @I_vMISCAMNT,  @TOTTAXAMNT,  @I_vDISAVAMT,  @ORTDISAM,  @ORFRTAMT,  @ORMISCAMT,  @ORTOTTax,  @ORDAVAMT,  0,  0,  0,  0,  @I_vCURNCYID,  @I_vRATETPID,  @EXGTBLID,  @I_vXCHGRATE,  @I_vEXCHDATE,  @I_vTIME1,  @I_vRTCLCMTD,  @ORDECPLCUR,  @INTERID,  @sCompanyID,  @I_vCREATEDIST,  @iUpdDistErrState output,  @UpdDistErrString output select @iError = @@error if ((@iStatus <> 0) or (@iUpdDistErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@UpdDistErrString))  select @O_iErrorState = 4826    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vNOTETEXT <> '') begin  insert SY03900   (  NOTEINDX,   DATE1,   TIME1,   TXTFIELD  )   select   @RCPTNOTE_1,  convert(varchar(12),getdate()),  @I_vTIME1,  @I_vNOTETEXT  if (@@error <> 0)  begin  select @O_iErrorState = 4827    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taPopEnterMatchInvHdrPost  @I_vPOPRCTNM,  @I_vVNDDOCNM,  @I_vreceiptdate,  @I_vBACHNUMB,  @I_vVENDORID,  @I_vVENDNAME,  @I_vSUBTOTAL,  @I_vTRDISAMT,  @I_vFRTAMNT,  @I_vMISCAMNT,  @I_vTAXAMNT,  @I_vTEN99AMNT,  @I_vPYMTRMID,  @I_vDSCPCTAM,  @I_vDSCDLRAM,  @I_vDISAVAMT,  @I_vUSER2ENT,  @I_vTIME1,  @I_vAUTOCOST,  @I_vTAXSCHID,  @I_vPurchase_Freight_Taxable,  @I_vPurchase_Misc_Taxable,  @I_vFRTSCHID,  @I_vMSCSCHID,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @I_vUSINGHEADERLEVELTAXES,  @I_vCURNCYID,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vDUEDATE,  @I_vDISCDATE,  @I_vNOTETEXT,  @I_vRequesterTrx,  @I_vCREATEDIST,  @I_vBackoutTradeDiscTax,  @I_vVADCDTRO,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4829    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 4830     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopEnterMatchInvHdr] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smTerritoryModify1]  @I_charStartTerritory 		char(30),  @I_charEndTerritory 		char(30),  @O_iErrorState 			int = NULL  output with encryption as set transaction isolation level read uncommitted set nocount on declare  @SALSTERR  		char (255), @tTransaction		tinyint, @tLoop			tinyint, @iStatus		int, @cStartTerritory	char(50), @cEndTerritory		char(50) exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charStartTerritory, @O_cOutputString = @cStartTerritory output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 90 return end exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charEndTerritory, @O_cOutputString = @cEndTerritory output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 90 return end select 	@O_iErrorState 	 = 0 if @@trancount = 0    begin select @tTransaction = 1 begin transaction end while ( @tLoop is NULL ) begin select @tLoop = 1 if	@I_charStartTerritory	is NULL or @I_charEndTerritory	is NULL or @cStartTerritory	is NULL or @cEndTerritory		is NULL begin select @O_iErrorState = 1		 break end  if exists (select * from sysobjects where id = object_id('dbo.taCustomerInsert')) alter table RM00101 disable trigger taCustomerInsert if @@error <> 0  begin select @O_iErrorState = 4	 break end if exists (select * from sysobjects where id = object_id('dbo.taCustomerAddressInsert')) alter table RM00102 disable trigger taCustomerAddressInsert if @@error <> 0  begin select @O_iErrorState = 5	 break end declare ta_TMCursor insensitive CURSOR for select 'update '+o.name+' set SALSTERR =' + rtrim(@cEndTerritory) +  ' where SALSTERR = ' + rtrim(@cStartTerritory) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'SALSTERR'  order by o.name set nocount on OPEN ta_TMCursor FETCH NEXT FROM ta_TMCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 2	 break end  FETCH NEXT FROM ta_TMCursor INTO @SALSTERR end DEALLOCATE ta_TMCursor if @O_iErrorState <> 0 break declare ta_TMCursor insensitive CURSOR for select 'update '+o.name+' set SLSTERCD =' + rtrim(@cEndTerritory) +  ' where SLSTERCD = ' + rtrim(@cStartTerritory) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'SLSTERCD'  order by o.name set nocount on OPEN ta_TMCursor FETCH NEXT FROM ta_TMCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 3	 break end  FETCH NEXT FROM ta_TMCursor INTO @SALSTERR end DEALLOCATE ta_TMCursor if @O_iErrorState <> 0 break declare ta_TMCursor insensitive CURSOR for select 'update '+o.name+' set ENSLSTER =' + rtrim(@cEndTerritory) + ' where ENSLSTER = ' + rtrim(@cStartTerritory)  from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ENSLSTER'  order by o.name set nocount on OPEN ta_TMCursor FETCH NEXT FROM ta_TMCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 4	 break end  FETCH NEXT FROM ta_TMCursor INTO @SALSTERR end DEALLOCATE ta_TMCursor if @O_iErrorState <> 0 break declare ta_TMCursor insensitive CURSOR for select 'update '+o.name+' set STSLSTER =' + rtrim(@cEndTerritory) + ' where STSLSTER = ' + rtrim(@cStartTerritory)  from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'STSLSTER'  order by o.name set nocount on OPEN ta_TMCursor FETCH NEXT FROM ta_TMCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 5	 break end  FETCH NEXT FROM ta_TMCursor INTO @SALSTERR end DEALLOCATE ta_TMCursor if @O_iErrorState <> 0 break end  if exists (select * from sysobjects where id = object_id('dbo.taCustomerInsert')) alter table RM00101 enable trigger taCustomerInsert if @@error <> 0  begin select @O_iErrorState = 29	 end if exists (select * from sysobjects where id = object_id('dbo.taCustomerAddressInsert')) alter table RM00102 enable trigger taCustomerAddressInsert if @@error <> 0  begin select @O_iErrorState = 30	 end if @O_iErrorState <> 0 begin if @tTransaction = 1 rollback transaction end else if @tTransaction = 1 begin commit transaction end return  
GO
GRANT EXECUTE ON  [dbo].[smTerritoryModify1] TO [DYNGRP]
GO

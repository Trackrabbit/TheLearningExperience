SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagImportBudget] (  @aaBudgetID INTEGER ) AS BEGIN  DECLARE @nFPCount INTEGER  DECLARE @TrxCount INTEGER  DECLARE @nStartPos INTEGER  DECLARE @nIndex INTEGER  DECLARE @ExecString VARCHAR(6000)  DECLARE @AmtRow INTEGER  DECLARE @QtyRow INTEGER  DECLARE @nPos INTEGER  DECLARE @nResult  INTEGER  DECLARE @CodeSeqAbove INTEGER   DECLARE @CodeSeqBelow INTEGER  DECLARE @nResultOut INTEGER  DECLARE @DateFetched DATETIME  DECLARE @PeriodFetched INTEGER  DECLARE @TempTable VARCHAR(50)  SELECT @TempTable = '##TEMP_TEMP'  + REPLACE(system_user,'''','') + db_name()   SELECT @nFPCount = COUNT(DISTINCT aaFiscalPeriod)   FROM AAG00904  WHERE aaBudgetID = @aaBudgetID   SELECT @TrxCount = COUNT(*)   FROM AAG00901   WHERE aaBudgetTreeID = ( SELECT aaBudgetTreeID FROM AAG00903 WHERE aaBudgetID = @aaBudgetID )    SET @nStartPos = @TrxCount + 3  SET @nIndex = 1  SET @nFPCount = @nFPCount * 2  SET @nPos = 0  SET TRANSACTION ISOLATION LEVEL READ COMMITTED  BEGIN TRANSACTION  update AAG00905 set Balance = 0  WHERE aaBudgetID = @aaBudgetID   DECLARE PeriodCursor CURSOR FOR   SELECT PERIODDT, aaFiscalPeriod   FROM AAG00904 WHERE aaBudgetID = @aaBudgetID and   aaCodeSequence = 1  ORDER BY PERIODDT   OPEN PeriodCursor  FETCH NEXT FROM PeriodCursor into @DateFetched, @PeriodFetched  WHILE (@nIndex <= @nFPCount)  BEGIN  SET @AmtRow = @nIndex + @nStartPos  SET @QtyRow = @nIndex + 1 + @nStartPos  SET @ExecString =   'UPDATE AAG00904  SET Balance = F' + LTRIM(RTRIM(@AmtRow)) + ',   QUANTITY = F' + LTRIM(RTRIM(@QtyRow)) + '  FROM [' + @TempTable + ']   WHERE AAG00904.aaBudgetID = ' + CONVERT(VARCHAR, @aaBudgetID) + 'AND  AAG00904.aaCodeSequence = [' + @TempTable + '].aaCodeSequence AND  AAG00904.PERIODDT = ''' + CONVERT(VARCHAR, @DateFetched) + '''AND  AAG00904.aaFiscalPeriod = ' + CONVERT(VARCHAR, @PeriodFetched)  EXEC ( @ExecString )   FETCH NEXT FROM PeriodCursor INTO @DateFetched, @PeriodFetched   SET @nIndex = @nIndex + 2  SET @nPos = @nPos + 1  END   CLOSE PeriodCursor  DEALLOCATE PeriodCursor   SELECT @nResult = dbo.aagIsRootNodeRollDown(0)   SELECT @nResult = @nResult * dbo.aagIsRootNodeRollDown(1)   IF @nResult = 0  BEGIN  ROLLBACK TRANSACTION   DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO  AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )  VALUES (-1,'0',0,1)  RETURN -1000   END  IF (SELECT aaBudgetRollUp FROM AAG00903 WHERE aaBudgetID=@aaBudgetID) = 0  BEGIN  EXEC aagValidateBudgetForImport @aaBudgetID, @CodeSeqAbove OUTPUT, @CodeSeqBelow OUTPUT, @nResultOut OUTPUT  IF @nResultOut <= 0  BEGIN  ROLLBACK TRANSACTION  DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO  AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )  VALUES (-1,'0',@CodeSeqAbove,2)  RETURN -1010  END END ELSE BEGIN  EXEC aagValidateBudgetForImportForRollup @aaBudgetID, @nResultOut OUTPUT  IF @nResultOut <= 0  BEGIN  ROLLBACK TRANSACTION  DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )   VALUES (-1,'0',0,6)   RETURN -1010  END END   COMMIT TRANSACTION  DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO  AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )  VALUES (-1,'0',0,5)  RETURN 1 END    
GO
GRANT EXECUTE ON  [dbo].[aagImportBudget] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[aagValidateCodeSubLedDist] @I_nValidationLevel smallint =0,  @I_cTableAssign nvarchar(30) = null, @I_cTableCode nvarchar(30) = null, @I_cTableError nvarchar(30) = null, @I_nHdrID int = 0, @I_nDistID    int = 0, @I_nDistDebitAmt numeric(19,5) = 0, @I_nDistCreditAmt numeric(19,5) = 0, @I_nAcctClassID int = 0, @I_nActIndx int = 0, @I_fDocVal tinyint = 1, @O_fSuccess tinyint = 1 output, @I_UserID varchar(20), @I_Right int  as begin  declare  @nAssignID   int,  @cTrxDim   char(15),  @cTrxDimCode   char(30),  @cRelTrxDim   char(15),  @cRelTrxDimCode  char(30),  @nErrorNum       int,  @nAssignDebitAmt  numeric(19,5),  @nAssignCreditAmt  numeric(19,5),  @nTotAssignDebitAmt  numeric(19,5),  @nTotAssignCreditAmt  numeric(19,5),  @fValidCodeSetting  tinyint,  @fValidCodeComb  tinyint,  @DisplayDistID int,  @IsFullAssignment int,  @Series int,  @SQLCmd nvarchar(2000)   set @nAssignDebitAmt = 0  set @nAssignCreditAmt = 0  set @nTotAssignDebitAmt = 0  set @nTotAssignCreditAmt = 0  set @O_fSuccess = 1  set @Series = 0  set @nAssignID = 0   If (Select SERIES from AAG20000 Where aaSubLedgerHdrID = @I_nHdrID) = 5   and (Select TRXQTY from AAG20001 Where aaSubLedgerHdrID = @I_nHdrID and aaSubLedgerDistID = @I_nDistID) = 0   Return   exec ('delete from ' + @I_cTableError + ' where aaSubLedgerHdrID = ' + @I_nHdrID +  ' and aaSubLedgerDistID =' + @I_nDistID)  select @Series = SERIES from AAG20000 Where aaSubLedgerHdrID = @I_nHdrID  set @SQLCmd = 'declare aaSubLedDist cursor fast_forward FOR select aaSubLedgerAssignID,DEBITAMT,CRDTAMNT '  set @SQLCmd = @SQLCmd + ' from ' + @I_cTableAssign   set @SQLCmd = @SQLCmd + ' where aaSubLedgerHdrID = ' + ltrim(str(@I_nHdrID))  set @SQLCmd = @SQLCmd + ' and aaSubLedgerDistID = ' + ltrim(str(@I_nDistID))  if @Series = 4  set @SQLCmd = @SQLCmd + ' and (DEBITAMT + CRDTAMNT + ORDBTAMT + ORCRDAMT) <> 0 '  exec (@SQLCmd)  open aaSubLedDist  fetch next from aaSubLedDist into @nAssignID,@nAssignDebitAmt,@nAssignCreditAmt  WHILE @@fetch_status = 0  begin  exec aagCheckCodeSettingAssign  @I_nValidationLevel,  @I_cTableCode,  @I_cTableError,  @I_nHdrID,  @I_nDistID,  @I_nAcctClassID,  @I_nActIndx,  @nAssignID,  @O_fSuccess,  @fValidCodeSetting output,  @I_UserID,  @I_Right   if @fValidCodeSetting <> 1  set @O_fSuccess = 0   If @I_nValidationLevel <> 1  begin  exec aagValidateCodeSubLedAssign  @I_cTableCode,  @I_nHdrID,  @I_nDistID,  @I_nAcctClassID,   @nAssignID,  @cTrxDim output,  @cTrxDimCode output,  @cRelTrxDim output,  @cRelTrxDimCode output,  @fValidCodeComb output   if @fValidCodeComb = 0  begin   set @O_fSuccess = 0  set @nErrorNum = 6  exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,  aaTrxDim,aaTrxDimCode,aaRelatedTrxDim,aaRelatedTrxDimCode,aaErrorNum)  values(' + @I_nHdrID + ',' + @I_nDistID + ','  + @nAssignID  + ','''+ @cTrxDim  + ''','''+ @cTrxDimCode  + ''','''+ @cRelTrxDim  + ''','''+ @cRelTrxDimCode  + ''',' + @nErrorNum  + ')' )    end  end   set @nTotAssignDebitAmt = @nTotAssignDebitAmt + @nAssignDebitAmt  set @nTotAssignCreditAmt = @nTotAssignCreditAmt + @nAssignCreditAmt  fetch next from aaSubLedDist into @nAssignID,@nAssignDebitAmt,@nAssignCreditAmt  end  close aaSubLedDist  deallocate aaSubLedDist   exec aagValidateIsFullAssignment @I_nHdrID,@IsFullAssignment output   if @IsFullAssignment=1  begin  if @I_nValidationLevel <> 1 and (@nTotAssignDebitAmt <> @I_nDistDebitAmt or @nTotAssignCreditAmt <> @I_nDistCreditAmt)  begin   if (@nTotAssignDebitAmt > @I_nDistDebitAmt or @nTotAssignCreditAmt > @I_nDistCreditAmt)  set @nErrorNum = 112   else  set @nErrorNum = 101    exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,aaErrorNum)  values(' + @I_nHdrID + ',' + @I_nDistID + ',' + @nAssignID + ','+ @nErrorNum + ')')   set @O_fSuccess = 0  end   end  else   begin   if @I_nValidationLevel <> 1 and (@nTotAssignDebitAmt <> @I_nDistDebitAmt or @nTotAssignCreditAmt <> @I_nDistCreditAmt)  begin   if (@nTotAssignDebitAmt > @I_nDistDebitAmt or @nTotAssignCreditAmt > @I_nDistCreditAmt)  begin  set @nErrorNum = 112   set @nAssignID = 0   exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,aaErrorNum)  values(' + @I_nHdrID + ',' + @I_nDistID + ',' + @nAssignID + ','+ @nErrorNum + ')')   set @O_fSuccess = 0  end  end   end   if @I_fDocVal = 1  exec('update ' + @I_cTableError + ' set AADOCVAL = 1 where aaSubLedgerHdrID = ' + @I_nHdrID +  ' and AADOCVAL = 0')   exec aagGetDisplayDistID @I_nHdrID, @I_nDistID, 0, @DisplayDistID out  exec ('update ' + @I_cTableError + ' set aaDisplayDistID = ' + @DisplayDistID + ' where aaSubLedgerHdrID = ' + @I_nHdrID +  ' and aaSubLedgerDistID = ' + @I_nDistID)  return end    
GO
GRANT EXECUTE ON  [dbo].[aagValidateCodeSubLedDist] TO [DYNGRP]
GO

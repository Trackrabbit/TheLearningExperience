SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateAssetPurchase]  @I_vASSETID char(15),    @I_vASSETIDSUF smallint = 1,    @I_vPURCHLINESEQ int = null,   @I_vPURCHDESC char(40) = null,  @I_vAcquisition_Cost numeric(19,5) = null,  @I_vVENDORID char(15) = null,  @I_vDOCNUMBR char(20) = null,  @I_vDOCDATE datetime,   @I_vTRXSORCE char(13) = null,  @I_vORCTRNUM char(20) = null,  @I_vPORDNMBR char(20) = null,  @I_vCURNCYID char(15) = null,  @I_vXCHGRATE   numeric(19,7) = 0,  @I_vRATETPID   char(15) = null,  @I_vEXPNDATE   datetime = null,  @I_vEXCHDATE   datetime = null,  @I_vEXGTBDSC   char(30) = null,  @I_vEXTBLSRC   char(50) = null,  @I_vRATEEXPR   smallint = null,   @I_vDYSTINCR   smallint = null,  @I_vRATEVARC   numeric(19,7) = null,  @I_vTRXDTDEF   smallint = null,  @I_vRTCLCMTD   smallint = null,  @I_vPRVDSLMT   smallint = null,  @I_vDATELMTS   smallint = null,  @I_vTIME1   datetime = null,  @I_vUSERID char(15) = null,  @I_vUpdateIfExists  tinyint = 1,    @I_vUSRDEFND1   char(50) = '',       @I_vUSRDEFND2   char(50) = '',       @I_vUSRDEFND3   char(50) = '',       @I_vUSRDEFND4   varchar(8000) = '',  @I_vUSRDEFND5   varchar(8000) = '',  @O_iErrorState   int output,   @oErrString   varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @ASSETINDEX int,    @FUNLCURR char(15),    @FUNCURRNIDX smallint,    @FUNDECPLCUR int,    @DECPLCUR int,     @CURRNIDX smallint,    @DECPLUSED int,   @EXGTBLID char(15),    @DENXRATE numeric(19,5),   @NOTEINDX numeric(19,5),  @CMPANYID smallint,  @exists tinyint,   @ISMCTRX tinyint,   @Total_Acquisition_Cost numeric(19,5),  @Max_PURCHLINESEQ int,  @Acquisition_Cost numeric(19,5),  @taMCCurrencyValidateErrString char(255),  @taMCCurrencyValidateErrState int,  @iCursorError int,    @iGetNextNoteIdxErrState int,  @O_iNumErrorState int,    @iAddCodeErrState int,    @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @ASSETINDEX = 0,    @FUNLCURR = '',     @FUNCURRNIDX = 0,    @FUNDECPLCUR = 0,    @DECPLCUR = 0,      @CURRNIDX = 0,     @DECPLUSED = 0,   @EXGTBLID = '',     @DENXRATE = 0,  @CMPANYID = 0,     @exists = 0,  @ISMCTRX = 0,  @Total_Acquisition_Cost = 0,   @Max_PURCHLINESEQ = 0,  @Acquisition_Cost = 0,    @taMCCurrencyValidateErrString = '',  @taMCCurrencyValidateErrState = 0,   @O_iNumErrorState = 0,  @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateAssetPurchasePre  @I_vASSETID output,  @I_vASSETIDSUF output,  @I_vPURCHLINESEQ output,  @I_vPURCHDESC output,  @I_vAcquisition_Cost output,  @I_vVENDORID output,  @I_vDOCNUMBR output,  @I_vDOCDATE output,  @I_vTRXSORCE output,  @I_vORCTRNUM output,  @I_vPORDNMBR output,  @I_vCURNCYID output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vUSERID output,  @I_vUpdateIfExists output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8250     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vASSETID is NULL or  @I_vASSETIDSUF is NULL or   @I_vUpdateIfExists is NULL) begin  select @O_iErrorState = 8251     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vASSETID = UPPER(@I_vASSETID),  @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR)   if (@I_vASSETID = '') begin  select @O_iErrorState = 8252     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vASSETIDSUF < 1 and @I_vASSETIDSUF > 999)  begin   select @O_iErrorState = 8253     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vASSETID <> '') begin  if (not exists(select 1 from FA00100 (nolock) where ASSETID = @I_vASSETID and ASSETIDSUF = @I_vASSETIDSUF))  begin  select @O_iErrorState = 8254     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vASSETID <> '') begin  select @ASSETINDEX = ASSETINDEX from FA00100 (nolock) where ASSETID = @I_vASSETID and ASSETIDSUF = @I_vASSETIDSUF end  if (@I_vDOCDATE = '') begin   select @O_iErrorState = 8255     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vPURCHLINESEQ < 0) begin   select @O_iErrorState = 8256     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   select  @FUNLCURR = FUNLCURR,  @FUNCURRNIDX = FUNCRIDX  from MC40000 (nolock)  if (@FUNLCURR = '') begin  select @O_iErrorState = 8257    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @FUNDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = @FUNLCURR   if (@I_vCURNCYID <> '')  begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end end else begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if ((@FUNLCURR <> '') or (@I_vCURNCYID <> '')) begin  if (@I_vCURNCYID <> '')  select @DECPLUSED = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  else  select @DECPLUSED = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   if (@I_vAcquisition_Cost <> round(@I_vAcquisition_Cost,@DECPLUSED))  begin  select @O_iErrorState = 8258     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUpdateIfExists in  (0,1)) and (@I_vPURCHLINESEQ is null) begin  select @I_vPURCHLINESEQ = LASTPURCHLINESEQ + 1 from FA00100 (nolock) where ASSETINDEX = @ASSETINDEX end  if (exists(select top 1 ASSETINDEX from FA01400 (nolock) where ASSETINDEX = @ASSETINDEX and PURCHLINESEQ = @I_vPURCHLINESEQ)) begin  select @exists = 1 end  if (@I_vUpdateIfExists = 0)  begin  if (exists(select 1 from FA01400 (nolock) where ASSETINDEX = @ASSETINDEX and PURCHLINESEQ = @I_vPURCHLINESEQ))  begin  select @O_iErrorState = 8259     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vUpdateIfExists = 2) and (@exists = 1)  begin  return (@O_iErrorState) end  if (@I_vUpdateIfExists = 1) and (@exists = 1) begin  select @I_vPURCHDESC =   case  when @I_vPURCHDESC is null  then PURCHDESC  else @I_vPURCHDESC  end,   @I_vAcquisition_Cost =   case   when @I_vAcquisition_Cost is null  then Orig_Acquisition_Cost  else @I_vAcquisition_Cost  end,   @I_vVENDORID =   case  when @I_vVENDORID is null  then VENDORID  else @I_vVENDORID  end,   @I_vDOCNUMBR =   case   when @I_vDOCNUMBR is null  then DOCNUMBR  else @I_vDOCNUMBR  end,  @I_vTRXSORCE =   case  when @I_vTRXSORCE is null  then TRXSORCE  else @I_vTRXSORCE  end,   @I_vORCTRNUM =   case  when @I_vORCTRNUM is null  then ORCTRNUM  else @I_vORCTRNUM  end,   @I_vPORDNMBR =   case  when @I_vPORDNMBR is null  then PORDNMBR  else @I_vPORDNMBR  end,   @I_vCURNCYID =   case  when @I_vCURNCYID is null  then CURNCYID  else @I_vCURNCYID  end,   @I_vXCHGRATE =   case  when @I_vXCHGRATE is null  then XCHGRATE  else @I_vXCHGRATE  end,   @I_vEXCHDATE =   case  when @I_vEXCHDATE is null  then EXCHDATE  else @I_vEXCHDATE  end,   @I_vTIME1 =   case   when @I_vTIME1 is null  then TIME1  else @I_vTIME1  end,   @I_vRATETPID =   case  when @I_vRATETPID is null  then RATETPID  else @I_vRATETPID  end,   @I_vEXPNDATE =  case   when @I_vEXPNDATE is null  then ''  else @I_vEXPNDATE  end,   @I_vRATEEXPR =   case   when @I_vRATEEXPR is null  then -1  else @I_vRATEEXPR  end,  @I_vDYSTINCR =   case  when @I_vDYSTINCR is null  then -1   else @I_vDYSTINCR  end,  @I_vRATEVARC =   case   when @I_vRATEVARC is null  then 0  else @I_vRATEVARC  end,  @I_vTRXDTDEF =   case  when @I_vTRXDTDEF is null  then -1  else @I_vTRXDTDEF  end,  @I_vRTCLCMTD =   case  when @I_vRTCLCMTD is null  then -1  else @I_vRTCLCMTD  end,   @I_vUSERID =   case  when @I_vUSERID is null  then LASTMNTDUSERID  else @I_vUSERID  end  from FA01400 (nolock)  where ASSETINDEX = @ASSETINDEX and PURCHLINESEQ = @I_vPURCHLINESEQ  end else  if (@exists = 0) begin  select @I_vPURCHDESC =   case  when @I_vPURCHDESC is null  then ''  else @I_vPURCHDESC  end,   @I_vAcquisition_Cost =   case   when @I_vAcquisition_Cost is null  then 0  else @I_vAcquisition_Cost  end,   @I_vVENDORID =   case  when @I_vVENDORID is null  then ''  else @I_vVENDORID  end,   @I_vDOCNUMBR =   case   when @I_vDOCNUMBR is null  then ''  else @I_vDOCNUMBR  end,  @I_vTRXSORCE =   case  when @I_vTRXSORCE is null  then ''  else @I_vTRXSORCE  end,   @I_vORCTRNUM =   case  when @I_vORCTRNUM is null  then ''  else @I_vORCTRNUM  end,   @I_vPORDNMBR =   case  when @I_vPORDNMBR is null  then ''  else @I_vPORDNMBR  end,   @I_vCURNCYID =   case  when @I_vCURNCYID is null  then ''  else @I_vCURNCYID  end,   @I_vXCHGRATE =   case  when @I_vXCHGRATE is null  then 0  else @I_vXCHGRATE  end,   @I_vEXCHDATE =   case   when @I_vEXCHDATE is null  then ''  else @I_vEXCHDATE  end,   @I_vTIME1 =   case  when @I_vTIME1 is null  then ''  else @I_vTIME1  end,   @I_vRATETPID =   case  when @I_vRATETPID is null  then ''  else @I_vRATETPID  end,   @I_vEXPNDATE =  case   when @I_vEXPNDATE is null  then ''  else @I_vEXPNDATE  end,   @I_vRATEEXPR =   case   when @I_vRATEEXPR is null  then -1  else @I_vRATEEXPR  end,  @I_vDYSTINCR =   case  when @I_vDYSTINCR is null  then -1   else @I_vDYSTINCR  end,  @I_vRATEVARC =   case   when @I_vRATEVARC is null  then 0  else @I_vRATEVARC  end,  @I_vTRXDTDEF =   case  when @I_vTRXDTDEF is null  then 0  else @I_vTRXDTDEF  end,   @I_vRTCLCMTD =   case   when @I_vRTCLCMTD is null  then -1  else @I_vRTCLCMTD  end,   @I_vUSERID =   case  when @I_vUSERID is null  then ''  else @I_vUSERID  end end   if (@I_vVENDORID <> '')  begin  if (not exists(select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID))  begin  select @O_iErrorState = 8262     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vCURNCYID <> '') begin  if (not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID))  begin   select @O_iErrorState = 8263     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select top 1 CURNCYID from DYNAMICS..MC60100 (nolock) where CURNCYID = @I_vCURNCYID and CMPANYID = @CMPANYID ))  begin  select @O_iErrorState = 8264     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end   if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(FUNLCURR, ''),  @FUNCURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock) end  if ((@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = '',   @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 0,   @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @taMCCurrencyValidateErrString output,  @O_iErrorState = @taMCCurrencyValidateErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@taMCCurrencyValidateErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taMCCurrencyValidateErrString  select @O_iErrorState = 8265    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  else begin  select @ISMCTRX = 0, @I_vRATEEXPR=0, @I_vDYSTINCR=0, @I_vRTCLCMTD = 0, @I_vEXCHDATE = '', @I_vRATETPID = '' end  if (@ISMCTRX = 1) begin  if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 8266     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vRTCLCMTD = 0)   begin  select  @Acquisition_Cost = round(@I_vAcquisition_Cost * @I_vXCHGRATE, @FUNDECPLCUR)   end  else  if (@I_vRTCLCMTD = 1)   begin  select  @Acquisition_Cost = round(@I_vAcquisition_Cost / @I_vXCHGRATE, @FUNDECPLCUR)   end end else  begin  select @Acquisition_Cost = @I_vAcquisition_Cost end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 2) begin  select @O_iErrorState = 8267     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (@I_vUpdateIfExists in (0,1) and not exists(select 1 from FA01400 (nolock) where  ASSETINDEX = @ASSETINDEX and PURCHLINESEQ = @I_vPURCHLINESEQ))  begin  insert FA01400 (  ASSETINDEX,  PURCHLINESEQ,   PURCHDESC,  Acquisition_Cost,  Orig_Acquisition_Cost,  VENDORID,  DOCNUMBR,  DOCDATE,  TRXSORCE,  ORCTRNUM,  FA_AP_Post_Index,  PORDNMBR,  CURNCYID,  CURRNIDX,  XCHGRATE,  EXCHDATE,  TIME1,  EXGTBLID,  RATETPID,  RTCLCMTD,  DENXRATE,  MCTRXSTT,  LASTMNTDDATE,  LASTMNTDTIME,  LASTMNTDUSERID   )  select   @ASSETINDEX,     @I_vPURCHLINESEQ,     @I_vPURCHDESC,     case      when @ISMCTRX = 1   then @Acquisition_Cost  else @I_vAcquisition_Cost  end,   case      when @ISMCTRX = 1   then @I_vAcquisition_Cost  else @Acquisition_Cost  end,   @I_vVENDORID,     @I_vDOCNUMBR,     @I_vDOCDATE,     @I_vTRXSORCE,     @I_vORCTRNUM,     0,      @I_vPORDNMBR,     @I_vCURNCYID,     @CURRNIDX,     @I_vXCHGRATE,     @I_vEXCHDATE,     @I_vTIME1,     @EXGTBLID,     @I_vRATETPID,     @I_vRTCLCMTD,     @DENXRATE,     0,      convert(varchar(12),getdate()),   '',      @I_vUSERID      if @@error <> 0  begin  select @O_iErrorState = 8268    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   end   else  begin  if @CURRNIDX = 0  begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end   update FA01400 set   PURCHDESC = @I_vPURCHDESC,  Acquisition_Cost =   case  when @ISMCTRX = 1   then @Acquisition_Cost  else @I_vAcquisition_Cost  end,  Orig_Acquisition_Cost =   case   when @ISMCTRX = 1  then @I_vAcquisition_Cost  else @Acquisition_Cost  end,  VENDORID = @I_vVENDORID,  DOCNUMBR = @I_vDOCNUMBR,  DOCDATE = @I_vDOCDATE,  TRXSORCE = @I_vTRXSORCE,  ORCTRNUM = @I_vORCTRNUM,  PORDNMBR = @I_vPORDNMBR,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  TIME1 = @I_vTIME1,  EXGTBLID = @EXGTBLID,  RATETPID = @I_vRATETPID,  RTCLCMTD = @I_vRTCLCMTD,  LASTMNTDDATE = convert(varchar(12),getdate()),  LASTMNTDUSERID = @I_vUSERID  where ASSETINDEX = @ASSETINDEX and PURCHLINESEQ = @I_vPURCHLINESEQ   if (@@error <> 0)  begin  select @O_iErrorState = 8269     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if exists(select 1 from FA00100 (nolock) where  ASSETINDEX = @ASSETINDEX)   begin  select @Total_Acquisition_Cost = sum(Acquisition_Cost),  @Max_PURCHLINESEQ = max(PURCHLINESEQ)  from FA01400 where ASSETINDEX = @ASSETINDEX   if (@Total_Acquisition_Cost < 0)   begin   select @O_iErrorState = 8261     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update FA00100 set Acquisition_Cost = @Total_Acquisition_Cost,  LASTPURCHLINESEQ = @Max_PURCHLINESEQ  where ASSETINDEX = @ASSETINDEX  if @@error <> 0  begin  select @O_iErrorState = 8260    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taCreateAssetPurchasePost  @I_vASSETID,  @I_vASSETIDSUF,   @I_vPURCHLINESEQ ,  @I_vPURCHDESC ,  @I_vAcquisition_Cost ,  @I_vVENDORID,  @I_vDOCNUMBR,  @I_vDOCDATE,  @I_vTRXSORCE,  @I_vORCTRNUM,  @I_vPORDNMBR,  @I_vCURNCYID,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vUSERID,  @I_vUpdateIfExists,   @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8270    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateAssetPurchase] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[eeCompanyCopy] @I_vFromCompany varchar(50),			 @I_vToCompany varchar(50),				 @I_vData tinyint,						 @I_vReportOptions tinyint,				 @I_vAllModules tinyint = 0,				 @I_vCompany tinyint = 0,				 @I_vFinancial tinyint = 0,				 @I_vInventory tinyint = 0,				 @I_vFixedAssets tinyint = 0,			 @I_vMultiCurrency tinyint = 0,			 @I_vPayroll tinyint = 0,				 @I_vPayables tinyint = 0,				 @I_vReceivables tinyint = 0,			 @I_vSalesOrderProcessing tinyint = 0,	 @I_vPurchaseOrderProcessing tinyint = 0, @I_vAdvancedFinancials tinyint = 0,		 @I_vExtendedPricing tinyint = 0,		 @I_vInvoicing tinyint = 0,				 @I_vHumanResources tinyint = 0,			 @I_vManufacturing tinyint = 0,			 @I_vBillOfMaterials tinyint = 0,		 @I_vProjectAccounting tinyint = 0,		 @O_iErrorState int = 0 output			 with encryption as set transaction isolation level read uncommitted set nocount on declare @iStatus int, @tTransaction tinyint, @cStatement varchar(8000), @cStatement2 varchar(8000), @cStatement3 varchar(8000), @cStatement4 varchar(8000), @cStatement5 varchar(8000), @cStatement6 varchar(8000), @cStatement7 varchar(8000), @cStatement8 varchar(8000), @cStatement9 varchar(8000), @cStatement10 varchar(8000), @cStatement11 varchar(8000), @cStatement12 varchar(500), @DestCMPANYID smallint, @SourcCMPANYID smallint, @cStatement1 varchar(255), @MaxNOTEINDX int, @DestCMPNYNAM varchar(65), @tLoop tinyint select @iStatus = 0, @tTransaction = 0, @cStatement = '', @cStatement2 = '', @cStatement3 = '', @cStatement4 = '', @cStatement5 = '', @cStatement6 = '', @cStatement7 = '', @cStatement8 = '', @cStatement9 = '', @cStatement10 = '', @cStatement11 = '', @cStatement12 = '', @DestCMPANYID = 0, @SourcCMPANYID = 0, @cStatement1 = '', @MaxNOTEINDX = 0, @DestCMPNYNAM = '' if (@@trancount = 0) begin select @tTransaction = 1 begin transaction end while (@tLoop is null) begin select @tLoop=1 if (@I_vAllModules = 1) begin select @I_vCompany = 1, @I_vFinancial = 1, @I_vInventory = 1, @I_vFixedAssets = 1, @I_vMultiCurrency = 1, @I_vPayroll = 1, @I_vPayables = 1, @I_vReceivables = 1, @I_vSalesOrderProcessing = 1, @I_vPurchaseOrderProcessing = 1, @I_vAdvancedFinancials = 1, @I_vExtendedPricing = 1, @I_vInvoicing = 1, @I_vHumanResources = 1, @I_vManufacturing = 1, @I_vBillOfMaterials = 1, @I_vProjectAccounting = 1 end if(not exists(select top 1 1 from sysobjects where name = 'FA00100')) begin select @I_vFixedAssets = 0 end if(not exists(select top 1 1 from sysobjects where name = 'BE020230')) begin select @I_vHumanResources = 0 end if(not exists(select top 1 1 from sysobjects where name = 'ADSK0700')) begin select @I_vManufacturing = 0 end if(not exists(select top 1 1 from sysobjects where name = 'PA41701')) begin select @I_vProjectAccounting = 0 end exec @iStatus = eeCompanyCopyPre @I_vFromCompany output,				 @I_vToCompany output,				 @I_vData output,					 @I_vReportOptions output,			 @I_vAllModules output,				 @I_vCompany output,					 @I_vFinancial output,				 @I_vInventory output,				 @I_vFixedAssets output,				 @I_vMultiCurrency output,			 @I_vPayroll output,					 @I_vPayables output,				 @I_vReceivables output,				 @I_vSalesOrderProcessing output,	 @I_vPurchaseOrderProcessing output,	 @I_vAdvancedFinancials output,		 @I_vExtendedPricing output,			 @I_vInvoicing output,				 @I_vHumanResources output,			 @I_vManufacturing output,			 @I_vBillOfMaterials output,			 @I_vProjectAccounting output,		 @O_iErrorState output if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 1  break end if (@I_vToCompany not in(select INTERID from DYNAMICS..SY01500 (nolock) where INTERID = @I_vToCompany)) begin select @O_iErrorState = 2  break end if (@I_vFromCompany not in(select INTERID from DYNAMICS..SY01500 (nolock) where INTERID = @I_vFromCompany)) begin select @O_iErrorState = 3  break end if (@I_vData not in(0,1)) begin select @O_iErrorState = 4  break end if (@I_vReportOptions not in(0,1)) begin select @O_iErrorState = 5  break end if ((@I_vData = 0) and (@I_vReportOptions = 0)) begin select @O_iErrorState = 6  break end if (@I_vAllModules not in(0,1)) begin select @O_iErrorState = 7  break end if (@I_vCompany not in(0,1)) begin select @O_iErrorState = 8  break end if (@I_vFinancial not in(0,1)) begin select @O_iErrorState = 9  break end if (@I_vInventory not in(0,1)) begin select @O_iErrorState = 10  break end if (@I_vFixedAssets not in(0,1)) begin select @O_iErrorState = 11  break end if (@I_vMultiCurrency not in(0,1)) begin select @O_iErrorState = 12  break end if (@I_vPayroll not in(0,1)) begin select @O_iErrorState = 13  break end if (@I_vPayables not in(0,1)) begin select @O_iErrorState = 14  break end if (@I_vReceivables not in(0,1)) begin select @O_iErrorState = 15  break end if (@I_vSalesOrderProcessing not in(0,1)) begin select @O_iErrorState = 16  break end if (@I_vPurchaseOrderProcessing not in(0,1)) begin select @O_iErrorState = 17  break end if (@I_vAdvancedFinancials not in(0,1)) begin select @O_iErrorState = 18  break end if (@I_vExtendedPricing not in(0,1)) begin select @O_iErrorState = 19  break end if (@I_vInvoicing not in(0,1)) begin select @O_iErrorState = 20  break end if (@I_vHumanResources not in(0,1)) begin select @O_iErrorState = 21  break end if (@I_vManufacturing not in(0,1)) begin select @O_iErrorState = 22  break end if (@I_vBillOfMaterials not in(0,1)) begin select @O_iErrorState = 23  break end if (@I_vProjectAccounting not in(0,1)) begin select @O_iErrorState = 24  break end if ( @I_vCompany = 0 and @I_vFinancial = 0 and @I_vInventory = 0 and @I_vFixedAssets = 0 and @I_vMultiCurrency = 0 and @I_vPayroll = 0 and @I_vPayables = 0 and @I_vReceivables = 0 and @I_vSalesOrderProcessing = 0 and @I_vPurchaseOrderProcessing = 0 and @I_vAdvancedFinancials = 0 and @I_vExtendedPricing = 0 and @I_vInvoicing = 0 and @I_vHumanResources = 0 and @I_vManufacturing = 0 and @I_vBillOfMaterials = 0 and @I_vProjectAccounting = 0 ) begin select @O_iErrorState = 25  break end if (@I_vFinancial = 0) begin select @O_iErrorState = 53  break end if ((@I_vManufacturing = 1) and (@I_vInventory = 0)) begin select @O_iErrorState = 26  break end if ((@I_vExtendedPricing = 1) and ((@I_vInventory = 0) or (@I_vReceivables = 0))) begin select @O_iErrorState = 27  break end if ((@I_vProjectAccounting = 1) and ((@I_vInventory = 0) or (@I_vReceivables = 0) or (@I_vPayroll = 0))) begin select @O_iErrorState = 28  break end if ((@I_vBillOfMaterials = 1) and (@I_vInventory = 0)) begin select @O_iErrorState = 29  break end if ((@I_vReportOptions = 1) and (@I_vCompany = 0)) begin select @O_iErrorState = 30  break end select @DestCMPANYID = CMPANYID, @DestCMPNYNAM = CMPNYNAM from DYNAMICS..SY01500 where INTERID = @I_vToCompany select @SourcCMPANYID = CMPANYID from DYNAMICS..SY01500 where INTERID = @I_vFromCompany if (@I_vData = 1) begin if (@I_vCompany = 1) begin exec @iStatus = eeCompanyCopyCmpy @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 31  break end end if (@I_vFinancial = 1) begin exec @iStatus = eeCompanyCopyFinancial @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 32  break end end if (@I_vInventory = 1) begin exec @iStatus = eeCompanyCopyIV @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 33  break end end if (@I_vFixedAssets = 1) begin exec @iStatus = eeCompanyCopyFA @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 34  break end end if (@I_vMultiCurrency = 1) begin exec @iStatus = eeCompanyCopyMC @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 36  break end end if (@I_vPayroll = 1) begin exec @iStatus = eeCompanyCopyPR @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 37  break end end if (@I_vPayables = 1) begin exec @iStatus = eeCompanyCopyPM @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 38  break end end if (@I_vReceivables = 1) begin exec @iStatus = eeCompanyCopyRM @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 39  break end end if (@I_vSalesOrderProcessing = 1) begin exec @iStatus = eeCompanyCopySOP @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 40  break end end if (@I_vPurchaseOrderProcessing = 1) begin exec @iStatus = eeCompanyCopyPOP @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 41  break end end if (@I_vAdvancedFinancials = 1) begin exec @iStatus = eeCompanyCopyAFA @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 42  break end end if (@I_vExtendedPricing = 1) begin exec @iStatus = eeCompanyCopyExPr @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 43  break end end if (@I_vInvoicing = 1) begin exec @iStatus = eeCompanyCopyIVC @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 44  break end end if (@I_vHumanResources = 1) begin exec @iStatus = eeCompanyCopyHR @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 45  break end end if (@I_vManufacturing = 1) begin exec @iStatus = eeCompanyCopyMfg @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 47  break end end if (@I_vBillOfMaterials = 1) begin exec @iStatus = eeCompanyCopyBOM @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 49  break end end if (@I_vProjectAccounting = 1) begin exec @iStatus = eeCompanyCopyPA @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @O_iErrorState output		 if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 50  break end end end delete DYNAMICS..MC60100 where CMPANYID = @DestCMPANYID delete DYNAMICS..MC60200 where CMPANYID = @DestCMPANYID delete DYNAMICS..SY01900 where CMPANYID = @DestCMPANYID insert into DYNAMICS..MC60100 (CMPANYID, CURNCYID, INACTIVE) select @DestCMPANYID, CURNCYID, INACTIVE from DYNAMICS..MC60100 where CMPANYID = @SourcCMPANYID insert into DYNAMICS..MC60200 (CMPANYID, EXGTBLID, INACTIVE) select @DestCMPANYID, EXGTBLID, INACTIVE from DYNAMICS..MC60200 where CMPANYID = @SourcCMPANYID insert into DYNAMICS..SY01900 (CMPANYID, USERID, REPORTID) select @DestCMPANYID, USERID, REPORTID from DYNAMICS..SY01900 where CMPANYID = @SourcCMPANYID exec @iStatus = eeCompanyCopyPost @I_vFromCompany,			 @I_vToCompany,				 @I_vData,					 @I_vReportOptions,			 @I_vAllModules,				 @I_vCompany,				 @I_vFinancial,				 @I_vInventory,				 @I_vFixedAssets,			 @I_vMultiCurrency,			 @I_vPayroll,				 @I_vPayables,				 @I_vReceivables,			 @I_vSalesOrderProcessing,	 @I_vPurchaseOrderProcessing, @I_vAdvancedFinancials,		 @I_vExtendedPricing,		 @I_vInvoicing,				 @I_vHumanResources,			 @I_vManufacturing,			 @I_vBillOfMaterials,		 @I_vProjectAccounting ,		 @O_iErrorState output if ((@iStatus <> 0) or (@O_iErrorState <> 0)) begin select @O_iErrorState = 52  break end if exists(select top 1 1 from tempdb.dbo.sysobjects where id = Object_id('tempdb.dbo.#Tables') and type = 'U') begin drop table #Tables end create table #Tables (TableName varchar(50) null) select @cStatement12 = 'insert #Tables (TableName) select o.name as TableName from ' + rtrim(@I_vToCompany) + '..sysobjects o, ' + rtrim(@I_vToCompany) + '..syscolumns c where o.id = c.id and o.type = ''U'' and c.name = ''NOTEINDX''' exec(@cStatement12)  if exists(select * from tempdb.dbo.sysobjects where id = Object_id('tempdb.dbo.#GPSMaxNote') and type = 'U') begin drop table #GPSMaxNote end create table #GPSMaxNote (MaxNoteIndex numeric(19,5) null) declare T_cursor cursor for select 'declare @NoteIndex numeric(19,5) select @NoteIndex = isnull(max(NOTEINDX),0) from ' + rtrim(@I_vToCompany) + '..' + o.TableName + ' insert #GPSMaxNote values(@NoteIndex)' from #Tables o open T_cursor fetch next from T_cursor into @cStatement1 while (@@fetch_status <> -1) begin exec(@cStatement1) fetch next from T_cursor into @cStatement1 end deallocate T_cursor select @MaxNOTEINDX = max(MaxNoteIndex) from #GPSMaxNote update DYNAMICS..SY01500 set NOTEINDX = @MaxNOTEINDX where CMPANYID = @DestCMPANYID end if (@O_iErrorState <> 0) begin if (@tTransaction = 1) begin rollback transaction end end else if (@tTransaction = 1) begin commit transaction end return 
GO
GRANT EXECUTE ON  [dbo].[eeCompanyCopy] TO [DYNGRP]
GO

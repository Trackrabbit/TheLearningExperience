SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateLockbox]  @I_vLockboxID char(15),    @I_vLockboxDescription char(30),  @I_vCHEKBKID char(15),    @I_vSTRGA255 char(255),        @I_vpaLockboxFormatType smallint = 1,  @I_vXPRTFTYP smallint = 1,   @I_vDECPLCUR smallint = 1,   @I_vpaApplyMethod smallint = 1,   @I_vOmitStartRecords int = 0,   @I_vOmitLastRecords int = 0,   @I_vpaHeaderRowIndicator char(10) = '',  @I_vpaDeailRowIndicator char(10) = '',  @I_vCREATDDT datetime = '',   @I_vMODIFDT datetime = '',   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @CMPANYID smallint,     @NOTEINDX numeric (19,5),    @iGetNextNoteIdxErrState int,  @paApplyMethodInvoice smallint,    @iAddCodeErrState int,     @iStatus int,       @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @iError int      select  @CMPANYID = 0,      @paApplyMethodInvoice = 1,  @iStatus = 0,  @iAddCodeErrState =0,  @iCustomState = 0,  @O_oErrorState = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateLockboxPre  @I_vLockboxID output,  @I_vLockboxDescription output,  @I_vCHEKBKID output,  @I_vSTRGA255 output,  @I_vpaLockboxFormatType output,  @I_vXPRTFTYP output,  @I_vDECPLCUR output,  @I_vpaApplyMethod output,  @I_vOmitStartRecords output,  @I_vOmitLastRecords output,  @I_vpaHeaderRowIndicator output,  @I_vpaDeailRowIndicator output,  @I_vCREATDDT output,  @I_vMODIFDT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2633     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vLockboxID is null or  @I_vLockboxDescription is null or  @I_vCHEKBKID is null or  @I_vSTRGA255 is null or  @I_vpaLockboxFormatType is null or  @I_vXPRTFTYP is null or  @I_vDECPLCUR is null or  @I_vpaApplyMethod is null or  @I_vOmitStartRecords is null or  @I_vOmitLastRecords is null or  @I_vpaHeaderRowIndicator is null or  @I_vpaDeailRowIndicator is null or  @I_vCREATDDT is null or  @I_vMODIFDT is null  ) begin  select @O_iErrorState = 2634    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vLockboxID = UPPER(@I_vLockboxID),  @I_vCHEKBKID = UPPER(@I_vCHEKBKID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 2677    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vLockboxID = '' ) begin  select @O_iErrorState = 2635     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vCHEKBKID = '' ) begin  select @O_iErrorState = 2636     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vCHEKBKID <> '' ) begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID))  begin  select @O_iErrorState = 2637     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9525     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vLockboxDescription = '' ) begin  select @O_iErrorState = 2638     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTRGA255 = '' ) begin  select @O_iErrorState = 2639     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vXPRTFTYP < 1 or @I_vXPRTFTYP > 3 ) begin  select @O_iErrorState = 2640     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vpaLockboxFormatType < 1 or @I_vpaLockboxFormatType > 2 ) begin  select @O_iErrorState = 2641     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vpaLockboxFormatType = 1 and @I_vpaHeaderRowIndicator <> '' ) begin  select @O_iErrorState = 2643     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vpaLockboxFormatType = 1 and @I_vpaDeailRowIndicator <> '' ) begin  select @O_iErrorState = 2644     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vDECPLCUR < 1 or @I_vDECPLCUR > 6 ) begin  select @O_iErrorState = 2645     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vpaApplyMethod < 1 or @I_vpaApplyMethod > 7 ) begin  select @O_iErrorState = 2646     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (not exists (select 1 from palbmstr (nolock) where LockboxID = @I_vLockboxID))  begin  insert into palbmstr  (  LockboxID,  LockboxDescription,  paLockboxFormatType,  STRGA255,  LockboxFileName,  XPRTFTYP,  CHEKBKID,  paApplyMethod,  paApplyMethodInvoice,  DECPLCUR,  OmitStartRecords,  OmitLastRecords,  paHeaderRowIndicator,  paDeailRowIndicator,  NOTEINDX,  CREATDDT,  MODIFDT  )  select  @I_vLockboxID,      @I_vLockboxDescription,     @I_vpaLockboxFormatType,    @I_vSTRGA255,      '',       @I_vXPRTFTYP,      @I_vCHEKBKID,      @I_vpaApplyMethod,     @paApplyMethodInvoice,     @I_vDECPLCUR,      @I_vOmitStartRecords,     @I_vOmitLastRecords,     @I_vpaHeaderRowIndicator,    @I_vpaDeailRowIndicator,    @NOTEINDX,      case        WHEN @I_vCREATDDT = ''  THEN convert(varchar(12),getdate())   ELSE @I_vCREATDDT  end,   case        WHEN @I_vMODIFDT = ''  THEN convert(varchar(12),getdate())   ELSE @I_vMODIFDT  end   if (@@error <> 0)  begin  select @O_iErrorState = 2647    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 2648     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taCreateLockboxPost  @I_vLockboxID,  @I_vLockboxDescription,  @I_vCHEKBKID,  @I_vSTRGA255,  @I_vpaLockboxFormatType,  @I_vXPRTFTYP,  @I_vDECPLCUR,  @I_vpaApplyMethod,  @I_vOmitStartRecords,  @I_vOmitLastRecords,  @I_vpaHeaderRowIndicator,  @I_vpaDeailRowIndicator,  @I_vCREATDDT,  @I_vMODIFDT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error  if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2649    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateLockbox] TO [DYNGRP]
GO

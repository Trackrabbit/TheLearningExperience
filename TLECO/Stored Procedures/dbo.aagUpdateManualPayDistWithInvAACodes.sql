SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagUpdateManualPayDistWithInvAACodes]  @aaSubLedgerHdrID INT,  @CompanyID SMALLINT,  @SqlSessionID INT AS  BEGIN  DECLARE @VCHRNMBR CHAR(17),  @APTODCNM CHAR(17),  @APTVCHNM CHAR(17),  @ACTINDX INT,  @aaSubLedgerDistID INT,  @aaSubLedgerAssignID INT,  @NOTEINDX NUMERIC(19,5),  @APPLDAMT NUMERIC(19,5),  @ORAPPAMT NUMERIC(19,5),  @CRDTAMNT NUMERIC(19,5),   @ORCRDAMT NUMERIC(19,5),  @DEBITAMT     NUMERIC(19,5),   @ORDBTAMT     NUMERIC(19,5),   @OLDaaSubLedgerHdrID INT,  @OLDaaSubLedgerDistID INT,  @OLDaaSubLedgerAssignID INT,  @OLDaaAssignedPercent INT,  @AssignPercent INT,  @TotalORCRDTAMT   NUMERIC(19,5),  @TotalCRDTAMT    NUMERIC(19,5),  @TotalORDBTAMT    NUMERIC(19,5),  @TotalDEBITAMT    NUMERIC(19,5),  @TotalPrec INT,  @aaBrowseTypeNew SMALLINT,  @ClassID INT,  @oRequiredFieldEmpty TINYINT,  @DISTTYPE INT,  @DISAVTKN     NUMERIC(19,5),  @ORDISTKN     NUMERIC(19,5),  @DummyDBTAMT NUMERIC(19,5),   @DummyCRDTAMT NUMERIC(19,5),  @AssignCRDTAMNT NUMERIC(19,5),   @AssignDEBITAMT NUMERIC(19,5)   SELECT A2.aaSubLedgerHdrID HdrID, A2.aaSubLedgerDistID DistID, A2.aaSubLedgerAssignID AssignID, A1.ACTINDX, 2 DISTTYPE,0 aaPerc, A2.CRDTAMNT, A2.DEBITAMT INTO #Distribution FROM AAG20002 A2  INNER JOIN AAG20001 A1 on A2.aaSubLedgerHdrID = A1.aaSubLedgerHdrID AND A1.aaSubLedgerDistID = A2.aaSubLedgerDistID  WHERE 1 = 2   SELECT @VCHRNMBR = DOCNUMBR FROM AAG20000 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  DECLARE Cursor1 CURSOR LOCAL FAST_FORWARD FOR   SELECT APTVCHNM, APTODCNM, APPLDAMT, ORAPPAMT, DISAVTKN, ORDISTKN FROM PM20100 WHERE VCHRNMBR = @VCHRNMBR   OPEN Cursor1  FETCH NEXT FROM Cursor1 INTO @APTVCHNM, @APTODCNM, @APPLDAMT, @ORAPPAMT, @DISAVTKN, @ORDISTKN  WHILE @@FETCH_STATUS = 0  BEGIN  IF EXISTS (SELECT TOP 1 1 FROM POP30300 WHERE VCHRNMBR = @APTVCHNM and VNDDOCNM = @APTODCNM)  BEGIN  IF @APPLDAMT > 0  INSERT INTO #Distribution SELECT A2.aaSubLedgerHdrID, A2.aaSubLedgerDistID, A2.aaSubLedgerAssignID, A1.ACTINDX, 2,0, A2.CRDTAMNT, A2.DEBITAMT FROM AAG20002 A2  INNER JOIN AAG20001 A1 on A2.aaSubLedgerHdrID = A1.aaSubLedgerHdrID AND A1.aaSubLedgerDistID = A2.aaSubLedgerDistID  WHERE   A2.aaSubLedgerHdrID = (SELECT TOP 1 aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 12 and DOCTYPE IN (2, 3) AND DOCNUMBR =   (SELECT TOP 1 POPRCTNM FROM POP30300 WHERE VCHRNMBR = @APTVCHNM and VNDDOCNM = @APTODCNM)  ) AND   A1.DISTTYPE = 7  IF @DISAVTKN > 0  INSERT INTO #Distribution SELECT A2.aaSubLedgerHdrID, A2.aaSubLedgerDistID, A2.aaSubLedgerAssignID, A1.ACTINDX, 3,0, A2.CRDTAMNT, A2.DEBITAMT FROM AAG20002 A2  INNER JOIN AAG20001 A1 on A2.aaSubLedgerHdrID = A1.aaSubLedgerHdrID AND A1.aaSubLedgerDistID = A2.aaSubLedgerDistID  WHERE   A2.aaSubLedgerHdrID = (SELECT TOP 1 aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 12 and DOCTYPE IN (2, 3) AND DOCNUMBR =   (SELECT TOP 1 POPRCTNM FROM POP30300 WHERE VCHRNMBR = @APTVCHNM and VNDDOCNM = @APTODCNM)  ) AND   A1.DISTTYPE = 6  END  ELSE  BEGIN  IF @APPLDAMT > 0  INSERT INTO #Distribution SELECT A2.aaSubLedgerHdrID, A2.aaSubLedgerDistID, A2.aaSubLedgerAssignID, A1.ACTINDX, 2,0, A2.CRDTAMNT, A2.DEBITAMT FROM AAG20002 A2  INNER JOIN AAG20001 A1 on A2.aaSubLedgerHdrID = A1.aaSubLedgerHdrID AND A1.aaSubLedgerDistID = A2.aaSubLedgerDistID  WHERE   A2.aaSubLedgerHdrID = (SELECT aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 4 and DOCTYPE = 0 AND DOCNUMBR = @APTVCHNM) AND   DISTTYPE = 2   IF @DISAVTKN > 0  INSERT INTO #Distribution SELECT A2.aaSubLedgerHdrID, A2.aaSubLedgerDistID, A2.aaSubLedgerAssignID, A1.ACTINDX, 3,0, A2.CRDTAMNT, A2.DEBITAMT FROM AAG20002 A2  INNER JOIN AAG20001 A1 on A2.aaSubLedgerHdrID = A1.aaSubLedgerHdrID AND A1.aaSubLedgerDistID = A2.aaSubLedgerDistID  WHERE   A2.aaSubLedgerHdrID = (SELECT aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 4 and DOCTYPE = 0 AND DOCNUMBR = @APTVCHNM) AND   DISTTYPE = 3  END   FETCH NEXT FROM Cursor1 INTO @APTVCHNM, @APTODCNM, @APPLDAMT, @ORAPPAMT, @DISAVTKN, @ORDISTKN  END  CLOSE Cursor1  DEALLOCATE Cursor1   UPDATE #Distribution SET aaPerc = (a.CRDTAMNT+a.DEBITAMT) * 10000/(SELECT SUM(b.CRDTAMNT+b.DEBITAMT) FROM #Distribution b WHERE b.ACTINDX= a.ACTINDX and b.DISTTYPE =a.DISTTYPE GROUP BY ACTINDX, DISTTYPE) FROM #Distribution a    DECLARE Cursor2 CURSOR LOCAL FAST_FORWARD FOR   SELECT aaSubLedgerDistID, ACTINDX, CRDTAMNT, DEBITAMT, DISTTYPE FROM AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID and DISTTYPE IN (2,3)   OPEN Cursor2  FETCH NEXT FROM Cursor2 INTO @aaSubLedgerDistID, @ACTINDX, @CRDTAMNT, @DEBITAMT, @DISTTYPE  WHILE @@FETCH_STATUS = 0  BEGIN  EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID OUTPUT,   @aaBrowseTypeNew OUTPUT    DELETE FROM AAG20003 where aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID  DELETE FROM AAG20002 where aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   DECLARE Assign CURSOR LOCAL FOR  SELECT HdrID, DistID, AssignID, aaPerc, CRDTAMNT, DEBITAMT FROM #Distribution WHERE ACTINDX= @ACTINDX and DISTTYPE = @DISTTYPE ORDER BY ACTINDX, DISTTYPE ASC  OPEN Assign  FETCH NEXT FROM Assign INTO @OLDaaSubLedgerHdrID, @OLDaaSubLedgerDistID, @OLDaaSubLedgerAssignID, @OLDaaAssignedPercent, @AssignCRDTAMNT, @AssignDEBITAMT  WHILE @@FETCH_STATUS = 0   BEGIN   SELECT @aaSubLedgerAssignID = ISNULL(MAX(A22.aaSubLedgerAssignID),0) + 1 FROM AAG20002 A22  WHERE A22.aaSubLedgerHdrID = @aaSubLedgerHdrID AND A22.aaSubLedgerDistID = @aaSubLedgerDistID   IF (@CRDTAMNT + @DEBITAMT) < (SELECT SUM(b.CRDTAMNT+b.DEBITAMT) FROM #Distribution b WHERE b.ACTINDX= @ACTINDX and b.DISTTYPE = @DISTTYPE GROUP BY ACTINDX, DISTTYPE)  BEGIN  SELECT @DummyDBTAMT =  @AssignCRDTAMNT, @DummyCRDTAMT =  @AssignDEBITAMT   INSERT INTO AAG20002  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,  CASE @DEBITAMT WHEN 0 then 0 else ISNULL(ROUND(@DEBITAMT*@OLDaaAssignedPercent/10000,2),0) END,   CASE @CRDTAMNT WHEN 0 then 0 else ISNULL(ROUND(@CRDTAMNT*@OLDaaAssignedPercent/10000,2),0) END,   CASE @DEBITAMT WHEN 0 then 0 else ISNULL(ROUND(@DEBITAMT*@OLDaaAssignedPercent/10000,2),0) END,   CASE @CRDTAMNT WHEN 0 then 0 else ISNULL(ROUND(@CRDTAMNT*@OLDaaAssignedPercent/10000,2),0) END,   0, DistRef, NOTEINDX, aaAssignErrors, aaAliasID   FROM AAG20002   WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID=@OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID  END  ELSE IF(@CRDTAMNT + @DEBITAMT) >= (SELECT SUM(b.CRDTAMNT+b.DEBITAMT) FROM #Distribution b WHERE b.ACTINDX= @ACTINDX and b.DISTTYPE = @DISTTYPE GROUP BY ACTINDX, DISTTYPE)  BEGIN  SELECT @DummyDBTAMT =  @AssignCRDTAMNT, @DummyCRDTAMT =  @AssignDEBITAMT   INSERT INTO AAG20002  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,  CASE @DEBITAMT WHEN 0 then 0 else ISNULL(@DummyDBTAMT,0) END,   CASE @CRDTAMNT WHEN 0 then 0 else ISNULL(@DummyCRDTAMT,0) END,   CASE @DEBITAMT WHEN 0 then 0 else ISNULL(@DummyDBTAMT,0) END,   CASE @CRDTAMNT WHEN 0 then 0 else ISNULL(@DummyCRDTAMT,0) END,   0, DistRef, NOTEINDX, aaAssignErrors, aaAliasID   FROM AAG20002   WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID=@OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID   END  INSERT INTO AAG20003 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [aaTrxDimID], [aaTrxCodeID], [aaCodeErrors])  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, [aaTrxDimID], [aaTrxCodeID], [aaCodeErrors]  FROM AAG20003  WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID=@OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID   FETCH NEXT FROM Assign INTO @OLDaaSubLedgerHdrID, @OLDaaSubLedgerDistID, @OLDaaSubLedgerAssignID, @OLDaaAssignedPercent, @AssignCRDTAMNT, @AssignDEBITAMT  END  CLOSE Assign  DEALLOCATE Assign   UPDATE AAG20002 SET aaAssignedPercent = ROUND(((CRDTAMNT+DEBITAMT)* 10000)/(@CRDTAMNT+@DEBITAMT),2)  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   SET @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID)  IF @AssignPercent <> 0 AND @AssignPercent > 9900   UPDATE AAG20002 SET aaAssignedPercent = aaAssignedPercent + (10000 - @AssignPercent),  CRDTAMNT= CRDTAMNT+(SELECT a1.CRDTAMNT - SUM(a2.CRDTAMNT) FROM AAG20002 a2 Inner JOIN AAG20001 a1 ON a2.aaSubLedgerHdrID = a1.aaSubLedgerHdrID AND a2.aaSubLedgerDistID = a1.aaSubLedgerDistID AND a2.aaSubLedgerHdrID = @aaSubLedgerHdrID AND a2.aaSubLedgerDistID=@aaSubLedgerDistID GROUP BY a1.CRDTAMNT),  ORCRDAMT= CRDTAMNT+(SELECT a1.CRDTAMNT - SUM(a2.CRDTAMNT) FROM AAG20002 a2 Inner JOIN AAG20001 a1 ON a2.aaSubLedgerHdrID = a1.aaSubLedgerHdrID AND a2.aaSubLedgerDistID = a1.aaSubLedgerDistID AND a2.aaSubLedgerHdrID = @aaSubLedgerHdrID AND a2.aaSubLedgerDistID=@aaSubLedgerDistID GROUP BY a1.CRDTAMNT),  DEBITAMT= DEBITAMT+(SELECT a1.DEBITAMT - SUM(a2.DEBITAMT) FROM AAG20002 a2 Inner JOIN AAG20001 a1 ON a2.aaSubLedgerHdrID = a1.aaSubLedgerHdrID AND a2.aaSubLedgerDistID = a1.aaSubLedgerDistID AND a2.aaSubLedgerHdrID = @aaSubLedgerHdrID AND a2.aaSubLedgerDistID=@aaSubLedgerDistID GROUP BY a1.DEBITAMT),  ORDBTAMT= DEBITAMT+(SELECT a1.DEBITAMT - SUM(a2.DEBITAMT) FROM AAG20002 a2 Inner JOIN AAG20001 a1 ON a2.aaSubLedgerHdrID = a1.aaSubLedgerHdrID AND a2.aaSubLedgerDistID = a1.aaSubLedgerDistID AND a2.aaSubLedgerHdrID = @aaSubLedgerHdrID AND a2.aaSubLedgerDistID=@aaSubLedgerDistID GROUP BY a1.DEBITAMT)  FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND   aaSubLedgerDistID = @aaSubLedgerDistID AND aaSubLedgerAssignID = @aaSubLedgerAssignID    ELSE IF (@AssignPercent > 0 AND @AssignPercent < 9900) or @AssignPercent is null  BEGIN  SELECT @aaSubLedgerAssignID = ISNULL(MAX(A22.aaSubLedgerAssignID),0) + 1 FROM AAG20002 A22  WHERE A22.aaSubLedgerHdrID = @aaSubLedgerHdrID AND A22.aaSubLedgerDistID = @aaSubLedgerDistID   SELECT @TotalORCRDTAMT = ISNULL(SUM(ORCRDAMT),0), @TotalCRDTAMT = ISNULL(SUM(CRDTAMNT),0), @TotalPrec = ISNULL(SUM(aaAssignedPercent),0),  @TotalORDBTAMT = ISNULL(SUM(ORDBTAMT),0), @TotalDEBITAMT = ISNULL(SUM(DEBITAMT),0) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID=@aaSubLedgerDistID  EXEC DYNAMICS.dbo.smGetNextNoteIndex @CompanyID, @SqlSessionID, @NOTEINDX output  INSERT INTO AAG20002 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [DEBITAMT], [CRDTAMNT],   [ORDBTAMT], [ORCRDAMT], [aaAssignedPercent], [DistRef], [NOTEINDX], [aaAssignErrors])  VALUES(@aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @DEBITAMT- @TotalDEBITAMT, @CRDTAMNT- @TotalCRDTAMT,   @DEBITAMT - @TotalORDBTAMT, @CRDTAMNT- @TotalORCRDTAMT, 10000 - @TotalPrec, '', @NOTEINDX, 0)   IF @aaBrowseTypeNew <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG20003  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID  AND aaSubLedgerAssignID = @aaSubLedgerAssignID)  BEGIN   EXEC aagSubWorkCodeUpdate   @aaSubLedgerHdrID,   @aaSubLedgerDistID,   @aaSubLedgerAssignID,   @ClassID,   @oRequiredFieldEmpty OUTPUT   END  END  FETCH NEXT FROM Cursor2 INTO @aaSubLedgerDistID, @ACTINDX, @CRDTAMNT, @DEBITAMT, @DISTTYPE  END  CLOSE Cursor2  DEALLOCATE Cursor2 DROP TABLE #Distribution END   
GO
GRANT EXECUTE ON  [dbo].[aagUpdateManualPayDistWithInvAACodes] TO [DYNGRP]
GO

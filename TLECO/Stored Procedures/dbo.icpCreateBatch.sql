SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icpCreateBatch]  @I_iSQLSessionID        int             = NULL,  @I_cProductName         char(30)        = NULL,  @I_cUserID           char(15)        = NULL,  @I_sWindowType smallint = NULL,  @I_cOrigAuditTrailCode char(13) = NULL,  @I_cDestIntercompanyID char(5)  = NULL,  @I_cBatchComment char(30) = NULL,  @O_bLineMessages2 binary(4) = NULL output,  @O_iErrorState          int             = NULL  output as  declare  @TRUE tinyint,  @FALSE tinyint,  @MS_ITEM_15 int,  @POST_ACCT smallint,  @POST_ALLOC_ACCT smallint,  @UNIT_ACCT smallint,  @UNIT_ALLOC_ACCT smallint,  @RECEIVING smallint,  @SINGLE_USE smallint,  @FINANCIAL smallint,  @NORMAL_TRX smallint,  @GL_NORMAL char(15),  @GENERAL_ENTRY char(25),  @cBatchNumber char(15),  @cDBName char(15),  @cTempBatchNumber char(16),  @cCompanyName char(64),  @sCompanyID smallint,  @nTrxTotal numeric(19,5),  @nNoteIndex numeric(19,5),  @cIndexString char(2),  @iIndexNumber int,  @iStatus int,  @iError int,  @iRowCount int,  @tCreateNewBatch tinyint,  @tTransaction tinyint,  @tLoop tinyint,  @sDefaultDate char(12),  @wfStatus tinyint  select   @O_bLineMessages2 = 0x00000000,  @O_iErrorState = 0,  @iStatus  = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if @I_iSQLSessionID is NULL or  @I_cProductName is NULL or  @I_cUserID is NULL or  @I_sWindowType is NULL or  @I_cOrigAuditTrailCode is NULL or  @I_cDestIntercompanyID is NULL or  @I_cBatchComment is NULL  begin  select @O_iErrorState = 20864  break  end    select  @TRUE   = 1,  @FALSE   = 0,  @MS_ITEM_15       = convert(int, 0x00400000),  @POST_ACCT  = 1,  @POST_ALLOC_ACCT = 3,  @UNIT_ACCT  = 2,  @UNIT_ALLOC_ACCT = 4,  @RECEIVING  = 3,  @SINGLE_USE  = 1,  @FINANCIAL  = 2,  @NORMAL_TRX  = 1,  @nNoteIndex  = 0.0  exec @iStatus = DYNAMICS..smGetConstantString  'GL_NORMAL_STR',   @GL_NORMAL output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = DYNAMICS..smGetConstantString  'TRX_SOURCE_GL_GENERAL_ENTRY',   @GENERAL_ENTRY output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select @tCreateNewBatch = @FALSE   exec @iStatus = smGetDefaultDate @sDefaultDate output   select  @nTrxTotal = isnull(sum(TRXDebit),0.0)+isnull(sum(TRXCredit),0.0)  from  #LineItems  where  IntercompanyID = @I_cDestIntercompanyID  and AccountType <> @UNIT_ACCT  and AccountType <> @UNIT_ALLOC_ACCT   select  @cBatchNumber = BatchNumber,  @cCompanyName = CompanyName,  @sCompanyID   = CompanyID  from  #Company  where  #Company.IntercompanyID = @I_cDestIntercompanyID   if @@rowcount <> 1  begin  select @O_iErrorState = 20865  break  end    if @cBatchNumber = ''  select @tCreateNewBatch = @TRUE  else  begin  update  SY00500  set  BCHTOTAL = BCHTOTAL + @nTrxTotal,  NUMOFTRX = NUMOFTRX + 1  where  BACHNUMB = @cBatchNumber  and BCHSOURC = @GL_NORMAL  and BCHCOMNT = @I_cBatchComment  and BCHSTTUS = @RECEIVING   if @@rowcount <> 1  begin  select @tCreateNewBatch = @TRUE  end  end    if @tCreateNewBatch = @TRUE  begin   while @tCreateNewBatch = @TRUE  begin  select  @cTempBatchNumber = min(substring(BACHNUMB,1,13) + convert(char(3), convert(int, case when (isnumeric(substring(BACHNUMB,14,3)) = 1) then substring(BACHNUMB, 14, 3) else '' end) + 1) )  from  SY00500 with (TABLOCKX)  where  BCHSOURC = @GL_NORMAL  AND  ((isnumeric(substring(BACHNUMB,14,2)) = 1) or (substring(BACHNUMB,14,2) = ' ') )  and substring(BACHNUMB,1,13) = @I_cOrigAuditTrailCode  and substring(BACHNUMB,1,13) + convert(char(3), convert(int, case when (isnumeric(substring(BACHNUMB,14,3)) = 1) then substring(BACHNUMB, 14, 3) else '' end) + 1)   not in (select  substring(BACHNUMB,1,13) + convert(char(2), convert(int, case when (isnumeric(substring(BACHNUMB,14,2)) = 1) then substring(BACHNUMB, 14, 2) else '' end))  from  SY00500 with (NOLOCK)  where  ((isnumeric(substring(BACHNUMB,14,2)) = 1) or (substring(BACHNUMB,14,2) = ' ') ))   if @cTempBatchNumber is NULL  begin  select @cBatchNumber = @I_cOrigAuditTrailCode  end  else  begin  if substring(@cTempBatchNumber,14,3) = '100'  begin  select  @iRowCount = count(BACHNUMB)  from  SY00500 with (NOLOCK)   where  BCHSOURC = @GL_NORMAL  and substring(BACHNUMB,1,13) = @I_cOrigAuditTrailCode  if @iRowCount = 100  begin  select   @O_bLineMessages2 = (@O_bLineMessages2 | @MS_ITEM_15),  @O_iErrorState = 20866  break  end  else  begin  select  @cTempBatchNumber = max(substring(BACHNUMB,1,13) + convert(char(3), convert(int, case when (isnumeric(substring(BACHNUMB,14,3)) = 1) then substring(BACHNUMB, 14, 3) else '' end) - 1) )  from  SY00500 with (NOLOCK)  where  BCHSOURC = @GL_NORMAL  AND  ((isnumeric(substring(BACHNUMB,14,2)) = 1) or (substring(BACHNUMB,14,2) = ' ') )  and substring(BACHNUMB,1,13) = @I_cOrigAuditTrailCode  and substring(BACHNUMB,1,13) + convert(char(3), convert(int, case when (isnumeric(substring(BACHNUMB,14,3)) = 1) then substring(BACHNUMB, 14, 3) else '' end) - 1)   not in (select  substring(BACHNUMB,1,13) + convert(char(2), convert(int, case when (isnumeric(substring(BACHNUMB,14,2)) = 1) then substring(BACHNUMB, 14, 2) else '' end))  from  SY00500 with (NOLOCK)  where  ((isnumeric(substring(BACHNUMB,14,2)) = 1) or (substring(BACHNUMB,14,2) = ' ') ))  end    end    select @iIndexNumber = convert(int, substring(@cTempBatchNumber, 14, 2))   if @iIndexNumber = 0  select @cIndexString = ''  else if @iIndexNumber > 9  select @cIndexString = convert(char(2), @iIndexNumber)  else  select @cIndexString = '0' + convert(char(2), @iIndexNumber)   select @cBatchNumber = substring(@cTempBatchNumber,1,13) + @cIndexString   end    if (select top 1 Workflow_Name from WF100002 where Workflow_Type_Name='General Ledger Batch Approval' and ACTIVE=1)<>''   select @wfStatus=1  else  select @wfStatus=9   insert into  SY00500 (   BCHSOURC,  BACHNUMB,  SERIES,  MKDTOPST,  NUMOFTRX,  BACHFREQ,  BCHCOMNT,  BRKDNALL,  USERID,  BCHTOTAL,  MODIFDT,  CREATDDT,  NOTEINDX,  BCHSTTUS,  ORIGIN,  Workflow_Status,  TIME1 )  values(   @GL_NORMAL,  @cBatchNumber,  @FINANCIAL,  @TRUE,   1,  @SINGLE_USE,  @I_cBatchComment,  @TRUE,  @I_cUserID,  @nTrxTotal,  @sDefaultDate,  @sDefaultDate,  @nNoteIndex,  @RECEIVING,  @NORMAL_TRX,  @wfStatus,  convert(char(8),SYSDATETIME(),108)  )   select  @iRowCount = @@rowcount,  @iError = @@error   if @iRowCount = 1  begin  select @tCreateNewBatch = @FALSE  end  else  begin  if exists (  select  1  from  SY00500 with (NOLOCK)   where  BACHNUMB = @cBatchNumber )  begin  continue  end  else  begin  select @O_iErrorState = 20867  break  end    end    end    if @tCreateNewBatch = @TRUE  begin  break  end   select @cDBName = db_name()   exec @iStatus = DYNAMICS..smAddRecordAddedRecord  @I_iSQLSessionID,  'SY00500',  @cBatchNumber,  2,   @I_cProductName,  @cDBName,  0,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if @iStatus <> 0 or @O_iErrorState <> 0  break    update  #Company  set  BatchNumber = @cBatchNumber  where  IntercompanyID = @I_cDestIntercompanyID   if @@rowcount <> 1  begin  select @O_iErrorState = 20869  break  end   end   end   if @O_iErrorState <> 0 or @iStatus <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[icpCreateBatch] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopIvcTaxInsert] @I_vPONUMBER char(17),    @I_vTAXTYPE smallint=0,    @I_vORD int=0,     @I_vTAXDTLID char(15),     @I_vBKOUTTAX smallint=0,    @I_vTAXAMNT numeric (19,5)=0,    @I_vFRTTXAMT numeric (19,5)=0,   @I_vMSCTXAMT numeric(19,5)=0,   @I_vTAXPURCH numeric (19,5)=0,   @I_vTOTPURCH numeric (19,5)=0,   @I_vTRXSORCE char(13) = '',   @I_vVENDORID char(15),    @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @CURRNIDX smallint,  @CURNCYID char(15),  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @MS_ITEM_13 int,  @tPostNumEnabled tinyint,  @CMPANYID smallint,  @POP_Tax_Note_ID_Array_1 numeric (19,5),  @TXDTLBSE tinyint  select @O_oErrorState = 0,  @O_iErrorState = 0,  @iStatus = 0,  @CURNCYID = '',  @CURRNIDX = 0,  @MS_ITEM_13 = power(2,20),  @POP_Tax_Note_ID_Array_1 = 0,  @TXDTLBSE = 0   if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taPopIvcTaxInsertPre  @I_vPONUMBER output,  @I_vTAXTYPE output,  @I_vORD output,  @I_vTAXDTLID output,  @I_vBKOUTTAX output,  @I_vTAXAMNT output,  @I_vFRTTXAMT output,  @I_vMSCTXAMT output,  @I_vTAXPURCH output,  @I_vTOTPURCH output,  @I_vTRXSORCE output,  @I_vVENDORID output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 949    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_oErrorState) end  if ( @I_vPONUMBER is NULL or  @I_vORD is NULL or  @I_vTAXDTLID is NULL or  @I_vBKOUTTAX is NULL or  @I_vTAXAMNT is NULL or  @I_vFRTTXAMT is NULL or  @I_vMSCTXAMT is NULL or  @I_vTAXPURCH is NULL or  @I_vTOTPURCH is NULL or  @I_vVENDORID is null or  @I_vTRXSORCE is NULL) begin  select @O_iErrorState = 950    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vPONUMBER = UPPER(@I_vPONUMBER),  @I_vVENDORID = upper(@I_vVENDORID),  @I_vTAXDTLID = UPPER(@I_vTAXDTLID)  if ( @I_vPONUMBER = '' or  @I_vTAXDTLID = '' or  @I_vVENDORID = '') begin  select @O_iErrorState = 951   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID)) begin  select @O_iErrorState = 959    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if not exists(select 1 from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID ) begin  select @O_iErrorState = 952    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @tPostNumEnabled = abs(sign(isnull(Company_Options, 0) & @MS_ITEM_13)) from DYNAMICS..SY01500 (nolock) where CMPANYID = @CMPANYID  if((@tPostNumEnabled <> 1) and (@I_vTAXAMNT < 0 or @I_vFRTTXAMT < 0 or @I_vMSCTXAMT < 0)) begin  select @O_iErrorState = 956     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTAXDTLID <> '') begin  select @TXDTLBSE = TXDTLBSE from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID end  select @CURNCYID = isnull(CURNCYID,'') from PM00200 (nolock) where VENDORID = @I_vVENDORID if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end  if (@I_vTAXTYPE = 0) begin  if exists(select 1 from POP10160 (nolock) where ORD = @I_vORD and  PONUMBER = @I_vPONUMBER and @I_vTAXDTLID = TAXDTLID)  begin  select @O_iErrorState = 953     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vTAXTYPE = 1)  begin  if exists(select 1 from POP10160 (nolock) where ORD = 2147483646 and  PONUMBER = @I_vPONUMBER and TAXDTLID = @I_vTAXDTLID)  begin  select @O_iErrorState = 957     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if exists(select 1 from POP10160 (nolock) where ORD = 2147483645 and  PONUMBER = @I_vPONUMBER and @I_vTAXDTLID = TAXDTLID)  begin  select @O_iErrorState = 958     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vTAXTYPE = 1) begin  select @I_vORD = 2147483646 end  if (@I_vTAXTYPE = 2) begin  select @I_vORD = 2147483645 end  if (@oErrString <> '')  return (@O_oErrorState)  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 2767   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_oErrorState)  end end  insert POP10160  (  PONUMBER,  ORD,  TAXDTLID,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXPURCH,  ORGTXPCH,  TOTPURCH,  ORTOTPUR,  TXDTOTTX,  OTTAXPON,  TRXSORCE,  POP_Tax_Note_ID_Array_1,   POP_Tax_Note_ID_Array_2,  CURRNIDX,  DELETE1  )  select  @I_vPONUMBER,     @I_vORD,     @I_vTAXDTLID,     case      when @TXDTLBSE = 1  then 1  else 0  end,   @I_vTAXAMNT,     @I_vTAXAMNT,     @I_vFRTTXAMT,     @I_vFRTTXAMT,     @I_vMSCTXAMT,     @I_vMSCTXAMT,     @I_vTAXPURCH,     @I_vTAXPURCH,     @I_vTOTPURCH,     @I_vTOTPURCH,     @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,    @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,   @I_vTRXSORCE,     @POP_Tax_Note_ID_Array_1,   0,      @CURRNIDX,     0     if (@@error <> 0) begin  select @O_iErrorState = 954    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vORD > 0) begin  if (not exists(select 1 from POP10160 (nolock) where  PONUMBER = @I_vPONUMBER and ORD = 0 and TAXDTLID = @I_vTAXDTLID))  begin  insert POP10160  (  PONUMBER,   ORD,   TAXDTLID,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXPURCH,  ORGTXPCH,  TOTPURCH,  ORTOTPUR,  TXDTOTTX,  OTTAXPON,  TRXSORCE,  POP_Tax_Note_ID_Array_1,  POP_Tax_Note_ID_Array_2,  CURRNIDX,  DELETE1  )  select  @I_vPONUMBER,    0,     @I_vTAXDTLID,    case     when @TXDTLBSE = 1  then 1  else 0  end,  @I_vTAXAMNT,    @I_vTAXAMNT,    @I_vFRTTXAMT,    @I_vFRTTXAMT,    @I_vMSCTXAMT,    @I_vMSCTXAMT,    @I_vTAXPURCH,    @I_vTAXPURCH,    @I_vTOTPURCH,    @I_vTOTPURCH,    @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,   @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,   '',     0,     0,     @CURRNIDX,    0     if (@@error <> 0)  begin  select @O_iErrorState = 7805    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  update POP10160 set  TAXAMNT = TAXAMNT + @I_vTAXAMNT,  ORTAXAMT = ORTAXAMT + @I_vTAXAMNT,  FRTTXAMT = FRTTXAMT + @I_vFRTTXAMT,  ORFRTTAX = ORFRTTAX + @I_vFRTTXAMT,  MSCTXAMT = MSCTXAMT + @I_vMSCTXAMT,  ORMSCTAX = ORMSCTAX + @I_vMSCTXAMT,  TAXPURCH = TAXPURCH + @I_vTAXPURCH,  ORGTXPCH = ORGTXPCH + @I_vTAXPURCH,  TOTPURCH = TOTPURCH + @I_vTAXPURCH,  ORTOTPUR = TOTPURCH + @I_vTOTPURCH,  TXDTOTTX = TXDTOTTX + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,  OTTAXPON = OTTAXPON + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT  where PONUMBER = @I_vPONUMBER and ORD = 0 and  TAXDTLID = @I_vTAXDTLID   if (@@error <> 0)  begin  select @O_iErrorState = 7806    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if @O_iErrorState <> 0  return (@O_oErrorState)  exec @iStatus = taPopIvcTaxInsertPost  @I_vPONUMBER,  @I_vTAXTYPE,  @I_vORD,  @I_vTAXDTLID,  @I_vBKOUTTAX,  @I_vTAXAMNT,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @I_vTAXPURCH,  @I_vTOTPURCH,  @I_vTRXSORCE,  @I_vVENDORID,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 955    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_oErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 2768   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_oErrorState)  end end  return (@O_oErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopIvcTaxInsert] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[svcMoveEVGRContractLine] (  @CONSTS                 smallint,  @CONTNBR                char(11),  @LNSEQNBR               numeric(19,5),  @MOVEDATE datetime,  @DEDUCTIONAMOUNT numeric(19,5),  @NewTotal numeric(19,5) output,  @OrigNewTotal numeric(19,5) output,  @ORIGOldTotal numeric(19,5) output )  AS  declare @Cancel tinyint, @CoverageStart datetime, @CoverageEnd datetime, @BilledCoverageEnd datetime, @BilledCoverageStart datetime, @LINECOUNTER numeric(19,2), @DR numeric(19,5), @OrigDR numeric(19,5),  @TotalBilled numeric(19,2),@OrigTotalBilled numeric(19,2), @TotalCreditAmount numeric(19,2), @OrigTotalCreditAmount numeric(19,2), @LIABILITYAMOUNT    numeric(19,2),@ORIGLIABILITYAMOUNT    numeric(19,2), @OrigDiffAmount numeric(19,2), @DiffAmount numeric(19,2), @Sequence int, @CoverageStartDate datetime, @LastInvoiceCoverageEndDate datetime, @TransactionDate datetime,@ErrorCondition integer,@UserID char(30), @NEXTBILLDATE datetime, @Total numeric(19,2),@OrigTotal numeric(19,2), @BILSTAT smallint declare @PriceType integer declare @SourceDocument varchar(51) declare @I_sRateCalcMethod  smallint ,   @I_sViewMode   smallint,   @I_nExchangeRate  numeric(15,7),  @I_nDenomExchangeRate numeric(15,7),  @I_sMCTrxState   smallint,   @I_sDecimalPlaces  smallint,  @O_iErrorState          int declare @LineStatus char(1) declare @CreateCredit tinyint  declare @MinDate datetime,@MaxDate datetime declare @JustCancel tinyint   exec smGetMinDate @MinDate output  select @CreateCredit = 0, @JustCancel = 0 select @MaxDate = DATEADD(yy, 1000, @MinDate),  @UserID = SUSER_SNAME() if exists(select * from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0)  select @CoverageEnd = max(SVC_Coverage_End_Date), @CoverageStart = max(SVC_Coverage_Start_Date), @LineStatus = 'M' , @BILSTAT = 2  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0 else  select @CoverageEnd = max(SVC_Coverage_End_Date), @CoverageStart = max(SVC_Coverage_Start_Date), @CreateCredit = 1, @LineStatus = 'M' , @BILSTAT = 2  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  if (select STRTDATE from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR) > @MOVEDATE  select @JustCancel = 1   if @CoverageEnd > @MOVEDATE   Begin  if (@CoverageStart > @MOVEDATE or @CreateCredit = 1) and @JustCancel = 0  Begin  delete from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  select @BilledCoverageEnd =  max(SVC_Coverage_End_Date), @BilledCoverageStart = min(SVC_Coverage_Start_Date),  @TotalBilled = sum(PSTDAMNT), @OrigTotalBilled = sum(ORIGPSTDAMNT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  if @BilledCoverageEnd = @MOVEDATE   begin  select @NEXTBILLDATE = @MaxDate, @LineStatus = 'M', @BILSTAT = 2, @TotalCreditAmount = 0, @OrigTotalCreditAmount = 0  end   else  begin  select @LINECOUNTER = DATEDIFF(dd,@MOVEDATE,@BilledCoverageEnd)  select @DR = @TotalBilled / datediff(dd, @BilledCoverageStart, @BilledCoverageEnd),  @OrigDR = @OrigTotalBilled / datediff(dd, @BilledCoverageStart, @BilledCoverageEnd)  select @OrigTotalCreditAmount = @OrigDR * @LINECOUNTER, @TotalCreditAmount = @DR * @LINECOUNTER  select @Sequence = isnull(max(SVC_Invoice_SEQ_Number),0) + 1 from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @CoverageStartDate = DATEADD(day,1,@MOVEDATE)   if @TotalCreditAmount > 0   insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @Sequence,  IsNull(@MOVEDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  0 ,  @CoverageStartDate,  IsNull(@BilledCoverageEnd,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),   0,  @MinDate,  0,  @TotalCreditAmount,  @DR,  0,  0,   0,  @OrigTotalCreditAmount,  0,0,'',0)  select @NEXTBILLDATE = min(INVODATE) from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  end   select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   if (select BILCYC from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR) > 1 or  (select Liabiltiy_Reduction from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR) = 1  Begin  exec SVC_RET_Cancel_Revenue_Recognition_Lines @CONSTS,@CONTNBR,@LNSEQNBR,@MOVEDATE,@UserID,@ErrorCondition OUTPUT  if @ErrorCondition = 1113  begin  select @LIABILITYAMOUNT = sum(Net_Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigNetTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  if @Total <> @LIABILITYAMOUNT   Begin  select @OrigDiffAmount = @ORIGLIABILITYAMOUNT - @OrigTotal, @DiffAmount = @LIABILITYAMOUNT - @Total  if @DiffAmount > 0  update SVC00603 set SVC_Invoice_Credit_Amoun = SVC_Invoice_Credit_Amoun - @DiffAmount, OrigInvCreditAmt = OrigInvCreditAmt - @OrigDiffAmount where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @Sequence   select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  End  end  End   update SVC00601 with (rowlock) set ENDDATE = @MOVEDATE, BILEND = @MOVEDATE, Contract_Line_Status = @LineStatus, BILSTAT = @BILSTAT,  Amount_To_Invoice = (-1) * @TotalCreditAmount, Orig_Amount_To_Invoice = (-1) * @OrigTotalCreditAmount,   ORIGTOTAL = @OrigTotal, TOTAL = @Total, NXTBLDTE = @NEXTBILLDATE  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  End  else  Begin  delete from SVC00603 with (rowlock) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  select @LastInvoiceCoverageEndDate = isnull(max(SVC_Coverage_End_Date),@MinDate) from SVC00603  with (rowlock) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  select @CoverageStartDate = FRXSTRT from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  delete from SVC00604 with (rowlock) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and Status = 0  and SVC_Coverage_Start_Date >= @LastInvoiceCoverageEndDate   update SVC00601 with (rowlock) set ENDDATE = @MOVEDATE, BILEND = @MOVEDATE, Contract_Line_Status = 'M', BILSTAT = 2  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Line @CONSTS, @CONTNBR, @LNSEQNBR, 2  exec SVC_EVGR_Check_PendingCancel @CONSTS, @CONTNBR, @LNSEQNBR, '', @BILSTAT output  End  End  if @CoverageEnd <= @MOVEDATE   Begin  update SVC00601 with (rowlock) set ENDDATE = @MOVEDATE, BILEND = @MOVEDATE, Contract_Line_Status = 'M'  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  End select @OrigNewTotal = ORIGMONTHPRICE , @NewTotal = SVC_Monthly_Price from SVC00601  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  return    
GO
GRANT EXECUTE ON  [dbo].[svcMoveEVGRContractLine] TO [DYNGRP]
GO

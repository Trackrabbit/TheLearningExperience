SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[glpPostToHistoryYear]  @I_iSQLSessionID                int             = NULL,  @I_sTransactionType             smallint        = NULL,   @I_iJournalEntry                int             = NULL,  @I_cBatchSource          char(15)        = NULL,          @I_cBatchNumber         	char(15)        = NULL, /* Journal Id for quick entry */  @I_cUserID                      char(15)        = NULL,   @I_sSeries                      smallint        = NULL,   @I_iAccountIndex                int             = NULL,  @I_sAccountType          smallint        = NULL,  @I_sPostingType          smallint        = NULL,  @I_mDebit                       numeric(19,5)   = NULL,  @I_mCredit                      numeric(19,5)   = NULL,  @I_cAuditTrailCode              char(13)        = NULL,  @I_dTransactionDate             datetime        = NULL,  @I_sHistoryYear          smallint        = NULL,  @I_sClosingYear          smallint        = NULL,  @I_sPeriodID                    smallint        = NULL,  @I_nLedgerID int  = NULL,  @I_cDescription          char(30)        = NULL,  @I_tPrintDistributions   tinyint  = NULL,   @I_tReversing                   tinyint  = NULL,   @I_tPrinting                    tinyint  = NULL,          @I_tPosting                     tinyint		= NULL, /* true - Return on error  */  @I_tRealTimeQuick               tinyint  = NULL,  @I_sQuickOffset          smallint        = NULL,  @I_tOffsetAccount               tinyint  = NULL,         @I_tAllowCloseHistory   	tinyint		= NULL, /* true - create closing entry */  @I_mSequenceLine                numeric(19,5)   = NULL,  @I_mRecurringTRXSequence        numeric(19,5)   = NULL,  @I_mExchangeRate                numeric(15,7)   = NULL,  @I_cFuncCurrencyID              char(15)        = NULL,  @I_sFuncCurrencyIndex    smallint        = NULL,  @I_sFuncDecimalPlaces    smallint        = NULL,  @I_tMCRegistered                tinyint  = NULL,  @I_sMCTransaction               smallint        = NULL,  @I_mOrigDebit                   numeric(19,5)   = NULL,  @I_mOrigCredit                  numeric(19,5)   = NULL,  @I_cOrigCurrencyID              char(15)        = NULL,  @I_sOrigCurrencyIndex    smallint        = NULL,  @I_sOrigDecimalPlaces    smallint        = NULL,  @I_cIntercompanyID char(5)  = NULL,  @I_tICTransaction tinyint  = NULL,  @I_cOriginatingDocNumber char(21) = NULL,  @I_cOriginatingControlNumber char(21) = NULL,  @I_cOriginatingMasterID char(31) = NULL,  @I_cOriginatingMasterName char(65) = NULL,  @I_sOriginatingTrxType smallint = NULL,  @I_cOriginatingTRXDesc char(30) = NULL,  @I_sOrigDTASeries smallint = NULL,  @I_iOrigSequenceNumber int  = NULL,  @I_sDTAGLStatus smallint = NULL,  @I_nDTAIndex numeric(19,5) = NULL,  @I_nDenomExchangeRate numeric(15,7) = NULL,  @I_sMCTrxState smallint = NULL,  @I_dDocumentDate datetime = NULL,  @I_iPostingNumber int  = NULL,  @I_iPeriodPostingNumber int  = NULL,  @I_iPostingNumberHist int  = NULL,  @I_iPeriodPostingNumberHist int  = NULL,  @I_cCorrespondingUnit char(5)  = NULL,  @IO_bLineMessages               binary(4)       = NULL  output,  @IO_bLineMessages2              binary(4)       = NULL  output,  @IO_bRetainEarnMessages binary(4)       = NULL  output,  @IO_bRetainEarnMessages2 binary(4)       = NULL  output,  @O_iErrorState                  int             = NULL  output as /* ***************************************************************************** * (c) 1998 Great Plains Software, Inc. ***************************************************************************** * * PROCEDURE NAME: glpPostToHistoryYear * * SANSCRIPT NAME: Post_To_History_Year * * PARAMETERS: * *       @I_iSQLSessionID                Unique SQL session identifier *       @I_sTransactionType             Constant [NORMAL_TRX|BUSINESS_FORM] *       @I_iJournalEntry                Identifies the transaction *       @I_cBatchSource                 Identifies the window in which a batch of *                                       transactions was entered *       @I_cBatchNumber                 Unique name or number that identifies a group *                                       of related transactions *       @I_cUserID                      Identifies the user posting *       @I_sSeries                      Originating module *       @I_iAccountIndex                Account Index or Offset Account Index *       @I_sAccountType                 Constant[POST_ACCT|UNIT_ACCT] *       @I_sPostingType                 Constant[BALANCE_SHEET|PROFIT_AND_LOSS] *       @I_mDebit                       Dollar debit amount *       @I_mCredit                      Dollar credit amount *       @I_cAuditTrailCode              Audit trail code (aka TRX Source) *       @I_dTransactionDate             Transaction date *       @I_sHistoryYear                 Fiscal year the history transaction falls in *       @I_sClosingYear                 Fiscal year the closing entry falls in *       @I_sPeriodID                    Period the history transaction falls in *	@I_nLedgerID			Ledger ID for the transaction *       @I_cDescription                 Transaction line item reference *       @I_tPrintDistributions          Boolean [TRUE|FALSE] *       @I_tReversing                   Boolean [TRUE|FALSE]     *       @I_tPrinting                    Boolean [TRUE|FALSE] *       @I_tPosting                     Boolean [TRUE|FALSE] *       @I_tRealTimeQuick               Boolean [TRUE|FALSE] *       @I_sQuickOffset                 Constant [QUICK_OFFSET|REGULAR_OFFSET] *       @I_tOffsetAccount               Boolean [TRUE|FALSE] *       @I_tAllowCloseHistory           Boolean [TRUE|FALSE] *       @I_mSequenceLine                Sequence line for current line item *       @I_mRecurringTRXSequence        Number of times the batch has been posted *       @I_mExchangeRate                Conversion ratio *       @I_cFuncCurrencyID              Identifies the functional currency *       @I_sFuncCurrencyIndex           Functional currency format *       @I_sFuncDecimalPlaces           Functional currency's number of decimal places *       @I_tMCRegistered                Boolean [TRUE|FALSE] *       @I_sMCTransaction               Constant [GL_TRANSACTION|MC_TRANSACTION|MC_CLEARING_TRANSACTION] *       @I_mOrigDebit                   Originating currency debit amount *       @I_mOrigCredit                  Originating currency credit amount *       @I_cOrigCurrencyID              Identifies the origintinat currency *       @I_sOrigCurrencyIndex           Originating currency format *       @I_sOrigDecimalPlaces           Originating currency's number of decimal places *	@I_cIntercompanyID		Company assigned to the distribution *	@I_tICTransaction		Boolean [TRUE|FALSE] *	@I_cOriginatingDocNumber	Document Number from the originating series *	@I_cOriginatingControlNumber	Control Number from the originating series *	@I_cOriginatingMasterID		Master ID from the originating series *	@I_cOriginatingMasterName	Master Name from the originating series *	@I_sOriginatingTrxType		Transaction Type from the originating series *	@I_sOrigDTASeries		Original module that DTA was created. *	@I_iOrigSequenceNumber		Sequence Number from original module. *	@I_sDTAGLStatus			Hold Status info on DTA records. *	@I_nDTAIndex			DTA Index. *	@I_nDenomExchangeRate		denomination Exchange Rate *	@I_sMCTrxState			MC transaction State *	@I_dDocumentDate		Document date *	@I_iPostingNumber		Year Posting Number *	@I_iPeriodPostingNumber		Period Posting Number *	@I_iPostingNumberHist		History Year Posting Numbers *	@I_iPeriodPostingNumberHist	History Period Posting Numbers *	@I_cCorrespondingUnit		Corresponding Company ID	 *       @IO_bLineMessages               Line item error messages *       @IO_bLineMessages2              Line item error messages *       @IO_bRetainEarnMessages         Line item error messages *       @IO_bRetainEarnMessages2        Line item error messages *       @O_iErrorState                  Application error state [0|Error Code] * * DESCRIPTION: *       This process posts a history transaction to the history year.  It also *       calls the process that closes the history transaction to the open year. * * TABLES: *    SQL Table                                  Access Method             *    ---------------------                      -------------            *       none * * DATABASE: *       Company * * RETURN VALUE: *       0 = Successful *       Non-0 = Unsuccessful * * REVISION HISTORY: *       Date            Who             Comments *       ------------   -------- 	------------------------------------- *       01/21/95        CBP     	Procedure Creation SP0184 *       07/24/95        CBP     	SQL+/MC Merge *       26Oct95         dswan  		GL_Account_SUM_MSTR data model PR#671 *	23Jan96		dswan		PR#1125 *	23Jan96		dswan		PR#1127 *	14Mar96		dswan		PR#1426 *	16Mar96		dswan		PR#1430 *	26Mar97		cpaquin		PR2488 *	16May97		cpaquin		Added intercompany parameters *	22Mar98		JDinham		4.1 Synch PR #440, 480, 488. *	26Mar98		RSchulz		4.1 Sync PR 430 *	27Sep98		Tirsfeld	Debit & Credit changes for Euro Release *   	05Oct98		jellings	change XRate Data type for Euro Project *	05Oct98		jellings	updated for Royal Troon data model changes *	02Jul99		jwyganow	Millenium INTL16 Posting Numbers *	17Jan00		jellings	IC ER CorrespondingUnit  *	17Jan01		BRONEY		PR23564, original master ID and name change lengths *	25Feb09		WEDWARDS	IFRS feature added Reporting Ledger ID *	27Jul10		DHARSTAD	Bug 54797 passed Period ID to glpUpdateHistoryTransaction *	22Sep14		v-gukul		13919- Added @I_cCorrespondingUnit parameter to glpUpdateHistoryTransaction SP ***************************************************************************** */ declare  @TRUE                           tinyint,  @FALSE                          tinyint,  @POST_ACCT smallint,  @UNIT_ACCT                      smallint,  @UNIT_ALLOC_ACCT smallint,  @MC_TRANSACTION                 smallint,  @tTransaction                   tinyint,  @iError                         int,  @iStatus                        int,  @tLoop                          tinyint,  @tKeepingTransactionHistory     tinyint,  @tKeepingAccountHistory         tinyint,  @tKeepingMCSummaryHistory       tinyint,  @tDivisionalClosing             tinyint,         @iSETPRetainedEarningsIndex     int,            /* Index from GL40000 */  @sDivisionalAccountSegment      smallint,  @tBeforeSegmentLength           tinyint,  @tDivisionalSegmentLength       tinyint,  @tAfterSegmentLength            tinyint,  @dClosingDate                   datetime /* * Initialize output parameters. */ select          @O_iErrorState  = 0,         @iStatus = 0 /* * Start a transaction if the trancount is 0. */ if @@trancount = 0 begin         select @tTransaction = 1         begin transaction end /* if trancount */ /* * This loop allows us to check the transaction state only once, * and reduces the amount of redundant code within the procedure. */ while (@tLoop is NULL) begin         /*         * Set loop control for exit.         */         select @tLoop = 1         /*         * Verify parameters.         */  if      @I_iSQLSessionID                is NULL or  @I_sTransactionType             is NULL or  @I_iJournalEntry                is NULL or  @I_cBatchSource          is NULL or  @I_cBatchNumber          is NULL or  @I_cUserID                      is NULL or  @I_sSeries                      is NULL or  @I_iAccountIndex                is NULL or  @I_sAccountType          is NULL or  @I_sPostingType          is NULL or  @I_mDebit                       is NULL or  @I_mCredit                      is NULL or  @I_cAuditTrailCode              is NULL or  @I_dTransactionDate             is NULL or  @I_sHistoryYear          is NULL or  @I_sClosingYear          is NULL or  @I_sPeriodID                    is NULL or  @I_nLedgerID is NULL or  @I_cDescription          is NULL or  @I_tPrintDistributions   is NULL or  @I_tReversing                   is NULL or  @I_tPrinting                    is NULL or  @I_tPosting                     is NULL or  @I_tRealTimeQuick               is NULL or  @I_sQuickOffset          is NULL or  @I_tOffsetAccount               is NULL or  @I_tAllowCloseHistory    is NULL or  @I_mSequenceLine                is NULL or  @I_mRecurringTRXSequence        is NULL or  @I_mExchangeRate                is NULL or  @I_cFuncCurrencyID              is NULL or  @I_sFuncCurrencyIndex    is NULL or  @I_sFuncDecimalPlaces    is NULL or  @I_tMCRegistered                is NULL or  @I_sMCTransaction               is NULL or  @I_mOrigDebit                   is NULL or  @I_mOrigCredit                  is NULL or  @I_cOrigCurrencyID              is NULL or  @I_sOrigCurrencyIndex    is NULL or  @I_sOrigDecimalPlaces    is NULL or  @I_cIntercompanyID is NULL or  @I_tICTransaction is NULL or  @I_cOriginatingDocNumber is NULL or  @I_cOriginatingControlNumber is NULL or  @I_cOriginatingMasterID is NULL or  @I_cOriginatingMasterName is NULL or  @I_sOriginatingTrxType is NULL or  @I_cOriginatingTRXDesc is NULL or  @I_sOrigDTASeries is NULL or  @I_iOrigSequenceNumber is NULL or  @I_sDTAGLStatus is NULL or  @I_nDTAIndex is NULL or  @I_nDenomExchangeRate is NULL or  @I_sMCTrxState is NULL or  @I_dDocumentDate is NULL or  @I_iPostingNumber is NULL or  @I_iPeriodPostingNumber is NULL or  @I_iPostingNumberHist is NULL or  @I_iPeriodPostingNumberHist is NULL or  @IO_bLineMessages               is NULL or  @IO_bLineMessages2              is NULL or  @IO_bRetainEarnMessages         is NULL or  @IO_bRetainEarnMessages2        is NULL or  @I_cCorrespondingUnit is NULL  begin                 /*                 * Error occurred a NULL parameter.                  */                 select @O_iErrorState = 20429                 break         end /* end parameter check */         /*           * Set constants used in this procedure.          */  select  @TRUE = 1,  @FALSE = 0,  @POST_ACCT = 1,  @UNIT_ACCT = 2,  @UNIT_ALLOC_ACCT = 4,  @MC_TRANSACTION = 1         /*         * Get history posting setup information.         */         exec @iStatus = glpGetHistoryPostingSetup                 @I_iSQLSessionID,                 @I_tMCRegistered,                 @tKeepingTransactionHistory     output,                 @tKeepingAccountHistory         output,                 @tKeepingMCSummaryHistory       output,                 @tDivisionalClosing             output,                 @iSETPRetainedEarningsIndex     output,                 @sDivisionalAccountSegment      output,                 @tBeforeSegmentLength           output,                 @tDivisionalSegmentLength       output,                 @tAfterSegmentLength            output,                 @dClosingDate                   output,                 @O_iErrorState                  output         /*         * Check the system status         */         select @iError = @@error         if @iStatus = 0 and @iError <> 0                 select @iStatus = @iError         /*         * Check system and application status.         */         if @iStatus <> 0 or @O_iErrorState <> 0                 break         if @I_tPosting = @TRUE         begin                 if @tKeepingTransactionHistory = @TRUE                 begin                         /*                         * Update the GL30000 for the current line item.                         */                         exec @iStatus = glpUpdateHistoryTransaction                                 @I_sTransactionType,                                 @I_iJournalEntry,                                 @I_cUserID,                                 @I_iAccountIndex,                                 @I_mDebit,                                 @I_mCredit,                                 @I_cAuditTrailCode,                                 @I_cDescription,                                 @I_sQuickOffset,                                 @I_sHistoryYear, 				@I_mRecurringTRXSequence, 				@I_mExchangeRate,                                 @I_cFuncCurrencyID,                                 @I_tMCRegistered,                                  @I_mOrigDebit,                                 @I_mOrigCredit,                                 @I_sOrigCurrencyIndex, 				@I_cOriginatingDocNumber, 				@I_cOriginatingControlNumber, 				@I_cOriginatingMasterID, 				@I_cOriginatingMasterName, 				@I_sOriginatingTrxType, 				@I_cOriginatingTRXDesc, 				@I_sOrigDTASeries, 				@I_iOrigSequenceNumber, 				@I_mSequenceLine, 				@I_sDTAGLStatus, 				@I_nDTAIndex, 				@I_nDenomExchangeRate, 				@I_sMCTrxState, 				@I_dDocumentDate, 				@I_iPostingNumberHist, 				@I_iPeriodPostingNumberHist, 				@I_sPeriodID, 				@I_cCorrespondingUnit,                                 @O_iErrorState          output                         /*                         * Check the system status                         */                         select @iError = @@error                         if @iStatus = 0 and @iError <> 0                                 select @iStatus = @iError                         /*                         * Check system and application status.                         */                         if @iStatus <> 0 or @O_iErrorState <> 0                                 break                 end /* if keeping transaction history */                 if @tKeepingAccountHistory = @TRUE                 begin                         /*                         * Update the GL10111 for the current account.                         */                         exec @iStatus = glpUpdateHistorySummary                                 @I_iSQLSessionID,                                 @I_iAccountIndex,                                 @I_sAccountType,                                 @I_mDebit,                                 @I_mCredit,                                 @I_sPeriodID,                                 @I_nLedgerID,                                 @I_sHistoryYear,                                 @O_iErrorState          output                         /*                         * Check the system status                         */                         select @iError = @@error                         if @iStatus = 0 and @iError <> 0                                 select @iStatus = @iError                 end /* if keeping account history */                 if @tKeepingMCSummaryHistory = @TRUE and                         @I_sMCTransaction = @MC_TRANSACTION and                          @I_tMCRegistered  = @TRUE and                         @I_sAccountType = @POST_ACCT                 begin                         /*                         * Update the MC00201 for the current account number.                         */                         exec @iStatus = glpmcUpdateHistorySummary                                 @I_iAccountIndex,                                 @I_mDebit,                                 @I_mCredit,                                 @I_mOrigDebit,                                 @I_mOrigCredit,                                 @I_cOrigCurrencyID,                                 @I_sOrigCurrencyIndex,                                 @I_sPeriodID,                                 @I_nLedgerID,                                 @I_iSQLSessionID,                                 @I_sHistoryYear,                                 @O_iErrorState  output                         /*                         * Check the system status                         */                         select @iError = @@error                         if @iStatus = 0 and @iError <> 0                                 select @iStatus = @iError                 end         end /* if posting */                     if @I_tAllowCloseHistory = @TRUE         begin                 /*                 * Close the history transaction to the closing year.                 */                 exec @iStatus = glpCloseHistory                         @I_iSQLSessionID,                         @I_sTransactionType,                                     @I_iJournalEntry,                         @I_cBatchSource,                                         @I_cBatchNumber,                         @I_cUserID,                                      @I_sSeries,                                      @I_iAccountIndex,                         @I_sAccountType,                         @I_sPostingType,                         @I_mDebit,                         @I_mCredit,                         @I_cAuditTrailCode,                         @I_sClosingYear,                         @I_cDescription,                         @I_tPrintDistributions,                         @I_tReversing,                         @I_tPrinting,                         @I_tPosting,			/* true - Return on error */                         @I_tOffsetAccount,                         @I_tRealTimeQuick,                         @I_sQuickOffset,                         @I_mSequenceLine,                         @I_mRecurringTRXSequence, 			@I_mExchangeRate,                         '',				/* DivisionalSegment, not used here */                         @tDivisionalClosing,                         @iSETPRetainedEarningsIndex,                         @sDivisionalAccountSegment,                         @tBeforeSegmentLength,                         @tDivisionalSegmentLength,                         @tAfterSegmentLength,                         @dClosingDate,                         @I_cFuncCurrencyID,                         @I_sFuncCurrencyIndex,                         @I_sFuncDecimalPlaces,                         @I_tMCRegistered,                         @I_sMCTransaction,                         @I_mOrigDebit,                         @I_mOrigCredit,                         @I_cOrigCurrencyID,                         @I_sOrigCurrencyIndex,                         @I_sOrigDecimalPlaces, 			@I_cIntercompanyID, 			@I_tICTransaction, 			@I_cOriginatingDocNumber, 			@I_cOriginatingControlNumber, 			@I_cOriginatingMasterID, 			@I_cOriginatingMasterName, 			@I_sOriginatingTrxType, 			@I_cOriginatingTRXDesc, 			@I_sOrigDTASeries, 			@I_iOrigSequenceNumber, 			@I_sDTAGLStatus, 			@I_nDTAIndex, 			@I_nDenomExchangeRate, 			@I_sMCTrxState, 			@I_dDocumentDate, 			@I_iPostingNumber, 			@I_iPeriodPostingNumber, 			@I_iPostingNumberHist, 			@I_iPeriodPostingNumberHist, 			@I_cCorrespondingUnit, 			@I_nLedgerID,                         @IO_bLineMessages       	output,                         @IO_bLineMessages2      	output,                         @IO_bRetainEarnMessages		output,                         @IO_bRetainEarnMessages2	output,                         @O_iErrorState          	output 	                 /*                 * Check the system status                 */                 select @iError = @@error                 if @iStatus = 0 and @iError <> 0                         select @iStatus = @iError                 /*                 * Check system and application status                 */                 if @iStatus <> 0 or @O_iErrorState <> 0                         break  end  end  /* IB - 20/06/06, Added Intercompany Log table */ 	exec dbo.ncWriteInterLog 'glpPostToHistoryYear: ncCreateHistoryInterfaceRec called' /* NCL IC */ 	exec @iStatus = ncCreateHistoryInterfaceRec 		@I_iSQLSessionID, 		@I_sTransactionType, 		@I_iJournalEntry, 		@I_cBatchSource, 		@I_cBatchNumber,   		@I_cUserID, 		@I_sSeries, 		@I_iAccountIndex, 		@I_sAccountType, 		@I_sPostingType, 		0,/*@I_sRateCalculationMethod*/ 		@I_mDebit, 		@I_mCredit, 		@I_cAuditTrailCode, 		@I_dTransactionDate, 		@I_sHistoryYear, 		@I_sClosingYear, 		@I_sPeriodID, 		@I_cDescription, 		@I_tPrintDistributions, 		@I_tReversing, 		@I_tPrinting, 		@I_tPosting,   		@I_tRealTimeQuick, 		@I_sQuickOffset, 		@I_tOffsetAccount, 		@I_tAllowCloseHistory,    		@I_mSequenceLine,   		@I_mRecurringTRXSequence, 		@I_mExchangeRate, 		'', /*exchange table id*/ 		@I_cFuncCurrencyID, 		@I_sFuncCurrencyIndex,   		@I_sFuncDecimalPlaces,   		@I_tMCRegistered,   		@I_sMCTransaction, 		@I_mOrigDebit,   		@I_mOrigCredit, 		@I_cOrigCurrencyID, 		'',  /*Rate type id*/ 		@I_sOrigCurrencyIndex, 		@I_sOrigDecimalPlaces, 		@I_cIntercompanyID,  		@I_tICTransaction,  		@I_cOriginatingDocNumber, 		@I_cOriginatingControlNumber,   		@I_cOriginatingMasterID,   		@I_cOriginatingMasterName, 		@I_sOriginatingTrxType,   		@I_cOriginatingTRXDesc, 		@I_sOrigDTASeries, 		@I_iOrigSequenceNumber,  		@I_sDTAGLStatus, 		@I_nDTAIndex,  		@I_nDenomExchangeRate,   		@I_sMCTrxState, 		@I_dDocumentDate, 		@I_iPostingNumber, 		@I_iPeriodPostingNumber, 		@I_iPostingNumberHist, 		@I_iPeriodPostingNumberHist, 		@I_cCorrespondingUnit, 		@IO_bLineMessages, 		@IO_bLineMessages2,   		@IO_bRetainEarnMessages,  		@IO_bRetainEarnMessages2,   		@O_iErrorState; /* NCL IC */ /* * Check for system or application error. */ if @iStatus <> 0 or @O_iErrorState <> 0 begin         /*         * Rollback the transaction if this procedure started it.         */         if @tTransaction = 1                 rollback transaction end else if @tTransaction = 1         /*         *  Commit the transaction if this procedure started it.         */         commit transaction return (@iStatus)  
GO
GRANT EXECUTE ON  [dbo].[glpPostToHistoryYear] TO [DYNGRP]
GO

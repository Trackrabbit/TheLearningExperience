SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[ncGetUniqueBatch] 	@I_iSeries smallint = NULL, @I_sBatchSource char(15) = NULL, @IO_sBatchNumber char(15) = NULL output,  	@I_sBatchComment char(61) = NULL, @I_sCheckbookId char(15) = NULL, @I_iCompanyNum smallint = NULL,  	@I_sUserId char(15) = NULL, @O_iError int = NULL output /* 0=OK, 1=use existing, 2=failed */ as declare @iOrigin smallint, @sCompanyName char(64), @iBatchFound smallint, @dtMinDate datetime, @dtCurrentDate datetime, 	@nNoteIndex numeric(19,5), @iErrState int, @sStartBatch char(15), @iBatchStatus smallint, @iMarkedToPost smallint,  	@iPosting smallint declare @BATCH_AVAILABLE smallint, @BATCH_POSTING smallint, @BATCH_DELETING smallint, @BATCH_RECEIVING smallint,  	@BATCH_DONE_POSTING smallint, @BATCH_PRINTING smallint, @BATCH_UPDATING smallint, @BATCH_POSTING_INCOMPLETE smallint,  	@BATCH_POSTED_WITH_ERROR smallint select @BATCH_AVAILABLE = 0, @BATCH_POSTING = 1, @BATCH_DELETING = 2, @BATCH_RECEIVING = 3, @BATCH_DONE_POSTING = 4,  	@BATCH_PRINTING = 5, @BATCH_UPDATING = 6, @BATCH_POSTING_INCOMPLETE = 7, @BATCH_POSTED_WITH_ERROR = 11 select @sCompanyName = isnull(CMPNYNAM,'') from DYNAMICS.dbo.SY01500 where CMPANYID=@I_iCompanyNum exec smGetMinDate @dtMinDate output exec smGetDefaultDate @dtCurrentDate output exec DYNAMICS.dbo.smGetNextNoteIndex @I_iCompanyNum, @@SPID, @nNoteIndex output, @iErrState output select @iBatchFound = 0, @sStartBatch = @IO_sBatchNumber, @O_iError = 0 while( @iBatchFound = 0 ) begin   select @iBatchStatus = BCHHDR.BCHSTTUS, @iMarkedToPost = BCHHDR.MKDTOPST, @iPosting = isnull(BCHACTIV.POSTING,0)   from SY00500 BCHHDR left outer join DYNAMICS.dbo.SY00800 BCHACTIV     on BCHACTIV.BCHSOURC = BCHHDR.BCHSOURC and BCHACTIV.BACHNUMB = BCHHDR.BACHNUMB and BCHACTIV.CMPNYNAM = @sCompanyName   where BCHHDR.BCHSOURC = @I_sBatchSource and BCHHDR.BACHNUMB = @IO_sBatchNumber   if(@@rowcount > 0)   begin 	set @iBatchStatus = @BATCH_POSTING /*vilasw@nolancomputers.com - to genrate unique batch*/     /* existing batch, check status */     select @iBatchFound = 1  /* assume ok to use existing batch */     if @iBatchStatus = @BATCH_RECEIVING       select @iBatchFound = 1	/* nothing to do, batch ok */     else if (@iBatchStatus in (@BATCH_POSTING, @BATCH_PRINTING, @BATCH_UPDATING)) or @iPosting > 0       select @iBatchFound = 0     else if @iBatchStatus between @BATCH_POSTING_INCOMPLETE and @BATCH_POSTED_WITH_ERROR       select @iBatchFound = 0     else if @iMarkedToPost > 0       select @iBatchFound = 0   end   else     select @iBatchFound = 2  /* can create this batch number because not already in use */   if @iBatchFound = 0   begin     /* need to increment number and try again; set to -1 if no more numbers? */     exec ivNumber_Inc_Dec 1, @IO_sBatchNumber output, @iErrState output     if @IO_sBatchNumber < @sStartBatch       select @iBatchFound = -1 /* bail out */   end end if @iBatchFound < 0   select @O_iError = 2 if @iBatchFound = 2 begin   /* need to create batch record */   /* Only supported for GL batches, so Origin=1 */   insert into SY00500 (     GLPOSTDT,BCHSOURC,BACHNUMB,SERIES, MKDTOPST, NUMOFTRX,RECPSTGS, DELBACH, MSCBDINC, BACHFREQ, RCLPSTDT,NOFPSTGS,      BCHCOMNT,BRKDNALL, CHKSPRTD ,RVRSBACH, USERID,CHEKBKID,BCHTOTAL,BCHEMSG1,BCHEMSG2,BACHDATE,BCHSTRG1,BCHSTRG2,     POSTTOGL, MODIFDT,CREATDDT,NOTEINDX,CURNCYID,BCHSTTUS, CNTRLTRX, CNTRLTOT,PETRXCNT, APPROVL, APPRVLDT,APRVLUSERID,     ORIGIN, ERRSTATE, GLBCHVAL, Computer_Check_Doc_Date,Sort_Checks_By, SEPRMTNC, REPRNTED, CHKFRMTS, TRXSORCE,PmtMethod,      EFTFileFormat   ) values (     @dtCurrentDate,@I_sBatchSource,@IO_sBatchNumber,@I_iSeries,0,0,0,0,0,1,@dtMinDate,0,     @I_sBatchComment,0,0,0,@I_sUserId,@I_sCheckbookId,0,0,0,@dtCurrentDate,'','',     1,@dtCurrentDate,@dtCurrentDate,@nNoteIndex,'',@BATCH_AVAILABLE,0,0,0,0,@dtMinDate,'',     1,0,0,@dtMinDate,0,0,0,0,'',0,0   )   select @O_iError = 1 end  
GO
GRANT EXECUTE ON  [dbo].[ncGetUniqueBatch] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[ncGetUniqueBatch] TO [public]
GO

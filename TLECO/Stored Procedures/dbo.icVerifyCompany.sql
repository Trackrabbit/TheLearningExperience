SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icVerifyCompany]  @I_cBatchNumber char(15)  = NULL,   @I_cBatchSource  char(15)  = NULL,  @I_cOrigICID    char(5)  = NULL,   @I_cUserID    char(15)  = NULL,   @I_sBatchFrequencey smallint = NULL,   @I_tMCRegistered tinyint  = NULL,  @I_cOrigFuncCurrency char(15) = NULL,   @I_tPosting tinyint  = NULL,  @O_bMessages binary(4)  = NULL  output,  @O_iErrorState          int             = NULL  output  as   declare  @TRUE            tinyint,   @FALSE    tinyint,   @sSINGLE_USE smallint,  @MS_ITEM_08 int,  @MS_ITEM_09 int,  @MS_ITEM_10 int,  @MS_ITEM_11 int,   @MS_ITEM_12 int,  @MS_ITEM_13 int,  @tTransaction          tinyint,  @tLoop       tinyint,   @cICID char(5),   @cDBName char(5),  @sCompID   smallint,  @iStatus int,  @cTempSD char(10),  @iError   int,  @iMessageNumber         int,   @vPrefix         varchar(255),  @vDBName      varchar(11)  select  @O_bMessages  = 0x00000000,   @O_iErrorState      = 0  if @@trancount = 0  begin  select @tTransaction = 1  begin transaction end    while (@tLoop is NULL) begin    select @tLoop = 1   if  @I_cBatchNumber is NULL or   @I_cBatchSource  is NULL or  @I_cOrigICID    is NULL or  @I_cUserID    is NULL or  @I_sBatchFrequencey is NULL or   @I_cOrigFuncCurrency  is NULL or  @I_tMCRegistered is NULL or  @I_tPosting is NULL   begin  select @O_iErrorState = 21002  break   end    select  @TRUE           = 1,  @FALSE          = 0,  @sSINGLE_USE  = 1,  @MS_ITEM_08 = convert(int, 0x80000000),   @MS_ITEM_09 = power(2,16),   @MS_ITEM_10 = power(2,17),   @MS_ITEM_11 = power(2,18),   @MS_ITEM_12 = power(2,19),   @MS_ITEM_13 = power(2,20),   @iStatus  = 0,  @iError  = 0   update   #Company   set  CompanyID  = isnull(cm.CMPANYID,0),  CompanyName  = isnull(cm.CMPNYNAM, '')  from   DYNAMICS.dbo.SY01500 cm  where   #Company.IntercompanyID = cm.INTERID   update   #Company   set   DatabaseName =   (select distinct isnull(pn.DBNAME, '')  from   DYNAMICS.dbo.SY02100 pn  where   #Company.CompanyID = pn.CMPANYID)    update   #Company  set   UserAccess = 1   where exists  (select 1   from   DYNAMICS.dbo.SY60100 ua  where   #Company.CompanyID = ua.CMPANYID   and @I_cUserID = ua.USERID)   declare   Companycursor INSENSITIVE  cursor for select   IntercompanyID,  CompanyID,  DatabaseName  from   #Company  where   IntercompanyID <> @I_cOrigICID   and  UserAccess = 1   open Companycursor  if @@cursor_rows <>  0  begin     fetch next from  Companycursor  into  @cICID,   @sCompID,  @vDBName   while (@@fetch_status <> -1)  begin  exec ( 'update #Company ' +   'set FunctionalCurrency = ' +   '(select isnull(FUNLCURR, '' '') from ' + @vDBName + '.dbo.MC40000)'+   ' where IntercompanyID = ''' + @cICID + '''')    if @I_tPosting = @TRUE   begin  select @cDBName = db_name()  exec @iStatus = DYNAMICS.dbo.smGetMsgString  18671,  @cDBName,   @vPrefix        output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break    exec ('update #Company set SourceDocument = '+   'isnull(SOURCDOC, '' '') from ' + @vDBName + '.dbo.SY01000 , #Company ' +  'where TRXSRCPX = ''' + @vPrefix + ''' and IntercompanyID = ''' + @cICID + '''')  end      fetch next from  Companycursor  into  @cICID,   @sCompID,   @vDBName  end    end    deallocate Companycursor  if @iStatus <> 0   break    update  #Company  set   LineMessages2 = (LineMessages2 | @MS_ITEM_08)   where   CompanyID = 0   if @@rowcount > 0   select @O_bMessages = (@O_bMessages | @MS_ITEM_08)   update  #Company  set  LineMessages2 = (LineMessages2 | @MS_ITEM_09)  where   UserAccess <> 1    if @@rowcount > 0   select @O_bMessages = (@O_bMessages | @MS_ITEM_09)   update  #Company   set  LineMessages2 = (LineMessages2 | @MS_ITEM_10)   where   FunctionalCurrency = ' '  and  IntercompanyID <> @I_cOrigICID   and UserAccess = 1   if @@rowcount > 0   select @O_bMessages = (@O_bMessages | @MS_ITEM_10)   if @I_tMCRegistered = @FALSE   begin  update  #Company  set  LineMessages2 = (LineMessages2 | @MS_ITEM_11)  where   FunctionalCurrency <> @I_cOrigFuncCurrency   and  FunctionalCurrency <> ' '   and  IntercompanyID <> @I_cOrigICID    if @@rowcount > 0   select @O_bMessages = (@O_bMessages | @MS_ITEM_11)  end   if (@I_sBatchFrequencey <> @sSINGLE_USE)   begin   update   #Company   set  LineMessages2 = (LineMessages2 | @MS_ITEM_12)  where   FunctionalCurrency <> @I_cOrigFuncCurrency   and  FunctionalCurrency <> ''    end    if @@rowcount > 0   select @O_bMessages = (@O_bMessages | @MS_ITEM_12)   update  #Company  set  LineMessages2 = (LineMessages2 | @MS_ITEM_13)   where   IntercompanyID <> @I_cOrigICID  and  not exists(  select   1  from   DYNAMICS.dbo.IC40100 icsetup   where  icsetup.ORCOMID = @I_cOrigICID  and icsetup.DSTCOMID = #Company.IntercompanyID)    if @@rowcount > 0   select @O_bMessages = (@O_bMessages | @MS_ITEM_13)  end    if @O_iErrorState <> 0 or  @iStatus <> 0  begin   if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[icVerifyCompany] TO [DYNGRP]
GO

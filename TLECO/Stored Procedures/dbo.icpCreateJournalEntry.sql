SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icpCreateJournalEntry]  @I_iSQLSessionID        int             = NULL,  @I_cProductName         char(30)        = NULL,  @I_tMDARegistered tinyint  = NULL,   @I_cOrigIntercompanyID char(5)  = NULL,  @I_iOrigJournalEntry int  = NULL,  @I_cDestCompanyID char(5)  = NULL,  @O_bLineMessages2 binary(4) = NULL output,  @O_iErrorState          int             = NULL  output as  declare  @TRUE tinyint,  @FALSE tinyint,  @MS_ITEM_16 int,  @GL_NORMAL char(15),  @UNPOSTED smallint,  @PRINT smallint,  @FINANCIAL smallint,  @DEFAULT_DATE datetime,  @sCompanyID smallint,  @cBatchNumber char(15),  @cDBName char(5),  @cSourceDocument char(11),  @cRateTypeID char(15),  @cExchangeTableID char(15),  @nExchangeRate numeric(15,7),  @dExchangeDate datetime,  @dExchangeTime datetime,  @sRateCalculationMethod smallint,  @iJournalEntry int,  @cJournalEntry char(128),   @nNoteIndex numeric(19,5),  @iStatus int,  @iError int,  @tOK tinyint,  @tTransaction tinyint,  @tLoop tinyint,  @dTransactionDate datetime,   @sDecimalPlaces smallint,  @sUNIT smallint,  @sUNITALLOC smallint,  @tIsMC tinyint,  @sDefaultDate char(12),  @nDTAIndex numeric(19,5),  @tReversing tinyint,  @sEMPTY smallint,  @nDenomExchangeRate numeric(15,7),  @sMCTrxState smallint,  @dDocumentDate datetime  select   @O_bLineMessages2 = 0x00000000,  @O_iErrorState  = 0,  @iStatus  = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   exec @iStatus = smGetMinDate @DEFAULT_DATE output  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_iSQLSessionID is NULL or  @I_cProductName is NULL or  @I_tMDARegistered is NULL or  @I_cOrigIntercompanyID is NULL or  @I_iOrigJournalEntry is NULL or  @I_cDestCompanyID is NULL  begin  select @O_iErrorState = 20870  break  end    select @tIsMC = @FALSE   select  @TRUE   = 1,  @FALSE   = 0,  @MS_ITEM_16       = convert(int, 0x00800000),  @UNPOSTED  = 1,  @PRINT   = 1,  @FINANCIAL  = 2,  @nNoteIndex   = 0.0,  @sUNIT   = 2,  @sUNITALLOC  = 4,  @sEMPTY  = 0   exec @iStatus = DYNAMICS..smGetConstantString  'GL_NORMAL_STR',   @GL_NORMAL output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select  @iJournalEntry  = 0,  @tIsMC  = @FALSE   exec @iStatus = smGetDefaultDate @sDefaultDate output   exec @iStatus = glGetNextJournalEntry  @TRUE,      @I_iSQLSessionID,  @iJournalEntry output,   @tOK output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0 or @tOK = @FALSE  begin  select @O_bLineMessages2 = (@O_bLineMessages2 | @MS_ITEM_16)  if @O_iErrorState = 0  select @O_iErrorState = 20871  break  end    select   @sCompanyID = CompanyID,  @cBatchNumber = BatchNumber,  @cSourceDocument = SourceDocument  from  #Company  where  #Company.IntercompanyID = @I_cDestCompanyID   if @@rowcount <> 1  begin  select @O_iErrorState = 20930  break  end   select   @cRateTypeID = RateTypeID,  @cExchangeTableID = ExchangeTableID,   @nExchangeRate = ExchangeRate,  @dExchangeDate = ExchangeDate,  @dExchangeTime = ExchangeTime,  @sRateCalculationMethod = RateCalculationMethod,  @nDenomExchangeRate = DenomExchangeRate,  @sMCTrxState = MCTrxState  from   #LineItems  where  IntercompanyID = @I_cDestCompanyID  and ExchangeRate <> 0.0    if (@I_tMDARegistered = @TRUE)  begin  exec @iStatus = dtaGetDTAIndex  @iJournalEntry,  @nDTAIndex output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if @iStatus <> 0 or @O_iErrorState <> 0  break   end   insert into  GL10000 (   BACHNUMB,  BCHSOURC,  JRNENTRY,  SOURCDOC,  REFRENCE,  TRXDATE,  RVRSNGDT,  PSTGSTUS,  PRNTSTUS,  TRXTYPE,  SERIES,  OrigDTASeries,  ORPSTDDT,  ORTRXSRC,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,   EXCHDATE,  TIME1,  RTCLCMTD,  NOTEINDX,  ORCOMID,  ORIGINJE,  DTA_Index,  DENXRATE,  MCTRXSTT,  DOCDATE,  Tax_Date,  Ledger_ID,  PERIODID,  Adjustment_Transaction)  select  @cBatchNumber,  @GL_NORMAL,  @iJournalEntry,  @cSourceDocument,  hdr.Reference,  hdr.TransactionDate,  hdr.ReversingDate,  @UNPOSTED,  @PRINT,  hdr.TransactionType,  @FINANCIAL,  @FINANCIAL,  @sDefaultDate ,  hdr.TRXSource,  hdr.CurrencyID,  hdr.CurrencyIndex,  isnull(@cRateTypeID,''),  isnull(@cExchangeTableID,''),  isnull(@nExchangeRate,0.0),  isnull(@dExchangeDate,convert(char(12),@DEFAULT_DATE,102)),  isnull(@dExchangeTime,convert(char(12),@DEFAULT_DATE,108)),  isnull(@sRateCalculationMethod,0),  @nNoteIndex,  @I_cOrigIntercompanyID,  hdr.JournalEntry,  isnull(@nDTAIndex,0.0),  isnull(@nDenomExchangeRate, 0.0),  isnull(@sMCTrxState,0),  convert(char(12),@DEFAULT_DATE,102),  convert(char(12),@DEFAULT_DATE,102),  Ledger_ID,  hdr.TransactionPeriodID,  hdr.Adjustment_Transaction  from   #TRXHeader hdr  where  hdr.JournalEntry = @I_iOrigJournalEntry   if @@rowcount <> 1  begin  select @O_iErrorState = 20872  break  end    select @cJournalEntry = convert(char(128), @iJournalEntry)  select @cDBName = db_name()   exec @iStatus = DYNAMICS..smAddRecordAddedRecord  @I_iSQLSessionID,  'GL10000',  @cJournalEntry,  2,     @I_cProductName,  @cDBName,  0,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if @iStatus <> 0 or @O_iErrorState <> 0  break    insert into  GL10001 (  BACHNUMB,  JRNENTRY,  SQNCLINE,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,  ORCRDAMT,  XCHGRATE,  DSCRIPTN,  CURRNIDX,  ACCTTYPE,  INTERID,  RATETPID,  EXGTBLID,  EXCHDATE,  TIME1,   RTCLCMTD,  FXDORVAR,   BALFRCLC,   PSTNGTYP,   DECPLACS,  DENXRATE,  MCTRXSTT,  ORCTRNUM,  ORDOCNUM,  ORMSTRID,  ORMSTRNM,  ORTRXTYP,  ORTRXDESC,  LNESTAT,  CorrespondingUnit)  select  @cBatchNumber,  @iJournalEntry,  line.SequenceLine,  line.AccountIndex,  line.TRXDebit,  line.TRXCredit,  line.OriginatingDebit,  line.OriginatingCredit,  line.ExchangeRate,  line.Description,  line.CurrencyIndex,   line.AccountType,  line.IntercompanyID,  line.RateTypeID,  line.ExchangeTableID,  line.ExchangeDate,  line.ExchangeTime,  line.RateCalculationMethod,  line.FixedOrVariable,  line.BalanceForCalculation,  line.PostingType,  line.DecimalPlaces,  line.DenomExchangeRate,  line.MCTrxState,  OrigControlNumber,  OrigDocumentNumber,  OrigMasterID,  OrigMasterName,  OrigTransactionType,  OrigTRXDesc,  line.LineStatus,  CorrespondingUnit  from  #LineItems line  where  line.IntercompanyID = @I_cDestCompanyID   if @@rowcount = 0  begin  select @O_iErrorState = 20873  break  end    if (@I_tMDARegistered = @TRUE)  begin  if exists(select   1   from   #LineItems, #TRXHeader  where   IntercompanyID = @I_cDestCompanyID  and #LineItems.CurrencyIndex <> #TRXHeader.CurrencyIndex )   select @tIsMC = @TRUE    select @dTransactionDate =   (select   TransactionDate   from   #TRXHeader)  set rowcount 1   select @sDecimalPlaces =   (select distinct   DecimalPlaces   from   #LineItems   where   AccountType  <> @sUNIT   and AccountType  <> @sUNITALLOC  and AccountType  <> @sEMPTY   and IntercompanyID  =  @I_cDestCompanyID)    set rowcount 0  if ((select TransactionType from #TRXHeader) = 1)   select @tReversing = 1  else  select @tReversing = 0   if (@sDecimalPlaces is null )   break   exec @iStatus = dtaDefaultStatsForJournal  @iJournalEntry,   @dTransactionDate,   @sDecimalPlaces,  @tIsMC,   @nDTAIndex,  @tReversing,  0.0,      @O_iErrorState output    select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if @iStatus <> 0 or @O_iErrorState <> 0  break    end  end   if @O_iErrorState <> 0 or @iStatus <> 0 begin   if @tTransaction = 1   rollback transaction end else if @tTransaction = 1  commit transaction   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[icpCreateJournalEntry] TO [DYNGRP]
GO

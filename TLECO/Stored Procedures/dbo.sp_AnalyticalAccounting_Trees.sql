SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[sp_AnalyticalAccounting_Trees] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqldefaultstring varchar(8000),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlstring3 varchar(8000),  @sqlstring4 varchar(8000),  @sqlstring5 varchar(8000),  @sqlstring6 varchar(8000),  @sqlstring7 varchar(8000),  @sqlstring8 varchar(8000),  @sqlstring9 varchar(8000),  @sqlstring10 varchar(8000),  @sqljoinstring varchar(8000),  @sqlaccessstring varchar(400),  @tNumberSegments int,  @tSegment int,  @I_iDictID int,  @I_iLangID int,  @I_iMessageNumber int,  @I_iAliasMessageNumber int,  @I_iIntegerValue int,  @Tree varchar(255), @Tree_Type varchar(255), @Trx_Dimension varchar(255), @Description varchar(255), @Main_Tree varchar(255), @Tree_ID varchar(255), @Dim_ID varchar(255), @Tree_Includes_All_Records varchar(255) select @I_iDictID = 3180 select @I_iMessageNumber = 22186 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Tree output  select @I_iDictID = 3180 select @I_iMessageNumber = 22182 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Tree_Type output  select @I_iDictID = 3180 select @I_iMessageNumber = 22128 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Trx_Dimension output  select @I_iDictID = 3180 select @I_iMessageNumber = 22184 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Description output  select @I_iDictID = 3180 select @I_iMessageNumber = 22181 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Main_Tree output  select @I_iDictID = 3180 select @I_iMessageNumber = 22185 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Tree_ID output  select @I_iDictID = 3180 select @I_iMessageNumber = 22087 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Dim_ID output  select @I_iDictID = 3180 select @I_iMessageNumber = 22183 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgString  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Tree_Includes_All_Records output   select @sqldropstring =   'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[AATrees]'') and OBJECTPROPERTY(id, N''IsView'') = 1) ' +  'drop view [dbo].[AATrees] '  select @sqldefaultstring =   'CREATE VIEW AATrees AS ' +   'select ' +   'rtrim([''aaTreeMstr''].[aaTree]) as ''' + @Tree + ''', ' + '''' + @Tree_Type + ''' = dbo.AA_FUNC_Tree_Type([''aaTreeMstr''].[aaLinkType]), ' + 'rtrim([''aaTrxDimMstr''].[aaTrxDim]) as ''' + @Trx_Dimension + ''', ' + 'rtrim([''aaTreeMstr''].[aaTreeDescr]) as ''' + @Description + ''', ' + '''' + @Main_Tree + ''' = dbo.DYN_FUNC_Boolean_All([''aaTreeMstr''].[aaTreeMain]), '   select @sqlstring1 =   '[''aaTreeMstr''].[aaDimID] as ''' + @Dim_ID + ''', ' +  '[''aaTreeMstr''].[aaTreeID] as ''' + @Tree_ID + ''', ' +  '''' + @Tree_Includes_All_Records + ''' = dbo.DYN_FUNC_Boolean_All([''aaTreeMstr''].[aaTreeInclAllRec]) '   select @sqljoinstring =   'from [AAG00600] as [''aaTreeMstr''] with (NOLOCK) '   + 'left outer join [AAG00400] as [''aaTrxDimMstr''] with (NOLOCK) on '   + '[''aaTreeMstr''].[aaDimID] = [''aaTrxDimMstr''].[aaTrxDimID] '   select @sqlaccessstring =   'GRANT SELECT ON [dbo].[AATrees] TO [rpt_accounting manager]' + 'GRANT SELECT ON [dbo].[AATrees] TO [rpt_certified accountant]'   exec (@sqldropstring)  exec (@sqldefaultstring+' '+@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10+' '+@sqljoinstring)  exec (@sqlaccessstring)   set nocount off     
GO
GRANT EXECUTE ON  [dbo].[sp_AnalyticalAccounting_Trees] TO [DYNGRP]
GO

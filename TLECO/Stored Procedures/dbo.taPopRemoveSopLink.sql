SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopRemoveSopLink] @I_vPONUMBER char(17),    @I_vSOPNUMBE char(21) = '',   @I_vSOPTYPE tinyint = 0,   @I_vLNITMSEQ int = 0,    @I_vCMPNTSEQ int = 0,    @I_vRemoveAllLinks tinyint = 0,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @count int,  @DexLockErrorState int,  @DexLockErrorStatePOP int,  @DexLockErrorStateSOP int,  @DexRowIDPOP int,  @DexRowIDSOP int,  @iCustomState int,  @iCustomErrString varchar(255),  @iError int,  @iStatus int,  @mypoplock tinyint,  @mysoplock tinyint,  @oExists int,  @O_oErrorState int,  @OInsStatus int,  @ORD int,  @POPTbl char(18),  @QTYONPO numeric(19,5),  @SOPNUMBE char(17),  @SOPTbl char(18),  @SOPTYPE tinyint,  @LNITMSEQ int,  @CMPNTSEQ int,  @ErrState int,  @ErrString char(255)  select  @count = 0,  @DexLockErrorState = 0,  @DexLockErrorStatePOP = 0,  @DexLockErrorStateSOP = 0,  @DexRowIDPOP = 0,  @DexRowIDSOP = 0,  @iCustomState = 0,  @iCustomErrString = '',  @iError = 0,  @iStatus = 0,  @mypoplock = 0,  @mysoplock = 0,  @O_oErrorState = 0,  @OInsStatus = 0,  @oErrString = '',  @oExists = 0,  @ORD = 0,  @POPTbl = '',  @QTYONPO = 0,  @SOPNUMBE = '',  @SOPTbl = '',  @SOPTYPE = 0,  @LNITMSEQ = 0,  @CMPNTSEQ = 0,  @ErrState = 0,  @ErrString = '',  @O_iErrorState = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopRemoveSopLinkPre  @I_vPONUMBER output,  @I_vSOPNUMBE output,  @I_vSOPTYPE  output,  @I_vLNITMSEQ output,  @I_vCMPNTSEQ output,  @I_vRemoveAllLinks output,  @I_vRequesterTrx   output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState  output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 4056    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPONUMBER is null or  @I_vSOPNUMBE is null or  @I_vSOPTYPE  is null or  @I_vLNITMSEQ is null or  @I_vCMPNTSEQ is null or  @I_vRemoveAllLinks is null or  @I_vRequesterTrx is null) begin  select @O_iErrorState = 4055    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 3744     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vPONUMBER = UPPER(@I_vPONUMBER),  @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE)  if (@I_vPONUMBER = '') begin  select @O_iErrorState = 3745    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (not exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER)) begin  select @O_iErrorState = 3746    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (not exists(select 1 from SOP60100 (nolock) where PONUMBER = @I_vPONUMBER)) begin  select @O_iErrorState = 3747    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vSOPNUMBE <> '') and (@I_vSOPTYPE = 0)) begin  select @O_iErrorState = 3748     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vSOPNUMBE <> '') and (@I_vSOPTYPE <> 0))  if (not exists(select 1 from SOP60100 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE))  begin  select @O_iErrorState = 3749     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if ((@I_vSOPNUMBE <> '') and (@I_vSOPTYPE <> 0)) begin  if (not exists(select 1 from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE))   begin  select @O_iErrorState = 3750    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,   @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Purchase_Order_Transaction',  @I_vINDEX1 = @I_vPONUMBER,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 3751   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@I_vRequesterTrx=0) and (@I_vSOPNUMBE <> '') and (@I_vSOPTYPE <> 0)) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Sales_Transaction',  @I_vINDEX1 = @I_vSOPNUMBE,  @I_vINDEX2 = @I_vSOPTYPE,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 3752   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  while (1=1) begin  select @POPTbl = rtrim(db_name()) + '.dbo.POP10100'  select @SOPTbl = rtrim(db_name()) + '.dbo.SOP10100'   select @DexRowIDPOP = DEX_ROW_ID from POP10100 (nolock) where PONUMBER = @I_vPONUMBER   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @POPTbl and row_id = @DexRowIDPOP and session_id = @@spid))  begin  select @mypoplock = 1   EXEC DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @POPTbl,    @I_vrow_id = @DexRowIDPOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStatePOP output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorStatePOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStatePOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStatePOP  end  select @O_iErrorState = 3753   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vRemoveAllLinks = 1)  begin  select @count = isnull(count(*),0) from SOP60100 (nolock) where PONUMBER = @I_vPONUMBER  while (@count > 0)  begin  select  top 1 @QTYONPO = QTYONPO, @SOPNUMBE = SOPNUMBE, @SOPTYPE = SOPTYPE, @LNITMSEQ = LNITMSEQ,  @CMPNTSEQ = CMPNTSEQ, @ORD = ORD from SOP60100 (nolock) where PONUMBER = @I_vPONUMBER   select @DexRowIDSOP = DEX_ROW_ID from SOP10100 (nolock) where SOPNUMBE = @SOPNUMBE and SOPTYPE = @SOPTYPE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPTbl and row_id = @DexRowIDSOP and session_id = @@spid))  begin  select @mysoplock = 1   EXEC DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPTbl,    @I_vrow_id = @DexRowIDSOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStateSOP output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorStateSOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStateSOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStateSOP  end  select @O_iErrorState = 3754   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   update  POP10110   set QTYUNCMTBASE = QTYUNCMTBASE + @QTYONPO, QTYCMTBASE = QTYCMTBASE - @QTYONPO  where PONUMBER = @I_vPONUMBER and ORD = @ORD  if (@@error <> 0)  begin  select @O_iErrorState = 3755    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  delete  SOP60100 where PONUMBER = @I_vPONUMBER and ORD = @ORD and SOPTYPE = @SOPTYPE and  SOPNUMBE = @SOPNUMBE and LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 3756    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  update  SOP10200   set QTYONPO = 0, QTYRECVD = 0, PURCHSTAT = 2  where   SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and  LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 3757    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  select @count = @count - 1  if (@mysoplock = 1)  begin  EXEC @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,   @I_vtable_path_name = @SOPTbl,    @I_vrow_id = @DexRowIDSOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStateSOP output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorStateSOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStateSOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStateSOP  end  select @O_iErrorState = 3758   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  select @count = 0  break  end   if ((@I_vSOPNUMBE = '') and (@I_vRemoveAllLinks = 0))  begin  select @count = isnull(count(*),0) from SOP60100 (nolock) where PONUMBER = @I_vPONUMBER  if (@count = 0)  begin  select @O_iErrorState = 3759    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count > 1)  begin  select @O_iErrorState = 4024    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count = 1)  begin  select  @QTYONPO = QTYONPO, @SOPNUMBE = SOPNUMBE, @SOPTYPE = SOPTYPE, @LNITMSEQ = LNITMSEQ,  @CMPNTSEQ = CMPNTSEQ, @ORD = ORD from SOP60100 (nolock) where PONUMBER = @I_vPONUMBER  if (not exists(select 1 from SOP10200 (nolock) where SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ))  begin  select @O_iErrorState = 4025    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  else  begin  select @DexRowIDSOP = DEX_ROW_ID from SOP10100 (nolock) where SOPNUMBE = @SOPNUMBE and SOPTYPE = @SOPTYPE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPTbl and row_id = @DexRowIDSOP and session_id = @@spid))  begin  select @mysoplock = 1   EXEC DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPTbl,    @I_vrow_id = @DexRowIDSOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStateSOP output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorStateSOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStateSOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStateSOP  end  select @O_iErrorState = 4026   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   update  POP10110   set QTYUNCMTBASE = QTYUNCMTBASE + @QTYONPO, QTYCMTBASE = QTYCMTBASE - @QTYONPO  where PONUMBER = @I_vPONUMBER and ORD = @ORD  if (@@error <> 0)  begin  select @O_iErrorState = 4027    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  delete  SOP60100 where PONUMBER = @I_vPONUMBER and ORD = @ORD  if (@@error <> 0)  begin  select @O_iErrorState = 4028    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  update  SOP10200   set QTYONPO = 0, QTYRECVD = 0, PURCHSTAT = 2  where   SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and  LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4029    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  select @count = 0  break  end  end   if ((@I_vSOPNUMBE <> '') and (@I_vLNITMSEQ = 0) and (@I_vRemoveAllLinks = 0))  begin  select @count = isnull(count(*),0) from SOP60100 (nolock)   where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE  if (@count = 0)  begin  select @O_iErrorState = 4030     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count > 1)  begin  select @O_iErrorState = 4031    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count = 1)  begin  select  @QTYONPO = QTYONPO, @SOPNUMBE = SOPNUMBE, @SOPTYPE = SOPTYPE, @LNITMSEQ = LNITMSEQ,  @CMPNTSEQ = CMPNTSEQ, @ORD = ORD from SOP60100 (nolock)   where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE  if (not exists(select 1 from SOP10200 (nolock)  where SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ))  begin  select @O_iErrorState = 4032    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  else  begin  select @DexRowIDSOP = DEX_ROW_ID from SOP10100 (nolock) where SOPNUMBE = @SOPNUMBE and SOPTYPE = @SOPTYPE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPTbl and row_id = @DexRowIDSOP and session_id = @@spid))  begin  select @mysoplock = 1   EXEC DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPTbl,    @I_vrow_id = @DexRowIDSOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStateSOP output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorStateSOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStateSOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStateSOP  end  select @O_iErrorState = 4033   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  update  POP10110   set QTYUNCMTBASE = QTYUNCMTBASE + @QTYONPO, QTYCMTBASE = QTYCMTBASE - @QTYONPO  where PONUMBER = @I_vPONUMBER and ORD = @ORD  if (@@error <> 0)  begin  select @O_iErrorState = 4034    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete SOP60100 where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 4035    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update  SOP10200   set QTYONPO = 0, QTYRECVD = 0, PURCHSTAT = 2  where   SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and  LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4036    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  select @count = 0  break  end  end   if ((@I_vSOPNUMBE <> '') and (@I_vLNITMSEQ <> 0) and (@I_vCMPNTSEQ = 0) and (@I_vRemoveAllLinks = 0))  begin  select @count = isnull(count(*),0) from SOP60100 (nolock)   where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ  if (@count = 0)  begin  select @O_iErrorState = 4037    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count > 1)  begin  select @O_iErrorState = 4038    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count = 1)  begin  select  @QTYONPO = QTYONPO, @SOPNUMBE = SOPNUMBE, @SOPTYPE = SOPTYPE, @LNITMSEQ = LNITMSEQ,  @CMPNTSEQ = CMPNTSEQ, @ORD = ORD from SOP60100 (nolock)   where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ  if (not exists(select 1 from SOP10200 (nolock) where SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ))  begin  select @O_iErrorState = 4039    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  else  begin  select @DexRowIDSOP = DEX_ROW_ID from SOP10100 (nolock) where SOPNUMBE = @SOPNUMBE and SOPTYPE = @SOPTYPE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPTbl and row_id = @DexRowIDSOP and session_id = @@spid))  begin  select @mysoplock = 1   EXEC DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPTbl,    @I_vrow_id = @DexRowIDSOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStateSOP output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorStateSOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStateSOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStateSOP  end  select @O_iErrorState = 4040   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   update  POP10110   set QTYUNCMTBASE = QTYUNCMTBASE + @QTYONPO, QTYCMTBASE = QTYCMTBASE - @QTYONPO  where PONUMBER = @I_vPONUMBER and ORD = @ORD  if (@@error <> 0)  begin  select @O_iErrorState = 4041    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete  SOP60100 where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4042    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update  SOP10200   set QTYONPO = 0, QTYRECVD = 0, PURCHSTAT = 2  where   SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and  LNITMSEQ = @LNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4043    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  select @count = 0  break  end  end    if ((@I_vSOPNUMBE <> '') and (@I_vLNITMSEQ <> 0) and (@I_vCMPNTSEQ <> 0) and (@I_vRemoveAllLinks = 0))  begin  select @count = isnull(count(*),0) from SOP60100 (nolock)  where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@count = 0)  begin  select @O_iErrorState = 4044    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count > 1)  begin  select @O_iErrorState = 4045    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@count = 1)  begin  select  @QTYONPO = QTYONPO, @SOPNUMBE = SOPNUMBE, @SOPTYPE = SOPTYPE, @LNITMSEQ = LNITMSEQ,  @CMPNTSEQ = CMPNTSEQ, @ORD = ORD from SOP60100 (nolock)   where PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE  if (not exists(select 1 from SOP10200 (nolock) where SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ))  begin  select @O_iErrorState = 4046    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  else  begin  select @DexRowIDSOP = DEX_ROW_ID from SOP10100 (nolock) where SOPNUMBE = @SOPNUMBE and SOPTYPE = @SOPTYPE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPTbl and row_id = @DexRowIDSOP and session_id = @@spid))  begin  select @mysoplock = 1   EXEC DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPTbl,    @I_vrow_id = @DexRowIDSOP,    @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorStateSOP output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorStateSOP <> 0) or (@iError <> 0))  begin  if (@DexLockErrorStateSOP <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorStateSOP  end  select @O_iErrorState = 4047   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   update  POP10110   set QTYUNCMTBASE = QTYUNCMTBASE + @QTYONPO, QTYCMTBASE = QTYCMTBASE - @QTYONPO  where PONUMBER = @I_vPONUMBER and ORD = @ORD  if (@@error <> 0)  begin  select @O_iErrorState = 4048    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete  SOP60100 where  PONUMBER = @I_vPONUMBER and SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4049    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update  SOP10200   set QTYONPO = 0, QTYRECVD = 0, PURCHSTAT = 2  where   SOPTYPE = @SOPTYPE and SOPNUMBE = @SOPNUMBE and  LNITMSEQ = @LNITMSEQ and CMPNTSEQ = @CMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4050    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  select @count = 0  break  end  end end   if ((@mypoplock = 1) or (@mysoplock = 1)) begin  EXEC @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 5,   @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 4051   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPopRemoveSopLinkPost  @I_vPONUMBER,  @I_vSOPNUMBE,  @I_vSOPTYPE,  @I_vLNITMSEQ,  @I_vCMPNTSEQ,  @I_vRemoveAllLinks,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState  output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@ErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @ErrString  select @O_iErrorState = 4052    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Purchase_Order_Transaction',  @I_vINDEX1 = @I_vPONUMBER,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 4053   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@I_vRequesterTrx=0) and (@I_vSOPNUMBE <> '') and (@I_vSOPTYPE <> 0)) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Sales_Transaction',  @I_vINDEX1 = @I_vSOPNUMBE,  @I_vINDEX2 = @I_vSOPTYPE,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 4054   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopRemoveSopLink] TO [DYNGRP]
GO

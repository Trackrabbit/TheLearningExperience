SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateWorkersCompensationCode] @I_vWRKRCOMP char(6),    @I_vSTATECD char(2),    @I_vDSCRIPTN char(30),    @I_vWKCMPMTH smallint = 1,   @I_vWKCMPAMT numeric(19,5) = 0,   @I_vWKCMPUNT numeric(19,5) = 0,   @I_vWKCMPCNT numeric(19,5) = 0,   @I_vWCMOTMTH smallint = 0,   @I_vWCWGLIMT numeric(19,5) = 0,   @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @O_oErrorState int,  @iError int      select  @O_iErrorState = 0,     @sCompanyID = CMPANYID from DYNAMICS..SY01500 where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateWorkersCompensationCodePre  @I_vWRKRCOMP output,  @I_vSTATECD output,  @I_vDSCRIPTN output,  @I_vWKCMPMTH output,  @I_vWKCMPAMT output,  @I_vWKCMPUNT output,  @I_vWKCMPCNT output,  @I_vWCMOTMTH output,  @I_vWCWGLIMT output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3939    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vWRKRCOMP is NULL or  @I_vSTATECD is NULL or  @I_vDSCRIPTN is NULL or  @I_vWKCMPMTH is NULL or  @I_vWKCMPAMT is NULL or  @I_vWKCMPUNT is NULL or  @I_vWKCMPCNT is NULL or  @I_vWCMOTMTH is NULL or  @I_vWCWGLIMT is NULL or  @I_vUpdateIfExists is NULL or   @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 3940    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vWRKRCOMP = UPPER(@I_vWRKRCOMP),  @I_vSTATECD = UPPER(@I_vSTATECD)  if ( @I_vWRKRCOMP = '' ) begin  select @O_iErrorState = 3941    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = '' ) begin  select @O_iErrorState = 3942    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD <> '' ) begin  if (not exists (select 1 from UPR41100 (nolock) where STATECD = @I_vSTATECD ))  begin  select @O_iErrorState = 3943    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vDSCRIPTN = '' ) begin  select @O_iErrorState = 3944    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vWKCMPMTH < 1 or @I_vWKCMPMTH > 4 ) begin   select @O_iErrorState = 3945     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWCMOTMTH < 0 or @I_vWCMOTMTH > 1) begin   select @O_iErrorState = 3946     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH = 1 ) and ( @I_vWKCMPCNT = 0 )  begin   select @O_iErrorState = 3947     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH = 1 ) and ( @I_vWKCMPAMT <> 0 or @I_vWKCMPUNT <> 0 )  begin   select @O_iErrorState = 3948     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH <> 1 ) and ( @I_vWKCMPCNT <> 0 ) begin   select @O_iErrorState = 3949     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH <> 1 ) and ( @I_vWCWGLIMT <> 0 ) begin   select @O_iErrorState = 3950     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH <> 1 ) and ( @I_vWCMOTMTH <> 0 ) begin   select @O_iErrorState = 3951     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWCWGLIMT < 0 ) begin   select @O_iErrorState = 3952     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH = 2 ) and ( @I_vWKCMPAMT = 0 ) begin   select @O_iErrorState = 4552     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPAMT < 0 )  begin   select @O_iErrorState = 4553     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH = 3 ) and ( @I_vWKCMPUNT = 0 ) begin   select @O_iErrorState = 4554     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPMTH = 4 ) and ( @I_vWKCMPUNT = 0 ) begin   select @O_iErrorState = 4555     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vWKCMPUNT < 0 )  begin   select @O_iErrorState = 4556     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 3677     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 3678     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 3924   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  begin  if not exists( select 1 from UPR40700 (nolock) where WRKRCOMP = @I_vWRKRCOMP )  begin  insert UPR40700 (  WRKRCOMP,  STATECD,  DSCRIPTN,  WKCMPMTH,  WKCMPAMT,  WKCMPUNT,  WKCMPCNT,  WCMOTMTH,  WCWGLIMT,  NOTEINDX  )  select  @I_vWRKRCOMP,    @I_vSTATECD,    @I_vDSCRIPTN,    @I_vWKCMPMTH,    @I_vWKCMPAMT,     @I_vWKCMPUNT,    @I_vWKCMPCNT * 1000000,   @I_vWCMOTMTH,    @I_vWCWGLIMT,    @nNextNoteIndex    if @@error <> 0  begin  select @O_iErrorState = 4557    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if ( @I_vUpdateIfExists = 1 )  begin  update UPR40700  set DSCRIPTN =  case  WHEN @I_vDSCRIPTN = ''  THEN DSCRIPTN  ELSE @I_vDSCRIPTN  end,  STATECD =   case  WHEN @I_vSTATECD = ''  THEN STATECD  ELSE @I_vSTATECD  end,  WKCMPMTH = @I_vWKCMPMTH,  WKCMPAMT =  case  WHEN @I_vWKCMPMTH = 1  THEN 0  ELSE @I_vWKCMPAMT  end,  WKCMPUNT =  case  WHEN @I_vWKCMPMTH = 1  THEN 0  ELSE @I_vWKCMPUNT  end,  WKCMPCNT =  case  WHEN @I_vWKCMPMTH <> 1  THEN 0  ELSE @I_vWKCMPCNT * 1000000  end,  WCMOTMTH =  case  WHEN @I_vWKCMPMTH <> 1  THEN 0  ELSE @I_vWCMOTMTH  end,  WCWGLIMT =  case  WHEN @I_vWKCMPMTH <> 1  THEN 0  ELSE @I_vWCWGLIMT  end  where  WRKRCOMP = @I_vWRKRCOMP   if @@error <> 0  begin  select @O_iErrorState = 4558    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateWorkersCompensationCodePost  @I_vWRKRCOMP,  @I_vSTATECD,  @I_vDSCRIPTN,  @I_vWKCMPMTH,  @I_vWKCMPAMT,  @I_vWKCMPUNT,  @I_vWKCMPCNT,  @I_vWCMOTMTH,  @I_vWCWGLIMT,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4559    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateWorkersCompensationCode] TO [DYNGRP]
GO

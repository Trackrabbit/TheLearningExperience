SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCalcDueDatePM] @I_vVENDORID char(15),   @I_vPYMTRMID char(20),   @I_vDOCDATE datetime,   @O_dDISCDATE datetime output,  @O_dDUEDATE datetime output,  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare @iStatement int,    @iStatus int,    @iAddCodeErrState int,    @sDISCTYPE smallint,   @sDISCDTDS smallint,   @sDUETYPE smallint,   @sDUEDTDS smallint,   @dDocDateEOM datetime,   @dDiscDateEOM datetime,   @dDocDatePlus1MonthEOM datetime,   @dDocDatePlus1MonthFOM datetime,   @sDUEGRPER   smallint,   @sDISGRPER smallint,   @tUSEGRPER tinyint    select  @O_dDISCDATE = '',  @O_dDUEDATE = '',  @iStatement = 0,    @O_iErrorState = 0,    @oErrString = isnull(@oErrString,'')  while (@iStatement = 0) begin  if (  @I_vVENDORID is NULL or  @I_vPYMTRMID is NULL or  @I_vDOCDATE  is NULL  )  begin  select @O_iErrorState = 240    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   select @I_vVENDORID = UPPER(@I_vVENDORID)   if (@I_vVENDORID = '')  begin  select @O_iErrorState = 237    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID))  begin  select @O_iErrorState = 239    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if ((@I_vPYMTRMID <> '') and (not exists (select 1 from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID)))  begin  select @O_iErrorState = 242    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@O_iErrorState <> 0)  begin  break  end   select  @sDUEGRPER = DUEGRPER,  @sDISGRPER = DISGRPER  from PM00200 (nolock)  where VENDORID = @I_vVENDORID   if (@I_vPYMTRMID = '')  begin  select @O_dDISCDATE = ''  select @O_dDUEDATE  = ''   return (@O_iErrorState)  end   select  @sDISCTYPE = DISCTYPE,  @sDISCDTDS = DISCDTDS,  @sDUETYPE  = DUETYPE,  @sDUEDTDS  = DUEDTDS,  @tUSEGRPER = USEGRPER  from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID   if (@tUSEGRPER = 0)   begin  select @sDUEGRPER = 0,  @sDISGRPER = 0  end   if (@I_vDOCDATE = '')  begin  select @O_dDISCDATE = ''  end  else  begin   select @dDocDateEOM = (dateadd(month,1,@I_vDOCDATE)) - datepart(day,(dateadd(month,1,@I_vDOCDATE)))   select @dDocDatePlus1MonthFOM = dateadd(day,1,@dDocDateEOM)   select @dDocDatePlus1MonthEOM = (dateadd(month,1,@dDocDatePlus1MonthFOM)) - datepart(day,(dateadd(month,1,@dDocDatePlus1MonthFOM)))   select @O_dDISCDATE =   case @sDISCTYPE   when 1 then   case  when @sDISCDTDS = 0  then ''  else dateadd(day, @sDISCDTDS, @I_vDOCDATE)  end  when 2 then  case  when (@dDocDateEOM - datepart(day,@dDocDateEOM) + @sDISCDTDS > @dDocDateEOM)  then @dDocDateEOM  else @dDocDateEOM - datepart(day,@dDocDateEOM) + @sDISCDTDS  end  when 3 then @dDocDateEOM  when 4 then ''   else ''   end   if (@sDISCTYPE = 2)    begin  while (dateadd(day, @sDISGRPER, @I_vDOCDATE) >= @O_dDISCDATE)  begin  select @O_dDISCDATE = dateadd(month, 1, @O_dDISCDATE)  end  end   if (@sDISCTYPE = 3)    begin  while (dateadd(day, @sDISGRPER, @I_vDOCDATE) >= @O_dDISCDATE)  begin  select @O_dDISCDATE = dateadd(month, 1, @O_dDISCDATE)  select @O_dDISCDATE = (dateadd(month,1,@O_dDISCDATE)) - datepart(day,(dateadd(month,1,@O_dDISCDATE)))  end  end  end   if (@I_vDOCDATE = '')  begin  select @O_dDUEDATE = ''  end  else  begin   select @dDiscDateEOM = (dateadd(month,1,@O_dDISCDATE)) - datepart(day,(dateadd(month,1,@O_dDISCDATE)))   if (@sDUETYPE = 5 and @sDUEDTDS = 0)  begin  select @sDUEDTDS = datepart(day,(dateadd(month,1,@I_vDOCDATE)))  end   select @O_dDUEDATE =   case @sDUETYPE   when 1 then  case  when (@sDISCTYPE in (1,4))       then dateadd(day, @sDUEDTDS, @I_vDOCDATE)  else dateadd(day, @sDUEDTDS, @O_dDISCDATE)   end  when 2 then  case  when datepart(year,@dDiscDateEOM) in ('1900','1901')  then @I_vDOCDATE - datepart(day,@I_vDOCDATE) + @sDUEDTDS  when (@dDiscDateEOM - datepart(day,@dDiscDateEOM) + @sDUEDTDS > @dDiscDateEOM)  then @dDiscDateEOM  else @dDiscDateEOM - datepart(day,@dDiscDateEOM) + @sDUEDTDS  end  when 3 then  case  when datepart(year,@O_dDISCDATE) in ('1900','1901')   then (dateadd(month, 1, @I_vDOCDATE)) - datepart(day,(dateadd(month, 1, @I_vDOCDATE)))  else @dDiscDateEOM  end  when 4 then @I_vDOCDATE  when 5 then  case  when (@dDocDatePlus1MonthEOM - datepart(day,@dDocDatePlus1MonthEOM) + @sDUEDTDS > @dDocDatePlus1MonthEOM)  then @dDocDatePlus1MonthEOM  else @dDocDatePlus1MonthEOM - datepart(day,@dDocDatePlus1MonthEOM) + @sDUEDTDS  end  else @I_vDOCDATE  end  if (@sDUETYPE = 2)    begin  while (dateadd(day, @sDUEGRPER, @O_dDISCDATE) >= @O_dDUEDATE)  begin  select @O_dDUEDATE = dateadd(month, 1, @O_dDUEDATE)  end  end   if (@sDUETYPE = 3)    begin  if datepart(year,@O_dDISCDATE) in ('1900','1901')   begin  while (dateadd(day, @sDUEGRPER, @I_vDOCDATE) >= @O_dDUEDATE)  begin  select @O_dDUEDATE = dateadd(month, 1, @O_dDUEDATE)  select @O_dDUEDATE = (dateadd(month,1,@O_dDUEDATE)) - datepart(day,(dateadd(month,1,@O_dDUEDATE)))  end  end  else  begin  while (dateadd(day, @sDUEGRPER, @O_dDISCDATE) >= @O_dDUEDATE)  begin  select @O_dDUEDATE = dateadd(month, 1, @O_dDUEDATE)  select @O_dDUEDATE = (dateadd(month,1,@O_dDUEDATE)) - datepart(day,(dateadd(month,1,@O_dDUEDATE)))  end  end  end   if (@sDUETYPE = 5)    begin  if (@O_dDUEDATE <= @O_dDISCDATE)  begin  select @O_dDUEDATE = dateadd(month, 1, @O_dDUEDATE)  end  end  end   break  end   return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCalcDueDatePM] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLKeyMSTR]  @I_cUserID char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,    @iStatus int,    @iRowcount int,  @PM_Trxent varchar(50),  @XPM_Cchecks varchar(50),  @PM_Payment varchar(50),  @tLoop tinyint  select  @O_iErrorState = 0,  @iStatus  = 0,  @iRowcount = 0  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL   or @I_cFileName1 is NULL  or @I_cSearchString1 is NULL  begin  select @O_iErrorState = 20849  break  end   exec @iStatus = DYNAMICS.dbo.smGetConstantString   'PM_TRXENT_STR',   @PM_Trxent output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantString  'XPM_CCHECKS_STR',   @XPM_Cchecks output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantString   'PM_PAYMENT_STR',   @PM_Payment output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  CNTRLNUM,  DOCTYPE,  VENDORID  from  PM00400  where  BCHSOURC = @PM_Trxent  and DCSTATUS = 1  and CNTRLTYP = 0  and  NOT EXISTS  (select   1  from  PM10000,  SY03100  where  PM10000.CCAMPYNM = PM00400.CNTRLNUM  and PM10000.CARDNAME = SY03100.CARDNAME  and SY03100.PYBLGRBX = 0 )  and  NOT EXISTS  (select   1  from  PM10000  where  PM10000.VCHNUMWK = PM00400.CNTRLNUM)   select @iRowcount = @@rowcount   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  CNTRLNUM,  DOCTYPE,  VENDORID  from  PM00400  where  BCHSOURC = @PM_Trxent  and DCSTATUS = 1  and CNTRLTYP = 1  and  NOT EXISTS  (select   1  from  PM10000,  SY03100  where  PM10000.CCAMPYNM = PM00400.CNTRLNUM  and PM10000.CARDNAME = SY03100.CARDNAME  and SY03100.PYBLGRBX = 1 )  and  NOT EXISTS  (select   1  from  PM10000   where  PM10000.CAMPMTNM = PM00400.CNTRLNUM)  and  NOT EXISTS  (select   1  from  PM10000  where  PM10000.CAMPYNBR = PM00400.CNTRLNUM)   if @@rowcount <> 0 or @iRowcount <> 0  begin  delete  PM00400  from  #CNTRLNUMTEMP  where  PM00400.CNTRLNUM = #CNTRLNUMTEMP.CNTRLNUM  and PM00400.DOCTYPE  = #CNTRLNUMTEMP.DOCTYPE   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10345,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  CNTRLNUM,  0,  VENDORID  from  PM00400  where  BCHSOURC = @PM_Payment  and  DCSTATUS = 1  and  NOT EXISTS  (select   1  from  PM10400  where  PM10400.PMNTNMBR = PM00400.CNTRLNUM  and PM10400.CNTRLTYP = PM00400.CNTRLTYP)   if @@rowcount <> 0  begin  delete  PM00400  where  BCHSOURC = @PM_Payment  and  DCSTATUS = 1  and  NOT EXISTS  (select   1  from  PM10400  where  PM10400.PMNTNMBR = PM00400.CNTRLNUM  and PM10400.CNTRLTYP = PM00400.CNTRLTYP)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10345,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  CNTRLNUM,  0,  VENDORID  from  PM00400  where  BCHSOURC = @XPM_Cchecks  and  DCSTATUS = 1  and  NOT EXISTS  (select  1  from  PM10300  where  PM10300.PMNTNMBR = PM00400.CNTRLNUM  and PM10300.CNTRLTYP = PM00400.CNTRLTYP)   if @@rowcount <> 0  begin  delete  PM00400  where  BCHSOURC = @XPM_Cchecks  and DCSTATUS = 1  and  NOT EXISTS  (select  1  from  PM10300  where  PM10300.PMNTNMBR = PM00400.CNTRLNUM  and PM10300.CNTRLTYP = PM00400.CNTRLTYP)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10345,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  CNTRLNUM,  0,  VENDORID  from  PM00400  where  CNTRLTYP = 2  and  DCSTATUS = 1  and  NOT EXISTS  (select   1  from  PM10300  where  PM10300.BCHSOURC = PM00400.BCHSOURC)   if @@rowcount <> 0  begin  delete  PM00400  where  CNTRLTYP = 2  and DCSTATUS = 1  and  NOT EXISTS  (select   1  from  PM10300  where  PM10300.BCHSOURC = PM00400.BCHSOURC)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10345,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into   #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select distinct  CNTRLNUM,  CNTRLTYP,  VENDORID  from  PM00400  where  DCSTATUS = 2  and  NOT EXISTS  (select  1  from  PM20000  where  PM20000.VCHRNMBR = PM00400.CNTRLNUM  and PM20000.DOCTYPE = PM00400.DOCTYPE)   if @@rowcount <> 0  begin  delete  PM00400  where  DCSTATUS = 2  and  NOT EXISTS  (select  1  from  PM20000  where  PM20000.VCHRNMBR = PM00400.CNTRLNUM  and PM20000.DOCTYPE = PM00400.DOCTYPE)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10345,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end   end   return(@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmCLKeyMSTR] TO [DYNGRP]
GO

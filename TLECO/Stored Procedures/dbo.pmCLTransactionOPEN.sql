SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLTransactionOPEN]   @I_cUserID char(15) = NULL,  @I_cFunctionalCurrency char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cFileName2 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @I_tMCRegistered tinyint  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,    @iStatus int,    @tLoop tinyint,  @OPEN int  select  @O_iErrorState = 0,  @iStatus  = 0  set nocount on  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL  or @I_cFunctionalCurrency is NULL  or @I_cFileName1 is NULL  or @I_cFileName2 is NULL  or @I_cSearchString1 is NULL  or @I_tMCRegistered is NULL  begin  select @O_iErrorState = 20851  break  end   exec @iStatus = DYNAMICS..smGetConstantInt  'OPEN',   @OPEN output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   create table #HISTTEMP(  VCHRNMBR varchar(21) not null,  DOCTYPE smallint not null,  VENDORID varchar(15) not null,  TRXSORCE varchar(13) not null,  CNTRLTYP smallint not null,  CURTRXAM numeric(19,5) not null,  DOCAMNT numeric(19,5) not null,  HISTORY tinyint not null )   if @I_tMCRegistered = 1  begin  insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  VCHRNMBR,  0,  VENDORID  from  PM20000  where  PM20000.CURNCYID <> ''  and  PM20000.CURNCYID <> @I_cFunctionalCurrency  and  NOT EXISTS  (select  VCHRNMBR  from  MC020103  where  PM20000.VCHRNMBR = MC020103.VCHRNMBR  and  PM20000.DOCTYPE = MC020103.DOCTYPE )   if @@rowcount <> 0  begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  17638,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    delete  PM20000  where  PM20000.CURNCYID <> ''  and  PM20000.CURNCYID <> @I_cFunctionalCurrency  and  NOT EXISTS  (select  VCHRNMBR  from  MC020103  where  PM20000.VCHRNMBR = MC020103.VCHRNMBR  and  PM20000.DOCTYPE = MC020103.DOCTYPE )  end  else  begin  update  PM20000  set  PM20000.CURNCYID  = ''  from  PM20000  where  PM20000.CURNCYID <> ''  and PM20000.CURNCYID <> @I_cFunctionalCurrency  and  NOT EXISTS  (select  VCHRNMBR  from  MC020103  where  PM20000.VCHRNMBR = MC020103.VCHRNMBR  and PM20000.DOCTYPE = MC020103.DOCTYPE )  end   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  VCHRNMBR,  0,  VENDORID  from  PM20000  where  PM20000.CURNCYID <> ''  and  PM20000.CURNCYID <> @I_cFunctionalCurrency  and  EXISTS  (select  1  from  MC020103  where  MC020103.DCSTATUS  <> @OPEN  and  PM20000.VCHRNMBR = MC020103.VCHRNMBR  and  PM20000.DOCTYPE = MC020103.DOCTYPE )   if @@rowcount <> 0  begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName2,  NULL,  18544,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   end    update  MC020103  set  MC020103.DCSTATUS  = @OPEN  from  PM20000  where  MC020103.DCSTATUS  <> @OPEN  and  PM20000.VCHRNMBR = MC020103.VCHRNMBR  and  PM20000.DOCTYPE = MC020103.DOCTYPE   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  VCHRNMBR,  0,  VENDORID  from  PM20000  where  NOT EXISTS  (select   CNTRLNUM  from   PM00400  where  PM20000.VCHRNMBR = PM00400.CNTRLNUM  and  PM20000.CNTRLTYP = PM00400.CNTRLTYP)   if @@rowcount <> 0  begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10364,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into   PM00400(  DOCNUMBR,  DCSTATUS,  DOCTYPE,  VENDORID,  DOCDATE,  DUEDATE,  DISCDATE,  BCHSOURC,  CHEKBKID,  TRXSORCE,  CNTRLTYP,  CNTRLNUM )  select  DOCNUMBR,  2,  DOCTYPE,  VENDORID,  DOCDATE,  DUEDATE,  DISCDATE,  BCHSOURC,  CHEKBKID,  TRXSORCE,  CNTRLTYP,  VCHRNMBR  from  PM20000  where  NOT EXISTS  (select   CNTRLNUM  from   PM00400  where  PM20000.VCHRNMBR = PM00400.CNTRLNUM  and  PM20000.CNTRLTYP = PM00400.CNTRLTYP )  update PM00400 set  DCSTATUS = 2,  DOCTYPE = TRX.DOCTYPE,  VENDORID = TRX.VENDORID,  DOCDATE = TRX.DOCDATE,  DUEDATE = TRX.DUEDATE,  DISCDATE = TRX.DISCDATE,  BCHSOURC = TRX.BCHSOURC,  CHEKBKID = CASE TRX.DOCTYPE   WHEN 6 THEN TRX.CHEKBKID   ELSE ''   END,  TRXSORCE = TRX.TRXSORCE from  PM20000 TRX where  TRX.CNTRLTYP = PM00400.CNTRLTYP and TRX.VCHRNMBR = PM00400.CNTRLNUM and   (PM00400.DCSTATUS <> 2  or PM00400.DOCTYPE <> TRX.DOCTYPE  or PM00400.VENDORID <> TRX.VENDORID  or PM00400.DOCDATE <> TRX.DOCDATE  or PM00400.DUEDATE <> TRX.DUEDATE  or PM00400.DISCDATE <> TRX.DISCDATE  or PM00400.BCHSOURC <> TRX.BCHSOURC  or PM00400.CHEKBKID <> TRX.CHEKBKID  or PM00400.TRXSORCE <> TRX.TRXSORCE )   INSERT INTO #CNTRLNUMTEMP(  CNTRLNUM  , DOCTYPE  , VENDORID )  SELECT DISTINCT  VCHRNMBR  , 0  , VENDORID  FROM PM20000  WHERE TEN99AMNT <> 0 and (TEN99TYPE = 0 and TEN99BOXNUMBER = 0) and DOCTYPE <= 3   IF @@ROWCOUNT <> 0  BEGIN  EXEC @iStatus = smCreateErrorLogRecord  @I_cUserID  , @I_cFileName1  , @I_cSearchString1  , 11160  , @O_iErrorState OUTPUT   SELECT @iError = @@ERROR  IF @iStatus = 0 and @iError <> 0  SELECT @iStatus = @iError  IF @iStatus <> 0 or @O_iErrorState <> 0  BREAK  END  INSERT INTO #CNTRLNUMTEMP(  CNTRLNUM  , DOCTYPE  , VENDORID )  SELECT DISTINCT  VCHRNMBR  , 0  , VENDORID  FROM PM20000  WHERE TEN99AMNT <> 0 and TEN99TYPE > 1 and TEN99BOXNUMBER = 0 and DOCTYPE <= 3  IF @@ROWCOUNT <> 0  BEGIN  EXEC @iStatus = smCreateErrorLogRecord  @I_cUserID  , @I_cFileName1  , @I_cSearchString1  , 11163  , @O_iErrorState OUTPUT   SELECT @iError = @@ERROR  IF @iStatus = 0 and @iError <> 0  SELECT @iStatus = @iError  IF @iStatus <> 0 or @O_iErrorState <> 0  BREAK  END   INSERT INTO #CNTRLNUMTEMP(  CNTRLNUM  , DOCTYPE  , VENDORID )  SELECT DISTINCT  VCHRNMBR  , 0  , VENDORID  FROM PM20000  WHERE TEN99AMNT <> 0 and TEN99TYPE = 0 and TEN99BOXNUMBER <> 0 and DOCTYPE <= 3  IF @@ROWCOUNT <> 0  BEGIN  EXEC @iStatus = smCreateErrorLogRecord  @I_cUserID  , @I_cFileName1  , @I_cSearchString1  , 11164  , @O_iErrorState OUTPUT   SELECT @iError = @@ERROR  IF @iStatus = 0 and @iError <> 0  SELECT @iStatus = @iError  IF @iStatus <> 0 or @O_iErrorState <> 0  BREAK  END end   set nocount off  return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[pmCLTransactionOPEN] TO [DYNGRP]
GO

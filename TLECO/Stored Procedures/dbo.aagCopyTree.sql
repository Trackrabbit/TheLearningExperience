SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[aagCopyTree]  @iFromTreeID int = NULL,  @iToTreeID int = NULL,  @iCopyOption smallint = NULL,    @oStatus smallint = NULL out as  declare @transaction tinyint,   @retCode int,  @dbName char(32),  @companyID smallint,  @companyStatus smallint,  @noteIndex numeric(19,5),  @nodeID int,  @node char(50),  @level int,  @parentNodeID int,  @order int  if ((@iFromTreeID is NULL) or (@iToTreeID is NULL) or (@iCopyOption is NULL))  begin select @oStatus = 27000 return end  select  @transaction = 0,  @retCode = 0,  @dbName = '',  @companyID = 0,  @companyStatus = 0,  @noteIndex = 0,  @nodeID = 0,  @node = '',  @level = 0,  @parentNodeID = 0,  @order = 0  select @dbName = db_name() exec @retCode = DYNAMICS.dbo.aagGetCompanyStatus @dbName, @companyID out, @companyStatus out, @oStatus out if ((@retCode <> 0) or (@oStatus <> 0)) return @retCode  if not exists(select aaTreeID from AAG00600 where aaTreeID = @iFromTreeID) return if not exists(select aaTreeID from AAG00600 where aaTreeID = @iToTreeID) return  if (@@trancount = 0) begin select @transaction = 1 begin transaction end  delete SY03900 from SY03900 join AAG00601 on SY03900.NOTEINDX = AAG00601.NOTEINDX where aaTreeID = @iToTreeID  delete from AAG00601 where aaTreeID = @iToTreeID  declare C cursor fast_forward for   select aaNodeID, aaNode, aaLevel, aaParentNodeID, aaOrder  from AAG00601 where aaTreeID = @iFromTreeID  open C fetch next from C into @nodeID, @node, @level, @parentNodeID, @order while (@@fetch_status <> -1) begin  exec @retCode = DYNAMICS.dbo.smGetNextNoteIndex @companyID, 1, @noteIndex out, @oStatus out   if ((@retCode <> 0) or (@oStatus <> 0))   begin close C deallocate C if (@transaction = 1) rollback transaction return @retCode end   insert AAG00601 (aaTreeID, aaNodeID, aaNode, aaLevel, aaParentNodeID, aaOrder, NOTEINDX)  select @iToTreeID, @nodeID, @node, @level, @parentNodeID, @order, @noteIndex  fetch next from C into @nodeID, @node, @level, @parentNodeID, @order end close C deallocate C  if (@iCopyOption = 0)   update AAG00602 set aaNodeID = 1 where aaTreeID = @iToTreeID else begin  delete from AAG00602 where aaTreeID = @iToTreeID   insert AAG00602(aaTreeID, aaNodeID, aaMstrID)  select @iToTreeID, aaNodeID, aaMstrID  from AAG00602 where aaTreeID = @iFromTreeID  end  if (@transaction = 1) commit transaction  return 0     
GO
GRANT EXECUTE ON  [dbo].[aagCopyTree] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glVerifyTRXDate]  @I_sSeries                                      smallint        = NULL,  @I_cOrigin                                      char(50)        = NULL,  @I_dDate                                        datetime        = NULL,  @I_dUserDate datetime = NULL,  @IO_sPeriod                             smallint        = NULL  output,  @IO_sYear                                       smallint        = NULL  output,  @IO_sClosingYear                        smallint        = NULL  output,  @IO_tClosed                             tinyint = NULL  output,  @IO_iError                                      int             = NULL  output,  @O_tPostingToHistory                    tinyint = NULL  output,  @O_tPostBackToHistOver1Year     tinyint = NULL  output,  @O_tOpenYearExists                      tinyint = NULL  output,  @O_tFirstTwoOpenYears                   tinyint = NULL  output,  @O_iErrorState                          int     = NULL  output,  @O_iPostToInvalidBudget int  = NULL output,   @I_iJournalEntry int  = NULL output  as  declare   @dLastDate                      datetime,  @iStatus                        int,  @dFirstFiscalDayO       datetime,  @dFirstFiscalDayH       datetime,  @sTempYear              smallint,  @TRUE                   int,  @FALSE                  int,  @iError int  select   @IO_tClosed = 0,  @O_tPostingToHistory = 0,  @O_tPostBackToHistOver1Year = 0,  @O_tOpenYearExists = 0,  @O_tFirstTwoOpenYears = 1,  @O_iErrorState = 0,  @O_iPostToInvalidBudget=0   if  (DATEPART(yy,@I_dDate)  = 1900)  begin  select  @O_iErrorState = -20177  select @IO_iError = 2  return  end  if      ( (@I_sSeries is NULL) or   (@I_cOrigin is NULL) or  (@I_dDate is  NULL) or  (@I_dUserDate is NULL) or  (@IO_sPeriod is NULL) or  (@IO_sYear is NULL) or  (@IO_sClosingYear is NULL ) or  (@IO_tClosed is NULL) or  (@IO_iError is NULL) ) begin  select  @O_iErrorState = 20176  return end  exec @iStatus = DYNAMICS..smGetConstantInt  'TRUE',  @TRUE           output,  @O_iErrorState  output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if ( (@iStatus <>  0) or (@O_iErrorState <> 0) )  return(@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt  'FALSE',  @FALSE          output,  @O_iErrorState  output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return(@iStatus)  exec @iStatus = glCalculateGLPeriod  @I_sSeries,  @I_cOrigin,  @I_dDate,  @I_dUserDate,  @IO_sPeriod     output,  @IO_tClosed     output,  @IO_sYear               output,  @IO_iError              output,  @O_iErrorState  output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return(@iStatus)  select  @O_tPostingToHistory = HISTORYR from   SY40101 where  YEAR1 = @IO_sYear  if @@rowcount = 0 begin  select          @O_iErrorState = -20275  return end  if @O_tPostingToHistory = @TRUE  begin  select  @dFirstFiscalDayH = FSTFSCDY,  @dLastDate = LSTFSCDY  from  SY40101  where  HISTORYR = @TRUE   and     YEAR1 =  (       select  MAX(YEAR1)   from   SY40101   where   HISTORYR = @TRUE  )   if @@rowcount = 0  begin  select          @O_iErrorState = -20275  return  end   if @I_dDate < @dFirstFiscalDayH   begin  select @O_tPostBackToHistOver1Year = @TRUE  end   select @dFirstFiscalDayO =  DATEADD(dd,1,@dLastDate)   select  @sTempYear = YEAR1  from  SY40101  where  FSTFSCDY = @dFirstFiscalDayO and  HISTORYR = @FALSE   if @@rowcount = 0  begin  select          @O_iErrorState = -20275  return  end  else  begin  select          @O_tOpenYearExists = @TRUE,  @IO_sClosingYear = @sTempYear  end  end  if @O_tPostBackToHistOver1Year <> @TRUE    begin   exec @iStatus = glVerifyBUDPeriod  @I_iJournalEntry  if @iStatus <> 0   begin  select @O_iPostToInvalidBudget = 1  return  end  end  return    
GO
GRANT EXECUTE ON  [dbo].[glVerifyTRXDate] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icpmcGetRoundingAccount]   @I_cICID    char(5)  = NULL,  @I_cCurrencyID   char(15)  = NULL,  @I_cRateTypeID char(15) = NULL,  @O_iRoundIndex int  = NULL output,  @O_sAccountType smallint = NULL output,  @O_iErrorState      int             = NULL  output as   declare  @tTransaction    tinyint,  @tLoop    tinyint,  @sRNDDIFFACCT smallint,  @sFINANCIAL smallint,  @iRelationID int,  @sUserLevel smallint,  @iAccessAllAccounts int,  @tALSRegistered tinyint,  @cCompanyID char(5),  @TRUE tinyint,  @vAccountFilterTable varchar(255),  @vRoundIndex varchar(15),  @iStatus int,  @iError int  select  @O_iErrorState = 0,  @O_iRoundIndex = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction  end   while (@tLoop is NULL) begin   select @tLoop = 1    if     @I_cICID is NULL or  @I_cCurrencyID is NULL or  @I_cRateTypeID is NULL   begin  select @O_iErrorState = 20904   break  end    select   @TRUE   = 1,  @sRNDDIFFACCT  = 900,  @sFINANCIAL  = 2,  @iRelationID  = 0,  @sUserLevel  = 0,  @iAccessAllAccounts  = 0,  @tALSRegistered  = 0,  @iStatus  = 0,  @iError   = 0,  @vRoundIndex  = '0'   select @cCompanyID = db_name()   exec @iStatus = DYNAMICS..smGetAccountLevelSecurityInfo  @cCompanyID,  @iRelationID output,  @sUserLevel  output,  @iAccessAllAccounts output,  @tALSRegistered output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   select @O_iRoundIndex =   isnull((select distinct  MC40301.RNDDIFF  from   MC40301  where   MC40301.CURNCYID  = @I_cCurrencyID   and  MC40301.RATETPID  = @I_cRateTypeID), 0)   if @O_iRoundIndex = 0      select @O_iRoundIndex =   isnull((select   MC40201.RNDDIFF   from   MC40201   where  MC40201.CURNCYID = @I_cCurrencyID), 0)    if @O_iRoundIndex = 0      select @O_iRoundIndex =   isnull((select   ACTINDX  from   SY01100  where  SEQNUMBR = @sRNDDIFFACCT  and SERIES   = @sFINANCIAL), 0)    if @O_iRoundIndex <> 0  begin  if @tALSRegistered = @TRUE  begin  if @iAccessAllAccounts = @TRUE  begin  select @vAccountFilterTable = 'GL00100'  end  else  begin  select @vAccountFilterTable =   case when @sUserLevel = 0 then  'GL00100F1'  else  'GL00100F' + str(@sUserLevel,1)  end  end  end  else  begin  select @vAccountFilterTable = 'GL00100'  end   delete #accttype   select @vRoundIndex = convert(varchar,@O_iRoundIndex)   exec('insert into #accttype select ACCTTYPE from ' +  @vAccountFilterTable + ' where ACTINDX = ' + @vRoundIndex )   select @O_sAccountType =   (select   AccountType  from   #accttype)  end   end   if @O_iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return    
GO
GRANT EXECUTE ON  [dbo].[icpmcGetRoundingAccount] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpUpdateOriginalJE]  @iJournalEntry int  = NULL,  @iTrxYear int  = NULL,  @iRecurTrxSeq numeric(19,5) = NULL,  @iCorBackJournalEntry int  = NULL,  @iCorBackTrxYear int  = NULL,  @iCorTrxType int  = NULL  as  declare  @lTrxStarted tinyint,  @lControlLoop tinyint,  @lReturnStatus int,  @lSqlError int,  @lError int,  @lOrigin char(50),  @cDBName char(5),  @cGLREVPrefix char(5),  @lPeriod smallint,  @lYear smallint,  @lClosingYear smallint,  @lClosed tinyint,  @lPostingToHist tinyint,  @lPostHist1Year tinyint,  @lOpenYearExists tinyint,  @lFirstTwoOpenYears tinyint,  @lDateError int,  @CORRECTING int,  @BACKOUT int  if @@trancount = 0 begin  select @lTrxStarted = 1  begin transaction end  while (@lControlLoop is NULL) begin  select @lControlLoop = 1   if @iJournalEntry is NULL or  @iTrxYear is NULL or  @iRecurTrxSeq is NULL or  @iCorBackJournalEntry is NULL or  @iCorBackTrxYear is NULL or  @iCorTrxType is NULL  begin  select @lReturnStatus = 1  break  end   select   @CORRECTING = 2,  @BACKOUT = 1   select @cDBName = db_name()   exec @lReturnStatus = DYNAMICS..smGetMsgString  15575,   @cDBName,   @cGLREVPrefix   output,  @lError output   exec @lReturnStatus = DYNAMICS..smGetConstantString  'TRX_SOURCE_GL_GENERAL_ENTRY',  @lOrigin output,  @lError output   select @lSqlError = @@error  if @lSqlError <> 0  select @lReturnStatus = @lSqlError   if @lReturnStatus <> 0  break   select  @lPostingToHist = HISTORYR  from  SY40101  where  YEAR1 = @iTrxYear   if @lPostingToHist = 1  begin   if @iCorTrxType = @CORRECTING  begin  update   GL30000  set   Correcting_JE = @iCorBackJournalEntry,  Correcting_JE_Year = @iCorBackTrxYear  where   JRNENTRY = @iJournalEntry and (RCTRXSEQ = @iRecurTrxSeq or   (RCTRXSEQ = (@iRecurTrxSeq + 1) and SUBSTRING(TRXSORCE,1,5) = @cGLREVPrefix))  end   else if @iCorTrxType = @BACKOUT  begin  update   GL30000  set   Back_Out_JE = @iCorBackJournalEntry,  Back_Out_JE_Year = @iCorBackTrxYear  where   JRNENTRY = @iJournalEntry and (RCTRXSEQ = @iRecurTrxSeq or   (RCTRXSEQ = (@iRecurTrxSeq + 1) and SUBSTRING(TRXSORCE,1,5) = @cGLREVPrefix))  end   else  begin   select @lReturnStatus = 1  break  end   end     else  begin   if @iCorTrxType = @CORRECTING  begin  update   GL20000  set   Correcting_JE = @iCorBackJournalEntry,  Correcting_JE_Year = @iCorBackTrxYear  where   JRNENTRY = @iJournalEntry and (RCTRXSEQ = @iRecurTrxSeq or   (RCTRXSEQ = (@iRecurTrxSeq + 1) and SUBSTRING(TRXSORCE,1,5) = @cGLREVPrefix))  end   else if @iCorTrxType = @BACKOUT  begin  update   GL20000  set   Back_Out_JE = @iCorBackJournalEntry,  Back_Out_JE_Year = @iCorBackTrxYear  where   JRNENTRY = @iJournalEntry and (RCTRXSEQ = @iRecurTrxSeq or   (RCTRXSEQ = (@iRecurTrxSeq + 1) and SUBSTRING(TRXSORCE,1,5) = @cGLREVPrefix))  end   else  begin  select @lReturnStatus = 1  break  end   end     select @lSqlError = @@error  if @lSqlError <> 0  select @lReturnStatus = @lSqlError  end   return (@lReturnStatus)    
GO
GRANT EXECUTE ON  [dbo].[glpUpdateOriginalJE] TO [DYNGRP]
GO

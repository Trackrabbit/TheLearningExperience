SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateCreditCard] @I_vRCVBGRBX smallint = 0,   @I_vCARDNAME char(15),   @I_vCBPAYBLE  tinyint = 0,   @I_vCBRCVBLE tinyint = 0,   @I_vCKBKNUM1 char(15) = '',   @I_vACTNUMST char(75) = '',   @I_vVENDORID  char(15) = '',   @I_vRequesterTrx smallint = 0,   @I_vUSERID char(15) = '',   @I_vCREATDDT datetime = null,  @I_vMODIFDT datetime = null,  @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output, @oErrString  varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @ACTINDX int,       @ACTIVE tinyint,  @ACCTTYPE smallint,  @nNextNoteIndex numeric(19,5),     @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,      @iStatus int,        @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @iError int       select  @sCompanyID = 0,  @ACTINDX = 0,  @ACTIVE = 0,  @ACCTTYPE = 0,  @iStatus = 0,  @iAddCodeErrState =0,  @iCustomState = 0,  @O_oErrorState = 0,  @O_iErrorState = 0      if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateCreditCardPre  @I_vRCVBGRBX output,   @I_vCARDNAME output,   @I_vCBPAYBLE output,   @I_vCBRCVBLE output,   @I_vCKBKNUM1 output,   @I_vACTNUMST output,   @I_vVENDORID output,   @I_vRequesterTrx output,  @I_vUSERID output,  @I_vCREATDDT output,  @I_vMODIFDT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3772     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vRCVBGRBX is null or  @I_vCARDNAME is null or  @I_vCBPAYBLE is null or  @I_vCBRCVBLE is null or  @I_vCKBKNUM1 is null or  @I_vACTNUMST is null or  @I_vVENDORID is null or  @I_vRequesterTrx is null or  @I_vUSERID is null or   @I_vUSRDEFND1 is null or  @I_vUSRDEFND2 is null or  @I_vUSRDEFND3 is null or  @I_vUSRDEFND4 is null or  @I_vUSRDEFND5 is null  ) begin  select @O_iErrorState = 3773    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vCKBKNUM1 = UPPER(@I_vCKBKNUM1),  @I_vVENDORID = UPPER(@I_vVENDORID)  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 3774   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vCARDNAME = '' ) begin  select @O_iErrorState = 3775    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRCVBGRBX < 0 or @I_vRCVBGRBX > 1 )  begin  select @O_iErrorState = 3776     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vCBPAYBLE < 0 or @I_vCBPAYBLE > 1 )  begin  select @O_iErrorState = 3777     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vCBRCVBLE < 0 or @I_vCBRCVBLE > 1 ) begin  select @O_iErrorState = 3778     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRCVBGRBX = 0 and @I_vCKBKNUM1 = '' ) begin  select @O_iErrorState = 3779     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vCKBKNUM1 <> '' ) begin  if (not exists (select 1 from CM00100 (nolock) where CHEKBKID = @I_vCKBKNUM1 ))  begin  select @O_iErrorState = 3780     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vRCVBGRBX = 1 and @I_vACTNUMST = '' ) begin  select @O_iErrorState = 3781     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vACTNUMST <> '' ) begin  select @ACTINDX = isnull(ACTINDX,0) from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST   if (@ACTINDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @ACTINDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 9544     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 9545     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 3782     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vCBPAYBLE = 1 and @I_vVENDORID = '' ) begin  select @O_iErrorState = 3783     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vVENDORID <> '' ) begin  if (not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID ))  begin  select @O_iErrorState = 3784     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vCBPAYBLE = 0 and @I_vVENDORID <> '' ) begin  select @O_iErrorState = 3785     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3786     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (not exists (select 1 from SY03100 (nolock) where CARDNAME = @I_vCARDNAME))  begin  insert into SY03100  (  PYBLGRBX,  RCVBGRBX,  CARDNAME,  CBPAYBLE,  CBRCVBLE,  CKBKNUM1,  CKBKNUM2,  ACTINDX,  VENDORID,  NOTEINDX,  LSTUSRED,  CREATDDT,  MODIFDT  )  select  0,        @I_vRCVBGRBX,       @I_vCARDNAME,       @I_vCBPAYBLE,       @I_vCBRCVBLE,       @I_vCKBKNUM1,       '',        @ACTINDX,       @I_vVENDORID,       @nNextNoteIndex,      @I_vUSERID,       case        WHEN @I_vCREATDDT is null  THEN convert(varchar(12),getdate())  ELSE @I_vCREATDDT  end,   case         WHEN @I_vMODIFDT is null  THEN convert(varchar(12),getdate())   ELSE @I_vMODIFDT   end   if (@@error <> 0)  begin  select @O_iErrorState = 3787    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 3788    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateCreditCardPost  @I_vRCVBGRBX,  @I_vCARDNAME,  @I_vCBPAYBLE,  @I_vCBRCVBLE,  @I_vCKBKNUM1,  @I_vACTNUMST,  @I_vVENDORID,  @I_vRequesterTrx,  @I_vUSERID,  @I_vCREATDDT,  @I_vMODIFDT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4547    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateCreditCard] TO [DYNGRP]
GO

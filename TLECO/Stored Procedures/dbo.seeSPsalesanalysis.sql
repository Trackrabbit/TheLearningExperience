SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[seeSPsalesanalysis]  @StCustNmbr char (31), @EnCustNmbr char (31), @View smallint, @Year smallint = 0, @StPeridID smallint = 0, @EnPeridID smallint = 0, @StCUSTNAME char (65) = '', @EnCUSTNAME char (65) = '', @StCLASSID char (15) = '', @EnCLASSID char (15) = '', @StSALESPERSONID char (15) = '', @EnSALESPERSONID char (15) = '', @StSALESTERRID char (15) = '', @EnSALESTERRID char (15) = '',  @StSTATE char (29) = '', @EnSTATE char (29) = '', @StUSERDEF1 char (21) = '', @EnUSERDEF1 char (21) = '', @SORT smallint = 0  as  set nocount on  If (@StCustNmbr is NULL or @StCustNmbr = '')  begin  set @StCustNmbr = ''  end If (@EnCustNmbr is NULL or @EnCustNmbr = '')  begin  set @EnCustNmbr = 'þþþþþþþþþþþþþþþ'  end If (@Year is NULL or @Year = '')  begin  set @Year = 0  end If (@StPeridID is NULL or @StPeridID = '')  begin  set @StPeridID = 0  end If (@EnPeridID is NULL or @EnPeridID = '')  begin  set @EnPeridID = 365  end If (@StCUSTNAME is NULL or @StCUSTNAME = '')  begin  set @StCUSTNAME = ''  end If (@EnCUSTNAME is NULL or @EnCUSTNAME = '')  begin  set @EnCUSTNAME = 'þþþþþþþþþþþþþþþ'  end If (@StCLASSID is NULL or @StCLASSID = '')  begin  set @StCLASSID = ''  end If (@EnCLASSID is NULL or @EnCLASSID = '')  begin  set @EnCLASSID = 'þþþþþþþþþþþþþþþ'  end If (@StSALESPERSONID is NULL or @StSALESPERSONID = '')  begin  set @StSALESPERSONID = ''  end If (@EnSALESPERSONID is NULL or @EnSALESPERSONID = '')  begin  set @EnSALESPERSONID = 'þþþþþþþþþþþþþþþ'  end If (@StSALESTERRID is NULL or @StSALESTERRID = '')  begin  set @StSALESTERRID = ''  end If (@EnSALESTERRID is NULL or @EnSALESTERRID = '')  begin  set @EnSALESTERRID = 'þþþþþþþþþþþþþþþ'  end  If (@StSTATE is NULL or @StSTATE = '')  begin  set @StSTATE = ''  end If (@EnSTATE is NULL or @EnSTATE = '')  begin  set @EnSTATE = 'þþþþþþþþþþþþþþþ'  end If (@StUSERDEF1 is NULL or @StUSERDEF1 = '')  begin  set @StUSERDEF1 = ''  end If (@EnUSERDEF1 is NULL or @EnUSERDEF1 = '')  begin  set @EnUSERDEF1 = 'þþþþþþþþþþþþþþþ'  end  If OBJECT_ID('temp..#SalesAnalysis') is NULL  Begin  create table #SalesAnalysis ( CUSTOMERID char (31) not null default '', CUSTOMERNAME char (101) not null default '', COUNT_INVOICES_LTD int not null default 0, GROSSPROFIT_LTD numeric (19,5) not null default .00000, PROFITMARGIN_LTD numeric (19,5) not null default .00000, SALES_LTD numeric (19,5) not null default .00000, COST_LTD            numeric (19,5) not null default .00000, CASH_LTD            numeric (19,5) not null default .00000, RETURNS_LTD         numeric (19,5) not null default .00000, WRITEOFFS_LTD       numeric (19,5) not null default .00000, DISCOUNTS_LTD       numeric (19,5) not null default .00000, FINANCECHARGES_LTD  numeric (19,5) not null default .00000, WAIVED_LTD          numeric (19,5) not null default .00000, COUNT_INVOICES_YTD int not null default 0, GROSSPROFIT_YTD     numeric (19,5) not null default .00000, PROFITMARGIN_YTD    numeric (19,5) not null default .00000, SALES_YTD           numeric (19,5) not null default .00000, COST_YTD            numeric (19,5) not null default .00000, CASH_YTD            numeric (19,5) not null default .00000, RETURNS_YTD         numeric (19,5) not null default .00000, WRITEOFFS_YTD       numeric (19,5) not null default .00000, DISCOUNTS_YTD       numeric (19,5) not null default .00000, FINANCECHARGES_YTD  numeric (19,5) not null default .00000, WAIVED_YTD          numeric (19,5) not null default .00000, COUNT_INVOICES_LYTD int not null default 0, GROSSPROFIT_LYTD    numeric (19,5) not null default .00000, PROFITMARGIN_LYTD   numeric (19,5) not null default .00000, SALES_LYTD          numeric (19,5) not null default .00000, COST_LYTD           numeric (19,5) not null default .00000, CASH_LYTD           numeric (19,5) not null default .00000, RETURNS_LYTD        numeric (19,5) not null default .00000, WRITEOFFS_LYTD      numeric (19,5) not null default .00000, DISCOUNTS_LYTD      numeric (19,5) not null default .00000, FINANCECHARGES_LYTD numeric (19,5) not null default .00000, WAIVED_LYTD         numeric (19,5) not null default .00000, SALES_PERCENT       numeric (19,5) not null default .00000, COST_PERCENT        numeric (19,5) not null default .00000, CASH_PERCENT        numeric (19,5) not null default .00000, RETURNS_PERCENT     numeric (19,5) not null default .00000, WRITEOFFS_PERCENT   numeric (19,5) not null default .00000, DISCOUNTS_PERCENT   numeric (19,5) not null default .00000, FINANCECHARGES_PERCENT  numeric (19,5) not null default .00000, WAIVED_PERCENT      numeric (19,5) not null default .00000, CLASSID char (15) not null default '', SALESTERRITORY char (15) not null default '', SALESPERSON char (61) not null default '', [STATE]             char (29) not null default '',  [TYPE]    char (21) not null default '')  end  delete from #SalesAnalysis  if @View = 1 begin  insert into #SalesAnalysis(  CUSTOMERID,CUSTOMERNAME,COUNT_INVOICES_LTD,GROSSPROFIT_LTD,PROFITMARGIN_LTD,SALES_LTD,COST_LTD,CASH_LTD,  RETURNS_LTD,WRITEOFFS_LTD,DISCOUNTS_LTD,FINANCECHARGES_LTD,WAIVED_LTD,COUNT_INVOICES_YTD,GROSSPROFIT_YTD,PROFITMARGIN_YTD,  SALES_YTD,COST_YTD,CASH_YTD,RETURNS_YTD,WRITEOFFS_YTD,DISCOUNTS_YTD,FINANCECHARGES_YTD,WAIVED_YTD,  COUNT_INVOICES_LYTD,GROSSPROFIT_LYTD,PROFITMARGIN_LYTD,SALES_LYTD,COST_LYTD,CASH_LYTD,RETURNS_LYTD,WRITEOFFS_LYTD,  DISCOUNTS_LYTD,FINANCECHARGES_LYTD,WAIVED_LYTD,SALES_PERCENT,COST_PERCENT,CASH_PERCENT,RETURNS_PERCENT,WRITEOFFS_PERCENT,  DISCOUNTS_PERCENT,FINANCECHARGES_PERCENT,WAIVED_PERCENT,CLASSID,SALESTERRITORY,SALESPERSON,[STATE],[TYPE])   select b.CUSTNMBR, c.CUSTNAME, b.TTLINLTD, (b.TTLSLLTD - b.TCOSTLTD - b.TTLRTLTD), .000000, b.TTLSLLTD, b.TCOSTLTD, b.TCSHRLTD,   b.TTLRTLTD, b.WROFSLIF, b.TDTKNLTD, b.TFNCHLTD, b.TWVFCLTD, b.TTLINYTD,(b.TTLSLYTD - b.TCOSTYTD - b.TTLRTYTD), .00000,  b.TTLSLYTD, b.TCOSTYTD, b.TCSHRYTD, b.TTLRTYTD, b.WROFSYTD, b.TDTKNYTD, b.TFNCHYTD, b.TWVFCYTD,  b.TTLINLYR, .00000, .00000, b.TTLSLLYR, b.TCOSTLYR, b.TCSHRLYR, b.TTLRTLYR, b.WROFSLYR,  b.TDTKNLYR, b.TFNCHLYR, b.TWVFCLYR,   case when b.TTLSLLYR = 0 then 0 else round(((b.TTLSLYTD/b.TTLSLLYR)* 100),2) end,   case when b.TCOSTLYR = 0 then 0 else round(((b.TCOSTYTD/b.TCOSTLYR)* 100),2) end,   case when b.TCSHRLYR = 0 then 0 else round(((b.TCSHRYTD/b.TCSHRLYR)* 100),2) end,   case when b.TTLRTLYR = 0 then 0 else round(((b.TTLRTYTD/b.TTLRTLYR)* 100),2) end,   case when b.WROFSLYR = 0 then 0 else round(((b.WROFSYTD/b.WROFSLYR)* 100),2) end,  case when b.TDTKNLYR = 0 then 0 else round(((b.TDTKNYTD/b.TDTKNLYR)* 100),2) end,   case when b.TFNCHLYR = 0 then 0 else round(((b.TFNCHYTD/b.TFNCHLYR)* 100),2) end,   case when b.TWVFCLYR = 0 then 0 else round(((b.TWVFCYTD/b.TWVFCLYR)* 100),2) end,   c.CUSTCLAS, c.SALSTERR, c.SLPRSNID, c.STATE, c.USERDEF1  from RM00103 b  join RM00101 c on b.CUSTNMBR = c.CUSTNMBR  where b.CUSTNMBR between @StCustNmbr and @EnCustNmbr  and c.CUSTNAME between @StCUSTNAME and @EnCUSTNAME  and c.CUSTCLAS between @StCLASSID and @EnCLASSID  and c.SLPRSNID between @StSALESPERSONID and @EnSALESPERSONID  and c.SALSTERR between @StSALESTERRID and @EnSALESTERRID  and c.STATE between @StSTATE and @EnSTATE  and c.USERDEF1 between @StUSERDEF1 and @EnUSERDEF1   update #SalesAnalysis set PROFITMARGIN_LTD = round(((GROSSPROFIT_LTD/(SALES_LTD-RETURNS_LTD)) * 100),2),   PROFITMARGIN_YTD = round(((GROSSPROFIT_YTD/(SALES_YTD-RETURNS_YTD))* 100),2)  end  if @View = 2 begin  If OBJECT_ID('temp..#SalesAnalysisFiscalSummary') is NULL  Begin  create table #SalesAnalysisFiscalSummary (  CUSTNMBR char (31) not null default '',  YEAR1 smallint not null default 1900,  HISTTYPE smallint not null default 0,  NUMOFINV int not null default 0,  SMRYSALS numeric (19,5) not null default '',  SMRYCRCD numeric (19,5) not null default '',  SMRYCOST numeric (19,5) not null default '',  SMRYWROF numeric (19,5) not null default '',  SMRYDISC numeric (19,5) not null default '',  SMRYRTNG numeric (19,5) not null default '',  SMRYFCHR numeric (19,5) not null default '',  SMRYWFCH numeric (19,5) not null default '',  SMRYRTRN numeric (19,5) not null default '')  end  delete from #SalesAnalysisFiscalSummary  insert into #SalesAnalysisFiscalSummary(  CUSTNMBR,YEAR1,HISTTYPE,NUMOFINV,SMRYSALS,SMRYCRCD,SMRYCOST,  SMRYWROF,SMRYDISC,SMRYRTNG,SMRYFCHR,SMRYWFCH,SMRYRTRN)  select CUSTNMBR, YEAR1, HISTTYPE, sum(NUMOFINV), sum(SMRYSALS), sum(SMRYCRCD), sum(SMRYCOST),  sum(SMRYWROF), sum(SMRYDISC), sum(SMRYRTNG), sum(SMRYFCHR), sum(SMRYWFCH), sum(SMRYRTRN)  from RM00104  where CUSTNMBR between @StCustNmbr and @EnCustNmbr  and YEAR1 = @Year  and PERIODID between @StPeridID and @EnPeridID  and HISTTYPE = 1  group by CUSTNMBR, YEAR1, HISTTYPE   If OBJECT_ID('temp..#SalesAnalFisSumLastYear') is NULL  Begin  create table #SalesAnalFisSumLastYear (  CUSTNMBR char (31) not null default '',  YEAR1 smallint not null default 1900,  HISTTYPE smallint not null default 0,  NUMOFINV int not null default 0,  SMRYSALS numeric (19,5) not null default '',  SMRYCRCD numeric (19,5) not null default '',  SMRYCOST numeric (19,5) not null default '',  SMRYWROF numeric (19,5) not null default '',  SMRYDISC numeric (19,5) not null default '',  SMRYRTNG numeric (19,5) not null default '',  SMRYFCHR numeric (19,5) not null default '',  SMRYWFCH numeric (19,5) not null default '',  SMRYRTRN numeric (19,5) not null default '')  end  delete from #SalesAnalFisSumLastYear  insert into #SalesAnalFisSumLastYear(  CUSTNMBR,YEAR1,HISTTYPE,NUMOFINV,SMRYSALS,SMRYCRCD,SMRYCOST,  SMRYWROF,SMRYDISC,SMRYRTNG,SMRYFCHR,SMRYWFCH,SMRYRTRN)  select CUSTNMBR, YEAR1, HISTTYPE, sum(NUMOFINV), sum(SMRYSALS), sum(SMRYCRCD), sum(SMRYCOST),  sum(SMRYWROF), sum(SMRYDISC), sum(SMRYRTNG), sum(SMRYFCHR), sum(SMRYWFCH), sum(SMRYRTRN)  from RM00104   where CUSTNMBR between @StCustNmbr and @EnCustNmbr  and YEAR1 = (@Year - 1)  and PERIODID between @StPeridID and @EnPeridID  and HISTTYPE = 1  group by CUSTNMBR, YEAR1, HISTTYPE   insert into #SalesAnalysis(  CUSTOMERID,CUSTOMERNAME,COUNT_INVOICES_LTD,GROSSPROFIT_LTD,PROFITMARGIN_LTD,SALES_LTD,COST_LTD,CASH_LTD,  RETURNS_LTD,WRITEOFFS_LTD,DISCOUNTS_LTD,FINANCECHARGES_LTD,WAIVED_LTD,COUNT_INVOICES_YTD,GROSSPROFIT_YTD,PROFITMARGIN_YTD,  SALES_YTD,COST_YTD,CASH_YTD,RETURNS_YTD,WRITEOFFS_YTD,DISCOUNTS_YTD,FINANCECHARGES_YTD,WAIVED_YTD,  COUNT_INVOICES_LYTD,GROSSPROFIT_LYTD,PROFITMARGIN_LYTD,SALES_LYTD,COST_LYTD,CASH_LYTD,RETURNS_LYTD,WRITEOFFS_LYTD,  DISCOUNTS_LYTD,FINANCECHARGES_LYTD,WAIVED_LYTD,  SALES_PERCENT,COST_PERCENT,CASH_PERCENT,RETURNS_PERCENT,WRITEOFFS_PERCENT,  DISCOUNTS_PERCENT,FINANCECHARGES_PERCENT,WAIVED_PERCENT,CLASSID,SALESTERRITORY,SALESPERSON,[STATE],[TYPE])  select c.CUSTNMBR, c.CUSTNAME, isnull(b.TTLINLTD,0), isnull((b.TTLSLLTD - b.TCOSTLTD - b.TTLRTLTD),0), .00000, isnull(b.TTLSLLTD,0), isnull(b.TCOSTLTD,0), isnull(b.TCSHRLTD,0),  isnull(b.TTLRTLTD,0), isnull(b.WROFSLIF,0), isnull(b.TDTKNLTD,0), isnull(b.TFNCHLTD,0), isnull(b.TWVFCLTD,0), isnull(a.NUMOFINV,0), isnull((a.SMRYSALS - a.SMRYCOST - a.SMRYRTRN),0), .00000,  isnull(a.SMRYSALS,0), isnull(a.SMRYCOST,0), isnull(a.SMRYCRCD,0), isnull(a.SMRYRTRN,0), isnull(a.SMRYWROF,0), isnull(a.SMRYDISC,0), isnull(a.SMRYFCHR,0), isnull(a.SMRYWFCH,0),  isnull(d.NUMOFINV,0), isnull((d.SMRYSALS - d.SMRYCOST - d.SMRYRTRN),0), .00000, isnull(d.SMRYSALS,0), isnull(d.SMRYCOST,0), isnull(d.SMRYCRCD,0), isnull(d.SMRYRTRN,0), isnull(d.SMRYWROF,0),  isnull(d.SMRYDISC,0), isnull(d.SMRYFCHR,0), isnull(d.SMRYWFCH,0),   isnull(case when d.SMRYSALS = 0 then 0 else round(((a.SMRYSALS/d.SMRYSALS)* 100),2) end,0),  isnull(case when d.SMRYCOST = 0 then 0 else round(((a.SMRYCOST/d.SMRYCOST)* 100),2) end,0),  isnull(case when d.SMRYCRCD = 0 then 0 else round(((a.SMRYCRCD/d.SMRYCRCD)* 100),2) end,0),  isnull(case when d.SMRYRTRN = 0 then 0 else round(((a.SMRYRTRN/d.SMRYRTRN)* 100),2) end,0),  isnull(case when d.SMRYWROF = 0 then 0 else round(((a.SMRYWROF/d.SMRYWROF)* 100),2) end,0),  isnull(case when d.SMRYDISC = 0 then 0 else round(((a.SMRYDISC/d.SMRYDISC)* 100),2) end,0),  isnull(case when d.SMRYFCHR = 0 then 0 else round(((a.SMRYFCHR/d.SMRYFCHR)* 100),2) end,0),  isnull(case when d.SMRYWFCH = 0 then 0 else round(((a.SMRYWFCH/d.SMRYWFCH)* 100),2) end,0),  c.CUSTCLAS, c.SALSTERR, c.SLPRSNID, c.STATE, c.USERDEF1  from RM00101 c   left outer join #SalesAnalysisFiscalSummary a on c.CUSTNMBR = a.CUSTNMBR  left outer join RM00103 b on c.CUSTNMBR = b.CUSTNMBR  left outer join #SalesAnalFisSumLastYear d on c.CUSTNMBR = d.CUSTNMBR  where c.CUSTNMBR between @StCustNmbr and @EnCustNmbr  and c.CUSTNAME between @StCUSTNAME and @EnCUSTNAME  and c.CUSTCLAS between @StCLASSID and @EnCLASSID  and c.SLPRSNID between @StSALESPERSONID and @EnSALESPERSONID  and c.SALSTERR between @StSALESTERRID and @EnSALESTERRID  and c.STATE between @StSTATE and @EnSTATE  and c.USERDEF1 between @StUSERDEF1 and @EnUSERDEF1  update #SalesAnalysis set PROFITMARGIN_LTD = case when (SALES_LTD-RETURNS_LTD) = 0 then 0 else round(((GROSSPROFIT_LTD/(SALES_LTD-RETURNS_LTD)) * 100),2) end,   PROFITMARGIN_YTD = case when (SALES_YTD-RETURNS_YTD) = 0 then 0 else round(((GROSSPROFIT_YTD/(SALES_YTD-RETURNS_YTD))* 100),2) end  end   if @View = 3 begin  If OBJECT_ID('temp..#SalesAnalysisCalendarSummary') is NULL  Begin  create table #SalesAnalysisCalendarSummary (  CUSTNMBR char (31) not null default '',  YEAR1 smallint not null default 1900,  HISTTYPE smallint not null default 0,  NUMOFINV int not null default 0,  SMRYSALS numeric (19,5) not null default '',  SMRYCRCD numeric (19,5) not null default '',  SMRYCOST numeric (19,5) not null default '',  SMRYWROF numeric (19,5) not null default '',  SMRYDISC numeric (19,5) not null default '',  SMRYRTNG numeric (19,5) not null default '',  SMRYFCHR numeric (19,5) not null default '',  SMRYWFCH numeric (19,5) not null default '',  SMRYRTRN numeric (19,5) not null default '')  end  delete from #SalesAnalysisCalendarSummary  insert into #SalesAnalysisCalendarSummary(  CUSTNMBR,YEAR1,HISTTYPE,NUMOFINV,SMRYSALS,SMRYCRCD,SMRYCOST,  SMRYWROF,SMRYDISC,SMRYRTNG,SMRYFCHR,SMRYWFCH,SMRYRTRN)  select CUSTNMBR, YEAR1, HISTTYPE, sum(NUMOFINV), sum(SMRYSALS), sum(SMRYCRCD), sum(SMRYCOST),  sum(SMRYWROF), sum(SMRYDISC), sum(SMRYRTNG), sum(SMRYFCHR), sum(SMRYWFCH), sum(SMRYRTRN)  from RM00104  where CUSTNMBR between @StCustNmbr and @EnCustNmbr  and YEAR1 = @Year  and PERIODID between @StPeridID and @EnPeridID  and HISTTYPE = 0  group by CUSTNMBR, YEAR1, HISTTYPE   If OBJECT_ID('temp..#SalesAnalCalSumLastYear') is NULL  Begin  create table #SalesAnalCalSumLastYear (  CUSTNMBR char (31) not null default '',  YEAR1 smallint not null default 1900,  HISTTYPE smallint not null default 0,  NUMOFINV int not null default 0,  SMRYSALS numeric (19,5) not null default '',  SMRYCRCD numeric (19,5) not null default '',  SMRYCOST numeric (19,5) not null default '',  SMRYWROF numeric (19,5) not null default '',  SMRYDISC numeric (19,5) not null default '',  SMRYRTNG numeric (19,5) not null default '',  SMRYFCHR numeric (19,5) not null default '',  SMRYWFCH numeric (19,5) not null default '',  SMRYRTRN numeric (19,5) not null default '')  end  delete from #SalesAnalCalSumLastYear  insert into #SalesAnalCalSumLastYear(  CUSTNMBR,YEAR1,HISTTYPE,NUMOFINV,SMRYSALS,SMRYCRCD,SMRYCOST,  SMRYWROF,SMRYDISC,SMRYRTNG,SMRYFCHR,SMRYWFCH,SMRYRTRN)  select CUSTNMBR, YEAR1, HISTTYPE, sum(NUMOFINV), sum(SMRYSALS), sum(SMRYCRCD), sum(SMRYCOST),  sum(SMRYWROF), sum(SMRYDISC), sum(SMRYRTNG), sum(SMRYFCHR), sum(SMRYWFCH), sum(SMRYRTRN)  from RM00104   where CUSTNMBR between @StCustNmbr and @EnCustNmbr  and YEAR1 = (@Year - 1)  and PERIODID between @StPeridID and @EnPeridID  and HISTTYPE = 0  group by CUSTNMBR, YEAR1, HISTTYPE   insert into #SalesAnalysis(  CUSTOMERID,CUSTOMERNAME,  COUNT_INVOICES_LTD,GROSSPROFIT_LTD,PROFITMARGIN_LTD,SALES_LTD,COST_LTD,  CASH_LTD,RETURNS_LTD,WRITEOFFS_LTD,DISCOUNTS_LTD,FINANCECHARGES_LTD,WAIVED_LTD,  COUNT_INVOICES_YTD,GROSSPROFIT_YTD,PROFITMARGIN_YTD,  SALES_YTD,COST_YTD,CASH_YTD,RETURNS_YTD,  WRITEOFFS_YTD,DISCOUNTS_YTD,FINANCECHARGES_YTD,WAIVED_YTD,  COUNT_INVOICES_LYTD,GROSSPROFIT_LYTD,PROFITMARGIN_LYTD,SALES_LYTD,COST_LYTD,CASH_LYTD,RETURNS_LYTD,  WRITEOFFS_LYTD,DISCOUNTS_LYTD,FINANCECHARGES_LYTD,WAIVED_LYTD,  SALES_PERCENT,COST_PERCENT,CASH_PERCENT,RETURNS_PERCENT,WRITEOFFS_PERCENT,  DISCOUNTS_PERCENT,FINANCECHARGES_PERCENT,WAIVED_PERCENT,  CLASSID,SALESTERRITORY,SALESPERSON,[STATE],[TYPE])  select c.CUSTNMBR, c.CUSTNAME,   isnull(b.TTLINLTD,0), isnull((b.TTLSLLTD - b.TCOSTLTD - b.TTLRTLTD),0), .00000, isnull(b.TTLSLLTD,0), isnull(b.TCOSTLTD,0),   isnull(b.TCSHRLTD,0), isnull(b.TTLRTLTD,0), isnull(b.WROFSLIF,0), isnull(b.TDTKNLTD,0), isnull(b.TFNCHLTD,0), isnull(b.TWVFCLTD,0),   isnull(a.NUMOFINV,0), isnull((a.SMRYSALS - a.SMRYCOST - a.SMRYRTRN),0), .00000, isnull(a.SMRYSALS,0), isnull(a.SMRYCOST,0), isnull(a.SMRYCRCD,0), isnull(a.SMRYRTRN,0),   isnull(a.SMRYWROF,0), isnull(a.SMRYDISC,0), isnull(a.SMRYFCHR,0), isnull(a.SMRYWFCH,0),  isnull(d.NUMOFINV,0), isnull((d.SMRYSALS - d.SMRYCOST - d.SMRYRTRN),0), .00000, isnull(d.SMRYSALS,0), isnull(d.SMRYCOST,0), isnull(d.SMRYCRCD,0), isnull(d.SMRYRTRN,0),   isnull(d.SMRYWROF,0),isnull(d.SMRYDISC,0), isnull(d.SMRYFCHR,0), isnull(d.SMRYWFCH,0),   isnull(case when d.SMRYSALS = 0 then 0 else round(((a.SMRYSALS/d.SMRYSALS)* 100),2) end,0),  isnull(case when d.SMRYCOST = 0 then 0 else round(((a.SMRYCOST/d.SMRYCOST)* 100),2) end,0),  isnull(case when d.SMRYCRCD = 0 then 0 else round(((a.SMRYCRCD/d.SMRYCRCD)* 100),2) end,0),  isnull(case when d.SMRYRTRN = 0 then 0 else round(((a.SMRYRTRN/d.SMRYRTRN)* 100),2) end,0),  isnull(case when d.SMRYWROF = 0 then 0 else round(((a.SMRYWROF/d.SMRYWROF)* 100),2) end,0),  isnull(case when d.SMRYDISC = 0 then 0 else round(((a.SMRYDISC/d.SMRYDISC)* 100),2) end,0),  isnull(case when d.SMRYFCHR = 0 then 0 else round(((a.SMRYFCHR/d.SMRYFCHR)* 100),2) end,0),  isnull(case when d.SMRYWFCH = 0 then 0 else round(((a.SMRYWFCH/d.SMRYWFCH)* 100),2) end,0),  c.CUSTCLAS, c.SALSTERR, c.SLPRSNID, c.STATE, c.USERDEF1  from RM00101 c   left outer join #SalesAnalysisCalendarSummary a on c.CUSTNMBR = a.CUSTNMBR  left outer join RM00103 b on c.CUSTNMBR = b.CUSTNMBR  left outer join #SalesAnalCalSumLastYear d on c.CUSTNMBR = d.CUSTNMBR  where c.CUSTNMBR between @StCustNmbr and @EnCustNmbr  and c.CUSTNAME between @StCUSTNAME and @EnCUSTNAME  and c.CUSTCLAS between @StCLASSID and @EnCLASSID  and c.SLPRSNID between @StSALESPERSONID and @EnSALESPERSONID  and c.SALSTERR between @StSALESTERRID and @EnSALESTERRID  and c.STATE between @StSTATE and @EnSTATE  and c.USERDEF1 between @StUSERDEF1 and @EnUSERDEF1   update #SalesAnalysis set PROFITMARGIN_LTD = case when (SALES_LTD-RETURNS_LTD) = 0 then 0 else round(((GROSSPROFIT_LTD/(SALES_LTD-RETURNS_LTD)) * 100),2) end,   PROFITMARGIN_YTD = case when (SALES_YTD-RETURNS_YTD) = 0 then 0 else round(((GROSSPROFIT_YTD/(SALES_YTD-RETURNS_YTD))* 100),2) end  end  if @SORT = 1 begin  select * from #SalesAnalysis order by CUSTOMERID end  if @SORT = 2  begin  select * from #SalesAnalysis order by CUSTOMERNAME end  if @SORT = 3 begin  select * from #SalesAnalysis order by CLASSID end  if @SORT = 4 begin  select * from #SalesAnalysis order by SALESPERSON end  if @SORT = 5 begin  select * from #SalesAnalysis order by SALESTERRITORY end  if @SORT = 6 begin  select * from #SalesAnalysis order by [STATE] end if @SORT = 7 begin  select * from #SalesAnalysis order by [TYPE] end   
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_customer service rep]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_operations manager]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_order processor]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_power user]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_sales manager]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_shipping and receiving]
GO
GRANT EXECUTE ON  [dbo].[seeSPsalesanalysis] TO [rpt_warehouse manager]
GO

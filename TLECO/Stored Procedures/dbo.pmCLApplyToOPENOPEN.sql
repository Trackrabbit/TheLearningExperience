SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLApplyToOPENOPEN]  @I_cUserID char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,    @iStatus int,    @XPM_Cchecks varchar(30),  @cRemittance varchar(255),   @tLoop tinyint  select  @O_iErrorState = 0,  @iStatus  = 0  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL   or @I_cFileName1 is NULL  or @I_cSearchString1 is NULL  begin  select @O_iErrorState = 20847  break  end   exec @iStatus = DYNAMICS.dbo.smGetConstantString  'XPM_CCHECKS_STR',   @XPM_Cchecks output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break  exec @iStatus = DYNAMICS.dbo.smGetConstantString  'KEYSOURCE_PM',   @cRemittance output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   create table #TRXTEMP(  VCHRNMBR char(21) not null,  DOCTYPE smallint not null,  APTVCHNM char(21) not null,  APTODCTY smallint not null,  DCSTATUS tinyint not null,  VENDORID char(15) not null )   insert into #TRXTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  0,  APPLY.VENDORID  from  PM20100 APPLY   LEFT OUTER JOIN PM20000 TRX ON (TRX.VCHRNMBR = APPLY.APTVCHNM and TRX.DOCTYPE  = APPLY.APTODCTY)  LEFT OUTER JOIN PM10300 PAY ON (PAY.BCHSOURC = @XPM_Cchecks and PAY.PMNTNMBR = SUBSTRING(APPLY.KEYSOURC,1,(LEN(APPLY.KEYSOURC) - 1)))  where  APPLY.KEYSOURC <> @cRemittance   and TRX.VCHRNMBR is NULL  and PAY.PMNTNMBR is NULL   insert into #TRXTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  0,  APPLY.VENDORID  from  PM20100 APPLY  LEFT OUTER JOIN PM10300 PAY ON (PAY.PMNTNMBR = APPLY.Payment_To_Print_On_Stub and PAY.BCHSOURC = @XPM_Cchecks)  where  APPLY.KEYSOURC = @cRemittance  and APPLY.Payment_To_Print_On_Stub <> ''  and PAY.PMNTNMBR is NULL   insert into #TRXTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  0,  APPLY.VENDORID  from  PM20100 APPLY  JOIN PM00400 KEYMSTR ON (APPLY.VCHRNMBR = KEYMSTR.CNTRLNUM and APPLY.DOCTYPE = KEYMSTR.DOCTYPE)  where  APPLY.KEYSOURC <> @cRemittance  and  ( ( KEYMSTR.DCSTATUS = 1  and  NOT EXISTS(  select  1  from  PM10000  where  PM10000.VCHNUMWK = APPLY.VCHRNMBR  and PM10000.DOCTYPE = APPLY.DOCTYPE)   and  NOT EXISTS(  select  1  from  PM10300  where  PM10300.PMNTNMBR = APPLY.VCHRNMBR  and PM10300.DOCTYPE = APPLY.DOCTYPE  and PM10300.BCHSOURC = @XPM_Cchecks)  and  NOT EXISTS(  select  1  from  PM10400  where  PM10400.PMNTNMBR = APPLY.VCHRNMBR  and PM10400.DOCTYPE = APPLY.DOCTYPE ))  or   ( KEYMSTR.DCSTATUS = 2  and  NOT EXISTS(  select  1  from  PM20000 TRX  where  TRX.VCHRNMBR = APPLY.VCHRNMBR  and TRX.DOCTYPE = APPLY.DOCTYPE ) ) )   delete  PM20100  from  #TRXTEMP  where  #TRXTEMP.VCHRNMBR = PM20100.VCHRNMBR  and #TRXTEMP.DOCTYPE  = PM20100.DOCTYPE  and #TRXTEMP.APTVCHNM = PM20100.APTVCHNM  and #TRXTEMP.APTODCTY = PM20100.APTODCTY   insert into  #CNTRLNUMTEMP  select  VCHRNMBR,  DOCTYPE,  VENDORID  from  #TRXTEMP   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10327,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   return(@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmCLApplyToOPENOPEN] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[aagTrxDimCodeChanged] @I_cTable1  nvarchar(30) = null,  @I_cTable2  nvarchar(30) = null,  @I_cType tinyint =0, @O_nChanged tinyint=0 OUTPUT, @O_TrxDim1 char(31) = null output, @O_TrxDim2 char(31) = null output, @O_TrxDim3 char(31) = null output as begin declare @RecordCount bigint declare @TrxDimID1 int declare @TrxDimID2 int declare @TrxDimID3 int set @RecordCount=0 set @O_nChanged=0 set @TrxDimID1=0 set @TrxDimID2=0 set @TrxDimID3=0  if @I_cType=0 return 0 if @I_cType=1  begin  exec('declare aaTrxDimIDchanged cursor fast_forward for select  ' + @I_cTable2 + '.aaTrxCodeID,' + @I_cTable2 + '.aaTrxDimID from  ' + @I_cTable1  + ' inner join ' + @I_cTable2  + ' on ' + @I_cTable1 + '.aaGLWorkHdrID=' +@I_cTable2+'.aaGLWorkHdrID and  ' + @I_cTable1 + '.aaGLWorkDistID=' + @I_cTable2 + '.aaGLWorkDistID and ' + @I_cTable1 + '.aaGLWorkAssignID='+ @I_cTable2 + '.aaGLWorkAssignID and  ' + @I_cTable1 + '.aaTrxDimID=' + @I_cTable2 + '.aaTrxDimID  where ' + @I_cTable1 +'.aaTrxCodeID<>' + @I_cTable2 + '.aaTrxCodeID and ' + @I_cTable2 + '.aaTrxCodeID<>0')  end  else if @I_cType=2  begin exec('declare aaTrxDimIDchanged cursor fast_forward for select  ' + @I_cTable2 + '.aaTrxCodeID,' + @I_cTable2 + '.aaTrxDimID from  ' + @I_cTable1  + ' inner join ' + @I_cTable2  + ' on ' + @I_cTable1 + '.aaSubLedgerHdrID=' +@I_cTable2+'.aaSubLedgerHdrID and  ' + @I_cTable1 + '.aaSubLedgerDistID=' + @I_cTable2 + '.aaSubLedgerDistID and ' + @I_cTable1 + '.aaSubLedgerAssignID='+ @I_cTable2 + '.aaSubLedgerAssignID and  ' + @I_cTable1 + '.aaTrxDimID=' + @I_cTable2 + '.aaTrxDimID  where ' + @I_cTable1 +'.aaTrxCodeID<>' + @I_cTable2 + '.aaTrxCodeID and ' + @I_cTable2 + '.aaTrxCodeID<>0')  end else if @I_cType=3 begin exec('declare aaTrxDimIDchanged cursor fast_forward for select  ' + @I_cTable2 + '.aaTrxDimCodeID,' + @I_cTable2 + '.aaTrxDimID from  ' + @I_cTable1  + ' inner join ' + @I_cTable2  + ' on ' + @I_cTable1 + '.aaTrxDimID=' + @I_cTable2 + '.aaTrxDimID  where ' + @I_cTable1 +'.aaTrxDimCodeID<>' + @I_cTable2 + '.aaTrxDimCodeID and ' + @I_cTable2 + '.aaTrxDimCodeID<>0')  end else return  open aaTrxDimIDchanged fetch next from aaTrxDimIDchanged into  @RecordCount,@TrxDimID1 if @RecordCount>0 begin set @O_nChanged=1 end if @@fetch_status=0 fetch next from aaTrxDimIDchanged into  @RecordCount,@TrxDimID2 if @@fetch_status=0 fetch next from aaTrxDimIDchanged into  @RecordCount,@TrxDimID3 close aaTrxDimIDchanged deallocate aaTrxDimIDchanged  if @TrxDimID1>0 select @O_TrxDim1 = aaTrxDim from AAG00400 where aaTrxDimID=@TrxDimID1 and aaDataType=1 if @TrxDimID2>0 select @O_TrxDim2 = aaTrxDim from AAG00400 where aaTrxDimID=@TrxDimID2 and aaDataType=1 if @TrxDimID3>0 select @O_TrxDim3 = aaTrxDim from AAG00400 where aaTrxDimID=@TrxDimID3 and aaDataType=1  end    
GO
GRANT EXECUTE ON  [dbo].[aagTrxDimCodeChanged] TO [DYNGRP]
GO

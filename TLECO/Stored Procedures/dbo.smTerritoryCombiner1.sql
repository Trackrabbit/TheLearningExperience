SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smTerritoryCombiner1]  @I_charStartTerritory	char(30),  @I_charEndTerritory	char(30),  @O_iErrorState		int = NULL  output with encryption  as set transaction isolation level read uncommitted set nocount on declare  @SALSTERR  		char (255), @tTransaction		tinyint, @tLoop			tinyint, @iStatus		int, @cStartTerritory	char(50), @cEndTerritory		char(50) exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charStartTerritory, @O_cOutputString = @cStartTerritory output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 1 return end exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charEndTerritory, @O_cOutputString = @cEndTerritory output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 2 return end select 	@O_iErrorState 	 = 0 if @@trancount = 0    begin select @tTransaction = 1 begin transaction end while ( @tLoop is NULL ) begin select @tLoop = 1 if	@I_charStartTerritory	is NULL or @I_charEndTerritory	is NULL or @cStartTerritory	is NULL or @cEndTerritory		is NULL begin select @O_iErrorState = 3		 break end  if exists (select * from sysobjects where id = object_id('dbo.taCustomerInsert')) alter table RM00101 disable trigger taCustomerInsert if @@error <> 0  begin select @O_iErrorState = 4	 break end if exists (select * from sysobjects where id = object_id('dbo.taCustomerAddressInsert')) alter table RM00102 disable trigger taCustomerAddressInsert if @@error <> 0  begin select @O_iErrorState = 5	 break end CREATE TABLE dbo.#tmpRM00305 ( HISTTYPE smallint NOT NULL , PERIODID smallint NOT NULL , YEAR1 smallint NOT NULL , SMRYDATE datetime NOT NULL, COSTAMNT numeric(19, 5) NOT NULL , TTLCOMAM numeric(19, 5) NOT NULL , COMSLTDT numeric(19, 5) NOT NULL , NCOMAMNT numeric(19, 5) NOT NULL ) if @@error <> 0  begin select @O_iErrorState = 4		 break end insert into #tmpRM00305 select HISTTYPE,PERIODID,YEAR1,SMRYDATE,isnull(sum(COSTAMNT),0) as COSTAMNT,isnull(sum(TTLCOMAM),0) as TTLCOMAM, isnull(sum(COMSLTDT),0) as COMSLTDT, isnull(sum(NCOMAMNT),0) as NCOMAMNT  from RM00305 where SALSTERR = @I_charStartTerritory or SALSTERR = @I_charEndTerritory group by HISTTYPE,PERIODID,YEAR1,SMRYDATE if @@error <> 0  begin select @O_iErrorState = 5		 break end insert into RM00305 (SALSTERR,HISTTYPE,PERIODID,YEAR1,SMRYDATE,COSTAMNT,TTLCOMAM,                                                              		COMSLTDT,NCOMAMNT) select @I_charEndTerritory,HISTTYPE,PERIODID,YEAR1,SMRYDATE,COSTAMNT,TTLCOMAM,                                   		COMSLTDT,NCOMAMNT from RM00305 where SALSTERR = @I_charStartTerritory and str(HISTTYPE)+str(PERIODID)+str(YEAR1) not in  (select str(HISTTYPE)+str(PERIODID)+str(YEAR1) from RM00305  where SALSTERR = @I_charEndTerritory) if @@error <> 0  begin select @O_iErrorState = 6		 break end update a set  a.COSTAMNT = b.COSTAMNT, a.TTLCOMAM = b.TTLCOMAM, a.COMSLTDT = b.COMSLTDT, a.NCOMAMNT = b.NCOMAMNT from RM00305 a, #tmpRM00305 b  where a.HISTTYPE = b.HISTTYPE and  a.PERIODID = b.PERIODID and  a.YEAR1 = b.YEAR1 and  a.SALSTERR = @I_charEndTerritory if @@error <> 0  begin select @O_iErrorState = 7		 break end delete #tmpRM00305 if @@error <> 0  begin select @O_iErrorState = 8		 break end CREATE TABLE dbo.#tmpSOP10101 ( SOPTYPE smallint NOT NULL , SOPNUMBE char (21)  NOT NULL , SLPRSNID char (15) NOT NULL , COMMAMNT numeric(19, 5) NOT NULL , OCOMMAMT numeric(19, 5) NOT NULL , NCOMAMNT numeric(19, 5) NOT NULL , ORNCMAMT numeric(19, 5) NOT NULL , PRCTOSAL smallint NOT NULL , ACTSLAMT numeric(19, 5) NOT NULL , ORSLSAMT numeric(19, 5) NOT NULL , CMMSLAMT numeric(19, 5) NOT NULL , ORCOSAMT numeric(19, 5) NOT NULL  )  if @@error <> 0  begin select @O_iErrorState = 14		 break end insert into #tmpSOP10101 select SOPTYPE,SOPNUMBE,SLPRSNID,isnull(sum(COMMAMNT),0) as COMMAMNT,isnull(sum(OCOMMAMT),0) as OCOMMAMT, isnull(sum(NCOMAMNT),0) as NCOMAMNT, isnull(sum(ORNCMAMT),0) as ORNCMAMT, isnull(sum(PRCTOSAL),0) as PRCTOSAL, isnull(sum(ACTSLAMT),0) as ACTSLAMT, isnull(sum(ORSLSAMT),0) as ORSLSAMT, isnull(sum(CMMSLAMT),0) as CMMSLAMT, isnull(sum(ORCOSAMT),0) as ORCOSAMT from SOP10101 where SALSTERR = @I_charStartTerritory or SALSTERR = @I_charEndTerritory group by SOPTYPE, SOPNUMBE, SLPRSNID if @@error <> 0  begin select @O_iErrorState = 15		 break end update SOP10101 set SALSTERR = @I_charEndTerritory where SALSTERR = @I_charStartTerritory and str(SOPTYPE)+SOPNUMBE+SLPRSNID not in  (select str(SOPTYPE)+SOPNUMBE+SLPRSNID from SOP10101  where SALSTERR = @I_charEndTerritory) if @@error <> 0  begin select @O_iErrorState = 16		 break end update a set  a.COMMAMNT = b.COMMAMNT, a.OCOMMAMT = b.OCOMMAMT, a.NCOMAMNT = b.NCOMAMNT, a.ORNCMAMT = b.ORNCMAMT, a.ACTSLAMT = b.ACTSLAMT, a.ORSLSAMT = b.ORSLSAMT, a.CMMSLAMT = b.CMMSLAMT, a.ORCOSAMT = b.ORCOSAMT, a.PRCTOSAL = b.PRCTOSAL from SOP10101 a, #tmpSOP10101 b  where a.SOPTYPE = b.SOPTYPE and  a.SOPNUMBE = b.SOPNUMBE and  a.SLPRSNID = b.SLPRSNID and  a.SALSTERR = @I_charEndTerritory if @@error <> 0  begin select @O_iErrorState = 17		 break end delete #tmpSOP10101 if @@error <> 0  begin select @O_iErrorState = 18		 break end update b set COSTTODT = a.COSTTODT + b.COSTTODT, TTLCOMTD = a.TTLCOMTD + b.TTLCOMTD, TTLCOMLY = a.TTLCOMLY + b.TTLCOMLY, NCOMSLYR = a.NCOMSLYR + b.NCOMSLYR, COMSLLYR = a.COMSLLYR + b.COMSLLYR, CSTLSTYR = a.CSTLSTYR + b.CSTLSTYR, COMSLTDT = a.COMSLTDT + b.COMSLTDT, NCOMSLTD = a.NCOMSLTD + b.NCOMSLTD from RM00303 a, RM00303 b where a.SALSTERR = @I_charStartTerritory and b.SALSTERR = @I_charEndTerritory if @@error <> 0  begin select @O_iErrorState = 9		 break end 	 declare ta_TCCursor insensitive CURSOR for select 'update '+o.name+' set SALSTERR =' + rtrim(@cEndTerritory) +  ' where SALSTERR = ' + rtrim(@cStartTerritory) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'SALSTERR' and o.name <> 'RM00303' and o.name <> 'RM00305' and o.name <> 'SOP10101' order by o.name set nocount on OPEN ta_TCCursor FETCH NEXT FROM ta_TCCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 10	 break end  FETCH NEXT FROM ta_TCCursor INTO @SALSTERR end DEALLOCATE ta_TCCursor if @O_iErrorState <> 0 break declare ta_TCCursor insensitive CURSOR for select 'update '+o.name+' set SLSTERCD =' + rtrim(@cEndTerritory) +  ' where SLSTERCD = ' + rtrim(@cStartTerritory) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'SLSTERCD'  order by o.name set nocount on OPEN ta_TCCursor FETCH NEXT FROM ta_TCCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 11	 break end  FETCH NEXT FROM ta_TCCursor INTO @SALSTERR end DEALLOCATE ta_TCCursor if @O_iErrorState <> 0 break declare ta_TCCursor insensitive CURSOR for select 'update '+o.name+' set ENSLSTER =' + rtrim(@cEndTerritory) + ' where ENSLSTER = ' + rtrim(@cStartTerritory)  from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ENSLSTER'  order by o.name set nocount on OPEN ta_TCCursor FETCH NEXT FROM ta_TCCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 12	 break end  FETCH NEXT FROM ta_TCCursor INTO @SALSTERR end DEALLOCATE ta_TCCursor if @O_iErrorState <> 0 break declare ta_TCCursor insensitive CURSOR for select 'update '+o.name+' set STSLSTER =' + rtrim(@cEndTerritory) + ' where STSLSTER = ' + rtrim(@cStartTerritory)  from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'STSLSTER'  order by o.name set nocount on OPEN ta_TCCursor FETCH NEXT FROM ta_TCCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 13	 break end  FETCH NEXT FROM ta_TCCursor INTO @SALSTERR end DEALLOCATE ta_TCCursor if @O_iErrorState <> 0 break declare ta_TCCursor insensitive CURSOR for select 'delete '+o.name+'  where SALSTERR = ' + rtrim(@cStartTerritory) from sysobjects o, syscolumns c where	(o.id = c.id and o.type = 'U' and c.name = 'SALSTERR') and (o.name = 'RM00303' or	 o.name = 'RM00305' or   o.name = 'SOP10101') order by o.name set nocount on OPEN ta_TCCursor FETCH NEXT FROM ta_TCCursor INTO @SALSTERR WHILE (@@FETCH_STATUS <> -1) begin exec (@SALSTERR) if @@error <> 0  begin select @O_iErrorState = 14	 break end  FETCH NEXT FROM ta_TCCursor INTO @SALSTERR end DEALLOCATE ta_TCCursor if @O_iErrorState <> 0 break	 delete a from SY03900 a, RM00303 b where 	b.SALSTERR = @I_charStartTerritory and a.NOTEINDX = b.NOTEINDX if @@error <> 0  begin select @O_iErrorState = 15		 break end end  if exists (select * from sysobjects where id = object_id('dbo.taCustomerInsert')) alter table RM00101 enable trigger taCustomerInsert if @@error <> 0  begin select @O_iErrorState = 29	 end if exists (select * from sysobjects where id = object_id('dbo.taCustomerAddressInsert')) alter table RM00102 enable trigger taCustomerAddressInsert if @@error <> 0  begin select @O_iErrorState = 30	 end if @O_iErrorState <> 0 begin if @tTransaction = 1 rollback transaction end else if @tTransaction = 1 begin commit transaction end return  
GO
GRANT EXECUTE ON  [dbo].[smTerritoryCombiner1] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLDistributionWORKOPEN]  @I_cUserID char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @I_cOrigICID char(5)   = NULL,  @I_tMDARegistered    tinyint = NULL,  @I_tICRegistered tinyint = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,    @iStatus int,    @XPM_Cchecks varchar(50),  @tLoop tinyint,  @sPURCHASING smallint,  @TRUE tinyint  select  @O_iErrorState = 0,  @iStatus  = 0,  @sPURCHASING = 4,  @TRUE  = 1  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL   or @I_cFileName1 is NULL  or @I_cSearchString1 is NULL  or   @I_cOrigICID   is NULL  or   @I_tMDARegistered is NULL  or @I_tICRegistered is NULL  begin  select @O_iErrorState = 20842  break  end   exec @iStatus = DYNAMICS.dbo.smGetConstantString  'XPM_CCHECKS_STR',   @XPM_Cchecks output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select distinct  VCHRNMBR,  0,  VENDORID  from  PM10100  where  PSTGSTUS = 0  and CNTRLTYP = 0  and  NOT EXISTS  (select   1  from   PM10000  where  PM10000.VCHNUMWK = PM10100.VCHRNMBR  and PM10000.CNTRLTYP = 0)   if @@rowcount <> 0  begin  delete  PM10100  where  PSTGSTUS = 0  and CNTRLTYP = 0  and  NOT EXISTS  (select   1  from   PM10000  where  PM10000.VCHNUMWK = PM10100.VCHRNMBR  and PM10000.CNTRLTYP = 0)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  10352,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select distinct  VCHRNMBR,  0,  VENDORID  from  PM10100  where  PSTGSTUS = 0  and CNTRLTYP = 1  and  NOT EXISTS(  select  1  from  PM10300  where  PM10300.PMNTNMBR = PM10100.VCHRNMBR  and PM10300.BCHSOURC = @XPM_Cchecks)  and  NOT EXISTS(  select  1  from  PM10400  where  PM10400.PMNTNMBR = PM10100.VCHRNMBR)   if @@rowcount <> 0  begin  delete  PM10100  where  PSTGSTUS = 0  and CNTRLTYP = 1  and  NOT EXISTS(  select  1  from  PM10300  where  PM10300.PMNTNMBR = PM10100.VCHRNMBR  and PM10300.BCHSOURC = @XPM_Cchecks)  and  NOT EXISTS(  select  1  from  PM10400  where  PM10400.PMNTNMBR = PM10100.VCHRNMBR)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  10352,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,   VENDORID )  select distinct  A.VCHRNMBR,  A.CNTRLTYP,  A.VENDORID  from  PM10100 A  LEFT OUTER JOIN PM20000 B ON (A.VCHRNMBR = B.VCHRNMBR and A.CNTRLTYP = B.CNTRLTYP)  LEFT OUTER JOIN PM10300 C ON (A.VCHRNMBR = C.PMNTNMBR and A.CNTRLTYP = 1)  LEFT OUTER JOIN PM10000 D ON (A.VCHRNMBR = D.VCHNUMWK and A.CNTRLTYP = 0)  where  A.PSTGSTUS = 1  and B.VCHRNMBR is NULL  and C.PMNTNMBR is NULL  and  D.VCHNUMWK is NULL   if @@rowcount <> 0  begin  delete  PM10100  from  PM10100 A  LEFT OUTER JOIN PM20000 B ON (A.VCHRNMBR = B.VCHRNMBR and A.CNTRLTYP = B.CNTRLTYP)  LEFT OUTER JOIN PM10300 C ON (A.VCHRNMBR = C.PMNTNMBR and A.CNTRLTYP = 1)  LEFT OUTER JOIN PM10000 D ON (A.VCHRNMBR = D.VCHNUMWK and A.CNTRLTYP = 0)  where  A.PSTGSTUS = 1  and B.VCHRNMBR is NULL  and C.PMNTNMBR is NULL  and  D.VCHNUMWK is NULL   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10365,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    if @I_tMDARegistered = @TRUE and @I_tICRegistered = @TRUE  begin  insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select Distinct  PM10000.VCHNUMWK,  0,  PM10000.VENDORID   from   PM10000, PM10100, DTA10100   where  DTA10100.DTASERIES = @sPURCHASING  and (substring(DTA10100.DTAREF,1,20) = PM10100.VCHRNMBR)  and PM10100.VCHRNMBR = PM10000.VCHNUMWK  and PM10100.DSTINDX = DTA10100.ACTINDX  and PM10100.DSTSQNUM = DTA10100.SEQNUMBR  and DTA10100.JRNENTRY = 0  and  PM10100.INTERID <> @I_cOrigICID   delete    DTA10200  from  PM10100, PM10000   where  DTA10200.DTASERIES  = @sPURCHASING  and (substring(DTA10200.DTAREF,1,20) = PM10100.VCHRNMBR)  and PM10100.VCHRNMBR = PM10000.VCHNUMWK  and PM10100.DSTINDX  = DTA10200.ACTINDX  and PM10100.DSTSQNUM  = DTA10200.SEQNUMBR  and  PM10100.INTERID  <> @I_cOrigICID  delete   DTA10100  from  PM10100, PM10000   where  DTA10100.DTASERIES = @sPURCHASING  and (substring(DTA10100.DTAREF,1,20) = PM10100.VCHRNMBR)  and PM10100.VCHRNMBR = PM10000.VCHNUMWK  and PM10100.DSTINDX = DTA10100.ACTINDX  and PM10100.DSTSQNUM = DTA10100.SEQNUMBR  and DTA10100.JRNENTRY = 0  and  PM10100.INTERID <> @I_cOrigICID   if @@rowcount <> 0  begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  19187,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select Distinct  PM10100.VCHRNMBR,  0,  PM10000.VENDORID   from   PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and INTERID = ''   if @@rowcount <> 0   begin  update PM10100  set INTERID = @I_cOrigICID  from   PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and INTERID = ''  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  6115,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    if @I_tICRegistered = @TRUE  begin   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select Distinct  PM10100.VCHRNMBR,  0,  PM10000.VENDORID   from   PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and INTERID <> @I_cOrigICID  and not exists (  select 1   from DYNAMICS..SY01500 S  where PM10100.INTERID = S.INTERID )   if @@rowcount <> 0   begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  6131,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select Distinct  PM10100.VCHRNMBR,  0,  PM10000.VENDORID   from   PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and CorrespondingUnit <> ''  and not exists (  select 1   from DYNAMICS..SY01500 S  where PM10100.CorrespondingUnit = S.INTERID )    if @@rowcount <> 0   begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  2147,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    end   else   begin  insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select Distinct  PM10100.VCHRNMBR,  0,  PM10000.VENDORID   from   PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and INTERID <> @I_cOrigICID  if @@rowcount <> 0   begin  update PM10100  set INTERID = @I_cOrigICID  from  PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and INTERID <> @I_cOrigICID    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  6115,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select Distinct  PM10100.VCHRNMBR,  0,  PM10000.VENDORID   from   PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and CorrespondingUnit <> ''  if @@rowcount <> 0   begin  update PM10100  set CorrespondingUnit = ''  from  PM10000, PM10100   where  VCHNUMWK = PM10100.VCHRNMBR  and CorrespondingUnit <> ''   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @I_cSearchString1,  2149,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    end   end   return(@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmCLDistributionWORKOPEN] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[SVC_MailProcess_Time_Sheet] as declare @CallNumber char(11) declare @TechID char(11) declare @Start datetime declare @End datetime declare @Desc char(51) declare @StartDate datetime declare @StartTime datetime declare @EndDate datetime declare @EndTime datetime declare @Customer char(11) declare @SRVSTAT char(3) declare @LaborItem char(31) declare @SRVTYPE char(11) declare @PriceLevel char(11) declare @UoM char(11) declare @QtyInBase numeric(19,5) declare @CurrentCost numeric(19,5) declare @StandardCost numeric(19,5)declare @UnitCost numeric(19,5) declare @UnitPrice numeric(19,5) declare @StatusOption integer declare @Status integer declare @LineHours numeric(19,5) declare @LaborPct numeric(19,5) declare @PartPct numeric(19,5) declare @MiscPct numeric(19,5) declare @LineItem integer declare @ORUNTCST numeric(19,5),   @ORUNTPRC numeric(19,5),   @OREXTCST numeric(19,5),   @OXTNDPRC numeric(19,5),  @ExtendedCost numeric(19,5),  @ExtendedPrice numeric(19,5),  @I_sRateCalcMethod  smallint ,           @I_sViewMode   smallint,            @I_nExchangeRate  numeric(15,7),       @I_nDenomExchangeRate numeric(15,7),       @I_sMCTrxState   smallint,            @I_sDecimalPlaces  smallint,            @O_iErrorState          int ,   @BillableTime varchar(7),  @TransactionTime varchar(7),  @BaseUOM char(11) DECLARE @TIMESTRING varchar(20) declare @MinDate datetime  exec smGetMinDate @MinDate output   set nocount on  select @SRVSTAT = SRVSTAT from SVC00998 WITH (NOLOCK) DECLARE Time_cursor CURSOR FOR SELECT CallNumber,TechID, Start_Time, End_time, Descr   FROM SVC_Time_Sheet   WHERE CallNumber <> 'Processed'  OPEN Time_cursor FETCH next FROM Time_cursor INTO @CallNumber, @TechID, @Start, @End, @Desc  WHILE (@@FETCH_STATUS = 0)   BEGIN  if @Start < @End   BEGIN  select @CallNumber = stuff('0000000000',10 - DATALENGTH(ltrim(rtrim(@CallNumber))) + 1,DATALENGTH(ltrim(rtrim(@CallNumber))),ltrim(rtrim(@CallNumber)))  if exists(select * from SVC00200 where CALLNBR = @CallNumber and SRVRECTYPE = 2)  BEGIN  select @Customer = CUSTNMBR,   @SRVTYPE = SRVTYPE,   @LaborPct = LABPCT,   @PartPct = PARTPCT,   @MiscPct = MISCPCT,  @I_sRateCalcMethod = RATECALC,   @I_sViewMode = 3,            @I_nExchangeRate = XCHGRATE,   @I_nDenomExchangeRate = DENXRATE,   @I_sDecimalPlaces = DECPLACS,   @I_sMCTrxState = MCTRXSTT   from SVC00200 where CALLNBR = @CallNumber and SRVRECTYPE = 2   select @LaborItem = LABITMST from SVC00920 where @SRVTYPE = SRVTYPE  exec SVC_util_split_datetime @Start, @StartDate output, @StartTime output  exec SVC_util_split_datetime @End, @EndDate output, @EndTime output  exec SVC_Get_Price_Schedule @TechID,@CallNumber,2,@Customer,@LaborItem,@PriceLevel output  select @UoM = BASEUOFM, @CurrentCost = CURRCOST, @StandardCost = STNDCOST   from IV00101,IV40201   where ITEMNMBR = @LaborItem and IV00101.UOMSCHDL = IV40201.UOMSCHDL  select @LineHours = datediff(minute,@Start,@End) / 60.0  exec SVC_TA_Get_Item_Price @LaborItem,@PriceLevel,@BaseUOM  output,@UnitPrice  output,  @UnitCost output    select @ExtendedCost = @LineHours * @UnitCost,   @ExtendedPrice = @LineHours * @UnitPrice * (@LaborPct / 100.00)  EXEC SVC_util_timeval_to_string @LineHours, @TransactionTime OUTPUT   select @BillableTime = @TransactionTime  exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @UnitPrice,@ORUNTPRC OUTPUT, @O_iErrorState OUTPUT    exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @UnitCost,@ORUNTCST OUTPUT, @O_iErrorState OUTPUT    exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @ExtendedCost,@OREXTCST OUTPUT, @O_iErrorState OUTPUT    exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @ExtendedPrice,@OXTNDPRC OUTPUT, @O_iErrorState OUTPUT   select @LineItem = max(LNITMSEQ)+16384 from SVC00203 where SRVRECTYPE=2 and CALLNBR = @CallNumber and  EQPLINE = 1 and LINITMTYP = 'L'  select @LineItem = isnull(@LineItem, 16384)  insert SVC00203 values(2,  @CallNumber,  1,  @LineItem,  'L',  @SRVSTAT,  @TechID,  @LaborItem,  'L',  @Desc,  '',  @UoM,  @LineHours,0,0,@LineHours,  @UnitCost,  @UnitPrice,  @ExtendedCost,  @ExtendedPrice,  0,  @StartDate,@StartTime,  @EndDate,@EndTime,  @TransactionTime,@BillableTime,'',0,0,'',0,  @LaborPct,  @PartPct,  @MiscPct,  @MinDate,  '',0,0,'','',0,0,0,@PriceLevel,2,'',0,'',@ORUNTCST, @ORUNTPRC, @OREXTCST, @OXTNDPRC,0,0,  '', 0,'',0,0)   exec SVC_Set_Service_Line_Dist  2, @CallNumber ,  1,  @LineItem,  'L',@ExtendedPrice,@OXTNDPRC, 1   exec SVC_Set_Service_Totals 2,@CallNumber  UPDATE SVC_Time_Sheet set CallNumber = 'Processed' WHERE @TechID=TechID and @Start=Start_Time and @End=End_time  END  END  FETCH next FROM Time_cursor INTO @CallNumber, @TechID, @Start, @End, @Desc   END deallocate Time_cursor delete SVC_Time_Sheet where CallNumber = 'Processed' return    
GO
GRANT EXECUTE ON  [dbo].[SVC_MailProcess_Time_Sheet] TO [DYNGRP]
GO

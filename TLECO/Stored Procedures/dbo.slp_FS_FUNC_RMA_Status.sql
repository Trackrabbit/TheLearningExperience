SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[slp_FS_FUNC_RMA_Status] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlaccessstring varchar(1000),  @I_iDictID int, @I_sFunctionName varchar(100), @I_iFunctionEnum int, @Repair varchar(255),  @Credit varchar(255),  @Replace varchar(255),  @Cross_Ship varchar(255), @None varchar(255), @Open_RTV_or_Work_Order_Exists varchar(255), @Received varchar(255), @Closed varchar(255), @Voided varchar(255) select @I_iDictID = 949 select @I_sFunctionName = 'FS_FUNC_RMA_Status' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Repair output  select @I_iFunctionEnum = 2 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Credit output  select @I_iFunctionEnum = 3 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Replace output  select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Cross_Ship output  select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @None output  select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @None output  select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Open_RTV_or_Work_Order_Exists output  select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Received output  select @I_iFunctionEnum = 10 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Closed output  select @I_iFunctionEnum = 20 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Voided output   select @sqldropstring =  'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[FS_FUNC_RMA_Status]'') and xtype in (N''FN'',N''IF'',N''TF'')) ' +  'drop function [dbo].[FS_FUNC_RMA_Status] '  select @sqlstring1 =  'create function [dbo].[FS_FUNC_RMA_Status] (@iIntEnum integer) returns varchar(100) ' +  'as  '+ 'begin  '+ 'declare @oVarcharValuestring varchar(100) ' + 'set @oVarcharValuestring = ' + 'case ' +  ' when @iIntEnum = 1 then ''' + @Repair + '''' +  ' when @iIntEnum = 2 then ''' + @Credit + '''' +  ' when @iIntEnum = 3 then ''' + @Replace + '''' +  ' when @iIntEnum = 4 then ''' + @Cross_Ship + '''' +  ' when @iIntEnum = 5 then ''' + @None + '''' +  ' when @iIntEnum = 6 then ''' + @None + '''' +  ' when @iIntEnum = 7 then ''' + @Open_RTV_or_Work_Order_Exists + '''' +  ' when @iIntEnum = 8 then ''' + @Received + '''' +  ' when @iIntEnum = 10 then ''' + @Closed + '''' +  ' when @iIntEnum = 20 then ''' + @Voided + '''' +  ' else '''' ' +  ' end ' +  ' RETURN(@oVarcharValuestring) ' +  ' END '  exec (@sqldropstring)  exec (@sqlstring1+' '+@sqlstring2)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[slp_FS_FUNC_RMA_Status] TO [DYNGRP]
GO

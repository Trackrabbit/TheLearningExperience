SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[wfOutOfOfficeDelegation]  @Workflow_User char(85),  @assigned_task_user char(85),  @Workflow_Name char(51),  @Workflow_Step_Name char(51),  @DueDate datetime,   @DueTime datetime,  @Workflow_Type_Name char(51),  @WF_AllowOrigApprover tinyint,  @Workflow_Manually_Delega tinyint,  @Workflow_Originator char(238),  @WorkflowStepInstanceID char(37),  @DEX_ROW_ID integer,  @Workflow_Error int OUTPUT  AS  BEGIN set NOCOUNT ON   declare @UsersListGuid char(37),   @WorkflowInstanceID char(37), @Workflow_Step_Assign_To char(37)  declare @DomainUserName char(255), @DelegateTo char(255), @DelegateToDisplayName char(255),  @WF_Auto_Delegate_Tasks tinyint, @Workflow_Select_Delegate smallint   declare @Workflow_Completion_Date datetime, @Workflow_Completion_Time datetime  declare @Workflow_Comments char(500)  declare @new_delegate char(85), @prev_delegate char(85)  declare @count tinyint   select @WorkflowStepInstanceID = UPPER(@WorkflowStepInstanceID)   select @Workflow_User = UPPER(@Workflow_User)  select @assigned_task_user = UPPER(@assigned_task_user)  select @Workflow_Error=1   select @prev_delegate = @assigned_task_user   declare @delegation_list table(  sequence tinyint,  assigned_task_user char(85),  Workflow_Step_Assign_To char(37),  Workflow_Completion_Date datetime,  Workflow_Completion_Time datetime,  Workflow_Comments char(500) )    if @Workflow_Manually_Delega=1   begin  select @DomainUserName=DomainUserName, @WF_Auto_Delegate_Tasks=WF_Auto_Delegate_Tasks,   @Workflow_Select_Delegate=Workflow_Select_Delegate, @UsersListGuid=UsersListGuid   from WF40500 where rtrim(upper(DomainUserName))=rtrim(@assigned_task_user)   if @DomainUserName is not null   begin  if @WF_Auto_Delegate_Tasks=1   begin  if @Workflow_Select_Delegate=0    begin  select @DelegateTo=DomainUserName from WF40510   where UsersListGuid=@UsersListGuid and getdate() between STRTDATE and ENDDATE  end  else   begin  select top 1 @DelegateTo=DomainUserName from WF40510   where UsersListGuid=@UsersListGuid   and Workflow_Type_Name=@Workflow_Type_Name  and getdate() between STRTDATE and ENDDATE  end  select @DelegateTo=UPPER(ISNULL(@DelegateTo,''))  if @DelegateTo<>''  and (@WF_AllowOrigApprover=1 or (@WF_AllowOrigApprover=0 and @DelegateTo<>UPPER(@Workflow_Originator)))   begin  select @count=0, @new_delegate=@DelegateTo  while @new_delegate<>'' and @count<10  begin   select @Workflow_Completion_Date=cast(SYSDATETIME() as date),  @Workflow_Completion_Time=cast(SYSDATETIME() as time)  select @Workflow_Step_Assign_To = Workflow_Step_Assign_To,  @WorkflowInstanceID=WorkflowInstanceID from WFI10003 where WorkflowStepInstanceID=@WorkflowStepInstanceID   select @DelegateToDisplayName=  isnull((select top 1 ADDisplayName from WF40200 where upper(ADLogin)=upper(@DelegateTo)),@DelegateTo)  select @Workflow_Comments='Delegated to: '+RTRIM(@DelegateToDisplayName)+'. Task was automatically delegated.'   insert into @delegation_list  select @count,@prev_delegate,@Workflow_Step_Assign_To,  @Workflow_Completion_Date,@Workflow_Completion_Time,@Workflow_Comments  if (select count(WorkflowTaskAssignedTo) from WFI10005 where  UPPER(Workflow_User)=UPPER(@Workflow_User)   and UPPER(WorkflowStepInstanceID)=@WorkflowStepInstanceID   and UPPER(WorkflowTaskAssignedTo)=UPPER(RTRIM(@DelegateTo)))>0  begin  select @new_delegate='', @count=99  end  else  begin  update WFI10005 set WorkflowTaskAssignedTo=RTRIM(@DelegateTo)   where Workflow_User=@Workflow_User   and UPPER(WorkflowStepInstanceID)=@WorkflowStepInstanceID   and UPPER(WorkflowTaskAssignedTo)=@prev_delegate  end    exec wfGetOutOfOfficeDelegate @DelegateTo,  @assigned_task_user,  @Workflow_Type_Name,  @WF_AllowOrigApprover,  @Workflow_Manually_Delega,  @Workflow_Originator,  @WorkflowStepInstanceID,  @new_delegate OUTPUT,  @Workflow_Error OUTPUT  if @new_delegate<>''  begin  select @prev_delegate=@DelegateTo  select @DelegateTo=@new_delegate  end  else  begin  select @prev_delegate=@DelegateTo  end    select @count=@count+1   end   if @count<10   begin   update WFI10005 set WorkflowTaskAssignedTo=RTRIM(@DelegateTo)   where Workflow_User=@Workflow_User   and UPPER(WorkflowStepInstanceID)=@WorkflowStepInstanceID   and UPPER(WorkflowTaskAssignedTo)=@assigned_task_user   end   else   begin  if @count<99   begin  delete from @delegation_list  update WFI10005 set WorkflowTaskAssignedTo=RTRIM(@assigned_task_user)  where DEX_ROW_ID=@DEX_ROW_ID  end  else   begin  delete from WFI10005 where DEX_ROW_ID=@DEX_ROW_ID  end   end  end   declare Delegation_Chain cursor local fast_forward for  select sequence, assigned_task_user, Workflow_Step_Assign_To,  Workflow_Completion_Date, Workflow_Completion_Time, Workflow_Comments  from @delegation_list order by sequence  open Delegation_Chain  fetch next from Delegation_Chain into   @assigned_task_user, @assigned_task_user, @Workflow_Step_Assign_To,  @Workflow_Completion_Date, @Workflow_Completion_Time, @Workflow_Comments  while @@FETCH_STATUS=0  begin  if (select count(WorkflowInstanceID) from WF30100 where   WorkflowInstanceID=@WorkflowInstanceID and  WorkflowStepInstanceID=@WorkflowStepInstanceID and  Workflow_History_User=@assigned_task_user and  Workflow_Completion_Date=@Workflow_Completion_Date and  Workflow_Completion_Time=DATEADD(ms, -DATEPART(ms, @Workflow_Completion_Time), @Workflow_Completion_Time) and  Milliseconds=DATEPART(ms, @Workflow_Completion_Time))=0  begin   exec wfCreateHistoryRecord @WorkflowInstanceID,  @WorkflowStepInstanceID,  @assigned_task_user,  @Workflow_Name,  @Workflow_Step_Name,  @Workflow_Step_Assign_To,  6,  @DueDate,  @DueTime,  @Workflow_Completion_Date,  @Workflow_Completion_Time,  @Workflow_Comments,  @Workflow_Error OUTPUT  end  fetch next from Delegation_Chain into   @assigned_task_user, @assigned_task_user, @Workflow_Step_Assign_To,  @Workflow_Completion_Date, @Workflow_Completion_Time, @Workflow_Comments  end    close Delegation_Chain  deallocate Delegation_Chain  end  end  end  END   
GO
GRANT EXECUTE ON  [dbo].[wfOutOfOfficeDelegation] TO [DYNGRP]
GO

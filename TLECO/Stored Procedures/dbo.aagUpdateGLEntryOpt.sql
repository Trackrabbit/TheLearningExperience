SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE         procedure [dbo].[aagUpdateGLEntryOpt]  @aaGLWorkHdrID   int,  @JRNENTRY int,  @aaGLWorkDistID int output,  @CURNCYID varchar(15),  @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime ,   @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,  @DECPLACS   smallint,   @CopanyID int,  @SqlSessionID int,  @INTERIDg char(5)  as begin   declare @SQNCLINE numeric(19,5),   @ACTINDX int,  @ACCTTYPE smallint,  @FXDORVAR smallint,   @CRDTAMNT numeric(19,5),  @DEBITAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @ORDBTAMT numeric(19,5),   @CorrespondingUnit char(5),   @aaBrowseType smallint,  @ClassID int,  @aaGLWorkAssignID int,  @INTERID Char(5),  @Cnt int,  @Status   smallint,  @Flag smallint,   @FUNLCURR char(15),  @ORMSTRID char(65)   Select  @SQNCLINE  =0,  @ACTINDX  =0,  @ACCTTYPE  =0,  @FXDORVAR  =0,   @CRDTAMNT  =0,  @DEBITAMT  =0,  @ORCRDAMT  =0,  @ORDBTAMT  =0,  @aaBrowseType  =0,  @ClassID  =0,  @aaGLWorkAssignID  =0,   @Cnt     =0,  @Status   =0,  @Flag   =0   select @FUNLCURR = FUNLCURR from MC40000  if  (@FUNLCURR = @CURNCYID) or len(rtrim(ltrim(@CURNCYID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID > 0  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID > 0  and aaGLWorkAssignID > 0  end   declare CAADIST  cursor fast_forward  for  Select SQNCLINE, aaGLWorkDistID,ACTINDX,CRDTAMNT, DEBITAMT, ORCRDAMT, ORDBTAMT  from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID  and  aaGLWorkDistID > 0  order by SQNCLINE, aaGLWorkDistID  open CAADIST  fetch next from CAADIST  into @SQNCLINE, @aaGLWorkDistID,@ACTINDX,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT  while @@fetch_status = 0  begin   Select @Cnt = count(*)  from GL10001 where  JRNENTRY = @JRNENTRY and SQNCLINE = @SQNCLINE and  ACTINDX= @ACTINDX and  CRDTAMNT = @CRDTAMNT and  DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT  and  ORDBTAMT = @ORDBTAMT  if @Cnt = 0  begin  exec aagGLWorkDistDelete @aaGLWorkHdrID, @aaGLWorkDistID, 0   end  fetch next from CAADIST  into @SQNCLINE, @aaGLWorkDistID,@ACTINDX,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT  end   close CAADIST  deallocate CAADIST   set @Cnt  = 0   declare CGLWORK cursor fast_forward for  Select SQNCLINE, ACTINDX,  ACCTTYPE, FXDORVAR, INTERID,  CRDTAMNT, DEBITAMT, ORCRDAMT, ORDBTAMT,  CorrespondingUnit,ORMSTRID  from GL10001  Where JRNENTRY = @JRNENTRY and SQNCLINE > 0  order by JRNENTRY, SQNCLINE  open CGLWORK  fetch next from CGLWORK into @SQNCLINE, @ACTINDX,  @ACCTTYPE, @FXDORVAR, @INTERID,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT,  @CorrespondingUnit,@ORMSTRID  while @@fetch_status = 0  begin   Select @Cnt = count(*)  from AAG10001  where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID > 0 and SQNCLINE = @SQNCLINE and  ACTINDX = @ACTINDX and  DEBITAMT = @DEBITAMT and CRDTAMNT = @CRDTAMNT and  ORDBTAMT = @ORDBTAMT and ORCRDAMT = @ORCRDAMT   if @Cnt = 0 or @Cnt > 1  begin  delete AAG10003 where exists(  Select 1 from AAG10001 where SQNCLINE = @SQNCLINE and AAG10001.aaGLWorkHdrID = @aaGLWorkHdrID  and AAG10003.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID  and AAG10003.aaGLWorkDistID = AAG10001.aaGLWorkDistID)   delete AAG10002 where exists(  Select 1 from AAG10001 where SQNCLINE = @SQNCLINE and AAG10001.aaGLWorkHdrID = @aaGLWorkHdrID  and AAG10002.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID  and AAG10002.aaGLWorkDistID = AAG10001.aaGLWorkDistID)   delete AAG10001 where SQNCLINE = @SQNCLINE and aaGLWorkHdrID = @aaGLWorkHdrID   Select @aaGLWorkDistID = isnull(max(aaGLWorkDistID),0)+1  from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID > 0  exec aagGetClassIDBrowseType @ACTINDX, @ClassID output, @aaBrowseType output   if @ACCTTYPE = 2   begin   set @CURRNIDX  =  3  end   if @INTERIDg <>  @INTERID  set @aaBrowseType = 0  if @aaBrowseType = 0  begin  set @ORMSTRID = space(1)  end  insert into AAG10001  (aaGLWorkHdrID,  aaGLWorkDistID,  INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,  aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus, aaWinWasOpen, aaOFFSETAcct, aaDistErrors,  aaChangeDate, aaChangeTime )  values (@aaGLWorkHdrID, @aaGLWorkDistID ,@INTERID ,@CorrespondingUnit,@ACTINDX, @ACCTTYPE,  @aaBrowseType,@DECPLACS, @FXDORVAR , @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT,  @CURNCYID, @CURRNIDX, @RATETPID,  @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1,  @RTCLCMTD, @DENXRATE, @MCTRXSTT, @SQNCLINE,  isnull(dbo.aagGetMstrID(2,@ORMSTRID,0),''),isnull(dbo.aagGetMstrID(6,@ORMSTRID,0),''), '', '', 8, 0, 0, 0,  convert(char(12), getdate(), 102), convert(char(12), getdate(), 108))   if @INTERIDg <>  @INTERID  set @Flag = 1   exec aagGLAssignUpdate @aaGLWorkHdrID, @aaGLWorkDistID,@aaGLWorkAssignID, @CopanyID,@ClassID, @SqlSessionID,@Flag  end  set @ClassID = 0  set @aaBrowseType = 0  fetch next from CGLWORK into @SQNCLINE , @ACTINDX,  @ACCTTYPE, @FXDORVAR, @INTERID,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT,  @CorrespondingUnit,@ORMSTRID  end  close CGLWORK  deallocate CGLWORK    Update AAG10001 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID = @aaGLWorkHdrID  Update AAG10002 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID = @aaGLWorkHdrID   Update AAG10003 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID = @aaGLWorkHdrID   UPDATE AAG10002   SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE A1.SQNCLINE >= AA.SQNCLINE AND AA.aaGLWorkHdrID = A1.aaGLWorkHdrID )   from AAG10001 A1 where AAG10002.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10002.aaGLWorkDistID=A1.aaGLWorkDistID   and A1.aaGLWorkHdrID = @aaGLWorkHdrID   UPDATE AAG10003  SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE A1.SQNCLINE >= AA.SQNCLINE  AND AA.aaGLWorkHdrID = A1.aaGLWorkHdrID)   from AAG10001 A1 where AAG10003.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10003.aaGLWorkDistID=A1.aaGLWorkDistID   and A1.aaGLWorkHdrID = @aaGLWorkHdrID   UPDATE AAG10001   SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE AAG10001.SQNCLINE >= AA.SQNCLINE AND AA.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID )  where aaGLWorkHdrID = @aaGLWorkHdrID  end    
GO
GRANT EXECUTE ON  [dbo].[aagUpdateGLEntryOpt] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taGLTransactionLineInsert] @I_vBACHNUMB char(15),   @I_vJRNENTRY int,    @I_vSQNCLINE numeric (19,5) = 0,  @I_vACTINDX int = 0,   @I_vCRDTAMNT numeric (19,5),   @I_vDEBITAMT numeric (19,5),   @I_vACTNUMST char(75) = '',   @I_vDSCRIPTN char(30) = '',   @I_vORCTRNUM char(20) = '',   @I_vORDOCNUM char(20) = '',   @I_vORMSTRID char(30) = '',   @I_vORMSTRNM char(64) = '',   @I_vORTRXTYP smallint = 0,   @I_vOrigSeqNum int = 0,   @I_vORTRXDESC char(30) = '',    @I_vTAXDTLID char(15) = '',   @I_vTAXAMNT numeric(19,5) = 0,  @I_vTAXACTNUMST char(75) = '',   @I_vDOCDATE datetime = '',   @I_vCURNCYID char(15) = '',   @I_vXCHGRATE numeric(19,7)=0,  @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7)=0,  @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @DTA_GL_Status smallint,  @ACCTTYPE smallint,  @FXDORVAR smallint,  @BALFRCLC smallint,   @PSTNGTYP smallint,   @ACTINDX int,  @INTERID char(5),     @SQNCLINE numeric(19,5),  @SQNCLINE2 numeric(19,5),  @CURNCYID char(15),  @CURRNIDX smallint,  @DECPLCUR smallint,     @iStatus int,  @O_oErrorState int,  @sCompanyID smallint,     @iCustomState int,  @iCustomErrString varchar(255),  @iTempValuesErrState int,  @iTempValuesErrString varchar(255),  @ACCTENTR tinyint,     @iError int,  @MS_ITEM_1 int,      @TAXEnabled tinyint,     @DBNAME char(50),     @TXDTLPCT numeric(19,5),    @BALANCETYPE smallint,     @TAXACCTTYPE smallint,     @TAXFXDORVAR smallint,     @TAXBALFRCLC smallint,      @TAXPSTNGTYP smallint,     @TXDTLTYP smallint,     @DECPLACS smallint,     @BCHSOURC char(15),     @ACTIVE tinyint,     @ISMCTRX int,  @EXGTBLID char(15),  @mcCRDTAMNT numeric(19,5),  @mcDEBITAMT numeric(19,5),  @mcTAXAMNT numeric(19,5),  @DECPLUSED int,  @TAXACTINDX int  select  @iTempValuesErrState = 0,  @iTempValuesErrString = '',  @DTA_GL_Status = 0,  @ACCTTYPE = 0,  @FXDORVAR = 0,  @BALFRCLC = 0,   @PSTNGTYP = 0,   @iStatus = 0,  @ACTINDX = 0,  @CURRNIDX = 0,  @SQNCLINE = 0,  @SQNCLINE2 = 0,  @CURNCYID = '',  @DECPLCUR = 0,  @O_oErrorState = 0,  @ACCTENTR = 0,     @O_iErrorState = 0,    @MS_ITEM_1 = power(2,21),   @TXDTLPCT = 0,     @TAXACCTTYPE = 0,    @TAXFXDORVAR = 0,    @TAXBALFRCLC = 0,    @TAXPSTNGTYP = 0,    @TXDTLTYP = 0,     @DECPLACS = 0,     @iCustomState = 0,  @iCustomErrString = '',  @BCHSOURC = '',  @ACTIVE = 1,     @mcCRDTAMNT = 0,  @mcDEBITAMT = 0,  @mcTAXAMNT = 0,  @EXGTBLID = '',  @DECPLUSED = 0,  @TAXACTINDX = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taTempValues  @I_vSETORGET = 3,  @I_vINTVALUE01 = @DTA_GL_Status output,  @O_iErrorState = @iTempValuesErrState output,  @oErrString = @iTempValuesErrString output select @iError = @@error if ((@iStatus <> 0) or (@iTempValuesErrState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 9461    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vCRDTAMNT > 0 )  select @BALANCETYPE = 0 else  select @BALANCETYPE = 1  exec @iStatus = taGLTransactionLineInsertPre  @I_vBACHNUMB output,  @I_vJRNENTRY  output,  @I_vSQNCLINE  output,  @I_vACTINDX  output,  @I_vCRDTAMNT  output,  @I_vDEBITAMT  output,  @I_vACTNUMST    output,  @I_vDSCRIPTN output,  @I_vORCTRNUM output,  @I_vORDOCNUM output,  @I_vORMSTRID output,  @I_vORMSTRNM output,  @I_vORTRXTYP output,  @I_vOrigSeqNum output,  @I_vORTRXDESC output,  @I_vTAXDTLID output,  @I_vTAXAMNT output,  @I_vTAXACTNUMST output,  @I_vDOCDATE output,  @I_vCURNCYID output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 678    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vBACHNUMB is null or  @I_vJRNENTRY is null or  @I_vSQNCLINE is null or  @I_vACTINDX is null or  @I_vCRDTAMNT is null or  @I_vDEBITAMT is null or  @I_vDSCRIPTN is null or  @I_vORCTRNUM is null or  @I_vORDOCNUM is null or  @I_vORMSTRID is null or  @I_vORMSTRNM is null or  @I_vORTRXTYP is null or  @I_vOrigSeqNum is null or  @I_vORTRXDESC is null or  @I_vTAXDTLID is null or  @I_vTAXAMNT is null or  @I_vTAXACTNUMST is null or  @I_vDOCDATE is null or   @I_vCURNCYID is NULL or  @I_vXCHGRATE is NULL or  @I_vRATETPID is NULL or  @I_vEXPNDATE is NULL or  @I_vEXCHDATE is NULL or  @I_vEXGTBDSC is NULL or  @I_vEXTBLSRC is NULL or  @I_vRATEEXPR is NULL or  @I_vDYSTINCR is NULL or  @I_vRATEVARC is NULL or  @I_vTRXDTDEF is NULL or  @I_vRTCLCMTD is NULL or  @I_vPRVDSLMT is NULL or  @I_vDATELMTS is NULL or  @I_vTIME1 is NULL or   @I_vRequesterTrx is null  ) begin  select @O_iErrorState = 680    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vBACHNUMB = UPPER(@I_vBACHNUMB)  select @INTERID = db_name()  select @DBNAME = DB_Name() select @TAXEnabled = abs(sign(isnull(Company_Options, 0) & @MS_ITEM_1)) from DYNAMICS..SY01500 (nolock) where INTERID = DB_Name()  if ( @TAXEnabled = 0 and @I_vTAXDTLID <> '' ) begin  select @O_iErrorState = 792     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vBACHNUMB = '' ) begin  select @O_iErrorState = 682     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vJRNENTRY < 1) or (@I_vJRNENTRY > 99999999) begin  select @O_iErrorState = 9368     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRATETPID <> '') begin  if (not exists(select top 1 1 from MC40100 (nolock) where RATETPID = @I_vRATETPID))  begin  select @O_iErrorState = 7768     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vXCHGRATE < 0)  begin  select @O_iErrorState = 7769     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vBACHNUMB <> '' )  begin  if exists(select top 1 1 from SY00500 a (nolock) where a.BACHNUMB = @I_vBACHNUMB and APPROVL = 1)  begin  select @O_iErrorState = 5599     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vACTINDX = 0 ) and ( @I_vACTNUMST = '')) begin  select @O_iErrorState = 683      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vACTINDX <> 0) begin  select @ACTINDX = @I_vACTINDX end  if ( @I_vACTNUMST <> '' ) begin  select @ACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST   if ((@ACTINDX is null) or (@ACTINDX = 0))  begin  select @O_iErrorState = 679     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vTAXACTNUMST <> '' ) begin  select @TAXACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vTAXACTNUMST   if ((@TAXACTINDX is null) or (@TAXACTINDX = 0))  begin  select @O_iErrorState = 8139     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vACTINDX <> 0 ) begin  if not exists(select 1 from GL00100 a (nolock) where a.ACTINDX = @ACTINDX)  begin  select @O_iErrorState = 684     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if not exists( select 1 from GL00105 a (nolock) where a.ACTINDX = @ACTINDX )  begin  select @O_iErrorState = 686    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @ACTINDX <> 0 ) begin  select @ACCTENTR = ACCTENTR from GL00100 (nolock) where ACTINDX = @ACTINDX   if (@ACCTENTR = 0)   begin  select @O_iErrorState = 2013     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @ACTINDX <> 0 ) begin  select @ACTIVE = ACTIVE from GL00100 (nolock) where ACTINDX = @ACTINDX   if (@ACTIVE = 0)   begin  select @O_iErrorState = 5617     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vSQNCLINE < 0) begin  select @O_iErrorState = 5618      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vSQNCLINE = 0 ) begin  select @SQNCLINE = isnull(max(SQNCLINE),0) + 500 from GL10001 (nolock) where JRNENTRY = @I_vJRNENTRY end else begin  select @SQNCLINE = @I_vSQNCLINE end  if exists(select top 1 1 from GL20000 (nolock) where JRNENTRY = @I_vJRNENTRY)  begin  select @O_iErrorState = 687      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select top 1 1 from GL10001 (nolock) where JRNENTRY = @I_vJRNENTRY and SQNCLINE = @SQNCLINE)  begin  select @O_iErrorState = 7738      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vCRDTAMNT <> 0 ) and ( @I_vDEBITAMT <> 0 )   begin  select @O_iErrorState = 5471      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vCRDTAMNT < 0 ) or ( @I_vDEBITAMT < 0 )  begin  select @O_iErrorState = 5600      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3699     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  select  @ACCTTYPE = ACCTTYPE,  @FXDORVAR = FXDORVAR,  @BALFRCLC = BALFRCLC,  @PSTNGTYP = PSTNGTYP,  @DECPLACS = DECPLACS     from GL00100 a (nolock) where a.ACTINDX = @ACTINDX   if ( @ACCTTYPE = 2 and (@I_vCRDTAMNT <> round(@I_vCRDTAMNT,@DECPLACS+1) or @I_vDEBITAMT <> round(@I_vDEBITAMT,@DECPLACS+1 ))) begin  select @O_iErrorState = 814    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @CURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock)  select @DECPLCUR = isnull(DECPLCUR,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID if @DECPLCUR <> 0   select @DECPLCUR = @DECPLCUR - 1     if ((@I_vCURNCYID <> '') and (@I_vCURNCYID <> @CURNCYID)) begin  select @ISMCTRX = 1   if (@CURRNIDX = 0)  begin  select @O_iErrorState = 7921     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vDOCDATE = '')  begin  select @O_iErrorState = 8118     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = '',    @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 2,   @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iErrorState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @oErrString  select @O_iErrorState = 7770   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @I_vTIME1 = ''  begin  select @I_vTIME1 = ' '+ substring(convert(varchar(25),getdate()),12,12)  end   if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 9287     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @mcCRDTAMNT =  case   when @I_vXCHGRATE > 0 and @I_vRTCLCMTD = 0   then round(@I_vCRDTAMNT * @I_vXCHGRATE, @DECPLCUR)   when @I_vXCHGRATE > 0 and @I_vRTCLCMTD = 1   then round(@I_vCRDTAMNT / @I_vXCHGRATE, @DECPLCUR)   else @I_vCRDTAMNT  end,   @mcDEBITAMT =  case   when @I_vXCHGRATE > 0 and @I_vRTCLCMTD = 0   then round(@I_vDEBITAMT * @I_vXCHGRATE, @DECPLCUR)   when @I_vXCHGRATE > 0 and @I_vRTCLCMTD = 1   then round(@I_vDEBITAMT / @I_vXCHGRATE, @DECPLCUR)   else @I_vDEBITAMT  end,  @mcTAXAMNT =   case   when @I_vXCHGRATE > 0 and @I_vRTCLCMTD = 0   then round(@I_vTAXAMNT * @I_vXCHGRATE, @DECPLCUR)   when @I_vXCHGRATE > 0 and @I_vRTCLCMTD = 1   then round(@I_vTAXAMNT / @I_vXCHGRATE, @DECPLCUR)   else @I_vTAXAMNT  end  end  else begin  select  @ISMCTRX = 0,   @I_vRATEEXPR = 0,   @I_vDYSTINCR = 0,   @I_vRTCLCMTD=0,   @mcCRDTAMNT = @I_vCRDTAMNT,  @mcDEBITAMT = @I_vDEBITAMT,  @mcTAXAMNT = @I_vTAXAMNT  select @I_vCURNCYID = FUNLCURR, @CURRNIDX = FUNCRIDX from MC40000 (nolock) end  select @BCHSOURC = isnull(BCHSOURC,0) from GL10000 (nolock) where JRNENTRY = @I_vJRNENTRY  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'GL_Work_Trans',  @I_vINDEX1 = @I_vBACHNUMB,  @I_vINDEX2 = @BCHSOURC,  @I_vINDEX3 = @I_vJRNENTRY,  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2753   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  while (0 = 0) begin  insert GL10001  (BACHNUMB,  JRNENTRY,  SQNCLINE,  ACTINDX,  XCHGRATE,  DSCRIPTN,  CURRNIDX,  GLLINVAL,   ACCTTYPE,  FXDORVAR,  BALFRCLC,  PSTNGTYP,  DECPLACS,  ORCTRNUM,  ORDOCNUM,  ORMSTRID,  ORMSTRNM,  ORTRXTYP,  OrigSeqNum,  ORTRXDESC,  DTA_GL_Status,  INTERID,  RATETPID,  EXGTBLID,  RTCLCMTD,  CRDTAMNT,  DEBITAMT,  ORCRDAMT,  ORDBTAMT,  DENXRATE,  MCTRXSTT,  LNESTAT,  CorrespondingUnit,  EXCHDATE,  TIME1   )  select  @I_vBACHNUMB,     @I_vJRNENTRY,     @SQNCLINE,      @ACTINDX,     @I_vXCHGRATE,     @I_vDSCRIPTN,     @CURRNIDX,     16777216,     @ACCTTYPE,     @FXDORVAR,     @BALFRCLC,     @PSTNGTYP,     case      when @ACCTTYPE <> 2  then @DECPLCUR  else @DECPLACS  end,  @I_vORCTRNUM,     @I_vORDOCNUM,     @I_vORMSTRID,     @I_vORMSTRNM,     @I_vORTRXTYP,     @I_vOrigSeqNum,     @I_vORTRXDESC,      @DTA_GL_Status,     @INTERID,     @I_vRATETPID,     @EXGTBLID,     @I_vRTCLCMTD,     @mcCRDTAMNT,     @mcDEBITAMT,                   @I_vCRDTAMNT,                   @I_vDEBITAMT,     0.00000,     0,      case      when (@I_vTAXAMNT > 0)   then 0  when @ACCTTYPE in (2,4)   then 6  else 5  end,  '',      @I_vEXCHDATE,        @I_vTIME1     if @@error <> 0  begin  select @O_iErrorState = 603    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@TAXEnabled = 1) and (@I_vTAXDTLID <> ''))    begin  select @SQNCLINE2 =  case   when @I_vTAXAMNT <> 0   then @SQNCLINE + 500  else @SQNCLINE   end   if @I_vTAXDTLID <> ''  begin  if not exists(select 1 from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID )  begin  select @O_iErrorState = 790     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   select @TXDTLPCT = TXDTLPCT, @TXDTLTYP = TXDTLTYP from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID   if (@I_vDOCDATE = '')  begin  select @I_vDOCDATE = cast(cast(GETDATE() as char(12)) as datetime)  end   if (@I_vTAXACTNUMST = '')  begin  select @TAXACTINDX = isnull(ACTINDX, 0) from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID   select @I_vTAXACTNUMST = ACTNUMST from GL00105 (nolock) where ACTINDX = @TAXACTINDX  end   if (@TAXACTINDX = 0)  begin  select @O_iErrorState = 791     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select  @TAXACCTTYPE = ACCTTYPE,  @TAXFXDORVAR = FXDORVAR,  @TAXBALFRCLC = BALFRCLC,  @TAXPSTNGTYP = PSTNGTYP  from GL00100 a (nolock) where a.ACTINDX = @TAXACTINDX    insert GL10300  (JRNENTRY,  RCTRXSEQ,  SQNCLINE,  SQNCLINE2,  TAXDTLID,  DOCDATE,  Tax_Date,  PSTGDATE,  TAXAMNT,  ORTAXAMT,  Taxable_Amount,  Originating_Taxable_Amt,  DOCAMNT,  ORDOCAMT,  TXDTLPCT,  TXDTLAMT,  TXDTLTYP,  ACTINDX,  CURRNIDX  )  select  @I_vJRNENTRY,   0,    @SQNCLINE2,   @SQNCLINE,   @I_vTAXDTLID,   @I_vDOCDATE,   @I_vDOCDATE,   '',    case    when (((@I_vCRDTAMNT > 0) and (@TXDTLTYP = 1)) or ((@I_vDEBITAMT > 0) and (@TXDTLTYP = 2)))  then @mcTAXAMNT  else (@mcTAXAMNT * -1)  end,  case    when (((@I_vCRDTAMNT > 0) and (@TXDTLTYP = 1)) or ((@I_vDEBITAMT > 0) and (@TXDTLTYP = 2)))  then @I_vTAXAMNT  else (@I_vTAXAMNT * -1)  end,  case    when (((@I_vCRDTAMNT > 0) and (@TXDTLTYP = 1)) or ((@I_vDEBITAMT > 0) and (@TXDTLTYP = 2)))  then (@mcCRDTAMNT + @mcDEBITAMT)  else (@mcCRDTAMNT + @mcDEBITAMT) * -1  end,  case    when (((@I_vCRDTAMNT > 0) and (@TXDTLTYP = 1)) or ((@I_vDEBITAMT > 0) and (@TXDTLTYP = 2)))  then (@I_vCRDTAMNT + @I_vDEBITAMT)  else (@I_vCRDTAMNT + @I_vDEBITAMT) * -1  end,  case    when (((@I_vCRDTAMNT > 0) and (@TXDTLTYP = 1)) or ((@I_vDEBITAMT > 0) and (@TXDTLTYP = 2)))  then (@mcCRDTAMNT + @mcDEBITAMT)  else (@mcCRDTAMNT + @mcDEBITAMT) * -1  end,  case    when (((@I_vCRDTAMNT > 0) and (@TXDTLTYP = 1)) or ((@I_vDEBITAMT > 0) and (@TXDTLTYP = 2)))  then (@I_vCRDTAMNT + @I_vDEBITAMT)  else (@I_vCRDTAMNT + @I_vDEBITAMT) * -1  end,  @TXDTLPCT,   0,    @TXDTLTYP,   @TAXACTINDX,   @CURRNIDX   if @@error <> 0  begin  select @O_iErrorState = 789    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ( @I_vTAXAMNT ) <> 0  begin  insert GL10001  (BACHNUMB,  JRNENTRY,  SQNCLINE,  ACTINDX,  XCHGRATE,  DSCRIPTN,  CURRNIDX,  GLLINVAL,    ACCTTYPE,  FXDORVAR,  BALFRCLC,  PSTNGTYP,  DECPLACS,  ORCTRNUM,  ORDOCNUM,  ORMSTRID,  ORMSTRNM,  ORTRXTYP,  OrigSeqNum,  ORTRXDESC,  DTA_GL_Status,  INTERID,  RATETPID,  EXGTBLID,  RTCLCMTD,  CRDTAMNT,  DEBITAMT,  ORCRDAMT,  ORDBTAMT,  DENXRATE,  MCTRXSTT,  LNESTAT,  CorrespondingUnit  )  select  @I_vBACHNUMB,     @I_vJRNENTRY,     @SQNCLINE2,     @TAXACTINDX,     0,      @I_vDSCRIPTN,      @CURRNIDX,     16777216,     @TAXACCTTYPE,     @TAXFXDORVAR,     @TAXBALFRCLC,     @TAXPSTNGTYP,     case      when @ACCTTYPE <> 2  then @DECPLCUR  else @DECPLACS  end,  @I_vORCTRNUM,     @I_vORDOCNUM,     @I_vORMSTRID,     @I_vORMSTRNM,     @I_vORTRXTYP,     @I_vOrigSeqNum,     @I_vORTRXDESC,      0,      @INTERID,     '',      '',      0,      case      when @I_vCRDTAMNT > 0  then @mcTAXAMNT  else 0  end,  case      when @I_vDEBITAMT > 0  then @mcTAXAMNT  else 0  end,  case      when @I_vCRDTAMNT > 0  then @I_vTAXAMNT  else 0  end,  case      when @I_vDEBITAMT > 0  then @I_vTAXAMNT  else 0  end,  0.00000,     0,      0,      ''      if @@error <> 0  begin  select @O_iErrorState = 775    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  break end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taGLTransactionLineInsertPost  @I_vBACHNUMB,  @I_vJRNENTRY,  @I_vSQNCLINE,  @I_vACTINDX,  @I_vCRDTAMNT,  @I_vDEBITAMT,  @I_vACTNUMST,  @I_vDSCRIPTN,  @I_vORCTRNUM,  @I_vORDOCNUM,  @I_vORMSTRID,  @I_vORMSTRNM,  @I_vORTRXTYP,  @I_vOrigSeqNum,  @I_vORTRXDESC,  @I_vTAXDTLID,  @I_vTAXAMNT,  @I_vTAXACTNUMST,  @I_vDOCDATE,  @I_vCURNCYID,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error  if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 640    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='GL_Work_Trans',  @I_vINDEX1=@I_vBACHNUMB,  @I_vINDEX2=@BCHSOURC,  @I_vINDEX3=@I_vJRNENTRY,  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2754   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taGLTransactionLineInsert] TO [DYNGRP]
GO

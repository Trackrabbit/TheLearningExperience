SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icpmValidateCompany]   @I_cBatchNumber char(15)  = NULL,   @I_cBatchSource  char(15)  = NULL,  @I_cOrigICID    char(5)  = NULL,   @I_cUserID    char(15)  = NULL,   @I_sBatchFrequencey smallint = NULL,   @I_tMCRegistered tinyint  = NULL,  @I_cOrigFuncCurrency char(15) = NULL,   @I_tPosting tinyint  = NULL,  @O_bMessages binary(4)  = NULL  output,  @O_tIntercompanyBatch tinyint  = NULL  output,  @O_iErrorState          int             = NULL  output  as   declare  @TRUE            tinyint,   @FALSE    tinyint,   @SINGLE_USE tinyint,  @MS_ITEM_08 int,  @MS_ITEM_09 int,  @MS_ITEM_10 int,  @MS_ITEM_11 int,   @MS_ITEM_12 int,   @MS_ITEM_13 int,  @MS_ITEM_15 int,  @MS_ITEM_16 int,  @MS_ITEM_17 int,  @MS_ITEM_18 int,   @MS_ITEM_19 int,  @tTransaction          tinyint,  @tLoop       tinyint,   @Execstring char(250),  @cICID char(5),   @sCompID   smallint,  @iStatus int,  @cTempSD char(10),  @iError   int,  @iMessageNumber         int,   @cPrefix         char(5),  @vDBName      varchar(11),  @bOutMessages   binary(4),  @tTempTableCreated tinyint   select  @O_bMessages = 0x00000000,   @O_iErrorState = 0,  @tTempTableCreated = 0,  @iStatus  = 0,  @iError  = 0,  @O_tIntercompanyBatch = 0  if @@trancount = 0  begin  select @tTransaction = 1  begin transaction end    while (@tLoop is NULL) begin      select @tLoop = 1   if  @I_cBatchNumber is NULL or   @I_cBatchSource  is NULL or  @I_cOrigICID    is NULL or  @I_cUserID    is NULL or  @I_sBatchFrequencey is NULL or   @I_cOrigFuncCurrency  is NULL or  @I_tMCRegistered is NULL or  @I_tPosting is NULL   begin  select @O_iErrorState = 21004  break   end    select  @TRUE           = 1,  @FALSE          = 0,  @SINGLE_USE  = 1,  @MS_ITEM_08 = convert(int, 0x80000000),   @MS_ITEM_09 = power(2,16),   @MS_ITEM_10 = power(2,17),   @MS_ITEM_11 = power(2,18),   @MS_ITEM_12 = power(2,19),   @MS_ITEM_13 = power(2,20),  @MS_ITEM_15 = power(2,22),  @MS_ITEM_16 = power(2,23),  @MS_ITEM_17 = power(2,8),  @MS_ITEM_18 = power(2,9),   @MS_ITEM_19 = power(2,10)   create table #Company (  IntercompanyID char(5)  not null,  CompanyName char(64)  not null,  CompanyID smallint  not null,  UserAccess tinyint not null,  FunctionalCurrency char(15) not null,  SourceDocument char(11) not null,  BatchNumber char(15) not null,  LineMessages2 binary(4) not null,  ICPMMessages   binary(4) not null,   DatabaseName char(10) not null)  select @tTempTableCreated = @TRUE   insert into  #Company  (IntercompanyID,   CompanyName,   CompanyID,   UserAccess,  FunctionalCurrency,   SourceDocument,   BatchNumber,   LineMessages2,  ICPMMessages,  DatabaseName)   (select distinct   dist.INTERID,   '',   0,   0,   '',   '',   '',   0x00000000,   0x00000000,   ''  from   PM10000   join PM10100 dist   on  (dist.VCHRNMBR = PM10000.VCHNUMWK   and      dist.CNTRLTYP = PM10000.CNTRLTYP)  where  PM10000.BCHSOURC = @I_cBatchSource  and  PM10000.BACHNUMB = @I_cBatchNumber)    if @@rowcount > 1  select @O_tIntercompanyBatch = @TRUE    if not exists(  select   1   from   #Company   where   IntercompanyID = @I_cOrigICID)  begin  insert into  #Company   (IntercompanyID,   CompanyName,   CompanyID,   UserAccess,  FunctionalCurrency,   SourceDocument,   BatchNumber,   LineMessages2,  ICPMMessages,  DatabaseName)   values  (@I_cOrigICID,   '',   0,   0,   '',   '',   '',   0x00000000,  0x00000000,  '')  end      exec @iStatus = icVerifyCompany  @I_cBatchNumber  ,   @I_cBatchSource  ,  @I_cOrigICID    ,   @I_cUserID    ,   @I_sBatchFrequencey ,   @I_tMCRegistered ,  @I_cOrigFuncCurrency ,   @I_tPosting  ,  @bOutMessages output,  @O_iErrorState          output    select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if (@bOutMessages  <> 0x00000000)   begin  if @bOutMessages = (@bOutMessages | @MS_ITEM_08)   select @O_bMessages = (@O_bMessages | @MS_ITEM_15)  if @bOutMessages = (@bOutMessages | @MS_ITEM_09)   select @O_bMessages = (@O_bMessages | @MS_ITEM_16)  if @bOutMessages = (@bOutMessages | @MS_ITEM_10)   select @O_bMessages = (@O_bMessages | @MS_ITEM_17)  if @bOutMessages = (@bOutMessages | @MS_ITEM_11)   select @O_bMessages = (@O_bMessages | @MS_ITEM_18)  if @bOutMessages = (@bOutMessages | @MS_ITEM_12)   select @O_bMessages = (@O_bMessages | @MS_ITEM_11)  if @bOutMessages = (@bOutMessages | @MS_ITEM_13)   select @O_bMessages = (@O_bMessages | @MS_ITEM_19)   end     update #Company set ICPMMessages =   (ICPMMessages | @MS_ITEM_15) where LineMessages2 = (LineMessages2 | @MS_ITEM_08)   update #Company set ICPMMessages =   (ICPMMessages | @MS_ITEM_16) where LineMessages2 = (LineMessages2 | @MS_ITEM_09)   update #Company set ICPMMessages =   (ICPMMessages | @MS_ITEM_17) where LineMessages2 = (LineMessages2 | @MS_ITEM_10)   update #Company set ICPMMessages =   (ICPMMessages | @MS_ITEM_18) where LineMessages2 = (LineMessages2 | @MS_ITEM_11)   update #Company set ICPMMessages =   (ICPMMessages | @MS_ITEM_11) where LineMessages2 = (LineMessages2 | @MS_ITEM_12)   update #Company set ICPMMessages =   (ICPMMessages | @MS_ITEM_19) where LineMessages2 = (LineMessages2 | @MS_ITEM_13)    update   PM10000  set  PM10000.PMICMSGS = #Company.ICPMMessages   from   PM10000   join PM10100   on (PM10000.VCHNUMWK = PM10100.VCHRNMBR)  join #Company with (NOLOCK)   on (PM10100.INTERID = #Company.IntercompanyID  and #Company.ICPMMessages <> 0x00000000)   where  PM10000.BCHSOURC = @I_cBatchSource  and  PM10000.BACHNUMB = @I_cBatchNumber  end    if @tTempTableCreated = @TRUE  drop table #Company  if @O_iErrorState <> 0 or @iStatus <> 0 begin  if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1     commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[icpmValidateCompany] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[wfBuildWorkflowHistoryScrollTempTable]   @node_id integer, @WorkflowInstanceID char(37), @treeview_level integer,  @WorkflowTempHistoryTable varchar(128),  @WorkflowScrollTempHistoryTable varchar(128),  @Workflow_Error int OUTPUT AS  BEGIN SET NOCOUNT ON   declare @WorkflowStepInstanceID char(37)  declare @Workflow_History_User char(85)  declare @Workflow_Name char(51)  declare @Workflow_Step_Name char(51)  declare @Workflow_Step_Assign_To char(37)  declare @Workflow_Action smallint   declare @Workflow_Completion_Date datetime  declare @Workflow_Completion_Time datetime  declare @Workflow_Comments varchar(8000)  declare @SQL_Text1 varchar(8000),  @SQL_Text2 varchar(8000),  @SQL_Text3 varchar(8000)  declare @Previous_Workflow_Completion_Date datetime  declare @Previous_Workflow_Completion_Time datetime   declare @Workflow_Completion_Date1 datetime, @Workflow_Completion_Time1 datetime   declare @Workflow_Completion_Date2 datetime, @Workflow_Completion_Time2 datetime   declare @Node_ID2 int   select @SQL_Text1 = 'delete from '+@WorkflowScrollTempHistoryTable+' '  exec (@SQL_Text1)   create table #temp_history_table(WorkflowInstanceID char(37), WorkflowStepInstanceID char(37),Workflow_History_User char(85),Workflow_Name char(51),  Workflow_Step_Name char(51),Workflow_Action smallint,Workflow_Completion_Date datetime,Workflow_Completion_Time datetime,  Workflow_Step_Assign_To char(37),Workflow_Step_Status smallint, WF_Step_Predecessor char(51),Workflow_Step_Sequence int,  Node_ID int, Workflow_Due_Date datetime, Workflow_Due_Time datetime,   Workflow_Comments text)  select @SQL_Text1=''  select @SQL_Text1= 'delete from #temp_history_table '+  'insert into #temp_history_table '+  'select WorkflowInstanceID, WorkflowStepInstanceID, Workflow_History_User, Workflow_Name, '+  'Workflow_Step_Name, Workflow_Action, Workflow_Completion_Date, Workflow_Completion_Time, '+  'Workflow_Step_Assign_To, Workflow_Step_Status, WF_Step_Predecessor, Workflow_Step_Sequence, '+  'Node_ID, Workflow_Due_Date, Workflow_Due_Time, '+  'CONVERT(VARCHAR(MAX),Workflow_Comments) from '+@WorkflowTempHistoryTable+' '  exec (@SQL_Text1)   select @WorkflowInstanceID=UPPER(@WorkflowInstanceID)  declare @WF30100 TABLE(  WorkflowInstanceID [char] (37) NOT NULL ,   WorkflowStepInstanceID [char] (37) NOT NULL ,   Workflow_History_User [char] (85) NOT NULL ,  Workflow_Name [char] (51) NOT NULL ,   Workflow_Step_Name [char] (51) NOT NULL ,   Workflow_Step_Assign_To [char] (37) NOT NULL ,  Workflow_Action [smallint] NOT NULL ,   Workflow_Due_Date [datetime] NOT NULL ,   Workflow_Due_Time [datetime] NOT NULL ,  Workflow_Completion_Date [datetime] NOT NULL ,   Workflow_Completion_Time [datetime] NOT NULL ,   Workflow_Comments [text] NOT NULL,  DEX_ROW_ID [int] NOT NULL)   insert into @WF30100   select WorkflowInstanceID,   WorkflowStepInstanceID,   Workflow_History_User,  Workflow_Name,   Workflow_Step_Name,   Workflow_Step_Assign_To,  Workflow_Action,   Workflow_Due_Date,   Workflow_Due_Time,  Workflow_Completion_Date,   Workflow_Completion_Time,   Workflow_Comments,  DEX_ROW_ID from WF30100 where WorkflowInstanceID=@WorkflowInstanceID    declare @WFI10003 TABLE(  WorkflowStepInstanceID [char] (37) NOT NULL ,  Workflow_Step_Name [char] (51) NOT NULL ,  WorkflowInstanceID [char] (37) NOT NULL ,  Workflow_Name [char] (51) NOT NULL ,  Workflow_Version [int] NOT NULL ,  WF_Step_Description [char] (101) NOT NULL ,  Workflow_Step_Status [smallint] NOT NULL ,  Workflow_Step_Sequence [int] NOT NULL ,  Workflow_Step_Type [smallint] NOT NULL ,  Workflow_Step_Order [smallint] NOT NULL ,  Workflow_Step_Condition [smallint] NOT NULL ,  Workflow_Step_Conditions [char] (37) NOT NULL ,  WF_Step_Predecessor [char] (51) NOT NULL ,  Workflow_Step_Assign_To [char] (37) NOT NULL ,  EmailMessageID [char] (25) NOT NULL ,  Workflow_Step_Send_Email [tinyint] NOT NULL ,  Workflow_Step_Time_Limit [smallint] NOT NULL ,  WF_Step_Time_Limit_UofM [smallint] NOT NULL ,  WF_Step_Completion_Polic [smallint] NOT NULL ,  WF_Apply_WF_Calendar [tinyint] NOT NULL ,  NOTEINDX [numeric](19, 5) NOT NULL)   insert into @WFI10003   select WorkflowStepInstanceID,  Workflow_Step_Name,  WorkflowInstanceID,  Workflow_Name,  Workflow_Version,  WF_Step_Description,  Workflow_Step_Status,  Workflow_Step_Sequence,  Workflow_Step_Type,  Workflow_Step_Order,  Workflow_Step_Condition,  Workflow_Step_Conditions,  WF_Step_Predecessor,  Workflow_Step_Assign_To,  EmailMessageID,  Workflow_Step_Send_Email,  Workflow_Step_Time_Limit,  WF_Step_Time_Limit_UofM,  WF_Step_Completion_Polic,  WF_Apply_WF_Calendar,  NOTEINDX from WFI10003 where WorkflowInstanceID=@WorkflowInstanceID    declare @WFI10004 TABLE(  WorkflowInstanceID [char] (37) NOT NULL ,  WorkflowStepInstanceID [char] (37) NOT NULL ,  WorkflowTaskAssignedTo [char] (85) NOT NULL ,  Workflow_Step_Name [char] (51) NOT NULL ,  Workflow_Name [char] (51) NOT NULL ,  Workflow_Version [int] NOT NULL ,  WF_Step_Description [char] (101) NOT NULL ,  Workflow_Action_Date [datetime] NOT NULL ,  Workflow_Action_Time [datetime] NOT NULL ,  Workflow_Due_Date [datetime] NOT NULL ,  Workflow_Due_Time [datetime] NOT NULL ,  Workflow_Step_Sequence [int] NOT NULL ,  Workflow_Step_Type [smallint] NOT NULL ,  Workflow_Step_Order [smallint] NOT NULL ,  WF_Step_Predecessor [char] (51) NOT NULL ,  WF_Step_Completion_Polic [smallint] NOT NULL ,  Workflow_Task_Escalated [tinyint] NOT NULL)   insert into @WFI10004   select WorkflowInstanceID,  WorkflowStepInstanceID,  WorkflowTaskAssignedTo,  Workflow_Step_Name,  Workflow_Name,  Workflow_Version,  WF_Step_Description,  Workflow_Action_Date,  Workflow_Action_Time,  Workflow_Due_Date,  Workflow_Due_Time,  Workflow_Step_Sequence,  Workflow_Step_Type,  Workflow_Step_Order,  WF_Step_Predecessor,  WF_Step_Completion_Polic,  Workflow_Task_Escalated from WFI10004 where WorkflowInstanceID=@WorkflowInstanceID   declare @WFScrollTempHistoryTable TABLE(  WorkflowStepInstanceID [char] (37) NOT NULL , Workflow_History_User [char] (85) NOT NULL ,  Workflow_Step_Name [char] (51) NOT NULL ,  Workflow_Step_Assign_To [char] (37) NOT NULL ,  Workflow_Action [smallint] NOT NULL ,   Node_ID [int] NOT NULL,  Workflow_Due_Date [datetime] NOT NULL ,   Workflow_Due_Time [datetime] NOT NULL ,  Workflow_Completion_Date [datetime] NOT NULL , Workflow_Completion_Time [datetime] NOT NULL ,  WF_Step_Predecessor [char] (51) NOT NULL ,  Workflow_Step_Sequence [int] NOT NULL ,  SEQNUMBR [int] NOT NULL,      Workflow_Comments [text] NOT NULL)  create table #WFScrollTempHistoryTable(  WorkflowStepInstanceID [char] (37) NOT NULL , Workflow_History_User [char] (85) NOT NULL ,  Workflow_Step_Name [char] (51) NOT NULL ,  Workflow_Step_Assign_To [char] (37) NOT NULL ,  Workflow_Action [smallint] NOT NULL ,   Node_ID [int] NOT NULL,  Workflow_Due_Date [datetime] NOT NULL ,   Workflow_Due_Time [datetime] NOT NULL ,  Workflow_Completion_Date [datetime] NOT NULL , Workflow_Completion_Time [datetime] NOT NULL ,  WF_Step_Predecessor [char] (51) NOT NULL ,  Workflow_Step_Sequence [int] NOT NULL ,  SEQNUMBR [int] NOT NULL,      Workflow_Comments [text] NOT NULL)   if @treeview_level=1  begin  declare SubmitResubmitNodes cursor local fast_forward for   select Node_ID, WorkflowStepInstanceID from #temp_history_table where Workflow_Action in (1,2)   open SubmitResubmitNodes   fetch next from SubmitResubmitNodes into @Node_ID2, @WorkflowStepInstanceID   while @@FETCH_STATUS=0 begin   select @Workflow_Completion_Date1='', @Workflow_Completion_Date2='',@Workflow_Completion_Time1='',@Workflow_Completion_Time2=''   select @Workflow_Completion_Date1=Workflow_Completion_Date,@Workflow_Completion_Time1=Workflow_Completion_Time   from #temp_history_table where Node_ID= @Node_ID2   select top 1 @Workflow_Completion_Date2=Workflow_Completion_Date,@Workflow_Completion_Time2=Workflow_Completion_Time   from #temp_history_table where (Workflow_Action=2)   and (Workflow_Completion_Date>@Workflow_Completion_Date1 or   (Workflow_Completion_Date=@Workflow_Completion_Date1 and Workflow_Completion_Time>@Workflow_Completion_Time1))   order by Workflow_Completion_Date, Workflow_Completion_Time   select @Workflow_Completion_Date2=ISNULL(@Workflow_Completion_Date2,''),@Workflow_Completion_Time2=ISNULL(@Workflow_Completion_Time2,'')   if @Workflow_Completion_Date2=''   begin    insert into #WFScrollTempHistoryTable  select WorkflowStepInstanceID, Workflow_History_User,   Workflow_Step_Name,Workflow_Step_Assign_To,Workflow_Action,Node_ID,   Workflow_Due_Date,Workflow_Due_Time,   Workflow_Completion_Date,Workflow_Completion_Time,'',0,1,Workflow_Comments from #temp_history_table  where (Workflow_Completion_Date>@Workflow_Completion_Date1 or   (Workflow_Completion_Date=@Workflow_Completion_Date1 and Workflow_Completion_Time>=@Workflow_Completion_Time1))   and Workflow_Action in (1,2)   end   else   begin   insert into #WFScrollTempHistoryTable  select WorkflowStepInstanceID, Workflow_History_User,   Workflow_Step_Name,Workflow_Step_Assign_To,Workflow_Action,Node_ID,   Workflow_Due_Date,Workflow_Due_Time,   Workflow_Completion_Date,Workflow_Completion_Time,'',0,1,Workflow_Comments from #temp_history_table  where (Workflow_Action>0 and (Workflow_Completion_Date>@Workflow_Completion_Date1 or   (Workflow_Completion_Date=@Workflow_Completion_Date1 and Workflow_Completion_Time>=@Workflow_Completion_Time1)) and   (Workflow_Completion_Date<@Workflow_Completion_Date2 or   (Workflow_Completion_Date=@Workflow_Completion_Date2 and Workflow_Completion_Time<@Workflow_Completion_Time2)) )   and Workflow_Action in (1,2)   end    fetch next from SubmitResubmitNodes into @Node_ID2, @WorkflowStepInstanceID   end   close SubmitResubmitNodes   deallocate SubmitResubmitNodes    declare AllOtherNodes cursor local fast_forward for   select Node_ID, WorkflowStepInstanceID,Workflow_Action from #temp_history_table where Workflow_Action not in (1,2)   open AllOtherNodes   fetch next from AllOtherNodes into @Node_ID2, @WorkflowStepInstanceID, @Workflow_Action   while @@FETCH_STATUS=0   begin   if @Workflow_Action > 0   begin   insert into #WFScrollTempHistoryTable  select a.WorkflowStepInstanceID, a.Workflow_History_User,   a.Workflow_Step_Name,a.Workflow_Step_Assign_To,a.Workflow_Action,0,  a.Workflow_Due_Date,a.Workflow_Due_Time,  a.Workflow_Completion_Date,a.Workflow_Completion_Time,b.WF_Step_Predecessor,b.Workflow_Step_Sequence,a.DEX_ROW_ID,   CONVERT(VARCHAR(MAX),a.Workflow_Comments) as Workflow_Comments from @WF30100 a, @WFI10003 b   where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and   a.WorkflowStepInstanceID=b.WorkflowStepInstanceID   union    select distinct a.WorkflowStepInstanceID, '' as Workflow_History_User,   a.Workflow_Step_Name,'' as Workflow_Step_Assign_To,0 as Workflow_Action,0,   b.Workflow_Due_Date,b.Workflow_Due_Time,   b.Workflow_Due_Date,b.Workflow_Due_Time,b.WF_Step_Predecessor,b.Workflow_Step_Sequence,1,'' as Workflow_Comments from @WF30100 a, @WFI10004 b   where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and   a.WorkflowStepInstanceID=b.WorkflowStepInstanceID and b.Workflow_Action_Date='' and b.Workflow_Action_Time=''   end   else    begin   insert into #WFScrollTempHistoryTable  select a.WorkflowStepInstanceID, b.WorkflowTaskAssignedTo as Workflow_History_User,   a.Workflow_Step_Name,'' as Workflow_Step_Assign_To,a.Workflow_Action,0,   b.Workflow_Due_Date,b.Workflow_Due_Time,   b.Workflow_Action_Date,b.Workflow_Action_Time,b.WF_Step_Predecessor,b.Workflow_Step_Sequence,a.DEX_ROW_ID,CONVERT(VARCHAR(MAX),a.Workflow_Comments) from @WF30100 a, @WFI10004 b   where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and   a.WorkflowStepInstanceID=b.WorkflowStepInstanceID and b.Workflow_Action_Date<>''    union select top 1 WorkflowStepInstanceID, '' as Workflow_History_User,   Workflow_Step_Name,'' as Workflow_Step_Assign_To,0 as Workflow_Action,0,   Workflow_Due_Date,Workflow_Due_Time,   Workflow_Due_Date,Workflow_Due_Time, WF_Step_Predecessor,Workflow_Step_Sequence,1,'' from @WFI10004   where WorkflowStepInstanceID=@WorkflowStepInstanceID and Workflow_Action_Date=''   end    fetch next from AllOtherNodes into @Node_ID2, @WorkflowStepInstanceID, @Workflow_Action   end   close AllOtherNodes   deallocate AllOtherNodes    end   else if @treeview_level=2  begin  select @Workflow_Completion_Date1=Workflow_Completion_Date,@Workflow_Completion_Time1=Workflow_Completion_Time   from #temp_history_table where Node_ID= @node_id  select top 1 @Workflow_Completion_Date2=Workflow_Completion_Date,@Workflow_Completion_Time2=Workflow_Completion_Time   from #temp_history_table where (Workflow_Action=2)   and (Workflow_Completion_Date>@Workflow_Completion_Date1 or   (Workflow_Completion_Date=@Workflow_Completion_Date1 and Workflow_Completion_Time>@Workflow_Completion_Time1))   order by Workflow_Completion_Date, Workflow_Completion_Time   select @Workflow_Completion_Date2=ISNULL(@Workflow_Completion_Date2,''),@Workflow_Completion_Time2=ISNULL(@Workflow_Completion_Time2,'')   if @Workflow_Completion_Date2=''   begin   insert into #WFScrollTempHistoryTable  select WorkflowStepInstanceID, Workflow_History_User,   Workflow_Step_Name,Workflow_Step_Assign_To,Workflow_Action,Node_ID,   Workflow_Due_Date,Workflow_Due_Time,   Workflow_Completion_Date,Workflow_Completion_Time,'',0,1,Workflow_Comments from #temp_history_table  where (Workflow_Completion_Date>@Workflow_Completion_Date1 or   (Workflow_Completion_Date=@Workflow_Completion_Date1 and Workflow_Completion_Time>=@Workflow_Completion_Time1))   and Workflow_Action in (1,2)   end   else   begin   insert into #WFScrollTempHistoryTable  select WorkflowStepInstanceID, Workflow_History_User,   Workflow_Step_Name,Workflow_Step_Assign_To,Workflow_Action,Node_ID,   Workflow_Due_Date,Workflow_Due_Time,   Workflow_Completion_Date,Workflow_Completion_Time,'',0,1,Workflow_Comments from #temp_history_table  where (Workflow_Action>0 and (Workflow_Completion_Date>@Workflow_Completion_Date1 or   (Workflow_Completion_Date=@Workflow_Completion_Date1 and Workflow_Completion_Time>=@Workflow_Completion_Time1)) and   (Workflow_Completion_Date<@Workflow_Completion_Date2 or   (Workflow_Completion_Date=@Workflow_Completion_Date2 and Workflow_Completion_Time<@Workflow_Completion_Time2)) )   and Workflow_Action in (1,2)   end   end  else   begin  select @WorkflowStepInstanceID=WorkflowStepInstanceID, @Workflow_Action=Workflow_Action from #temp_history_table  where Node_ID = @node_id  if @Workflow_Action > 0   begin   insert into #WFScrollTempHistoryTable  select a.WorkflowStepInstanceID, a.Workflow_History_User,   a.Workflow_Step_Name,a.Workflow_Step_Assign_To,a.Workflow_Action,0,  a.Workflow_Due_Date,a.Workflow_Due_Time,  a.Workflow_Completion_Date,a.Workflow_Completion_Time,b.WF_Step_Predecessor,b.Workflow_Step_Sequence,  a.DEX_ROW_ID,CONVERT(VARCHAR(MAX),a.Workflow_Comments) as Workflow_Comments from @WF30100 a, @WFI10003 b   where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and   a.WorkflowStepInstanceID=b.WorkflowStepInstanceID   union   select distinct a.WorkflowStepInstanceID, '' as Workflow_History_User,   a.Workflow_Step_Name,'' as Workflow_Step_Assign_To,0 as Workflow_Action,0,   b.Workflow_Due_Date,b.Workflow_Due_Time,   b.Workflow_Due_Date,b.Workflow_Due_Time,b.WF_Step_Predecessor,b.Workflow_Step_Sequence,  1,'' as Workflow_Comments from @WF30100 a, @WFI10004 b   where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and   a.WorkflowStepInstanceID=b.WorkflowStepInstanceID and b.Workflow_Action_Date='' and b.Workflow_Action_Time=''   end    else    begin   insert into #WFScrollTempHistoryTable  select a.WorkflowStepInstanceID, b.WorkflowTaskAssignedTo as Workflow_History_User,   a.Workflow_Step_Name,'' as Workflow_Step_Assign_To,a.Workflow_Action,0,   b.Workflow_Due_Date,b.Workflow_Due_Time,   b.Workflow_Action_Date,b.Workflow_Action_Time,b.WF_Step_Predecessor,b.Workflow_Step_Sequence,  a.DEX_ROW_ID,CONVERT(VARCHAR(MAX),a.Workflow_Comments) from @WF30100 a, @WFI10004 b   where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and   a.WorkflowStepInstanceID=b.WorkflowStepInstanceID and b.Workflow_Action_Date<>''    union select top 1 WorkflowStepInstanceID, '' as Workflow_History_User,   Workflow_Step_Name,'' as Workflow_Step_Assign_To,0 as Workflow_Action,0,   Workflow_Due_Date,Workflow_Due_Time,   '','',WF_Step_Predecessor,Workflow_Step_Sequence,1,'' from @WFI10004   where WorkflowStepInstanceID=@WorkflowStepInstanceID and Workflow_Action_Date=''   end   end  select @SQL_Text1=''  select @SQL_Text1= 'insert into '+@WorkflowScrollTempHistoryTable+  ' select WorkflowStepInstanceID, Workflow_History_User, Workflow_Step_Name, '+  ' Workflow_Step_Assign_To, Workflow_Action, Node_ID, '+  ' Workflow_Due_Date, Workflow_Due_Time, Workflow_Completion_Date, Workflow_Completion_Time, '+  ' WF_Step_Predecessor, Workflow_Step_Sequence, SEQNUMBR, Workflow_Comments '+  ' from #WFScrollTempHistoryTable '  exec (@SQL_Text1)   if object_id('tempdb..#temp_history_table') is not null drop table #temp_history_table  if object_id('tempdb..#WFScrollTempHistoryTable') is not null drop table #WFScrollTempHistoryTable  END    
GO
GRANT EXECUTE ON  [dbo].[wfBuildWorkflowHistoryScrollTempTable] TO [DYNGRP]
GO

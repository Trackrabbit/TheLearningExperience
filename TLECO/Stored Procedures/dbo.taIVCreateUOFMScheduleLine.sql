SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taIVCreateUOFMScheduleLine] @I_vUOMSCHDL  char(10),    @I_vUOFM  char(8),   @I_vEQUIVUOM char(8),   @I_vEQUOMQTY numeric(19,5),    @I_vUOFMLONGDESC char(254)='',   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @SEQNUMBR numeric(19,5),   @CMPANYID smallint,  @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,    @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int,               @baseuom char(8),             @QTYBSUOM numeric(19,5)       select  @SEQNUMBR = 0,      @CMPANYID = 0,  @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taIVCreateUOFMScheduleLinePre  @I_vUOMSCHDL output,  @I_vUOFM output,  @I_vEQUIVUOM output,  @I_vEQUOMQTY output,  @I_vUOFMLONGDESC output,   @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4763    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vUOMSCHDL is NULL or  @I_vUOFM is NULL or  @I_vEQUIVUOM is NULL or  @I_vEQUOMQTY is NULL or  @I_vUOFMLONGDESC is NULL or     @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or   @I_vUSRDEFND2 is NULL or   @I_vUSRDEFND3 is NULL or   @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 4764    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vUOMSCHDL = UPPER(@I_vUOMSCHDL)  if  ( @I_vUOMSCHDL = '' ) begin  select @O_iErrorState = 4765     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vUOFM = '' ) begin  select @O_iErrorState = 4768     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vEQUIVUOM = '' ) begin  select @O_iErrorState = 4769     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEQUOMQTY <= 0 ) begin  select @O_iErrorState = 4771     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end   if ( @I_vEQUIVUOM <> @I_vUOFM )  begin  if ( not exists( select 1 from IV40202 a (nolock) where a.UOMSCHDL = @I_vUOMSCHDL and a.UOFM = @I_vEQUIVUOM ) and  not exists( select 1 from IV40202 a (nolock) where a.UOMSCHDL = @I_vUOMSCHDL and a.UOFM = @I_vUOFM ) )   begin  select @O_iErrorState = 4772     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vEQUIVUOM = @I_vUOFM ) and (@I_vEQUOMQTY <> 1) begin  select @O_iErrorState = 5615     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end   select @SEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from IV40202 a (nolock) where a.UOMSCHDL = @I_vUOMSCHDL  select @baseuom = UOFM from IV40202 where (SEQNUMBR = 16384 and UOMSCHDL = @I_vUOMSCHDL) select @QTYBSUOM = @I_vEQUOMQTY select @QTYBSUOM =   case  when @I_vEQUIVUOM <> @baseuom  then 0  else @QTYBSUOM  end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 4773     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if not exists( select 1 from IV40202 (nolock) where  UOMSCHDL = @I_vUOMSCHDL and UOFM = @I_vUOFM and EQUIVUOM = @I_vEQUIVUOM )   begin  insert into IV40202 (   UOMSCHDL,  UOFM,  SEQNUMBR,   EQUIVUOM,   EQUOMQTY,   QTYBSUOM,  UOFMLONGDESC  )  select   @I_vUOMSCHDL,     @I_vUOFM,     @SEQNUMBR,     @I_vEQUIVUOM,     @I_vEQUOMQTY,     @QTYBSUOM,  @I_vUOFMLONGDESC     if @@error <> 0  begin  select @O_iErrorState = 4774    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 4775    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taIVCreateUOFMScheduleLinePost  @I_vUOMSCHDL,  @I_vUOFM,  @I_vEQUIVUOM,  @I_vEQUOMQTY,  @I_vUOFMLONGDESC,     @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4770    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taIVCreateUOFMScheduleLine] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[seeSalesPerMonthDetail_Create] @iLanguageID int   as   set nocount on   declare @sqldropstring varchar(400),   @sqlstring1 varchar(8000),   @sqlstring2 varchar(8000),   @sqlstring3 varchar(8000),   @sqlstring4 varchar(8000),   @sqlstring5 varchar(8000),   @sqlstring6 varchar(8000),   @sqlstring7 varchar(8000),   @sqlstring8 varchar(8000),   @sqlstring9 varchar(8000),   @sqlstring10 varchar(8000),   @sqljoinstring varchar(8000),   @sqlaccessstring varchar(2000),   @tNumberSegments int,   @tSegment int,   @I_iDictID int,   @I_iLangID int,   @I_iMessageNumber int,   @I_iAliasMessageNumber int,   @I_iIntegerValue int,  @Document_Type_Int varchar(255), @Void_Status varchar(255), @Document_Status varchar(255), @Document_Date varchar(255), @Customer_Number varchar(255), @Customer_Name varchar(255), @Document_Number varchar(255), @Document_Type varchar(255), @Sales_Amount varchar(255), @Customer_Number_For_DrillBack varchar(255), @Document_Number_For_DrillBack varchar(255)  select @I_iDictID = 0 select @I_iMessageNumber = 22018 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Type_Int output   select @I_iDictID = 1493 select @I_iMessageNumber = 23470 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Void_Status output   select @I_iDictID = 1493 select @I_iMessageNumber = 23402 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Status output   select @I_iDictID = 1493 select @I_iMessageNumber = 23418 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Date output   select @I_iDictID = 1493 select @I_iMessageNumber = 23400 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Customer_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 23401 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Customer_Name output   select @I_iDictID = 1493 select @I_iMessageNumber = 23405 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 23412 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Type output   select @I_iDictID = 1493 select @I_iMessageNumber = 23427 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Sales_Amount output   select @I_iDictID = 1493 select @I_iMessageNumber = 23400 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Customer_Number_For_DrillBack output   select @I_iDictID = 1493 select @I_iMessageNumber = 23405 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Number_For_DrillBack output    select @sqldropstring =   'IF EXISTS (SELECT * FROM   sys.objects WHERE  object_id = OBJECT_ID(N''[dbo].[seeSalesPerMonthDetail]'') AND type in ( N''P'', N''PC'' ))  ' +   '  DROP PROCEDURE [dbo].[seeSalesPerMonthDetail]  '   select @sqlstring1 =   'create procedure [dbo].[seeSalesPerMonthDetail] '+   ' @UserDate datetime '+   'as '+   'declare @StartDate datetime '+   'declare @EndDate datetime '+   'set @StartDate = dateadd(dd,-(day(@UserDate)-1),@UserDate) '+   'set @EndDate = dateadd(s,-1,DATEADD(mm, datediff(m,0,@UserDate)+1,0)) '+   'select ['+@Customer_Number+'], '+   '  ['+@Customer_Name+'], '+   '  ['+@Document_Number+'], '+   '  ['+@Document_Type+'], '+   '  ['+@Document_Date+'], '+   '  case ['+@Document_Type_Int+'] when 8  then (['+@Sales_Amount+'] * -1.00) when 1  then ['+@Sales_Amount+'] end as ['+@Sales_Amount+'], '+   '  ['+@Customer_Number_For_DrillBack+'], '+   '  ['+@Document_Number_For_DrillBack+']  '+   ' from ReceivablesTransactions '+   ' where ['+@Document_Type_Int+'] in (1, 8) '+   ' and ['+@Void_Status+'] = ''Normal'' '+   ' and ['+@Document_Status+'] <> ''Unposted'' '+   ' and ['+@Document_Date+'] >= @StartDate '+   ' and ['+@Document_Date+'] <= @EndDate '   select @sqlaccessstring =   'GRANT execute ON [dbo].[seeSalesPerMonthDetail] TO [rpt_accounting manager],[rpt_accounts receivable coordinator],[rpt_executive] '   exec (@sqldropstring)   exec (@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10)   exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[seeSalesPerMonthDetail_Create] TO [DYNGRP]
GO

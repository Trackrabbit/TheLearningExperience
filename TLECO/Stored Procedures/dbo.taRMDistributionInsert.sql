SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMDistributionInsert] @I_vRMDTYPAL smallint, @I_vDOCNUMBR char(20),    @I_vCUSTNMBR char(15), @I_vACTINDX int, @I_vDEBITAMT numeric(19,5), @I_vCRDTAMNT numeric(19,5), @I_vDISTTYPE smallint, @I_vCURRNIDX smallint, @I_vCURNCYID char(15), @I_vTRXSORCE char(13), @I_vDistRef char(30), @I_vPTDUSRID char(15), @I_vRATETPID  char(15),    @I_vXCHGRATE numeric(19,7),   @I_vEXCHDATE  datetime,   @I_vEXPNDATE  datetime,    @I_vEXGTBLID  char(15),   @I_vTIME1  datetime,   @I_vORDBTAMT  numeric(19,5),   @I_vORCRDAMT  numeric(19,5),   @I_vApply smallint,   @I_vPOSTEDDT datetime = '',   @O_iErrorState int = NULL output, @oErrString  varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @SEQNUMBR int,  @SEQNUMBR1 int,  @SEQNUMBR2 int,  @DECPLCUR tinyint,  @MCINSTALLED smallint,    @DOCDATE datetime,  @DTAREF char(25),  @iStatus int,  @O_oErrorState int  select  @O_iErrorState = 0,  @SEQNUMBR = 0,  @SEQNUMBR1 = 0,  @SEQNUMBR2 = 0,  @DECPLCUR = 2,  @MCINSTALLED = 1,    @DOCDATE = '',  @DTAREF = '',  @iStatus = 0,  @O_iErrorState = 0  if(  @I_vRMDTYPAL is NULL or  @I_vDOCNUMBR is NULL or  @I_vACTINDX  is NULL or  @I_vDEBITAMT is NULL or  @I_vCRDTAMNT is NULL or  @I_vDISTTYPE is NULL or  @I_vCURRNIDX is NULL or  @I_vCURNCYID is NULL or  @I_vTRXSORCE is NULL or  @I_vEXPNDATE is NULL or    @I_vEXCHDATE is NULL or    @I_vXCHGRATE is NULL or    @I_vRATETPID is NULL or    @I_vEXGTBLID is NULL or    @I_vTIME1    is NULL or    @I_vORCRDAMT is NULL or    @I_vORDBTAMT is NULL)   begin  select @O_iErrorState = 52    return(@O_iErrorState) end  if(  @I_vRMDTYPAL = 0  or  @I_vDOCNUMBR = '' or  @I_vDISTTYPE = 0) begin  select @O_iErrorState = 57    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR)  if ( (not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> ''))) begin  select @MCINSTALLED = 0 end  select @SEQNUMBR1 = isnull(max(SEQNUMBR),0) from RM10101 (nolock)   where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR select @SEQNUMBR2 = isnull(max(SEQNUMBR),0) from RM30301 (nolock)   where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR select @SEQNUMBR = @SEQNUMBR1+@SEQNUMBR2+16384   if (@I_vApply in(1,2)) begin  insert #records  values (@SEQNUMBR, @I_vDISTTYPE, @I_vDOCNUMBR) end  insert RM10101  (  TRXSORCE,  POSTED,  POSTEDDT,  PSTGSTUS,  CHANGED,  DOCNUMBR,  DCSTATUS,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,   DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef  )  select  @I_vTRXSORCE,    case     when @I_vApply in (1,3,5)  then 1  else 0  end,  case     when @I_vApply = 0  then ''  else @I_vPOSTEDDT  end,  case     when @I_vApply in (1,3,5)  then 1  else 3  end,  0,     @I_vDOCNUMBR,    case     when @I_vApply in (1,3)  then 2  when @I_vApply in (5)  then 0  else 1  end,  @I_vDISTTYPE,    @I_vRMDTYPAL,    @SEQNUMBR,    @I_vCUSTNMBR,    @I_vACTINDX,    @I_vDEBITAMT,    @I_vCRDTAMNT,    '',     '',     0,     case       when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  case       when @MCINSTALLED = 1  then @I_vCURRNIDX  else 0  end,  @I_vORCRDAMT,     @I_vORDBTAMT,     @I_vDistRef   if (@@error <> 0) begin  select @O_iErrorState = 75    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists (select 1 from DTA00300 (nolock) where ACTINDX = @I_vACTINDX) begin  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  select @DOCDATE =  DOCDATE from RM00401 (nolock) where DOCNUMBR = @I_vDOCNUMBR  exec @iStatus = taMdaInsert  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDTASERIES = 3,  @I_vACTINDX = @I_vACTINDX,  @I_vSEQNUMBR = @SEQNUMBR,  @I_vDEBITAMT = @I_vDEBITAMT,  @I_vCRDTAMNT = @I_vCRDTAMNT,  @I_vTRXDATE = @DOCDATE,  @I_vDECPLCUR = @DECPLCUR,  @I_vUpdated = 0,  @O_iErrorState  = @O_iErrorState output,  @oErrString  = @oErrString output  if @O_iErrorState <> 0 or @@error <> 0 or @iStatus <> 0  begin  select @O_iErrorState = 1197    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return(@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMDistributionInsert] TO [DYNGRP]
GO

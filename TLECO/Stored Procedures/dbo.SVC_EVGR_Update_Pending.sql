SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_EVGR_Update_Pending]  @CONSTS                 smallint,  @CONTNBR                char(11),  @LNSEQNBR               numeric(19,5),  @Address         char(15),  @CancelDate          datetime AS declare @Line numeric (19,5) declare @LineStatus char (1) declare @Amount_To_Invoice numeric(19,5)  if @Address > '' and @LNSEQNBR > 0  begin  update SVC00608 with (rowlock) set ENDDATE = @CancelDate, BILEND = @CancelDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and ADRSCODE = @Address  declare Site_Cursor CURSOR for select LNSEQNBR, Contract_Line_Status, Amount_To_Invoice from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and ADRSCODE = @Address  OPEN Site_Cursor  fetch next from Site_Cursor into @Line, @LineStatus, @Amount_To_Invoice  while @@FETCH_STATUS = 0 and @LineStatus <> 'C'  BEGIN   if @Amount_To_Invoice < 0   exec SVC_EVGR_UpdatePendingCredit @CONSTS, @CONTNBR, @Line, @CancelDate  else  Begin  if exists(select * from SVC00601 where  CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and STRTDATE = @CancelDate)  exec SVC_EVGR_Cancel_Contract_Line @CONSTS, @CONTNBR, @Line, @CancelDate  else   begin  update SVC00601 with (rowlock) set ENDDATE = @CancelDate, BILEND = @CancelDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR  and LNSEQNBR = @Line  exec SVC_EVGR_Update_Contract_Line @CONSTS, @CONTNBR, @Line, 5  end  end  fetch next from Site_Cursor into @Line, @LineStatus, @Amount_To_Invoice  END  close Site_Cursor  DEALLOCATE Site_Cursor  end else if @LNSEQNBR > 0  begin  if (select Amount_To_Invoice from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR) < 0   exec SVC_EVGR_UpdatePendingCredit @CONSTS, @CONTNBR, @LNSEQNBR, @CancelDate  else  begin  if exists(select * from SVC00601 where  CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and STRTDATE = @CancelDate)  exec SVC_EVGR_Cancel_Contract_Line @CONSTS, @CONTNBR, @LNSEQNBR, @CancelDate  else  begin  update SVC00601 with (rowlock) set ENDDATE = @CancelDate, BILEND = @CancelDate where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Line @CONSTS, @CONTNBR, @LNSEQNBR, 5  end   end  end else  begin  update SVC00600 with (rowlock) set ENDDATE = @CancelDate, BILEND = @CancelDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR   update SVC00608 with (rowlock) set ENDDATE = @CancelDate, BILEND = @CancelDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR   declare cline_Cursor CURSOR for select LNSEQNBR, Contract_Line_Status from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   OPEN cline_Cursor  fetch next from cline_Cursor into @Line, @LineStatus  while @@FETCH_STATUS = 0 and @LineStatus <> 'C'   BEGIN   if (select Amount_To_Invoice from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line) < 0   exec SVC_EVGR_UpdatePendingCredit @CONSTS, @CONTNBR, @Line, @CancelDate  else  begin  if exists(select * from SVC00601 where  CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and STRTDATE = @CancelDate)  exec SVC_EVGR_Cancel_Contract_Line @CONSTS, @CONTNBR, @Line, @CancelDate  else   begin  update SVC00601 with (rowlock) set ENDDATE = @CancelDate, BILEND = @CancelDate where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  exec SVC_EVGR_Update_Contract_Line @CONSTS, @CONTNBR, @Line, 5  end  end   fetch next from cline_Cursor into @Line, @LineStatus  END  close cline_Cursor  DEALLOCATE cline_Cursor  end  return    
GO
GRANT EXECUTE ON  [dbo].[SVC_EVGR_Update_Pending] TO [DYNGRP]
GO

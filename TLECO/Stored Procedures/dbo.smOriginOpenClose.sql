SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smOriginOpenClose] @I_sOriginIndex smallint = NULL, @I_sSeries smallint = NULL, @I_cOrigin char(30) = NULL, @I_iStartPeriod int = NULL, @I_iEndPeriod int = NULL, @I_tCloseOrigins tinyint = NULL, @I_sYear smallint = NULL, @I_iSQLSessionID int = NULL, @O_iErrorState int = NULL output  as  declare  @tDone tinyint,  @tTransaction tinyint,  @tRollback tinyint,  @iNumberOfRecords int,  @iPeriodID int,  @iNumberOfOpenPeriods int  if @I_tCloseOrigins is NULL or  @I_iStartPeriod is NULL or  @I_iEndPeriod is NULL or  @I_sYear is NULL or  @I_iSQLSessionID is NULL begin  select  @O_iErrorState = 20308  return end  if @@trancount = 0 begin  select  @tTransaction = 1  begin transaction end  select  @O_iErrorState = 0  if @I_sSeries = 1 and @I_sOriginIndex = 1  begin  select  @iNumberOfRecords = count ( FORIGIN )  from  SY40100  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  update  SY40100  set  PSERIES_1 = @I_tCloseOrigins,  PSERIES_2 = @I_tCloseOrigins,  PSERIES_3 = @I_tCloseOrigins,  PSERIES_4 = @I_tCloseOrigins,  PSERIES_5 = @I_tCloseOrigins,  PSERIES_6 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear   if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20343   if @tTransaction = 1  rollback transaction  return  end  end   select  @iNumberOfRecords = count ( FORIGIN )  from  SY40100  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  > 0 and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  update  SY40100  set  CLOSED  = @I_tCloseOrigins  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  > 0 and  YEAR1  = @I_sYear   if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20313   if @tTransaction = 1  rollback transaction  return  end  end end else if @I_sOriginIndex <> 1  begin  if @I_sSeries is NULL or  @I_cOrigin is NULL  begin  select  @O_iErrorState = 20308   if @tTransaction = 1  rollback transaction  return  end   if @I_tCloseOrigins = 0   begin  select  @iNumberOfRecords = count ( FORIGIN )  from  SY40100  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = @I_sSeries and  ODESCTN = @I_cOrigin and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  update  SY40100  set  CLOSED  = @I_tCloseOrigins  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = @I_sSeries and  ODESCTN = @I_cOrigin and  YEAR1  = @I_sYear   if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20313   if @tTransaction = 1  rollback transaction  return  end  end   select  @iNumberOfRecords = count ( FORIGIN )  from  SY40100  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  if @I_sSeries = 2      begin  update  SY40100  set  PSERIES_1 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 3     begin  update  SY40100  set  PSERIES_2 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 4     begin  update  SY40100  set  PSERIES_3 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 5     begin  update  SY40100  set  PSERIES_4 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 6     begin  update  SY40100  set  PSERIES_5 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 7     begin  update  SY40100  set  PSERIES_6 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end   if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20343   if @tTransaction = 1  rollback transaction  return  end  end  end  else   begin  select  @iNumberOfRecords = count ( FORIGIN )  from  SY40100  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = @I_sSeries and  ODESCTN = @I_cOrigin and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  update  SY40100  set  CLOSED  = @I_tCloseOrigins  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = @I_sSeries and  ODESCTN = @I_cOrigin and  YEAR1  = @I_sYear    if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20313   if @tTransaction = 1  rollback transaction  return  end  end   select  @iPeriodID = @I_iStartPeriod   while (@tDone is NULL)  begin  if not exists ( select  1  from  SY40100   where  FORIGIN  = 0 and  PERIODID = @iPeriodID and  SERIES  = @I_sSeries and  YEAR1  = @I_sYear and  CLOSED  = 0)  begin   if @I_sSeries = 2    begin  update  SY40100  set  PSERIES_1 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID = @iPeriodID and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 3   begin  update  SY40100  set  PSERIES_2 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID = @iPeriodID and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 4   begin  update  SY40100  set  PSERIES_3 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID = @iPeriodID and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 5   begin  update  SY40100  set  PSERIES_4 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID = @iPeriodID and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 6   begin  update  SY40100  set  PSERIES_5 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID = @iPeriodID and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 7   begin  update  SY40100  set  PSERIES_6 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID = @iPeriodID and  SERIES  = 0 and  YEAR1  = @I_sYear  end  if @@RowCount = 0  begin  select  @O_iErrorState = 20343   if @tTransaction = 1  rollback transaction  return  end  end   if @iPeriodID = @I_iEndPeriod   begin  select  @tDone = 1  end  else   begin  select  @iPeriodID = @iPeriodID + 1  end  end   end end else if @I_sSeries <> 1  begin  if @I_sSeries is NULL  begin  select  @O_iErrorState = 20308   if @tTransaction = 1  rollback transaction  return  end   select  @iNumberOfRecords = count ( FORIGIN )  from  SY40100  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  if @I_sSeries = 2       begin  update  SY40100  set  PSERIES_1 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 3      begin  update  SY40100  set  PSERIES_2 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 4      begin  update  SY40100  set  PSERIES_3 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end   else if @I_sSeries = 5      begin  update  SY40100  set  PSERIES_4 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 6      begin  update  SY40100  set  PSERIES_5 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end  else if @I_sSeries = 7      begin  update  SY40100  set  PSERIES_6 = @I_tCloseOrigins  where  FORIGIN  = 1 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = 0 and  YEAR1  = @I_sYear  end   if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20343   if @tTransaction = 1  rollback transaction  return  end  end   select  @iNumberOfRecords = count ( PERIODID )  from  SY40100  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = @I_sSeries and  YEAR1  = @I_sYear   if @iNumberOfRecords > 0  begin  update  SY40100  set  CLOSED  = @I_tCloseOrigins  where  FORIGIN  = 0 and  PERIODID >= @I_iStartPeriod and  PERIODID <= @I_iEndPeriod and  SERIES  = @I_sSeries and  YEAR1  = @I_sYear   if @@RowCount <> @iNumberOfRecords  begin  select  @O_iErrorState = 20313   if @tTransaction = 1  rollback transaction  return  end  end end  if @tTransaction = 1   commit transaction  return    
GO
GRANT EXECUTE ON  [dbo].[smOriginOpenClose] TO [DYNGRP]
GO

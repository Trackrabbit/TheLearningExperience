SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taBRBankTransactionHeader]  @I_vOption smallint,    @I_vCMTrxType smallint = 3,   @I_vRcpType smallint = 1,   @I_vTRXDATE datetime = '',   @I_vCHEKBKID char(15),    @I_vCURNCYID char(15) = '',   @I_vCMTrxNum char(20),    @I_vCARDNAME char(15) = '',   @I_vpaidtorcvdfrom char(30) = '',  @I_vDSCRIPTN char(30) = '',   @I_vTRXAMNT numeric(19,5),   @I_vUSERID char(15) = '',   @I_vGLPOSTDT datetime = '',   @I_vDistRef char(30) = '',   @I_vBACHNUMB char(15) = '',   @I_vXCHGRATE numeric(19,7) = 0,  @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,   @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7) = 0,  @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vRequesterTrx smallint = 0,  @I_vUSRDEFND1 char(50) = '',  @I_vUSRDEFND2 char(50) = '',  @I_vUSRDEFND3 char(50) = '',  @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @O_fValidCode int,  @O_iErrorStateDist int,  @O_iErrorStringDist varchar(8000),  @itaProcessAnalyticsErrState int,  @itaProcessAnalyticsErrString varchar(8000),  @iCMDNUMWK varchar(20),  @aaSubLedgerHdrID int,  @INTERID char(5),  @DOCTYNAM varchar(90),  @MasterID char(30),       @DOCTYPE smallint,  @CMPANYID smallint,  @FUNLCURR char(15),  @CURRNIDX smallint,  @FUNCURRNIDX smallint,  @iGetNextNoteIdxErrState int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int,  @CURNCYID char(15),  @ORGCURNCYID char(15),  @O_iInitErrorState int,  @oInitErrString varchar(255),  @NOTEINDX numeric(19,5),  @DECPLCUR int,  @DECPLCURFun int,  @ISMCTRX tinyint,  @taMCCurrencyValidateErrState int,  @taMCCurrencyValidateErrString varchar(255),  @EXGTBLID char(15),  @CMDNUMWK numeric(19,5),  @CurrDate datetime,  @MCTRXAMNT numeric(19,5),  @AUDITTRAIL char(25),  @AUDITTRAILErrState int,  @ACTINDX int,  @DistCMDNUMWK numeric(19,5),  @sessionid int,  @SQNCLINE int,  @iCursorError int,  @JRNENTRY int,  @O_tOUTOK smallint,  @iJrnlEntryErrState int,  @iGLTrxLineInsertErrState int,  @iGLTrxLineInsertErrString varchar(255),  @iGLTrxHdrInsertErrState int,  @iGLTrxHdrInsertErrString varchar(255),  @cCMDNUMWK numeric(19,5),  @cDSTSQNUM int,  @cACTINDX int,  @cDistRef char(30),  @cGLPOSTDT datetime,  @cORCRDAMT numeric(19,5),  @cORDBTAMT numeric(19,5),  @REFRENCE char(30),  @ISMCREG tinyint,  @TRXTOTAL1 numeric(19,5),  @TRXTOTAL2 numeric(19,5),  @TRXTOTAL numeric(19,5),  @DTAREF char(25),  @sumdebit numeric(19,5),  @sumcredit numeric(19,5),  @RNDDIFF int,  @DSTSQNUM int,  @rndamt numeric(19,5),  @Module tinyint,  @source varchar(6),  @icmGetLastJournalNumberErrState int  select   @O_fValidCode = 1,  @itaProcessAnalyticsErrState = 0,  @itaProcessAnalyticsErrString = '',  @iCMDNUMWK = '',  @INTERID = '',  @aaSubLedgerHdrID = 0,  @DOCTYNAM = '',  @MasterID = '2',       @DOCTYPE = 0,  @O_iErrorState = 0,  @CMPANYID = 0,  @FUNLCURR = '',  @CURRNIDX = 0,  @FUNCURRNIDX = 0,  @iGetNextNoteIdxErrState = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @iError = 0,  @CURNCYID = '',  @ORGCURNCYID = '',  @O_iInitErrorState = 0,  @oInitErrString = '',  @NOTEINDX = 0,  @DECPLCUR = 0,  @DECPLCURFun = 0,  @ISMCTRX = 0,  @taMCCurrencyValidateErrState = 0,  @taMCCurrencyValidateErrString = '',  @EXGTBLID = '',  @CMDNUMWK = 0,  @CurrDate = '',  @MCTRXAMNT = 0,  @AUDITTRAIL = '',  @AUDITTRAILErrState = 0,  @ACTINDX = 0,  @DistCMDNUMWK = 0,  @sessionid = 0,  @SQNCLINE = 16384,  @iCursorError = 0,  @JRNENTRY = 0,  @O_tOUTOK = 0,  @iJrnlEntryErrState = 0,  @iGLTrxLineInsertErrState = 0,  @iGLTrxLineInsertErrString = '',  @iGLTrxHdrInsertErrState = 0,  @iGLTrxHdrInsertErrString = '',  @cCMDNUMWK = 0,  @cDSTSQNUM = 0,  @cACTINDX = 0,  @cDistRef = '',  @cGLPOSTDT = '',  @cORCRDAMT = 0,  @cORDBTAMT = 0,  @REFRENCE = '',  @ISMCREG = 0,  @TRXTOTAL1 = 0,  @TRXTOTAL2 = 0,  @TRXTOTAL = 0,  @DTAREF = '',  @sumdebit = 0,  @sumcredit = 0,  @RNDDIFF = 0,  @DSTSQNUM = 0,  @rndamt = 0,  @Module = 0,  @source = '',  @icmGetLastJournalNumberErrState = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taBRBankTransactionHeaderPre  @I_vOption output,  @I_vCMTrxType output,  @I_vTRXDATE output,  @I_vCHEKBKID output,  @I_vCMTrxNum output,  @I_vpaidtorcvdfrom output,  @I_vDSCRIPTN output,  @I_vTRXAMNT output,  @I_vUSERID output,  @I_vGLPOSTDT output,  @I_vDistRef output,  @I_vBACHNUMB output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7579    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vOption is null or  @I_vCMTrxType is null or  @I_vTRXDATE is null or  @I_vCHEKBKID is null or  @I_vCMTrxNum is null or  @I_vpaidtorcvdfrom is null or  @I_vDSCRIPTN is null or  @I_vTRXAMNT is null or  @I_vUSERID is null or  @I_vGLPOSTDT is null or  @I_vDistRef is null or  @I_vBACHNUMB is null or  @I_vXCHGRATE is null or  @I_vRATETPID is null or  @I_vEXPNDATE is null or  @I_vEXCHDATE is null or  @I_vEXGTBDSC is null or  @I_vEXTBLSRC is null or  @I_vRATEEXPR is null or  @I_vDYSTINCR is null or  @I_vRATEVARC is null or  @I_vTRXDTDEF is null or  @I_vRTCLCMTD is null or  @I_vPRVDSLMT is null or  @I_vDATELMTS is null or  @I_vTIME1 is null or  @I_vRequesterTrx is null) begin  select @O_iErrorState = 7580    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vTRXAMNT < 0) begin  select @O_iErrorState = 7581     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vCMTrxNum = UPPER(@I_vCMTrxNum)  select @sessionid = @@spid  select @DistCMDNUMWK = cast(@sessionid as numeric(19,5)) + .999  select @INTERID = INTERID, @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select @CurrDate = convert(varchar(12),getdate())  if (@I_vTRXDATE = '') begin  select @I_vTRXDATE = @CurrDate end  if (@I_vGLPOSTDT = '') begin  select @I_vGLPOSTDT = @I_vTRXDATE end  if (@I_vUSERID = '') begin  select @I_vUSERID = 'eBusiness' end  if (exists(select 1 from CM00100 (nolock) where CURNCYID <> '')) begin  select @ISMCREG = 1 end  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  if @iGetNextNoteIdxErrState <> 0 select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 7582    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vOption = 1) and (@I_vCURNCYID <> '')) begin  select @O_iErrorState = 5605     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @CURNCYID = CURNCYID,  @ACTINDX = ACTINDX  from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  if (@I_vOption = 2) begin  if (@I_vCURNCYID <> '')  begin  if (not exists(select 1 from DYNAMICS..MC60100 (nolock) where CMPANYID = @CMPANYID and CURNCYID = @I_vCURNCYID))  begin  select @O_iErrorState = 5606     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if exists(select 1 from DYNAMICS..MC60100 (nolock) where CMPANYID = @CMPANYID and CURNCYID = @I_vCURNCYID and INACTIVE = 1)  begin  select @O_iErrorState = 5607     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @I_vCMTrxType = 2   if (@I_vRcpType not in (1,2,3))  begin  select @O_iErrorState = 5608     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = @CURNCYID,  @ORGCURNCYID = @I_vCURNCYID  end  else  begin  if ((@CURNCYID <> @FUNLCURR) and (@I_vCURNCYID not in (@FUNLCURR, @CURNCYID)))  begin  select @O_iErrorState = 5609     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @ORGCURNCYID = @CURNCYID  select @CURNCYID = @I_vCURNCYID  end end  select @CURRNIDX = CURRNIDX,  @DECPLCUR = DECPLCUR - 1  from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID  select @FUNCURRNIDX = CURRNIDX,  @DECPLCURFun = DECPLCUR - 1  from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@FUNLCURR = '') begin  select @O_iErrorState = 7583    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@CURNCYID = '') begin  select @DECPLCUR = @DECPLCURFun end  if ((@I_vOption < 1) or (@I_vOption > 2)) begin  select @O_iErrorState = 7584     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vOption = 1) begin  if ((@I_vCMTrxType < 3) or (@I_vCMTrxType > 6))  begin  select @O_iErrorState = 7585     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCHEKBKID = '') begin  select @O_iErrorState = 7586     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCMTrxNum = '') begin  select @O_iErrorState = 7587     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRATEEXPR not in(-1,0,1,2,3,4,5,6,7,8,9)) begin  select @O_iErrorState = 7589     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRXDTDEF not in(-1,0,1,2)) begin  select @O_iErrorState = 7590     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRTCLCMTD not in(-1,0,1)) begin  select @O_iErrorState = 7591     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 7592     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@ACTINDX = 0) begin  select @O_iErrorState = 7593     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1)) begin  select @O_iErrorState = 7594     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRXAMNT <> round(@I_vTRXAMNT, @DECPLCUR)) begin  select @O_iErrorState = 7595     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select 1 from DYNAMICS..MC60100 (nolock) where CMPANYID = @CMPANYID and CURNCYID = @CURNCYID and INACTIVE = 1) begin  select @O_iErrorState = 7596    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCARDNAME <> '') begin  if not exists(select 1 from SY03100 (nolock) where CARDNAME = @I_vCARDNAME)  begin  select @O_iErrorState = 8113     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vOption = 2) and (@I_vRcpType = 3)  begin  if not exists(select 1 from SY03100 (nolock) where CARDNAME = @I_vCARDNAME and RCVBGRBX = 0 and CBRCVBLE = 1)  begin  select @O_iErrorState = 8114     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@I_vOption = 1) begin  select @Module = 4 end else begin  select @Module = 3 end  if ((@CURNCYID <> '') and (@CURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCHEKBKID,  @I_vDOCDATE = @I_vTRXDATE,  @I_vCURNCYID = @CURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = @Module,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @taMCCurrencyValidateErrString output,  @O_iErrorState = @taMCCurrencyValidateErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@taMCCurrencyValidateErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taMCCurrencyValidateErrString  select @O_iErrorState = 7597    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  else begin  select @ISMCTRX = 0,  @I_vDYSTINCR = 0,  @I_vEXCHDATE = '',  @I_vEXPNDATE = '',  @I_vRATEEXPR = 0,  @I_vRATETPID = '',  @I_vRTCLCMTD = 0,  @I_vXCHGRATE = 0 end  if ((@I_vTIME1 = '') and (@ISMCTRX = 1)) begin  select @I_vTIME1 = ' '+ substring(convert(varchar(25),getdate()),12,12) end  select @source = TRXSRCPX from SY01000 (nolock) where SERIES = 2 and TRXSRCPX like 'CMTR_'  exec @iStatus = taGetTrxSourceNumber  2,  @source,  1,  @AUDITTRAIL output,  @AUDITTRAILErrState output select @iError = @@error if ((@iStatus <> 0) or (@AUDITTRAILErrState <> 0 or @AUDITTRAIL = '')) begin  if (@AUDITTRAILErrState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @AUDITTRAILErrState  end  select @O_iErrorState = 7598    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vBACHNUMB = '') begin  select @I_vBACHNUMB = @AUDITTRAIL end  if (@ISMCTRX = 1) begin  if (@I_vRTCLCMTD = 0)  begin  update CM20400 set  DEBITAMT = round(ORDBTAMT * @I_vXCHGRATE, @DECPLCURFun),  CRDTAMNT = round(ORCRDAMT * @I_vXCHGRATE, @DECPLCURFun)  where CMDNUMWK = @DistCMDNUMWK and VOIDED = 0  if (@@error <> 0)  begin  select @O_iErrorState = 7599    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @MCTRXAMNT = round(@I_vTRXAMNT * @I_vXCHGRATE, @DECPLCURFun)   end  else  begin  if (@I_vRTCLCMTD = 1)  begin  update CM20400 set  DEBITAMT = round(ORDBTAMT / @I_vXCHGRATE, @DECPLCURFun),  CRDTAMNT = round(ORCRDAMT / @I_vXCHGRATE, @DECPLCURFun)  where CMDNUMWK = @DistCMDNUMWK and VOIDED = 0  if (@@error <> 0)  begin  select @O_iErrorState = 7600    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @MCTRXAMNT = round(@I_vTRXAMNT / @I_vXCHGRATE, @DECPLCURFun)  end end  if (@I_vOption = 1) begin  update CM00100 set  CURRBLNC =  case  when @I_vCMTrxType = 5  then CURRBLNC + @I_vTRXAMNT  else CURRBLNC - @I_vTRXAMNT  end,  MODIFDT = @CurrDate  where CHEKBKID = @I_vCHEKBKID  if (@@error <> 0)  begin  select @O_iErrorState = 5610    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = cmGetLastJournalNumber @CMDNUMWK output, @icmGetLastJournalNumberErrState output select @iError = @@error if ((@iStatus <> 0) or (@icmGetLastJournalNumberErrState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 10449    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @CMDNUMWK = @CMDNUMWK + 1  if (@I_vOption in(1,2)) begin  insert CM20100  (  CMDNUMWK,  RecNumControl,  VOIDED,  CNTRLTYP,  AUDITTRAIL,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG  )  select  @CMDNUMWK,    @CMDNUMWK,    0,     @I_vOption,    @AUDITTRAIL,    @I_vCHEKBKID,    @I_vCMTrxType,    @I_vCMTrxNum,    0     if (@@error <> 0)  begin  select @O_iErrorState = 7601    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vOption = 1) begin  insert CM20200  (  CMRECNUM,  sRecNum,  RCRDSTTS,  CHEKBKID,  CMTrxNum,  CMTrxType,  TRXDATE,  GLPOSTDT,  TRXAMNT,  CURNCYID,  CMLinkID,  paidtorcvdfrom,  DSCRIPTN,  Recond,  RECONUM,  ClrdAmt,  clearedate,  VOIDED,  VOIDDATE,  VOIDPDATE,  VOIDDESC,  NOTEINDX,  AUDITTRAIL,  DEPTYPE,  SOURCDOC,  SRCDOCTYP,  SRCDOCNUM,  POSTEDDT,  PTDUSRID,  MODIFDT,  MDFUSRID,  USERDEF1,  USERDEF2,  ORIGAMT,  Checkbook_Amount,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  EXPNDATE,  CURRNIDX,  DECPLCUR,  DENXRATE,  MCTRXSTT,  Xfr_Record_Number,  EFTFLAG  )  select  @CMDNUMWK,    @CMDNUMWK,    40,     @I_vCHEKBKID,    @I_vCMTrxNum,    @I_vCMTrxType,    @I_vTRXDATE,    @I_vGLPOSTDT,    case     when @ISMCTRX = 1  then @MCTRXAMNT  else @I_vTRXAMNT  end,  case     when @ISMCREG = 1  then @CURNCYID  else ''  end,  '',     @I_vpaidtorcvdfrom,   @I_vDSCRIPTN,    0,     0,     0,     '',     0,     '',     '',     '',     @NOTEINDX,    @AUDITTRAIL,    0,     @source,    @I_vCMTrxType,    @I_vCMTrxNum,    @CurrDate,    @I_vUSERID,    @CurrDate,    @I_vUSERID,    '',     '',     @I_vTRXAMNT,    @I_vTRXAMNT,    @I_vRATETPID,    @EXGTBLID,    @I_vXCHGRATE,    @I_vEXCHDATE,    @I_vTIME1,    @I_vRTCLCMTD,    @I_vEXPNDATE,    @CURRNIDX,    case     when @ISMCREG = 1  then @DECPLCUR  else 0  end,  0,     0,     0,     0     if (@@error <> 0)  begin  select @O_iErrorState = 7602    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vOption = 2) begin  insert CM20300  (  CMRECNUM,  sRecNum,  CNTRLTYP,  DEPOSITED,  MDFUSRID,  MODIFDT,  CHEKBKID,  depositnumber,  RCPTNMBR,  receiptdate,  RCPTAMT,  RcpType,  CARDNAME,  CURNCYID,  BANKNAME,  BNKBRNCH,  GLPOSTDT,  POSTEDDT,  PTDUSRID,  CMLinkID,  RcvdFrom,  DSCRIPTN,  VOIDED,  VOIDDATE,  VOIDPDATE,  VOIDDESC,  USERDEF1,  USERDEF2,  NOTEINDX,  RCRDSTTS,  SOURCDOC,  SRCDOCNUM,  SRCDOCTYP,  AUDITTRAIL,  ORIGAMT,  Checkbook_Amount,  RATETPID,  RCVGRATETPID,  EXGTBLID,  XCHGRATE,  Receiving_Exchange_Rate,  EXCHDATE,  TIME1,  RTCLCMTD,  RCVGRTCLCMTD,  EXPNDATE,  CURRNIDX,  DECPLCUR,  RLGANLOS,  Cash_Account_Index,  Realized_GL_Account_Inde,  DENXRATE,  MCTRXSTT,  Receiving_DenomEXRate,  Receiving_MC_Transaction,  PMNTNMBR,  EFTFLAG  )  select  @CMDNUMWK,    @CMDNUMWK,    0,     0,     @I_vUSERID,    @CurrDate,    @I_vCHEKBKID,    '',     @I_vCMTrxNum,    @I_vTRXDATE,    case     when @ISMCTRX = 1  then @MCTRXAMNT  else @I_vTRXAMNT  end,  @I_vRcpType,    @I_vCARDNAME,    case     when @ISMCREG = 1  then @CURNCYID  else ''  end,  '',     '',     @I_vGLPOSTDT,    @CurrDate,    @I_vUSERID,    '',     @I_vpaidtorcvdfrom,   @I_vDSCRIPTN,    0,     '',     '',     '',     '',     '',     @NOTEINDX,    40,     @source,    @I_vCMTrxNum,    2,     @AUDITTRAIL,    @I_vTRXAMNT,    case     when @ORGCURNCYID not in (@CURNCYID, @FUNLCURR)  then 0  when @ISMCTRX = 1 and @ORGCURNCYID <> @CURNCYID  then @MCTRXAMNT  else @I_vTRXAMNT  end,  '',     @I_vRATETPID,    @EXGTBLID,    @I_vXCHGRATE,    @I_vXCHGRATE,    @I_vEXCHDATE,    @I_vTIME1,    @I_vRTCLCMTD,    @I_vRTCLCMTD,    @I_vEXPNDATE,    @CURRNIDX,    case     when @ISMCREG = 1  then @DECPLCUR  else 0  end,  0,     0,     0,     0,     0,     0,     0,     '',     0     if (@@error <> 0)  begin  select @O_iErrorState = 5611    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vOption in(1,2)) begin  insert CM20400  (  CMDNUMWK,  VOIDED,  DSTSQNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  DistRef,  GLPOSTDT,  ORCRDAMT,  ORDBTAMT  )  select  @CMDNUMWK,    0,     1,     @ACTINDX,    case     when (@I_vOption = 2 or @I_vCMTrxType = 5) and @ISMCTRX = 1  then @MCTRXAMNT  when (@I_vOption = 2 or @I_vCMTrxType = 5) and @ISMCTRX = 0  then @I_vTRXAMNT  else 0  end,  case     when @I_vCMTrxType in(3,4,6) and @ISMCTRX = 1  then @MCTRXAMNT  when @I_vCMTrxType in(3,4,6) and @ISMCTRX = 0  then @I_vTRXAMNT  else 0  end,  @I_vDistRef,    @I_vGLPOSTDT,    case     when @I_vCMTrxType in(3,4,6)  then @I_vTRXAMNT  else 0  end,  case     when (@I_vOption = 2 or @I_vCMTrxType = 5)  then @I_vTRXAMNT  else 0  end  if (@@error <> 0)  begin  select @O_iErrorState = 7603    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  update CM20400 set  GLPOSTDT = @I_vGLPOSTDT,  CMDNUMWK = @CMDNUMWK  where CMDNUMWK = @DistCMDNUMWK and VOIDED = 0 if (@@error <> 0) begin  select @O_iErrorState = 7623    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@ISMCTRX = 1) begin  select @sumdebit = isnull(sum(DEBITAMT),0),  @sumcredit = isnull(sum(CRDTAMNT),0),  @DSTSQNUM = isnull(max(DSTSQNUM),0) + 1  from CM20400 (nolock) where CMDNUMWK = @CMDNUMWK   select @rndamt = @sumdebit - @sumcredit   if (@rndamt <> 0)  begin  select @RNDDIFF = RNDDIFF from MC40201 (nolock) where CURNCYID = @CURNCYID   if (@RNDDIFF = 0)  begin  select @RNDDIFF = ACTINDX from SY01100 (nolock) where SERIES = 2 and SEQNUMBR = 900  end   if (@RNDDIFF = 0)  begin  select @O_iErrorState = 7703    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert CM20400  (  CMDNUMWK,  VOIDED,  DSTSQNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  DistRef,  GLPOSTDT,  ORCRDAMT,  ORDBTAMT  )  select  @CMDNUMWK,    0,     @DSTSQNUM,    @RNDDIFF,    case     when @rndamt < 0  then (@rndamt * -1)  else 0  end,  case     when @rndamt > 0  then @rndamt  else 0  end,  'ROUND',    @I_vGLPOSTDT,    0,     0     if (@@error <> 0)  begin  select @O_iErrorState = 7702    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ( ((@rndamt < 0) and ((@sumdebit + (@rndamt * -1)) <> @sumcredit)) or  ((@rndamt > 0) and (@sumdebit <> (@sumcredit + @rndamt))))  begin  select @O_iErrorState = 5601    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if exists(select 1 from CM20400 a (nolock), GL00100 b (nolock)   where a.CMDNUMWK = @CMDNUMWK and a.ACTINDX = b.ACTINDX and b.ACCTTYPE <> 2 having sum(a.ORCRDAMT) <> sum(a.ORDBTAMT)) begin  select @O_iErrorState = 7604    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = glGetNextJournalEntry  1,  0,  @JRNENTRY output,  @O_tOUTOK output,  @iJrnlEntryErrState output select @iError = @@error  if ((@iStatus <> 0) or (@iJrnlEntryErrState <> 0) or (@O_tOUTOK <> 1) or (@iError <> 0)) begin  select @O_iErrorState = 7636    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'AAG00102') begin  if exists(select 1 from DYNAMICS..AAG00102 (nolock) where CMPANYID = @CMPANYID)  begin   select @MasterID =   case   when @I_vOption in (1,2)   then '2'  else ''  end  select @DOCTYPE =   case   when @I_vOption = 2  then @I_vOption  when @I_vOption = 1  then @I_vCMTrxType  else 0  end  if @DOCTYPE = 0  begin  select @DOCTYNAM =  case  when @I_vRcpType = 1  then 'Deposit'   when @I_vRcpType = 2  then 'Receipt'   when @I_vRcpType = 3  then 'Check'   when @I_vRcpType = 4  then 'Withdrawal'   when @I_vRcpType = 5  then 'Increase Adjustment'   when @I_vRcpType = 6  then 'Decrease Adjustment'   when @I_vRcpType = 7  then 'Transfer'   else  ''  end  select @DOCTYPE = isnull(CMTrxType,0) from CM40101 (nolock) where DOCTYNAM = @DOCTYNAM  if @DOCTYPE = 0  begin  select @DOCTYPE = @I_vCMTrxType  end   end  select @iCMDNUMWK = convert(varchar(20),@CMDNUMWK)   exec @iStatus = aagCreateSubWorkDist  @aaSubLedgerHdrID = @aaSubLedgerHdrID output,  @aaSubWorkDistID = 0,  @DOCTYPE = @DOCTYPE,  @DOCNUMBR = @iCMDNUMWK,   @MasterID = @MasterID,   @iTableID = 20400,  @SERIES = 2,  @CompanyID = @CMPANYID,   @BalAmt = 0,  @CURNCYID = @CURNCYID,  @CURRNIDX = @CURRNIDX,  @RATETPID = @I_vRATETPID,  @EXGTBLID = @EXGTBLID,  @XCHGRATE = @I_vXCHGRATE,  @EXCHDATE = @I_vEXCHDATE,  @TIME1 = @I_vTIME1,   @RTCLCMTD = @I_vRTCLCMTD,  @DENXRATE = 0,  @MCTRXSTT = 0,  @DECPLACS = @DECPLCUR,  @SqlSessionID = 1,  @INTERID = @INTERID,   @Post = 0,  @OFFINDX = 0,  @TRXSORCE = '',  @O_iErrorState = @O_iErrorStateDist output,  @oErrString = @O_iErrorStringDist output   if (@@error <> 0)   begin  select @O_iErrorState = 9395   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  declare PostBankTrx INSENSITIVE cursor for select  CMDNUMWK,  DSTSQNUM,  ACTINDX,  DistRef,  GLPOSTDT,  ORCRDAMT,  ORDBTAMT  from CM20400 (nolock) where CMDNUMWK = @CMDNUMWK  order by DSTSQNUM  open PostBankTrx select @iCursorError = @@cursor_rows  if (@iCursorError > 0) begin  fetch next from PostBankTrx into  @cCMDNUMWK,  @cDSTSQNUM,  @cACTINDX,  @cDistRef,  @cGLPOSTDT,  @cORCRDAMT,  @cORDBTAMT  while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 7635    deallocate PostBankTrx  return (@O_iErrorState)  end   if (@cDistRef = '')  begin  select @cDistRef = 'Bank Transaction Entry'  end   exec @iStatus = taGLTransactionLineInsert  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vJRNENTRY = @JRNENTRY,  @I_vSQNCLINE = @SQNCLINE,  @I_vACTINDX = @cACTINDX,  @I_vCRDTAMNT = @cORCRDAMT,  @I_vDEBITAMT = @cORDBTAMT,  @I_vDSCRIPTN = @cDistRef,  @I_vORCTRNUM = @cCMDNUMWK,  @I_vORDOCNUM = @I_vCMTrxNum,  @I_vORMSTRID = @I_vCHEKBKID,  @I_vORMSTRNM = @I_vpaidtorcvdfrom,  @I_vOrigSeqNum = @cDSTSQNUM,  @I_vORTRXDESC = @I_vDSCRIPTN,  @O_iErrorState = @iGLTrxLineInsertErrState output,  @oErrString = @iGLTrxLineInsertErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iGLTrxLineInsertErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGLTrxLineInsertErrString  select @O_iErrorState = 7637    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  deallocate PostBankTrx  return (@O_iErrorState)  end   select @SQNCLINE = @SQNCLINE + 16384   fetch next from PostBankTrx into  @cCMDNUMWK,  @cDSTSQNUM,  @cACTINDX,  @cDistRef,  @cGLPOSTDT,  @cORCRDAMT,  @cORDBTAMT  end end  deallocate PostBankTrx  if (@I_vDSCRIPTN = '')  begin  select @REFRENCE = 'Bank Transaction Entry' end else begin  select @REFRENCE = @I_vDSCRIPTN end  exec @iStatus = taGLTransactionHeaderInsert  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vJRNENTRY = @JRNENTRY,  @I_vREFRENCE = @REFRENCE,  @I_vTRXDATE = @I_vGLPOSTDT,  @I_vTRXTYPE = 0,  @I_vSQNCLINE = 16384,  @I_vSOURCDOC = @source,  @I_vCURNCYID = 'ECONNECT',    @O_iErrorState = @iGLTrxHdrInsertErrState output,  @oErrString = @iGLTrxHdrInsertErrString output select @iError = @@error if ((@iStatus <> 0) or (@iGLTrxHdrInsertErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGLTrxHdrInsertErrString  select @O_iErrorState = 7638    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @DTAREF = substring(cast(DTA_Index as varchar),1,9)+substring(cast(DTA_Index as varchar),11,5) from GL10000 (nolock) where JRNENTRY = @JRNENTRY  delete DTA10100 where DTASERIES = 2 and substring(DTAREF,1,14) = @DTAREF if (@@error <> 0) begin  select @O_iErrorState = 7639    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  delete DTA10200 where DTASERIES = 2 and substring(DTAREF,1,14) = @DTAREF if (@@error <> 0) begin  select @O_iErrorState = 7640    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  update GL10000 set  USWHPSTD = @I_vUSERID,  ORPSTDDT = @CurrDate,  ORTRXSRC = @AUDITTRAIL,  DTAControlNum = @CMDNUMWK,  DTATRXType =  case  when @I_vCMTrxType = 2    then 2  when @I_vCMTrxType = 3  then 3  when @I_vCMTrxType = 4  then 4  when @I_vCMTrxType = 5  then 5  when @I_vCMTrxType = 6  then 6  else 0  end,  CURNCYID =  case  when @ISMCREG = 1  then @CURNCYID  else ''  end,  CURRNIDX =  case  when @ISMCREG = 1  then @CURRNIDX  else 0  end,  RATETPID = @I_vRATETPID,  EXGTBLID = @EXGTBLID,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  TIME1 = @I_vTIME1,  RTCLCMTD = @I_vRTCLCMTD,  GLHDRVAL = 0,  OPENYEAR = 0,  Tax_Date = ''  where JRNENTRY = @JRNENTRY if (@@error <> 0) begin  select @O_iErrorState = 5602    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  update GL10001 set  GLLINVAL = 0,  ORTRXTYP =  case  when @I_vCMTrxType = 2    then 2  when @I_vCMTrxType = 3  then 3  when @I_vCMTrxType = 4  then 4  when @I_vCMTrxType = 5  then 5  when @I_vCMTrxType = 6  then 6  else 0  end,  CURRNIDX =  case  when @ISMCREG = 1  then @FUNCURRNIDX  else 0  end,  DTA_GL_Status = 40,  XCHGRATE =  case  when @DSTSQNUM <> OrigSeqNum  then @I_vXCHGRATE  else 0  end,  RATETPID =  case  when @DSTSQNUM <> OrigSeqNum  then @I_vRATETPID  else ''  end,  EXGTBLID =  case  when @DSTSQNUM <> OrigSeqNum  then @EXGTBLID  else ''  end,  EXCHDATE =  case  when @DSTSQNUM <> OrigSeqNum  then @I_vEXCHDATE  else ''  end,  TIME1 =  case  when @DSTSQNUM <> OrigSeqNum  then @I_vTIME1  else ''  end,  RTCLCMTD =  case  when @DSTSQNUM <> OrigSeqNum  then @I_vRTCLCMTD  else 0  end,  CRDTAMNT =  case  when @DSTSQNUM = OrigSeqNum and @rndamt > 0  then @rndamt  when @ISMCTRX = 1 and @I_vRTCLCMTD = 0  then round(ORCRDAMT * @I_vXCHGRATE, @DECPLCURFun)  when @ISMCTRX = 1 and @I_vRTCLCMTD = 1  then round(ORCRDAMT / @I_vXCHGRATE, @DECPLCURFun)  else ORCRDAMT  end,  DEBITAMT =  case  when ((@DSTSQNUM = OrigSeqNum) and (@rndamt < 0))  then (@rndamt * -1)  when @ISMCTRX = 1 and @I_vRTCLCMTD = 0  then round(ORDBTAMT * @I_vXCHGRATE, @DECPLCURFun)  when @ISMCTRX = 1 and @I_vRTCLCMTD = 1  then round(ORDBTAMT / @I_vXCHGRATE, @DECPLCURFun)  else ORDBTAMT  end,  LNESTAT =  case  when @DSTSQNUM = OrigSeqNum  then 258  else LNESTAT  end,  PSTNGTYP = 0  where JRNENTRY = @JRNENTRY if (@@error <> 0) begin  select @O_iErrorState = 5603    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @TRXTOTAL1 = isnull(sum(a.CRDTAMNT),0),  @TRXTOTAL2 = isnull(sum(a.DEBITAMT),0)  from GL10001 a (nolock) where a.ACCTTYPE <> 2 and a.JRNENTRY = @JRNENTRY  select @TRXTOTAL = @TRXTOTAL1 + @TRXTOTAL2  update SY00500 set  BCHCOMNT = 'Bank Transaction Entry',  BCHTOTAL = BCHTOTAL + @TRXTOTAL,  BRKDNALL = 1  where BCHSOURC = 'GL_Normal' and BACHNUMB = @I_vBACHNUMB if (@@error <> 0) begin  select @O_iErrorState = 7700    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @aaSubLedgerHdrID <> 0 begin  exec @iStatus = taProcessAnalytics  @I_vDOCNMBR = @iCMDNUMWK,  @I_vKey = @I_vCMTrxNum,  @I_vDOCTYPE = 0,  @O_iErrorState = @itaProcessAnalyticsErrState output,  @oErrString = @itaProcessAnalyticsErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@itaProcessAnalyticsErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @itaProcessAnalyticsErrString  select @O_iErrorState = 9428    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = aagValidateCodeSubLedHdr  'AAG20002',  'AAG20003',  'AAG2000E',  @aaSubLedgerHdrID,   @O_fValidCode output,  @I_vUSERID,  0  if (@@error <> 0) or (@O_fValidCode<>1)  begin  select @O_iErrorState = 9478    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update AAG20001 set POSTED = 1 where aaSubLedgerHdrID = @aaSubLedgerHdrID  if (@@error <> 0)   begin  select @O_iErrorState = 9479    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = aagCreateVoideRecordInGLForBR  @aaSubLedgerHdrID = @aaSubLedgerHdrID,  @JRNENTRY = @JRNENTRY,  @lastDist = 0,  @GLPOSTDT = @I_vGLPOSTDT,  @CompanyID = @CMPANYID,  @MCRegistered = @ISMCTRX    if (@@error <> 0)   begin  select @O_iErrorState = 9396    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taBRBankTransactionHeaderPost  @I_vOption,  @I_vCMTrxType,  @I_vTRXDATE,  @I_vCHEKBKID,  @I_vCMTrxNum,  @I_vpaidtorcvdfrom,  @I_vDSCRIPTN,  @I_vTRXAMNT,  @I_vUSERID,  @I_vGLPOSTDT,  @I_vDistRef,  @I_vBACHNUMB,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7605    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taBRBankTransactionHeader] TO [DYNGRP]
GO

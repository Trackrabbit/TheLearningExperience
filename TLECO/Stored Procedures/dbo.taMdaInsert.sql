SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[taMdaInsert]  @I_vDOCNUMBR char(21) = '',   @I_vRMDTYPAL smallint = 0,   @I_vDTASERIES smallint,   @I_vACTINDX int,    @I_vSEQNUMBR int,    @I_vDEBITAMT numeric(19,5),   @I_vCRDTAMNT numeric(19,5),   @I_vTRXDATE datetime,   @I_vDECPLCUR tinyint,   @I_vDTAREF char(25)= '',    @I_vJRNENTRY int = 0,   @I_vUpdated tinyint,   @O_iErrorState int = null output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @DTAREF char(25),  @GROUPAMT numeric(19,5),  @iStatus int,  @O_oErrorState int  select  @DTAREF = '',  @GROUPAMT = 0,  @iStatus = 0,  @O_oErrorState = 0  if (@oErrString is null) begin  select @oErrString = '' end  select  @I_vDOCNUMBR = upper(@I_vDOCNUMBR)  if (@I_vDTASERIES <> 2) begin  select @DTAREF = rtrim(@I_vDOCNUMBR) + space(20 - len(@I_vDOCNUMBR)) + cast(@I_vRMDTYPAL as char(1)) end else begin  select @DTAREF =  @I_vDTAREF end  if (exists (select 1 from DTA10100 (nolock)  where DTASERIES = @I_vDTASERIES and  DTAREF   = @DTAREF   and  ACTINDX   = @I_vACTINDX   and  SEQNUMBR  = @I_vSEQNUMBR)) begin  select @O_iErrorState = 3761    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vUpdated = 1)  begin  select @GROUPAMT = GROUPAMT + (@I_vDEBITAMT - @I_vCRDTAMNT) from DTA10100 (nolock)  where DTASERIES = @I_vDTASERIES and  DTAREF   = @DTAREF   and  ACTINDX   = @I_vACTINDX   update DTA10100 set GROUPAMT = @GROUPAMT  where DTASERIES = @I_vDTASERIES and  DTAREF   = @DTAREF   and  ACTINDX   = @I_vACTINDX  if (@@error <> 0)  begin  select @O_iErrorState = 3742    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update DTA10200 set CODEAMT = (round((@GROUPAMT * b.PERCENTAMOUNT / 10000), @I_vDECPLCUR))  from DTA10200 a (nolock) inner join DTA00301 b (nolock) on  a.ACTINDX = b.ACTINDX and  a.GROUPID = b.GROUPID and  a.CODEID  = b.CODEID  where a.DTASERIES = @I_vDTASERIES  and  a.DTAREF    = @DTAREF        and  a.ACTINDX   = @I_vACTINDX  if (@@error <> 0)  begin  select @O_iErrorState = 3498    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  insert into DTA10100  (  DTASERIES,  DTAREF,  ACTINDX,  SEQNUMBR,  GROUPID,  DTA_GL_Reference,  DOCNUMBR,  RMDTYPAL,  GROUPAMT,  JRNENTRY,  TRXDATE,  PSTGSTUS  )  select  @I_vDTASERIES,  @DTAREF,  @I_vACTINDX,  @I_vSEQNUMBR,  GROUPID,  '',  @I_vDOCNUMBR,  @I_vRMDTYPAL,  @I_vDEBITAMT - @I_vCRDTAMNT,  @I_vJRNENTRY,  case @I_vDTASERIES  when 2 then @I_vTRXDATE  else ''  end,  case @I_vDTASERIES  when 2 then 1  else 4  end  from    DTA00300 (nolock)  where   DTA00300.ACTINDX = @I_vACTINDX and  DTA00300.ACCTSTAT  <> 4  if (@@error <> 0)  begin  select  @O_iErrorState = 3743    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into DTA10200  (  DTASERIES,  DTAREF,  ACTINDX,  SEQNUMBR,  GROUPID,  CODEID,  DOCNUMBR,  RMDTYPAL,  POSTDESC,  DTAQNTY,  CODEAMT,  TRXDATE  )  select  @I_vDTASERIES,  @DTAREF,  @I_vACTINDX,  @I_vSEQNUMBR,  DTA00301.GROUPID,  DTA00301.CODEID,  @I_vDOCNUMBR,  @I_vRMDTYPAL,  DTA00301.POSTDESC,  0,  round(((@I_vDEBITAMT - @I_vCRDTAMNT) * DTA00301.PERCENTAMOUNT / 10000),@I_vDECPLCUR),  @I_vTRXDATE  from    DTA00301 (nolock), DTA10100 (nolock)  where   DTA00301.ACTINDX = @I_vACTINDX      and  DTA00301.GROUPID = DTA10100.GROUPID  and  DTA00301.ACTINDX = DTA10100.ACTINDX  and  DTA10100.DTAREF  = @DTAREF       and  @I_vSEQNUMBR  = DTA10100.SEQNUMBR  if (@@error <> 0)  begin  select  @O_iErrorState = 3500    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  update l1 set l1.CODEAMT = l1.CODEAMT - (l3.GROUPAMT-h.GROUPAMT)  from  DTA10100 h (nolock),  DTA10200 l1,  (  select DTASERIES,DTAREF,ACTINDX,SEQNUMBR,GROUPID,max(CODEID) CODEID  from DTA10200 (nolock)  where  DTASERIES = @I_vDTASERIES and   DTAREF  = @DTAREF and  ACTINDX  = @I_vACTINDX and  SEQNUMBR = @I_vSEQNUMBR  group by DTASERIES,DTAREF,ACTINDX,SEQNUMBR,GROUPID  ) l2,  (  select DTASERIES,DTAREF,ACTINDX,SEQNUMBR,GROUPID,sum(CODEAMT) GROUPAMT  from DTA10200 (nolock)  where  DTASERIES = @I_vDTASERIES and   DTAREF  = @DTAREF and  ACTINDX  = @I_vACTINDX and  SEQNUMBR = @I_vSEQNUMBR  group by DTASERIES,DTAREF,ACTINDX,SEQNUMBR,GROUPID  ) l3  where  l1.DTASERIES = l2.DTASERIES   and l1.DTAREF = l2.DTAREF  and l1.ACTINDX = l2.ACTINDX  and l1.SEQNUMBR = l2.SEQNUMBR  and l1.GROUPID = l2.GROUPID  and l1.CODEID = l2.CODEID  and l1.DTASERIES = l3.DTASERIES   and l1.DTAREF = l3.DTAREF  and l1.ACTINDX = l3.ACTINDX  and l1.SEQNUMBR = l3.SEQNUMBR  and l1.GROUPID = l3.GROUPID  and l1.DTASERIES = h.DTASERIES   and l1.DTAREF = h.DTAREF  and l1.ACTINDX = h.ACTINDX  and l1.SEQNUMBR = h.SEQNUMBR  and l1.GROUPID = h.GROUPID  and l3.GROUPAMT <> h.GROUPAMT  if (@@error <> 0) begin  select  @O_iErrorState = 3624    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taMdaInsert] TO [DYNGRP]
GO

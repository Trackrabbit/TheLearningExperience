SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[popDoesInvoiceCostMatch]  @I_cPONumber char(21) = NULL,  @I_nOrd int   = NULL,  @I_RcptNumber char(21) = NULL,  @I_RcptLineNumber int   = NULL,   @I_sDecimalPlaces smallint = NULL,   @O_fIVCCostDiff tinyint     = NULL output,  @O_iErrorState          int      = NULL output  AS  DECLARE @OrigRcptCost numeric(19,5),  @FuncRcptCost numeric(19,5),  @nExchangeRate numeric(15,7),  @sRateCalcMethod smallint,   @nDenomExchangeRate numeric(15,7),  @sMCTrxState smallint,  @sPOP_APPLYTYPE_INVOICE smallint,  @MultiplePOLines int  if( @I_cPONumber is NULL or  @I_nOrd is NULL or  @I_RcptNumber is NULL or  @I_RcptLineNumber is NULL or  @I_sDecimalPlaces is NULL  ) begin  select          @O_iErrorState = 21022  return end   select @O_iErrorState = 0,  @O_fIVCCostDiff = 0,  @MultiplePOLines = -1  select @sPOP_APPLYTYPE_INVOICE = 3,  @OrigRcptCost = 0,  @FuncRcptCost = 0,  @nExchangeRate = 0,  @sRateCalcMethod = 0,  @nDenomExchangeRate = 0,  @sMCTrxState = 0;  CREATE TABLE #FuncCost  (  UNITCOST numeric(19,5) not null  ) CREATE INDEX AK2#FuncCost ON #FuncCost (UNITCOST)    if @I_cPONumber <> '' and @I_nOrd <> 0  BEGIN  insert into #FuncCost  SELECT   CASE isnull(ORCPTCOST, 0)  WHEN 0.0 THEN  0.0  ELSE  dbo.mcFuncCalculateAmountExtended(RATECALC, 4,   XCHGRATE,  DENXRATE,  0,  3,   ORCPTCOST)  END as FuncRcptCost   FROM POP10500  WHERE PONUMBER = @I_cPONumber and POLNENUM = @I_nOrd  and APPYTYPE = @sPOP_APPLYTYPE_INVOICE  END ELSE  BEGIN  if @I_nOrd = @MultiplePOLines  insert into #FuncCost  SELECT   CASE isnull(S.ORUNTCST, 0)  WHEN 0.0 THEN  0.0  ELSE  dbo.mcFuncCalculateAmountExtended(R.RATECALC, 4,   R.XCHGRATE,  R.DENXRATE,  0,  3,   S.ORUNTCST)  END as FuncRcptCost  FROM POP10500 R  join POP10600 S on R.POPRCTNM = S.POPIVCNO and R.RCPTLNNM = S.IVCLINNO  WHERE S.POPRCTNM = @I_RcptNumber and S.RCPTLNNM = @I_RcptLineNumber  and APPYTYPE = @sPOP_APPLYTYPE_INVOICE   else  BEGIN  if @I_RcptNumber <> '' and @I_RcptLineNumber <> 0  BEGIN  insert into #FuncCost  SELECT   CASE isnull(R.ORCPTCOST, 0)  WHEN 0.0 THEN  0.0  ELSE  dbo.mcFuncCalculateAmountExtended(R.RATECALC, 4,   R.XCHGRATE,  R.DENXRATE,  0,  3,   R.ORCPTCOST)  END as FuncRcptCost   FROM POP10500 R  join POP10600 S on R.POPRCTNM = S.POPIVCNO and R.RCPTLNNM = S.IVCLINNO  WHERE S.POPRCTNM = @I_RcptNumber and S.RCPTLNNM = @I_RcptLineNumber  and APPYTYPE = @sPOP_APPLYTYPE_INVOICE  END  END  END if (select count(DISTINCT UNITCOST) from #FuncCost) > 1   select @O_fIVCCostDiff = 1  drop table #FuncCost     
GO
GRANT EXECUTE ON  [dbo].[popDoesInvoiceCostMatch] TO [DYNGRP]
GO

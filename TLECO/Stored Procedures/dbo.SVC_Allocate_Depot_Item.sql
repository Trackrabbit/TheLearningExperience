SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_Allocate_Depot_Item] (@ItemNumber char(31)) as declare @WONumber char(11) declare @RMA char(15), @RTV char(15) declare @Bin char(21) declare @Line numeric(19,5) declare @Item char(31) declare @Serial char(21) declare @LocationCode char(11) declare @Qty numeric(19,5) declare @CustomerOwned tinyint declare @Tracking smallint, @Status smallint declare @Sequence int,  @RecDate datetime,  @DateSEQ numeric(19,5)  declare WO_Item cursor for select WORKORDNUM, LOCNCODE, IBITEMNUM, IBSERIAL, BIN,  QUANTITY, RETDOCID, LNSEQNBR from SVC06100 where WORECTYPE = 2 and CUSTOWN = 0 and IBITEMNUM = @ItemNumber  open WO_Item   fetch next from WO_Item into @WONumber, @LocationCode, @Item, @Serial, @Bin, @Qty, @RMA, @Line  while @@FETCH_STATUS = 0  Begin  if (@RMA > '' and (select Received from SVC05200 where RETDOCID = @RMA and Return_Record_Type = 1 and LNSEQNBR = @Line) = 1)  or @RMA is null or @RMA = ''  begin  exec SVC_Allocate_Quantity @Item, @LocationCode, @Qty  if @Serial > ''  update IV00200 set SERLNSLD  = 1 where ITEMNMBR = @Item and SERLNMBR = @Serial  else if (select ENABLEMULTIBIN from IV40100) = 1  update IV00112 set ATYALLOC = ATYALLOC + @Qty where  ITEMNMBR = @Item and LOCNCODE =@LocationCode and BIN = @Bin and QTYTYPE = 1  end   fetch next from WO_Item into @WONumber, @LocationCode, @Item, @Serial, @Bin, @Qty, @RMA, @Line  End  deallocate WO_Item   declare RTV_Item cursor for select RTV_Number, RTV_Line, RTV_Status, ITMTRKOP, QUANTITY, LOCCODEB   from SVC05601 where RTV_Status < 3 and ITEMNMBR = @ItemNumber and CUSTOWN = 0 and TRANSLINESEQ = 0  open RTV_Item  fetch next from RTV_Item into @RTV, @Line, @Status, @Tracking, @Qty, @LocationCode  while @@FETCH_STATUS = 0  Begin  if @Status = 2   exec SVC_Allocate_Quantity @ItemNumber, @LocationCode, @Qty   if @Tracking = 1 and (select ENABLEMULTIBIN from IV40100) = 1  Begin  declare Bin_record cursor for select SEQNUMBR, LOCCODEB, BIN, QUANTITY from SVC05612 where  RTV_Number = @RTV and RTV_Line = @Line  open Bin_record   fetch next from Bin_record into @Sequence, @LocationCode, @Bin, @Qty  while @@FETCH_STATUS = 0  begin  update IV00112 set ATYALLOC = ATYALLOC + @Qty where  ITEMNMBR = @ItemNumber and LOCNCODE =@LocationCode and BIN = @Bin and QTYTYPE = 1   fetch next from Bin_record into @Sequence, @LocationCode, @Bin, @Qty  end  deallocate Bin_record  End   if @Tracking >= 2   Begin  declare cursor_5602 cursor for select SERLTQTY, SERLNMBR, DATERECD,DTSEQNUM, BIN  from SVC05602 where RTV_Number = @RTV and RTV_Line = @Line  open cursor_5602  fetch next from cursor_5602 into @Qty, @Serial, @RecDate, @DateSEQ, @Bin  while @@FETCH_STATUS = 0   begin  if @Tracking = 2   update IV00200 with (rowlock) set SERLNSLD  = 1 where ITEMNMBR = @ItemNumber and SERLNMBR = @Serial and LOCNCODE = @LocationCode  else  update IV00300 with (rowlock) set ATYALLOC = ATYALLOC + @Qty  where ITEMNMBR = @ItemNumber and LOTNUMBR = @Serial and LOCNCODE = @LocationCode and DATERECD = @RecDate and DTSEQNUM = @DateSEQ   if @Bin > ''  update IV00112 set ATYALLOC = ATYALLOC + @Qty where  ITEMNMBR = @ItemNumber and LOCNCODE =@LocationCode and BIN = @Bin and QTYTYPE = 1   fetch next from cursor_5602 into @Qty, @Serial, @RecDate, @DateSEQ, @Bin  end  deallocate cursor_5602   End   fetch next from RTV_Item into @RTV, @Line, @Status, @Tracking, @Qty, @LocationCode  End  deallocate RTV_Item  return    
GO
GRANT EXECUTE ON  [dbo].[SVC_Allocate_Depot_Item] TO [DYNGRP]
GO

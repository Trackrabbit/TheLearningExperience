SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create proc [dbo].[svcContractReconcileUnpostedRevenue]  @ContractNumber char(11),  @Line numeric (19,5),  @ProcessEndDate datetime,  @UserID char(15),  @TrxSource char(13),  @ErrorNum int output AS declare @CONTNBR char(11),  @LNSEQNBR numeric(19,5),  @FiscalYear int,  @FiscalPeriod int,  @SourceDocument varchar(255),  @InvoiceAmount numeric (19,5),  @TotalPostedRevenue  numeric(19,5),  @PeriodicRevenue numeric(19,5),  @RevenueToPost numeric(19,5),  @StartDate datetime,  @EndDate datetime,  @RevLineEndDdate  datetime,  @CoverageStart datetime,  @CoverageEnd datetime,  @TransactionDate  datetime,  @MinDate   datetime,  @ErrorCondition int,  @SourceType char(3),  @Status smallint,  @DiscountPercent smallint,  @REV_cursor   cursor,  @TotalFiscalPeriods int,  @PeriodCounter int,  @PercentAmount   numeric(19,5),  @Smooth smallint,  @OverrideSmooth smallint,  @LastPartial numeric(19,5)  BEGIN  exec smGetMinDate @MinDate output   select @ContractNumber = isnull(@ContractNumber, ''),  @Line = isnull(@Line, 0),  @ProcessEndDate = isnull(@ProcessEndDate, @MinDate),  @UserID = case  when @UserID is null or @UserID = '' then 'dbo'  else @UserID  end,  @TransactionDate = convert(varchar(12),getdate(),102),  @TrxSource = case  when @TrxSource is null or @TrxSource = '' then 'REVUNPOST'  else @TrxSource  end,  @FiscalYear = 0,  @FiscalPeriod = 0,  @SourceType = 'EGR',  @Status = 0   delete from SVC00614 where USERID = @UserID and TRXSORCE = @TrxSource   DECLARE ContractLines CURSOR   FOR  SELECT SVC00601.CONTNBR, SVC00601.LNSEQNBR, SVC00601.STRTDATE, SVC00601.ENDDATE, SVC00601.DSCPCTAM,  SVC00600.SmoothRevenueCalc  FROM SVC00601  INNER JOIN SVC00600 ON SVC00600.CONSTS = SVC00601.CONSTS and SVC00600.CONTNBR = SVC00601.CONTNBR  and SVC00600.SVC_Liability_Type = 1 and (SVC00600.BILCYC > 1 or (SVC00600.BILCYC =1 and SVC00600.Liabiltiy_Reduction =1))  WHERE SVC00601.CONSTS = 2 and SVC00601.BILSTAT > 0  and (@ContractNumber = '' or (@ContractNumber <> '' and SVC00601.CONTNBR = @ContractNumber))  and (SVC00601.Contract_Line_Status = 'N' or SVC00601.Contract_Line_Status = 'R')  and ((@Line = 0 or @ContractNumber = '') or (@ContractNumber <> '' and @Line <> 0 and SVC00601.LNSEQNBR = @Line))  and (@ProcessEndDate = @MinDate or (@ProcessEndDate <> @MinDate and SVC00601.STRTDATE <= @ProcessEndDate))  OPEN ContractLines  FETCH NEXT FROM ContractLines INTO @CONTNBR, @LNSEQNBR, @StartDate, @EndDate, @DiscountPercent, @Smooth   WHILE (@@FETCH_STATUS = 0)  begin  select  @SourceDocument = '2-' + rtrim(@CONTNBR) + '-' + CONVERT(varchar(20), @LNSEQNBR),  @InvoiceAmount = 0,  @RevLineEndDdate = @MinDate,  @CoverageStart = @MinDate,  @CoverageEnd = @MinDate,  @TotalPostedRevenue = 0,  @FiscalYear = 2009,  @FiscalPeriod = 4,  @PeriodicRevenue = 0,   @RevenueToPost = 0,  @ErrorCondition = 0,  @TotalFiscalPeriods = 0,  @PeriodCounter = 0   select @TotalPostedRevenue = SUM(isnull(Net_Transaction_Amount, 0))   from SVC00604 WITH (NOLOCK)  where CONSTS = 2 and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   select  @InvoiceAmount = ROUND(SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.DSCDLRAM,0) ),2)  from SVC00603 WITH (NOLOCK)   where CONSTS = 2 and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   begin tran PostREV   exec SVC_FiscalPeriods 'sa', @StartDate, @EndDate, @REV_cursor OUTPUT    FETCH LAST FROM @REV_cursor INTO @FiscalPeriod, @CoverageStart, @CoverageEnd, @FiscalYear    select @LastPartial = 1.0   if DATEPART(dd, @CoverageStart) = 1 and @Smooth = 1   set @OverrideSmooth = 1   if @Smooth = 0   begin  select  @LastPartial = (DATEDIFF(dd, @CoverageStart, @EndDate)+1)*1.0/ (DATEDIFF(dd, @CoverageStart, @CoverageEnd)+1) * 1.0,  @TotalFiscalPeriods = @@CURSOR_ROWS  end   else  begin  select @TotalFiscalPeriods = @@CURSOR_ROWS   end   select @TotalFiscalPeriods = case  when @TotalFiscalPeriods is null or @TotalFiscalPeriods <= 0 then 1  else @TotalFiscalPeriods  end   if @Smooth = 0  and @TotalFiscalPeriods > 1  begin  FETCH FIRST FROM @REV_cursor INTO @FiscalPeriod, @CoverageStart, @CoverageEnd, @FiscalYear   select @PercentAmount = ((DATEPART(dd, @CoverageStart) - DATEPART(dd, @StartDate) * 1.00) + 1.00) / ((DATEDIFF(dd, @CoverageStart, @CoverageEnd) * 1.00) + 1.00)  select @PeriodicRevenue =  ROUND((@InvoiceAmount / (@TotalFiscalPeriods - 2 + @PercentAmount + @LastPartial)),2)  end  else  begin  select @PeriodicRevenue =  ROUND((@InvoiceAmount / @TotalFiscalPeriods),2)  end   print 'Processing for Contract ' + rtrim(@CONTNBR) + ' Line  ' + ltrim(convert(varchar(10), @LNSEQNBR))  + ' With Total Invoice ' + ltrim(convert(varchar(10), @InvoiceAmount))  + ' With Total Posted Revevenue as of now ' + ltrim(convert(varchar(10), @TotalPostedRevenue))  + ' With Periodic Revenue ' + ltrim(convert(varchar(10), @PeriodicRevenue)) + ' # for periods in range ' + convert(varchar(3), @TotalFiscalPeriods)   select @InvoiceAmount = @InvoiceAmount - isnull(@TotalPostedRevenue, 0)   if (@PeriodicRevenue > 0)  begin  FETCH FIRST FROM @REV_cursor INTO @FiscalPeriod, @CoverageStart, @CoverageEnd, @FiscalYear   WHILE (@@FETCH_STATUS <> -1)  begin  select @PeriodCounter = @PeriodCounter + 1   print '..Year ' + convert(varchar(4),@FiscalYear) + ' Period ' + convert(varchar(2),@FiscalPeriod) + ' Start Date ' + convert(varchar(12),@CoverageStart, 101) + ' End Date ' +  convert(varchar(12),@CoverageEnd, 101)  if (@CoverageStart <= @ProcessEndDate and @CoverageEnd <= @ProcessEndDate)  begin  if not exists(select 1 from SVC00604 where CONSTS = 2 and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   and YEAR1 = @FiscalYear and PERIODID = @FiscalPeriod)  begin  if (@PeriodCounter >= @TotalFiscalPeriods)  select @PeriodicRevenue = @InvoiceAmount  if (@InvoiceAmount <= @PeriodicRevenue)  select @RevenueToPost = @InvoiceAmount  else if (@InvoiceAmount - @PeriodicRevenue < @PeriodicRevenue)  select @RevenueToPost = @InvoiceAmount  else  select @RevenueToPost = @PeriodicRevenue   if (@RevenueToPost > 0)  begin  exec SVC_RET_Create_Revenue_Recognition_Lines  @FiscalYear  = @FiscalYear,  @FiscalPeriod  = @FiscalPeriod,  @ContractRecordType = 2,  @ContractNumber  = @CONTNBR,  @ContractLine  = @LNSEQNBR,  @Status   = @Status,  @PostedDate  = @MinDate,  @SourceType  = @SourceType,  @SourceDocument  = @SourceDocument,  @TransactionDate = @TransactionDate,  @TransactionAmount = @RevenueToPost,  @UserID   = @UserID,  @StartDate  = @CoverageStart,  @EndDate  = @CoverageEnd,  @Discount  = @DiscountPercent,  @ErrorCondition  = @ErrorCondition OUTPUT  select @ErrorCondition = isnull(@ErrorCondition, 0)   if (@ErrorCondition <> 0)  begin  insert into SVC00614   (  USERID,  TRXSORCE,  CONSTS,  CONTNBR,  LNSEQNBR,  YEAR1,  PERIODID,  LNITMSEQ,  Status,  POSTEDDT,  Transaction_Date,  PSTDAMNT,  Source_Trx_Document_Type,  SourceTrxDocumentNumber,  Transaction_Amount,  SVC_Coverage_Start_Date,  SVC_Coverage_End_Date,  DSCDLRAM,  Net_Transaction_Amount,  ERMSGNUM,  ERRDESCR  )  values  (  @UserID,  @TrxSource,  2,  @CONTNBR,  @LNSEQNBR,  @FiscalYear,  @FiscalPeriod,  1,  @Status,  @MinDate,  @MinDate,  0,  @SourceType,  @SourceDocument,  0,  @CoverageStart,  @CoverageEnd,  0,  0,  @ErrorCondition,  'Error occurred generating revenue'  )  break  end  else  begin  insert into SVC00614   (  USERID,  TRXSORCE,  CONSTS,  CONTNBR,  LNSEQNBR,  YEAR1,  PERIODID,  LNITMSEQ,  Status,  POSTEDDT,  Transaction_Date,  PSTDAMNT,  Source_Trx_Document_Type,  SourceTrxDocumentNumber,  Transaction_Amount,  SVC_Coverage_Start_Date,  SVC_Coverage_End_Date,  DSCDLRAM,  Net_Transaction_Amount,  ERMSGNUM,  ERRDESCR  )  values  (  @UserID,  @TrxSource,  2,  @CONTNBR,  @LNSEQNBR,  @FiscalYear,  @FiscalPeriod,  1,  @Status,  @MinDate,  @TransactionDate,  0,  @SourceType,  @SourceDocument,  @RevenueToPost,  @CoverageStart,  @CoverageEnd,  0,  @RevenueToPost,  0,  ''  )  end   select @InvoiceAmount = @InvoiceAmount - @RevenueToPost  end  end  end   FETCH NEXT FROM @REV_cursor INTO @FiscalPeriod, @CoverageStart, @CoverageEnd, @FiscalYear   end  end  close @REV_cursor  deallocate @REV_cursor   if (@ErrorCondition <> 0)  begin  rollback tran PostREV  set @ErrorNum = @ErrorCondition  end  else  begin  commit tran PostREV  end   FETCH NEXT FROM ContractLines INTO @CONTNBR, @LNSEQNBR, @StartDate, @EndDate, @DiscountPercent, @Smooth  end  CLOSE ContractLines  DEALLOCATE ContractLines  END  return (0)   
GO
GRANT EXECUTE ON  [dbo].[svcContractReconcileUnpostedRevenue] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpDeleteBatch]  @I_iSQLSessionID int             = NULL,  @I_cBatchSource           char(15)        = NULL,  @I_cBatchNumber char(15)        = NULL,  @I_sBatchFrequency          smallint        = NULL,  @I_sTransactionType         smallint        = NULL,  @I_mNoteIndex               numeric(19,5)   = NULL,  @I_iUnpostedTransactions    int             = NULL,  @I_tCalculateGLTaxes tinyint   = NULL,  @O_mUnpostedBatchTotal numeric(19,5)   = NULL output,  @O_tDeleteBatch tinyint   = NULL output,  @O_iErrorState int             = NULL output as  declare  @TRUE                   tinyint,   @FALSE tinyint,   @CLEARING_TRX           smallint,  @BUDGET_TRX smallint,    @POSTED                 smallint,  @RECURRING_POSTED       smallint,  @SINGLE_USE             smallint,  @POST_ACCT              smallint,  @POST_ALLOC_ACCT        smallint,  @UNIT_ACCT              smallint,  @UNIT_ALLOC_ACCT        smallint,  @tTransaction           tinyint,  @tLoop                  tinyint,  @iError int,  @iStatus int,  @TRXSORCE char(13)  select  @O_iErrorState          = 0,  @O_tDeleteBatch         = 0,  @O_mUnpostedBatchTotal  = 0.0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin   select @tLoop = 1   if      @I_iSQLSessionID is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_sBatchFrequency is NULL or  @I_sTransactionType is NULL or  @I_mNoteIndex is NULL or  @I_iUnpostedTransactions is NULL or  @I_tCalculateGLTaxes is NULL  begin  select @O_iErrorState = 20489  break  end    select  @TRUE                   = 1,  @FALSE     = 0,  @POSTED                 = 2,  @RECURRING_POSTED       = 4,  @SINGLE_USE             = 1,  @CLEARING_TRX           = 2,  @BUDGET_TRX    = 4,   @POST_ACCT              = 1,  @POST_ALLOC_ACCT        = 3,  @UNIT_ACCT              = 2,  @UNIT_ALLOC_ACCT        = 4   if @I_sTransactionType = @BUDGET_TRX   begin   select @TRXSORCE = (select top 1 TRXSORCE  from GL12000 with (NOLOCK)  where BCHSOURC = @I_cBatchSource and   BACHNUMB = @I_cBatchNumber and   PSTGSTUS = @POSTED)   delete   GL12000  where  BACHNUMB       = @I_cBatchNumber  and     BCHSOURC       = @I_cBatchSource  and     PSTGSTUS       = @POSTED  end   else  begin   if @I_tCalculateGLTaxes = @TRUE   begin  delete   GL10300  from  GL10300 GLTAX,  GL10000 HDR  where   GLTAX.JRNENTRY = HDR.JRNENTRY  and HDR.BACHNUMB = @I_cBatchNumber  and HDR.BCHSOURC = @I_cBatchSource  and (HDR.PSTGSTUS = @POSTED  or HDR.PSTGSTUS = @RECURRING_POSTED)  and  GLTAX.RCTRXSEQ = 0  end    select @TRXSORCE = (select top 1 TRXSORCE  from GL10000 with (NOLOCK)  where BACHNUMB        = @I_cBatchNumber and  BCHSOURC        = @I_cBatchSource and   (PSTGSTUS       = @POSTED or  PSTGSTUS        = @RECURRING_POSTED))   delete   GL10000  where  BACHNUMB        = @I_cBatchNumber  and     BCHSOURC        = @I_cBatchSource  and     (PSTGSTUS       = @POSTED  or      PSTGSTUS        = @RECURRING_POSTED)   end    if @I_iUnpostedTransactions = 0  begin  delete   SY03900  where  NOTEINDX        = @I_mNoteIndex   if ((select isnull((select top 1 KPGTRXHS from GL40000),0))=1 and @I_cBatchSource in ('GL_Normal','GL_Clearing')) or  ((select isnull((select top 1 KPBUDTRXHIST from GL40000),0))=1 and @I_cBatchSource in ('GL_Budget'))  begin  if (select count(Workflow_Name) from WF100002 where Workflow_Type_Name='General Ledger Batch Approval' and ACTIVE=1)>0  begin   if @I_cBatchSource in ('GL_Normal','GL_Clearing','GL_Budget')  begin  insert into SY30500  select BCHSOURC,BACHNUMB,CREATDDT,TIME1,GLPOSTDT,SERIES,NUMOFTRX,  case NOFPSTGS  when 0 then 1  else NOFPSTGS  end ,BCHCOMNT,  RVRSBACH,USERID,CHEKBKID,BCHTOTAL,BACHDATE,MODIFDT,CURNCYID,CNTRLTRX,CNTRLTOT,  APPROVL,APPRVLDT,APRVLUSERID,ORIGIN,@TRXSORCE,Workflow_Status,CARDNAME   from SY00500  where  BACHNUMB        = @I_cBatchNumber  and     BCHSOURC        = @I_cBatchSource   end  end  end   delete   SY00500  where  BACHNUMB        = @I_cBatchNumber  and     BCHSOURC        = @I_cBatchSource   if @@rowcount <> 1  begin  select @O_iErrorState = 20549  break  end   select @O_tDeleteBatch = @TRUE   end   else     begin     if @I_sTransactionType <> @CLEARING_TRX and   @I_sTransactionType <> @BUDGET_TRX    select   @O_mUnpostedBatchTotal = sum(DEBITAMT) + sum(CRDTAMNT)  from  GL10000 HDR with (NOLOCK)   JOIN GL10001 LINE with (NOLOCK) on   HDR.JRNENTRY    = LINE.JRNENTRY  LEFT OUTER JOIN GL00100 ACCT on   LINE.ACTINDX    = ACCT.ACTINDX  where  HDR.BACHNUMB    = @I_cBatchNumber  and     HDR.BCHSOURC    = @I_cBatchSource  and  HDR.ICDISTS  = @FALSE   and     (ACCT.ACCTTYPE  <> @UNIT_ACCT  and     ACCT.ACCTTYPE   <> @UNIT_ALLOC_ACCT   or  ACCT.ACCTTYPE is NULL)   if @O_mUnpostedBatchTotal is NULL  select @O_mUnpostedBatchTotal = 0.0   end  end   if @O_iErrorState <> 0 begin  if @tTransaction = 1   rollback transaction  end else if @tTransaction = 1  commit transaction  return     
GO
GRANT EXECUTE ON  [dbo].[glpDeleteBatch] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create          procedure [dbo].[aagCreateVoidRecords] @I_nHdrID int, @I_nSeqNum int, @O_nLastDistID int output  as begin  declare @cnt Int,  @seq Int,   @SERIES int,  @CountDistID int,  @INCSEQNMBR int,  @SEQNMBR int,  @VCHRNUM varchar(22),  @RecrdCnt Int,  @DocTye int,  @iErrorState INT,   @iStatus    INT,   @MS_ITEM     INT,  @AllowNeg    SMALLINT,   @bListBox    BINARY(4)    SELECT @bListBox = Company_Options  FROM DYNAMICS..SY01500  WHERE INTERID=DB_NAME()  EXEC @iStatus = DYNAMICS..smGetConstantMSItem   'MS_ITEM_9',   @MS_ITEM OUTPUT,   @iErrorState OUTPUT   IF (@bListBox & @MS_ITEM) = @MS_ITEM  SET @AllowNeg = 1  ELSE   SET @AllowNeg = 0   If @I_nHdrID = 0   RETURN   select  @cnt = 0,  @seq = 0,   @SERIES = 0  , @RecrdCnt = 0   select @SERIES = SERIES, @VCHRNUM = DOCNUMBR, @DocTye = DOCTYPE  from AAG20000 Where aaSubLedgerHdrID = @I_nHdrID    Select @O_nLastDistID = max(aaSubLedgerDistID ) From AAG20001 Where aaSubLedgerHdrID = @I_nHdrID  Select @cnt = max(aaSubLedgerDistID ) From AAG20001 Where aaSubLedgerHdrID = @I_nHdrID  Select @CountDistID = count(aaSubLedgerDistID ) From AAG20001 Where aaSubLedgerHdrID = @I_nHdrID  Select @seq = max(SEQNUMBR ) From AAG20001 Where aaSubLedgerHdrID = @I_nHdrID   begin tran  if @SERIES = 2   begin  Insert into AAG20001  select aaSubLedgerHdrID,aaSubLedgerDistID+ @cnt ,INTERID,CorrespondingUnit,ACTINDX,DISTTYPE,ACCTTYPE,0,DECPLACS,  CRDTAMNT,DEBITAMT,ORCRDAMT,ORDBTAMT,  CURNCYID,CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,   TIME1,RTCLCMTD,DENXRATE,MCTRXSTT, SEQNUMBR,  GLPOSTDT,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaAssetID,aaBookID,aaCopyStatus,aaWinWasOpen,  0,HISTORY,aaDistErrors,APTVCHNM,APTODCTY,aaBrowseType, aaOffsetAcct,  ITEMNMBR, TRXLOCTN, BINNMBR, TRNSTLOC, TRXQTY,PYRLRTYP,  TRXNUMBER, convert(char(12), getdate(), 102),  convert(char(12), getdate(), 108)   from AAG20001   where aaSubLedgerHdrID = @I_nHdrID   end   else  begin  select @RecrdCnt = Count(*) from POP30300 where VCHRNMBR = @VCHRNUM   if @RecrdCnt > 0 and @SERIES = 4 and  @DocTye = 0  begin  DECLARE CURINS CURSOR FOR  SELECT SEQNUMBR FROM AAG20001   WHERE aaSubLedgerHdrID = @I_nHdrID   ORDER BY DISTTYPE,ACTINDX   open CURINS  fetch next from CURINS into @SEQNMBR  set @INCSEQNMBR = 1  WHILE @@FETCH_STATUS = 0  BEGIN  Insert into AAG20001  select aaSubLedgerHdrID,(case when (@cnt-@CountDistID) <> 0 then aaSubLedgerDistID+ @cnt-(@cnt-@CountDistID) else aaSubLedgerDistID+ @cnt end)  ,INTERID,CorrespondingUnit,ACTINDX,DISTTYPE,ACCTTYPE,aaBrowseType,DECPLACS,  CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN DEBITAMT * (-1)  ELSE CRDTAMNT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN CRDTAMNT * (-1)  ELSE DEBITAMT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN ORDBTAMT * (-1)  ELSE ORCRDAMT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN ORCRDAMT * (-1)  ELSE ORDBTAMT  END,  CURNCYID,CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,   TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  (@seq +(@INCSEQNMBR)* @I_nSeqNum),  GLPOSTDT,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaAssetID,aaBookID,aaCopyStatus,aaWinWasOpen,  POSTED,HISTORY,aaDistErrors,APTVCHNM,APTODCTY,aaFutureDist, aaOffsetAcct,  ITEMNMBR, TRXLOCTN, BINNMBR, TRNSTLOC, TRXQTY,PYRLRTYP,  TRXNUMBER, convert(char(12), getdate(), 102),  convert(char(12), getdate(), 108)   from AAG20001   where aaSubLedgerHdrID = @I_nHdrID   and SEQNUMBR = @SEQNMBR    SET @INCSEQNMBR = @INCSEQNMBR +1  FETCH NEXT FROM CURINS INTO @SEQNMBR  END  CLOSE CURINS  DEALLOCATE CURINS   If @@error <> 0 goto errBLK  end  ELSE  BEGIN   DECLARE CURINS CURSOR FOR  SELECT SEQNUMBR FROM AAG20001   WHERE aaSubLedgerHdrID = @I_nHdrID   ORDER BY SEQNUMBR  open CURINS  fetch next from CURINS into @SEQNMBR  set @INCSEQNMBR = 1  WHILE @@FETCH_STATUS = 0  BEGIN  Insert into AAG20001  select aaSubLedgerHdrID,(case when (@cnt-@CountDistID) <> 0 then aaSubLedgerDistID+ @cnt-(@cnt-@CountDistID) else aaSubLedgerDistID+ @cnt end)  ,INTERID,CorrespondingUnit,ACTINDX,DISTTYPE,ACCTTYPE,aaBrowseType,DECPLACS,  CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN DEBITAMT * (-1)  ELSE CRDTAMNT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN CRDTAMNT * (-1)  ELSE DEBITAMT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN ORDBTAMT * (-1)  ELSE ORCRDAMT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN ORCRDAMT * (-1)  ELSE ORDBTAMT  END,  CURNCYID,CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,   TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  (case when (@cnt-@CountDistID) <> 0 then (@seq +(@INCSEQNMBR)* @I_nSeqNum)   else (@seq +aaSubLedgerDistID* @I_nSeqNum) end),  GLPOSTDT,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaAssetID,aaBookID,aaCopyStatus,aaWinWasOpen,  POSTED,HISTORY,aaDistErrors,APTVCHNM,APTODCTY,aaFutureDist, aaOffsetAcct,  ITEMNMBR, TRXLOCTN, BINNMBR, TRNSTLOC, TRXQTY,PYRLRTYP,  TRXNUMBER, convert(char(12), getdate(), 102),  convert(char(12), getdate(), 108)   from AAG20001   where aaSubLedgerHdrID = @I_nHdrID   and SEQNUMBR = @SEQNMBR   SET @INCSEQNMBR = @INCSEQNMBR +1  FETCH NEXT FROM CURINS INTO @SEQNMBR  END  CLOSE CURINS  DEALLOCATE CURINS   If @@error <> 0 goto errBLK   END   end    INSERT INTO AAG20002  select @I_nHdrID , (case when (@cnt-@CountDistID) <> 0 then aaSubLedgerDistID+ @cnt-(@cnt-@CountDistID) else aaSubLedgerDistID+ @cnt end)  ,aaSubLedgerAssignID,  CASE  WHEN @SERIES in (4) and @AllowNeg = 1  then DEBITAMT * (-1)  else CRDTAMNT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  then CRDTAMNT * (-1)  else DEBITAMT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  then ORDBTAMT * (-1)  else ORCRDAMT  END,   CASE  WHEN @SERIES in (4) and @AllowNeg = 1  THEN ORCRDAMT * (-1)  ELSE ORDBTAMT  END,  aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors,aaAliasID  From AAG20002  Where  aaSubLedgerHdrID = @I_nHdrID   If @@error <> 0 goto errBLK   INSERT INTO AAG20003  select @I_nHdrID, (case when (@cnt-@CountDistID) <> 0 then aaSubLedgerDistID+ @cnt-(@cnt-@CountDistID) else aaSubLedgerDistID+ @cnt end)  ,aaSubLedgerAssignID,aaTrxDimID,aaTrxCodeID,aaCodeErrors  from AAG20003   Where  aaSubLedgerHdrID = @I_nHdrID   If @@error <> 0 goto errBLK   commit tran  Return    errBLK:  Rollback   Return @@error end    
GO
GRANT EXECUTE ON  [dbo].[aagCreateVoidRecords] TO [DYNGRP]
GO

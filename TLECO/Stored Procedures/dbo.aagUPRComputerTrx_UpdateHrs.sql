SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagUPRComputerTrx_UpdateHrs] @iTrxNumber   int = 0, @iDrAmt numeric(19,5), @iCrAmt numeric(19,5) AS begin  declare @nHdrId int,  @nDistId int,  @nAssinId int,  @nAmt numeric(19,5),  @nRemainAmt numeric(19,5),  @nDistAmt numeric(19,5),  @nPercent int,  @nSumPer int,  @I_nDECPLfunCUR INT   select @I_nDECPLfunCUR = DECPLCUR - 1 from DYNAMICS..MC40200 where CURNCYID = (select FUNLCURR from MC40000)   select @nHdrId = isnull(aaSubLedgerHdrID,0)  from AAG20000   where SERIES = 6 and  DOCTYPE = 1 and  DOCNUMBR =  ltrim(rtrim(@iTrxNumber))  if @nHdrId > 0   begin  update AAG20001 set DEBITAMT = @iDrAmt, CRDTAMNT = @iCrAmt where aaSubLedgerHdrID = @nHdrId  if @iDrAmt <> 0   begin  select @nRemainAmt = @iDrAmt, @nDistAmt = @iDrAmt  end  else  begin  select @nRemainAmt = @iCrAmt, @nDistAmt = @iCrAmt  end   declare updatehrs cursor fast_forward for  select aaSubLedgerAssignID, aaAssignedPercent  from AAG20002   where aaSubLedgerHdrID = @nHdrId and  aaSubLedgerDistID = 1 and  aaAssignedPercent > 0  order by aaSubLedgerAssignID  open updatehrs  fetch next from updatehrs into @nAssinId, @nPercent  set @nSumPer = 0  while @@fetch_status = 0   begin  set @nAmt = ROUND((@nDistAmt*(@nPercent/10000.00)),@I_nDECPLfunCUR)  set @nSumPer = @nSumPer + @nPercent  if @nSumPer = 10000  begin  set @nAmt = @nRemainAmt   end  else  begin  set @nRemainAmt = @nRemainAmt - @nAmt  end   if @iDrAmt <> 0   begin  update AAG20002 set DEBITAMT = @nAmt, CRDTAMNT = 0   where aaSubLedgerHdrID = @nHdrId and  aaSubLedgerDistID = 1 and  aaSubLedgerAssignID = @nAssinId  end  else  begin  update AAG20002 set DEBITAMT = 0, CRDTAMNT = @nAmt   where aaSubLedgerHdrID = @nHdrId and  aaSubLedgerDistID = 1 and  aaSubLedgerAssignID = @nAssinId  end   fetch next from updatehrs into @nAssinId, @nPercent  end   close updatehrs  deallocate updatehrs  end  end    
GO
GRANT EXECUTE ON  [dbo].[aagUPRComputerTrx_UpdateHrs] TO [DYNGRP]
GO

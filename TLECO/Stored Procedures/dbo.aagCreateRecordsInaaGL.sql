SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagCreateRecordsInaaGL] @I_BatchNum char(15), @I_cBatchSrc char(15) = NULL, @I_caaAuditTrailPrefix  char(5), @I_cUserID  char(37), @I_sWindowType smallint = NULL, @O_fSuccess tinyint = 1 output, @I_nMCRegistered tinyint, @I_nPERCENT_FACTOR int = 0, @I_nDECPLfunCUR int = 0 AS Begin   DECLARE @JrnEntry int,  @aaGLHdrID int,  @fSuccess tinyint,  @cTrxSource char(13),  @caaAuditTrailCode char(13),  @nYear smallint,  @fHist tinyint,  @cglHistAuditTrailCode char(13),  @nTrxState smallint,  @dtglPostDate datetime,  @nRecTrxSeq numeric(19,5),  @BATCH_AVAILABLE smallint,  @BATCH_POSTING_INCOMPLETE smallint,  @tMultipleBatches tinyint,  @cBatchNumber char(15),  @fLoop smallint,  @nSuccess  smallint,  @SERIES_WINDOW                  smallint,  @MASTER_WINDOW                  smallint,  @RECOVERY_WINDOW                smallint,  @nLength int   select  @BATCH_AVAILABLE                = 0,  @BATCH_POSTING_INCOMPLETE       = 7,  @tMultipleBatches        = 0,  @cBatchNumber                   = @I_BatchNum,  @SERIES_WINDOW                  = 3,  @MASTER_WINDOW                  = 4,  @RECOVERY_WINDOW                = 5,  @fLoop             = 1  if @I_cBatchSrc = 'GL_Clearing' or @I_cBatchSrc = 'GL_Budget'  return   if @I_sWindowType = @SERIES_WINDOW or  @I_sWindowType = @MASTER_WINDOW or  @I_sWindowType = @RECOVERY_WINDOW   BEGIN  SELECT @tMultipleBatches = 1  declare BatchCursor INSENSITIVE  cursor for select  BACHNUMB  from SY00500  where   BCHSOURC = @I_cBatchSrc  and MKDTOPST = 1  and USERID  = @I_cUserID  order by  BCHSOURC,  BACHNUMB   open BatchCursor  fetch next from   BatchCursor into @cBatchNumber  IF @@FETCH_STATUS <> 0  BEGIN  SELECT @fLoop = 0  END  END   WHILE @fLoop =1   BEGIN   SELECT @nTrxState = 0  IF @I_cBatchSrc = 'GL_Normal'  BEGIN   DECLARE aaCurGetJrnlNumbs cursor fast_forward FOR   SELECT DISTINCT JRNENTRY FROM GL10000  WHERE BACHNUMB = @cBatchNumber  END  IF @I_cBatchSrc = 'GL_Business'  BEGIN  DECLARE aaCurGetJrnlNumbs cursor fast_forward FOR   SELECT DISTINCT JRNENTRY FROM GL10100  WHERE BSNSFMID = @cBatchNumber  END   OPEN aaCurGetJrnlNumbs   FETCH NEXT FROM aaCurGetJrnlNumbs   INTO @JrnEntry  WHILE @@FETCH_STATUS = 0  BEGIN  EXEC aagCreateRecordsInaaGLForJrnlNum  @JrnEntry,  @I_caaAuditTrailPrefix,  @I_cUserID,  @I_nMCRegistered,  @I_nPERCENT_FACTOR,  @I_nDECPLfunCUR  FETCH NEXT FROM aaCurGetJrnlNumbs INTO @JrnEntry  END  IF @tMultipleBatches = 1   BEGIN  fetch next from   BatchCursor into @cBatchNumber   IF @@FETCH_STATUS = 0  BEGIN  SELECT @fLoop = 1  END  ELSE IF @@FETCH_STATUS <> 0  BEGIN  SELECT @fLoop = 0  END  END  ELSE IF @tMultipleBatches = 0   BEGIN  SELECT @fLoop = 0  END  CLOSE aaCurGetJrnlNumbs  DEALLOCATE aaCurGetJrnlNumbs  END   IF @tMultipleBatches = 1   BEGIN  CLOSE BatchCursor  DEALLOCATE BatchCursor  END END    
GO
GRANT EXECUTE ON  [dbo].[aagCreateRecordsInaaGL] TO [DYNGRP]
GO

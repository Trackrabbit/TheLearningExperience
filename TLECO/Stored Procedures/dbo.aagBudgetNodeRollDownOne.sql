SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagBudgetNodeRollDownOne] (  @USERID CHAR(15),  @WINTYPE INTEGER ,  @CMPANYID INTEGER ,  @aaCodeSequence INTEGER ,  @Percentage FLOAT ,   @Type INTEGER ,   @Parts FLOAT ,   @PercentTotal FLOAT ,  @Result INTEGER OUTPUT )  AS  BEGIN   DECLARE @aaFiscalPeriodTable TABLE  (  PERIODDT DATETIME,   aaFiscalPeriod INTEGER   )  DECLARE @aaBudgetID INTEGER ,  @aaActualPriliminary INTEGER ,  @nCount     INTEGER ,  @aaFiscalPeriod INTEGER ,  @aaParCodeSequence INTEGER ,   @aaBudgetTreeID INTEGER ,  @aaSetAmount NUMERIC (19, 5) ,  @aaAmtQty INTEGER ,  @aaFinCodeSeq INTEGER,   @PeriodDate DATETIME    SELECT @aaBudgetID = aaBudgetID,   @aaActualPriliminary = aaActualPriliminary,   @aaAmtQty = aaAmtQty   FROM AAG00906   WHERE USERID = @USERID AND   WINTYPE = @WINTYPE AND   CMPANYID = @CMPANYID  SELECT DISTINCT @aaBudgetTreeID = aaBudgetTreeID   FROM AAG00903   WHERE aaBudgetID = @aaBudgetID  SELECT TOP 1 @aaParCodeSequence = aaCodeSequence FROM AAG00902 WHERE   aaTrxDimCodeID =(SELECT DISTINCT aaTrxDimParCodeID FROM AAG00902 WHERE   aaCodeSequence = @aaCodeSequence AND aaBudgetTreeID = @aaBudgetTreeID)AND   aaBudgetTreeID = @aaBudgetTreeID  AND aaCodeSequence < @aaCodeSequence ORDER BY aaCodeSequence DESC   if @Type = 2  begin  SELECT @aaFinCodeSeq = MAX(aaCodeSequence) FROM dbo.aagGetChildNodes(@aaBudgetTreeID, @aaParCodeSequence )  end  INSERT INTO @aaFiscalPeriodTable  SELECT PERIODDT, aaFiscalPeriod   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID AND   aaActualPriliminary = @aaActualPriliminary AND   aaCodeSequence = @aaCodeSequence   ORDER BY PERIODDT   WHILE ( 1 = 1 )  BEGIN  SELECT @nCount = COUNT (*) FROM @aaFiscalPeriodTable   IF @nCount <= 0   BREAK    SELECT TOP 1 @PeriodDate = PERIODDT, @aaFiscalPeriod = aaFiscalPeriod from @aaFiscalPeriodTable   IF @Type = 1  SELECT @aaSetAmount =   (SELECT CASE @aaAmtQty WHEN 0 THEN Balance * ( @Percentage / 100.00 )   ELSE QUANTITY * ( @Percentage / 100.00 ) END   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaParCodeSequence AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod AND   aaActualPriliminary = @aaActualPriliminary )  ELSE  SELECT @aaSetAmount =   (SELECT CASE @aaAmtQty WHEN 0 THEN ( Balance / @Parts )   ELSE ( QUANTITY / @Parts ) END   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaParCodeSequence AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod AND   aaActualPriliminary = @aaActualPriliminary)  SET @aaSetAmount = ROUND (@aaSetAmount, 2)  IF @aaAmtQty = 0  BEGIN  UPDATE AAG00904   SET Balance = @aaSetAmount   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaCodeSequence AND   aaActualPriliminary = @aaActualPriliminary AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod   END  ELSE  BEGIN  UPDATE AAG00904   SET QUANTITY = @aaSetAmount   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaCodeSequence AND   aaActualPriliminary = @aaActualPriliminary AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod   END   DELETE FROM @aaFiscalPeriodTable where PERIODDT = @PeriodDate AND aaFiscalPeriod = @aaFiscalPeriod   END    if @Type = 1  begin  select @aaFinCodeSeq = aaCodeSequence from  (select max(aaCodeSequence) aaCodeSequence from #temp_aaCodeSequence where Percentage > 0) a   end  IF @aaFinCodeSeq = @aaCodeSequence   EXEC aagAdjustRollDownFractions @aaBudgetID, @aaCodeSequence, @PercentTotal, @aaActualPriliminary, @aaAmtQty  SELECT @Result = dbo.aagValidateBudgetNode(0)  RETURN @Result END     
GO
GRANT EXECUTE ON  [dbo].[aagBudgetNodeRollDownOne] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[uprLoadSUTATempTableD]  @I_vTableName varchar(25) = NULL,  @DateFrom datetime,  @DateTo datetime,  @StartDate datetime,  @EndDate datetime,  @O_iErrorState          int             = NULL output  as  declare @iStatus int,  @iError int,  @sDate varchar(10),   @eDate varchar(10),  @fDate varchar(10),   @tDate varchar(10)  SELECT @sDate = CONVERT(varchar(10),  @StartDate ,110 ) SELECT @eDate = CONVERT(varchar(10),  @EndDate ,110 ) SELECT @fDate = CONVERT(varchar(10),  @DateFrom ,110 ) SELECT @tDate = CONVERT(varchar(10),  @DateTo ,110 )  select @iStatus = 0  select @O_iErrorState = 0  if( @I_vTableName is NULL) begin  select          @O_iErrorState = 21022  return end  exec    (' declare @SUTASTAT char(3),@EMPLOYID char(20) '  + ' declare @dexrowid int, @MTDTXBWG dec(19,5),@YTDTXWGS dec(19,5),@RSMTDALL dec(19,5),@RSYTDALL dec(19,5),@RGSMTDST dec(19,5), '  + ' @RGSYTDST dec(19,5),@FUSUWLMT dec(19,5),@INPRSTWG dec(19,5),@MNTHSWGS dec(19,5),@YTDWAGES dec(19,5), @YEARWAGS  dec(19,5), @QTDTXWGS dec(19,5), @PAYDATE datetime '   + ' declare @l_St char(3),@prev_employid char(20),@prev_St char(3),@l_prevEmpID char(20),  @l_prevSt char(3)'  + ' declare @l_empl_ID dec(19,5), @l_MTD dec(19,5), @l_YTD dec(19,5), @l_MTDST dec(19,5),@l_YTDST dec(19,5), '  + '  @ytdempall dec(19,5),@ytdempst dec(19,5),@l_rem_mtd dec(19,5),@ytdadd dec(19,5) '  + ' select @l_St='''',@prev_employid = '''',@prev_St = '''' '  + ' select @l_empl_ID=0,@l_MTD=0,@l_YTD=0,@l_MTDST=0,@l_YTDST=0,@ytdempall=0,@ytdempst=0,@l_rem_mtd=0,@ytdadd=0 '  + ' DECLARE t_cursor CURSOR for  '  + ' select DEX_ROW_ID,EMPLOYID,SUTASTAT,RSMTDALL,RSYTDALL,RGSMTDST,RGSYTDST,FUSUWLMT,INPRSTWG,MNTHSWGS,MTDTXBWG,YEARWAGS,YTDTXWGS,YTDTXWGS,QTDTXWGS,PAYDATE from ' + @I_vTableName + ' WHERE SUTASTAT >= ''AA'' and PAYDATE between ' + '''' + @sDate + '''' + 'and ' + '''' +  @eDate +''''   + '  ORDER BY EMPLOYID ASC ,FLAG ASC ,PAYDATE ASC ,SUTASTAT ASC ,DEX_ROW_ID ASC  '   + ' set NOCOUNT on '  + ' open t_cursor '  + ' FETCH NEXT FROM t_cursor INTO @dexrowid,@EMPLOYID,@SUTASTAT,@RSMTDALL,@RSYTDALL,@RGSMTDST,@RGSYTDST,@FUSUWLMT,@INPRSTWG,@MNTHSWGS,@MTDTXBWG, @YEARWAGS, @YTDWAGES,@YTDTXWGS, @QTDTXWGS,@PAYDATE  '   + ' while (@@fetch_status <> -1) '  + ' begin '  + '  select @l_prevEmpID = @EMPLOYID '   + '  select @l_prevSt = @SUTASTAT '    + '  if  (@EMPLOYID <> @prev_employid) '  + '  begin  '  + '  select @l_prevEmpID = @prev_employid '   + '   select @prev_employid = @EMPLOYID, @l_St = @SUTASTAT '  + '   select  @l_MTD = @RSMTDALL '  + '   if (@l_MTD > @FUSUWLMT)  '  + '   begin  '  + '    select @l_MTD = @FUSUWLMT '  + '   end '  + '   select @l_YTD = @RSYTDALL '  + '   select @ytdempall = @l_YTD '  + '   if (@ytdempall > @FUSUWLMT)  '  + '   begin  '  + '    select @ytdempall = @FUSUWLMT '  + '   end '  + '   select  @l_MTDST = @RGSMTDST,@l_YTDST = @RGSYTDST '  + '  select @ytdempst = @l_YTDST '  + '   if (@ytdempst > @FUSUWLMT)  '  + '   begin  '  + '    select @ytdempst = @FUSUWLMT '  + '   end '  + '  end '  + '  else if (@SUTASTAT <> @l_St) '  + '  begin '  + '   select @l_prevSt = @l_St '   + '   select @l_St = @SUTASTAT '  + '  select @ytdempall = @l_YTD '  + '   if (@ytdempall > @FUSUWLMT) '  + '   begin  '  + '    select @ytdempall = @FUSUWLMT '  + '   end '  + '   if (@INPRSTWG <> 1 )  '  + '   begin '  + '    select  @l_MTDST = @RGSMTDST,@l_YTDST = @RGSYTDST '   + '    select @ytdempst = @l_YTDST '  + '    if (@ytdempst > @FUSUWLMT) '  + '    begin  '  + '     select @ytdempst = @FUSUWLMT '  + '    end '  + '   end '  + '  else '  + '  begin '  + '   select @ytdempall = 0,@ytdempst = 0 '  + '  end '  + '  end '  + ' if @QTDTXWGS = 0  '   + '  begin '  + '  select @MTDTXBWG = @MNTHSWGS '    + '  if (@INPRSTWG = 1)  '  + '  begin '  + '   select  @l_rem_mtd = @FUSUWLMT - @l_MTD '  + '  end '  + '  else '  + '  begin '  + '   select  @l_rem_mtd = @FUSUWLMT - @l_MTDST '  + '  end '  + '  if (@l_rem_mtd < 0)  '  + '  begin '  + '   select @MTDTXBWG = 0 '  + '  end  '  + '  else if (@l_rem_mtd < @MTDTXBWG)  and @QTDTXWGS = 0 '   + '  begin '  + '   select @MTDTXBWG = round(@l_rem_mtd,5) '  + '  end  '  + '  end '    + ' if @QTDTXWGS = 0  '   + '  begin '  + '  select @l_MTD = @l_MTD + @MTDTXBWG,@l_MTDST = @l_MTDST + @MTDTXBWG '  +'  end '   + ' if @PAYDATE between ' + '''' + @fDate + ''''+ ' and ' + '''' + @tDate + ''''   + '  begin '  + '  select @ytdadd = @MTDTXBWG '  + '  end '   + '  else '  + '  begin '   + '  if @YEARWAGS > @l_rem_mtd and @l_rem_mtd >0 '  + '   begin '  + '    select @ytdadd = @l_rem_mtd '   + '   end '   + '   else '  + '   begin '  + '    select @ytdadd = @YEARWAGS '  + '   end '   + '  end '    + ' if @QTDTXWGS = 0  '   + '  begin '  + '  select @YTDTXWGS = @YTDTXWGS + @ytdadd '  + '  end '   + '  select @QTDTXWGS = 99999999999999.99999 '   +' select @l_YTD = @l_YTD + @ytdadd,@l_YTDST = @l_YTDST + @ytdadd '  + '  select @ytdadd = 0 '  + '  update ' + @I_vTableName + ' set MTDTXBWG = @MTDTXBWG, YTDTXWGS = @YTDTXWGS,  QTDTXWGS= @QTDTXWGS'   + '   where CURRENT OF t_cursor '  + '  FETCH NEXT FROM t_cursor into   @dexrowid,@EMPLOYID,@SUTASTAT,@RSMTDALL,@RSYTDALL,@RGSMTDST,@RGSYTDST,@FUSUWLMT,@INPRSTWG,@MNTHSWGS,@MTDTXBWG,@YEARWAGS,@YTDWAGES,@YTDTXWGS,@QTDTXWGS,@PAYDATE  '   + '  end '  + '  DEALLOCATE t_cursor '  )   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[uprLoadSUTATempTableD] TO [DYNGRP]
GO

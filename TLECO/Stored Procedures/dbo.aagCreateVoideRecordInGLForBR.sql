SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create   procedure [dbo].[aagCreateVoideRecordInGLForBR]  @aaSubLedgerHdrID int,  @JRNENTRY int,  @lastDist int,  @GLPOSTDT datetime,  @CompanyID smallint as begin  declare @aaSubLedgerDistID int,  @aaGLWorkDistID  int,  @aaGLWorkHdrID    int,  @FUNLCURR char(15),  @CURRID char(15)   select @FUNLCURR = FUNLCURR from MC40000   select  @aaSubLedgerDistID  = 0,  @aaGLWorkDistID    = 0,  @aaGLWorkHdrID  = 0  if @aaSubLedgerHdrID = 0 or @aaSubLedgerHdrID is null  return   if not exists(select 1 from AAG10000 where JRNENTRY = @JRNENTRY and RCTRXSEQ = 0 and GLPOSTDT = @GLPOSTDT)  begin  exec DYNAMICS.dbo.aagGetNextID 10000, @CompanyID, @aaGLWorkHdrID output   insert into  AAG10000 (aaGLWorkHdrID,JRNENTRY,RCTRXSEQ,GLPOSTDT,aaTRXType,aaHdrErrors, Ledger_ID)  values(@aaGLWorkHdrID,@JRNENTRY,0,@GLPOSTDT,1,0,1 )   end  else  begin  select @aaGLWorkHdrID = aaGLWorkHdrID from AAG10000   where JRNENTRY = @JRNENTRY and RCTRXSEQ = 0 and GLPOSTDT = @GLPOSTDT   end   declare CSubDist cursor fast_forward for  Select aaSubLedgerDistID  from AAG20001  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID > @lastDist  open CSubDist  fetch next from CSubDist into @aaSubLedgerDistID   while @@fetch_status = 0  begin  set @aaGLWorkDistID = @aaGLWorkDistID + 1  INSERT INTO AAG10001(aaGLWorkHdrID,aaGLWorkDistID,  INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,DECPLACS,FXDORVAR,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX,RATETPID,EXGTBLID,  XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,SQNCLINE,  aaCustID,aaVendID,aaSiteID,aaItemID,  aaCopyStatus,aaWinWasOpen,aaDistErrors,aaBrowseType,aaChangeDate, aaChangeTime)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,  INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,DECPLACS,dbo.aagFixedOrVar(ACTINDX),   DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX,RATETPID,EXGTBLID,  XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,SEQNUMBR,  aaCustID,aaVendID,aaSiteID,aaItemID,  aaCopyStatus,1,0,aaBrowseType,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108)  from AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID   INSERT INTO AAG10002(aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,aaAssignedPercent,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,DistRef,NOTEINDX,aaAliasID)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,aaSubLedgerAssignID,aaAssignedPercent,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,DistRef,NOTEINDX,aaAliasID   from AAG20002 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID    INSERT INTO AAG10003(aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,  aaTrxDimID,aaTrxCodeID,aaCodeErrors)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,aaSubLedgerAssignID,  aaTrxDimID,aaTrxCodeID,aaCodeErrors  from AAG20003 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID  SELECT  @CURRID = CURNCYID from AAG10001 WHERE aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID =  @aaGLWorkDistID   if  (@FUNLCURR = @CURRID) or len(rtrim(ltrim(@CURRID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @aaGLWorkDistID  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @aaGLWorkDistID  and aaGLWorkAssignID > 0  end   fetch next from CSubDist into @aaSubLedgerDistID  end  close CSubDist  deallocate CSubDist end    
GO
GRANT EXECUTE ON  [dbo].[aagCreateVoideRecordInGLForBR] TO [DYNGRP]
GO

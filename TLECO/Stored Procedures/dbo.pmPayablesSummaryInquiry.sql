SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmPayablesSummaryInquiry]  @I_vStartRange varchar(65) = NULL,  @I_vEndRange varchar(65) = NULL,  @I_tSortBy tinyint  = NULL,  @I_cTableName char(25) = NULL,  @I_dAgingDate datetime = NULL,  @O_iErrorState          int             = NULL  output  as  declare  @vSelect_Statement1 varchar(255),  @vFrom_Clause1 varchar(255),  @vWhere_Clause1 varchar(255),  @vAdditional_Where varchar(255),  @vGroup_By1 varchar(255),  @vSelect_Statement2 varchar(255),  @vFrom_Clause2 varchar(255),  @vWhere_Clause2 varchar(255),  @vGroup_By2 varchar(255),  @vStartRange varchar(132),  @vEndRange varchar(132),  @sNumOfPeriods   int,  @tAgeByDocDate tinyint,  @FALSE int,  @iStatus                int,  @iError                 int,  @max_date datetime,  @dMinDate datetime  select @O_iErrorState = 0  select @FALSE = 0  exec @iStatus = smGetMinDate @dMinDate output  if  @I_vStartRange is NULL or  @I_vEndRange is NULL or  @I_tSortBy is NULL or  @I_cTableName is NULL or  @I_dAgingDate is NULL begin  select @O_iErrorState = 21023  return(@iStatus) end  exec @iStatus = smFormatStringsForExecs  @I_vStartRange,  @vStartRange output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return(@iStatus)  exec @iStatus = smFormatStringsForExecs  @I_vEndRange,  @vEndRange output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return(@iStatus)  create table #EndingPeriodDates (  PERIODID  int   not null,  STARTDATE datetime not null,  ENDDATE datetime not null)  select   @sNumOfPeriods = INDEX1  from   PM40101 with (NOLOCK) where   ENDGPDYS = 999  select @max_date = GETDATE() select @max_date= DATEADD(mm,12-DATEPART(mm,@max_date),@max_date) select @max_date= DATEADD(dd,31-DATEPART(dd,@max_date),@max_date) select @max_date= DATEADD(yy,9999-DATEPART(yy,@max_date),@max_date)  insert into  #EndingPeriodDates select  PERIODID = INDEX1,  STARTDATE = dateadd(dd,-ENDGPDYS,@I_dAgingDate),  ENDDATE = @max_date from  PM40101  with (NOLOCK) where  INDEX1 < @sNumOfPeriods  insert into  #EndingPeriodDates select @sNumOfPeriods,  @dMinDate,  dateadd(dd,-1,STARTDATE) from  #EndingPeriodDates with (NOLOCK) where  PERIODID = (@sNumOfPeriods -1 )  update  #EndingPeriodDates set  ENDDATE = ( select   dateadd(dd,-1,STARTDATE)   from   #EndingPeriodDates a  where   a.PERIODID = #EndingPeriodDates.PERIODID - 1) where  PERIODID > 1 and PERIODID < @sNumOfPeriods  select @vSelect_Statement1 =  'select  1,  DOCTYPE,  isnull(sum(PM20000.CURTRXAM),0.00),  isnull(sum(PM20000.DOCAMNT),0.00),  isnull(count(PM20000.VENDORID),0.00),  0 '  select @vFrom_Clause1 =  ' from   PM00200 with (NOLOCK),  PM20000 with (NOLOCK) '  select @vWhere_Clause1 =  ' where  PM00200.VENDORID = PM20000.VENDORID '  select @vGroup_By1 =  ' group by DOCTYPE '  select @vSelect_Statement2 =  ' select  2,  DOCTYPE,  isnull(sum(PM20000.CURTRXAM),0.00),  0.00,  0,  PERIODID '  select @vFrom_Clause2 =  ' from   PM00200 with (NOLOCK),  PM20000 with (NOLOCK),  PM40100 with (NOLOCK),  #EndingPeriodDates '  select @vWhere_Clause2 =  ' where  PM00200.VENDORID = PM20000.VENDORID  and case when AGEBY = 0 and DOCTYPE < 4 then PM20000.DUEDATE  else PM20000.DOCDATE end BETWEEN STARTDATE and ENDDATE '  select @vGroup_By2 =  ' group by PERIODID,DOCTYPE '  if @I_tSortBy = 1 begin  select @vAdditional_Where = ' and PM00200.VENDORID >= ' + @vStartRange +   ' and PM00200.VENDORID <= ' + @vEndRange end else if @I_tSortBy = 2 begin  select @vAdditional_Where = ' and PM00200.VENDNAME >= ' + @vStartRange +   ' and PM00200.VENDNAME <= ' + @vEndRange end else if @I_tSortBy = 3 begin  select @vAdditional_Where = ' and PM00200.VNDCLSID >= ' + @vStartRange +   ' and PM00200.VNDCLSID <= ' + @vEndRange end else if @I_tSortBy = 4 begin  select @vAdditional_Where = ' and PM00200.USERDEF1 >= ' + @vStartRange +   ' and PM00200.USERDEF1 <= ' + @vEndRange end else if @I_tSortBy = 5 begin  select @vAdditional_Where = ' and PM00200.PYMNTPRI >= ' + @vStartRange +   ' and PM00200.PYMNTPRI <= ' + @vEndRange end else begin  select @vAdditional_Where = '' end  exec('insert into ' + @I_cTableName + ' (RCRDTYPE,DOCTYPE,CURTRXAM,DOCAMNT,RECCOUNT,PERIODID) '  + @vSelect_Statement1 + @vFrom_Clause1 + @vWhere_Clause1 +   @vAdditional_Where + @vGroup_By1)  exec('insert into ' + @I_cTableName + ' (RCRDTYPE,DOCTYPE,CURTRXAM,DOCAMNT,RECCOUNT,PERIODID) '  + @vSelect_Statement2 + @vFrom_Clause2 + @vWhere_Clause2 +   @vAdditional_Where + @vGroup_By2)  return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[pmPayablesSummaryInquiry] TO [DYNGRP]
GO

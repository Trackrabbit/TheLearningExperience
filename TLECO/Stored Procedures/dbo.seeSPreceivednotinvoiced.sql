SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[seeSPreceivednotinvoiced] @PONumber_RS varchar(12), @PONumber_RE varchar(12), @ReceiptDate_RS datetime, @ReceiptDate_RE datetime, @VendorID_RS varchar (12), @VendorID_RE varchar (12), @IncludeFunctionalCurrency tinyint, @IncludeLandedCosts tinyint as set nocount on  if exists (select * from dbo.sysobjects where id = object_id(N'[##temp_receivednotinvoiced]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [##temp_receivednotinvoiced]  if exists (select * from dbo.sysobjects where id = object_id(N'[##temp_landedcosttotals]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [##temp_landedcosttotals]  If @PONumber_RE = ''  Begin  set @PONumber_RE = 'þþþþþþþþþþþþþþþ'  End  If @VendorID_RE = ''  Begin  set @VendorID_RE = 'þþþþþþþþþþþþþþþ'  End  if @IncludeLandedCosts = 1  Begin  select c.PONUMBER_1, sum(c.[Total Cost]) as [Total Landed Cost]  into ##temp_landedcosttotals  from  (select isnull((select distinct a.PONUMBER from POP10500 a where a.POPRCTNM = b.POPRCTNM and a.RCPTLNNM = b.RCPTLNNM and a.PONUMBER <> ''),'') as PONUMBER_1,   a.VENDORID,   b.Total_Landed_Cost_Amount as [Total Cost]  from POP10500 a  join POP30700 b  on a.POPRCTNM = b.POPRCTNM  and a.RCPTLNNM = b.RCPTLNNM  and a.POLNENUM = b.LCLINENUMBER  join POP30300 d  on a.POPRCTNM = d.POPRCTNM  where a.PONUMBER = ''  and d.VENDORID between @VendorID_RS and @VendorID_RE and  a.DATERECD between @ReceiptDate_RS and @ReceiptDate_RE and  a.PONUMBER between @PONumber_RS and @PONumber_RE) c  group by c.PONUMBER_1  End  select  r.PONUMBER as [PO Number], r.POLNENUM, r.POPRCTNM as [POPRCTNM], r.RCPTLNNM as [POPRCTLNNM], r.CURNCYID as [Currency ID], r.VENDORID as [Vendor ID], p.VENDNAME as [Vendor Name], p.DOCDATE as [Document Date], r.ITEMNMBR as [Item Number], i.ITEMDESC as [Item Description], pol.QTYORDER as [Qty Ordered], pol.UOFM as [UOM Ordered],  case when (@IncludeFunctionalCurrency = 0) then pol.UNITCOST  else case when (pol.XCHGRATE = 0) then pol.UNITCOST  else (case when (pol.RATECALC = 1) then (pol.UNITCOST/pol.XCHGRATE) else pol.UNITCOST*pol.XCHGRATE  end) end end  as [PO Unit Cost], '' as [Receipt Number], '' as [Date Received], '' as [Date Received Parameter], '' as [Site ID], r.UOFM as [Shipment UOM], r.QTYSHPPD AS [Qty Shipped], r.QTYINVCD as [Qty Invoiced], r.QTYRESERVED as [Qty Returned], r.QTYINVRESERVE as [Qty Inv Returned], case when (@IncludeFunctionalCurrency = 0) then r.ORCPTCOST  else case when (r.XCHGRATE = 0) then r.ORCPTCOST  else (case when (r.RATECALC = 1) then (r.ORCPTCOST/r.XCHGRATE) else r.ORCPTCOST*r.XCHGRATE  end) end end  as [Unitcost], u.UMDPQTYS -1 as [UOM Decimals]  into ##temp_receivednotinvoiced  from POP10500 r   left join POP10100 p on   r.PONUMBER = p.PONUMBER   LEFT JOIN POP10110 pol on   p.PONUMBER = pol.PONUMBER and  r.POLNENUM = pol.ORD   left join IV00101 i on   pol.ITEMNMBR = i.ITEMNMBR  left join IV40201 u on   i.UOMSCHDL = u.UOMSCHDL  where r.VENDORID between @VendorID_RS and @VendorID_RE and  r.DATERECD between @ReceiptDate_RS and @ReceiptDate_RE and  r.PONUMBER between @PONumber_RS and @PONumber_RE and  p.POTYPE <> 2 and   p.POSTATUS not in (5,6) and  pol.POLNESTA not in (5,6) group by r.PONUMBER, r.POLNENUM, r.POPRCTNM, r.RCPTLNNM, r.CURNCYID, r.VENDORID,  p.VENDNAME, p.DOCDATE, r.Status, r.ITEMNMBR, i.ITEMDESC , pol.QTYORDER, pol.UOFM, pol.UNITCOST, pol.XCHGRATE, pol.RATECALC, r.ORCPTCOST, r.XCHGRATE, r.RATECALC, r.UOFM, r.QTYSHPPD, r.QTYINVCD, r.QTYRESERVED, r.QTYINVRESERVE, u.UMDPQTYS having ( (sum(r.QTYSHPPD) <> sum(r.QTYMATCH)) AND ((sum(r.QTYSHPPD)-sum(r.QTYMATCH)-SUM(r.QTYREJ))<>0)  AND r.Status <>0 and r.POLNENUM<> '' )  union select  '******' as [PO Number], r.POLNENUM, r.POPRCTNM as [POPRCTNM], r.RCPTLNNM as [POPRCTLNNM], r.CURNCYID as [Currency ID], r.VENDORID as [Vendor ID], p.VENDNAME as [Vendor Name], '' as [Document Date], r.ITEMNMBR as [Item Number], i.ITEMDESC as [Item Description], 0 as [Qty Ordered], '' as [UOM Ordered],  0 as [PO Unit Cost], r.POPRCTNM as [Receipt Number], r.DATERECD as [Date Received], r.DATERECD as [Date Received Parameter], r.TRXLOCTN as [Site ID], r.UOFM as [Shipment UOM], r.QTYSHPPD AS [Qty Shipped], r.QTYINVCD as [Qty Invoiced], (r.QTYRESERVED-r.QTYINVRESERVE) as [Qty Returned], r.QTYINVRESERVE as [Qty Inv Returned], case when (@IncludeFunctionalCurrency = 0) then r.ORCPTCOST  else case when (r.XCHGRATE = 0) then r.ORCPTCOST  else (case when (r.RATECALC = 1) then (r.ORCPTCOST/r.XCHGRATE) else r.ORCPTCOST*r.XCHGRATE end) end end  as [Unitcost], u.UMDPQTYS -1  as [UOM Decimals]  from POP10500 r  left join  PM00200 p on r.VENDORID = p.VENDORID  left join IV00101 i on r.ITEMNMBR = i.ITEMNMBR left join IV40201 u on i.UOMSCHDL = u.UOMSCHDL where r.VENDORID between @VendorID_RS and @VendorID_RE and  r.DATERECD between @ReceiptDate_RS and @ReceiptDate_RE and  r.PONUMBER between @PONumber_RS and @PONumber_RE  group by r.PONUMBER, r.POLNENUM, r.CURNCYID, r.VENDORID, p.VENDNAME,  r.Status, r.POPRCTNM , r.RCPTLNNM, r.DATERECD, r.TRXLOCTN, r.UOFM, r.QTYSHPPD, r.QTYINVCD, r.QTYRESERVED, r.QTYINVRESERVE, r.ITEMNMBR, i.ITEMDESC ,  r.ORCPTCOST, r.XCHGRATE, r.RATECALC, u.UMDPQTYS having  (sum(r.QTYSHPPD) <> sum(r.QTYMATCH)) AND ((sum(r.QTYSHPPD)-sum(r.QTYMATCH)-SUM(r.QTYREJ))<>0)  AND r.Status <>0 and r.PONUMBER=''  if @IncludeLandedCosts = 1  Begin   SELECT   rni.[PO Number],  rni.[Currency ID],  Convert(char(10),rni.[Document Date],101) as [Document Date],  rni.[Vendor ID],  rni.[Vendor Name],  rni.[Item Number],  rni.[Item Description],  rni.[Qty Ordered],  rni.[UOM Ordered],   rni.[PO Unit Cost],  r.POPRCTNM as [Receipt Number],  r.RCPTLNNM as [POPRCTLNNM],  Convert(char(10),r.DATERECD,101) as [Date Received],  r.DATERECD as [Date Received Parameter],  r.TRXLOCTN as [Site ID],  r.UOFM as [Shipment UOM],  r.QTYSHPPD-r.QTYREJ as [Qty Shipped],  r.QTYMATCH as [Qty Invoiced],  (r.QTYRESERVED-r.QTYINVRESERVE) as [Qty Returned],  r.QTYINVRESERVE as [Qty Inv Returned],  rni.[Unitcost],  round(((r.QTYSHPPD-r.QTYMATCH-r.QTYREJ)* rni.[Unitcost]),2) as [Amt Not Invoiced],  round(((r.QTYSHPPD-r.QTYMATCH-(r.QTYRESERVED-r.QTYINVRESERVE))* rni.[Unitcost]),2) as [Amt Not Invoiced Less Returned],  rni.[UOM Decimals],  isnull(l.[Total Landed Cost], 0),  (select SUM([Total Landed Cost]) from ##temp_landedcosttotals) as [TotalRNILandedCost]  from ##temp_receivednotinvoiced rni  join POP10500 r on rni.[PO Number] = r.PONUMBER and  rni.POLNENUM = r.POLNENUM and   rni.[POPRCTNM] = r.POPRCTNM and  rni.[POPRCTLNNM] = r.RCPTLNNM  left outer join ##temp_landedcosttotals l  on rni.[PO Number] = l.PONUMBER_1  where r.Status <> '0'  and   r.APPYTYPE=1 and    rni.[Qty Ordered] is not null and rni.POLNENUM <> '0'  and (r.QTYSHPPD <> r.QTYMATCH) AND ((r.QTYSHPPD-r.QTYMATCH-r.QTYREJ)<>0)    union all   SELECT   '******' as [PO Number],  rni.[Currency ID],  Convert(char(10),rni.[Document Date],101) as [Document Date],  rni.[Vendor ID],  rni.[Vendor Name],  rni.[Item Number],  rni.[Item Description],  rni.[Qty Ordered],  rni.[UOM Ordered],   rni.[PO Unit Cost],  rni.[Receipt Number],  rni.[POPRCTLNNM],  convert(char(10),rni.[Date Received],103) as [Date Received],  rni.[Date Received Parameter],  rni.[Site ID],  rni.[Shipment UOM],  rni.[Qty Shipped],  rni.[Qty Invoiced],  rni.[Qty Returned],  rni.[Qty Inv Returned],  rni.[Unitcost],  round(((rni.[Qty Shipped]-rni.[Qty Invoiced])* rni.[Unitcost]),2) as [Amt Not Invoiced],  round(((rni.[Qty Shipped]-rni.[Qty Invoiced]-rni.[Qty Returned])* rni.[Unitcost]),2) as [Amt Not Invoiced Less Returned],  rni.[UOM Decimals],  (select top 1 [Total Landed Cost] from ##temp_landedcosttotals where PONUMBER_1 = ''),  (select SUM([Total Landed Cost]) from ##temp_landedcosttotals) as [TotalRNILandedCost]  from ##temp_receivednotinvoiced rni  where rni.POLNENUM = '0'  End else  Begin   SELECT   rni.[PO Number],  rni.[Currency ID],  Convert(char(10),rni.[Document Date],101) as [Document Date],  rni.[Vendor ID],  rni.[Vendor Name],  rni.[Item Number],  rni.[Item Description],  rni.[Qty Ordered],  rni.[UOM Ordered],   rni.[PO Unit Cost],  r.POPRCTNM as [Receipt Number],  r.RCPTLNNM as [POPRCTLNNM],  Convert(char(10),r.DATERECD,101) as [Date Received],  r.DATERECD as [Date Received Parameter],  r.TRXLOCTN as [Site ID],  r.UOFM as [Shipment UOM],  r.QTYSHPPD-r.QTYREJ as [Qty Shipped],  r.QTYMATCH as [Qty Invoiced],  (r.QTYRESERVED-r.QTYINVRESERVE) as [Qty Returned],  r.QTYINVRESERVE as [Qty Inv Returned],  rni.[Unitcost],  round(((r.QTYSHPPD-r.QTYMATCH-r.QTYREJ)* rni.[Unitcost]),2) as [Amt Not Invoiced],  round(((r.QTYSHPPD-r.QTYMATCH-(r.QTYRESERVED-r.QTYINVRESERVE))* rni.[Unitcost]),2) as [Amt Not Invoiced Less Returned],  rni.[UOM Decimals],  0 as [Total Landed Cost],  0 as [TotalRNILandedCost]  from ##temp_receivednotinvoiced rni  join POP10500 r on rni.[PO Number] = r.PONUMBER and  rni.POLNENUM = r.POLNENUM and   rni.[POPRCTNM] = r.POPRCTNM and  rni.[POPRCTLNNM] = r.RCPTLNNM  where r.Status <> '0'  and   r.APPYTYPE=1 and    rni.[Qty Ordered] is not null and rni.POLNENUM <> '0'  and (r.QTYSHPPD <> r.QTYMATCH) AND ((r.QTYSHPPD-r.QTYMATCH-r.QTYREJ)<>0)    union all   SELECT   '******' as [PO Number],  rni.[Currency ID],  Convert(char(10),rni.[Document Date],101) as [Document Date],  rni.[Vendor ID],  rni.[Vendor Name],  rni.[Item Number],  rni.[Item Description],  rni.[Qty Ordered],  rni.[UOM Ordered],   rni.[PO Unit Cost],  rni.[Receipt Number],  rni.[POPRCTLNNM],  convert(char(10),rni.[Date Received],103) as [Date Received],  rni.[Date Received Parameter],  rni.[Site ID],  rni.[Shipment UOM],  rni.[Qty Shipped],  rni.[Qty Invoiced],  rni.[Qty Returned],  rni.[Qty Inv Returned],  rni.[Unitcost],  round(((rni.[Qty Shipped]-rni.[Qty Invoiced])* rni.[Unitcost]),2) as [Amt Not Invoiced],  round(((rni.[Qty Shipped]-rni.[Qty Invoiced]-rni.[Qty Returned])* rni.[Unitcost]),2) as [Amt Not Invoiced Less Returned],  rni.[UOM Decimals],  0 as [Total Landed Cost],  0 as [TotalRNILandedCost]  from ##temp_receivednotinvoiced rni  where rni.POLNENUM = '0'   End   
GO
GRANT EXECUTE ON  [dbo].[seeSPreceivednotinvoiced] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seeSPreceivednotinvoiced] TO [rpt_power user]
GO
GRANT EXECUTE ON  [dbo].[seeSPreceivednotinvoiced] TO [rpt_purchasing agent]
GO
GRANT EXECUTE ON  [dbo].[seeSPreceivednotinvoiced] TO [rpt_purchasing manager]
GO

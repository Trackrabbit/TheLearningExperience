SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create         procedure [dbo].[aagUpdateGLAllocEntry]  @aaGLWorkHdrID   int,  @JRNENTRY int,  @aaGLWorkDistID int output,  @CURNCYID char(15),  @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime ,   @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,  @DECPLACS   smallint,   @CopanyID int,  @SqlSessionID int,  @INTERIDg char(5),  @fHist    tinyint,  @RCTRXSEQ int = 0 as begin   declare @SQNCLINE numeric(19,5),   @ACTINDX int,  @ACCTTYPE smallint,  @FXDORVAR smallint,   @CRDTAMNT numeric(19,5),  @DEBITAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @ORDBTAMT numeric(19,5),   @CorrespondingUnit char(5),   @aaBrowseType smallint,  @ClassID int,  @aaGLWorkAssignID int,  @INTERID Char(5),  @Cnt int,  @Status   smallint,  @Flag smallint,   @FUNLCURR char(15),  @Year smallint,  @Year1 smallint,  @ORMSTRID char(65),  @TRXSORCE char(13),  @RVTRXSRC char(13),  @l_cINTERID char(5),  @l_cBBF varchar(255),  @l_nError int   Select  @SQNCLINE  = 0,  @ACTINDX  = 0,  @ACCTTYPE  = 0,  @FXDORVAR  = 0,   @CRDTAMNT  = 0,  @DEBITAMT  = 0,  @ORCRDAMT  = 0,  @ORDBTAMT  = 0,  @aaBrowseType  = 0,  @ClassID  = 0,  @aaGLWorkAssignID  = 0,   @Cnt     = 0,  @Status   = 0,  @Flag   = 0,  @Year1   = 0,  @TRXSORCE = '',  @RVTRXSRC = ''   select @l_cINTERID = db_name()   exec    @Status = DYNAMICS.dbo.smGetMsgString 12030, @l_cINTERID, @l_cBBF output  select @l_nError = @@error  if @Status = 0 and @l_nError <> 0  select @Status = @l_nError   if ( (@Status <> 0))  return (@Status)   select @FUNLCURR = FUNLCURR from MC40000  if  @FUNLCURR = @CURNCYID or len(ltrim(rtrim(@CURNCYID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID > 0  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID > 0  and aaGLWorkAssignID > 0  end   declare CAADIST  cursor fast_forward  for  Select SQNCLINE, aaGLWorkDistID,ACTINDX,CRDTAMNT, DEBITAMT, ORCRDAMT, ORDBTAMT, ACCTTYPE  from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID  and  aaGLWorkDistID > 0  order by SQNCLINE, aaGLWorkDistID   open CAADIST  fetch next from CAADIST  into @SQNCLINE, @aaGLWorkDistID,@ACTINDX,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT,@ACCTTYPE  while @@fetch_status = 0  begin   IF @fHist = 0  BEGIN  Select @Cnt = count(*),@Year = OPENYEAR  from GL20000 where  JRNENTRY = @JRNENTRY and SEQNUMBR = @SQNCLINE and  ACTINDX= @ACTINDX and  CRDTAMNT = @CRDTAMNT and  DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT  and  ORDBTAMT = @ORDBTAMT and RCTRXSEQ = @RCTRXSEQ   group by OPENYEAR  order by OPENYEAR desc   END  IF @fHist = 1  BEGIN  Select @Cnt = count(*), @Year = HSTYEAR from GL30000 where  JRNENTRY = @JRNENTRY and SEQNUMBR = @SQNCLINE and  ACTINDX = @ACTINDX and  CRDTAMNT = @CRDTAMNT and  DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT  and  ORDBTAMT = @ORDBTAMT and RCTRXSEQ = @RCTRXSEQ   group by  HSTYEAR   order by  HSTYEAR desc   END   if @Cnt = 0 or @ACCTTYPE > 2  begin  exec aagGLWorkDistDelete @aaGLWorkHdrID, @aaGLWorkDistID, 0   end  fetch next from CAADIST  into @SQNCLINE, @aaGLWorkDistID,@ACTINDX,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT,@ACCTTYPE  end   close CAADIST  deallocate CAADIST   set @Cnt  = 0   select @TRXSORCE = TRXSORCE, @RVTRXSRC = RVTRXSRC,   @Year = (select isnull(YEAR1,0) from SY40101 where FSTFSCDY <= GL10000.TRXDATE and LSTFSCDY >= GL10000.TRXDATE),  @Year1 = (select isnull(YEAR1,0) from SY40101 where FSTFSCDY <= GL10000.RVRSNGDT and LSTFSCDY >= GL10000.RVRSNGDT)  from GL10000 where JRNENTRY = @JRNENTRY   declare CGLWORK cursor fast_forward for   Select GL.SEQNUMBR, GL.ACTINDX, GL.ORCOMID,  GL.CRDTAMNT, GL.DEBITAMT, GL.ORCRDAMT, GL.ORDBTAMT,  GL.CorrespondingUnit, GL.ORMSTRID, ACT.ACCTTYPE  from GL20000 GL Inner join GL00100 ACT on GL.ACTINDX = ACT.ACTINDX  Where GL.JRNENTRY = @JRNENTRY and GL.SEQNUMBR > 0 and SOURCDOC <> @l_cBBF and TRXSORCE in(@TRXSORCE,@RVTRXSRC) AND GL.RCTRXSEQ = @RCTRXSEQ  and OPENYEAR in(@Year,@Year1)  union  Select  GL.SEQNUMBR, GL.ACTINDX, GL.ORCOMID,  GL.CRDTAMNT, GL.DEBITAMT, GL.ORCRDAMT, GL.ORDBTAMT,  GL.CorrespondingUnit, GL.ORMSTRID, ACT.ACCTTYPE  from GL30000 GL Inner join GL00100 ACT on GL.ACTINDX = ACT.ACTINDX  Where GL.JRNENTRY = @JRNENTRY and GL.SEQNUMBR > 0 and TRXSORCE in(@TRXSORCE,@RVTRXSRC) AND GL.RCTRXSEQ = @RCTRXSEQ  and HSTYEAR in(@Year,@Year1)    open CGLWORK  fetch next from CGLWORK into @SQNCLINE, @ACTINDX, @INTERID,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT, @CorrespondingUnit, @ORMSTRID, @ACCTTYPE  while @@fetch_status = 0  begin   Select @Cnt = count(*)  from AAG10001  where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID > 0 and SQNCLINE = @SQNCLINE and  ACTINDX = @ACTINDX and  DEBITAMT = @DEBITAMT and CRDTAMNT = @CRDTAMNT and  ORDBTAMT = @ORDBTAMT and ORCRDAMT = @ORCRDAMT   if @Cnt = 0  begin  Select @aaGLWorkDistID = isnull(max(aaGLWorkDistID),0)+1  from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID > 0  exec aagGetClassIDBrowseType @ACTINDX, @ClassID output, @aaBrowseType output   if @ACCTTYPE = 2   begin   set @CURRNIDX  =  3  end  insert into AAG10001  (aaGLWorkHdrID,  aaGLWorkDistID,  INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,  aaCustID, aaVendID, aaSiteID, aaItemID, EMPLOYID, aaCopyStatus, aaWinWasOpen, aaOFFSETAcct, aaDistErrors,aaChangeDate, aaChangeTime )  values (@aaGLWorkHdrID, @aaGLWorkDistID ,DB_NAME() ,@CorrespondingUnit,@ACTINDX, @ACCTTYPE,  @aaBrowseType,@DECPLACS, @FXDORVAR , @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT,  @CURNCYID, @CURRNIDX, @RATETPID,  @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1,  @RTCLCMTD, @DENXRATE, @MCTRXSTT, @SQNCLINE,isnull(dbo.aagGetMstrID(2,@ORMSTRID,0),''),isnull(dbo.aagGetMstrID(6,@ORMSTRID,0),''),   '', '', isnull(dbo.aagGetMstrIDGL(3,@ORMSTRID,0,@ACTINDX),''), 8, 0, 0, 0,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108))   if @INTERIDg <>  @INTERID  set @Flag = 1   exec aagGLAssignUpdate @aaGLWorkHdrID, @aaGLWorkDistID,@aaGLWorkAssignID, @CopanyID,@ClassID, @SqlSessionID,@Flag  end  fetch next from CGLWORK into @SQNCLINE, @ACTINDX, @INTERID,  @CRDTAMNT, @DEBITAMT, @ORCRDAMT, @ORDBTAMT,  @CorrespondingUnit, @ORMSTRID, @ACCTTYPE  end  if @fHist = 0  BEGIN  if exists(SELECT 1 FROM AAG10001 A1 LEFT OUTER JOIN AAG10000 AA ON A1.aaGLWorkHdrID = AA.aaGLWorkHdrID   LEFT OUTER JOIN GL20000 GL ON  GL.JRNENTRY=AA.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND   A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT   WHERE A1.aaGLWorkHdrID = @aaGLWorkHdrID AND A1.aaGLWorkDistID > 0 AND GL.JRNENTRY IS NULL)  Begin  DELETE AAG10002  FROM AAG10002 A2 INNER JOIN AAG10001 A1 ON A2.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A2.aaGLWorkDistID = A1.aaGLWorkDistID  LEFT OUTER JOIN AAG10000 AA ON A1.aaGLWorkHdrID = AA.aaGLWorkHdrID   LEFT OUTER JOIN GL20000 GL ON  GL.JRNENTRY=AA.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND   A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT   WHERE  A1.aaGLWorkHdrID = @aaGLWorkHdrID AND A1.aaGLWorkDistID > 0 AND GL.JRNENTRY IS NULL    DELETE AAG10003  FROM AAG10003 A3 INNER JOIN AAG10001 A1 ON A3.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A3.aaGLWorkDistID = A1.aaGLWorkDistID   LEFT OUTER JOIN AAG10000 AA ON A1.aaGLWorkHdrID = AA.aaGLWorkHdrID   LEFT OUTER JOIN GL20000 GL ON  GL.JRNENTRY=AA.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND   A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT   WHERE  A1.aaGLWorkHdrID = @aaGLWorkHdrID AND A1.aaGLWorkDistID > 0 AND GL.JRNENTRY IS NULL    DELETE AAG10001  FROM AAG10001 A1 LEFT OUTER JOIN AAG10000 AA ON A1.aaGLWorkHdrID = AA.aaGLWorkHdrID   LEFT OUTER JOIN GL20000 GL ON  GL.JRNENTRY=AA.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND   A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT   WHERE A1.aaGLWorkHdrID = @aaGLWorkHdrID AND A1.aaGLWorkDistID > 0 AND GL.JRNENTRY IS NULL    Update AAG10001 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID=@aaGLWorkHdrID  Update AAG10002 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID=@aaGLWorkHdrID  Update AAG10003 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID=@aaGLWorkHdrID  UPDATE AAG10002   SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = A1.aaGLWorkHdrID) from AAG10001 A1 where AAG10002.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10002.aaGLWorkDistID=A1.aaGLWorkDistID and A1.aaGLWorkHdrID=@aaGLWorkHdrID  UPDATE AAG10003  SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = A1.aaGLWorkHdrID) from AAG10001 A1 where AAG10003.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10003.aaGLWorkDistID=A1.aaGLWorkDistID and A1.aaGLWorkHdrID=@aaGLWorkHdrID  UPDATE AAG10001   SET aaGLWorkDistID =  (SELECT COUNT(1) FROM AAG10001 AA WHERE AAG10001.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID ) where AAG10001.aaGLWorkHdrID=@aaGLWorkHdrID  End  End  close CGLWORK  deallocate CGLWORK  end    
GO
GRANT EXECUTE ON  [dbo].[aagUpdateGLAllocEntry] TO [DYNGRP]
GO

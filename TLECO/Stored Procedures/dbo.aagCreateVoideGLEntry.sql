SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[aagCreateVoideGLEntry]  @JRNENTRY int,  @RCTRXSEQ numeric(19,5),  @TRXDATE datetime,  @YEAR1 smallint,  @OpHistyear tinyint,   @CompanyID int,  @USERID char(15) as begin   declare @aaGLWorkHdrID int,  @ISInitialise int,  @aaGLHdrID int,  @aaGLTRXSource char(13),  @aaTRXSource char(13),  @ErrorState smallint,  @Success tinyint,  @RCTRXSEQ1 numeric(19,5),  @dtglPostDate datetime,  @ORGNATYP smallint,  @SERIES smallint,  @Ledger_ID smallint   select @aaGLWorkHdrID = 0,  @ISInitialise = 0,  @aaGLHdrID = 0,  @ErrorState = 0,  @Success = 0,  @RCTRXSEQ1 = 0,  @ORGNATYP = 0,  @SERIES = 0,  @Ledger_ID = 0   if @OpHistyear = 0  begin  Select @aaGLTRXSource = TRXSORCE  , @RCTRXSEQ1 = RCTRXSEQ, @dtglPostDate = TRXDATE,  @ORGNATYP = ORGNATYP, @SERIES = SERIES, @Ledger_ID = Ledger_ID   from GL20000  where JRNENTRY = @JRNENTRY and  RCTRXSEQ = (Select max(RCTRXSEQ)  from GL20000 where JRNENTRY = @JRNENTRY and OPENYEAR = @YEAR1) and  OPENYEAR = @YEAR1   end  else if @OpHistyear = 1  begin  Select @aaGLTRXSource = TRXSORCE , @RCTRXSEQ1 = RCTRXSEQ, @dtglPostDate = TRXDATE,  @ORGNATYP = ORGNATYP, @SERIES = SERIES, @Ledger_ID = Ledger_ID   from GL30000  where JRNENTRY = @JRNENTRY and  RCTRXSEQ = (Select max(RCTRXSEQ)  from GL30000 where JRNENTRY = @JRNENTRY and HSTYEAR = @YEAR1) and  HSTYEAR = @YEAR1   end    if @RCTRXSEQ <> 0  begin  update AAG10000 set RCTRXSEQ = @RCTRXSEQ1, Ledger_ID = @Ledger_ID where JRNENTRY = @JRNENTRY  end   if @ORGNATYP = 5 and @SERIES = 2   begin  if @RCTRXSEQ <> 0  begin  exec aagIsInitialiseGLWork  @JRNENTRY,  @RCTRXSEQ1,  @TRXDATE,  @aaGLWorkHdrID output,  @ISInitialise output  end  else  begin  exec aagIsInitialiseGLWork  @JRNENTRY,  @RCTRXSEQ,  @TRXDATE,  @aaGLWorkHdrID output,  @ISInitialise output  end  update AAG10001 set DEBITAMT = 0, CRDTAMNT = 0, ORDBTAMT = 0, ORCRDAMT = 0   where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where JRNENTRY = @JRNENTRY)   update AAG10002 set DEBITAMT = 0, CRDTAMNT = 0, ORDBTAMT = 0, ORCRDAMT = 0   where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where JRNENTRY = @JRNENTRY)  end  else  begin  exec aagIsInitialiseGLWork  @JRNENTRY,  @RCTRXSEQ1,  @TRXDATE,  @aaGLWorkHdrID output,  @ISInitialise output  end   exec aagCreateGLaaAllocationData  @JRNENTRY,  @RCTRXSEQ1,  @OpHistyear,  @YEAR1,  @CompanyID   exec aagBuildAuditTrailCode  'AATRX',  @aaTRXSource output,  @ErrorState output   exec aagCopyToGLFromGLWork  @aaGLWorkHdrID,  @aaGLHdrID output,  @YEAR1,   @aaGLTRXSource,  @aaTRXSource,  @Success,  @CompanyID,  @dtglPostDate   delete from AAG10000 where aaGLWorkHdrID = @aaGLWorkHdrID  delete from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID  delete from AAG10002 where aaGLWorkHdrID = @aaGLWorkHdrID  delete from AAG10003 where aaGLWorkHdrID = @aaGLWorkHdrID   delete from AAG30003 where aaGLHdrID = @aaGLHdrID   update AAG30002 set aaAssignedPercent = 0 where aaGLHdrID = @aaGLHdrID   insert into AAG70000 values(@USERID, 'GL_NORMAL', @aaGLHdrID, @JRNENTRY, 2,  @TRXDATE, @aaGLTRXSource,@aaTRXSource, @RCTRXSEQ, @YEAR1)  end    
GO
GRANT EXECUTE ON  [dbo].[aagCreateVoideGLEntry] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[aagRenumberAASubDistsALL]   @iHdrID int,  @oStatus smallint = NULL out  with encryption as  set transaction isolation level read uncommitted set nocount on  begin  set nocount on  declare @DistID int,  @ID int ,  @Max int  select  @DistID = 0,   @Max = 0   Update AAG20003  Set aaSubLedgerDistID = aaSubLedgerDistID * -1  Where aaSubLedgerHdrID = @iHdrID  Update AAG20002  Set aaSubLedgerDistID = aaSubLedgerDistID * -1  Where aaSubLedgerHdrID = @iHdrID  Update AAG20001  Set aaSubLedgerDistID = aaSubLedgerDistID * -1  Where aaSubLedgerHdrID = @iHdrID  DECLARE Cur1 CURSOR FOR  SELECT aaSubLedgerDistID FROM AAG20001  Where aaSubLedgerHdrID = @iHdrID and aaOffsetAcct = 0  Order by aaOffsetAcct , SEQNUMBR  OPEN Cur1  FETCH NEXT FROM Cur1 INTO @DistID  select @ID = 1  while @@FETCH_STATUS = 0  Begin  Update AAG20003  Set aaSubLedgerDistID = @ID  Where aaSubLedgerHdrID = @iHdrID and aaSubLedgerDistID = @DistID  IF @@error <> 0  goto errlbl  Update AAG20002  Set aaSubLedgerDistID = @ID  Where aaSubLedgerHdrID = @iHdrID and aaSubLedgerDistID = @DistID  IF @@error <> 0  goto errlbl  Update AAG20001  Set aaSubLedgerDistID = @ID  Where aaSubLedgerHdrID = @iHdrID and aaSubLedgerDistID = @DistID  IF @@error <> 0  goto errlbl   set @ID = @ID + 1   FETCH NEXT FROM Cur1 INTO @DistID   End   errlbl:  close Cur1  deallocate Cur1  Select @Max = isnull(max(aaSubLedgerDistID),0)+1  from AAG20001 where aaSubLedgerHdrID = @iHdrID and  aaSubLedgerDistID > 0 and  aaOffsetAcct = 0  update AAG20001 set aaSubLedgerDistID = @Max where  aaSubLedgerHdrID = @iHdrID and aaSubLedgerDistID < 0  update AAG20002 set aaSubLedgerDistID = @Max where  aaSubLedgerHdrID = @iHdrID and aaSubLedgerDistID < 0  update AAG20003 set aaSubLedgerDistID = @Max where  aaSubLedgerHdrID = @iHdrID and aaSubLedgerDistID < 0  set nocount off end   
GO
GRANT EXECUTE ON  [dbo].[aagRenumberAASubDistsALL] TO [DYNGRP]
GO

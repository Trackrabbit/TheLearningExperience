SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_EVGR_Cancel_Contract_Line]  @CONSTS                 smallint,  @CONTNBR                char(11),  @LNSEQNBR               numeric(19,5),  @CANCELDATE             datetime AS  declare @Cancel tinyint, @CoverageStart datetime, @CoverageEnd datetime, @BilledCoverageEnd datetime, @BilledCoverageStart datetime, @LINECOUNTER numeric(19,2), @DR numeric(19,5), @OrigDR numeric(19,5),  @TotalBilled numeric(19,2),@OrigTotalBilled numeric(19,2), @TotalCreditAmount numeric(19,2), @OrigTotalCreditAmount numeric(19,2), @BilledCreditAmount numeric(19,2), @OrigBilledCreditAmount numeric(19,2), @LIABILITYAMOUNT    numeric(19,2),@ORIGLIABILITYAMOUNT    numeric(19,2), @OrigDiffAmount numeric(19,2), @DiffAmount numeric(19,2), @Sequence int, @CoverageStartDate datetime,@CoverageEndDate datetime, @LastInvoiceCoverageEndDate datetime, @TransactionDate datetime,@ErrorCondition integer,@UserID char(30), @NEXTBILLDATE datetime, @Total numeric(19,2),@OrigTotal numeric(19,2), @BILSTAT smallint declare @PriceType integer declare @SourceDocument varchar(51) declare @I_sRateCalcMethod  smallint ,   @I_sViewMode   smallint,   @I_nExchangeRate  numeric(15,7),  @I_nDenomExchangeRate numeric(15,7),  @I_sMCTrxState   smallint,   @I_sDecimalPlaces  smallint,  @O_iErrorState          int declare @LineStatus char(1) declare @CreateCredit tinyint  declare @MinDate datetime,@MaxDate datetime declare @JustCancel tinyint  declare @ContractStartDate datetime, @CreditAll tinyint   declare @BillEndDate datetime, @ContractEndDate datetime  exec smGetMinDate @MinDate output  select @CreateCredit = 0, @JustCancel = 0, @CreditAll = 0 select @MaxDate = DATEADD(yy, 1000, @MinDate),  @UserID = SUSER_SNAME() if exists(select * from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0)  select @CoverageEnd = max(SVC_Coverage_End_Date), @CoverageStart = max(SVC_Coverage_Start_Date), @LineStatus = 'P' , @BILSTAT = 4  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0 else   select @CoverageEnd = max(SVC_Coverage_End_Date), @CoverageStart = max(SVC_Coverage_Start_Date), @CreateCredit = 1, @LineStatus = 'C' , @BILSTAT = 2  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  select @ContractStartDate = STRTDATE, @BillEndDate =BILEND, @ContractEndDate = ENDDATE from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR if @ContractStartDate > @CANCELDATE   select @JustCancel = 1 if @ContractStartDate = @CANCELDATE   select @CreditAll = 1   if (select TOTAL from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR) = 0  begin  select @NEXTBILLDATE = NXTBLDTE from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  if @NEXTBILLDATE >= @CANCELDATE  update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE,  Contract_Line_Status = 'C', BILSTAT = 2, NXTBLDTE = @MaxDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  else  begin  if @BillEndDate <> @ContractEndDate  select @BillEndDate = dateadd(dd, (datediff(dd, @ContractEndDate, @CANCELDATE) + 1),@BillEndDate)  else  select @BillEndDate = @CANCELDATE   update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @BillEndDate,  Contract_Line_Status = 'P', BILSTAT = 4  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  end   exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  return   end  if @CoverageEnd > @CANCELDATE   Begin  if (@CoverageStart > @CANCELDATE or @CreateCredit = 1) and @JustCancel = 0  Begin  delete from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  select @BilledCoverageEnd =  max(SVC_Coverage_End_Date), @BilledCoverageStart = min(SVC_Coverage_Start_Date),  @TotalBilled = sum(PSTDAMNT), @OrigTotalBilled = sum(ORIGPSTDAMNT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  select @DR = @TotalBilled / (datediff(dd, @BilledCoverageStart, @BilledCoverageEnd)+1),  @OrigDR = @OrigTotalBilled / (datediff(dd, @BilledCoverageStart, @BilledCoverageEnd)+1)  if @BilledCoverageEnd = @CANCELDATE   begin  select @NEXTBILLDATE = @MaxDate, @LineStatus = 'C', @BILSTAT = 2, @TotalCreditAmount = 0, @OrigTotalCreditAmount = 0  end   else  begin  select @BilledCoverageEnd = max(SVC_Coverage_End_Date)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   and SVC_Coverage_Start_Date <= @CANCELDATE and POSTED = 1  select @LINECOUNTER = DATEDIFF(dd, @CANCELDATE,@BilledCoverageEnd)  select @OrigBilledCreditAmount = isnull(sum(ORIGPSTDAMNT),0),   @BilledCreditAmount = isnull(sum(PSTDAMNT),0), @LastInvoiceCoverageEndDate = max(SVC_Coverage_End_Date)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   and SVC_Coverage_Start_Date > @CANCELDATE and POSTED = 1  select @OrigTotalCreditAmount = isnull(@OrigBilledCreditAmount + @OrigDR * @LINECOUNTER, 0),  @TotalCreditAmount = isnull(@BilledCreditAmount + @DR * @LINECOUNTER,0)  if @LastInvoiceCoverageEndDate is not null  select @BilledCoverageEnd = @LastInvoiceCoverageEndDate   select @Sequence = isnull(max(SVC_Invoice_SEQ_Number),0) + 1 from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @CoverageStartDate = DATEADD(day,1,@CANCELDATE)   select @CoverageEndDate = max(SVC_Coverage_End_Date) from SVC00603  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1   if @CreditAll = 1  begin  select @OrigTotalCreditAmount = @OrigTotalBilled, @TotalCreditAmount = @TotalBilled,  @CoverageStartDate = @CANCELDATE  end   if @TotalCreditAmount > 0   insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @Sequence,  IsNull(@CANCELDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  0 ,  @CoverageStartDate,  IsNull(@CoverageEndDate,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),   0,  @MinDate,  0,  @TotalCreditAmount,  @DR,  0,  0,   0,  @OrigTotalCreditAmount,  0,0,'',0)  select @NEXTBILLDATE = min(INVODATE) from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  end   select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   if exists(select 1 from SVC00600 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and (BILCYC = 4 or (BILCYC = 3 and (svcFrequencyQty > 1 or Liabiltiy_Reduction = 1))))  Begin  exec SVC_RET_Cancel_Revenue_Recognition_Lines @CONSTS,@CONTNBR,@LNSEQNBR,@CANCELDATE,@UserID,@ErrorCondition OUTPUT  if @ErrorCondition = 1113  begin  select @LIABILITYAMOUNT = sum(Net_Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigNetTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  if @Total <> @LIABILITYAMOUNT   Begin  select @OrigDiffAmount = @ORIGLIABILITYAMOUNT - @OrigTotal, @DiffAmount = @LIABILITYAMOUNT - @Total  if @DiffAmount > 0  update SVC00603 set SVC_Invoice_Credit_Amoun = SVC_Invoice_Credit_Amoun - @DiffAmount, OrigInvCreditAmt = OrigInvCreditAmt - @OrigDiffAmount where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @Sequence   select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  End  end  End   update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE, Contract_Line_Status = @LineStatus, BILSTAT = @BILSTAT,  Amount_To_Invoice = (-1) * @TotalCreditAmount, Orig_Amount_To_Invoice = (-1) * @OrigTotalCreditAmount,   ORIGTOTAL = @OrigTotal, TOTAL = @Total, NXTBLDTE = isnull(@NEXTBILLDATE, @MaxDate)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  End  else  Begin  delete from SVC00603 with (rowlock) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  select @LastInvoiceCoverageEndDate = isnull(max(SVC_Coverage_End_Date),@MinDate) from SVC00603  with (rowlock) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  select @CoverageStartDate = FRXSTRT from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   if @CreditAll = 1   begin  update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE,Contract_Line_Status = 'C',  ORIGTOTAL = 0, TOTAL = 0, BILSTAT = 2, NXTBLDTE = @MaxDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  end  else  begin  update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE, Contract_Line_Status = 'P', BILSTAT = 4  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Line @CONSTS, @CONTNBR, @LNSEQNBR, 2  end   delete from SVC00604 with (rowlock) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and Status = 0  and SVC_Coverage_End_Date > @CANCELDATE    if exists(select 1 from SVC00600 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and (BILCYC = 4 or (BILCYC = 3 and (svcFrequencyQty > 1 or Liabiltiy_Reduction = 1))))  Begin  select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_RET_Cancel_Revenue_Recognition_Lines @CONSTS,@CONTNBR,@LNSEQNBR,@CANCELDATE,@UserID,@ErrorCondition OUTPUT  if @ErrorCondition = 1113  begin  select @LIABILITYAMOUNT = sum(Net_Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigNetTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  if @Total <> @LIABILITYAMOUNT   Begin  select @Sequence = isnull(max(SVC_Invoice_SEQ_Number),1) from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @OrigDiffAmount = @ORIGLIABILITYAMOUNT - @OrigTotal, @DiffAmount = @LIABILITYAMOUNT - @Total  if @DiffAmount <> 0  update SVC00603 set DOCAMNT = DOCAMNT + @DiffAmount, ORDOCAMT = ORDOCAMT + @OrigDiffAmount where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @Sequence   select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  End  end  End   exec SVC_EVGR_Check_PendingCancel @CONSTS, @CONTNBR, @LNSEQNBR, '', @BILSTAT output  if @BILSTAT  = 2  update SVC00601 with (rowlock) set Contract_Line_Status = 'C', BILSTAT = 2  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  End   if (select DOCAMNT from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @Sequence) = 0  and (select SVC_Invoice_Credit_Amoun from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @Sequence) = 0  delete from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @Sequence  End  if @JustCancel = 1  update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE,  Contract_Line_Status = 'C', BILSTAT = 2, NXTBLDTE = @MaxDate  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  if @CoverageEnd <= @CANCELDATE   Begin  update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE, Contract_Line_Status = 'P', BILSTAT = 4  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  End return   
GO
GRANT EXECUTE ON  [dbo].[SVC_EVGR_Cancel_Contract_Line] TO [DYNGRP]
GO

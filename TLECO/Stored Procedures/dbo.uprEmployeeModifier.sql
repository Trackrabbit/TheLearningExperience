SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[uprEmployeeModifier]   @I_charStartEmployee  char(30),  @I_charEndEmployee  char(30),  @O_iErrorState   int = NULL  output  as  set transaction isolation level read uncommitted set nocount on  declare  @DBNAME   char(25),  @DBID   smallint,  @EMPLOYID   char(255),  @tTransaction tinyint,  @tLoop tinyint,  @iStatus int,  @cStartEmployee char(50),  @cEndEmployee char(50)  select @DBNAME = DB_NAME() select @DBID = CMPANYID from DYNAMICS..SY01500 where INTERID = @DBNAME  exec @iStatus = smFormatStringsForExecs  @I_vInputString  = @I_charStartEmployee,  @O_cOutputString = @cStartEmployee output,  @O_iErrorState  = @O_iErrorState output  if @iStatus <> 0 or @O_iErrorState <> 0 begin  set @O_iErrorState = 90  return end  exec @iStatus = smFormatStringsForExecs  @I_vInputString  = @I_charEndEmployee,  @O_cOutputString = @cEndEmployee output,  @O_iErrorState  = @O_iErrorState output  if @iStatus <> 0 or @O_iErrorState <> 0 begin  set @O_iErrorState = 91  return end  select  @O_iErrorState   = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end  while (@tLoop is NULL) begin  select @tLoop = 1   exec @iStatus = uprEmployeeModifierPre  @I_charStartEmployee output,  @I_charEndEmployee output,  @cStartEmployee output,  @cEndEmployee output,  @O_iErrorState output  if @O_iErrorState <> 0   begin  break  end   if ( @I_charStartEmployee is NULL or  @I_charEndEmployee is NULL or  @cStartEmployee is NULL or  @cEndEmployee is NULL)  begin  select @O_iErrorState = 1   break  end    declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set EMPLOYID =' + rtrim(@cEndEmployee) +  ' where EMPLOYID = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'EMPLOYID'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 2   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   update GL10001 set ORMSTRID = @I_charEndEmployee where ORMSTRID = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 3   break  end  update GL20000 set ORMSTRID = @I_charEndEmployee where ORMSTRID = @I_charStartEmployee and SERIES = 6  if @@error <> 0  begin  select @O_iErrorState = 4   break  end  update GL30000 set ORMSTRID = @I_charEndEmployee where ORMSTRID = @I_charStartEmployee and SERIES = 6  if @@error <> 0  begin  select @O_iErrorState = 5   break  end  update PJOURNAL set ORMSTRID = @I_charEndEmployee where ORMSTRID = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 6   break  end  update CM20200 set CMLinkID = @I_charEndEmployee where CMLinkID = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 7   break  end  if exists (select * from sysobjects where id = object_id('dbo.eTimeTemplate') and sysstat & 0xf = 3)  begin  update eTimeTemplate set EmployeeID = @I_charEndEmployee where EmployeeID = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 8   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.COM00700') and sysstat & 0xf = 3)  begin  update COM00700 set ENDEMPLY = @I_charEndEmployee where ENDEMPLY = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 18   break  end  end   update SY01200 set Master_ID = @I_charEndEmployee where Master_ID = @I_charStartEmployee and Master_Type = 'EMP'  if @@error <> 0  begin  select @O_iErrorState = 9    break  end   if exists (select * from sysobjects where id = object_id('dbo.PA01901') and sysstat & 0xf = 3)  begin  update PA01901 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATranType = 1  if @@error <> 0  begin  select @O_iErrorState = 10   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA11800') and sysstat & 0xf = 3)  begin  update PA11800 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATU = 1   if @@error <> 0  begin  select @O_iErrorState = 11   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA11801') and sysstat & 0xf = 3)  begin  update PA11801 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATU = 1   if @@error <> 0  begin  select @O_iErrorState = 12   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA13202') and sysstat & 0xf = 3)  begin  update PA13202 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATU = 1   if @@error <> 0  begin  select @O_iErrorState = 13   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA23203') and sysstat & 0xf = 3)  begin  update PA23203 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATU = 1   if @@error <> 0  begin  select @O_iErrorState = 14   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA33203') and sysstat & 0xf = 3)  begin  update PA33203 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATU = 1   if @@error <> 0  begin  select @O_iErrorState = 15   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA43001') and sysstat & 0xf = 3)  begin  update PA43001 set PArecordid = @I_charEndEmployee where PArecordid = @I_charStartEmployee and PAsfid = 22   if @@error <> 0  begin  select @O_iErrorState = 16   break  end  end   if exists (select * from DYNAMICS..sysobjects where id = object_id('DYNAMICS.dbo.PDK40001') and sysstat & 0xf = 3)  begin  update DYNAMICS..PDK40001 set EMPLOYID = @I_charEndEmployee where EMPLOYID = @I_charStartEmployee and CMPANYID = @DBID  if @@error <> 0  begin  select @O_iErrorState = 28   break  end   update DYNAMICS..PDK40001 set MANAGER = @I_charEndEmployee where MANAGER = @I_charStartEmployee and CMPANYID = @DBID  if @@error <> 0  begin  select @O_iErrorState = 35   break  end   update DYNAMICS..PDK40001 set SUPERVISOR = @I_charEndEmployee where SUPERVISOR = @I_charStartEmployee and CMPANYID = @DBID  if @@error <> 0  begin  select @O_iErrorState = 36   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PDK10000') and sysstat & 0xf = 3)  begin  update PDK10000 set MANAGER = @I_charEndEmployee where MANAGER = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 37   break  end   update PDK10000 set SUPERVISOR = @I_charEndEmployee where SUPERVISOR = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 31   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PDK10500') and sysstat & 0xf = 3)  begin  update PDK10500 set MANAGER = @I_charEndEmployee where MANAGER = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 38   break  end   update PDK10500 set SUPERVISOR = @I_charEndEmployee where SUPERVISOR = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 32   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PDK00101') and sysstat & 0xf = 3)  begin  update PDK00101 set PDK_Delegate = @I_charEndEmployee where PDK_Delegate = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 33   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PDK00102') and sysstat & 0xf = 3)  begin  update PDK00102 set PDK_Delegate = @I_charEndEmployee where PDK_Delegate = @I_charStartEmployee  if @@error <> 0  begin  select @O_iErrorState = 34   break  end  end   if exists (select * from sysobjects where id = object_id('dbo.PA01901') and sysstat & 0xf = 3)  begin  if exists( select 1 from PA01901 (nolock) where PACOSTOWNER = @I_charStartEmployee and PATranType = 5 )  begin  update PA01901 set PACOSTOWNER = @I_charEndEmployee where PACOSTOWNER = @I_charStartEmployee and PATranType = 5  if @@error <> 0  begin  select @O_iErrorState = 17   break  end  exec pmVendorModifier  @I_charStartVendor = @I_charStartEmployee,  @I_charEndVendor = @I_charEndEmployee,  @O_iErrorState = @O_iErrorState output  if @O_iErrorState <> 0  begin  select @O_iErrorState = 18   break  end  end  end   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set PAEstimatorID =' + rtrim(@cEndEmployee) +  ' where PAEstimatorID = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PAEstimatorID'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 19   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set PAprojmngrid =' + rtrim(@cEndEmployee) +  ' where PAprojmngrid = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PAprojmngrid'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 19   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set PABusMgrID =' + rtrim(@cEndEmployee) +  ' where PABusMgrID = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PABusMgrID'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 19   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set STTEMPID =' + rtrim(@cEndEmployee) +  ' where STTEMPID = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'STTEMPID'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 19   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set ENDEMPL =' + rtrim(@cEndEmployee) +  ' where ENDEMPL = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'ENDEMPL'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 20   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set MANAGER =' + rtrim(@cEndEmployee) +  ' where MANAGER = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'MANAGER'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 21   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set PBankEmployeeXRefNumber =' + rtrim(@cEndEmployee) +  ' where PBankEmployeeXRefNumber = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PBankEmployeeXRefNumber'  order by o.name  set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 40   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set PEmployeeID =' + rtrim(@cEndEmployee) +  ' where PEmployeeID = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PEmployeeID'  order by o.name  set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 30   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set EMPID =' + rtrim(@cEndEmployee) +  ' where EMPID = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'EMPID'  order by o.name   set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 24   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set EMPID_I =' + rtrim(@cEndEmployee) +  ' where EMPID_I = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'EMPID_I'  order by o.name  set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 25   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break   declare ta_EMCursor insensitive CURSOR for select 'update '+o.name+' set CUSTODIAN =' + rtrim(@cEndEmployee) +  ' where CUSTODIAN = ' + rtrim(@cStartEmployee)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'CUSTODIAN'  order by o.name  set nocount on  OPEN ta_EMCursor  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@EMPLOYID)  if @@error <> 0  begin  select @O_iErrorState = 21   break  end  FETCH NEXT FROM ta_EMCursor INTO @EMPLOYID  end  DEALLOCATE ta_EMCursor   if @O_iErrorState <> 0  break  end   exec @iStatus = uprEmployeeModifierPost  @I_charStartEmployee,  @I_charEndEmployee,  @cStartEmployee,  @cEndEmployee,  @O_iErrorState  if @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1 begin  commit transaction end  return   
GO
GRANT EXECUTE ON  [dbo].[uprEmployeeModifier] TO [DYNGRP]
GO

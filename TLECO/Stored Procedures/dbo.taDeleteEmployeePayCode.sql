SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taDeleteEmployeePayCode]  @I_vEMPLOYID char(15),     @I_vPAYRCORD char(7),     @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',      @I_vUSRDEFND2 char(50) = '',      @I_vUSRDEFND3 char(50) = '',      @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @sCompanyID int,  @Primary_Pay_Record char(7),   @iStatus int,  @iAddCodeErrState int,  @iCustomState int,  @iError int,  @O_oErrorState int,  @iEmployeerString varchar(255)  select   @Primary_Pay_Record = '',  @O_iErrorState = 0,  @iStatus = 0,  @iCustomState = 0,  @iError = 0,  @O_oErrorState = 0,  @iEmployeerString = ''  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taDeleteEmployeePayCodePre  @I_vEMPLOYID output,  @I_vPAYRCORD output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState  = @iCustomState output,  @oErrString = @iEmployeerString output  select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 10474    exec @iStatus = taUpdateString  @O_iErrorState,  @iEmployeerString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 where INTERID = db_name()  if ( @I_vEMPLOYID is NULL ) begin  select @O_iErrorState = 10475     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vEMPLOYID = '' ) begin  select @O_iErrorState = 10476     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vPAYRCORD is NULL)  begin   select @O_iErrorState = 10477     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vPAYRCORD = '')  begin  select @O_iErrorState = 10478     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  select @I_vEMPLOYID = UPPER(@I_vEMPLOYID),  @I_vPAYRCORD = UPPER(@I_vPAYRCORD)  if (@I_vEMPLOYID <> '') begin  if not exists(select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID)  begin   select @O_iErrorState = 10479    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vPAYRCORD <> '')  begin  if not exists(select 1 from UPR40600 (nolock) where PAYRCORD = @I_vPAYRCORD)  begin   select @O_iErrorState = 10480     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vPAYRCORD <> '')  begin  if not exists(select 1 from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vPAYRCORD)  begin   select @O_iErrorState = 10481     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 10482     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if exists(select 1 from UPR10302 (nolock) where EMPLOYID = @I_vEMPLOYID and UPRTRXCD = @I_vPAYRCORD) begin  select @O_iErrorState = 10483    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if exists(select 1 from UPR10308 (nolock) where EMPLOYID = @I_vEMPLOYID and UPRTRXCD = @I_vPAYRCORD) begin  select @O_iErrorState = 10484    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if exists(select 1 from UPR30301 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYROLCD = @I_vPAYRCORD) begin  select @O_iErrorState = 10485    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  select @Primary_Pay_Record = Primary_Pay_Record from UPR00100 where EMPLOYID = @I_vEMPLOYID   if (@Primary_Pay_Record = @I_vPAYRCORD) begin  update UPR00100 set Primary_Pay_Record = '' where EMPLOYID = @I_vEMPLOYID  if @@error <> 0   begin  select @O_iErrorState = 10486    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  delete UPR00400 where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vPAYRCORD if @@error <> 0  begin  select @O_iErrorState = 10487    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  exec @iStatus = taDeleteEmployeePayCodePost  @I_vEMPLOYID,  @I_vPAYRCORD,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState  = @iCustomState output,  @oErrString = @iEmployeerString output  select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 10488    exec @iStatus = taUpdateString  @O_iErrorState,  @iEmployeerString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taDeleteEmployeePayCode] TO [DYNGRP]
GO

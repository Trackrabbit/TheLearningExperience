SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_EVGR_Line_Invoice_Date]  @RecordType smallint,  @Contract char(10),  @Line numeric(19,5) ,  @InvoiceDate datetime output,  @CoverageStart datetime output,  @CoverageEnd datetime output AS declare  @BillOnDay smallint, @MonthForBillStart smallint, @AtMonthEnd tinyint, @EoMDay smallint, @BillType smallint, @MinDate datetime, @EndDate datetime, @AddDay smallint, @Evergreen tinyint, @BillStartDay integer, @EoMBillDate datetime, @HDRStartDate datetime, @CurrentCoverageEnd datetime, @CurrentInvoiceDate datetime, @Total numeric(19,5) , @NextBilldate datetime declare @AtEvery smallint, @FrequencyQty smallint declare @BILLNGTH smallint , @BILPRD smallint declare @DayDiffOnStart smallint, @EoMStartDate datetime  exec smGetMinDate @MinDate output select @Evergreen = SVC_Evergreen_Contract, @HDRStartDate = STRTDATE, @BillType = BILCYC,  @BILLNGTH = BILLNGTH, @BILPRD = BILPRD,   @AtEvery = svcBillingFrequency, @FrequencyQty = svcFrequencyQty   from SVC00600 where CONSTS = @RecordType and CONTNBR = @Contract select  @BillOnDay = BILONDY, @EoMBillDate = BILSTRT, @NextBilldate = NXTBLDTE,  @InvoiceDate = BILSTRT, @CoverageStart = STRTDATE,@EndDate = ENDDATE, @Total = TOTAL  from SVC00601 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  if DATEPART(dd,@HDRStartDate) >= 28   select @DayDiffOnStart = CASE  when DATEPART(dd,@HDRStartDate) = 28 THEN 0  when DATEPART(dd,@HDRStartDate) = 29 THEN 1  when DATEPART(dd,@HDRStartDate) = 30 THEN 2  when DATEPART(dd,@HDRStartDate) = 31 THEN 3 END  select @MonthForBillStart = datepart(mm, @EoMBillDate)  if ((@MonthForBillStart = 4 or @MonthForBillStart = 6 or @MonthForBillStart = 9 or @MonthForBillStart  = 11) and @BillOnDay = 30)  or (@MonthForBillStart = 2 and (@BillOnDay = 28 or @BillOnDay =29))  or @BillOnDay = 31  select @AtMonthEnd = 1 else  select @AtMonthEnd = 0  if @Evergreen = 1 Begin  if exists(select * from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line)  begin  select @InvoiceDate = max(INVODATE), @CoverageStart = max(SVC_Coverage_Start_Date),  @CoverageEnd = max(SVC_Coverage_End_Date)  from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line   if @AtEvery = 1   select @CoverageStart = dateadd(dd, 1, @CoverageEnd),  @CoverageEnd = @EndDate, @InvoiceDate = case @BILPRD  when 1 then dateadd(dd, @BILLNGTH, @InvoiceDate)  when 2 then dateadd(mm, @BILLNGTH, @InvoiceDate)  when 3 then dateadd(yy, @BILLNGTH, @InvoiceDate) end  else  Begin  select @CoverageStart = dateadd(dd, 1, @CoverageEnd),   @InvoiceDate = case @BillType  when 1 then dateadd(dd, @FrequencyQty, @InvoiceDate)  when 2 then dateadd(ww, @FrequencyQty, @InvoiceDate)  when 3 then dateadd(mm, @FrequencyQty, @InvoiceDate)  when 4 then dateadd(yy, @FrequencyQty, @InvoiceDate)  end  if @BillType = 3 and @BillOnDay > 28   begin  exec SVC_EOM @InvoiceDate OUTPUT   SELECT @EoMDay = DATEPART(dd,@InvoiceDate)  if (@EoMDay > @BillOnDay)  select @InvoiceDate = DATEADD(dd,(@BillOnDay - @EoMDay),@InvoiceDate)  end   select @CoverageEnd = case @BillType  when 1 then dateadd(dd,-1,dateadd(dd,@FrequencyQty,@CoverageStart))  when 2 then dateadd(dd,-1,dateadd(ww,@FrequencyQty,@CoverageStart))  when 3 then dateadd(dd,-1,dateadd(mm,@FrequencyQty,@CoverageStart))  when 4 then dateadd(dd,-1,dateadd(yy,@FrequencyQty,@CoverageStart))  end   if @CoverageEnd > @EndDate  select @CoverageEnd = @EndDate  if @BillType = 3 and @DayDiffOnStart > 0  begin   select @EoMStartDate = @CoverageStart  exec SVC_EOM @EoMStartDate output  if @EoMStartDate = @CoverageStart   begin  if datepart(mm,@CoverageStart) = 2   select @CoverageEnd =  dateadd(dd,@DayDiffOnStart,@CoverageEnd)  else if @DayDiffOnStart = 3   begin  exec SVC_EOM @CoverageEnd output  select @CoverageEnd = dateadd(dd,-1,@CoverageEnd)  end  end   end  End   end  else   begin  if @AtEvery = 1   begin  select @InvoiceDate = case @BillType  when 1 then dateadd(dd, @FrequencyQty -1, @InvoiceDate)  when 2 then dateadd(ww, @FrequencyQty, @InvoiceDate)  when 3 then dateadd(mm, @FrequencyQty, @InvoiceDate)  when 4 then dateadd(yy, @FrequencyQty, @InvoiceDate)  end,  @CoverageEnd = @EndDate  end   else   Begin  if @BillType < 3  select @InvoiceDate = dateadd(dd, @BillOnDay - 1, @InvoiceDate)  else  begin   exec SVC_EOM @EoMBillDate OUTPUT    select @EoMDay = DATEPART(dd,@EoMBillDate), @BillStartDay = DATEPART(dd,@InvoiceDate)  if @BillStartDay > @BillOnDay  select @InvoiceDate = DATEADD(mm,1,dateadd(dd,(@BillOnDay - @EoMDay), @EoMBillDate))  else  begin  if @AtMonthEnd = 1    select @InvoiceDate = @EoMBillDate  else  select @InvoiceDate = dateadd(dd,(@BillOnDay - @EoMDay), @EoMBillDate)  end  End   select @CoverageEnd = case @BillType  when 1 then dateadd(dd,-1,dateadd(dd,@FrequencyQty,@CoverageStart))  when 2 then dateadd(dd,-1,dateadd(ww,@FrequencyQty,@CoverageStart))  when 3 then dateadd(dd,-1,dateadd(mm,@FrequencyQty,@CoverageStart))  when 4 then dateadd(dd,-1,dateadd(yy,@FrequencyQty,@CoverageStart))  end    if exists(select * from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and POSTED = 0)  select @CurrentCoverageEnd = max(SVC_Coverage_End_Date), @CurrentInvoiceDate = max(INVODATE)  from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and POSTED = 0  else  select @CurrentCoverageEnd = @CoverageEnd, @CurrentInvoiceDate = @InvoiceDate   if @CoverageStart > @CurrentCoverageEnd  select @CoverageEnd = @MinDate  else  select @CoverageEnd = @CurrentCoverageEnd, @InvoiceDate = @CurrentInvoiceDate  END   end  End  if @CoverageEnd > @EndDate select @CoverageEnd = @EndDate if @Total = 0 and @InvoiceDate = @NextBilldate  select @InvoiceDate = case @BillType  when 1 then dateadd(dd, @FrequencyQty, @InvoiceDate)  when 2 then dateadd(ww, @FrequencyQty, @InvoiceDate)  when 3 then dateadd(mm, @FrequencyQty, @InvoiceDate)  when 4 then dateadd(yy, @FrequencyQty, @InvoiceDate)  end if @Total = 0 and @BillType = 3 and @BillOnDay >= 28  begin  exec SVC_EOM @InvoiceDate OUTPUT   SELECT @EoMDay = DATEPART(dd,@InvoiceDate)  if (@EoMDay > @BillOnDay)  select @InvoiceDate = DATEADD(dd,(@BillOnDay - @EoMDay),@InvoiceDate)  end  select @InvoiceDate = isnull(@InvoiceDate,@MinDate),   @CoverageStart = isnull(@CoverageStart,@MinDate),  @CoverageEnd = isnull(@CoverageEnd,@MinDate) return    
GO
GRANT EXECUTE ON  [dbo].[SVC_EVGR_Line_Invoice_Date] TO [DYNGRP]
GO

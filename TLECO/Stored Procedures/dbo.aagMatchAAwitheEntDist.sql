SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create  procedure [dbo].[aagMatchAAwitheEntDist] @I_nSeries int, @I_cSource char(30), @I_cTableError nvarchar(30), @I_nHdrID int, @O_fMatched tinyint = 1 output as begin  declare  @ceEntTable nvarchar(30),  @cAccFieldName char(20),  @cSeqFieldName char(20),  @DocNumFieldName char(30),  @DocTypeFieldName  char(30),  @nAACount int,  @neEntCount int,  @nLocalDistID int,  @nOrderMisMatch tinyint,  @nErrorNum int,  @nAADistID int,  @nAADebitAmt numeric(9,5),  @nAACreditAmt numeric(9,5),  @nAAOrigDebitAmt numeric(9,5),  @nAAOrigCreditAmt numeric(9,5),  @nAAActIndx int,  @neEntDebitAmt numeric(9,5),  @neEntCreditAmt numeric(9,5),  @neEntOrigDebitAmt numeric(9,5),  @neEntOrigCreditAmt numeric(9,5),  @neEntActIndx int  if @I_nHdrID <= 0   return   set @O_fMatched = 1  set @nAACount = 0  set @neEntCount = 0  select @nLocalDistID = max(aaSubLedgerDistID) from AAG20001 a2 where a2.aaSubLedgerHdrID = @I_nHdrID and a2.POSTED = 1  set @nAADistID = 0  set @nErrorNum = 0  exec ('delete from ' + @I_cTableError + ' where aaSubLedgerHdrID = ' + @I_nHdrID)  select @nAACount = count(*) from AAG20001 a2 where a2.aaSubLedgerHdrID = @I_nHdrID and a2.POSTED = 0  if @I_nSeries =  3 and @I_cSource = ''   begin  SET @ceEntTable = 'RM10101'  set @cAccFieldName = 'DSTINDX'  set @cSeqFieldName = 'SEQNUMBR'  set @DocNumFieldName = 'DOCNUMBR'  set @DocTypeFieldName = 'RMDTYPAL'  select @neEntCount = count(*) from RM10101 e where (e.DOCNUMBR = (select DOCNUMBR from AAG20000 where aaSubLedgerHdrID = @I_nHdrID)  and e.RMDTYPAL = (select DOCTYPE from AAG20000 where aaSubLedgerHdrID = @I_nHdrID))  end  if @I_nSeries =  3 and @I_cSource <> ''   begin  SET @ceEntTable = 'MC10101'  set @cAccFieldName = 'DSTINDX'  set @cSeqFieldName = 'SEQNUMBR'  set @DocNumFieldName = 'DOCNUMBR'  set @DocTypeFieldName = 'RMDTYPAL'  select @neEntCount = count(*) from MC10101 e where (e.DOCNUMBR = (select DOCNUMBR from AAG20000 where aaSubLedgerHdrID = @I_nHdrID)  and e.RMDTYPAL = (select DOCTYPE from AAG20000 where aaSubLedgerHdrID = @I_nHdrID))  end  if @I_nSeries =  4 and @I_cSource = ''   begin  SET @ceEntTable = 'PM10100'  set @cAccFieldName = 'DSTINDX'  set @cSeqFieldName = 'DSTSQNUM'  set @DocNumFieldName = 'VCHRNMBR'  set @DocTypeFieldName = 'CNTRLTYP'  select @neEntCount = count(*) from PM10100 e where (e.VCHRNMBR = (select DOCNUMBR from AAG20000 where aaSubLedgerHdrID = @I_nHdrID)  and e.CNTRLTYP = (select DOCTYPE from AAG20000 where aaSubLedgerHdrID = @I_nHdrID) and e.PSTGSTUS = 0)  end  if @I_nSeries =  4 and @I_cSource <> ''   begin  SET @ceEntTable = 'PM20200'  set @cAccFieldName = 'DSTINDX'  set @cSeqFieldName = 'DSTSQNUM'  set @DocNumFieldName = 'VCHRNMBR'  set @DocTypeFieldName = 'DOCTYPE'  select @neEntCount = count(*) from PM20200 e where (e.VCHRNMBR = (select DOCNUMBR from AAG20000 where aaSubLedgerHdrID = @I_nHdrID)  and e.DOCTYPE > 3)   end  if @I_nSeries =  11   begin  SET @ceEntTable = 'SOP10102'  set @cAccFieldName = 'ACTINDX'  set @cSeqFieldName = 'SEQNUMBR'  set @DocNumFieldName = 'SOPNUMBE'  set @DocTypeFieldName = 'SOPTYPE'  select @neEntCount = count(*) from SOP10102 e where (e.SOPNUMBE = (select DOCNUMBR from AAG20000 where aaSubLedgerHdrID = @I_nHdrID)  and e.SOPTYPE = (select DOCTYPE from AAG20000 where aaSubLedgerHdrID = @I_nHdrID))  end  if @I_nSeries =  12 and @I_cSource = ''   begin  SET @ceEntTable = 'POP10390'  set @cAccFieldName = 'ACTINDX'  set @cSeqFieldName = 'SEQNUMBR'  set @DocNumFieldName = 'POPRCTNM'  set @DocTypeFieldName = 'SOPTYPE'  select @neEntCount = count(*) from POP10390 e where (e.POPRCTNM = (select DOCNUMBR from AAG20000 where aaSubLedgerHdrID = @I_nHdrID))  end  if @nAACount <> @neEntCount  begin  set @nErrorNum = 500  exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,AADOCVAL,aaErrorNum)  values(' + @I_nHdrID + ',' + @nAADistID + ', 0 ,1,'+ @nErrorNum + ')')   set @O_fMatched = 0  return  end  if @I_nSeries =  4 and @I_cSource <> ''    declare AA cursor fast_forward FOR  select a1.aaSubLedgerDistID, a1.DEBITAMT, a1.CRDTAMNT, a1.ACTINDX, a1.ORCRDAMT, a1.ORDBTAMT,  e.DEBITAMT, e.CRDTAMNT, e.DSTINDX, e.ORCRDAMT, e.ORDBTAMT  from AAG20001 a1, PM20200  e, AAG20000 a2  where a1.aaSubLedgerHdrID = @I_nHdrID and a1.POSTED = 0 and  a2.aaSubLedgerHdrID =  @I_nHdrID and  e.VCHRNMBR = a2.DOCNUMBR and  floor(e.DOCTYPE/3)-1 = a2.DOCTYPE  and  a1.SEQNUMBR = e.DSTSQNUM  order by a1.SEQNUMBR  if @I_nSeries =  12 and @I_cSource = ''   exec ('declare AA cursor fast_forward FOR  select a1.aaSubLedgerDistID, a1.DEBITAMT, a1.CRDTAMNT, a1.ACTINDX, a1.ORCRDAMT, a1.ORDBTAMT,  e.DEBITAMT, e.CRDTAMNT, e.' + @cAccFieldName + ', e.ORCRDAMT, e.ORDBTAMT  from AAG20001 a1,' + @ceEntTable + ' e, AAG20000 a2  where a1.aaSubLedgerHdrID = ' + @I_nHdrID + ' and a1.POSTED = 0 and  a2.aaSubLedgerHdrID = ' + @I_nHdrID + ' and  e.' + @DocNumFieldName + ' = a2.DOCNUMBR and  a1.SEQNUMBR = e.' +@cSeqFieldName + '  order by a1.SEQNUMBR' )  else  exec ('declare AA cursor fast_forward FOR  select a1.aaSubLedgerDistID, a1.DEBITAMT, a1.CRDTAMNT, a1.ACTINDX, a1.ORCRDAMT, a1.ORDBTAMT,  e.DEBITAMT, e.CRDTAMNT, e.' + @cAccFieldName + ', e.ORCRDAMT, e.ORDBTAMT  from AAG20001 a1,' + @ceEntTable + ' e, AAG20000 a2  where a1.aaSubLedgerHdrID = ' + @I_nHdrID + ' and a1.POSTED = 0 and  a2.aaSubLedgerHdrID = ' + @I_nHdrID + ' and  e.' + @DocNumFieldName + ' = a2.DOCNUMBR and  e.' + @DocTypeFieldName + ' = a2.DOCTYPE + 5 and  a1.SEQNUMBR = e.' +@cSeqFieldName + '  order by a1.SEQNUMBR' )  open AA  fetch next from AA into @nAADistID,@nAADebitAmt,@nAACreditAmt,@nAAActIndx,@nAAOrigDebitAmt,@nAAOrigCreditAmt,  @neEntDebitAmt,@neEntCreditAmt,@neEntActIndx, @neEntOrigDebitAmt,@neEntOrigCreditAmt  while @@fetch_status = 0  begin  set @nLocalDistID = @nLocalDistID + 1  if @nLocalDistID <> @nAADistID  set @nOrderMisMatch = 1  if (@nAADebitAmt <> @neEntDebitAmt or @nAACreditAmt<>@neEntCreditAmt)  begin  set @nErrorNum = 501  exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,AADOCVAL,aaErrorNum)  values(' + @I_nHdrID + ',' + @nAADistID + ', 0 ,1,'+ @nErrorNum + ')')   set @O_fMatched = 0  end  if (@nAAOrigDebitAmt <> @neEntOrigDebitAmt or @nAAOrigCreditAmt<>@neEntOrigCreditAmt)  begin  set @nErrorNum = 502  exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,AADOCVAL,aaErrorNum)  values(' + @I_nHdrID + ',' + @nAADistID + ', 0 ,1,'+ @nErrorNum + ')')   set @O_fMatched = 0  end  if @nAAActIndx <> @neEntActIndx  begin  set @nErrorNum = 503  exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,AADOCVAL,aaErrorNum)  values(' + @I_nHdrID + ',' + @nAADistID + ', 0,1,'+ @nErrorNum + ')')   set @O_fMatched = 0  end  fetch next from AA into @nAADistID,@nAADebitAmt,@nAACreditAmt,@nAAActIndx,@nAAOrigDebitAmt,@nAAOrigCreditAmt,  @neEntDebitAmt,@neEntCreditAmt,@neEntActIndx, @neEntOrigDebitAmt,@neEntOrigCreditAmt  end  close AA  deallocate AA end  if @nOrderMisMatch = 1  begin  set @nErrorNum = 504  exec ('insert ' + @I_cTableError + '(aaSubLedgerHdrID, aaSubLedgerDistID,aaSubLedgerAssignID,AADOCVAL,aaErrorNum)  values(' + @I_nHdrID + ',0, 0,1,'+ @nErrorNum + ')')   set @O_fMatched = 0  end    
GO
GRANT EXECUTE ON  [dbo].[aagMatchAAwitheEntDist] TO [DYNGRP]
GO

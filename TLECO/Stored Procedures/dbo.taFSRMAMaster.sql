SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taFSRMAMaster]  @I_vReturn_Record_Type smallint,   @I_vRETDOCID char(15),     @I_vRETORIG smallint = null,    @I_vRETREF char(31) = null,    @I_vRETSTAT char(3) = null,    @I_vRETTYPE char(11) = null,    @I_vENTDTE datetime = null,    @I_vENTTME datetime = null,    @I_vETADTE datetime = null,    @I_vETATME datetime = null,    @I_vCommit_Date datetime = null,   @I_vCommit_Time datetime = null,   @I_vRETUDATE datetime = null,    @I_vReturn_Time datetime = null,   @I_vCOMPDTE datetime = null,    @I_vCOMPTME datetime = null,    @I_vUSERID char(15) = null,    @I_vOFFID char(11) = null,    @I_vLOCNCODE char(11) = null,    @I_vRTRNNAME char(45) = null,      @I_vRETADDR1 char(61) = null,         @I_vRETADDR2 char(61) = null,         @I_vRETADDR3 char(61) = null,         @I_vRTRNCITY char(21) = null,      @I_vSVC_Return_State char(29) = null,   @I_vRTRNZIP char(11) = null,    @I_vReturn_Country char(61) = null,   @I_vCUSTNMBR char(15) = null,    @I_vADRSCODE char(15) = null,    @I_vCKHOLD smallint = 0,    @I_vCUSTNAME char(65) = null,    @I_vCONTACT char(61) = null,    @I_vADDRESS1 char(61) = null,    @I_vADDRESS2 char(61) = null,    @I_vADDRESS3 char(61) = null,    @I_vCITY char(35) = null,    @I_vSTATE char(29) = null,    @I_vZIPCODE char(11) = null,    @I_vCOUNTRY char(61) = null,    @I_vNOTETXT nvarchar(2000) = '',   @I_vBill_of_Lading char(31) = null,   @I_vSHIPMTHD char(15) = null,    @I_vBill_To_Customer char(15) = null,   @I_vSVC_Bill_To_Address_Code char(15) = null,  @I_vUSERDEF1 char(21) = null,    @I_vUSERDEF2 char(21) = null,    @I_vUSRDEF03 char(21) = null,    @I_vUSRDEF04 char(21) = null,    @I_vUSRDEF05 char(21) = null,    @I_vCSTPONBR char(21) = '',    @I_vSVC_RMA_Reason_Code char(3) = null,   @I_vSVC_RMA_From_Service tinyint = null,  @I_vSVC_FO_ID char(51) = null,    @I_vCURNCYID char(15) = null,    @I_vUpdateIfExists tinyint = 1,    @I_vRequesterTrx smallint = 0,    @I_vUSRDEFND1 char(50) = '',    @I_vUSRDEFND2 char(50) = '',      @I_vUSRDEFND3 char(50) = '',    @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output,    @oErrString varchar(255) output     with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @O_TODAY datetime,  @O_DUMMYDT datetime,  @I_vNotify_Date datetime,  @I_vNotify_Time datetime,  @O_vCUSTNAME char(65),  @O_vEXGTBLID char(15),  @O_vDECPLACS int,  @O_vRATECALC int,  @O_vVIEWMODE int,  @O_vISMCTRX tinyint,  @O_vDENXRATE numeric(19,5),  @O_vMCTRXSTT int,  @I_vPRICELVL char (15),  @I_vTAXSCHID char (15),  @I_vTAXEXMT1 char (25),  @I_vTAXEXMT2 char (25),  @I_vTOTAL numeric (19,5),  @O_vNOTEINDX numeric (19,5),  @O_vCURRNIDX smallint,  @I_vORIGPRETAXTOT numeric (19,5),  @I_vORTAXAMT numeric (19,5),  @I_vORIGTOTAL numeric (19,5),  @LOCNCODE char(11),  @iStatus int,  @iError int,  @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @Line_Seq_Exists smallint,  @RETTYPE char(11),  @CUSTNMBR char(15),  @HOLD smallint,  @INACTIVE smallint,  @NAME char(31),  @ADRSCODE char(15),  @CNTCPRSN char(31),  @PYMTRMID char (21),  @SLPRSNID char (15),  @PHONE1 char (21),  @PRBTADCD char(15),  @CURNCYID char(15),  @RATETPID char(15),  @FUNLCURR char (15),  @iGetNextNoteIdxErrState int,  @CMPANYID smallint,  @OFFID char (11),  @AuditLNITMSEQ int,  @FRMSTAT char(3),  @AuditDesc char(31),  @UserID char(15),  @Commit_Status char (3),  @Return_Status char (3),  @Complete_Status char (3),  @RETSTAT char (3),  @iValueExists smallint,  @Received_Status char(3),  @Close_Status char(3),  @Partial_Received_Status char(3),  @ReadyToClose_Status char(3),  @O_vSVC_RMA_Reason_Code_Desc char(31),  @O_vReceived smallint,  @O_vRMA_Status smallint,  @SLSRATETPID char(15),  @FINRATETPID char(15),  @PURRATETPID char(15),  @O_vXCHGRATE numeric(19,7),  @O_vRATETPID char(15),  @O_vEXCHDATE datetime,  @O_vTIME1 datetime,  @O_vEXPNDATE datetime,  @O_vEXGTBDSC char(30),  @O_vEXTBLSRC char(50),  @O_vRATEEXPR smallint,  @O_vDYSTINCR smallint,  @O_vRATEVARC numeric(19,7),  @O_vTRXDTDEF smallint,  @O_vRTCLCMTD smallint,  @O_vPRVDSLMT smallint,  @O_vDATELMTS smallint,  @O_vSRVRECTYPE smallint,  @O_vCALLNBR char(11),  @O_vEQPLINE int,  @O_vLNITMSEQ int,  @O_vSOPTYPE smallint,  @O_vSOPNUMBE char(21),  @O_vCMPNTSEQ int,  @O_vSOP_Line_Item_Sequence int,  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint  select  @O_TODAY = convert(varchar(10),getdate(), 101),  @O_DUMMYDT = convert(varchar(10), '1900-01-01', 100),  @oErrString = '',  @I_vNotify_Date = '',  @I_vNotify_Time = '',  @O_vCUSTNAME = '',  @I_vPRICELVL = '',  @I_vTAXSCHID = '',  @I_vTAXEXMT1 = '',  @I_vTAXEXMT2 = '',  @I_vTOTAL  = 0,  @O_vNOTEINDX  = 0,  @O_vCURRNIDX  = 0,  @I_vORIGPRETAXTOT  = 0,  @I_vORTAXAMT = 0,  @I_vORIGTOTAL = 0,  @LOCNCODE = '',  @iStatus = 0,  @iError = 0,  @iCustomState =  0,  @O_oErrorState = 0,  @iCustomErrString = '',  @Line_Seq_Exists = 0,  @RETTYPE = '',  @CUSTNMBR = '',  @HOLD = 0,  @INACTIVE = 0,  @NAME = '',  @ADRSCODE = '',  @CNTCPRSN = '',  @PYMTRMID = '',  @SLPRSNID = '',  @PHONE1 = '',  @PRBTADCD='',  @CURNCYID='',  @RATETPID='',  @O_vISMCTRX = 0,  @FUNLCURR = '',  @O_vRATECALC = 1,  @O_vMCTRXSTT = 0,  @O_vDECPLACS = 0,  @O_vVIEWMODE = 3,  @O_vDENXRATE = 0,  @O_vEXGTBLID = '',  @iGetNextNoteIdxErrState = 0,  @CMPANYID = 0,  @OFFID='',  @AuditLNITMSEQ = 0,  @FRMSTAT = '',  @AuditDesc = 'RMA Record Add/Update',  @UserID = 'eConnect',  @Commit_Status = '',  @Return_Status = '',  @Complete_Status = '',  @RETSTAT = '',  @O_iErrorState = 0,  @iValueExists = 0,  @Received_Status = '',  @Close_Status = '',  @Partial_Received_Status = '',  @ReadyToClose_Status = '',  @O_vSVC_RMA_Reason_Code_Desc = '',  @O_vReceived = 0,  @O_vRMA_Status = 0,  @SLSRATETPID = '',  @FINRATETPID = '',  @PURRATETPID = '',  @O_vRATEEXPR = -1,  @O_vDYSTINCR = -1,  @O_vRATEVARC = 0,  @O_vTRXDTDEF = -1,  @O_vRTCLCMTD = -1,  @O_vPRVDSLMT = 0,  @O_vDATELMTS = 0,  @O_vSRVRECTYPE = 0,  @O_vCALLNBR = '',  @O_vEQPLINE = 0,  @O_vLNITMSEQ = 0,  @O_vSOPTYPE = 0,  @O_vSOPNUMBE = '',  @O_vCMPNTSEQ = 0,  @O_vSOP_Line_Item_Sequence = 0,  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0  exec @iStatus = taFSRMAMasterPre  @I_vReturn_Record_Type output,  @I_vRETDOCID output,  @I_vRETORIG output,  @I_vRETREF output,  @I_vRETSTAT output,  @I_vRETTYPE output,  @I_vENTDTE output,  @I_vENTTME output,  @I_vETADTE output,  @I_vETATME output,  @I_vCommit_Date output,  @I_vCommit_Time output,  @I_vRETUDATE output,  @I_vReturn_Time output,  @I_vCOMPDTE output,  @I_vCOMPTME output,  @I_vUSERID output,  @I_vOFFID output,  @I_vRTRNNAME output,  @I_vRETADDR1 output,  @I_vRETADDR2 output,  @I_vRETADDR3 output,  @I_vRTRNCITY output,  @I_vSVC_Return_State output,  @I_vRTRNZIP output,  @I_vReturn_Country output,  @I_vLOCNCODE output,  @I_vCUSTNMBR output,  @I_vADRSCODE output,  @I_vCKHOLD output,  @I_vCUSTNAME output,  @I_vCONTACT output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIPCODE output,  @I_vCOUNTRY output,  @I_vNOTETXT output,  @I_vBill_of_Lading output,  @I_vSHIPMTHD output,  @I_vBill_To_Customer output,  @I_vSVC_Bill_To_Address_Code output,  @I_vUSERDEF1 output,  @I_vUSERDEF2 output,  @I_vUSRDEF03 output,  @I_vUSRDEF04 output,  @I_vUSRDEF05 output,  @I_vCSTPONBR output,  @I_vSVC_RMA_Reason_Code output,  @I_vSVC_RMA_From_Service output,  @I_vSVC_FO_ID output,  @I_vCURNCYID output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10035     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if( @I_vReturn_Record_Type is NULL or  @I_vRETDOCID is NULL or  @I_vCUSTNMBR is NULL or  @I_vADRSCODE is NULL ) begin  set @O_iErrorState = 10036    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if( @I_vRETDOCID = '' or  @I_vReturn_Record_Type = 0 or  @I_vCUSTNMBR = '' or  @I_vADRSCODE = '' ) begin  set @O_iErrorState = 10037    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vReturn_Record_Type < 0 or   @I_vRETORIG < 0  begin  set @O_iErrorState = 10038    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_vSRVRECTYPE < 0 or  @O_vEQPLINE < 0 or  @O_vLNITMSEQ < 0  begin  set @O_iErrorState = 10039    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_vSOPTYPE < 0 or  @O_vCMPNTSEQ < 0 or  @O_vSOP_Line_Item_Sequence < 0 begin  set @O_iErrorState = 10040    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vUpdateIfExists not in (0,1)) begin  set @O_iErrorState = 10087     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  if (@I_vReturn_Record_Type < 1) and (@I_vReturn_Record_Type > 2) begin  set @O_iErrorState = 10041    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select 1 from SVC05015 (nolock) where RETDOCID = @I_vRETDOCID and (MKDTOPST = 1 or CB_Packing_Slip = 1)) begin  set @O_iErrorState = 10042    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC35000 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID) begin  select @Line_Seq_Exists=1   set @O_iErrorState = 10043    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if exists (select 1 from SVC05000 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID) begin  select  @Line_Seq_Exists=1,  @FRMSTAT = isnull(RETSTAT,'')   from SVC05000 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID end  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)  begin  set @O_iErrorState = 10044    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@Line_Seq_Exists=1) begin  select  @O_vRMA_Status = case  when @O_vRMA_Status = 0 then isnull(RMA_Status, 0)  else @O_vRMA_Status  end,  @O_vReceived = case  when @O_vReceived = 0 then isnull(Received, 0)  else @O_vReceived  end,  @I_vRETORIG = case  when @I_vRETORIG is null then isnull(RETORIG, 1)  else @I_vRETORIG  end,  @I_vRETREF = case  when @I_vRETREF is null then isnull(RETREF, '')  else @I_vRETREF  end,  @I_vRETSTAT = case  when @I_vRETSTAT is null then isnull(RETSTAT, '')  else @I_vRETSTAT  end,  @I_vRETTYPE = case  when @I_vRETTYPE is null then isnull(RETTYPE, '')  else @I_vRETTYPE  end,  @I_vENTDTE = case  when @I_vENTDTE is null then isnull(ENTDTE, @O_TODAY)  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then isnull(ENTTME, convert(varchar(10), getdate(), 108))  else @I_vENTTME  end,  @I_vETADTE = case  when @I_vETADTE is null then isnull(ETADTE, @O_DUMMYDT)  else @I_vETADTE  end,  @I_vETATME = case  when @I_vETATME is null then isnull(ETATME, @O_DUMMYDT)  else @I_vETATME  end,  @I_vCommit_Date = case  when @I_vCommit_Date is null then isnull(Commit_Date, @O_DUMMYDT)  else @I_vCommit_Date  end,  @I_vCommit_Time = case  when @I_vCommit_Time is null then isnull(Commit_Time, @O_DUMMYDT)  else @I_vCommit_Time  end,  @I_vRETUDATE = case  when @I_vRETUDATE is null then isnull(RETUDATE, @O_DUMMYDT)  else @I_vRETUDATE  end,  @I_vReturn_Time = case  when @I_vReturn_Time is null then isnull(Return_Time, @O_DUMMYDT)  else @I_vReturn_Time  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then isnull(COMPDTE, @O_DUMMYDT)  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then isnull(COMPTME, @O_DUMMYDT)  else @I_vCOMPTME  end,  @I_vUSERID = case  when @I_vUSERID is null then isnull(USERID, CURRENT_USER)  else @I_vUSERID  end,  @I_vOFFID = case  when @I_vOFFID is null then isnull(OFFID, '')  else @I_vOFFID  end,  @I_vRTRNNAME = case  when @I_vRTRNNAME is null then isnull(RTRNNAME, '')  else @I_vRTRNNAME  end,  @I_vRETADDR1 = case  when @I_vRETADDR1 is null then isnull(RETADDR1, '')  else @I_vRETADDR1  end,  @I_vRETADDR2 = case  when @I_vRETADDR2 is null then isnull(RETADDR2, '')  else @I_vRETADDR2  end,  @I_vRETADDR3 = case  when @I_vRETADDR3 is null then isnull(RETADDR3, '')  else @I_vRETADDR3  end,  @I_vRTRNCITY = case  when @I_vRTRNCITY is null then isnull(RTRNCITY, '')  else @I_vRTRNCITY  end,  @I_vSVC_Return_State = case  when @I_vSVC_Return_State is null then isnull(SVC_Return_State, '')  else @I_vSVC_Return_State  end,  @I_vRTRNZIP = case  when @I_vRTRNZIP is null then isnull(RTRNZIP, '')  else @I_vRTRNZIP  end,  @I_vReturn_Country = case  when @I_vReturn_Country is null then isnull(Return_Country, '')  else @I_vReturn_Country  end,  @I_vLOCNCODE = case  when @I_vLOCNCODE is null then isnull(LOCNCODE, '')  else @I_vLOCNCODE  end,  @CUSTNMBR = isnull(CUSTNMBR, ''),  @I_vADRSCODE = case  when @I_vADRSCODE is null then isnull(ADRSCODE, '')  else @I_vADRSCODE  end,  @I_vCUSTNAME = case  when @I_vCUSTNAME is null then isnull(CUSTNAME, '')  else @I_vCUSTNAME  end,  @I_vCONTACT = case  when @I_vCONTACT is null then isnull(CONTACT, '')  else @I_vCONTACT  end,  @I_vADDRESS1 = case  when @I_vADDRESS1 is null then isnull(ADDRESS1, '')  else @I_vADDRESS1  end,  @I_vADDRESS2 = case  when @I_vADDRESS2 is null then isnull(ADDRESS2, '')  else @I_vADDRESS2  end,  @I_vADDRESS3 = case  when @I_vADDRESS3 is null then isnull(ADDRESS3, '')  else @I_vADDRESS3  end,  @I_vCITY = case  when @I_vCITY is null then isnull(CITY, '')  else @I_vCITY  end,  @I_vSTATE = case  when @I_vSTATE is null then isnull(STATE, '')  else @I_vSTATE  end,  @I_vZIPCODE = case  when @I_vZIPCODE is null then isnull(ZIPCODE, '')  else @I_vZIPCODE  end,  @I_vCOUNTRY = case  when @I_vCOUNTRY is null then isnull(COUNTRY, '')  else @I_vCOUNTRY  end,  @O_vNOTEINDX = case  when @O_vNOTEINDX is null then isnull(NOTEINDX, 0)  else @O_vNOTEINDX  end,  @O_vSRVRECTYPE = case  when @I_vRETORIG = 2 then isnull(SRVRECTYPE, 0)  else 0  end,  @O_vCALLNBR = case  when @I_vRETORIG = 2 then isnull(CALLNBR, @I_vRETREF)  else ''  end,  @O_vEQPLINE = case  when @I_vRETORIG = 2 then isnull(EQPLINE, 0)  else 0  end,  @O_vLNITMSEQ = case  when @I_vRETORIG = 2 then isnull(LNITMSEQ, 0)  else 0  end,  @I_vBill_of_Lading = case  when @I_vBill_of_Lading is null then isnull(Bill_of_Lading, '')  else @I_vBill_of_Lading  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null then isnull(SHIPMTHD, '')  else @I_vSHIPMTHD  end,  @O_vSOPTYPE = case  when @I_vRETORIG = 3 then isnull(SOPTYPE, 3)  else 0  end,  @O_vSOPNUMBE = case  when @I_vRETORIG = 3 then isnull(SOPNUMBE, @I_vRETREF)  else ''  end,  @O_vCMPNTSEQ = case  when @I_vRETORIG = 3 then isnull(CMPNTSEQ, 0)  else 0  end,  @O_vSOP_Line_Item_Sequence = case  when @I_vRETORIG = 3 then isnull(SOP_Line_Item_Sequence, 0)  else 0  end,  @I_vBill_To_Customer = case  when @I_vBill_To_Customer is null then isnull(Bill_To_Customer, '')  else @I_vBill_To_Customer  end,  @I_vSVC_Bill_To_Address_Code = case  when @I_vSVC_Bill_To_Address_Code is null then isnull(SVC_Bill_To_Address_Code, '')  else @I_vSVC_Bill_To_Address_Code  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then isnull(USERDEF1, '')  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then isnull(USERDEF2, '')  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case  when @I_vUSRDEF03 is null then isnull(USRDEF03, '')  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then isnull(USRDEF04, '')  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then isnull(USRDEF05, '')  else @I_vUSRDEF05  end,  @I_vCURNCYID = case  when @I_vCURNCYID is null then isnull(CURNCYID, '')  else @I_vCURNCYID  end,  @O_vCURRNIDX = case  when @O_vCURRNIDX is null then isnull(CURRNIDX, 0)  else @O_vCURRNIDX  end,  @O_vRATETPID = case  when @O_vRATETPID is null then isnull(RATETPID, '')  else @O_vRATETPID  end,  @O_vXCHGRATE = case  when @O_vXCHGRATE is null then isnull(XCHGRATE, 0)  else @O_vXCHGRATE  end,  @O_vEXCHDATE = case  when @O_vEXCHDATE is null then isnull(EXCHDATE, @O_DUMMYDT)  else @O_vEXCHDATE  end,  @O_vTIME1 = case  when @O_vTIME1 is null then isnull(TIME1, @O_DUMMYDT)  else @O_vTIME1  end,  @I_vCSTPONBR = case  when @I_vCSTPONBR is null then isnull(CSTPONBR, '')  else @I_vCSTPONBR  end,  @I_vSVC_RMA_Reason_Code = case  when @I_vSVC_RMA_Reason_Code is null then isnull(SVC_RMA_Reason_Code, '')  else @I_vSVC_RMA_Reason_Code  end,  @O_vSVC_RMA_Reason_Code_Desc = isnull(SVC_RMA_Reason_Code_Desc, ''),  @I_vSVC_RMA_From_Service = case  when @I_vSVC_RMA_From_Service is null then isnull(SVC_RMA_From_Service, 0)  else @I_vSVC_RMA_From_Service  end,  @I_vSVC_FO_ID = case  when @I_vSVC_FO_ID is null then isnull(SVC_FO_ID, '')  else @I_vSVC_FO_ID  end,  @O_vEXGTBLID = isnull(EXGTBLID, ''),  @O_vDECPLACS = isnull(DECPLACS, 0),  @O_vRATECALC = isnull(RATECALC, 1),  @O_vVIEWMODE = isnull(VIEWMODE, 3),  @O_vISMCTRX = isnull(ISMCTRX, 0),  @O_vDENXRATE = isnull(DENXRATE, 0),  @O_vMCTRXSTT = isnull(MCTRXSTT, 0)  from SVC05000 where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID end  if (@CUSTNMBR <> '') and (@I_vCUSTNMBR <> @CUSTNMBR) begin  set @O_iErrorState = 10086     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @OFFID=  case  when @I_vOFFID is null or @I_vOFFID = ''  then isnull(OFFID, '')  else @I_vOFFID  end  from SVC00950 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE  select  @RETTYPE =  case  when @RETTYPE = ''  then isnull(RETTYPE, '')  else @RETTYPE  end,  @I_vPRICELVL = isnull(PRCLEVEL, ''),  @Return_Status = isnull(RETSTATUS, ''),  @Commit_Status = isnull(SRLSTAT, ''),  @Complete_Status = isnull(Complete_Status, '')  from SVC00998 (nolock)  select @I_vPRICELVL =   case  when @I_vPRICELVL = ''  then isnull(PRCLEVEL,'')   else @I_vPRICELVL  end  from RM40101 (nolock)  if (@I_vRETTYPE is null or @I_vRETTYPE = '')  select @I_vRETTYPE = @RETTYPE  if @I_vRETTYPE <> '' begin  set @iValueExists = 0  select @iValueExists = 1,   @RETSTAT = case when @I_vRETSTAT is null or @I_vRETSTAT = '' then isnull(RETSTAT,'')  else @I_vRETSTAT  end,  @Received_Status = isnull(Received_Status, ''),  @Partial_Received_Status = isnull(SVC_Partial_Received_Sta, ''),  @ReadyToClose_Status = isnull(SVC_Ready_To_Close_Statu, ''),  @Close_Status = isnull(Close_Status, ''),  @LOCNCODE = isnull(LOCNCODE, '')  from SVC05501 (nolock) where RETTYPE = @I_vRETTYPE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9642     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select  @I_vRETORIG = case  when @I_vRETORIG is null then 1  else @I_vRETORIG  end,  @I_vRETREF = case  when @I_vRETREF is null then ''  else @I_vRETREF  end,  @I_vRETSTAT = case  when (@I_vRETSTAT is null or @I_vRETSTAT = '') and (@O_vRMA_Status = 9) then @ReadyToClose_Status  when (@I_vRETSTAT is null or @I_vRETSTAT = '') then ''  else @I_vRETSTAT  end,  @I_vRETTYPE = case  when @I_vRETTYPE is null then ''  else @I_vRETTYPE  end,  @I_vENTDTE = case  when @I_vENTDTE is null then @O_TODAY  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then convert(varchar(10), getdate(), 108)  else @I_vENTTME  end,  @I_vETADTE = case  when @I_vETADTE is null then @O_DUMMYDT  else @I_vETADTE  end,  @I_vETATME = case  when @I_vETATME is null then @O_DUMMYDT  else @I_vETATME  end,  @I_vCommit_Date = case  when @I_vCommit_Date is null then @O_DUMMYDT  else @I_vCommit_Date  end,  @I_vCommit_Time = case  when @I_vCommit_Time is null then @O_DUMMYDT  else @I_vCommit_Time  end,  @I_vRETUDATE = case  when @I_vRETUDATE is null then @O_DUMMYDT  else @I_vRETUDATE  end,  @I_vReturn_Time = case  when @I_vReturn_Time is null then @O_DUMMYDT  else @I_vReturn_Time  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then @O_DUMMYDT  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then @O_DUMMYDT  else @I_vCOMPTME  end,  @I_vUSERID = case  when @I_vUSERID is null then CURRENT_USER  else @I_vUSERID  end,  @I_vOFFID = case  when @I_vOFFID is null then ''  else @I_vOFFID  end,  @I_vRTRNNAME = case  when @I_vRTRNNAME is null then ''  else @I_vRTRNNAME  end,  @I_vRETADDR1 = case  when @I_vRETADDR1 is null then ''  else @I_vRETADDR1  end,  @I_vRETADDR2 = case  when @I_vRETADDR2 is null then ''  else @I_vRETADDR2  end,  @I_vRETADDR3 = case  when @I_vRETADDR3 is null then ''  else @I_vRETADDR3  end,  @I_vRTRNCITY = case  when @I_vRTRNCITY is null then ''  else @I_vRTRNCITY  end,  @I_vSVC_Return_State = case  when @I_vSVC_Return_State is null then ''  else @I_vSVC_Return_State  end,  @I_vRTRNZIP = case  when @I_vRTRNZIP is null then ''  else @I_vRTRNZIP  end,  @I_vReturn_Country = case  when @I_vReturn_Country is null then ''  else @I_vReturn_Country  end,  @I_vLOCNCODE = case  when @I_vLOCNCODE is null then ''  else @I_vLOCNCODE  end,  @I_vCUSTNMBR = case  when @I_vCUSTNMBR is null then ''  else @I_vCUSTNMBR  end,  @I_vADRSCODE = case  when @I_vADRSCODE is null then ''  else @I_vADRSCODE  end,  @I_vCUSTNAME = case  when @I_vCUSTNAME is null then ''  else @I_vCUSTNAME  end,  @I_vCONTACT = case  when @I_vCONTACT is null then ''  else @I_vCONTACT  end,  @I_vADDRESS1 = case  when @I_vADDRESS1 is null then ''  else @I_vADDRESS1  end,  @I_vADDRESS2 = case  when @I_vADDRESS2 is null then ''  else @I_vADDRESS2  end,  @I_vADDRESS3 = case  when @I_vADDRESS3 is null then ''  else @I_vADDRESS3  end,  @I_vCITY = case  when @I_vCITY is null then ''  else @I_vCITY  end,  @I_vSTATE = case  when @I_vSTATE is null then ''  else @I_vSTATE  end,  @I_vZIPCODE = case  when @I_vZIPCODE is null then ''  else @I_vZIPCODE  end,  @I_vCOUNTRY = case  when @I_vCOUNTRY is null then ''  else @I_vCOUNTRY  end,  @O_vNOTEINDX = case  when @O_vNOTEINDX is null then 0  else @O_vNOTEINDX  end,  @O_vSRVRECTYPE = case  when @O_vSRVRECTYPE <> 0 and @I_vRETORIG = 2 then @O_vSRVRECTYPE  else 0  end,  @O_vCALLNBR = case  when @I_vRETORIG = 2 then @I_vRETREF  else ''  end,  @O_vEQPLINE = case  when @O_vEQPLINE <> 0 then @O_vEQPLINE  else 0  end,  @O_vLNITMSEQ = case  when @O_vLNITMSEQ <> 0 then @O_vLNITMSEQ  else 0  end,  @I_vBill_of_Lading = case  when @I_vBill_of_Lading is null then ''  else @I_vBill_of_Lading  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null then ''  else @I_vSHIPMTHD  end,  @O_vSOPTYPE = case  when @O_vSOPTYPE <> 0 and @I_vRETORIG = 3 then @O_vSOPTYPE  when @I_vRETORIG = 3 then 3  else 0  end,  @O_vSOPNUMBE = case  when @O_vSOPNUMBE <> '' and @I_vRETORIG = 3 then @O_vSOPNUMBE  when @I_vRETORIG = 3 then @I_vRETREF  else ''  end,  @O_vCMPNTSEQ = case  when @O_vCMPNTSEQ <> 0 then @O_vCMPNTSEQ  else 0  end,  @O_vSOP_Line_Item_Sequence = case  when @O_vSOP_Line_Item_Sequence <> 0 then @O_vSOP_Line_Item_Sequence  else 0  end,  @I_vBill_To_Customer = case  when @I_vBill_To_Customer is null then ''  else @I_vBill_To_Customer  end,  @I_vSVC_Bill_To_Address_Code = case  when @I_vSVC_Bill_To_Address_Code is null then ''  else @I_vSVC_Bill_To_Address_Code  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then ''  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then ''  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case  when @I_vUSRDEF03 is null then ''  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then ''  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then ''  else @I_vUSRDEF05  end,  @I_vCURNCYID = case  when @I_vCURNCYID is null then ''  else @I_vCURNCYID  end,  @O_vRATETPID = case  when @O_vRATETPID is null then ''  else @O_vRATETPID  end,  @O_vXCHGRATE = case  when @O_vXCHGRATE is null then 0  else @O_vXCHGRATE  end,  @O_vTIME1 = case  when @O_vTIME1 is null then @O_DUMMYDT  else @O_vTIME1  end,  @O_vEXPNDATE = case  when @O_vEXPNDATE is null then @O_DUMMYDT  else @O_vEXPNDATE  end,  @I_vCSTPONBR = case  when @I_vCSTPONBR is null then ''  else @I_vCSTPONBR  end,  @I_vSVC_RMA_Reason_Code = case  when @I_vSVC_RMA_Reason_Code is null then ''  else @I_vSVC_RMA_Reason_Code  end,  @I_vSVC_RMA_From_Service = case  when @I_vSVC_RMA_From_Service is null then 0  else @I_vSVC_RMA_From_Service  end,  @I_vSVC_FO_ID = case  when @I_vSVC_FO_ID is null then ''  else @I_vSVC_FO_ID  end,  @O_vEXPNDATE = case   when @O_vEXPNDATE is null then @O_DUMMYDT  else @O_vEXPNDATE  end,   @O_vEXCHDATE = case   when @O_vEXCHDATE is null then @O_DUMMYDT  else @O_vEXCHDATE  end,  @O_vEXGTBDSC = case  when @O_vEXGTBDSC is null then ''  else @O_vEXGTBDSC  end,  @O_vEXTBLSRC = case  when @O_vEXTBLSRC is null then ''  else @O_vEXTBLSRC  end,  @O_vTIME1 = case  when @O_vTIME1 is null then @O_DUMMYDT  else @O_vTIME1  end  if @I_vCUSTNMBR <> '' begin  set @iValueExists = 0  select  @iValueExists = 1,  @HOLD=isnull(HOLD,0),  @INACTIVE=isnull(INACTIVE,0),  @PYMTRMID=isnull(PYMTRMID,''),  @NAME=isnull(CUSTNAME,''),  @ADRSCODE=isnull(ADRSCODE,''),  @SLPRSNID=isnull(SLPRSNID,''),  @I_vTAXEXMT1=isnull(TAXEXMT1,0),  @I_vTAXEXMT2=isnull(TAXEXMT2,''),  @PRBTADCD=isnull(PRBTADCD,''),  @CURNCYID=isnull(CURNCYID,''),  @RATETPID=isnull(RATETPID,'')  from RM00101 (nolock) where CUSTNMBR=@I_vCUSTNMBR   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10045    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCKHOLD = 0) and (@HOLD=1)  begin  set @O_iErrorState = 10046    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@INACTIVE=1)  begin   set @O_iErrorState = 10047    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCUSTNAME =   case  when @I_vCUSTNAME = '' then @NAME   else  @I_vCUSTNAME  end,  @I_vADRSCODE =   case  when @I_vADRSCODE = '' and @I_vADDRESS1 = '' and @I_vADDRESS2 = '' and @I_vADDRESS3 = '' and @I_vCITY = '' and @I_vSTATE = ''  and @I_vZIPCODE = '' and @I_vCOUNTRY = ''then @ADRSCODE   else  @I_vADRSCODE  end,  @I_vCURNCYID =   case  when @I_vCURNCYID = '' then @CURNCYID   else  @I_vCURNCYID  end,  @O_vRATETPID =   case  when @O_vRATETPID = '' then @RATETPID   else  @O_vRATETPID  end,  @I_vSVC_Bill_To_Address_Code = case   when @I_vBill_To_Customer = '' or @I_vSVC_Bill_To_Address_Code = '' then @PRBTADCD  else @I_vSVC_Bill_To_Address_Code  end,  @I_vBill_To_Customer = case   when @I_vBill_To_Customer = '' then @I_vCUSTNMBR  else @I_vBill_To_Customer  end end  if (@I_vADRSCODE <> '') begin  set @iValueExists = 0  if (@I_vADDRESS1 = '' and @I_vADDRESS2 = '' and @I_vCITY = '' and @I_vSTATE = ''  and @I_vZIPCODE = '' and @I_vCOUNTRY = '')  begin  select  @iValueExists = 1,  @I_vADDRESS1=isnull(ADDRESS1,''),  @I_vADDRESS2=isnull(ADDRESS2,''),  @I_vADDRESS3=isnull(ADDRESS3,''),  @I_vCOUNTRY=isnull(COUNTRY,''),  @I_vCITY=isnull(CITY,''),  @I_vSTATE=isnull(STATE,''),  @I_vZIPCODE=isnull(ZIP,''),  @I_vTAXSCHID=isnull(TAXSCHID,''),  @CNTCPRSN=isnull(CNTCPRSN,0),  @PHONE1=isnull(PHONE1,'')  from RM00102 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10048    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCONTACT =   case  when @I_vCONTACT = '' then @CNTCPRSN   else  @I_vCONTACT  end  end  else  begin  select  @iValueExists = 1,  @I_vTAXSCHID=isnull(TAXSCHID,''),  @CNTCPRSN=isnull(CNTCPRSN,0),  @PHONE1=isnull(PHONE1,'')  from RM00102 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 9763    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @I_vCONTACT =   case  when @I_vCONTACT = '' then @CNTCPRSN   else  @I_vCONTACT  end   end end  if @I_vBill_To_Customer <> '' AND @I_vBill_To_Customer <> @I_vCUSTNMBR begin  set @iValueExists = 0  select  @iValueExists=1,  @HOLD=isnull(HOLD,0),  @INACTIVE=isnull(INACTIVE,0),  @PYMTRMID=isnull(PYMTRMID,''),  @HOLD=isnull(HOLD,0),  @PRBTADCD=isnull(PRBTADCD,''),  @CURNCYID=isnull(CURNCYID,''),  @RATETPID=isnull(RATETPID,'')  from RM00101 (nolock) where CUSTNMBR = @I_vBill_To_Customer   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10088     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCKHOLD = 0) and (@HOLD=1)  begin  set @O_iErrorState = 10089     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@INACTIVE=1)  begin   set @O_iErrorState = 10090     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vSVC_Bill_To_Address_Code <> '')   and ((@I_vCUSTNMBR = @I_vBill_To_Customer and @I_vADRSCODE <> @I_vSVC_Bill_To_Address_Code)  or (@I_vCUSTNMBR <> @I_vBill_To_Customer and @I_vADRSCODE <> @I_vSVC_Bill_To_Address_Code)) begin  set @iValueExists = 0  if not exists(select 1 from RM00102 (nolock) where CUSTNMBR = @I_vBill_To_Customer and ADRSCODE = @I_vSVC_Bill_To_Address_Code)  begin  set @O_iErrorState = 10091     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vRETORIG = 2) begin  select @O_vSOPTYPE = 0,  @O_vSOPNUMBE = '',  @O_vCALLNBR = case  when @O_vCALLNBR = '' and @I_vRETREF <> '' then @I_vRETREF  else @O_vCALLNBR  end,  @I_vRETREF = case  when @I_vRETREF = '' and @O_vCALLNBR <> '' then @O_vCALLNBR  else @I_vRETREF  end end else if (@I_vRETORIG = 3) begin  select @O_vCALLNBR = '',  @O_vSRVRECTYPE = 0,  @O_vEQPLINE = 0,  @O_vLNITMSEQ = 0,  @O_vSOPNUMBE = case  when @O_vSOPNUMBE = '' and @I_vRETREF <> '' then @I_vRETREF  else @O_vSOPNUMBE  end,  @I_vRETREF = case  when @I_vRETREF = '' and @O_vSOPNUMBE <> '' then @O_vSOPNUMBE  else @O_vSOPNUMBE  end end else begin  if (@I_vRETREF <> '' or @I_vRETREF is not null)    Begin  select @I_vRETREF = @I_vRETREF,  @O_vCALLNBR = '',  @O_vSRVRECTYPE = 0,  @O_vSOPTYPE = 0,  @O_vSOPNUMBE = '',  @I_vRETORIG = 1  end  else  select @I_vRETREF = '',  @O_vCALLNBR = '',  @O_vSRVRECTYPE = 0,  @O_vSOPTYPE = 0,  @O_vSOPNUMBE = '',  @I_vRETORIG = 1 end   if (@O_vSRVRECTYPE = 0 and @O_vCALLNBR <> '') and @I_vRETORIG = 2 begin  select @O_vSRVRECTYPE = isnull(SRVRECTYPE, 0) from SVC00200 where CALLNBR = @O_vCALLNBR  select @O_vSRVRECTYPE = case  when @O_vSRVRECTYPE = 0 then isnull(SRVRECTYPE, 0)  else @O_vSRVRECTYPE  end  from SVC30200 where CALLNBR = @O_vCALLNBR   select @O_vSRVRECTYPE = case  when @O_vSRVRECTYPE = 0 then 2  else @O_vSRVRECTYPE  end end  if (@I_vRETREF <> '') and (@I_vRETORIG = 2)  begin  select @CUSTNMBR = '', @iValueExists = 0   select @iValueExists = 1, @CUSTNMBR = CUSTNMBR from SVC00200 where CALLNBR = @I_vRETREF and SRVRECTYPE = @O_vSRVRECTYPE  select @iValueExists = 1, @CUSTNMBR = CUSTNMBR from SVC30200 where CALLNBR = @I_vRETREF and SRVRECTYPE = @O_vSRVRECTYPE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10062     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@CUSTNMBR <> @I_vCUSTNMBR)  begin  set @O_iErrorState = 10067     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@O_vSRVRECTYPE > 0) and (@O_vEQPLINE > 0 and @O_vLNITMSEQ > 0)  begin  if not exists(select 1 from SVC00203 where CALLNBR = @I_vRETREF and SRVRECTYPE = @O_vSRVRECTYPE and EQPLINE = @O_vEQPLINE and LNITMSEQ = @O_vLNITMSEQ)  and not exists(select 1 from SVC30203 where CALLNBR = @I_vRETREF and SRVRECTYPE = @O_vSRVRECTYPE and EQPLINE = @O_vEQPLINE and LNITMSEQ = @O_vLNITMSEQ)  begin  set @O_iErrorState = 10068     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else if (@I_vRETREF <> '') and (@I_vRETORIG = 3) begin  select @CUSTNMBR = '', @iValueExists = 0   select @iValueExists = 1, @CUSTNMBR = CUSTNMBR from SOP10100 where SOPNUMBE = @I_vRETREF and SOPTYPE = @O_vSOPTYPE  select @iValueExists = 1, @CUSTNMBR = CUSTNMBR from SOP30200 where SOPNUMBE = @I_vRETREF and SOPTYPE = @O_vSOPTYPE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10083     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@CUSTNMBR <> @I_vCUSTNMBR)  begin  set @O_iErrorState = 10084     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@O_vSOPTYPE > 0) and (@O_vCMPNTSEQ > 0 and @O_vSOP_Line_Item_Sequence > 0)  begin  if not exists(select 1 from SOP10200 where SOPNUMBE = @I_vRETREF and SOPTYPE = @O_vSOPTYPE and CMPNTSEQ = @O_vCMPNTSEQ and LNITMSEQ = @O_vSOP_Line_Item_Sequence)  and not exists(select 1 from SOP30300 where SOPNUMBE = @I_vRETREF and SOPTYPE = @O_vSOPTYPE and CMPNTSEQ = @O_vCMPNTSEQ and LNITMSEQ = @O_vSOP_Line_Item_Sequence)  begin  set @O_iErrorState = 10085     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vENTDTE = '')  select @I_vENTDTE = @O_TODAY  if (@I_vENTTME = '')  select @I_vENTTME = getdate()- convert(char(12),getdate(),12)  if not (datepart(day,@I_vENTTME) = 1 and datepart(month,@I_vENTTME) = 1 and datepart(year,@I_vENTTME) = 1900) begin  set @O_iErrorState = 10049     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if not (datepart(hour,@I_vENTDTE) = 0 and datepart(minute,@I_vENTDTE) = 0 and datepart(second,@I_vENTDTE) = 0   and datepart(millisecond,@I_vENTDTE) = 0) begin  set @O_iErrorState = 10050      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vETADTE <> '') begin  if not (datepart(day,@I_vETATME) = 1 and datepart(month,@I_vETATME) = 1 and datepart(year,@I_vETATME) = 1900)  begin  set @O_iErrorState = 10051     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vETADTE) = 0 and datepart(minute,@I_vETADTE) = 0 and datepart(second,@I_vETADTE) = 0   and datepart(millisecond,@I_vETADTE) = 0)  begin  set @O_iErrorState = 10052      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vETADTE < @I_vENTDTE)  begin  set @O_iErrorState = 10053      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vETADTE <= @I_vENTDTE) and (@I_vETATME < @I_vENTTME) )  begin  set @O_iErrorState = 10054      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @I_vETADTE=@I_vENTDTE, @I_vETATME=@I_vENTTME end  if (@I_vCommit_Date <> '') begin   if not (datepart(day,@I_vCommit_Time) = 1 and datepart(month,@I_vCommit_Time) = 1 and datepart(year,@I_vCommit_Time) = 1900)  begin  set @O_iErrorState = 10055      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vCommit_Date) = 0 and datepart(minute,@I_vCommit_Date) = 0 and datepart(second,@I_vCommit_Date) = 0   and datepart(millisecond,@I_vCommit_Date) = 0)  begin  set @O_iErrorState = 10056      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCommit_Date < @I_vENTDTE)  begin  set @O_iErrorState = 10057      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vCommit_Date <= @I_vETADTE) and (@I_vCommit_Time < @I_vETATME) )  begin  set @O_iErrorState = 10058      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @RETSTAT = @Commit_Status end  if (@I_vRETUDATE <> '') begin  if not (datepart(day,@I_vReturn_Time) = 1 and datepart(month,@I_vReturn_Time) = 1 and datepart(year,@I_vReturn_Time) = 1900)  begin  set @O_iErrorState = 10059      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vRETUDATE) = 0 and datepart(minute,@I_vRETUDATE) = 0 and datepart(second,@I_vRETUDATE) = 0   and datepart(millisecond,@I_vRETUDATE) = 0)  begin  set @O_iErrorState = 10060      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vRETUDATE <= @I_vENTDTE) and (@I_vReturn_Time < @I_vENTTME) )  begin  set @O_iErrorState = 10061       exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @RETSTAT = @Return_Status end  if (@I_vCOMPDTE <> '') begin  if not (datepart(day,@I_vCOMPTME) = 1 and datepart(month,@I_vCOMPTME) = 1 and datepart(year,@I_vCOMPTME) = 1900)  begin  set @O_iErrorState = 10063      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   if not (datepart(hour,@I_vCOMPDTE) = 0 and datepart(minute,@I_vCOMPDTE) = 0 and datepart(second,@I_vCOMPDTE) = 0   and datepart(millisecond,@I_vCOMPDTE) = 0)  begin  set @O_iErrorState = 10064      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCOMPDTE < @I_vRETUDATE)  begin  set @O_iErrorState = 10065      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vCOMPDTE <= @I_vRETUDATE) and (@I_vCOMPTME < @I_vReturn_Time) )  begin  set @O_iErrorState = 10066      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @RETSTAT = @Complete_Status end  set @I_vRETSTAT = case   when (@I_vRETSTAT = '') and (@O_vRMA_Status = 9) then @ReadyToClose_Status  when (@I_vRETSTAT = '') and (@O_vRMA_Status = 7 or @O_vRMA_Status = 8) and @O_vReceived = 1 then @Received_Status   when (@I_vRETSTAT = '') and (@O_vRMA_Status = 7 or @O_vRMA_Status = 8) then @Partial_Received_Status  when (@I_vRETSTAT = '') and (@O_vRMA_Status = 10) then @Close_Status   when (@I_vRETSTAT = '') then @RETSTAT  else @I_vRETSTAT  end  if @I_vRETSTAT <> '' begin  if not exists(select 1 from SVC05500 (nolock) where RETSTAT = @I_vRETSTAT)  begin  set @O_iErrorState = 10069     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vOFFID = '')  set @I_vOFFID = @OFFID  if (@I_vOFFID <> '') begin  if (not exists(select 1 from SVC00902 (nolock) where OFFID = @I_vOFFID))  begin  set @O_iErrorState = 10070     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @I_vLOCNCODE = case  when @I_vLOCNCODE = '' then @LOCNCODE  else @I_vLOCNCODE  end  if (@I_vLOCNCODE <> '') begin  set @iValueExists = 0  select @iValueExists = 1,   @I_vRTRNNAME = case  when @I_vRTRNNAME = '' then isnull(LOCNDSCR, '')   else @I_vRTRNNAME  end,  @I_vRETADDR1 = case  when @I_vRETADDR1 = '' then isnull(ADDRESS1, '')  else @I_vRETADDR1  end,  @I_vRETADDR2 = case  when @I_vRETADDR2 = '' then isnull(ADDRESS2, '')  else @I_vRETADDR2  end,  @I_vRETADDR3 = case  when @I_vRETADDR3 = '' then isnull(ADDRESS3, '')  else @I_vRETADDR3  end,  @I_vRTRNCITY = case  when @I_vRTRNCITY = '' then isnull(CITY, '')  else @I_vRTRNCITY  end,   @I_vSVC_Return_State = case  when @I_vSVC_Return_State = '' then isnull(STATE, '')  else @I_vSVC_Return_State  end,  @I_vRTRNZIP = case  when @I_vRTRNZIP = '' then isnull(ZIPCODE, '')  else @I_vRTRNZIP  end,  @I_vReturn_Country = case  when @I_vReturn_Country = '' then isnull(COUNTRY, '')  else @I_vReturn_Country  end  from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10071    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end end  if (@I_vSVC_RMA_Reason_Code <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @O_vSVC_RMA_Reason_Code_Desc = isnull(SVC_RMA_Reason_Code_Desc, @O_vSVC_RMA_Reason_Code_Desc)   from SVC05502 (nolock) where SVC_RMA_Reason_Code = @I_vSVC_RMA_Reason_Code  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10072     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @AuditLNITMSEQ = count(RETDOCID) + 1 from SVC05020 (nolock) where RETDOCID = @I_vRETDOCID  if (@Line_Seq_Exists=0) begin  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @O_mNoteIndex   = @O_vNOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,   @oErrString,  @oErrString output,  @O_oErrorState output  end  set @O_iErrorState = 10073   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @O_vNOTEINDX = isnull(NOTEINDX,0) from SVC05000 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID end  if (@I_vCURNCYID <> '') begin  if not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID)  begin  set @O_iErrorState = 10074     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @FUNLCURR = FUNLCURR, @SLSRATETPID = isnull(DEFSLSTP, ''), @FINRATETPID = isnull(DEFFINTP, ''), @PURRATETPID = isnull(DEFPURTP, '')  from MC40000 (nolock)  select @O_vRATETPID = case  when @O_vRATETPID = '' and @SLSRATETPID <> '' then @SLSRATETPID   when @O_vRATETPID = '' and @FINRATETPID <> '' then @FINRATETPID  when @O_vRATETPID = '' then @RATETPID  else @O_vRATETPID  end  if (@O_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @O_vRATETPID))  begin  set @O_iErrorState = 10075     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @O_vDECPLACS = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  select  @I_vORIGTOTAL=@I_vTOTAL      if (@I_vCURNCYID = '') and (@O_vCURRNIDX = 0) begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @O_vCURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end else if (@I_vCURNCYID = '') and (@O_vCURRNIDX <> 0) begin  select @I_vCURNCYID = isnull(CURNCYID,'') from DYNAMICS..MC40200 (nolock) where CURRNIDX = @O_vCURRNIDX end else begin  select @O_vCURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if ((@O_vCURRNIDX = 0) or (@I_vCURNCYID = '')) begin  set @O_iErrorState = 10076      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if  (@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR) begin   select @O_vISMCTRX = 1,@O_vVIEWMODE=4   if (@O_vEXCHDATE is null or @O_vEXCHDATE = '' or @O_vEXCHDATE = @O_DUMMYDT)  begin  select top 1 @O_vEXCHDATE = EXCHDATE from DYNAMICS..MC00100 (nolock)  where EXGTBLID = (select top 1 EXGTBLID from MC40301 where CURNCYID = @I_vCURNCYID AND RATETPID = @O_vRATETPID)  AND EXCHDATE <= @I_vENTDTE  order by EXCHDATE + TIME1 desc  end   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCUSTNMBR,  @I_vDOCDATE  = @I_vENTDTE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @O_vEXCHDATE,  @I_vEXGTBDSC = @O_vEXGTBDSC,  @I_vEXTBLSRC = @O_vEXTBLSRC,  @I_vRATEEXPR = @O_vRATEEXPR output,  @I_vDYSTINCR = @O_vDYSTINCR output,  @I_vRATEVARC = @O_vRATEVARC,  @I_vTRXDTDEF = @O_vTRXDTDEF,  @I_vPRVDSLMT = @O_vPRVDSLMT,  @I_vDATELMTS = @O_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @O_vTIME1 output,  @I_vXCHGRATE = @O_vXCHGRATE output,  @I_vEXPNDATE = @O_vEXPNDATE output,  @I_vRATETPID = @O_vRATETPID output,  @I_vRTCLCMTD = @O_vRTCLCMTD output,  @I_vEXGTBLID = @O_vEXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   set @O_iErrorState = 10077   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  else begin  select @O_vISMCTRX = 0, @O_vRATEEXPR = 0, @O_vDYSTINCR = 0, @O_vRTCLCMTD = 0, @O_vVIEWMODE=3 end   if ( @O_vISMCTRX = 1) begin  if @O_vXCHGRATE = 0   begin  set @O_iErrorState = 10078     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @O_vRTCLCMTD = 0     begin  select @I_vTOTAL    = round(@I_vTOTAL * @O_vXCHGRATE, @O_vDECPLACS)  end  else if @O_vRTCLCMTD = 1    begin  select @I_vTOTAL    = round(@I_vTOTAL / @O_vXCHGRATE, @O_vDECPLACS)  end end  if (@oErrString <> '')  return (@O_iErrorState)  if (@Line_Seq_Exists=0) begin  insert into SVC05000(   Return_Record_Type,  RETDOCID,  RMA_Status,  Received,  RETORIG,  RETREF,  RETSTAT,  RETTYPE,  ENTDTE,  ENTTME,  ETADTE,  ETATME,  Commit_Date,  Commit_Time,  RETUDATE,  Return_Time,  COMPDTE,  COMPTME,  USERID,  OFFID,  RTRNNAME,  RETADDR1,  RETADDR2,  RETADDR3,  RTRNCITY,  SVC_Return_State,  RTRNZIP,  Return_Country,  LOCNCODE,  CUSTNMBR,  ADRSCODE,  CUSTNAME,  CONTACT,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  COUNTRY,  NOTEINDX,  SRVRECTYPE,  CALLNBR,  EQPLINE,  LNITMSEQ,  Bill_of_Lading,  SHIPMTHD,  SOPTYPE,  SOPNUMBE,  CMPNTSEQ,  SOP_Line_Item_Sequence,  Bill_To_Customer,  SVC_Bill_To_Address_Code,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  CURNCYID,  CURRNIDX,  RATETPID,  XCHGRATE,  EXCHDATE,  TIME1,  EXPNDATE,  CSTPONBR,  SVC_RMA_Reason_Code,  SVC_RMA_Reason_Code_Desc,  SVC_RMA_From_Service,  SVC_FO_ID,  EXGTBLID,  DECPLACS,  RATECALC,  VIEWMODE,  ISMCTRX,  DENXRATE,  MCTRXSTT  )  select  @I_vReturn_Record_Type,  @I_vRETDOCID,  @O_vRMA_Status,  @O_vReceived,  @I_vRETORIG,  @I_vRETREF,  @I_vRETSTAT,  @I_vRETTYPE,  @I_vENTDTE,  @I_vENTTME,  @I_vETADTE,  @I_vETATME,  @I_vCommit_Date,  @I_vCommit_Time,  @I_vRETUDATE,  @I_vReturn_Time,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vUSERID,  @I_vOFFID,  @I_vRTRNNAME,  @I_vRETADDR1,  @I_vRETADDR2,  @I_vRETADDR3,  @I_vRTRNCITY,  @I_vSVC_Return_State,  @I_vRTRNZIP,  @I_vReturn_Country,  @I_vLOCNCODE,  @I_vCUSTNMBR,  @I_vADRSCODE,  @I_vCUSTNAME,  @I_vCONTACT,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCOUNTRY,  @O_vNOTEINDX,  @O_vSRVRECTYPE,  @O_vCALLNBR,  @O_vEQPLINE,  @O_vLNITMSEQ,  @I_vBill_of_Lading,  @I_vSHIPMTHD,  @O_vSOPTYPE,  @O_vSOPNUMBE,  @O_vCMPNTSEQ,  @O_vSOP_Line_Item_Sequence,  @I_vBill_To_Customer,  @I_vSVC_Bill_To_Address_Code,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vCURNCYID,  @O_vCURRNIDX,  @O_vRATETPID,  @O_vXCHGRATE,  @O_vEXCHDATE,  @O_vTIME1,  @O_vEXPNDATE,  @I_vCSTPONBR,  @I_vSVC_RMA_Reason_Code,  @O_vSVC_RMA_Reason_Code_Desc,  @I_vSVC_RMA_From_Service,  @I_vSVC_FO_ID,  @O_vEXGTBLID,  @O_vDECPLACS,  @O_vRATECALC,  @O_vVIEWMODE,  @O_vISMCTRX,  @O_vDENXRATE,  @O_vMCTRXSTT   if @@error <> 0  begin  set @O_iErrorState = 10079    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC05020  (RETDOCID,  LNSEQNBR,  LNITMSEQ,  SVCFRMSTAT,  SVCTOSTAT,  DSCRPTION,  USERID,  CREATDDT,  CREATETIME)  select  @I_vRETDOCID,  0,  @AuditLNITMSEQ,  @FRMSTAT,  @I_vRETSTAT,  @AuditDesc,  @UserID,  convert(varchar(12),getdate(),101),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  set @O_iErrorState = 10331    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end else begin  if (@I_vUpdateIfExists > 0)  begin  update SVC05000 set Return_Record_Type = @I_vReturn_Record_Type,  RETDOCID = @I_vRETDOCID,  RMA_Status = @O_vRMA_Status,  Received = @O_vReceived,  RETORIG = @I_vRETORIG,  RETREF = @I_vRETREF,  RETSTAT = @I_vRETSTAT,  RETTYPE = @I_vRETTYPE,  ENTDTE = @I_vENTDTE,  ENTTME = @I_vENTTME,  ETADTE = @I_vETADTE,  ETATME = @I_vETATME,  Commit_Date = @I_vCommit_Date,  Commit_Time = @I_vCommit_Time,  RETUDATE = @I_vRETUDATE,  Return_Time = @I_vReturn_Time,  COMPDTE = @I_vCOMPDTE,  COMPTME = @I_vCOMPTME,  USERID = @I_vUSERID,  OFFID = @I_vOFFID,  RTRNNAME = @I_vRTRNNAME,  RETADDR1 = @I_vRETADDR1,  RETADDR2 = @I_vRETADDR2,  RETADDR3 = @I_vRETADDR3,  RTRNCITY = @I_vRTRNCITY,  SVC_Return_State = @I_vSVC_Return_State,  RTRNZIP = @I_vRTRNZIP,  Return_Country = @I_vReturn_Country,  LOCNCODE = @I_vLOCNCODE,  CUSTNMBR = @I_vCUSTNMBR,  ADRSCODE = @I_vADRSCODE,  CUSTNAME = @I_vCUSTNAME,  CONTACT = @I_vCONTACT,  ADDRESS1 = @I_vADDRESS1,  ADDRESS2 = @I_vADDRESS2,  ADDRESS3 = @I_vADDRESS3,  CITY = @I_vCITY,  STATE = @I_vSTATE,  ZIPCODE = @I_vZIPCODE,  COUNTRY = @I_vCOUNTRY,  NOTEINDX = @O_vNOTEINDX,  SRVRECTYPE = @O_vSRVRECTYPE,  CALLNBR = @O_vCALLNBR,  EQPLINE = @O_vEQPLINE,  LNITMSEQ = @O_vLNITMSEQ,  Bill_of_Lading = @I_vBill_of_Lading,  SHIPMTHD = @I_vSHIPMTHD,  SOPTYPE = @O_vSOPTYPE,  SOPNUMBE = @O_vSOPNUMBE,  CMPNTSEQ = @O_vCMPNTSEQ,  SOP_Line_Item_Sequence = @O_vSOP_Line_Item_Sequence,  Bill_To_Customer = @I_vBill_To_Customer,  SVC_Bill_To_Address_Code = @I_vSVC_Bill_To_Address_Code,  USERDEF1 = @I_vUSERDEF1,  USERDEF2 = @I_vUSERDEF2,  USRDEF03 = @I_vUSRDEF03,  USRDEF04 = @I_vUSRDEF04,  USRDEF05 = @I_vUSRDEF05,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @O_vCURRNIDX,  RATETPID = @O_vRATETPID,  XCHGRATE = @O_vXCHGRATE,  EXCHDATE = @O_vEXCHDATE,  TIME1 = @O_vTIME1,  EXPNDATE = @O_vEXPNDATE,  CSTPONBR = @I_vCSTPONBR,  SVC_RMA_Reason_Code = @I_vSVC_RMA_Reason_Code,  SVC_RMA_Reason_Code_Desc = @O_vSVC_RMA_Reason_Code_Desc,  SVC_RMA_From_Service = @I_vSVC_RMA_From_Service,  SVC_FO_ID = @I_vSVC_FO_ID,  EXGTBLID = @O_vEXGTBLID,  DECPLACS = @O_vDECPLACS,  RATECALC = @O_vRATECALC,  VIEWMODE = @O_vVIEWMODE,  ISMCTRX = @O_vISMCTRX,  DENXRATE = @O_vDENXRATE,  MCTRXSTT = @O_vMCTRXSTT  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID  if (@@error <> 0)  begin  set @O_iErrorState = 10081    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC05020  (RETDOCID,  LNSEQNBR,  LNITMSEQ,  SVCFRMSTAT,  SVCTOSTAT,  DSCRPTION,  USERID,  CREATDDT,  CREATETIME)  select  @I_vRETDOCID,  0,  @AuditLNITMSEQ,  @FRMSTAT,  @I_vRETSTAT,  @AuditDesc,  @UserID,  convert(varchar(12),getdate(),101),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  set @O_iErrorState = 10080    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vNOTETXT is NULL)  select @I_vNOTETXT = convert(varchar(2000),isnull(TXTFIELD,''))  from SY03900 where NOTEINDX = @O_vNOTEINDX  if (@I_vNOTETXT <> '') and (@O_vNOTEINDX > 0) begin  if exists(select 1 from SY03900 where NOTEINDX = @O_vNOTEINDX)  update SY03900 set TXTFIELD = @I_vNOTETXT,   DATE1 = @O_TODAY,   TIME1 = convert(char(12), getdate(), 108)   where NOTEINDX = @O_vNOTEINDX  else  insert into SY03900 (NOTEINDX,   DATE1,   TIME1,   TXTFIELD)   select @O_vNOTEINDX,   @O_TODAY,   convert(char(12), getdate(), 108),   @I_vNOTETXT end  exec @iStatus = taFSRMAMasterPost  @I_vReturn_Record_Type,  @I_vRETDOCID,  @I_vRETORIG,  @I_vRETREF,  @I_vRETSTAT,  @I_vRETTYPE,  @I_vENTDTE,  @I_vENTTME,  @I_vETADTE,  @I_vETATME,  @I_vCommit_Date,  @I_vCommit_Time,  @I_vRETUDATE,  @I_vReturn_Time,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vUSERID,  @I_vOFFID,  @I_vRTRNNAME,  @I_vRETADDR1,  @I_vRETADDR2,  @I_vRETADDR3,  @I_vRTRNCITY,  @I_vSVC_Return_State,  @I_vRTRNZIP,  @I_vReturn_Country,  @I_vLOCNCODE,  @I_vCUSTNMBR,  @I_vADRSCODE,  @I_vCKHOLD,  @I_vCUSTNAME,  @I_vCONTACT,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCOUNTRY,  @I_vNOTETXT,  @I_vBill_of_Lading,  @I_vSHIPMTHD,  @I_vBill_To_Customer,  @I_vSVC_Bill_To_Address_Code,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vCSTPONBR,  @I_vSVC_RMA_Reason_Code,  @I_vSVC_RMA_From_Service,  @I_vSVC_FO_ID,  @I_vCURNCYID,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10082    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taFSRMAMaster] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmReconcile] @I_cTableName                   char(40)        = NULL, @I_tUseVendorRange              tinyint  = NULL, @I_sWhichVendorRange     smallint        = NULL, @I_tPrintReport          tinyint  = NULL, @I_tUpdateVendorSUM             tinyint  = NULL, @I_tFunctionalDecimalPlaces tinyint  = NULL, @I_cStartVendorID               char(15)        = NULL, @I_cEndVendorID          char(15)        = NULL, @I_cStartVendorName             char(65)        = NULL, @I_cEndVendorName               char(65)        = NULL, @I_cStartClassID                char(15)        = NULL, @I_cEndClassID                  char(15)        = NULL, @I_cStartUserDefined     char(15)        = NULL, @I_cEndUserDefined              char(15)        = NULL, @I_cStartPaymentPriority        char(3)  = NULL, @I_cEndPaymentPriority   char(3)  = NULL, @O_iErrorState                  int             = NULL output as  declare  @cVendorID              char(15),  @nCurrentBalance        numeric(19,5),  @nCurrentBalanceINV numeric(19,5),  @nCurrentBalancePAY numeric(19,5),  @nUnpaidFinanceCharge   numeric(19,5),  @nUnappliedPayments     numeric(19,5),  @nOnOrderAmount         numeric(19,5),  @nPrepaymentAmount numeric(19,5),  @nCurrentTrxAmount      numeric(19,5),  @nUnpostedApplies       numeric(19,5),  @sFetchStatus           smallint,  @tLoopControl           tinyint,  @iStatus                int,  @iError                 int  set nocount on  select  @iStatus = 0,  @O_iErrorState = 0  create table #ReportTEMP(  VendorID                char(15)        not null,  VendorName char(65) not null,   OldCurBal               numeric(19,5)   not null,   OldUnpdFinChar          numeric(19,5)   not null,   OldUnappldPay           numeric(19,5)   not null,   OldOnOrdrAmt            numeric(19,5)   not null,  OldPrepaymentAmt numeric(19,5) not null,  CurBal                  numeric(19,5)   not null,   UnpdFinChar             numeric(19,5)   not null,   UnappldPay              numeric(19,5)   not null,   OnOrdrAmt               numeric(19,5)   not null,  PrepaymentAmt numeric(18,5) not null )  create table #VendorTEMP(  VendorID                char(15)        not null,  CurBal                  numeric(19,5)   not null,   UnpdFinChar             numeric(19,5)   not null,   UnappldPay              numeric(19,5)   not null,   OnOrdrAmt               numeric(19,5)   not null,  PrepaymentAmt numeric(18,5) not null )  create table #PMVendorMSTR(  VendorID        char(15)        not null )  while @tLoopControl is NULL begin  select @tLoopControl = 1   if      @I_cTableName                   is NULL or  @I_tUseVendorRange              is NULL or  @I_sWhichVendorRange     is NULL or  @I_tPrintReport          is NULL or  @I_tUpdateVendorSUM             is NULL or  @I_tFunctionalDecimalPlaces is NULL or  @I_cStartVendorID               is NULL or  @I_cEndVendorID          is NULL or  @I_cStartVendorName             is NULL or  @I_cEndVendorName               is NULL or  @I_cStartClassID                is NULL or  @I_cEndClassID                  is NULL or  @I_cStartUserDefined     is NULL or  @I_cEndUserDefined              is NULL or  @I_cStartPaymentPriority        is NULL or  @I_cEndPaymentPriority   is NULL  begin  select @O_iErrorState = 20827  break  end    if @I_tUseVendorRange = 0   declare  VendorCursor   cursor for select  VENDORID  from  PM00200   else if @I_sWhichVendorRange = 1  declare  VendorCursor   cursor for select  VENDORID  from  PM00200  where  VENDORID >= @I_cStartVendorID  and     VENDORID <= @I_cEndVendorID   else if @I_sWhichVendorRange = 2  declare  VendorCursor   cursor for select  VENDORID  from  PM00200  where  VENDNAME >= @I_cStartVendorName  and VENDNAME <= @I_cEndVendorName   else if @I_sWhichVendorRange = 3  declare  VendorCursor   cursor for select  VENDORID  from  PM00200  where  VNDCLSID >= @I_cStartClassID  and VNDCLSID <= @I_cEndClassID   else if @I_sWhichVendorRange = 4  declare  VendorCursor   cursor for select  VENDORID  from  PM00200  where  USERDEF1 >= @I_cStartUserDefined  and USERDEF1 <= @I_cEndUserDefined   else if @I_sWhichVendorRange = 5  declare  VendorCursor   cursor for select  VENDORID  from  PM00200  where  PYMNTPRI >= @I_cStartPaymentPriority  and     PYMNTPRI <= @I_cEndPaymentPriority   open VendorCursor   if @@cursor_rows = 0  break   fetch next from  VendorCursor  into  @cVendorID   select @sFetchStatus = @@FETCH_STATUS   while @sFetchStatus = 0  begin  select  @nCurrentBalance = 0.0,  @nUnpaidFinanceCharge   = 0.0,  @nUnappliedPayments = 0.0,  @nOnOrderAmount         = 0.0,  @nPrepaymentAmount  = 0.0   insert into #PMVendorMSTR(VendorID)  values(@cVendorID)   select   @nCurrentBalanceINV = isnull(sum(CURTRXAM),0.00)  from  PM20000  where  VENDORID = @cVendorID  and (DOCTYPE  < 4 or DOCTYPE = 7)    if @nCurrentBalanceINV is NULL   select @nCurrentBalanceINV = 99999999999999.99999   select  @nCurrentBalancePAY = isnull(sum(CURTRXAM),0.00)  from  PM20000   where  VENDORID = @cVendorID  and DOCTYPE  > 3   and (PONUMBER = ''   or (PONUMBER <> '' and PONUMBER in (select PONUMBER from POP10100 where POSTATUS in (5,6))))   if @nCurrentBalancePAY is NULL   select @nCurrentBalancePAY = 99999999999999.99999   select @nCurrentBalance = @nCurrentBalanceINV - @nCurrentBalancePAY    select   @nCurrentBalanceINV = isnull(sum(CURTRXAM),0.00)  from  PM20000  where  VENDORID = @cVendorID  and DOCTYPE  = 2   if @nCurrentBalanceINV is NULL   select @nCurrentBalanceINV = 99999999999999.99999   select @nUnpaidFinanceCharge = @nCurrentBalanceINV     select  @nUnappliedPayments = isnull(sum(CURTRXAM),0.00)  from  PM20000  where  VENDORID = @cVendorID  and DOCTYPE  = 6  and (PONUMBER = ''   or (PONUMBER <> '' and PONUMBER in (select PONUMBER from POP10100 where POSTATUS in (5,6))))  if @nUnappliedPayments is NULL   select @nUnappliedPayments = 99999999999999.99999   select   @nOnOrderAmount = isnull(sum(ONORDAMT),0.00)  from  POP10100  where  VENDORID = @cVendorID  and ONORDAMT > 0   if @nOnOrderAmount is NULL   select @nOnOrderAmount = 99999999999999.99999   select  @nPrepaymentAmount = isnull(sum(CURTRXAM),0.00)  from  PM20000  where  VENDORID = @cVendorID  and DOCTYPE  = 6  and (PONUMBER <> '' and PONUMBER in (select PONUMBER from POP10100 where POSTATUS not in (5,6)))   if @nPrepaymentAmount is NULL   select @nPrepaymentAmount = 99999999999999.99999   insert into #VendorTEMP(  VendorID,  CurBal,   UnpdFinChar,   UnappldPay,   OnOrdrAmt,  PrepaymentAmt )  values(  @cVendorID,  @nCurrentBalance,  @nUnpaidFinanceCharge,  @nUnappliedPayments,  @nOnOrderAmount,  @nPrepaymentAmount )   fetch next from  VendorCursor  into  @cVendorID   select @sFetchStatus = @@FETCH_STATUS   end    if @sFetchStatus <> -1  begin  select @O_iErrorState = 20828  break  end   if @O_iErrorState <> 0  break   insert into  PM00201 (VENDORID)  select  VendorID  from  #PMVendorMSTR  where  VendorID  NOT IN  (select  VENDORID  from  PM00201)   insert into  #ReportTEMP  select  #VendorTEMP.VendorID,  PM00200.VENDNAME,  PM00201.CURRBLNC,  PM00201.UNPDFNCH,  PM00201.CURUNPBN,  PM00201.ONORDAMT,  PM00201.PrepaymentAmount,  #VendorTEMP.CurBal,  #VendorTEMP.UnpdFinChar,  #VendorTEMP.UnappldPay,  #VendorTEMP.OnOrdrAmt,  #VendorTEMP.PrepaymentAmt  from  #VendorTEMP,  PM00201,  PM00200  where  PM00201.VENDORID = #VendorTEMP.VendorID  and PM00200.VENDORID = PM00201.VENDORID  and   ( PM00201.CURRBLNC <> #VendorTEMP.CurBal  or      PM00201.UNPDFNCH <> #VendorTEMP.UnpdFinChar  or      PM00201.CURUNPBN <> #VendorTEMP.UnappldPay  or      PM00201.ONORDAMT <> #VendorTEMP.OnOrdrAmt  or PM00201.PrepaymentAmount <> #VendorTEMP.PrepaymentAmt )   if @I_tUpdateVendorSUM = 1     update  PM00201  set  PM00201.CURRBLNC = VENTEMP.CurBal,   PM00201.UNPDFNCH = VENTEMP.UnpdFinChar,   PM00201.CURUNPBN = VENTEMP.UnappldPay,  PM00201.ONORDAMT = VENTEMP.OnOrdrAmt,  PM00201.PrepaymentAmount = VENTEMP.PrepaymentAmt  from  PM00201,  #ReportTEMP VENTEMP  where  PM00201.VENDORID = VENTEMP.VendorID   if @@error <> 0  begin  select @O_iErrorState = 20829  break  end   if @I_tPrintReport = 1     exec ('insert into ' + @I_cTableName +  'select  VendorID,VendorName,'''','''','''',0x00000000,  OldCurBal,OldUnpdFinChar,OldUnappldPay,OldOnOrdrAmt,OldPrepaymentAmt,  CurBal,UnpdFinChar,UnappldPay,OnOrdrAmt,PrepaymentAmt  from  #ReportTEMP')  end   deallocate VendorCursor  set nocount off  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[pmReconcile] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE Procedure [dbo].[SVC_Transfer_CallToHistory] (@RecordType smallint,  @CallNumber char(11)) As  declare @Line int declare @EquipLine int declare @LineType char(3) declare @QtyType smallint declare @SerialLine int declare @SOPType smallint declare @SOPNumber char(21) declare @Seq int declare @DistType smallint declare @MoveDist tinyint declare @SRVCCD char(11), @TASKCD char(11) declare @TECHID char(11), @CMPNTSEQ int  if (exists(select * from SVC00200 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber)) BEGIN  begin transaction   select @MoveDist = SVC_DistHistory_Service from SVC00998   INSERT INTO SVC30200 with (rowlock)  select CALLNBR, SRVRECTYPE, SRVSTAT, SRVTYPE, SVCDESCR, priorityLevel, CUSTNMBR, Customer_Reference,  ADRSCODE, CUSTNAME, ADDRESS1, ADDRESS2, CITY, STATE, ZIP, CNTCPRSN, PHONE1, OFFID, SVCAREA,  TECHID, TIMEZONE, ENTDTE, ENTTME, Notify_Date, Notify_Time, ETADTE, ETATME, DISPDTE,  DISPTME, ARRIVDTE, ARRIVTME, COMPDTE, COMPTME, Response_Date, Response_Time, PRICELVL,  PYMTRMID, SLPRSNID, LABSTOTPRC, LABPCT, LABSTOTCST, PARSTOTPRC, PARTPCT, PARSTOTCST,  MSCSTOTPRC, MISCPCT, MISSTOTCST, TAXSCHID, TAXEXMT1, TAXEXMT2, PRETAXTOT, TAXAMNT,  TOTAL, Invoiced_Amount, METER1, METER2, METER3, PORDNMBR, NOTEINDX, NOTFYFLAG, USERDEF1,  USERDEF2, USRDEF03, USRDEF04, USRDEF05, MSTRRECTYPE, MSTRCALLNBR, ESCDATE, ESCTIME,  Escalation_Level, SPLTTERMS, Callback, PROJCTID, ProjectRef1_1, ProjectRef1_2,  ProjectRef1_3, ProjectRef1_4, CONSTS, CONTNBR, SVC_Contract_Line_SEQ, ETTR, SVC_On_Hold,  Print_to_Web, Meters_1, Meters_2, Meters_3, Meters_4, Meters_5, Meter_Internal_Uses_1,  Meter_Internal_Uses_2, Meter_Internal_Uses_3, Meter_Internal_Uses_4, Meter_Internal_Uses_5,  Bill_To_Customer, CURNCYID, SVC_Bill_To_Address_Code,CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,  EXCHDATE,DECPLACS,TIME1,RATECALC,VIEWMODE,ISMCTRX,EXPNDATE,DENXRATE,MCTRXSTT,ORIGMISSTOTCST,  ORIGMSCSTOTPRC,ORIGLABSUBTOTCOST,ORIGLABSTOTPRC,ORIGPARSTOTCST,ORIGPARSTOTPRC,ORIGPRETAXTOT,  ORTAXAMT,ORIGTOTAL,Orig_Invoiced_Amount, ADDRESS3,COUNTRY,SVC_Pre600,SVC_FO_ID,  Replaces_1, Replaces_2, Replaces_3, Replaces_4, Replaces_5, Workflow_Approval_Status, Workflow_Priority  from SVC00200 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  if @@error <> 0 goto baderror  declare cursor_203service cursor for select EQPLINE,LNITMSEQ,LINITMTYP, CMPNTSEQ from SVC00203 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_203service  FETCH NEXT FROM cursor_203service INTO @EquipLine,@Line,@LineType, @CMPNTSEQ  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30203 with (rowlock)  select  SRVRECTYPE, CALLNBR, EQPLINE, LNITMSEQ, LINITMTYP, SRVSTAT, TECHID, ITEMNMBR, ITEMUSETYPE,   ITEMDESC, LOCNCODE, UOFM, QTYORDER, ATYALLOC, QTYBACKO, QTYSOLD, UNITCOST, UNITPRCE,   EXTDCOST, XTNDPRCE, NOTEINDX, STRTDATE, STRTTIME, ENDDATE, ENDTME, TRANSTME, BILLABLTIM,   TRNSFLOC, TRNSFQTY, TRNFLAG, ORDDOCID, TRANSLINESEQ, LABPCT, PARTPCT, MISCPCT, FUFILDAT,   PONMBRSTR, POLNSEQ, On_Return, RETDOCID, LNSEQNBR, Miles_Start, Miles_End,   Miles_Used, PRICELVL, SVC_Address_Option, SVC_Misc_Address_Code, SVC_Disable_XFR_Grouping,  Work_Type,ORUNTCST,ORUNTPRC,OREXTCST,OXTNDPRC,TAXAMNT,ORTAXAMT,SVC_FO_ID,  svcCreateVoucher, VCHRNMBR, CMPNTSEQ,CMPITQTY  from SVC00203 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  and EQPLINE = @EquipLine and LINITMTYP = @LineType and LNITMSEQ = @Line and CMPNTSEQ = @CMPNTSEQ  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_203service INTO @EquipLine,@Line,@LineType, @CMPNTSEQ  END deallocate cursor_203service  declare cursor_201service cursor for select LNITMSEQ from SVC00201 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_201service  FETCH NEXT FROM cursor_201service INTO @Line  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30201 with (rowlock)  select  SRVRECTYPE, CALLNBR, LNITMSEQ, EQUIPID, ITEMNMBR, PRDLINE, PROBCDE,   CAUSECDE, RPRCODE, Note_Index_1, Note_Index_2, Note_Index_3  from SVC00201 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber and LNITMSEQ = @Line  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_201service INTO @Line  END  deallocate cursor_201service  declare cursor_202service cursor for select EQPLINE from SVC00202 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_202service  FETCH NEXT FROM cursor_202service INTO @EquipLine  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30202 with (rowlock)  select  SRVRECTYPE, CALLNBR, EQPLINE, EQUIPID, ITEMNMBR, METER1, METER2, METER3,LSTDTEDT, PMPERF  from SVC00202 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber and EQPLINE = @EquipLine  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_202service INTO @EquipLine  END deallocate cursor_202service  declare cursor_210service cursor for select LNITMSEQ from SVC00210 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_210service  FETCH NEXT FROM cursor_210service INTO @Line  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30210 with (rowlock)  select  CALLNBR, SRVRECTYPE,LNITMSEQ, FRMSTAT, TOSTAT, TECHID,   DSCRIPTN, USERID, CREATDDT, CREATETIME  from SVC00210 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber and LNITMSEQ = @Line  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_210service INTO @Line  END deallocate cursor_210service  declare cursor_220service cursor for select SOPTYPE,SOPNUMBE from SVC00220 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_220service  FETCH NEXT FROM cursor_220service INTO @SOPType, @SOPNumber  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30220 with (rowlock)  select SRVRECTYPE, CALLNBR, SOPTYPE, SOPNUMBE, Invoiced_Amount, Amount_To_Invoice,  CREATDDT, CREATETIME  from SVC00220 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  and SOPTYPE = @SOPType and SOPNUMBE=@SOPNumber  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_220service INTO @SOPType, @SOPNumber  END deallocate cursor_220service  declare cursor_250service cursor for select EQPLINE,LNITMSEQ,LINITMTYP,QTYTYPE,SLTSQNUM , CMPNTSEQ  from SVC00250 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_250service  FETCH NEXT FROM cursor_250service INTO @EquipLine,@Line,@LineType,@QtyType,@SerialLine, @CMPNTSEQ  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30250 with (rowlock)  select SRVRECTYPE, CALLNBR,  EQPLINE,LINITMTYP, LNITMSEQ,  QTYTYPE, SERLTNUM, SERLTQTY,SLTSQNUM,DATERECD,DTSEQNUM, UNITCOST,ITEMNMBR,  TRXSORCE,POSTED, OVRSERLT, EQUIPID, BIN, MFGDATE, EXPNDATE, CMPNTSEQ  from SVC00250 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber and SLTSQNUM =@SerialLine and CMPNTSEQ = @CMPNTSEQ  and EQPLINE = @EquipLine and LINITMTYP = @LineType and LNITMSEQ = @Line and QTYTYPE = @QtyType  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_250service INTO @EquipLine,@Line,@LineType,@QtyType,@SerialLine, @CMPNTSEQ  END deallocate cursor_250service  if @MoveDist  = 1  begin  declare cursor_230service cursor for select SEQNUMBR,SVC_Distribution_Type  from SVC00230 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  open cursor_230service  FETCH NEXT FROM cursor_230service INTO @Seq,@DistType  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30230 with (rowlock)  select  SRVRECTYPE, CALLNBR,SEQNUMBR, SVC_Distribution_Type, DistRef,ACTINDX,  DEBITAMT,ORDBTAMT,CRDTAMNT,ORCRDAMT,CURRNIDX, TRXSORCE, POSTED, POSTEDDT  from SVC00230 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  and SEQNUMBR = @Seq and SVC_Distribution_Type=@DistType  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_230service INTO @Seq,@DistType  END  deallocate cursor_230service  declare cursor_231service cursor for select EQPLINE, LNITMSEQ, LINITMTYP, SEQNUMBR,SVC_Distribution_Type, CMPNTSEQ  from SVC00231 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  open cursor_231service  FETCH NEXT FROM cursor_231service INTO @EquipLine,@Line,@LineType,@Seq,@DistType, @CMPNTSEQ   while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30231 with (rowlock)  select  SRVRECTYPE, CALLNBR, EQPLINE, LNITMSEQ, LINITMTYP,  SEQNUMBR, SVC_Distribution_Type, DistRef,ACTINDX,  DEBITAMT,ORDBTAMT,CRDTAMNT,ORCRDAMT,CURRNIDX, TRXSORCE, POSTED, POSTEDDT, CMPNTSEQ  from SVC00231 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  and EQPLINE = @EquipLine and LINITMTYP = @LineType and LNITMSEQ = @Line  and SEQNUMBR = @Seq and SVC_Distribution_Type=@DistType and CMPNTSEQ = @CMPNTSEQ  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_231service INTO @EquipLine,@Line,@LineType,@Seq,@DistType, @CMPNTSEQ  END  deallocate cursor_231service end  declare cursor_207service cursor for select EQPLINE, LNITMSEQ from SVC00207 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_207service  FETCH NEXT FROM cursor_207service INTO @EquipLine, @Line  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC30207 with (rowlock)  select  SRVRECTYPE, CALLNBR, EQPLINE, LNITMSEQ, TECHID  from SVC00207 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber and EQPLINE = @EquipLine and LNITMSEQ = @Line  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_207service INTO @EquipLine, @Line  END deallocate cursor_207service  declare cursor_240service cursor for select SRVCCD, TASKCD, TECHID from SVC00240 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber open cursor_240service  FETCH NEXT FROM cursor_240service INTO @SRVCCD, @TASKCD, @TECHID  while @@FETCH_STATUS = 0  BEGIN  set @TECHID = isnull(@TECHID,'')  if @TECHID = ''   begin  select @TECHID = TECHID from SVC30200 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  set @TECHID = isnull(@TECHID,'')  end  if @TECHID = ''  begin  select @TECHID = min(TECHID) from SVC00207 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  and TECHID <> ''  set @TECHID = isnull(@TECHID,'')  end   INSERT INTO SVC30240(CALLNBR, SRVRECTYPE, SRVCCD, TASKCD, TASKREQ, TASKCOMP, TASKUSERID, TASKDATE, TASKTIME, TASKETTC, TASKATTC, TECHID)   select  CALLNBR, SRVRECTYPE, SRVCCD, TASKCD, TASKREQ, TASKCOMP, TASKUSERID, TASKDATE, TASKTIME, TASKETTC, TASKATTC,   @TECHID  from SVC00240 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber and SRVCCD = @SRVCCD and TASKCD = @TASKCD  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_240service INTO @SRVCCD, @TASKCD, @TECHID  END deallocate cursor_240service  delete from SVC00200 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00201 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00202 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00203 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00210 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00220 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00250 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00230 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00231 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber delete from SVC00211 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  delete from SVC00207 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber  delete from SVC00240 where SRVRECTYPE = @RecordType and CALLNBR = @CallNumber   COMMIT TRANSACTION END  return(0) baderror:  rollback transaction  return (99)   
GO
GRANT EXECUTE ON  [dbo].[SVC_Transfer_CallToHistory] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glPMatchIVTransactions]  @iGLTempTable varchar(50),  @iIVTempTable varchar(50),  @iIVPMatchTable varchar(50),  @iGLPMatchTable varchar(50),  @iIVUMatchTable varchar(50),  @iGLUMatchTable varchar(50)  AS  DECLARE  @lSQLError int  EXEC(  'SELECT POSTEDDT, EXTDCOST, IVCOUNT  INTO ##IVTEMP from  (select POSTEDDT,EXTDCOST,COUNT(POSTEDDT) as IVCOUNT from '+@iIVTempTable+' group by POSTEDDT,EXTDCOST) IVTEMP  where IVTEMP.IVCOUNT > 1 ')  EXEC( 'INSERT INTO ' +  @iIVUMatchTable +   ' (POSTEDDT,  JRNENTRY,  DOCNUMBR,  DOCTYPE,  TRXSORCE,  STRVAL,  TRX_ID,  EXTDCOST,  DocumentNumberDrillback,  JournalEntryDrillback)  SELECT  a.POSTEDDT,  a.JRNENTRY,  a.DOCNUMBR,  a.DOCTYPE,  a.TRXSORCE,  '''',  '''',  a.EXTDCOST,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppItemTransactionNumber(1,a.ITEMNMBR,a.DOCTYPE,a.DOCNUMBR,a.DCSTATUS),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,0,dbo.glFuncGetFiscalYear(a.POSTEDDT),a.POSTEDDT)  FROM  ##IVTEMP b, '+ @iIVTempTable + ' a  where a.POSTEDDT = b.POSTEDDT and   a.EXTDCOST = b.EXTDCOST ')  EXEC(  'DELETE '+ @iIVTempTable + ' FROM   ##IVTEMP  where '+ @iIVTempTable + '.POSTEDDT = ##IVTEMP.POSTEDDT and   '+ @iIVTempTable + '.EXTDCOST = ##IVTEMP.EXTDCOST ')  EXEC(  'SELECT TRXDATE, EXTDCOST, GLCOUNT  INTO ##GLTEMP from  (select TRXDATE,(DEBITAMT-CRDTAMNT) as EXTDCOST,COUNT(TRXDATE) as GLCOUNT from '+@iGLTempTable+' group by TRXDATE,DEBITAMT,CRDTAMNT) GLTEMP  where GLTEMP.GLCOUNT > 1 ')  EXEC(  'INSERT INTO ' +  @iGLUMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT  a.TRXDATE,  a.JRNENTRY,  a.ORTRXSRC,  a.ORCTRNUM,  a.ACTINDX,  a.DEBITAMT,  a.CRDTAMNT,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,a.ACTINDX),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,a.JRNENTRY,a.RCTRXSEQ,a.YEAR1,a.TRXDATE)  FROM ##GLTEMP b, '+@iGLTempTable+' a  where a.TRXDATE = b.TRXDATE and   (a.DEBITAMT-a.CRDTAMNT) = b.EXTDCOST ')  EXEC(  'DELETE '+@iGLTempTable+' FROM   ##GLTEMP  where '+@iGLTempTable+'.TRXDATE = ##GLTEMP.TRXDATE and   ('+@iGLTempTable+'.DEBITAMT-'+@iGLTempTable+'.CRDTAMNT) = ##GLTEMP.EXTDCOST ')  EXEC(  'SELECT  A.POSTEDDT,  A.JRNENTRY,  A.DOCNUMBR,  A.DOCTYPE,  A.TRXSORCE,  B.ORTRXSRC,  A.STRVAL,  A.TRX_ID,  A.EXTDCOST,  A.ITEMNMBR,  A.DCSTATUS  INTO  ##IVDetailTemp  FROM '  + @iIVTempTable + ' as A JOIN ' + @iGLTempTable + ' as B   ON  A.POSTEDDT = B.TRXDATE and (((A.EXTDCOST = B.DEBITAMT) or (A.EXTDCOST = B.CRDTAMNT)) and A.EXTDCOST<>0.0)  GROUP BY  A.POSTEDDT,  A.JRNENTRY,  A.DOCNUMBR,  A.DOCTYPE,  A.TRXSORCE,  B.ORTRXSRC,   A.STRVAL,  A.EXTDCOST,  A.TRX_ID,  A.ITEMNMBR,  A.DCSTATUS ')  EXEC(  'SELECT  A.TRXDATE,  A.JRNENTRY,  A.ORTRXSRC,  A.ORCTRNUM,  A.ACTINDX,  A.DEBITAMT,  A.CRDTAMNT,  (A.DEBITAMT - A.CRDTAMNT) as EXTDCOST,  A.HISTRX,  A.YEAR1,  A.RCTRXSEQ  INTO  ##GLDetailTemp  FROM '  + @iGLTempTable + ' as A JOIN ' + @iIVTempTable + ' as B   ON  A.TRXDATE = B.POSTEDDT and (((A.DEBITAMT = B.EXTDCOST) or (A.CRDTAMNT = B.EXTDCOST)) and B.EXTDCOST <> 0.0)  GROUP BY  A.TRXDATE,  A.JRNENTRY,  A.ORTRXSRC,  A.ORCTRNUM,   A.ACTINDX,  A.DEBITAMT,  A.CRDTAMNT,  A.HISTRX,  A.YEAR1,  A.RCTRXSEQ ')  EXEC(  'INSERT INTO ' +  @iIVPMatchTable +  ' (POSTEDDT,  JRNENTRY,  DOCNUMBR,  DOCTYPE,  TRXSORCE,  ORTRXSRC,  STRVAL,  TRX_ID,  EXTDCOST,  DocumentNumberDrillback,  JournalEntryDrillback)  SELECT  POSTEDDT,  JRNENTRY,  DOCNUMBR,  DOCTYPE,  TRXSORCE,  ORTRXSRC,  STRVAL,  TRX_ID,  EXTDCOST,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppItemTransactionNumber(1,ITEMNMBR,DOCTYPE,DOCNUMBR,DCSTATUS),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,0,dbo.glFuncGetFiscalYear(POSTEDDT),POSTEDDT)  FROM  ##IVDetailTemp ')  EXEC(  'INSERT INTO ' +  @iGLPMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ACCTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  EXTDCOST,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,ACTINDX),   DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,RCTRXSEQ,YEAR1,TRXDATE)   FROM  ##GLDetailTemp ')  EXEC(  'DELETE '+ @iIVTempTable + ' FROM '   + @iIVPMatchTable   + ' where '+@iIVTempTable + '.TRXSORCE='+@iIVPMatchTable+'.TRXSORCE and '  + @iIVTempTable+'.JRNENTRY='+@iIVPMatchTable+'.JRNENTRY ')  EXEC(  'DELETE '+ @iGLTempTable + ' FROM '   + @iGLPMatchTable   + ' where '+@iGLTempTable + '.ORTRXSRC='+@iGLPMatchTable+'.ORTRXSRC and '  + @iGLTempTable+'.JRNENTRY='+@iGLPMatchTable+'.JRNENTRY ')  EXEC(  'DELETE   FROM ' +   @iIVTempTable +   ' WHERE EXISTS (select 1 from ' + @iIVPMatchTable +   ' where TRXSORCE = ' + @iIVTempTable + '.TRXSORCE ' +  ' AND DOCNUMBR = ' + @iIVTempTable + '.DOCNUMBR ' +  ' AND JRNENTRY = ' + @iIVTempTable + '.JRNENTRY) ')  EXEC(   'DELETE   FROM ' + @iGLTempTable +   ' WHERE EXISTS (select 1 from ' + @iGLPMatchTable +   ' where ORTRXSRC = ' + @iGLTempTable + '.ORTRXSRC ' +  ' AND JRNENTRY = ' + @iGLTempTable + '.JRNENTRY ' +  ' AND ORCTRNUM = ' + @iGLTempTable + '.ORCTRNUM) ')  DROP TABLE  ##IVDetailTemp,  ##GLDetailTemp,  ##IVTEMP,  ##GLTEMP  RETURN (@lSQLError)    
GO
GRANT EXECUTE ON  [dbo].[glPMatchIVTransactions] TO [DYNGRP]
GO

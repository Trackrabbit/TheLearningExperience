SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smRMSummary] @l_start datetime, @l_end datetime, @O_SQL_Error_State int = null  output with encryption as declare @x numeric(19, 5) declare @x2 numeric(19, 5) declare @x3 numeric(19, 5) declare @x4 numeric(19, 5) declare @CUSTNMBR  char (15) declare @cStatement varchar(255) declare T_cursor CURSOR for select distinct RM20101.CUSTNMBR from RM20101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(RM20101.COSTAMNT),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR  and DOCDATE >= @l_start and DOCDATE <= @l_end and (RMDTYPAL = 1 or RMDTYPAL = 3 or RMDTYPAL = 4 or RMDTYPAL = 5) and VOIDSTTS = 0 select @x3 = isnull(sum(RM20101.COSTAMNT),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR and DOCDATE >= @l_start and DOCDATE <= @l_end and (RMDTYPAL = 7 or RMDTYPAL = 8) and VOIDSTTS = 0 insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x update taRMRECALC set THECOUNT = THECOUNT - @x3 where CUSTNMBR = @CUSTNMBR FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(RM30101.COSTAMNT),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and DOCDATE >= @l_start and DOCDATE <= @l_end and (RMDTYPAL = 1 or RMDTYPAL = 3 or RMDTYPAL = 4 or RMDTYPAL = 5) select @x4 = isnull(sum(RM30101.COSTAMNT),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR and DOCDATE >= @l_start and DOCDATE <= @l_end and (RMDTYPAL = 7 or RMDTYPAL = 8) and VOIDSTTS = 0 if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where taRMRECALC.CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 update taRMRECALC set THECOUNT = THECOUNT - @x4 where CUSTNMBR = @CUSTNMBR FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set TCOSTYTD = THECOUNT from taRMRECALC, RM00103 where RM00103.CUSTNMBR = taRMRECALC.CUSTNMBR truncate table taRMRECALC declare T_cursor CURSOR for select distinct RM20101.CUSTNMBR from RM20101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x = count(RM20101.RMDTYPAL) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 1 and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = count(RM30101.RMDTYPAL) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 1 and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set TTLINYTD = THECOUNT from taRMRECALC, RM00103 truncate table taRMRECALC declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = count(RM30101.RMDTYPAL) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 1 and VOIDSTTS = 0 and DINVPDOF >= @l_start and DOCDATE <= @l_end if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set NUMADTPY = THECOUNT from taRMRECALC, RM00103 where RM00103.CUSTNMBR = taRMRECALC.CUSTNMBR truncate table taRMRECALC declare T_cursor CURSOR for select distinct RM20101.CUSTNMBR from RM20101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(RM20101.ORTRXAMT),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 9 and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(RM30101.ORTRXAMT),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 9 and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where taRMRECALC.CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set TCSHRYTD = THECOUNT from taRMRECALC, RM00103 where RM00103.CUSTNMBR = taRMRECALC.CUSTNMBR truncate table taRMRECALC declare T_cursor CURSOR for select distinct RM20101.CUSTNMBR from RM20101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(RM20101.SLSAMNT),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR  and (RMDTYPAL = 1 or RMDTYPAL = 3 or RMDTYPAL = 5) and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end select @x3 = isnull(sum(RM20101.SLSAMNT),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR and (RMDTYPAL = 7 or RMDTYPAL = 8) and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x update taRMRECALC set THECOUNT = THECOUNT - @x3 where CUSTNMBR = @CUSTNMBR FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(RM30101.SLSAMNT),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and (RMDTYPAL = 1 or RMDTYPAL = 3 or RMDTYPAL = 5) and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end select @x4 = isnull(sum(RM30101.SLSAMNT),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR and (RMDTYPAL = 7 or RMDTYPAL = 8) and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 update taRMRECALC set THECOUNT = THECOUNT - @x4 where taRMRECALC.CUSTNMBR = @CUSTNMBR FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set TTLSLYTD = THECOUNT from taRMRECALC, RM00103 where RM00103.CUSTNMBR = taRMRECALC.CUSTNMBR truncate table taRMRECALC declare T_cursor CURSOR for select distinct RM20101.CUSTNMBR from RM20101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(RM20101.WROFAMNT),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 9 and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(RM30101.WROFAMNT),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and RMDTYPAL = 9 and VOIDSTTS = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set TWROFYTD = THECOUNT from taRMRECALC, RM00103 where RM00103.CUSTNMBR = taRMRECALC.CUSTNMBR truncate table taRMRECALC declare T_cursor CURSOR for select distinct RM20101.CUSTNMBR from RM20101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(RM20101.DISTKNAM),0) from RM20101 where RM20101.CUSTNMBR = @CUSTNMBR  and DISTKNAM > 0.00000 and VOIDSTTS = 0 and (RMDTYPAL = 9 or RMDTYPAL = 7) and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct RM30101.CUSTNMBR from RM30101 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @CUSTNMBR WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(RM30101.DISTKNAM),0) from RM30101 where RM30101.CUSTNMBR = @CUSTNMBR  and DISTKNAM > 0.00000 and VOIDSTTS = 0 and (RMDTYPAL = 9 or RMDTYPAL = 7) and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select CUSTNMBR from taRMRECALC where CUSTNMBR = @CUSTNMBR) update taRMRECALC set THECOUNT = THECOUNT + @x2 where taRMRECALC.CUSTNMBR = @CUSTNMBR else insert into taRMRECALC (CUSTNMBR, THECOUNT) select @CUSTNMBR, @x2 FETCH NEXT FROM T_cursor INTO @CUSTNMBR end DEALLOCATE T_cursor delete taRMRECALC where THECOUNT is null update  RM00103 set TDTKNYTD = THECOUNT from taRMRECALC, RM00103 where RM00103.CUSTNMBR = taRMRECALC.CUSTNMBR truncate table taRMRECALC 
GO
GRANT EXECUTE ON  [dbo].[smRMSummary] TO [DYNGRP]
GO

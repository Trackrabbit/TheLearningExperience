SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taMCExchangeRate]  @I_vCURNCYID char(15)= '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7)=0,   @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = 0,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vEXCHDATE datetime = '' output,  @I_vEXGTBLID char(15)= '' output,  @I_vTIME1 datetime = '' output,   @I_vXCHGRATE numeric(19,7) = 0 output,  @I_vEXPNDATE datetime= '' output,  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @DAYENTERED int,  @VALUE int,  @VALUE2 int,  @XCHGRATE numeric (19,7),  @iAddCodeErrState int,  @iStatus int  select  @DAYENTERED = 0,  @VALUE = 0,  @VALUE2 = 0,  @XCHGRATE = 0,  @iAddCodeErrState = 0,  @iStatus = 0,  @O_iErrorState = 0  if ( @I_vEXGTBLID is NULL or  @I_vCURNCYID is NULL or  @I_vEXCHDATE is NULL or  @I_vTIME1 is NULL or  @I_vXCHGRATE is NULL or  @I_vEXPNDATE is NULL) begin  select @O_iErrorState = 360    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vEXGTBLID = UPPER(@I_vEXGTBLID),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  if exists(select 1 from DYNAMICS..MC00100 (nolock) where XCHGRATE = @I_vXCHGRATE and EXGTBLID = @I_vEXGTBLID   and EXCHDATE = @I_vEXCHDATE and TIME1 = @I_vTIME1)  begin  return (@O_iErrorState) end  if ((@I_vDATELMTS = 0) and (@I_vPRVDSLMT > 0)) begin  select @O_iErrorState = 689     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ((@I_vDATELMTS = 1) and (@I_vPRVDSLMT = 0)) begin  select @O_iErrorState = 224     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ((@I_vRATEEXPR < -1) or (@I_vRATEEXPR > 9)) begin  select @O_iErrorState = 230     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ((@I_vRATEEXPR = 8) and (@I_vDYSTINCR <= 0)) begin  select @O_iErrorState = 228     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ((@I_vRATEEXPR <> 8) and (@I_vDYSTINCR <> 0)) begin  select @O_iErrorState = 229     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ((@I_vTRXDTDEF < -1) or (@I_vTRXDTDEF > 2)) begin  select @O_iErrorState = 231     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ((@I_vDATELMTS < 0) or (@I_vDATELMTS > 1)) begin  select @O_iErrorState = 263     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vEXPNDATE = '')  begin  select @DAYENTERED = DAY(@I_vEXCHDATE) end  if (@DAYENTERED < 15)  select @VALUE = 15 - @DAYENTERED else if (@DAYENTERED > 15)  select @VALUE2 = @DAYENTERED - 1  if (@I_vEXPNDATE = '') begin  select @I_vEXPNDATE =  case  when @I_vRATEEXPR = 1      then DATEADD(DAY, 1, @I_vEXCHDATE)  when @I_vRATEEXPR = 2      then DATEADD(DAY, 7, @I_vEXCHDATE)  when @I_vRATEEXPR = 3       then DATEADD(DAY, 14, @I_vEXCHDATE)  when @I_vRATEEXPR = 4 and @DAYENTERED < 15   then DATEADD(DAY, @VALUE, @I_vEXCHDATE)  when @I_vRATEEXPR = 4 and @DAYENTERED > 15   then DATEADD(MONTH, 1, @I_vEXCHDATE - @VALUE2)  when @I_vRATEEXPR = 5       then DATEADD(MONTH, 1, @I_vEXCHDATE)  when @I_vRATEEXPR = 6       then DATEADD(MONTH, 3, @I_vEXCHDATE)  when @I_vRATEEXPR = 7       then DATEADD(YEAR, 1, @I_vEXCHDATE)  when @I_vRATEEXPR = 8       then @I_vEXCHDATE + @I_vDYSTINCR  when @I_vRATEEXPR = 9       then '1900-01-01'                     else @I_vEXPNDATE  end end  if ((@I_vEXPNDATE < @I_vEXCHDATE) and (@I_vEXPNDATE > '1900-01-01'))   begin   select @O_iErrorState = 268   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vEXCHDATE = '') begin  select @I_vEXCHDATE = isnull(max(EXCHDATE),'') from DYNAMICS..MC00100 (nolock) where EXGTBLID = @I_vEXGTBLID end  if (@I_vTIME1 = '') begin  select @I_vTIME1 = max(TIME1) from DYNAMICS..MC00100 (nolock) where EXGTBLID = @I_vEXGTBLID and EXCHDATE = @I_vEXCHDATE end  if (@I_vTIME1 is null) begin  select @I_vTIME1 = ' '+ substring(convert(varchar(25),getdate()),12,12) end  select @XCHGRATE = XCHGRATE from DYNAMICS..MC00100 (nolock) where EXGTBLID = @I_vEXGTBLID and EXCHDATE = @I_vEXCHDATE and TIME1 = @I_vTIME1  if (exists(select 1 from DYNAMICS..MC00100 (nolock) where EXGTBLID = @I_vEXGTBLID and EXCHDATE = @I_vEXCHDATE and TIME1 = @I_vTIME1)) begin  while (1=1)   begin  select @I_vTIME1 = dateadd(second, 1, @I_vTIME1)   if (not exists(select 1 from DYNAMICS..MC00100 (nolock) where EXGTBLID = @I_vEXGTBLID and EXCHDATE = @I_vEXCHDATE and TIME1 = @I_vTIME1))  begin  break  end  end end  if (@I_vXCHGRATE <> isnull(@XCHGRATE,0)) begin  insert DYNAMICS..MC00100  (  EXGTBLID,  CURNCYID,  EXCHDATE,  TIME1,  XCHGRATE,  EXPNDATE  )  select   @I_vEXGTBLID,  @I_vCURNCYID,  @I_vEXCHDATE,  @I_vTIME1,  @I_vXCHGRATE,  @I_vEXPNDATE  if (@@error <> 0)  begin  select @O_iErrorState = 226    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update DYNAMICS..MC40300  set  EXGTBDSC = case when (@I_vEXGTBDSC = '') then EXGTBDSC else @I_vEXGTBDSC end,  EXTBLSRC = case when (@I_vEXTBLSRC = '') then EXTBLSRC else @I_vEXTBLSRC end,  RATEEXPR = case when (@I_vRATEEXPR = -1) then RATEEXPR else @I_vRATEEXPR end,  DYSTINCR = case when (@I_vDYSTINCR = -1) then DYSTINCR else @I_vDYSTINCR end,  RATEVARC = case when (@I_vRATEVARC = 0 or @I_vRATEVARC is null) then RATEVARC else @I_vRATEVARC end,   TRXDTDEF = case when (@I_vTRXDTDEF = -1 or @I_vTRXDTDEF is null) then TRXDTDEF else @I_vTRXDTDEF end,   RTCLCMTD = @I_vRTCLCMTD,    PRVDSLMT = @I_vPRVDSLMT,    DATELMTS = @I_vDATELMTS     where EXGTBLID = @I_vEXGTBLID  if (@@error <> 0)  begin  select @O_iErrorState = 227    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taMCExchangeRate] TO [DYNGRP]
GO

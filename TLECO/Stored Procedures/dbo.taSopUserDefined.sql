SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taSopUserDefined]  @I_vSOPTYPE smallint,    @I_vSOPNUMBE char(21),     @I_vUSRDAT01 datetime = '',   @I_vUSRDAT02 datetime = '',   @I_vUSRTAB01 char(20) = null,   @I_vUSRTAB09 char(20) = null,   @I_vUSRTAB03 char(20) = null,   @I_vUSERDEF1 char(20) = null,   @I_vUSERDEF2 char(20) = null,   @I_vUSRDEF03 char(20) = null,   @I_vUSRDEF04 char(20) = null,   @I_vUSRDEF05 char(20) = null,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int  select  @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_iErrorState = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taSopUserDefinedPre  @I_vSOPTYPE output,  @I_vSOPNUMBE output,  @I_vUSRDAT01 output,  @I_vUSRDAT02 output,  @I_vUSRTAB01 output,  @I_vUSRTAB09 output,  @I_vUSRTAB03 output,  @I_vUSERDEF1 output,  @I_vUSERDEF2 output,  @I_vUSRDEF03 output,  @I_vUSRDEF04 output,  @I_vUSRDEF05 output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 103    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vSOPTYPE is NULL or  @I_vSOPNUMBE is NULL or  @I_vRequesterTrx is NULL) begin  select @O_iErrorState = 134    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vSOPTYPE = 0 or  @I_vSOPNUMBE = '') begin  select @O_iErrorState = 135    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE)  if ( @I_vSOPTYPE < 1 or @I_vSOPTYPE > 6 ) begin  select @O_iErrorState = 136     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUSRTAB01 <> '') and (@I_vUSRTAB01 is not null) begin  if not exists(select 1 from SOP40400 (nolock) where INDEX1 = 1 and USTABVAL = @I_vUSRTAB01)  begin  insert into SOP40400  (INDEX1,  USTABVAL)  select 1,  @I_vUSRTAB01  end end if @@error <> 0 begin  select @O_iErrorState = 582     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vUSRTAB09 <> '' ) and ( @I_vUSRTAB09 is not null ) begin  if not exists(select 1 from SOP40400 (nolock) where INDEX1 = 2 and USTABVAL = @I_vUSRTAB09)   begin  insert into SOP40400  (INDEX1,  USTABVAL)  select 2,  @I_vUSRTAB09  end end if @@error <> 0 begin  select @O_iErrorState = 719     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vUSRTAB03 <> '' ) and ( @I_vUSRTAB03 is not null ) begin  if not exists(select 1 from SOP40400 (nolock) where INDEX1 = 3 and USTABVAL = @I_vUSRTAB03)   begin  insert into SOP40400  (INDEX1,  USTABVAL)  select 3,  @I_vUSRTAB03  end end if @@error <> 0 begin  select @O_iErrorState = 720     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 2786    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if not exists(select 1 from SOP10106 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE)  begin   insert SOP10106  (  SOPTYPE,  SOPNUMBE,  USRDAT01,  USRDAT02,  USRTAB01,  USRTAB09,  USRTAB03,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select  @I_vSOPTYPE,    @I_vSOPNUMBE,    @I_vUSRDAT01,    @I_vUSRDAT02,    case     when (@I_vUSRTAB01 is null)  then ''  else @I_vUSRTAB01  end,  case     when (@I_vUSRTAB09 is null)  then ''  else @I_vUSRTAB09  end,  case     when (@I_vUSRTAB03 is null)  then ''  else @I_vUSRTAB03  end,  case     when (@I_vUSERDEF1 is null)  then ''  else @I_vUSERDEF1  end,  case     when (@I_vUSERDEF2 is null)  then ''  else @I_vUSERDEF2  end,  case      when (@I_vUSRDEF03 is null)   then ''  else @I_vUSRDEF03  end,  case     when (@I_vUSRDEF04 is null)  then ''  else @I_vUSRDEF04  end,  case     when (@I_vUSRDEF05 is null)   then ''  else @I_vUSRDEF05  end,  '',     '',     '',     '',     ''    end else begin  update SOP10106 set  USRDAT01 =   case  when (@I_vUSRDAT01 = '')  then USRDAT01  else @I_vUSRDAT01  end,  USRDAT02 =   case  when (@I_vUSRDAT02 = '')  then USRDAT02  else @I_vUSRDAT02  end,  USRTAB01 =   case  when (@I_vUSRTAB01 is null)  then USRTAB01  else @I_vUSRTAB01  end,  USRTAB09 =   case   when (@I_vUSRTAB09 is null)  then USRTAB09  else @I_vUSRTAB09  end,  USRTAB03 =   case   when (@I_vUSRTAB03 is null)  then USRTAB03  else @I_vUSRTAB03  end,  USERDEF1 =   case  when (@I_vUSERDEF1 is null)   then USERDEF1  else @I_vUSERDEF1  end,  USERDEF2 =   case   when (@I_vUSERDEF2 is null)  then USERDEF2  else @I_vUSERDEF2  end,  USRDEF03 =   case   when (@I_vUSRDEF03 is null)  then USRDEF03  else @I_vUSRDEF03  end,  USRDEF04 =   case   when (@I_vUSRDEF04 is null)  then USRDEF04  else @I_vUSRDEF04  end,  USRDEF05 =   case   when (@I_vUSRDEF05 is null)  then USRDEF05  else @I_vUSRDEF05  end  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end if @@error <> 0 begin  select @O_iErrorState = 137    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taSopUserDefinedPost  @I_vSOPTYPE,  @I_vSOPNUMBE,  @I_vUSRDAT01,  @I_vUSRDAT02,  @I_vUSRTAB01,  @I_vUSRTAB09,  @I_vUSRTAB03,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 138    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 2785    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taSopUserDefined] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCustomerBalance]  @I_vCUSTNMBR varchar(15),   @I_vNewSaleAmt numeric(19,5),   @O_nOverCreditLimit tinyint output,   @O_CRLMTTYP smallint output,  @O_nCurrBalance numeric(19,5) output,  @O_nCRLMTAMT numeric(19,5) output,  @O_CRLMTPER smallint output,  @O_nCRLMTPAM numeric(19,5) output,  @O_nCUSTBLNC numeric(19,5) output,  @O_nUNPSTDSA numeric(19,5) output,  @O_nUNPSTOSA numeric(19,5) output,  @O_nONORDAMT numeric(19,5) output,  @O_nUNPSTDCA numeric(19,5) output,  @O_nUNPSTOCA numeric(19,5) output,  @O_nDEPRECV   numeric(19,5) output,  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iTOTALPAM numeric(19,5),    @iAddCodeErrState int,     @iStatus int      select  @O_nOverCreditLimit = 0,   @iTOTALPAM = 0  select   @O_iErrorState = isnull(@oErrString,0),  @oErrString = isnull(@oErrString,'')  if ( @I_vCUSTNMBR is null or  @I_vNewSaleAmt is null) begin  select @O_iErrorState = 1795    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR)  if (@I_vCUSTNMBR = '') begin  select @O_iErrorState = 1796    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output end  if not exists(select 1 from RM00101 c (nolock), RM00103 s (nolock) where c.CUSTNMBR = @I_vCUSTNMBR and c.CUSTNMBR = s.CUSTNMBR) begin  select @O_iErrorState = 1797    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState <> 0) begin  return @O_iErrorState end  select  @O_nCRLMTAMT = CRLMTAMT,  @O_CRLMTTYP = CRLMTTYP,  @O_CRLMTPER = CRLMTPER,      @O_nCRLMTPAM = CRLMTPAM     from RM00101 (nolock)  where CUSTNMBR = @I_vCUSTNMBR   select  @O_nCurrBalance = CUSTBLNC + UNPSTDSA + UNPSTOSA + ONORDAMT - UNPSTDCA - UNPSTOCA - DEPRECV + @I_vNewSaleAmt,  @O_nCUSTBLNC = CUSTBLNC,  @O_nUNPSTDSA = UNPSTDSA,  @O_nUNPSTOSA = UNPSTOSA,  @O_nONORDAMT = ONORDAMT,  @O_nUNPSTDCA = UNPSTDCA,  @O_nUNPSTOCA = UNPSTOCA,  @O_nDEPRECV = DEPRECV,  @iTOTALPAM  =  case   when @O_CRLMTPER = 1   then AGPERAMT_1   when @O_CRLMTPER = 2   then  AGPERAMT_2  when @O_CRLMTPER = 3   then  AGPERAMT_3  when @O_CRLMTPER = 4   then  AGPERAMT_4   when @O_CRLMTPER = 5   then  AGPERAMT_5  when @O_CRLMTPER = 6   then  AGPERAMT_6  when @O_CRLMTPER = 7   then  AGPERAMT_7  else 0  end   from RM00103 (nolock)  where CUSTNMBR = @I_vCUSTNMBR  if (@O_CRLMTTYP = 0) begin  select @O_nOverCreditLimit = 1 end else if (@O_CRLMTTYP = 1) begin  select @O_nOverCreditLimit = 0 end else if ((@O_CRLMTTYP = 2) and (@O_nCurrBalance > @O_nCRLMTAMT)) begin  select @O_nOverCreditLimit = 1 end  if ((@O_nOverCreditLimit = 0) and (@O_CRLMTTYP = 2) and   (@O_CRLMTPER > 0) and (@O_nCRLMTPAM > 0) and (@iTOTALPAM > @O_nCRLMTPAM)) begin  select @O_nOverCreditLimit = 1 end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCustomerBalance] TO [DYNGRP]
GO

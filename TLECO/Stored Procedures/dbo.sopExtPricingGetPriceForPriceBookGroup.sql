SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[sopExtPricingGetPriceForPriceBookGroup] @piST_SchemeCode char(15),  @piST_PriceListCode char(15),  @piST_ItemNumber char(31),   @piST_UofM char(9),    @piDA_Date datetime,    @piDE_Qty decimal(19,5),   @piST_Currency char(16),    @poDE_Price decimal(19,5) OUTPUT,  @poIN_CurrPriceFound integer  OUTPUT   AS  DECLARE @loDE_Value decimal(19,5),  @loDE_EQUOMQTY decimal(19,5),  @loST_ValueType char(1),  @loDA_StartDate datetime,  @loDA_EndDate datetime,  @loST_BaseUofM char(9),  @loDA_NextStartDate datetime,  @loDA_NextEndDate datetime,  @loST_CS_Type char(1),  @loDE_CS_Value decimal(19,5),  @loST_CP_Type char(1),  @loDE_CP_Value decimal(19,5),  @loIN_DecPlaces integer,  @loIN_DPQty integer,  @loST_FUNLCURR char(16),  @loIN_PricesNotReqd integer,  @loIN_ConvertFunctPrice integer  SELECT @loIN_DecPlaces = DECPLCUR - 1, @loIN_DPQty = DECPLQTY - 1  FROM SOP10108 where PRCGRPID = @piST_ItemNumber  IF @piDE_Qty = 0 BEGIN  IF @loIN_DPQty > 0  BEGIN  SET @piDE_Qty = '0.' + SUBSTRING('00000', 1, @loIN_DPQty - 1) + '1'  END  ELSE  BEGIN  SET @piDE_Qty = 1  END END EXECUTE ExtPricingGetFunctionalCurrency @loST_FUNLCURR OUTPUT IF @loST_FUNLCURR IS NULL BEGIN  SELECT @loST_FUNLCURR = '' END   SELECT @loIN_PricesNotReqd = SOP40100.Prices_Not_Required_In_Pr,  @loIN_ConvertFunctPrice = SOP40100.Convert_Functional_Price  FROM SOP40100  SET @poIN_CurrPriceFound = 0  IF @piST_Currency = @loST_FUNLCURR BEGIN  GOTO FunctCurrencyRoutines END  IF (SELECT COUNT(*)   FROM SOP40709  WHERE PRCGRPID = @piST_ItemNumber AND  CURNCYID = @piST_Currency) > 0 BEGIN  SELECT  @loIN_DecPlaces = DECPLCUR - 1  FROM SOP40709  WHERE PRCGRPID = @piST_ItemNumber AND  CURNCYID = @piST_Currency END ELSE BEGIN  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50032  END END   SET @poIN_CurrPriceFound = 1  IF @piST_SchemeCode IS NULL BEGIN  GOTO CurrPriceListGroup END  CurrSchemeGroup:  DECLARE scCurrSchemeGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM  FROM SOP10110 as SH  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SH.PRCSHID  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SH.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  WHERE SH.PRCSHID = @piST_SchemeCode  AND SH.ACTIVE = 1  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  AND SW.ITEMNMBR = @piST_ItemNumber  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrSchemeGroup  FETCH FIRST FROM scCurrSchemeGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrSchemeGroup  DEALLOCATE scCurrSchemeGroup  GOTO CurrPriceListGroup END ELSE BEGIN  FETCH NEXT FROM scCurrSchemeGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM  IF @@FETCH_STATUS = 0  BEGIN  IF @loDA_StartDate = @loDA_NextStartDate and @loDA_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrSchemeGroup  DEALLOCATE scCurrSchemeGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50015  END  END  END END  FETCH FIRST FROM scCurrSchemeGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  CLOSE scCurrSchemeGroup DEALLOCATE scCurrSchemeGroup  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  RETURN 0 END ELSE BEGIN  SELECT @loST_CS_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CS_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CS_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO CurrPriceListGroup END  CurrPriceListGroup:  IF @piST_PriceListCode IS NULL BEGIN  GOTO CurrBaseListGroup END  DECLARE scCurrPriceListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM  FROM  RM00500 as SL  INNER JOIN SOP10110 as SH  ON SH.PRCSHID = SL.PRCSHID  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SL.PRCSHID  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  WHERE SL.PRODTCOD = 'P'  AND SL.LINKCODE = @piST_PriceListCode  AND SH.ACTIVE = 1  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  AND SW.ITEMNMBR = @piST_ItemNumber  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND  SH.PROMO  = 0  AND SH.CURNCYID = @piST_Currency  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrPriceListGroup  FETCH FIRST FROM scCurrPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrPriceListGroup  DEALLOCATE scCurrPriceListGroup  GOTO CurrBaseListGroup END ELSE BEGIN  FETCH NEXT FROM scCurrPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM  IF @@FETCH_STATUS = 0  BEGIN  IF @loDA_StartDate = @loDA_NextStartDate and @loDA_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrPriceListGroup  DEALLOCATE scCurrPriceListGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50011  END  END  END END  FETCH FIRST FROM scCurrPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  CLOSE scCurrPriceListGroup DEALLOCATE scCurrPriceListGroup  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'  BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100), @loIN_DecPlaces)  END  RETURN 0 END ELSE BEGIN  SELECT @loST_CP_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CP_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CP_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO CurrBaseListGroup END  CurrBaseListGroup:  DECLARE scCurrBaseListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM  FROM RM00500 as SL  INNER JOIN SOP10110 as SH  ON SH.PRCSHID = SL.PRCSHID  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SL.PRCSHID  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  WHERE PH.ISBASE = 1  AND SL.PRODTCOD = 'P'  AND SH.ACTIVE = 1  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  AND SW.ITEMNMBR = @piST_ItemNumber  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND  SH.PROMO  = 0  AND SH.CURNCYID = @piST_Currency  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrBaseListGroup  FETCH FIRST FROM scCurrBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrBaseListGroup  DEALLOCATE scCurrBaseListGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50014  END END ELSE BEGIN  FETCH NEXT FROM scCurrBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM  IF @@FETCH_STATUS = 0  BEGIN  IF @loDA_StartDate = @loDA_NextStartDate and @loDA_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrBaseListGroup  DEALLOCATE scCurrBaseListGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50013  END  END  END END  FETCH FIRST FROM scCurrBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  CLOSE scCurrBaseListGroup DEALLOCATE scCurrBaseListGroup  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CP_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CP_Value  END  ELSE IF @loST_CP_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CP_Value / 100),@loIN_DecPlaces)  END  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  RETURN 0 END ELSE BEGIN  IF @loST_ValueType <> ' '  BEGIN  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50012  END  END END  FunctCurrencyRoutines:  SET @poIN_CurrPriceFound = 0  IF @piST_Currency <>  @loST_FUNLCURR BEGIN  IF @loIN_PricesNotReqd = 0  BEGIN  RETURN 50031  END  ELSE  BEGIN  IF @loIN_ConvertFunctPrice = 0  BEGIN  SET @poDE_Price = 0  RETURN 0  END  END END  IF @piST_Currency <>  @loST_FUNLCURR BEGIN  SELECT  @loIN_DecPlaces = DECPLCUR - 1  FROM SOP10108   WHERE PRCGRPID = @piST_ItemNumber END  SET @loST_CS_Type = ' ' SET @loST_CP_Type = ' ' SET @loDE_CS_Value = 0 SET @loDE_CP_Value = 0  IF @piST_SchemeCode IS NULL BEGIN  GOTO PriceListGroup END  SchemeGroup:  DECLARE scSchemeGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM  FROM SOP10110 as SH  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SH.PRCSHID  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SH.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  WHERE SH.PRCSHID = @piST_SchemeCode  AND SH.ACTIVE = 1  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  AND SW.ITEMNMBR = @piST_ItemNumber  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scSchemeGroup  FETCH FIRST FROM scSchemeGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scSchemeGroup  DEALLOCATE scSchemeGroup  GOTO PriceListGroup END ELSE BEGIN  FETCH NEXT FROM scSchemeGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM  IF @@FETCH_STATUS = 0  BEGIN  IF @loDA_StartDate = @loDA_NextStartDate and @loDA_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scSchemeGroup  DEALLOCATE scSchemeGroup  RETURN 50015  END  END END  FETCH FIRST FROM scSchemeGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  CLOSE scSchemeGroup DEALLOCATE scSchemeGroup  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  RETURN 0 END ELSE BEGIN  SELECT @loST_CS_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CS_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CS_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO PriceListGroup END  PriceListGroup:  IF @piST_PriceListCode IS NULL BEGIN  GOTO BaseListGroup END  DECLARE scPriceListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM  FROM  RM00500 as SL  INNER JOIN SOP10110 as SH  ON SH.PRCSHID = SL.PRCSHID  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SL.PRCSHID  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  WHERE SL.PRODTCOD = 'P'  AND SL.LINKCODE = @piST_PriceListCode  AND SH.ACTIVE = 1  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  AND SW.ITEMNMBR = @piST_ItemNumber  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND  SH.PROMO  = 0  AND SH.CURNCYID = @loST_FUNLCURR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scPriceListGroup  FETCH FIRST FROM scPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scPriceListGroup  DEALLOCATE scPriceListGroup  GOTO BaseListGroup END ELSE BEGIN  FETCH NEXT FROM scPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM  IF @@FETCH_STATUS = 0  BEGIN  IF @loDA_StartDate = @loDA_NextStartDate and @loDA_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scPriceListGroup  DEALLOCATE scPriceListGroup  RETURN 50011  END  END END  FETCH FIRST FROM scPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  CLOSE scPriceListGroup DEALLOCATE scPriceListGroup  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'  BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100), @loIN_DecPlaces)  END  RETURN 0 END ELSE BEGIN  SELECT @loST_CP_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CP_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CP_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO BaseListGroup END  BaseListGroup:  DECLARE scBaseListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM  FROM RM00500 as SL  INNER JOIN SOP10110 as SH  ON SH.PRCSHID = SL.PRCSHID  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SL.PRCSHID  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  WHERE PH.ISBASE = 1  AND SL.PRODTCOD = 'P'  AND SH.ACTIVE = 1  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  AND SW.ITEMNMBR = @piST_ItemNumber  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND  SH.PROMO  = 0  AND SH.CURNCYID = @loST_FUNLCURR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scBaseListGroup  FETCH FIRST FROM scBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scBaseListGroup  DEALLOCATE scBaseListGroup  RETURN 50014 END ELSE BEGIN  FETCH NEXT FROM scBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM  IF @@FETCH_STATUS = 0  BEGIN  IF @loDA_StartDate = @loDA_NextStartDate and @loDA_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scBaseListGroup  DEALLOCATE scBaseListGroup  RETURN 50013  END  END END  FETCH FIRST FROM scBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_StartDate,  @loDA_EndDate,  @loST_BaseUofM  CLOSE scBaseListGroup DEALLOCATE scBaseListGroup  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CP_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CP_Value  END  ELSE IF @loST_CP_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CP_Value / 100),@loIN_DecPlaces)  END  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  RETURN 0 END ELSE BEGIN  IF @loST_ValueType <> ' '  BEGIN  RETURN 50012  END END    
GO
GRANT EXECUTE ON  [dbo].[sopExtPricingGetPriceForPriceBookGroup] TO [DYNGRP]
GO

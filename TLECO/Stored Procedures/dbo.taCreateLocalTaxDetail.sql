SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateLocalTaxDetail]  @I_vLOCALTAX char(6),    @I_vTXBRULMT numeric(19,5)=0,   @I_vTXBRKTAM numeric(19,5)=0,   @I_vRXBRKTRT numeric(19,5)=0,   @I_vTXBREXWG numeric(19,5)=0,   @I_vRequesterTrx smallint=0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare @TXTBLSEQ int ,      @TXBRULMT numeric(19,5),    @iCustomState int,  @iStatus int,  @O_oErrorState int,  @nNextNoteIndex int,     @iGetNextNoteIdxErrState int,    @iError int,      @DBName char(50),     @iAddCodeErrState int  select @TXTBLSEQ = 1,      @TXBRULMT = 0,      @O_iErrorState = 0,     @O_oErrorState = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateLocalTaxDetailPre  @I_vLOCALTAX output,  @I_vTXBRULMT output,  @I_vTXBRKTAM output,  @I_vRXBRKTRT output,  @I_vTXBREXWG output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString  output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 1145    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vLOCALTAX is NULL or  @I_vTXBRULMT is NULL or  @I_vTXBRKTAM is NULL or  @I_vRXBRKTRT is NULL or  @I_vTXBREXWG is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 1146    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vLOCALTAX = UPPER(@I_vLOCALTAX)  select @TXTBLSEQ = TXTBLSEQ + 1 from UPR41401 (nolock) where LOCALTAX = @I_vLOCALTAX  if ( @I_vLOCALTAX = '' ) begin  select @O_iErrorState = 1147    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vLOCALTAX <> '' ) begin  if (not exists (select 1 from UPR41400 (nolock) where LOCALTAX = @I_vLOCALTAX ))  begin  select @O_iErrorState = 1148    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vTXBRULMT < 0 )  begin  select @O_iErrorState = 1149     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vTXBREXWG < 0 )  begin  select @O_iErrorState = 1150     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vTXBREXWG > @I_vTXBRULMT )  begin  select @O_iErrorState = 1153     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @TXTBLSEQ >= 2 ) begin  select @TXBRULMT = max(TXBRULMT) from UPR41401 (nolock) where LOCALTAX = @I_vLOCALTAX end  if ( @TXBRULMT > @I_vTXBRULMT )  begin  select @O_iErrorState = 1154     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 6238      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  if not exists(select 1 from UPR41401 where LOCALTAX = @I_vLOCALTAX and TXTBLSEQ = @TXTBLSEQ ) begin  insert UPR41401(  LOCALTAX,  TXTBLSEQ,  TXBRULMT,  TXBRKTAM,  RXBRKTRT,  TXBREXWG  )  select  @I_vLOCALTAX,    @TXTBLSEQ,    @I_vTXBRULMT,    @I_vTXBRKTAM,    @I_vRXBRKTRT * 100000,   @I_vTXBREXWG    if (@@error <> 0)  begin  select @O_iErrorState = 1155    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end else begin  select @O_iErrorState = 1156    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateLocalTaxDetailPost  @I_vLOCALTAX,  @I_vTXBRULMT,  @I_vTXBRKTAM,  @I_vRXBRKTRT,   @I_vTXBREXWG,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString  output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 1157    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateLocalTaxDetail] TO [DYNGRP]
GO

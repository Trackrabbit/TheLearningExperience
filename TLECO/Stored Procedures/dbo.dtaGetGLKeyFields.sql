SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 create procedure [dbo].[dtaGetGLKeyFields]  @I_sDTAGLStatus smallint = NULL,  @I_nRecurringTrxSeq numeric(19,5) = NULL,  @I_iSequenceNumber int  = NULL,  @I_iOrigSequenceNumber int  = NULL,  @I_cOrigDocumentNumber char(21) = NULL,  @I_cOrigControlNumber char(21) = NULL,  @I_sOrigTrxType smallint = NULL,  @I_cOrigTrxSource char(13) = NULL,  @I_sSeries smallint = NULL,  @I_sOrigDTASeries smallint = NULL,  @I_sPostingStatus smallint = NULL,  @I_nDTAIndex Numeric(19,5) = NULL,  @O_sDTASeries smallint = NULL output,  @O_cDTAReference char(25) = NULL output,  @O_nSequenceLine Numeric(19,5) = NULL output,  @O_cDTAGLReference char(25) = NULL output,  @O_cDocumentNumber char(21) = NULL output,  @O_sDocumentType smallint = NULL output,  @O_iErrorState int  = NULL  output as  declare  @TRUE tinyint,  @FALSE tinyint,  @FINANCIAL smallint,  @SALES smallint,  @PURCHASING smallint,  @WORK smallint,  @SUMMARY_CHECKED smallint,  @REVERSING_CHECKED smallint,  @RECURRING_CHECKED smallint,  @UNREGISTERED_CHECKED smallint,  @vOrigControlNumber varchar(25),  @tReversing tinyint,  @tLoop tinyint,  @iStatus int,  @iError int  select   @O_sDTASeries  = 0,  @O_cDTAReference = '',  @O_nSequenceLine = 0.00,  @O_cDTAGLReference = '',  @O_cDocumentNumber = '',  @O_sDocumentType = 0,  @O_iErrorState  = 0,  @iStatus  = 0  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_sDTAGLStatus is NULL or  @I_nRecurringTrxSeq is NULL or  @I_iSequenceNumber is NULL or  @I_iOrigSequenceNumber is NULL or  @I_sSeries is NULL or  @I_sOrigDTASeries is NULL or  @I_sPostingStatus is NULL or  @I_nDTAIndex is NULL or  @I_cOrigDocumentNumber is NULL or  @I_cOrigControlNumber is NULL or  @I_sOrigTrxType is NULL or  @I_cOrigTrxSource is NULL  begin  select @O_iErrorState = 20981  break  end    select  @TRUE   = 1,  @FALSE   = 0,  @FINANCIAL  = 2,  @SALES   = 3,  @PURCHASING  = 4,  @WORK   = 1,  @SUMMARY_CHECKED = 1,  @REVERSING_CHECKED = 2,  @RECURRING_CHECKED = 4,  @UNREGISTERED_CHECKED = 8   if (@I_sDTAGLStatus & @REVERSING_CHECKED) = @REVERSING_CHECKED  select @tReversing = @TRUE  else  select @tReversing = @FALSE   if (@I_sDTAGLStatus & @SUMMARY_CHECKED) = @SUMMARY_CHECKED  begin  if @I_sPostingStatus = @WORK  begin  exec @iStatus = dtaGetFinancialRef  @I_nDTAIndex,  @FALSE,  0.00,  @O_cDTAGLReference output,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @O_sDTASeries = @I_sOrigDTASeries  end   else   begin  if (@I_sDTAGLStatus & @RECURRING_CHECKED) = @RECURRING_CHECKED  begin  exec @iStatus = dtaGetFinancialRef  @I_nDTAIndex,  @tReversing,  @I_nRecurringTrxSeq,  @O_cDTAGLReference output,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @O_sDTASeries = @FINANCIAL  end   else   begin  exec @iStatus = dtaGetFinancialRef  @I_nDTAIndex,  @tReversing,  0.00,  @O_cDTAGLReference output,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   if @tReversing = @TRUE  select @O_sDTASeries = @FINANCIAL  else  select @O_sDTASeries = @I_sOrigDTASeries  end  end     end    else   begin  if (@I_sDTAGLStatus & @RECURRING_CHECKED) = @RECURRING_CHECKED  begin  exec @iStatus = dtaGetFinancialRef  @I_nDTAIndex,  @tReversing,  @I_nRecurringTrxSeq,  @O_cDTAReference output,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @O_sDTASeries = @FINANCIAL  select @O_nSequenceLine = @I_iSequenceNumber   if @I_iOrigSequenceNumber <> 0  begin  if @I_sSeries = @SALES  select  @O_cDocumentNumber = @I_cOrigDocumentNumber,  @O_sDocumentType = @I_sOrigTrxType   else if @I_sSeries = @PURCHASING  select  @O_cDocumentNumber = @I_cOrigControlNumber,  @O_sDocumentType = 0   else  select  @O_cDocumentNumber = @I_cOrigControlNumber,  @O_sDocumentType = @I_sOrigTrxType  end   end     else   begin  if (@I_iOrigSequenceNumber = 0) or   ((@I_sDTAGLStatus & @UNREGISTERED_CHECKED) = @UNREGISTERED_CHECKED) or  ((@I_sDTAGLStatus & @REVERSING_CHECKED) = @REVERSING_CHECKED)  begin  select @O_sDTASeries = @FINANCIAL   if @I_sPostingStatus = @WORK  begin  exec @iStatus = dtaGetFinancialRef  @I_nDTAIndex,  @FALSE,  0.00,  @O_cDTAReference output,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @O_nSequenceLine = @I_iSequenceNumber  end   else    begin  exec @iStatus = dtaGetFinancialRef  @I_nDTAIndex,  @tReversing,  0.00,  @O_cDTAReference output,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @O_nSequenceLine = @I_iSequenceNumber  end   end   else    begin  select @vOrigControlNumber = @I_cOrigControlNumber   if @I_sSeries = @SALES  select  @O_cDocumentNumber = @I_cOrigDocumentNumber,  @O_sDocumentType = @I_sOrigTrxType,  @O_cDTAReference = rtrim(@vOrigControlNumber) +  replicate(' ',(20 - len(@vOrigControlNumber))) +  ltrim(str(@I_sOrigTrxType))   else if @I_sSeries = @PURCHASING  select  @O_cDocumentNumber = @I_cOrigControlNumber,  @O_sDocumentType = 0,  @O_cDTAReference = rtrim(@vOrigControlNumber) +  replicate(' ',(20 - len(@vOrigControlNumber))) + ltrim(str(0))  else  select  @O_cDocumentNumber = @I_cOrigControlNumber,  @O_sDocumentType = @I_sOrigTrxType,  @O_cDTAReference = rtrim(@vOrigControlNumber) +  replicate(' ',(20 - len(@vOrigControlNumber))) +  ltrim(str(@I_sOrigTrxType))   select  @O_sDTASeries  = @I_sOrigDTASeries,  @O_nSequenceLine = @I_iOrigSequenceNumber  end   end     end    end   return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[dtaGetGLKeyFields] TO [DYNGRP]
GO

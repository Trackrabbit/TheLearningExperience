SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[slp_DYN_FUNC_Workflow_Approval_Status] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlaccessstring varchar(400),  @I_iDictID int, @I_sFunctionName varchar(100), @I_iFunctionEnum int, @Not_Submitted varchar(255), @Submitted varchar(255), @Not_Needed varchar(255), @Pending_Approval varchar(255), @Pending_Changes varchar(255), @Approved varchar(255), @Rejected varchar(255), @Ended varchar(255), @Not_Enabled varchar(255), @Disabled varchar(255)  select @I_iDictID = 0 select @I_sFunctionName = 'DYN_FUNC_Workflow_Approval_Status' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Not_Submitted output select @I_iFunctionEnum = 2 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Submitted output select @I_iFunctionEnum = 3 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Not_Needed output select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Pending_Approval output select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Pending_Changes output select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Approved output select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Rejected output select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Ended output select @I_iFunctionEnum = 9 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Not_Enabled output select @I_iFunctionEnum = 10 exec DYNAMICS..smGetBIEnumString @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Disabled output  select @sqldropstring =  'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[DYN_FUNC_Workflow_Approval_Status]'') and xtype in (N''FN'',N''IF'',N''TF'')) ' +  'drop function [dbo].[DYN_FUNC_Workflow_Approval_Status] '  select @sqlstring1 =  'create function [dbo].[DYN_FUNC_Workflow_Approval_Status] (@iIntEnum integer) returns varchar(100) ' +  'as  '+ 'begin  '+ 'declare @oVarcharValuestring varchar(100) ' + 'set @oVarcharValuestring = ' + 'case ' +  ' when @iIntEnum = 1 then ''' + @Not_Submitted + '''' +  ' when @iIntEnum = 2 then ''' + @Submitted + '''' +  ' when @iIntEnum = 3 then ''' + @Not_Needed + '''' +  ' when @iIntEnum = 4 then ''' + @Pending_Approval + '''' +  ' when @iIntEnum = 5 then ''' + @Pending_Changes + '''' +  ' when @iIntEnum = 6 then ''' + @Approved + '''' +  ' when @iIntEnum = 7 then ''' + @Rejected + '''' +  ' when @iIntEnum = 8 then ''' + @Ended + '''' +  ' when @iIntEnum = 9 then ''' + @Not_Enabled + '''' +  ' when @iIntEnum = 10 then ''' + @Disabled + '''' +  ' else '''' ' +  ' end ' +  ' RETURN(@oVarcharValuestring) ' +  ' END '  exec (@sqldropstring)  exec (@sqlstring1)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[slp_DYN_FUNC_Workflow_Approval_Status] TO [DYNGRP]
GO

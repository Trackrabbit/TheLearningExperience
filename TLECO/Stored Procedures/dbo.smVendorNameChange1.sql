SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smVendorNameChange1]  @I_charStartVendor 	char(20),  @I_charEndVendorName 	char(64),  @O_iErrorState 		int = NULL  output with encryption as set transaction isolation level read uncommitted set nocount on declare  @DBNAME  	char(25), @DBID 		smallint, @VENDORNAME 	char (255), @tTransaction	tinyint, @tLoop		tinyint, @iStatus	int, @cStartVendor	char(50), @cEndVendorName	char(80) select @DBNAME = DB_NAME() select @DBID = CMPANYID from DYNAMICS..SY01500 where INTERID = @DBNAME exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charStartVendor, @O_cOutputString = @cStartVendor output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 90 return end exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charEndVendorName, @O_cOutputString = @cEndVendorName output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 91 return end select 	@O_iErrorState 	 = 0 if @@trancount = 0    begin select @tTransaction = 1 begin transaction end while ( @tLoop is NULL ) begin select @tLoop = 1 if	@I_charStartVendor	is NULL or @I_charEndVendorName	is NULL or @cStartVendor		is NULL or @cEndVendorName		is NULL begin select @O_iErrorState = 1		 break end  if exists (select * from sysobjects where id = object_id('dbo.taVendorInsert')) alter table PM00200 disable trigger taVendorInsert if @@error <> 0  begin select @O_iErrorState = 2	 break end  if exists (select * from sysobjects where id = object_id('dbo.taVendorAddressInsert')) alter table PM00300 disable trigger taVendorAddressInsert if @@error <> 0  begin select @O_iErrorState = 3	 break end  declare ta_VDMCursor insensitive CURSOR for select 'update '+o.name+' set VENDNAME =' + rtrim(@cEndVendorName) + ' where VENDORID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'VENDNAME' and o.name in (select o.name from sysobjects o, syscolumns c where o.id = c.id and o.type = 'U' and c.name = 'VENDORID') order by o.name set nocount on OPEN ta_VDMCursor FETCH NEXT FROM ta_VDMCursor INTO @VENDORNAME WHILE (@@FETCH_STATUS <> -1) begin exec (@VENDORNAME) if @@error <> 0  begin select @O_iErrorState = 4	 break end  FETCH NEXT FROM ta_VDMCursor INTO @VENDORNAME end DEALLOCATE ta_VDMCursor if @O_iErrorState <> 0 break update a set ORMSTRNM = @I_charEndVendorName from GL10001 a, GL10000 b where 	a.ORMSTRID = @I_charStartVendor and a.JRNENTRY = b.JRNENTRY and b.SERIES = 4 if @@error <> 0  begin select @O_iErrorState = 5	 break end update GL20000 set ORMSTRNM = @I_charEndVendorName where ORMSTRID = @I_charStartVendor and SERIES = 4 if @@error <> 0  begin select @O_iErrorState = 6	 break end update GL30000 set ORMSTRNM = @I_charEndVendorName where ORMSTRID = @I_charStartVendor and SERIES = 4 if @@error <> 0  begin select @O_iErrorState = 7	 break end update PJOURNAL set ORMSTRNM = @I_charEndVendorName where ORMSTRID = @I_charStartVendor if @@error <> 0  begin select @O_iErrorState = 8	 break end  declare ta_VDMCursor insensitive CURSOR for select 'update '+o.name+' set VNDCHKNM =' + rtrim(@cEndVendorName) + ' where VENDORID = ' + rtrim(@cStartVendor)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'VNDCHKNM'  order by o.name set nocount on OPEN ta_VDMCursor FETCH NEXT FROM ta_VDMCursor INTO @VENDORNAME WHILE (@@FETCH_STATUS <> -1) begin exec (@VENDORNAME) if @@error <> 0  begin select @O_iErrorState = 9	 break end  FETCH NEXT FROM ta_VDMCursor INTO @VENDORNAME end DEALLOCATE ta_VDMCursor if @O_iErrorState <> 0 break if exists (select * from sysobjects where id = object_id('dbo.RFQ00100') and sysstat & 0xf = 3) begin update RFQ00100 set VENDNAME = @I_charEndVendorName where VNDID = @I_charStartVendor if @@error <> 0  begin select @O_iErrorState = 10	 break end end if exists (select * from sysobjects where id = object_id('dbo.RFQ20100') and sysstat & 0xf = 3) begin update RFQ20100 set VENDNAME = @I_charEndVendorName where VNDID = @I_charStartVendor if @@error <> 0  begin select @O_iErrorState = 11	 break end end if exists (select * from sysobjects where id = object_id('dbo.RFQ30100') and sysstat & 0xf = 3) begin update RFQ30100 set VENDNAME = @I_charEndVendorName where VNDID = @I_charStartVendor if @@error <> 0  begin select @O_iErrorState = 12	 break end end if exists (select * from sysobjects where id = object_id('dbo.LC00100') and sysstat & 0xf = 3) begin update LC00100 set VENDNAME = @I_charEndVendorName where LCVENDORID = @I_charStartVendor if @@error <> 0  begin select @O_iErrorState = 13	 break end end update PM00200 set VENDSHNM = substring(@I_charEndVendorName, 1, 15) where VENDORID = @I_charStartVendor  if @@error <> 0  begin select @O_iErrorState = 14	 break end  update CM20200 set paidtorcvdfrom = @I_charEndVendorName where CMLinkID = @I_charStartVendor  if @@error <> 0  begin select @O_iErrorState = 15	 break end  end  if exists (select * from sysobjects where id = object_id('dbo.taVendorInsert')) alter table PM00200 enable trigger taVendorInsert if @@error <> 0  begin select @O_iErrorState = 16	 end if exists (select * from sysobjects where id = object_id('dbo.taVendorAddressInsert')) alter table PM00300 enable trigger taVendorAddressInsert if @@error <> 0  begin select @O_iErrorState = 17	 end if @O_iErrorState <> 0 begin if @tTransaction = 1 rollback transaction end else if @tTransaction = 1 begin commit transaction end return  
GO
GRANT EXECUTE ON  [dbo].[smVendorNameChange1] TO [DYNGRP]
GO

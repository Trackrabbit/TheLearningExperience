SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE procedure [dbo].[glpgetICDists]  @iNewJrnlEntry int  = NULL,  @iCopyJrnlEntry int  = NULL,  @iOrigCompanyID VARCHAR(5) = '',  @SQNCLINE1 numeric(19,5),  @iDecimalPlaces smallint = NULL,  @iRevDistFlag smallint = NULL,  @iTrxSource varchar(13) = Null as  BEGIN  declare  @lControlLoop tinyint,  @BACKOUT tinyint,  @lReturnStatus int,  @SqlStmt varchar(8000),  @TrxType int = 0,  @ActIndex int,  @lPostingType smallint,  @lDecPlaces smallint,  @lAcctType smallint,  @SEQ int,  @CompanyID varchar(5) = DB_NAME()   if exists(select 1 from ##ICDISTTEMP)  select @SQNCLINE1 = MAX(SQNCLINE) + 500 from ##ICDISTTEMP  else  select @SQNCLINE1 = @SQNCLINE1 + 500  INSERT INTO ##ICDISTTEMP (ROWNUMB,BACHNUMB,JRNENTRY,SQNCLINE,ACTINDX,XCHGRATE,DSCRIPTN,GLLINMSG,GLLINMS2,  CURRNIDX,GLLINVAL,ACCTTYPE,FXDORVAR,BALFRCLC,PSTNGTYP,DECPLACS,ORCTRNUM,ORDOCNUM,ORMSTRID,  ORMSTRNM,ORTRXTYP,OrigSeqNum,ORTRXDESC,DTA_GL_Status,INTERID,RATETPID,EXGTBLID,  EXCHDATE,TIME1,RTCLCMTD,CRDTAMNT,DEBITAMT,ORCRDAMT,ORDBTAMT,DENXRATE,MCTRXSTT,  LNESTAT,CorrespondingUnit)   SELECT   (SELECT isnull(MAX(ROWNUMB),0) FROM ##ICDISTTEMP) + ROW_NUMBER () OVER( ORDER BY A.SQNCLINE), A.BACHNUMB, @iNewJrnlEntry, A.SQNCLINE,  A.ACTINDX , A.XCHGRATE, A.DSCRIPTN, A.GLLINMSG, A.GLLINMS2, A.CURRNIDX,  A.GLLINVAL, A.ACCTTYPE, A.FXDORVAR, A.BALFRCLC, A.PSTNGTYP, A.DECPLACS, A.ORCTRNUM, A.ORDOCNUM, A.ORMSTRID,  A.ORMSTRNM, A.ORTRXTYP, A.OrigSeqNum, A.ORTRXDESC, A.DTA_GL_Status, @CompanyID, A.RATETPID, A.EXGTBLID,  A.EXCHDATE, A.TIME1, A.RTCLCMTD,   CASE @iRevDistFlag when 1 then A.DEBITAMT when 2 then A.CRDTAMNT end,   CASE @iRevDistFlag when 1 then A.CRDTAMNT when 2 then A.DEBITAMT end,  CASE @iRevDistFlag when 1 then A.ORDBTAMT when 2 then A.ORCRDAMT end,   CASE @iRevDistFlag when 1 then A.ORCRDAMT when 2 then A.ORDBTAMT end,  A.DENXRATE,A.MCTRXSTT,  5, A.CorrespondingUnit FROM GL10001 A, GL10000 B WHERE   (A.JRNENTRY = B.JRNENTRY) and (B.ORIGINJE = @iCopyJrnlEntry) and (B.ORCOMID = @iOrigCompanyID) and ORTRXSRC = @iTrxSource   UNION   SELECT   (SELECT isnull(MAX(ROWNUMB),0) FROM ##ICDISTTEMP) + ROW_NUMBER () OVER( ORDER BY A.SEQNUMBR),'', @iNewJrnlEntry, A.SEQNUMBR,  A.ACTINDX , A.XCHGRATE, A.DSCRIPTN, 0,0,(select FUNCRIDX from MC40000),   0,0,0,0,0,0, A.ORCTRNUM, A.ORDOCNUM, A.ORMSTRID,   A.ORMSTRNM, A.ORTRXTYP, A.OrigSeqNum, '', A.DTA_GL_Status, @CompanyID , A.RATETPID, A.EXGTBLID,   A.EXCHDATE, A.TIME1, A.RTCLCMTD,   CASE @iRevDistFlag when 1 then A.DEBITAMT when 2 then A.CRDTAMNT end,   CASE @iRevDistFlag when 1 then A.CRDTAMNT when 2 then A.DEBITAMT end,  CASE @iRevDistFlag when 1 then A.ORDBTAMT when 2 then A.ORCRDAMT end,   CASE @iRevDistFlag when 1 then A.ORCRDAMT when 2 then A.ORDBTAMT end,  A.DENXRATE, 0,  5,'' FROM GL20000 A  WHERE (A.ORIGINJE = @iCopyJrnlEntry) AND   (A.ORCOMID = @iOrigCompanyID)  AND (A.SOURCDOC <> 'BBF') AND ORTRXSRC = @iTrxSource AND TRXSORCE NOT LIKE 'ICREV%'  UNION  SELECT   (SELECT isnull(MAX(ROWNUMB),0) FROM ##ICDISTTEMP) + ROW_NUMBER () OVER( ORDER BY A.SEQNUMBR),'', @iNewJrnlEntry, A.SEQNUMBR,   A.ACTINDX, A.XCHGRATE, A.DSCRIPTN, 0,0,(select FUNCRIDX from MC40000),   0,0,0,0,0,0, A.ORCTRNUM, A.ORDOCNUM, A.ORMSTRID,   A.ORMSTRNM, A.ORTRXTYP, A.OrigSeqNum, '' , A.DTA_GL_Status, @CompanyID , A.RATETPID, A.EXGTBLID,   A.EXCHDATE, A.TIME1, A.RTCLCMTD,   CASE @iRevDistFlag when 1 then A.DEBITAMT when 2 then A.CRDTAMNT end,   CASE @iRevDistFlag when 1 then A.CRDTAMNT when 2 then A.DEBITAMT end,  CASE @iRevDistFlag when 1 then A.ORDBTAMT when 2 then A.ORCRDAMT end,   CASE @iRevDistFlag when 1 then A.ORCRDAMT when 2 then A.ORDBTAMT end,   A.DENXRATE, 0,  5,'' FROM GL30000 A WHERE   (A.ORIGINJE = @iCopyJrnlEntry) AND   (A.ORCOMID = @iOrigCompanyID) AND  (A.SOURCDOC <> 'BBF') AND   ORTRXSRC = @iTrxSource AND   TRXSORCE NOT LIKE 'ICREV%'   declare SeqNumbers cursor local for   select ROWNUMB, ACTINDX from ##ICDISTTEMP   open SeqNumbers  fetch next from SeqNumbers into @SEQ, @ActIndex  while @@fetch_status = 0  begin  select @lPostingType = PSTNGTYP, @lDecPlaces = DECPLACS, @lAcctType = ACCTTYPE from GL00100  where  ACTINDX = @ActIndex  if @lAcctType = 1  begin  select @lDecPlaces = @iDecimalPlaces  end  Update ##ICDISTTEMP Set   SQNCLINE = @SQNCLINE1 ,   PSTNGTYP = isnull(@lPostingType,0),  DECPLACS = isnull(@lDecPlaces,0),  ACCTTYPE = isnull(@lAcctType,0)  where ROWNUMB = @SEQ   select @SQNCLINE1 = @SQNCLINE1 + 500   fetch next from SeqNumbers into @SEQ, @ActIndex  end  deallocate SeqNumbers END    
GO
GRANT EXECUTE ON  [dbo].[glpgetICDists] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpVerifyBatch]  @I_iSQLSessionID        int             = NULL,  @I_cBatchSource         char(15)        = NULL,  @I_cBatchNumber         char(15)        = NULL,  @I_cTransactionSource   char(25)        = NULL,  @I_sOrigin              smallint        = NULL,  @I_tBatchApproval       tinyint         = NULL,  @I_mActualBatchTotal    numeric(19,5)     = NULL,  @I_mControlBatchTotal   numeric(19,5)     = NULL,  @I_iActualNumberOfTRX   int             = NULL,  @I_iControlNumberOfTRX  int             = NULL,  @I_tMCRegistered        tinyint         = NULL,  @I_cCurrencyID          char(15)        = NULL,  @I_sCompanyID           smallint        = NULL,  @IO_bBatchMessages1 binary(4) = NULL output,  @IO_bBatchMessages2 binary(4) = NULL output,  @O_iErrorState          int             = NULL  output as  declare  @TRUE                           tinyint,   @FALSE                          tinyint,  @NORMAL_TRX                     smallint,  @FINANCIAL                      smallint,  @MS_ITEM_12                     int,  @MS_ITEM_13                     int,  @MS_ITEM_14                     int,  @MS_ITEM_15                     int,  @MS_ITEM_25                     int,  @DEFAULT_DATE                   datetime,  @tRequireBatchApproval          tinyint,  @tVerifyBatchTotal              tinyint,  @tVerifyTransactionTotal        tinyint,  @tTransaction                   int,  @tInactive                      tinyint,  @tLoop                          tinyint  select  @O_iErrorState = 0  select  @TRUE                   = 1,  @FALSE                  = 0,  @NORMAL_TRX             = 1,  @FINANCIAL              = 2,  @MS_ITEM_12             = power(2,19),  @MS_ITEM_13             = power(2,20),  @MS_ITEM_14             = power(2,21),  @MS_ITEM_15             = power(2,22),  @MS_ITEM_25             = power(2,0)  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin   select @tLoop = 1   if      @I_iSQLSessionID        is NULL or  @I_cBatchSource         is NULL or  @I_cBatchNumber         is NULL or  @I_tBatchApproval       is NULL or  @I_mActualBatchTotal    is NULL or  @I_mControlBatchTotal   is NULL or  @I_iActualNumberOfTRX   is NULL or  @I_iControlNumberOfTRX  is NULL or  @I_sOrigin              is NULL or  @I_tMCRegistered        is NULL or  @I_cCurrencyID          is NULL or  @I_sCompanyID           is NULL or  @IO_bBatchMessages1 is NULL or  @IO_bBatchMessages2 is NULL or  @I_cTransactionSource   is NULL  begin  select @O_iErrorState = 20720  break  end    if @I_tMCRegistered = @TRUE  begin      if not exists(  select   1  from  MC40000 )  begin    select @IO_bBatchMessages2 = (@IO_bBatchMessages2 | @MS_ITEM_12)   end    else   begin  if not exists(  select   1  from  DYNAMICS..MC40200  where  CURNCYID = @I_cCurrencyID )   begin    select @IO_bBatchMessages2 = (@IO_bBatchMessages2 | @MS_ITEM_13)   end    select   @tInactive = INACTIVE  from  DYNAMICS..MC60100  where   CURNCYID = @I_cCurrencyID  and     CMPANYID = @I_sCompanyID   if @@rowcount <> 1  begin  select @IO_bBatchMessages2 = (@IO_bBatchMessages2 | @MS_ITEM_14)   end     else if @tInactive = @TRUE  begin    select @IO_bBatchMessages2 = (@IO_bBatchMessages2 | @MS_ITEM_15)   end    end    end        select  @tRequireBatchApproval          = REQBAPRV,  @tVerifyBatchTotal              = VERBATOT,  @tVerifyTransactionTotal        = VERTRX  from  SY02300  where  SERIES          = @FINANCIAL  and     TRXSOURC        = @I_cTransactionSource  if @@rowcount <> 1  begin  select @O_iErrorState = 20721  break  end   if (@tRequireBatchApproval = @TRUE) and  (@I_tBatchApproval = @FALSE)  select @IO_bBatchMessages1 = (@IO_bBatchMessages1 | @MS_ITEM_12)   if (@I_sOrigin = @NORMAL_TRX) and  (@tVerifyBatchTotal = @TRUE) and  (@I_mActualBatchTotal <> @I_mControlBatchTotal)  select @IO_bBatchMessages1 = (@IO_bBatchMessages1 | @MS_ITEM_13)   if (@tVerifyTransactionTotal = @TRUE) and  (@I_iActualNumberOfTRX <> @I_iControlNumberOfTRX)  select @IO_bBatchMessages1 = (@IO_bBatchMessages1 | @MS_ITEM_25)  end   if @O_iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return    
GO
GRANT EXECUTE ON  [dbo].[glpVerifyBatch] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateEmployeeDeductionBasedOnPayCodes] @I_vEMPLOYID char(15),    @I_vDEDUCTON char(6),    @I_vBSDONCDE char(30),    @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @BSDORCDS smallint,     @sCompanyID int,  @iStatus int,  @nNextNoteIndex int,     @iGetNextNoteIdxErrState int,    @iAddCodeErrState int  select  @BSDORCDS = 0,  @O_iErrorState = 0,     @sCompanyID = CMPANYID from DYNAMICS..SY01500 where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  if (  @I_vEMPLOYID is NULL or  @I_vDEDUCTON is NULL or  @I_vBSDONCDE is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 4167    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vEMPLOYID = UPPER(@I_vEMPLOYID),  @I_vDEDUCTON = UPPER(@I_vDEDUCTON),  @I_vBSDONCDE = UPPER(@I_vBSDONCDE)  if ( @I_vEMPLOYID = '' ) begin  select @O_iErrorState = 4168    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID <> '') begin  if (not exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID ))  begin  select @O_iErrorState = 4169    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vDEDUCTON = '' ) begin  select @O_iErrorState = 4170    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vDEDUCTON <> '' ) begin  if (not exists (select 1 from UPR40900 (nolock) where DEDUCTON = @I_vDEDUCTON ))  begin  select @O_iErrorState = 2047    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vBSDONCDE = '' ) begin  select @O_iErrorState = 4171    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vBSDONCDE <> '' ) begin  if (not exists (select 1 from UPR40600 (nolock) where PAYRCORD = @I_vBSDONCDE ))  begin  select @O_iErrorState = 4172    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vDEDUCTON <> '' ) begin  if (not exists (select 1 from UPR00500 (nolock) where EMPLOYID = @I_vEMPLOYID and DEDUCTON = @I_vDEDUCTON))  begin  select @O_iErrorState = 4173    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vDEDUCTON <> '' and @I_vBSDONCDE <> '' ) begin  select @BSDORCDS = BSDORCDS from UPR00500 (nolock) where EMPLOYID = @I_vEMPLOYID and DEDUCTON = @I_vDEDUCTON   if ( @BSDORCDS = 0 )  begin  select @O_iErrorState = 4174    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 6237      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if not exists( select 1 from UPR00501 (nolock) where EMPLOYID = @I_vEMPLOYID and DEDUCTON = @I_vDEDUCTON and BSDONCDE = @I_vBSDONCDE )  begin  insert UPR00501(  EMPLOYID,  DEDUCTON,  BSDONCDE  )  select  @I_vEMPLOYID,   @I_vDEDUCTON,   @I_vBSDONCDE   if @@error <> 0  begin  select @O_iErrorState = 2048    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 2049    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateEmployeeDeductionBasedOnPayCodes] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taBRBankTransactionDist]  @I_vOption smallint,    @I_vACTNUMST varchar(75),   @I_vDEBITAMT numeric(19,5) = 0,   @I_vCRDTAMNT numeric(19,5) = 0,   @I_vDistRef char(30) = '',   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @iError int,  @O_oErrorState int,  @ACTINDX int,  @CMDNUMWK numeric(19,5),  @sessionid int,  @DSTSQNUM int  select  @O_iErrorState = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @iError = 0,  @O_oErrorState = 0,  @ACTINDX = 0,  @CMDNUMWK = 0,  @sessionid = 0,  @DSTSQNUM = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taBRBankTransactionDistPre  @I_vOption output,  @I_vACTNUMST output,  @I_vDEBITAMT output,  @I_vCRDTAMNT output,  @I_vDistRef output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7629   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vOption is null or  @I_vACTNUMST is null or  @I_vDEBITAMT is null or  @I_vCRDTAMNT is null or  @I_vDistRef is null or  @I_vRequesterTrx is null or  @I_vUSRDEFND1 is null or  @I_vUSRDEFND2 is null or  @I_vUSRDEFND3 is null or  @I_vUSRDEFND4 is null or  @I_vUSRDEFND5 is null  ) begin  select @O_iErrorState = 7630   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vACTNUMST = UPPER(@I_vACTNUMST)  select @sessionid = @@spid  select @CMDNUMWK = cast(@sessionid as numeric(19,5)) + .999  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 7631   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vOption not in(1,2,3,4)) begin  select @O_iErrorState = 7625   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @ACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  if (@ACTINDX = 0) begin  select @O_iErrorState = 7632   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vOption in (1,2)) begin  select @DSTSQNUM = max(DSTSQNUM) from CM20400 (nolock) where CMDNUMWK = @CMDNUMWK and VOIDED = 0  select @DSTSQNUM = (isnull(@DSTSQNUM,1) + 1) end else begin  if (@I_vOption in (3,4))  begin  select @DSTSQNUM = max(DSTSQNUM) from CM20400 (nolock) where CMDNUMWK = @CMDNUMWK and VOIDED = 1  select @DSTSQNUM = (isnull(@DSTSQNUM,1) + 1)  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  insert CM20400 (  CMDNUMWK,  VOIDED,  DSTSQNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  DistRef,  GLPOSTDT,  ORCRDAMT,  ORDBTAMT  )  select  @CMDNUMWK,    case     when @I_vOption in (1,2)  then 0  else 1  end,  @DSTSQNUM,    @ACTINDX,    @I_vDEBITAMT,    @I_vCRDTAMNT,    @I_vDistRef,    '',     @I_vCRDTAMNT,    @I_vDEBITAMT   if (@@error <> 0) begin  select @O_iErrorState = 7633   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taBRBankTransactionDistPost  @I_vOption,  @I_vACTNUMST,  @I_vDEBITAMT,  @I_vCRDTAMNT,  @I_vDistRef,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7634   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taBRBankTransactionDist] TO [DYNGRP]
GO

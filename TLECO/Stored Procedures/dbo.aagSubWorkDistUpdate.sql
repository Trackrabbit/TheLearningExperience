SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[aagSubWorkDistUpdate]  @aaSubLedgerHdrID int output, @aaSubLedgerDistID int output, @DOCTYPE smallint,  @DOCNUMBR char(20),   @MasterID char(30),      @TableID int,   @SERIES int,   @CURNCYID varchar(15), @CURRNIDX smallint, @RATETPID char(15), @EXGTBLID char(15), @XCHGRATE numeric(19,7), @EXCHDATE datetime, @TIME1 datetime ,  @RTCLCMTD smallint, @DENXRATE numeric(19,7), @MCTRXSTT smallint, @DECPLACS   smallint,  @BalAmt numeric(19,5), @CompanyID int, @SqlSessionID int, @iINTERID char(5), @Post int, @OFFINDX int, @TRXSORCE char(13), @O_iErrorState int = 0 output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  begin   declare @SQNCLINE numeric(19,5),   @ACTINDX int,  @ACCTTYPE smallint,  @FXDORVAR smallint,   @CRDTAMNT numeric(19,5),  @DEBITAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @ORDBTAMT numeric(19,5),   @CorrespondingUnit char(5),   @aaBrowseType smallint,  @ClassID int,  @aaGLWorkAssignID int,  @Cnt int,  @Status   smallint,  @Flag smallint,   @FUNLCURR char(15),  @ORMSTRID char(65),  @DSTSQNUM int,  @INTERID char(5),  @aaSubLedgerAssignID int,  @GLPOSTDT datetime,  @DISTTYPE int,  @iStatus   int,  @iError   int,  @O_oErrorState   int,  @SEQNUMBR int,  @aaOffsetAcct int,  @aaItem char(30),  @aaSiteID char(30),  @aaFromSite char(30),  @aaToSite char(30),  @TRXQTY numeric(19,5),  @sort tinyint,  @aaAcctClassID int,  @aaSetCustID tinyint,  @aaSetVendID tinyint,  @aaSetItemID tinyint,  @aaSetSiteID tinyint  Select  @SQNCLINE  =0,  @ACTINDX  =0,  @ACCTTYPE  =0,  @FXDORVAR  =0,   @CRDTAMNT  =0,  @DEBITAMT  =0,  @ORCRDAMT  =0,  @ORDBTAMT  =0,  @aaBrowseType  =0,  @ClassID  =0,  @aaGLWorkAssignID  =0,   @Cnt     =0,  @Status   =0,  @Flag   =0,  @DSTSQNUM  =0,  @aaSubLedgerAssignID =0,  @CorrespondingUnit ='',  @DISTTYPE   =0,  @iStatus   =0,  @iError   =0,  @O_oErrorState   =0,  @SEQNUMBR  =0,  @aaOffsetAcct  =0,  @aaItem   ='',  @aaSiteID  ='',  @aaFromSite  ='',  @aaToSite  ='',  @TRXQTY   =0,  @sort = 0,  @aaAcctClassID = 0,  @aaSetCustID = 0,  @aaSetVendID = 0,  @aaSetItemID = 0,  @aaSetSiteID = 0   select @FUNLCURR = FUNLCURR from MC40000  if  (@FUNLCURR = @CURNCYID) or len(rtrim(ltrim(@CURNCYID))) = 0  begin  if @TableID = 20400  begin  update AAG20001 set ORCRDAMT = CRDTAMNT, ORDBTAMT = DEBITAMT where  aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID > 0   end   select @iError = @@error  if @iError <> 0   begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 9451    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  update AAG20002 set ORCRDAMT = CRDTAMNT, ORDBTAMT = DEBITAMT where  aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID > 0  and aaSubLedgerAssignID > 0  select @iError = @@error  if @iError <> 0   begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 9452    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   declare CAADIST  cursor  for  Select aaSubLedgerDistID,ACTINDX,CRDTAMNT,DEBITAMT,ORCRDAMT,ORDBTAMT,SEQNUMBR  from AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID  and  aaSubLedgerDistID > 0  order by SEQNUMBR, aaSubLedgerDistID  open CAADIST  fetch next from CAADIST into @aaSubLedgerDistID,@ACTINDX,  @CRDTAMNT,@DEBITAMT,@ORCRDAMT,@ORDBTAMT,@SEQNUMBR  while @@fetch_status = 0  begin   if @TableID = 20400  begin  Select @Cnt = count(*)  from CM20400 (nolock) where  CMDNUMWK = @DOCNUMBR and DSTSQNUM = @aaSubLedgerDistID and  ACTINDX = @ACTINDX and  CRDTAMNT = @CRDTAMNT and DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT and ORDBTAMT = @ORDBTAMT  end  else  if @TableID = 10101  begin  Select @Cnt = count(*)  from RM10101 (nolock) where   DOCNUMBR = @DOCNUMBR and RMDTYPAL = @DOCTYPE and  SEQNUMBR = @SEQNUMBR and DSTINDX = @ACTINDX and  CRDTAMNT = @CRDTAMNT and DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT and ORDBTAMT = @ORDBTAMT  end  else  if @TableID = 10102  begin  Select @Cnt = count(*)  from SOP10102 (nolock) where   SOPNUMBE = @DOCNUMBR and SOPTYPE = @DOCTYPE and  SEQNUMBR = @SEQNUMBR and ACTINDX = @ACTINDX and  CRDTAMNT = @CRDTAMNT and DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT and ORDBTAMT = @ORDBTAMT   end  else  if @TableID = 10100  begin  Select @Cnt = count(*)  from PM10100 (nolock) where   VCHRNMBR = @DOCNUMBR and DSTSQNUM = @SEQNUMBR and  DSTINDX = @ACTINDX and  CRDTAMNT = @CRDTAMNT and DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT and ORDBTAMT = @ORDBTAMT   end  else  if @TableID = 10390  begin  Select @Cnt = count(*)  from POP10390 (nolock) where   POPRCTNM = @DOCNUMBR and SEQNUMBR = @SEQNUMBR and  ACTINDX = @ACTINDX and  CRDTAMNT = @CRDTAMNT and DEBITAMT = @DEBITAMT and  ORCRDAMT = @ORCRDAMT and ORDBTAMT = @ORDBTAMT   end  else  if @TableID = 10110  begin  Select @Cnt = count(*)  from POP10110 (nolock) where   PONUMBER = @DOCNUMBR and ORD = @SEQNUMBR and  INVINDX = @ACTINDX   end  else  if @TableID = 10001  begin  Select @Cnt = count(*)  from IV10001 (nolock) where   IVDOCNBR = @DOCNUMBR and IVDOCTYP = @DOCTYPE and  LNSEQNBR = @SEQNUMBR and  IVIVINDX = @ACTINDX or IVIVOFIX = @ACTINDX   end  if @Cnt = 0  begin  exec @iStatus = aagSubLedgerDistDelete @aaSubLedgerHdrID, @aaSubLedgerDistID, 0   select @iError = @@error  if @iError <> 0 or @iStatus <> 0  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 8198    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  fetch next from CAADIST  into @aaSubLedgerDistID,@ACTINDX,  @CRDTAMNT,@DEBITAMT,@ORCRDAMT,@ORDBTAMT,@SEQNUMBR  end   close CAADIST  deallocate CAADIST   if @O_iErrorState <> 0  return (@O_iErrorState)   set @Cnt  = 0  if @TableID = 20400  begin   declare CGLWORK cursor for  Select 0,'','','','',DSTSQNUM*16384,a.ACTINDX,b.ACCTTYPE,CRDTAMNT,  DEBITAMT,ORCRDAMT,ORDBTAMT,GLPOSTDT,0, 0  from CM20400 a (nolock), GL00100 b (nolock)   where CMDNUMWK = @DOCNUMBR and DSTSQNUM > 0 and a.ACTINDX = b.ACTINDX  order by CMDNUMWK, DSTSQNUM  end  else  if @TableID = 10101  begin   declare CGLWORK cursor for  Select 0,'','','','',SEQNUMBR,a.DSTINDX,b.ACCTTYPE,CRDTAMNT,  DEBITAMT,ORCRDAMT,ORDBTAMT,POSTEDDT,DISTTYPE, 0  from RM10101 a (nolock), GL00100 b (nolock)   where DOCNUMBR = @DOCNUMBR and RMDTYPAL = @DOCTYPE and a.DSTINDX = b.ACTINDX and TRXSORCE = @TRXSORCE  order by DOCNUMBR, SEQNUMBR  end  else  if @TableID = 10110  begin  declare CGLWORK cursor for  Select 0,'','','','',a.ORD,a.INVINDX,b.ACCTTYPE,0,  EXTDCOST,0,OREXTCST,c.LSTPRTDT,0, 0  from POP10110 a (nolock), GL00100 b (nolock), POP10100 c (nolock)   where a.PONUMBER = @DOCNUMBR and c.PONUMBER = a.PONUMBER and   c.POTYPE = a.POTYPE and a.INVINDX = b.ACTINDX   order by a.PONUMBER, ORD  end  else  if @TableID = 10102  begin   declare CGLWORK cursor for  Select 0,'','','','',SEQNUMBR,a.ACTINDX,b.ACCTTYPE,CRDTAMNT,  DEBITAMT,ORCRDAMT,ORDBTAMT,c.GLPOSTDT,DISTTYPE, 0  from SOP10102 a (nolock), GL00100 b (nolock), SOP10100 c (nolock)  where a.SOPNUMBE = @DOCNUMBR and a.SOPTYPE = @DOCTYPE and a.ACTINDX = b.ACTINDX and a.TRXSORCE = @TRXSORCE and  c.SOPNUMBE = a.SOPNUMBE and c.SOPTYPE = a.SOPTYPE  UNION ALL  Select 0,'','','','',1200,a.INVINDX,b.ACCTTYPE,0,  0,0,0,c.GLPOSTDT,15, 0  from SOP10200 a (nolock), GL00100 b (nolock), SOP10100 c (nolock), AAG00200 d (nolock)  where a.SOPNUMBE = @DOCNUMBR and a.SOPTYPE = @DOCTYPE and a.INVINDX = b.ACTINDX and d.ACTINDX = b.ACTINDX and d.aaAcctClassID <> 0  and a.TRXSORCE = @TRXSORCE and  c.SOPNUMBE = a.SOPNUMBE and c.SOPTYPE = a.SOPTYPE and  a.LNITMSEQ >= 0 and a.CMPNTSEQ = 0 and   a.UNITCOST <> 0   group by a.SOPTYPE, a.SOPNUMBE, a.INVINDX, b.ACCTTYPE, c.GLPOSTDT  UNION ALL  Select 0,'','','','',1200,a.CSLSINDX,b.ACCTTYPE,0,  0,0,0,c.GLPOSTDT,14, 0  from SOP10200 a (nolock), GL00100 b (nolock), SOP10100 c (nolock), AAG00200 d (nolock)  where a.SOPNUMBE = @DOCNUMBR and a.SOPTYPE = @DOCTYPE and a.CSLSINDX = b.ACTINDX and d.ACTINDX = b.ACTINDX and d.aaAcctClassID <> 0  and a.TRXSORCE = @TRXSORCE and  c.SOPNUMBE = a.SOPNUMBE and c.SOPTYPE = a.SOPTYPE and a.LNITMSEQ >= 0 and a.CMPNTSEQ = 0 and   a.UNITCOST <> 0   group by a.SOPTYPE, a.SOPNUMBE, a.CSLSINDX, b.ACCTTYPE, c.GLPOSTDT  end  else  if @TableID = 10100  begin   declare CGLWORK cursor for  Select 0,'','','','',DSTSQNUM,a.DSTINDX,b.ACCTTYPE,CRDTAMNT,  DEBITAMT,ORCRDAMT,ORDBTAMT,a.PSTGDATE,DISTTYPE, 0  from PM10100 a (nolock), GL00100 b (nolock)  where a.VCHRNMBR = @DOCNUMBR and a.DSTINDX = b.ACTINDX and a.TRXSORCE = @TRXSORCE   order by a.VCHRNMBR, a.DSTSQNUM  end  else  if @TableID = 10390  begin   declare CGLWORK cursor for  Select 0,'','','','',a.SEQNUMBR,a.ACTINDX,b.ACCTTYPE,CRDTAMNT,  DEBITAMT,ORCRDAMT,ORDBTAMT,c.GLPOSTDT,a.DISTTYPE, 0  from POP10390 a (nolock), GL00100 b (nolock), POP10300 c (nolock)  where a.POPRCTNM = @DOCNUMBR and a.ACTINDX = b.ACTINDX and a.TRXSORCE = @TRXSORCE   and c.POPRCTNM = a.POPRCTNM  order by a.POPRCTNM, a.SEQNUMBR  end  else   if @TableID = 10001  begin  declare CGLWORK cursor for  Select a.TRXQTY,a.TRXLOCTN,a.TRNSTLOC,a.TRXLOCTN,a.ITEMNMBR,a.LNSEQNBR,a.IVIVINDX,b.ACCTTYPE,0,  0,0,0,c.GLPOSTDT,0, 1 sort  from IV10001 a (nolock),GL00100 b (nolock),   IV10000 c (nolock)  where a.IVDOCNBR = @DOCNUMBR and  a.IVIVINDX = b.ACTINDX   and c.IVDOCNBR = a.IVDOCNBR and   a.IVDOCTYP = @DOCTYPE and c.IVDOCTYP = a.IVDOCTYP  union all  Select a.TRXQTY,a.TRXLOCTN,a.TRNSTLOC,a.TRXLOCTN,a.ITEMNMBR,a.LNSEQNBR,a.IVIVOFIX,b.ACCTTYPE,0,  0,0,0,c.GLPOSTDT,0, 0 sort  from IV10001 a (nolock),GL00100 b (nolock),   IV10000 c (nolock)  where a.IVDOCNBR = @DOCNUMBR and  a.IVIVOFIX = b.ACTINDX   and c.IVDOCNBR = a.IVDOCNBR and c.IVDOCTYP = a.IVDOCTYP and  a.IVDOCTYP = @DOCTYPE order by a.LNSEQNBR, sort desc  end  open CGLWORK  fetch next from CGLWORK into @TRXQTY,@aaFromSite,@aaToSite,@aaSiteID,@aaItem,@DSTSQNUM,@ACTINDX,@ACCTTYPE,  @CRDTAMNT,@DEBITAMT,@ORCRDAMT,@ORDBTAMT,@GLPOSTDT,@DISTTYPE, @sort   while @@fetch_status = 0  begin   Select @Cnt = count(*)  from AAG20001 (nolock)  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  SEQNUMBR = @DSTSQNUM and  aaSubLedgerDistID > 0 and  ACTINDX = @ACTINDX and  DEBITAMT = @DEBITAMT and CRDTAMNT = @CRDTAMNT and  ORDBTAMT = @ORDBTAMT and ORCRDAMT = @ORCRDAMT and  aaOffsetAcct = case when @SERIES = 5 then 1 else aaOffsetAcct end  if @Cnt = 0  begin  if @SERIES = 5 and exists(select 1 from AAG20001 (nolock)  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  SEQNUMBR = @DSTSQNUM and  aaSubLedgerDistID > 0 and aaOffsetAcct = 0)  select @aaOffsetAcct = 1  else  select @aaOffsetAcct = 0   Select @aaSubLedgerDistID = isnull(max(aaSubLedgerDistID),0)+1  from AAG20001 (nolock) where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID > 0  exec @iStatus = aagGetClassIDBrowseType @ACTINDX, @ClassID output, @aaBrowseType output    select @iError = @@error  if @iError <> 0 or @iStatus <> 0  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 9454    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if @ACCTTYPE = 2   begin   set @CURRNIDX  =  3  end   if @aaBrowseType = 0 and @MasterID = ''  begin  set @ORMSTRID = space(1)  end  else  begin  set @ORMSTRID = @MasterID   end   if @RTCLCMTD = -1  select @RTCLCMTD = 0   if @aaSiteID = '' and @DOCTYPE = 1 and @TableID = 10001  select @aaSiteID = @aaFromSite   select @aaAcctClassID = aaAcctClassID from AAG00200 (nolock) where ACTINDX = @ACTINDX  select @aaSetCustID = aaSetCustID,  @aaSetVendID = aaSetVendID,  @aaSetItemID = aaSetItemID,  @aaSetSiteID = aaSetSiteID   from AAG00201 (nolock) where aaAcctClassID = @aaAcctClassID   insert AAG20001  (  aaSubLedgerHdrID,  aaSubLedgerDistID,  INTERID,  CorrespondingUnit,  ACTINDX,   ACCTTYPE,  aaBrowseType,  DECPLACS,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,   ORCRDAMT,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  DENXRATE,  MCTRXSTT,  SEQNUMBR,  aaCustID,  aaVendID,  aaSiteID,  aaItemID,   aaCopyStatus,  aaWinWasOpen,  aaDistErrors,  GLPOSTDT,  POSTED,  DISTTYPE,  aaOffsetAcct,  ITEMNMBR,  TRXLOCTN,  TRNSTLOC,  TRXQTY,  aaChangeDate,  aaFutureDist)  select  @aaSubLedgerHdrID,       @aaSubLedgerDistID,       @iINTERID,         @CorrespondingUnit,       @ACTINDX,         @ACCTTYPE,         @aaBrowseType,        @DECPLACS,         @DEBITAMT,         @CRDTAMNT,         @ORDBTAMT,         @ORCRDAMT,         case          when @TableID = 10001   then ''  else @CURNCYID  end,  case          when @TableID = 10001   then 0  else @CURRNIDX  end,  @RATETPID,         @EXGTBLID,         @XCHGRATE,         @EXCHDATE,         @TIME1,          @RTCLCMTD,         @DENXRATE,         @MCTRXSTT,         @DSTSQNUM,         case          when @DISTTYPE not in(2,5) and @SERIES = 11 and @aaSetCustID = 0  then ''  else isnull(dbo.aagGetMstrID(2,@ORMSTRID,0),'')  end,  case          when @aaSetVendID = 1  then isnull(dbo.aagGetMstrID(6,@ORMSTRID,0),'')  else ''  end,  case          when @aaSetSiteID = 1  then isnull(dbo.aagGetMstrID(5,@aaSiteID,0),'')  else ''  end,  case          when @aaSetItemID = 1  then isnull(dbo.aagGetMstrID(4,@aaItem,0),'')  else ''  end,  8,           0,           0,           case          when @TableID = 10001   then ''  else @GLPOSTDT  end,  @Post,          @DISTTYPE,         @aaOffsetAcct,        @aaItem,         @aaFromSite,        @aaToSite,         @TRXQTY,         convert(varchar(12),getdate()),    case          when @TableID = 10102 and @DSTSQNUM = 1200   then 1   else 0   end   select @iError = @@error  if @iError <> 0   begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 9455    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   exec @iStatus = aagSubAssignUpdate   @aaSubLedgerHdrID,  @aaSubLedgerDistID,  @aaSubLedgerAssignID output,  @CompanyID,   @ClassID,  @SqlSessionID,  @Flag  select @iError = @@error  if @iError <> 0 or @iStatus <> 0  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 9456    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  set @ClassID = 0  set @aaBrowseType = 0   fetch next from CGLWORK into @TRXQTY,@aaFromSite,@aaToSite,@aaSiteID,@aaItem,@DSTSQNUM,@ACTINDX,@ACCTTYPE,  @CRDTAMNT,@DEBITAMT,@ORCRDAMT,@ORDBTAMT,@GLPOSTDT,@DISTTYPE, @sort  end  close CGLWORK  deallocate CGLWORK  end return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[aagSubWorkDistUpdate] TO [DYNGRP]
GO

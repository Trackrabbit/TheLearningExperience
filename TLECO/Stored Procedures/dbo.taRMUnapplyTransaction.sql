SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMUnapplyTransaction]  @I_vCUSTNMBR char(15),    @I_vDOCNUMBR char(20),    @I_vRMDTYPAL smallint,   @I_vAPTODCTY  smallint = 0,   @I_vAPTODCNM  char(20) = '',   @I_vGLPOSTDT datetime = '',   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output,   @oErrString  varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @CREATEDIST int,  @CMDNUMWK numeric(19,5),  @CMPANYID smallint,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState smallint,   @AVGDTPYR1 numeric(19,5),  @AVGDTPYR2 numeric(19,5),  @AVGDTPYR numeric(19,5),  @AVDTPLIF1 numeric(19,5),  @AVDTPLIF2 numeric(19,5),  @AVDTPLIF numeric(19,5),  @ORCHKAMT numeric(19,5),  @ORCASAMT numeric(19,5),  @ORCCDAMT numeric(19,5),  @FRTSCHID char(19),  @MSCSCHID char(15),  @CSHRCTYP int,  @CRCRDNAM char(15),  @CASHAMT numeric(19,5),  @CashCHEKBKID char(15),  @CHECKAMT numeric(19,5),  @CheckCHEKBKID char(15),  @CRCRDAMT numeric(19,5),  @ApplyInHist smallint,  @RATETPID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @EXPNDATE datetime,  @EXGTBLID char(15),  @TIME1 datetime,  @iUpdDistErrState int,  @iINDEX int,  @FUNLCURR char(15),  @APFRMAPLYAMTSUMSUM numeric(19,5),  @APFRMAPLYAMT numeric(19,5),  @APFRMDISCTAKEN numeric(19,5),  @APFRMDISCAVAIL numeric(19,5),  @APFRMWROFAMT numeric(19,5),  @APFRMAPLYAMTSUM numeric(19,5),  @APFRMDISCTAKENSUM numeric(19,5),  @APFRMDISCAVAILSUM numeric(19,5),  @APFRMWROFAMTSUM numeric(19,5),  @WROFAMNTSUM numeric(19,5),   @ActualApplyToAmount numeric(19,5),  @ActualDiscTakenAmount numeric(19,5),  @ActualDiscAvailTaken numeric(19,5),  @ActualWriteOffAmount numeric(19,5),  @ActualApplyToAmountSUM numeric(19,5),  @ActualDiscTakenAmountSUM numeric(19,5),  @ActualDiscAvailTakenSUM numeric(19,5),  @ActualWriteOffAmountSUM numeric(19,5),  @ORDISTKN numeric(19,5),  @dORDISTKN numeric(19,5),  @ORDISTKNSUM numeric(19,5),  @ORDATKN numeric(19,5),   @dORDATKN numeric(19,5),  @ORWROFAM numeric(19,5),  @dORWROFAM numeric(19,5),  @ORDATKNSUM numeric(19,5),  @ORWROFAMSUM numeric(19,5),  @ORAPTOAMSUM numeric(19,5),  @ORAPTOAM numeric(19,5),  @APPTOAMTSUM numeric(19,5),  @Tbl char(18),  @DexRowID int,  @oExists int,  @OInsStatus int,  @DexLockErrorState int,  @ORTRXAMTPYMNT numeric(19,5),  @REFRENCE char(30),  @VOIDSTTS smallint,  @Prefix char(6),  @SOURCDOC char(10),  @BCHSOURC char(15),  @DISTKNAMSUM numeric(19,5),  @CURTRXAM numeric(19,5),  @AGPERAMT_1 numeric(19,5),  @AGPERAMT_2 numeric(19,5),  @AGPERAMT_3 numeric(19,5),  @AGPERAMT_4 numeric(19,5),  @AGPERAMT_5 numeric(19,5),  @AGPERAMT_6 numeric(19,5),  @AGPERAMT_7 numeric(19,5),  @O_tOUTOK smallint,  @iJrnlEntryErrState smallint,  @JRNENTRY int,  @DECPLCUR smallint,  @CUSTNAME char(65),  @iTrxSorceErrState smallint,  @TRXSORCE char(13),  @TRXSORCE_FROM char(13),  @TRXSORCE_APPLY char(13),  @SEQNUMBR int,  @DOCLOCATION smallint,  @TDTKNYTD numeric(19,5),  @DBName char(50),  @iCustomState int,  @iCustomErrString varchar(255),  @iStatus smallint,  @O_iInitErrorState smallint,  @oInitErrString char(255),  @O_oErrorState smallint,  @iError smallint,  @iAddCodeErrState smallint,  @iCursorError smallint,  @APTODCNM char(20),  @APTODCTY smallint,  @CURNCYID char(15),  @CURRNIDX smallint,  @CURNCYID2 char(15),  @CURRNIDX2 smallint,  @APPTOAMT numeric(19,5),  @DISTKNAM numeric(19,5),  @DISAVTKN numeric(19,5),  @DISAVAMT numeric(19,5),  @WROFAMNT numeric(19,5),  @GLPOSTDT datetime,  @APTODCDT datetime,  @NUMADTPL smallint,  @PERIODIDF smallint,  @PERIODIDC smallint,  @YEAR1C smallint,  @DISAVTKNSUM numeric(19,5),  @NUMADTPY smallint,  @YEAR1F smallint,  @SMRYDISC numeric(19,5),  @DOCDATE datetime,   @DOCDATEPAYMENT datetime,   @ORTRXAMT numeric(19,5),  @AGNGBUKT smallint,  @sINTERID char(5),  @VOIDDATE datetime,  @RTCLCMTD int,  @DOCAMNT numeric(19,5),  @ORCTRXAM numeric(19,5),  @SLSAMNT numeric(19,5),  @TRADEAMT numeric(19,5),  @FREIGHTAMT numeric(19,5),  @MISCAMNT numeric(19,5),  @DISCRTND2 numeric(19,5),  @COSTAMNT numeric(19,5),  @COMDLRAM numeric(19,5),  @ORSLSAMT2 numeric(19,5),  @ORCSTAMT2 numeric(19,5),  @ORFRTAMT2 numeric(19,5),  @ORMISCAMT2 numeric(19,5),  @ORTAXAMT2 numeric(19,5),  @ORDISRTD2 numeric(19,5),  @ORDDLRAT2 numeric(19,5),  @ORTDISAM2 numeric(19,5),  @ORORGTRX2 numeric(19,5),  @ORWROFAM2 numeric(19,5),  @ORCOMAMT2 numeric(19,5),  @ORBKTSLS2 numeric(19,5),  @ORBKTFRT2 numeric(19,5),  @ORBKTMSC2 numeric(19,5),  @TRADEAMT2 numeric(19,5),  @FREIGHTAMT2 numeric(19,5),  @MISCAMNT2 numeric(19,5),  @SLSAMNT2 numeric(19,5),  @COSTAMNT2 numeric(19,5),  @COMDLRAM2 numeric(19,5),  @CASHAMNT numeric(19,5),  @CURTRXAMBEFOREUPDATE numeric(19,5),  @RECBLESSUM numeric(19,5),  @ORRECBLESSUM numeric(19,5),  @SUMDEBITS numeric(19,5),  @SUMCREDITS numeric(19,5),  @POSTDATE datetime,  @averagedays int,  @averagedayssum int,  @SALSTERR char(15),  @SLPRSNID char(15),  @CHEKNMBR char(20),  @DOCNUMBER char(20),  @ORORGTRX numeric(19,5),  @SOPORIG tinyint,  @SOPDEPCOUNT int,  @VOIDTRXSORCE char(13),  @SequenceNumber int,  @icmGetLastJournalNumberErrState int,  @ISMCTRX smallint,  @RMTRKDAV tinyint,  @PTDUSRID char(10),  @AGNGBUKTINV smallint,  @SOPNUMBE char(21),  @manual int  select   @CREATEDIST = 1,  @CMDNUMWK = 0,  @iGetNextNoteIdxErrState = 0,  @ORCHKAMT = 0,  @ORCASAMT = 0,  @ORCCDAMT = 0,  @FRTSCHID = '',  @CRCRDNAM = '',  @CASHAMT = 0,  @CashCHEKBKID = '',  @CHECKAMT = 0,  @CheckCHEKBKID = '',  @CRCRDAMT = 0,  @ApplyInHist = 0,  @RTCLCMTD = -1,  @RATETPID = '',  @XCHGRATE = 0,  @EXCHDATE = '',  @EXPNDATE = '',  @EXGTBLID = '',  @TIME1 = '',  @iUpdDistErrState = 0,  @iINDEX = 0,  @TRXSORCE_APPLY = '',  @APFRMAPLYAMTSUMSUM = 0,  @FUNLCURR = '',  @APFRMAPLYAMT = 0,  @APFRMDISCTAKEN = 0,  @APFRMDISCAVAIL = 0,  @APFRMWROFAMT = 0,  @APFRMAPLYAMTSUM = 0,  @APFRMDISCTAKENSUM = 0,  @APFRMDISCAVAILSUM = 0,  @APFRMWROFAMTSUM = 0,  @WROFAMNTSUM = 0,  @ActualApplyToAmount = 0,  @ActualDiscTakenAmount = 0,  @ActualDiscAvailTaken = 0,  @ActualWriteOffAmount = 0,  @ActualApplyToAmountSUM = 0,  @ActualDiscTakenAmountSUM = 0,  @ActualDiscAvailTakenSUM = 0,  @ActualWriteOffAmountSUM = 0,  @ORDISTKN = 0,  @ORDATKN = 0,  @ORWROFAM = 0,  @ORDISTKNSUM = 0,  @ORDATKNSUM = 0,  @ORWROFAMSUM = 0,  @ORAPTOAMSUM = 0,  @ORAPTOAM = 0,  @APPTOAMTSUM = 0,  @ORTRXAMTPYMNT = 0,  @REFRENCE = '',  @VOIDSTTS = 0,  @Prefix = '',  @SOURCDOC = '',  @BCHSOURC = '',  @DISTKNAMSUM = 0,  @DISAVAMT = 0,  @AGPERAMT_1 = 0,  @AGPERAMT_2 = 0,  @AGPERAMT_3 = 0,  @AGPERAMT_4 = 0,  @AGPERAMT_5 = 0,  @AGPERAMT_6 = 0,  @AGPERAMT_7 = 0,  @O_tOUTOK = 0,  @TRXSORCE_FROM = '',  @TRXSORCE = '',  @iJrnlEntryErrState = 0,  @JRNENTRY = 0,  @DECPLCUR = 0,  @CUSTNAME = '',  @iTrxSorceErrState = 0,  @SEQNUMBR = 0,  @NUMADTPY = 0,  @DISAVTKNSUM = 0,  @NUMADTPL = 0,  @APTODCNM = '',  @APTODCTY = 0,  @CURNCYID = '',  @CURRNIDX = 0,  @CURNCYID2 = '',  @CURRNIDX2 = 0,  @APPTOAMT = 0,  @DISTKNAM = 0,  @DISAVTKN = 0,  @WROFAMNT = 0,  @GLPOSTDT = '',  @APTODCDT = '',  @iCursorError = 0,  @iAddCodeErrState = 0,  @iError = 0,  @DOCLOCATION = 0,  @TDTKNYTD = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_iInitErrorState = 0,  @oInitErrString = '',  @O_oErrorState = 0,  @O_iErrorState = 0,  @sINTERID = '',  @DOCAMNT = 0,  @SLSAMNT = 0,  @TRADEAMT = 0,  @FREIGHTAMT = 0,  @MISCAMNT = 0,  @DISCRTND2 = 0,  @COSTAMNT2 = 0,  @COMDLRAM2 = 0,  @ORSLSAMT2 = 0,  @ORCSTAMT2 = 0,  @ORCTRXAM = 0,  @ORFRTAMT2 = 0,  @ORMISCAMT2 = 0,  @ORTAXAMT2 = 0,  @ORDISRTD2 = 0,  @ORDDLRAT2 = 0,  @ORTDISAM2 = 0,  @ORORGTRX2 = 0,  @ORWROFAM2 = 0,  @ORCOMAMT2 = 0,  @ORBKTSLS2 = 0,  @ORBKTFRT2 = 0,  @ORBKTMSC2 = 0,  @TRADEAMT2 = 0,  @FREIGHTAMT2 = 0,  @MISCAMNT2 = 0,  @SLSAMNT2 = 0,  @COSTAMNT2 = 0,  @COMDLRAM2 = 0,  @CASHAMNT = 0,  @CURTRXAMBEFOREUPDATE = null,  @RECBLESSUM = 0,  @ORRECBLESSUM = 0,  @SUMDEBITS = 0,  @SUMCREDITS = 0,  @POSTDATE = '',  @averagedays = 0,  @averagedayssum = 0,  @SALSTERR = '',  @SLPRSNID = '',  @CHEKNMBR = '',  @DOCNUMBER = '',  @ORORGTRX = 0,  @SOPORIG = 0,  @SOPDEPCOUNT = 0,  @VOIDTRXSORCE = '',  @SequenceNumber = 0,  @icmGetLastJournalNumberErrState = 0,  @ISMCTRX = 0,  @RMTRKDAV = 0,  @PTDUSRID = '',  @AGNGBUKTINV = 0,  @SOPNUMBE = '',  @manual = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  select @sINTERID = INTERID,  @CMPANYID = CMPANYID  from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = taRMUnapplyTransactionPre  @I_vCUSTNMBR output,  @I_vDOCNUMBR output,  @I_vRMDTYPAL output,  @I_vAPTODCTY  output,  @I_vAPTODCNM  output,  @I_vGLPOSTDT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6226    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vCUSTNMBR is null or  @I_vDOCNUMBR is null or  @I_vRMDTYPAL is null or  @I_vAPTODCTY is null or  @I_vAPTODCNM is null or  @I_vGLPOSTDT is null  ) begin  select @O_iErrorState = 6227     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  select  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR)  select @FUNLCURR = FUNLCURR from MC40000 (nolock) select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  select @RMTRKDAV = RMTRKDAV from RM40101 (nolock)  if (@I_vCUSTNMBR = '') begin  select @O_iErrorState = 6228    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if @I_vRMDTYPAL < 7 or @I_vRMDTYPAL > 9 begin  select @O_iErrorState = 6632    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vDOCNUMBR = '') begin  select @O_iErrorState = 6630    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if @I_vAPTODCNM <> '' and not exists ( select 1 from RM20201 (nolock) where CUSTNMBR = @I_vCUSTNMBR and APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = @I_vAPTODCNM and APTODCTY = @I_vAPTODCTY )  and not exists ( select 1 from RM30201 (nolock) where CUSTNMBR = @I_vCUSTNMBR and APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = @I_vAPTODCNM and APTODCTY = @I_vAPTODCTY ) begin  select @O_iErrorState = 6293     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (not exists (select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR)) begin  select @O_iErrorState = 6229    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if not exists(select 1 from RM20101 a (nolock) where a.RMDTYPAL = @I_vRMDTYPAL and a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR)  begin  if not exists(select 1 from RM10201 a (nolock) where a.RMDTYPAL = @I_vRMDTYPAL and a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR)  begin  if not exists(select 1 from RM10301 a (nolock) where a.RMDTYPAL = @I_vRMDTYPAL and a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR)  begin  if not exists(select 1 from RM30101 a (nolock) where a.RMDTYPAL = @I_vRMDTYPAL and a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR)  begin  select @O_iErrorState = 6270    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else  begin  select @DOCLOCATION = 4  end  end  else  begin  select @DOCLOCATION = 2  end  end  else  begin  select @DOCLOCATION = 1  end end else begin  select @DOCLOCATION = 3 end  if @DOCLOCATION = 4 and @I_vAPTODCNM <> '' begin  select @O_iErrorState = 6272     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  select  @ISMCTRX = 1,    @ORCTRXAM = ORCTRXAM,  @ORSLSAMT2 = ORSLSAMT,  @ORCSTAMT2 = ORCSTAMT,  @ORFRTAMT2 = ORFRTAMT,  @ORMISCAMT2 = ORMISCAMT,  @ORTAXAMT2 = ORTAXAMT,  @ORDISRTD2 = ORDISRTD,  @ORDDLRAT2 = ORDDLRAT,  @ORTDISAM2 = ORTDISAM,  @ORORGTRX2 = ORORGTRX,  @ORWROFAM2 = ORWROFAM,  @ORCOMAMT2 = ORCOMAMT,  @ORBKTSLS2 = ORBKTSLS,  @ORBKTFRT2 = ORBKTFRT,  @ORBKTMSC2 = ORBKTMSC  from MC020102 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  if @DOCLOCATION = 4 begin  select @Tbl = '.dbo.RM30101'  select  @POSTDATE = POSTDATE,  @FRTSCHID = FRTSCHID,  @CSHRCTYP = CSHRCTYP,  @MSCSCHID = MSCSCHID,  @VOIDDATE = VOIDDATE,  @VOIDSTTS = VOIDSTTS,  @CURNCYID = isnull(CURNCYID,0),  @DOCDATEPAYMENT = DOCDATE,   @GLPOSTDT = GLPOSTDT,   @CASHAMNT = CASHAMNT,   @ORTRXAMTPYMNT = ORTRXAMT,  @TRXSORCE_FROM = TRXSORCE,  @CURTRXAM = CURTRXAM,  @DOCDATE = DOCDATE,  @AGNGBUKT = 1,  @SLSAMNT2 = SLSAMNT,  @TRADEAMT2 = TRDISAMT,  @FREIGHTAMT2 = FRTAMNT,  @MISCAMNT2 = MISCAMNT,  @DISCRTND2 = DISCRTND,  @COSTAMNT2 = COSTAMNT,  @COMDLRAM2 = COMDLRAM,  @SALSTERR = SLSTERCD,  @SLPRSNID = SLPRSNID,  @DexRowID = DEX_ROW_ID  from RM30101 a (nolock)   where a.RMDTYPAL = @I_vRMDTYPAL and a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if @ORTRXAMTPYMNT is null  begin  select @O_iErrorState = 6339    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if @DOCLOCATION = 3 begin  select @Tbl = '.dbo.RM20101'  select  @POSTDATE = POSTDATE,  @FRTSCHID = FRTSCHID,  @CSHRCTYP = CSHRCTYP,  @MSCSCHID = MSCSCHID,  @VOIDDATE = VOIDDATE,  @VOIDSTTS = VOIDSTTS,  @CURNCYID = isnull(CURNCYID,0),  @DOCDATEPAYMENT = DOCDATE,   @GLPOSTDT = GLPOSTDT,  @CASHAMNT = CASHAMNT,  @ORTRXAMTPYMNT = ORTRXAMT,  @CHEKNMBR =  case   when CSHRCTYP = 2    then ''  else CHEKNMBR  end,  @TRXSORCE_FROM = TRXSORCE,  @CURTRXAM = CURTRXAM,  @DOCDATE = DOCDATE,  @AGNGBUKT = AGNGBUKT,  @SLSAMNT2 = SLSAMNT,  @TRADEAMT2 = TRDISAMT,  @FREIGHTAMT2 = FRTAMNT,  @MISCAMNT2 = MISCAMNT,  @DISCRTND2 = DISCRTND,  @COSTAMNT2 = COSTAMNT,  @COMDLRAM2 = COMDLRAM,  @SALSTERR = SLSTERCD,  @SLPRSNID = SLPRSNID,  @DexRowID = DEX_ROW_ID  from RM20101 a (nolock)  where a.RMDTYPAL = @I_vRMDTYPAL and a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if @ORTRXAMTPYMNT is null  begin  select @O_iErrorState = 6239    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   if (@TRXSORCE_FROM like 'SLSTE%')  begin  select @SOPORIG = 1  end end  if @VOIDSTTS = 1 and @I_vAPTODCNM <> '' begin  select @O_iErrorState = 6271     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@VOIDSTTS in (1,2)) and (@DOCLOCATION in (3,4)) begin  if @I_vRMDTYPAL = 9  begin  if @CSHRCTYP = 0  begin  select   @CheckCHEKBKID = @MSCSCHID,  @CHECKAMT = @ORTRXAMTPYMNT,  @ORCHKAMT =  case  when @ORCTRXAM is not null  then @ORCTRXAM  else 0  end  end  else  if @CSHRCTYP = 1  begin  select  @CashCHEKBKID = @MSCSCHID,  @CASHAMT = @ORTRXAMTPYMNT,  @ORCASAMT =  case   when @ORCTRXAM is not null  then @ORCTRXAM  else 0  end  end  else  if @CSHRCTYP = 2  begin  select  @CRCRDNAM = @FRTSCHID,  @CRCRDAMT = @ORTRXAMTPYMNT,  @ORCCDAMT =  case  when @ORCTRXAM is not null  then @ORCTRXAM  else 0  end  end  end end  if @DOCLOCATION = 2 begin  select @Tbl = '.dbo.RM10301'   select  @DexRowID = DEX_ROW_ID,  @CURNCYID = isnull(CURNCYID,0),  @DOCDATEPAYMENT = DOCDATE,   @GLPOSTDT = GLPOSTDT,   @ORTRXAMTPYMNT = DOCAMNT  from RM10301 a (nolock)   where   a.RMDTYPAL = @I_vRMDTYPAL and   a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if @ORTRXAMTPYMNT is null  begin  select @O_iErrorState = 6246    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end else if (@DOCLOCATION = 1) begin  select @Tbl = '.dbo.RM10201'   select  @CURNCYID = isnull(CURNCYID,''),  @DOCDATEPAYMENT = DOCDATE,   @GLPOSTDT = GLPOSTDT,   @ORTRXAMTPYMNT = ORTRXAMT,  @DexRowID = DEX_ROW_ID  from RM10201 a (nolock)   where   a.RMDTYPAL = @I_vRMDTYPAL and   a.DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@ORTRXAMTPYMNT is null)  begin  select @O_iErrorState = 6453    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  select @Tbl = rtrim(db_name()) + ltrim(rtrim(@Tbl)) exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @Tbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output if (@OInsStatus <> 1) begin  if (@DexLockErrorState <> 0)  begin  exec @iStatus = taUpdateString  @DexLockErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  select @O_iErrorState = 6245   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@VOIDSTTS in (1,2)) begin  select  @Prefix = 'RMMSC',  @BCHSOURC = 'RM_Misc',  @SOURCDOC = 'RMJ',  @REFRENCE = 'Voided Trx Maintenance' end else begin  select  @Prefix = 'RMAPY',  @BCHSOURC = 'RM_Apply',  @SOURCDOC = 'APL',  @REFRENCE = 'Receivables Apply Doc.' end  if (@I_vAPTODCNM = '') begin  insert RM20201 (  ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  )  select  ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  from RM30201 a (nolock) where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  and exists(select 1 from RM00401 b where a.APTODCNM = b.DOCNUMBR and a.APTODCTY = b.RMDTYPAL and b.CUSTNMBR = @I_vCUSTNMBR and b.DCSTATUS in (2,3)) and   not exists(select 1 from RM20201 (nolock) where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = a.APTODCNM and APTODCTY = a.APTODCTY and CUSTNMBR = @I_vCUSTNMBR) end else begin  insert RM20201 (  ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  )  select  ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  from RM30201 a (nolock) where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = @I_vAPTODCNM and APTODCTY = @I_vAPTODCTY and CUSTNMBR = @I_vCUSTNMBR  and exists(select 1 from RM00401 b where a.APTODCNM = b.DOCNUMBR and a.APTODCTY = b.RMDTYPAL and b.CUSTNMBR = @I_vCUSTNMBR and b.DCSTATUS in (2,3)) and   not exists(select 1 from RM20201 (nolock) where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = @I_vAPTODCNM and APTODCTY = @I_vAPTODCTY and CUSTNMBR = @I_vCUSTNMBR) end if (@@error <> 0) begin  select @O_iErrorState = 6646    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAPTODCNM = '') begin  declare RM20201_LINES INSENSITIVE cursor for select  APTODCNM,  APTODCTY,  CURNCYID,  CURRNIDX,  APPTOAMT,  DISTKNAM,  DISAVTKN,  WROFAMNT,  GLPOSTDT,  APTODCDT,  ORAPTOAM,  ORDISTKN,  ORDATKN,  ORWROFAM,  ActualApplyToAmount,  ActualDiscTakenAmount,  ActualDiscAvailTaken,  ActualWriteOffAmount,  APFRMAPLYAMT,  APFRMDISCTAKEN,  APFRMDISCAVAIL,  APFRMWROFAMT,  TRXSORCE  from RM20201 a (nolock) where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  and exists(select 1 from RM00401 b where a.APTODCNM = b.DOCNUMBR and a.APTODCTY = b.RMDTYPAL   and b.CUSTNMBR = @I_vCUSTNMBR and b.DCSTATUS in(2,3) ) end else begin  declare RM20201_LINES INSENSITIVE cursor for select  APTODCNM,  APTODCTY,  CURNCYID,  CURRNIDX,  APPTOAMT,  DISTKNAM,  DISAVTKN,  WROFAMNT,  GLPOSTDT,  APTODCDT,  ORAPTOAM,  ORDISTKN,  ORDATKN,  ORWROFAM,  ActualApplyToAmount,  ActualDiscTakenAmount,  ActualDiscAvailTaken,   ActualWriteOffAmount,  APFRMAPLYAMT,  APFRMDISCTAKEN,  APFRMDISCAVAIL,  APFRMWROFAMT,  TRXSORCE  from RM20201 a (nolock) where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = @I_vAPTODCNM and APTODCTY = @I_vAPTODCTY and CUSTNMBR = @I_vCUSTNMBR  and exists(select 1 from RM00401 b where a.APTODCNM = b.DOCNUMBR and a.APTODCTY = b.RMDTYPAL   and b.CUSTNMBR = @I_vCUSTNMBR and b.DCSTATUS in(2,3)) end open RM20201_LINES select @iCursorError = @@cursor_rows  if (@iCursorError > 0) begin  fetch next from RM20201_LINES into  @APTODCNM,  @APTODCTY,  @CURNCYID2,  @CURRNIDX2,  @APPTOAMT,  @DISTKNAM,  @DISAVTKN,  @WROFAMNT,  @GLPOSTDT,  @APTODCDT,  @ORAPTOAM,  @ORDISTKN,  @ORDATKN,  @ORWROFAM,  @ActualApplyToAmount,  @ActualDiscTakenAmount,  @ActualDiscAvailTaken,  @ActualWriteOffAmount,  @APFRMAPLYAMT,  @APFRMDISCTAKEN,  @APFRMDISCAVAIL,  @APFRMWROFAMT,  @TRXSORCE_APPLY  while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 6282   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ( (exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> '')) and  (@CURNCYID2 <> @CURNCYID))  begin  select @O_iErrorState = 6285    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break   end   if exists (select 1 from RM30101 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR)  begin  select @ApplyInHist = 1  end  else  begin  select @ApplyInHist = 0  end   delete RM30201 where  APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL and  APTODCNM = @APTODCNM and APTODCTY = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6935    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break   end   if (@ApplyInHist = 1)  begin  select @CURTRXAMBEFOREUPDATE = CURTRXAM from RM30101 (nolock)  where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   insert RM20101 (  CUSTNMBR,  CPRCSTNM,  DOCNUMBR,  CHEKNMBR,  BACHNUMB,  BCHSOURC,  TRXSORCE,  RMDTYPAL,  CSHRCTYP,  DUEDATE,  DOCDATE,  POSTDATE,  PSTUSRID,  GLPOSTDT,  LSTEDTDT,  LSTUSRED,  ORTRXAMT,  CURTRXAM,  SLSAMNT,  COSTAMNT,  FRTAMNT,  MISCAMNT,  TAXAMNT,  COMDLRAM,  CASHAMNT,  DISTKNAM,  DISAVAMT,  DISCRTND,  DISCDATE,  DSCDLRAM,  DSCPCTAM,  WROFAMNT,  TRXDSCRN,  CSPORNBR,  SLPRSNID,  SLSTERCD,  DINVPDOF,  PPSAMDED,  GSTDSAMT,  DELETE1,  AGNGBUKT,  VOIDSTTS,  VOIDDATE,  TAXSCHID,  CURNCYID,  PYMTRMID,  SHIPMTHD,  TRDISAMT,  SLSCHDID,  FRTSCHID,  MSCSCHID,  NOTEINDX,  Tax_Date,  APLYWITH,  SALEDATE,  CORRCTN,  SIMPLIFD,  Electronic,  ECTRX,  EFTFLAG  )  select   CUSTNMBR,  CPRCSTNM,  DOCNUMBR,  CHEKNMBR,  BACHNUMB,  BCHSOURC,  TRXSORCE,  RMDTYPAL,  CSHRCTYP,  DUEDATE,  DOCDATE,  POSTDATE,  PSTUSRID,  GLPOSTDT,  LSTEDTDT,  LSTUSRED,  ORTRXAMT,  case  when @FUNLCURR = @CURNCYID2   then CURTRXAM + @APPTOAMT + @DISTKNAM + @WROFAMNT  else CURTRXAM + @APFRMAPLYAMT + @APFRMDISCTAKEN + @APFRMWROFAMT  end,  SLSAMNT,  COSTAMNT,  FRTAMNT,  MISCAMNT,  TAXAMNT,  COMDLRAM,  CASHAMNT,  case  when @FUNLCURR = @CURNCYID2   then DISTKNAM - @DISTKNAM  else DISTKNAM - @APFRMDISCTAKEN  end,  DISAVAMT,  DISCRTND,  DISCDATE,  DSCDLRAM,  DSCPCTAM,  case  when @FUNLCURR = @CURNCYID2   then WROFAMNT - @WROFAMNT  else WROFAMNT - @APFRMWROFAMT  end,  TRXDSCRN,  CSPORNBR,  SLPRSNID,  SLSTERCD,  '',  PPSAMDED,  GSTDSAMT,  DELETE1,  1,  VOIDSTTS,  VOIDDATE,  TAXSCHID,  CURNCYID,  PYMTRMID,  SHIPMTHD,  TRDISAMT,  SLSCHDID,  FRTSCHID,  MSCSCHID,  NOTEINDX,  Tax_Date,  APLYWITH,  SALEDATE,  CORRCTN,  SIMPLIFD,  Electronic,  ECTRX,  EFTFLAG  from RM30101  where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6924    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete RM30101 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 5457    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   insert RM10101 (  TRXSORCE,  POSTED,  POSTEDDT,  PSTGSTUS,  CHANGED,  DOCNUMBR,  DCSTATUS,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,  DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef )  select   TRXSORCE,  1,  @GLPOSTDT,  1,  0,  DOCNUMBR,  1,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,  DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef  from RM30301 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6890   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete RM30301 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6891    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   insert RM10501 (  NCOMAMNT,  RMDTYPAL,  COMPRCNT,  DOCNUMBR,  SEQNUMBR,  TRXSORCE,  COMTRSRC,  CUSTNMBR,  SLPRSNID,  SALSTERR,  COMMCODE,  PRCTOSAL,  SLSAMNT,  COMDLRAM,  POSTED,  COMMPAID,  COMMDEST,  ORCOMAMT,  ORNCMAMT,  ORSLSAMT,  CURRNIDX )  select   NCOMAMNT,  RMDTYPAL,  COMPRCNT,  DOCNUMBR,  SEQNUMBR,  TRXSORCE,  COMTRSRC,  CUSTNMBR,  SLPRSNID,  SALSTERR,  COMMCODE,  PRCTOSAL,  SLSAMNT,  COMDLRAM,  POSTED,  COMMPAID,  COMMDEST,  ORCOMAMT,  ORNCMAMT,  ORSLSAMT,  CURRNIDX  from RM30501 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6892   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete RM30501 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6893    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   insert RM10601 (  BACHNUMB,  RMDTYPAL,  DOCNUMBR,  CUSTNMBR,  TAXDTLID,  TRXSORCE,  ACTINDX,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  STAXAMNT,  ORSLSTAX,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXDTSLS,  ORTOTSLS,  TDTTXSLS,  ORTXSLS,  POSTED,  SEQNUMBR,  CURRNIDX )  select   BACHNUMB,  RMDTYPAL,  DOCNUMBR,  CUSTNMBR,  TAXDTLID,  TRXSORCE,  ACTINDX,  0,  TAXAMNT,  ORTAXAMT,  STAXAMNT,  ORSLSTAX,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXDTSLS,  ORTOTSLS,  TDTTXSLS,  ORTXSLS,  POSTED,  SEQNUMBR,  CURRNIDX  from RM30601 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6895    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete RM30601 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6896    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   insert into RM20201 (  ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT   )  select   ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  from RM30201 a where   a.CUSTNMBR = @I_vCUSTNMBR and   a.APTODCNM = @APTODCNM and   a.APTODCTY = @APTODCTY and   not exists ( select 1 from RM20201 b where a.APFRDCNM = b.APFRDCNM   and a.APFRDCTY = b.APFRDCTY and a.APTODCTY = b.APTODCTY and   a.APTODCNM = b.APTODCNM and a.CUSTNMBR = b.CUSTNMBR )  if @@error <> 0  begin  select @O_iErrorState = 9700    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break   end   update RM00401 set DCSTATUS = 2 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6897    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@DOCLOCATION in (4,3,2,1))  begin  select @CURTRXAMBEFOREUPDATE = CURTRXAM from RM20101 (nolock)  where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   update RM20101 set   CURTRXAM =   CURTRXAM + @APPTOAMT + @DISTKNAM + @WROFAMNT,  DISTKNAM =   DISTKNAM - @DISTKNAM,  DISAVTKN =   DISAVTKN - @DISAVTKN,  WROFAMNT =   WROFAMNT - @WROFAMNT,  DINVPDOF = ''  where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6287    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   select @DOCAMNT = @DISTKNAM + @WROFAMNT   select @ActualApplyToAmountSUM = @ActualApplyToAmountSUM + @ActualApplyToAmount  select @ActualDiscTakenAmountSUM = @ActualDiscTakenAmountSUM + @ActualDiscTakenAmount  select @ActualDiscAvailTakenSUM = @ActualDiscAvailTakenSUM + @ActualDiscAvailTaken  select @ActualWriteOffAmountSUM = @ActualWriteOffAmountSUM + @ActualWriteOffAmount  if (@CURNCYID2 = @FUNLCURR)  begin  select @APFRMAPLYAMTSUM = @APFRMAPLYAMTSUM + @APFRMAPLYAMT  select @APFRMDISCTAKENSUM = @APFRMDISCTAKENSUM + @APFRMDISCTAKEN  select @APFRMDISCAVAILSUM = @APFRMDISCAVAILSUM + @APFRMDISCAVAIL  select @APFRMWROFAMTSUM = @APFRMWROFAMTSUM + @APFRMWROFAMT  end  else  begin  select @APFRMAPLYAMTSUM = @APFRMAPLYAMTSUM + @APPTOAMT  select @APFRMDISCTAKENSUM = @APFRMDISCTAKENSUM + @DISTKNAM  select @APFRMDISCAVAILSUM = @APFRMDISCAVAILSUM + @APFRMDISCAVAIL  select @APFRMWROFAMTSUM = @APFRMWROFAMTSUM + @WROFAMNT  end   select @WROFAMNTSUM = @WROFAMNTSUM + @WROFAMNT  select @APPTOAMTSUM = @APPTOAMTSUM + @APPTOAMT  select @DISAVTKNSUM = @DISAVTKNSUM + @DISAVTKN  select @DISTKNAMSUM = @DISTKNAMSUM + @DISTKNAM   select @ORAPTOAMSUM = @ORAPTOAMSUM + @ORAPTOAM  select @ORDISTKNSUM = @ORDISTKNSUM + @ORDISTKN  select @ORDATKNSUM = @ORDATKNSUM + @ORDATKN  select @ORWROFAMSUM =  @ORWROFAMSUM + @ORWROFAM   if (((@DISTKNAM > 0 or @WROFAMNT > 0) and (@DOCLOCATION = 3 or @DOCLOCATION = 4)) or (@VOIDSTTS = 1 or @VOIDSTTS = 2)) and (@TRXSORCE = '')  begin  exec @iStatus = taGetTrxSourceNumber  3,  @Prefix,  1,  @TRXSORCE output,  @iTrxSorceErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iTrxSorceErrState <> 0) or (@TRXSORCE = '') or (@TRXSORCE is NULL) or (@iError <> 0))  begin   select @O_iErrorState = 6284    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@DISTKNAM > 0 or @WROFAMNT > 0)  begin   if @CURNCYID2 <> @FUNLCURR  begin   select   @dORDISTKN = @ORDISTKN,  @dORDATKN = @ORDATKN,  @dORWROFAM = @ORWROFAM   select   @RATETPID = RATETPID,  @XCHGRATE = XCHGRATE,  @EXCHDATE = EXCHDATE,  @EXGTBLID = EXGTBLID,  @TIME1 = TIME1,  @RTCLCMTD = RTCLCMTD  from MC020102 where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   end  else  begin  select   @dORDISTKN = 0,  @dORDATKN = 0,  @dORWROFAM = 0  end   select @ORORGTRX = @dORDISTKN + @dORWROFAM   if (@CURTRXAMBEFOREUPDATE = 0)  begin  select @PTDUSRID = 'PAID'  end  else  begin  select @PTDUSRID = ''  end   if (@DOCLOCATION in (3,4))  begin  exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX2,  @I_vCURNCYID = @CURNCYID2,  @I_vPTDUSRID = @PTDUSRID,    @I_vTRADEAMT = 0,  @I_vFREIGHTAMT = 0,  @I_vMISCAMNT = 0,  @I_vCASHAMT = 0,  @I_vCashCHEKBKID = 0,  @I_vCHECKAMT = 0,  @I_vCheckCHEKBKID = '',  @I_vCRCRDAMT = 0,  @I_vTDISTKAMT = @DISTKNAM,  @I_vDISAVAMT = @DISAVTKN,  @I_vCRCRDNAM = '',  @I_vDISCRTND = 0,                  @I_vDOCAMNT = @DOCAMNT,  @I_vSLSAMNT = 0,  @I_vCOSTAMNT = 0,  @I_vCOMDLRAM = 0,  @I_vRATETPID = @RATETPID,    @I_vXCHGRATE = @XCHGRATE,    @I_vEXCHDATE = @EXCHDATE,    @I_vEXPNDATE = @EXPNDATE,    @I_vEXGTBLID = @EXGTBLID,    @I_vTIME1 = @TIME1,     @I_vORCTRXAM = 0,     @I_vORSLSAMT = 0,     @I_vORCSTAMT = 0,       @I_vORFRTAMT = 0,                 @I_vORMISCAMT = 0,            @I_vORTAXAMT = 0,              @I_vORCASAMT = 0,               @I_vORCHKAMT = 0,                @I_vORCCDAMT = 0,     @I_vORAPPAMT = 0,     @I_vORDISTKN = @ORDISTKN,    @I_vORDAVAMT = @ORDATKN,              @I_vORDATKN = 0,                @I_vORDISRTD = 0,          @I_vORDDLRAT = 0,           @I_vORTDISAM = @ORTDISAM2,    @I_vORORGTRX = @ORORGTRX,    @I_vORWROFAM = @ORWROFAM,            @I_vORCOMAMT = 0,           @I_vORBKTSLS = 0,              @I_vORBKTFRT = 0,              @I_vORBKTMSC = 0,      @I_vApply = 3,  @I_vTRXSORCE = @TRXSORCE,   @I_vWROFAMNT = @WROFAMNT,  @I_vDistRef = '',  @I_vPOSTEDDT = @DOCDATEPAYMENT,  @I_vCMPANYID = @CMPANYID,  @I_vINTERID  = @sINTERID,  @I_vRTCLCMTD = @RTCLCMTD,  @I_vDECPLCUR = @DECPLCUR,  @I_vCREATEDIST = 1,  @O_iErrorState = @iUpdDistErrState output,  @oErrString = @oErrString output  select @iError = @@error  if (@iStatus = 0 and @iError <> 0)  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  if (@iUpdDistErrState <> 0)  begin  exec @iStatus = taUpdateString  @iUpdDistErrState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  end  select @O_iErrorState = 6265    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  if (@iError <> 0)  begin  select @O_iErrorState = 6266    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  end  else  if (@DOCLOCATION in (1,2))  begin   update RM10101 set  DEBITAMT =   case   when DISTTYPE = 2  then DEBITAMT - @DISTKNAM  when DISTTYPE = 4  then DEBITAMT - @WROFAMNT  else DEBITAMT  end,  CRDTAMNT =   case  when DISTTYPE = 3 and @DISTKNAM >= @DISAVTKN and @RMTRKDAV = 1  then CRDTAMNT - @WROFAMNT + (@DISTKNAM - @DISAVTKN)  when DISTTYPE = 3 and @DISTKNAM >= @DISAVTKN and @RMTRKDAV = 0  then CRDTAMNT - (@WROFAMNT + @DISAVTKN)  when DISTTYPE = 3 and @DISAVTKN > @DISTKNAM and @RMTRKDAV = 1  then CRDTAMNT - @WROFAMNT + (@DISAVTKN - @DISTKNAM)  when DISTTYPE = 3 and @DISAVTKN > @DISTKNAM and @RMTRKDAV = 0  then CRDTAMNT - (@WROFAMNT + @DISAVTKN)  when DISTTYPE = 5  then CRDTAMNT - @DISAVTKN  else CRDTAMNT  end,  ORDBTAMT =   case   when @CURNCYID2 = @FUNLCURR  then ORDBTAMT  when DISTTYPE = 2  then ORDBTAMT - @ORDISTKN  when DISTTYPE = 4  then ORDBTAMT - @ORWROFAM  else ORDBTAMT  end,  ORCRDAMT =   case  when @CURNCYID2 = @FUNLCURR  then ORCRDAMT  when DISTTYPE = 3 and @DISTKNAM >= @DISAVTKN and @RMTRKDAV = 1  then ORCRDAMT - @ORWROFAM + (@ORDISTKN - @ORDATKN)  when DISTTYPE = 3 and @DISTKNAM >= @DISAVTKN and @RMTRKDAV = 0  then ORCRDAMT - (@ORWROFAM + @ORDATKN)  when DISTTYPE = 3 and @DISAVTKN > @DISTKNAM and @RMTRKDAV = 1  then ORCRDAMT - @ORWROFAM + (@ORDATKN - @ORDISTKN)  when DISTTYPE = 3 and @DISAVTKN > @DISTKNAM and @RMTRKDAV = 0  then ORCRDAMT - (@ORWROFAM + @ORDATKN)  when DISTTYPE = 5  then ORCRDAMT - @ORDATKN  else ORCRDAMT  end  where DOCNUMBR = @I_vDOCNUMBR and   RMDTYPAL = @I_vRMDTYPAL and   TRXSORCE = @TRXSORCE_FROM and   CUSTNMBR = @I_vCUSTNMBR and  DISTTYPE in (2,3,4,5)  if (@@error <> 0)  begin  select @O_iErrorState = 6999    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break   end   delete RM10101 where  DOCNUMBR = @I_vDOCNUMBR and   RMDTYPAL = @I_vRMDTYPAL and   TRXSORCE = @TRXSORCE_FROM and   CUSTNMBR = @I_vCUSTNMBR and  DISTTYPE in (2,3,4,5)and  DEBITAMT <= 0 and CRDTAMNT <= 0  if (@@error <> 0)  begin  select @O_iErrorState = 3807    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break   end  end  end   select @DOCDATE = DOCDATE, @AGNGBUKTINV = AGNGBUKT, @CURTRXAM = CURTRXAM, @ORTRXAMT = ORTRXAMT  from RM20101 (nolock) where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR   if (@CURTRXAMBEFOREUPDATE = 0)   begin  select  @NUMADTPL =   case  when @I_vAPTODCTY in (3,9) or @APTODCTY in (3,9)      then @NUMADTPL  else @NUMADTPL + 1  end,  @NUMADTPY =   case  when @I_vAPTODCTY in (3,9) or @APTODCTY in (3,9)      then @NUMADTPY  else @NUMADTPY + 1  end  select @averagedays = datediff(day,@DOCDATE,@DOCDATEPAYMENT)   if datediff(day,@DOCDATE,@DOCDATEPAYMENT) < 0  select @averagedays = 0   select @averagedayssum = @averagedayssum + @averagedays  end   update MC020102 set ORCTRXAM = ORCTRXAM + @ORAPTOAM + @ORWROFAM + @ORDISTKN, ORWROFAM = ORWROFAM - @ORWROFAM,   ORDISTKN = ORDISTKN - @ORDISTKN, ORDATKN = ORDATKN - @ORDATKN where DOCNUMBR = @APTODCNM and RMDTYPAL = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6997    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if @AGNGBUKT = 0 or @AGNGBUKT = 1  begin  select @AGPERAMT_1 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_1 - @APPTOAMT  else @AGPERAMT_1  end  end   if @AGNGBUKT = 2  begin  select @AGPERAMT_2 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_2 - @APPTOAMT  else @AGPERAMT_2  end  end   if @AGNGBUKT = 3  begin  select @AGPERAMT_3 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_3 - @APPTOAMT  else @AGPERAMT_3  end  end   if @AGNGBUKT = 4  begin  select @AGPERAMT_4 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_4 - @APPTOAMT  else @AGPERAMT_4  end  end   if @AGNGBUKT = 5  begin  select @AGPERAMT_5 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_5 - @APPTOAMT  else @AGPERAMT_5  end  end   if @AGNGBUKT = 6  begin  select @AGPERAMT_6 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_6 - @APPTOAMT  else @AGPERAMT_6  end  end   if @AGNGBUKT = 7  begin  select @AGPERAMT_7 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_7 - @APPTOAMT  else @AGPERAMT_7  end  end   if @AGNGBUKTINV = 0 or @AGNGBUKTINV = 1  begin  select @AGPERAMT_1 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_1 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_1  end  end   if @AGNGBUKTINV = 2  begin  select @AGPERAMT_2 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_2 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_2  end  end   if @AGNGBUKTINV = 3  begin  select @AGPERAMT_3 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_3 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_3  end  end   if @AGNGBUKTINV = 4  begin  select @AGPERAMT_4 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_4 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_4  end  end   if @AGNGBUKTINV = 5  begin  select @AGPERAMT_5 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_5 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_5  end  end   if @AGNGBUKTINV = 6  begin  select @AGPERAMT_6 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_6 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_6  end  end   if @AGNGBUKTINV = 7  begin  select @AGPERAMT_7 =   case   when @DOCLOCATION in (1,2,3,4)  then @AGPERAMT_7 + @APPTOAMT + @DISTKNAM + @WROFAMNT  else @AGPERAMT_7  end  end   if (@DOCLOCATION in (3,4))  begin  select top 1 @PERIODIDF = PERIODID, @YEAR1F = YEAR1 from SY40100 (nolock) where   PERIODDT <= @DOCDATEPAYMENT and SERIES = 3 and ODESCTN = 'Receivables Apply Doc.'   order by PERIODDT desc   select @PERIODIDC = month(@DOCDATEPAYMENT)  select @YEAR1C = year(@DOCDATEPAYMENT)   update RM00104 set SMRYDISC = SMRYDISC - @DISTKNAM, SMRYWROF = SMRYWROF - @WROFAMNT  where CUSTNMBR = @I_vCUSTNMBR and   ((YEAR1 = @YEAR1F and PERIODID = @PERIODIDF and HISTTYPE = 1) or   (YEAR1 = @YEAR1C and PERIODID = @PERIODIDC and HISTTYPE = 0))  if (@@error <> 0)  begin  select @O_iErrorState = 6215    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  end  delete RM30201 where  APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL and  APTODCNM = @APTODCNM and APTODCTY = @APTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 9363    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break   end  fetch next from RM20201_LINES into  @APTODCNM,  @APTODCTY,  @CURNCYID2,  @CURRNIDX2,  @APPTOAMT,  @DISTKNAM,  @DISAVTKN,  @WROFAMNT,  @GLPOSTDT,  @APTODCDT,  @ORAPTOAM,  @ORDISTKN,  @ORDATKN,  @ORWROFAM,  @ActualApplyToAmount,  @ActualDiscTakenAmount,  @ActualDiscAvailTaken,  @ActualWriteOffAmount,  @APFRMAPLYAMT,  @APFRMDISCTAKEN,  @APFRMDISCAVAIL,  @APFRMWROFAMT,  @TRXSORCE_APPLY  end end deallocate RM20201_LINES  if ((@iCursorError = 0) and (@VOIDSTTS = 0)) begin  select @O_iErrorState = 8328    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if ((@VOIDSTTS in(1,2)) and (@TRXSORCE = '') and (@DOCLOCATION in (3,4))) begin  exec @iStatus = taGetTrxSourceNumber  3,  @Prefix,  1,  @TRXSORCE output,  @iTrxSorceErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iTrxSorceErrState <> 0) or (@TRXSORCE = '') or (@TRXSORCE is NULL) or (@iError <> 0))  begin   select @O_iErrorState = 6286    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return ( @O_iErrorState )  end end  if  ( @DOCLOCATION = 4 )  begin  insert RM20101 (  CUSTNMBR,  CPRCSTNM,  DOCNUMBR,  CHEKNMBR,  BACHNUMB,  BCHSOURC,  TRXSORCE,  RMDTYPAL,  CSHRCTYP,  DUEDATE,  DOCDATE,  POSTDATE,  PSTUSRID,  GLPOSTDT,  LSTEDTDT,  LSTUSRED,  ORTRXAMT,  CURTRXAM,  SLSAMNT,  COSTAMNT,  FRTAMNT,  MISCAMNT,  TAXAMNT,  COMDLRAM,  CASHAMNT,  DISTKNAM,  DISAVAMT,  DISCRTND,  DISCDATE,  DSCDLRAM,  DSCPCTAM,  WROFAMNT,  TRXDSCRN,  CSPORNBR,  SLPRSNID,  SLSTERCD,  DINVPDOF,  PPSAMDED,  GSTDSAMT,  DELETE1,  AGNGBUKT,  VOIDSTTS,  VOIDDATE,  TAXSCHID,  CURNCYID,  PYMTRMID,  SHIPMTHD,  TRDISAMT,  SLSCHDID,  FRTSCHID,  MSCSCHID,  NOTEINDX,  Tax_Date,  APLYWITH,  SALEDATE,  CORRCTN,  SIMPLIFD,  Electronic,  ECTRX  )  select   CUSTNMBR,  CPRCSTNM,  DOCNUMBR,  CHEKNMBR,  BACHNUMB,  BCHSOURC,  TRXSORCE,  RMDTYPAL,  CSHRCTYP,  DUEDATE,  DOCDATE,  POSTDATE,  PSTUSRID,  GLPOSTDT,  LSTEDTDT,  LSTUSRED,  ORTRXAMT,  case   when @VOIDSTTS in (1,2)  then 0  else CURTRXAM  end,  SLSAMNT,  COSTAMNT,  FRTAMNT,  MISCAMNT,  TAXAMNT,  COMDLRAM,  CASHAMNT,  DISTKNAM ,  DISAVAMT,  DISCRTND,  DISCDATE,  DSCDLRAM,  DSCPCTAM,  WROFAMNT,  TRXDSCRN,  CSPORNBR,  SLPRSNID,  SLSTERCD,  case  when @VOIDSTTS in (1,2)   then @VOIDDATE  else ''  end,  PPSAMDED,  GSTDSAMT,  DELETE1,  1,  VOIDSTTS,  VOIDDATE,  TAXSCHID,  CURNCYID,  PYMTRMID,  SHIPMTHD,  TRDISAMT,  SLSCHDID,  FRTSCHID,  MSCSCHID,  NOTEINDX,  Tax_Date,  APLYWITH,  SALEDATE,  CORRCTN,  SIMPLIFD,  Electronic,  ECTRX  from RM30101 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6844    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   delete RM30101 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6944    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   insert RM10101 (  TRXSORCE,  POSTED,  POSTEDDT,  PSTGSTUS,  CHANGED,  DOCNUMBR,  DCSTATUS,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,  DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef )  select   TRXSORCE,  1,  POSTEDDT,  1,  0,  DOCNUMBR,  case         when substring(TRXSORCE,1,5) = 'RMAPY'  then 2  else 1  end,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,  DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef  from RM30301 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6900    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   delete RM30301 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6901    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   insert RM10501 (  NCOMAMNT,  RMDTYPAL,  COMPRCNT,  DOCNUMBR,  SEQNUMBR,  TRXSORCE,  COMTRSRC,  CUSTNMBR,  SLPRSNID,  SALSTERR,  COMMCODE,  PRCTOSAL,  SLSAMNT,  COMDLRAM,  POSTED,  COMMPAID,  COMMDEST,  ORCOMAMT,  ORNCMAMT,  ORSLSAMT,  CURRNIDX )  select   NCOMAMNT,  RMDTYPAL,  COMPRCNT,  DOCNUMBR,  SEQNUMBR,  TRXSORCE,  case  when @VOIDSTTS in (1,2)  then '*'  else COMTRSRC  end,  CUSTNMBR,  SLPRSNID,  SALSTERR,  COMMCODE,  PRCTOSAL,  SLSAMNT,  COMDLRAM,  POSTED,  COMMPAID,  COMMDEST,  ORCOMAMT,  ORNCMAMT,  ORSLSAMT,  CURRNIDX  from RM30501 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6903    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   delete RM30501 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6904    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   insert RM10601 (  BACHNUMB,  RMDTYPAL,  DOCNUMBR,  CUSTNMBR,  TAXDTLID,  TRXSORCE,  ACTINDX,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  STAXAMNT,  ORSLSTAX,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXDTSLS,  ORTOTSLS,  TDTTXSLS,  ORTXSLS,  POSTED,  SEQNUMBR,  CURRNIDX )  select   BACHNUMB,  RMDTYPAL,  DOCNUMBR,  CUSTNMBR,  TAXDTLID,  TRXSORCE,  ACTINDX,  0,  TAXAMNT,  ORTAXAMT,  STAXAMNT,  ORSLSTAX,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXDTSLS,  ORTOTSLS,  TDTTXSLS,  ORTXSLS,  POSTED,  SEQNUMBR,  CURRNIDX  from RM30601 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6905    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   delete RM30601 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6906    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   update RM00401 set DCSTATUS = 2 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6907    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end end  select @CUSTNAME = CUSTNAME from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX, 0), @DECPLCUR = isnull(DECPLCUR, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = isnull(FUNLCURR, ''), @CURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock)  select @DECPLCUR = isnull(DECPLCUR, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end  if (@DECPLCUR > 0) begin  select @DECPLCUR = @DECPLCUR - 1 end  if (@VOIDSTTS in (1,2)) begin  update RM10501 set COMTRSRC = '*',COMMPAID = 1 where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 5339    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@CHEKNMBR <> '')  begin  select @DOCNUMBER = @CHEKNMBR  end  else  begin  select @DOCNUMBER = @I_vDOCNUMBR  end   if ((@VOIDSTTS = 1) and   ((@SOPORIG = 0) and (exists (select 1 from CM20300 (nolock) where SRCDOCNUM = @I_vDOCNUMBR and AUDITTRAIL = @TRXSORCE_FROM and  CMLinkID = @I_vCUSTNMBR and depositnumber = ''))) or  ((@SOPORIG = 1) and (exists (select 1 from CM20300 (nolock) where RCPTNMBR = @DOCNUMBER and AUDITTRAIL = @TRXSORCE_FROM and  CMLinkID = @I_vCUSTNMBR and depositnumber = '' and DEPOSITED = 0))))  begin  if (@SOPORIG = 0)  begin  update CM20300 set  VOIDED = 1,  VOIDDATE = @GLPOSTDT,   VOIDPDATE = @I_vGLPOSTDT,  VOIDDESC = DSCRIPTN   where SRCDOCNUM = @I_vDOCNUMBR and AUDITTRAIL = @TRXSORCE_FROM and CMLinkID = @I_vCUSTNMBR and depositnumber = ''   if (@@error <> 0)  begin  select @O_iErrorState = 6252    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert CM20100 (  CMDNUMWK,  RecNumControl,  VOIDED,  CNTRLTYP,  AUDITTRAIL,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG )  select   CMDNUMWK,  -RecNumControl,  1,   CNTRLTYP,  @TRXSORCE,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG  from CM20100 where CMTrxNum = @DOCNUMBER and AUDITTRAIL = @TRXSORCE_FROM   if (@@error <> 0)  begin  select @O_iErrorState = 6221    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin   insert CM20100 (  CMDNUMWK,  RecNumControl,  VOIDED,  CNTRLTYP,  AUDITTRAIL,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG )  select   CMDNUMWK,  -RecNumControl,  1,   CNTRLTYP,  @TRXSORCE,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG  from CM20100 where CMTrxNum = @DOCNUMBER and AUDITTRAIL = @TRXSORCE_FROM  if (@@error <> 0)  begin  select @O_iErrorState = 9703    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update CM20300 set  VOIDED = 1,  VOIDDATE = @VOIDDATE,  VOIDPDATE = @I_vGLPOSTDT  where RCPTNMBR = @DOCNUMBER and AUDITTRAIL = @TRXSORCE_FROM and CMLinkID = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 9704    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  else  if (@VOIDSTTS = 1)  begin  exec @iStatus = cmGetLastJournalNumber @CMDNUMWK output, @icmGetLastJournalNumberErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@icmGetLastJournalNumberErrState <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 10445    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @CMDNUMWK = @CMDNUMWK + 1   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 7778    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@SOPORIG = 0)  begin  select @VOIDTRXSORCE = TRXSORCE from RM20101 (nolock) where DOCNUMBR = @I_vDOCNUMBR  select @SequenceNumber = CMRECNUM from CM20300 (nolock) where SRCDOCNUM = @I_vDOCNUMBR and AUDITTRAIL = @VOIDTRXSORCE   insert CM20100 (  CMDNUMWK,  RecNumControl,  VOIDED,  CNTRLTYP,  AUDITTRAIL,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG )  select   @CMDNUMWK,  @CMDNUMWK,  0,   CNTRLTYP,  @TRXSORCE,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG  from CM20100 where CMDNUMWK = @SequenceNumber  if (@@error <> 0)  begin  select @O_iErrorState = 9701    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert CM20300 (  AUDITTRAIL,  BANKNAME,  BNKBRNCH,  CARDNAME,  CHEKBKID,  CMLinkID,  CMRECNUM,  CNTRLTYP,  CURNCYID,  CURRNIDX,  Cash_Account_Index,  Checkbook_Amount,  DECPLCUR,  DENXRATE,  DEPOSITED,  DSCRIPTN,  EXCHDATE,  EXGTBLID,  EXPNDATE,  GLPOSTDT,  MCTRXSTT,  MDFUSRID,  MODIFDT,  NOTEINDX,  ORIGAMT,  POSTEDDT,  PTDUSRID,  RATETPID,  RCPTAMT,  RCPTNMBR,  RCRDSTTS,  RCVGRATETPID,  RCVGRTCLCMTD,  RLGANLOS,  RTCLCMTD,  RcpType,  RcvdFrom,  Realized_GL_Account_Inde,  Receiving_DenomEXRate,  Receiving_Exchange_Rate,  Receiving_MC_Transaction,  SOURCDOC,  SRCDOCNUM,  SRCDOCTYP,  TIME1,  USERDEF1,  USERDEF2,  VOIDDATE,  VOIDDESC,  VOIDED,  VOIDPDATE,  XCHGRATE,  depositnumber,  receiptdate,  sRecNum  )  select top 1  @TRXSORCE,  BANKNAME,  BNKBRNCH,  CARDNAME,  CHEKBKID,  CMLinkID,  @CMDNUMWK,  CNTRLTYP,  CURNCYID,  CURRNIDX,  Cash_Account_Index,  - Checkbook_Amount,  DECPLCUR,  DENXRATE,  0,  DSCRIPTN,  EXCHDATE,  EXGTBLID,  EXPNDATE,  GLPOSTDT,  MCTRXSTT,  MDFUSRID,  MODIFDT,  @NOTEINDX,  - ORIGAMT,  POSTEDDT,  PTDUSRID,  RATETPID,  - RCPTAMT,  RCPTNMBR,  RCRDSTTS,  RCVGRATETPID,  RCVGRTCLCMTD,  RLGANLOS,  RTCLCMTD,  RcpType,  RcvdFrom,  Realized_GL_Account_Inde,  Receiving_DenomEXRate,  Receiving_Exchange_Rate,  Receiving_MC_Transaction,  @Prefix,  SRCDOCNUM,  SRCDOCTYP,  TIME1,  USERDEF1,  USERDEF2,  VOIDDATE,  VOIDDESC,  VOIDED,  VOIDPDATE,  XCHGRATE,  '',  receiptdate,  @CMDNUMWK   from CM20300 where SRCDOCNUM = @I_vDOCNUMBR and AUDITTRAIL = @TRXSORCE_FROM and CMLinkID = @I_vCUSTNMBR and depositnumber <> ''  if (@@error <> 0)  begin  select @O_iErrorState = 7777    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin   select @SOPNUMBE = SOPNUMBE, @VOIDTRXSORCE = TRXSORCE  from SOP10103 (nolock) where DOCNUMBR = @I_vDOCNUMBR  select @SOPDEPCOUNT = COUNT(*)from CM20300 (nolock) where SRCDOCNUM = @SOPNUMBE and RCPTNMBR = @DOCNUMBER and AUDITTRAIL = @VOIDTRXSORCE    if (@SOPDEPCOUNT > 1)  begin  select @O_iErrorState = 9705    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @SequenceNumber = CMRECNUM from CM20300 (nolock) where SRCDOCNUM = @SOPNUMBE and RCPTNMBR = @DOCNUMBER and AUDITTRAIL = @VOIDTRXSORCE   insert CM20100 (  CMDNUMWK,  RecNumControl,  VOIDED,  CNTRLTYP,  AUDITTRAIL,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG )  select   @CMDNUMWK,  @CMDNUMWK,  0,   CNTRLTYP,  @TRXSORCE,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG  from CM20100 where CMDNUMWK = @SequenceNumber  if (@@error <> 0)  begin  select @O_iErrorState = 9706    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert CM20300 (  AUDITTRAIL,  BANKNAME,  BNKBRNCH,  CARDNAME,  CHEKBKID,  CMLinkID,  CMRECNUM,  CNTRLTYP,  CURNCYID,  CURRNIDX,  Cash_Account_Index,  Checkbook_Amount,  DECPLCUR,  DENXRATE,  DEPOSITED,  DSCRIPTN,  EXCHDATE,  EXGTBLID,  EXPNDATE,  GLPOSTDT,  MCTRXSTT,  MDFUSRID,  MODIFDT,  NOTEINDX,  ORIGAMT,  POSTEDDT,  PTDUSRID,  RATETPID,  RCPTAMT,  RCPTNMBR,  RCRDSTTS,  RCVGRATETPID,  RCVGRTCLCMTD,  RLGANLOS,  RTCLCMTD,  RcpType,  RcvdFrom,  Realized_GL_Account_Inde,  Receiving_DenomEXRate,  Receiving_Exchange_Rate,  Receiving_MC_Transaction,  SOURCDOC,  SRCDOCNUM,  SRCDOCTYP,  TIME1,  USERDEF1,  USERDEF2,  VOIDDATE,  VOIDDESC,  VOIDED,  VOIDPDATE,  XCHGRATE,  depositnumber,  receiptdate,  sRecNum  )  select top 1  @TRXSORCE,  BANKNAME,  BNKBRNCH,  CARDNAME,  CHEKBKID,  CMLinkID,  @CMDNUMWK,  CNTRLTYP,  CURNCYID,  CURRNIDX,  0,      case      when XCHGRATE <> 0 and RLGANLOS <> 0  then (Checkbook_Amount - RLGANLOS) * -1  else -Checkbook_Amount  end,  DECPLCUR,  0,      0,  '',  EXCHDATE,  EXGTBLID,  EXPNDATE,  GLPOSTDT,  0,      MDFUSRID,  MODIFDT,  @NOTEINDX,  - ORIGAMT,  POSTEDDT,  PTDUSRID,  '',      - RCPTAMT,  RCPTNMBR,  RCRDSTTS,  RCVGRATETPID,  0,      0,      RTCLCMTD,  RcpType,  RcvdFrom,  0,      0,      Receiving_Exchange_Rate,   0,      'RMMSC',  @I_vDOCNUMBR,  9,      TIME1,  USERDEF1,  USERDEF2,  VOIDDATE,     VOIDDESC,  0,  VOIDPDATE,     Receiving_Exchange_Rate,   '',  receiptdate,  @CMDNUMWK   from CM20300 where RCPTNMBR = @DOCNUMBER and CMLinkID = @I_vCUSTNMBR and SRCDOCNUM = @SOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 9702    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   if (@VOIDSTTS = 2)  begin  select @VOIDTRXSORCE = TRXSORCE from RM20101 (nolock) where DOCNUMBR = @I_vDOCNUMBR  select @SequenceNumber = CMRECNUM from CM20300 (nolock) where SRCDOCNUM = @I_vDOCNUMBR and AUDITTRAIL = @VOIDTRXSORCE   exec @iStatus = cmGetLastJournalNumber @CMDNUMWK output, @icmGetLastJournalNumberErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@icmGetLastJournalNumberErrState <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 10446    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @CMDNUMWK = @CMDNUMWK + 1   insert CM20100 (  CMDNUMWK,  RecNumControl,  VOIDED,  CNTRLTYP,  AUDITTRAIL,  CHEKBKID,  CMTrxType,  CMTrxNum,  CMERRMSG)  select   @CMDNUMWK,  @CMDNUMWK,  0,   1,  @TRXSORCE,  @CheckCHEKBKID,  4,  CMTrxNum,  CMERRMSG  from CM20100 where CMDNUMWK = @SequenceNumber  if (@@error <> 0)  begin  select @O_iErrorState = 9497    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @SEQNUMBR = isnull(max(SEQNUMBR),0) from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR and TRXSORCE <> @TRXSORCE_FROM   if (@SEQNUMBR = 0)  begin  select @SEQNUMBR = max(SEQNUMBR) from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and TRXSORCE = @TRXSORCE_FROM and CUSTNMBR = @I_vCUSTNMBR  end   if (@TRXSORCE = '')  begin  exec @iStatus = taGetTrxSourceNumber  3,  @Prefix,  1,  @TRXSORCE output,  @iTrxSorceErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iTrxSorceErrState <> 0) or (@TRXSORCE = '') or (@TRXSORCE is NULL) or (@iError <> 0))  begin   select @O_iErrorState = 6269    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @SEQNUMBR = isnull(max(SEQNUMBR),0) from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR and TRXSORCE <> @TRXSORCE_FROM  if (@SEQNUMBR = 0)  begin  select @SEQNUMBR = max(SEQNUMBR) from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and TRXSORCE = @TRXSORCE_FROM and CUSTNMBR = @I_vCUSTNMBR  end   if exists(select top 1 1 from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR)  begin  select @manual = 1   end  else  begin  select @manual = 0  end   select @SUMCREDITS = sum(CRDTAMNT) from RM10101 (nolock) where  DOCNUMBR = @I_vDOCNUMBR and   RMDTYPAL = @I_vRMDTYPAL and   TRXSORCE = @TRXSORCE_FROM and   CUSTNMBR = @I_vCUSTNMBR and  RMDTYPAL >= 7   select  @SUMDEBITS = sum(DEBITAMT) from RM10101 (nolock) where  DOCNUMBR = @I_vDOCNUMBR and   RMDTYPAL = @I_vRMDTYPAL and   TRXSORCE = @TRXSORCE_FROM and   CUSTNMBR = @I_vCUSTNMBR and  RMDTYPAL >= 7   if @SEQNUMBR > 0 and @SUMDEBITS = @SUMCREDITS  begin  select @RECBLESSUM = isnull(sum(DEBITAMT-CRDTAMNT),0),@ORRECBLESSUM = isnull(sum(ORDBTAMT-ORCRDAMT),0)  from RM10101 (nolock) where   DOCNUMBR = @I_vDOCNUMBR and  RMDTYPAL = @I_vRMDTYPAL and  TRXSORCE = @TRXSORCE_FROM and  CUSTNMBR = @I_vCUSTNMBR and  RMDTYPAL >= 7 and  (DISTTYPE = 2 or  DISTTYPE = 4 or  DISTTYPE = 5 )  insert RM10101 (  CATEGUSD,  CHANGED,  CRDTAMNT,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DCSTATUS,  DEBITAMT,  DistRef,  DISTTYPE,  DOCNUMBR,  DSTINDX,  ORCRDAMT,  ORDBTAMT,  POSTED,  POSTEDDT,  PROJCTID,  PSTGSTUS,  RMDTYPAL,  SEQNUMBR,  TRXSORCE,  USERID )  select   CATEGUSD,  0,  DEBITAMT,  CURNCYID,  CURRNIDX,  CUSTNMBR,  case        when @VOIDSTTS in (1,2)  then 0  else 2  end,  case  when DISTTYPE = 3 and @CURNCYID = @FUNLCURR  then CRDTAMNT - @RECBLESSUM  else CRDTAMNT  end,  DistRef,  DISTTYPE,  DOCNUMBR,  DSTINDX,  ORDBTAMT,  case  when DISTTYPE = 3 and @CURNCYID = @FUNLCURR  then ORCRDAMT - @ORRECBLESSUM  else ORCRDAMT  end,  POSTED,  case        when @VOIDSTTS in (1,2)  then @VOIDDATE  else convert(varchar(12),getdate())  end,  PROJCTID,  PSTGSTUS,  RMDTYPAL,  SEQNUMBR + @SEQNUMBR,  @TRXSORCE,  USERID  from RM10101 (nolock) where   DOCNUMBR = @I_vDOCNUMBR and   RMDTYPAL = @I_vRMDTYPAL and   TRXSORCE = @TRXSORCE_FROM and   CUSTNMBR = @I_vCUSTNMBR and  RMDTYPAL >= 7 and  DISTTYPE <> 6 and  (DISTTYPE < 2 or  DISTTYPE > 5 or  DISTTYPE = 3)  if (@@error <> 0)  begin  select @O_iErrorState = 6678    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end    if (@manual = 0)  begin  select @CREATEDIST = 1  end  else  begin  select @CREATEDIST = 0  end   end   if (@CURNCYID = @FUNLCURR)  begin  select @ORCHKAMT = @CHECKAMT,@ORCASAMT = @CASHAMT,@ORCCDAMT = @CRCRDAMT   if (@DOCLOCATION = 3)  begin  select  @ORCTRXAM = CURTRXAM,  @ORSLSAMT2 = SLSAMNT,  @ORCSTAMT2 = COSTAMNT,  @ORFRTAMT2 = FRTAMNT,  @ORMISCAMT2 = MISCAMNT,  @ORTAXAMT2 = TAXAMNT,  @ORDISRTD2 = DISCRTND,  @ORDDLRAT2 = DSCDLRAM,  @ORTDISAM2 = TRDISAMT,  @ORORGTRX2 = ORTRXAMT,  @ORWROFAM2 = WROFAMNT,  @ORCOMAMT2 = COMDLRAM,  @ORBKTSLS2 = BKTSLSAM,  @ORBKTFRT2 = BKTFRTAM,  @ORBKTMSC2 = BKTMSCAM  from RM20101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  end  else  begin  if (@DOCLOCATION = 4)  begin  select  @ORCTRXAM = CURTRXAM,  @ORSLSAMT2 = SLSAMNT,  @ORCSTAMT2 = COSTAMNT,  @ORFRTAMT2 = FRTAMNT,  @ORMISCAMT2 = MISCAMNT,  @ORTAXAMT2 = TAXAMNT,  @ORDISRTD2 = DISCRTND,  @ORDDLRAT2 = DSCDLRAM,  @ORTDISAM2 = TRDISAMT,  @ORORGTRX2 = ORTRXAMT,  @ORWROFAM2 = WROFAMNT,  @ORCOMAMT2 = COMDLRAM,  @ORBKTSLS2 = BKTSLSAM,  @ORBKTFRT2 = BKTFRTAM,  @ORBKTMSC2 = BKTMSCAM  from RM30101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  end  end   end   exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX2,  @I_vCURNCYID = @CURNCYID2,  @I_vPTDUSRID = '',   @I_vTRADEAMT = @TRADEAMT2,  @I_vFREIGHTAMT = @FREIGHTAMT2,  @I_vMISCAMNT = @MISCAMNT2,  @I_vCASHAMT = @CASHAMT,  @I_vCashCHEKBKID = @CashCHEKBKID,  @I_vCHECKAMT = @CHECKAMT,  @I_vCheckCHEKBKID = @CheckCHEKBKID,  @I_vCRCRDAMT = @CRCRDAMT,  @I_vTDISTKAMT = 0,  @I_vDISAVAMT = 0,  @I_vCRCRDNAM = @CRCRDNAM,  @I_vDISCRTND = @DISCRTND2,                @I_vDOCAMNT = @ORTRXAMTPYMNT,  @I_vSLSAMNT = @SLSAMNT2,  @I_vCOSTAMNT = @COSTAMNT2,  @I_vCOMDLRAM = @COMDLRAM2,  @I_vRATETPID = @RATETPID,    @I_vXCHGRATE = @XCHGRATE,    @I_vEXCHDATE = @EXCHDATE,    @I_vEXPNDATE = @EXPNDATE,    @I_vEXGTBLID = @EXGTBLID,    @I_vTIME1 = @TIME1,     @I_vORCTRXAM = @ORCTRXAM,    @I_vORSLSAMT = @ORSLSAMT2,    @I_vORCSTAMT = @ORCSTAMT2,      @I_vORFRTAMT = @ORFRTAMT2,                @I_vORMISCAMT = @ORMISCAMT2,           @I_vORTAXAMT = @ORTAXAMT2,             @I_vORCASAMT = @ORCASAMT,              @I_vORCHKAMT = @ORCHKAMT,               @I_vORCCDAMT = @ORCCDAMT,                 @I_vORAPPAMT = 0 ,                 @I_vORDISTKN = 0 ,                 @I_vORDAVAMT = 0,               @I_vORDATKN = 0,                @I_vORDISRTD = @ORDISRTD2,         @I_vORDDLRAT = @ORDDLRAT2,         @I_vORTDISAM = @ORTDISAM2,         @I_vORORGTRX = @ORORGTRX2,       @I_vORWROFAM = @ORWROFAM2,            @I_vORCOMAMT = @ORCOMAMT2,          @I_vORBKTSLS = @ORBKTSLS2,             @I_vORBKTFRT = @ORBKTFRT2,             @I_vORBKTMSC = @ORBKTMSC2,     @I_vApply = 5,  @I_vTRXSORCE = @TRXSORCE,   @I_vWROFAMNT = 0,  @I_vDistRef = @I_vDOCNUMBR,  @I_vPOSTEDDT = @DOCDATEPAYMENT,  @I_vCMPANYID = @CMPANYID,  @I_vINTERID  = @sINTERID,  @I_vRTCLCMTD = @RTCLCMTD,  @I_vDECPLCUR = @DECPLCUR,  @I_vCREATEDIST = @CREATEDIST,  @O_iErrorState = @iUpdDistErrState output,  @oErrString = @oErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  if (@iUpdDistErrState <> 0)  begin  exec @iStatus = taUpdateString  @iUpdDistErrState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  end  select @O_iErrorState = 6217    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  if (@iError <> 0)  begin  select @O_iErrorState = 6218    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if ((@DISTKNAMSUM > 0 or @WROFAMNTSUM > 0) and (@DOCLOCATION = 3 or @DOCLOCATION = 4)) or (@VOIDSTTS = 1 or @VOIDSTTS = 2) begin   exec @iStatus = glGetNextJournalEntry  1,  0,  @JRNENTRY output,  @O_tOUTOK output,  @iJrnlEntryErrState output  select @iError = @@error   if ((@iStatus <> 0) or (@iJrnlEntryErrState <> 0) or (@O_tOUTOK <> 1) or (@iError <> 0))  begin  select @O_iErrorState = 6267   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vGLPOSTDT = '')  begin  select @I_vGLPOSTDT = @DOCDATEPAYMENT  end   exec @iStatus = taReverseGlTransaction  @I_vINTERID   = @sINTERID,  @I_vDTAControlNum = @I_vDOCNUMBR,  @I_vORMSTRID  = @I_vCUSTNMBR,  @I_vCUSTNAME  = @CUSTNAME,  @I_vCURNCYID  = @CURNCYID,  @I_vCURRNIDX  = @CURRNIDX,  @I_vDECPLCUR  = @DECPLCUR,  @I_vTRXDATE  = @I_vGLPOSTDT,  @I_vJRNENTRY  = @JRNENTRY,  @I_vTRXSORCE  = @TRXSORCE,  @I_vTRXSORCE_FROM = @TRXSORCE_FROM,  @I_vDENXRATE  = 0,  @I_vMCTRXSTT   = 0,  @I_vDOCDATE  = '',  @I_vORTRXDESC  = '',  @I_vORTRXTYP  = @I_vRMDTYPAL,  @I_vSOURCDOC   = @SOURCDOC,  @I_vREFRENCE   = @REFRENCE,  @I_vBCHSOURC   = 'GL_Normal',      @I_vSERIES  = 3,  @I_vDISCOUNTS  = 1,  @I_vORPSTDDT  = @POSTDATE,  @O_iErrorState  = @O_iErrorState output,  @oErrString    = @oErrString output  if (@@error <> 0 or @O_iErrorState <> 0 or @iStatus <> 0)  begin  select @O_iErrorState = 6247    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if ((@TRXSORCE <> '') and (@I_vRMDTYPAL <> 9)) begin  insert RM30502   (  NOTEINDX,  GLPOSTDT,  TRXSORCE,  BCHSOURC,  BACHNUMB,  REPRNTNT,  TRXMISNG,  CHEKBKID,  NUMOFTRX,  BACHFREQ,  BCHCOMNT,  USERID  )  select  0,  @GLPOSTDT,  @TRXSORCE,  @BCHSOURC,  'sa',  1,  0,  '',  0,  case  when @VOIDSTTS = 0  then 1  else 0  end,  '',  'sa'  if (@@error <> 0 or @O_iErrorState <> 0)  begin  select @O_iErrorState = 5343    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if @NUMADTPL > 0 or @ORTRXAMTPYMNT > 0 or @WROFAMNTSUM > 0 or @DISTKNAMSUM > 0 or  @AGPERAMT_1 > 0 or @AGPERAMT_2 > 0 or   @AGPERAMT_3 > 0 or @AGPERAMT_4 > 0 or @AGPERAMT_5 > 0 or @AGPERAMT_6 > 0 or @AGPERAMT_7 > 0  begin  select  @AVGDTPYR1 = (NUMADTPY * AVGDTPYR) - @averagedayssum,  @AVGDTPYR2 = (NUMADTPY - @NUMADTPY),  @AVDTPLIF1 = (NUMADTPL * AVDTPLIF) - @averagedayssum,  @AVDTPLIF2 = (NUMADTPL - @NUMADTPL)  from RM00103 where CUSTNMBR = @I_vCUSTNMBR   update RM00103 set   AVGDTPYR =   case   when NUMADTPY - @NUMADTPY <= 0  then 0  when round(@AVGDTPYR1/@AVGDTPYR2,0) > 0  then round(@AVGDTPYR1/@AVGDTPYR2,0)   else 0  end,  AVDTPLIF =   case   when NUMADTPL - @NUMADTPL <= 0  then 0  when round(@AVDTPLIF1/@AVDTPLIF2,0) > 0  then round(@AVDTPLIF1/@AVDTPLIF2,0)   else 0  end,  TTLSLYTD =  case  when @VOIDSTTS = 1 and @I_vRMDTYPAL = 7  then TTLSLYTD + @SLSAMNT2  else TTLSLYTD  end,  TTLSLLTD =  case  when @VOIDSTTS = 1 and @I_vRMDTYPAL = 7  then TTLSLLTD + @SLSAMNT2  else TTLSLLTD  end,  TTLRTYTD =   case  when @VOIDSTTS = 1 and @I_vRMDTYPAL = 8  then TTLRTYTD - @SLSAMNT2  else TTLRTYTD  end,  TTLRTLTD =   case  when @VOIDSTTS = 1 and @I_vRMDTYPAL = 8  then TTLRTLTD - @SLSAMNT2  else TTLRTLTD  end,   TCOSTYTD =   case  when @VOIDSTTS in (1,2)  then TCOSTYTD + @COSTAMNT2  else TCOSTYTD  end,  TCOSTLTD =   case  when @VOIDSTTS in (1,2)  then TCOSTLTD + @COSTAMNT2  else TCOSTLTD  end,  TCSHRYTD =   case  when @VOIDSTTS in (1,2) and @I_vRMDTYPAL = 9  then TCSHRYTD - @ORTRXAMTPYMNT  when @VOIDSTTS in (1,2) and @I_vRMDTYPAL = 8  then TCSHRYTD + @CASHAMNT  else TCSHRYTD  end,  TCSHRLTD =  case  when @VOIDSTTS in (1,2) and @I_vRMDTYPAL = 9  then TCSHRLTD - @ORTRXAMTPYMNT  when  @VOIDSTTS = 1 and @I_vRMDTYPAL = 8  then TCSHRLTD + @CASHAMNT  else TCSHRLTD  end,  TDTKNYTD =   case   when (@DOCLOCATION in (3,4))   then TDTKNYTD - @DISTKNAMSUM  else TDTKNYTD  end,   TDTKNLTD =   case   when (@DOCLOCATION in (3,4))  then TDTKNLTD - @DISTKNAMSUM  else TDTKNLTD  end,   TDISAYTD =   case   when (@DOCLOCATION in (3,4))  then TDISAYTD + @DISAVTKNSUM  else TDISAYTD  end,   TWROFYTD =  case   when (@DOCLOCATION in (3,4))  then TWROFYTD - @WROFAMNTSUM  else TWROFYTD  end,   TWROFLTD =  case   when (@DOCLOCATION in (3,4))  then TWROFLTD -  @WROFAMNTSUM  else TWROFLTD  end,  CUSTBLNC =    case  when (@VOIDSTTS = 0 and @I_vRMDTYPAL in (7,9))   then CUSTBLNC + @AGPERAMT_1 + @AGPERAMT_2 + @AGPERAMT_3 + @AGPERAMT_4 + @AGPERAMT_5 + @AGPERAMT_6 + @AGPERAMT_7  when @VOIDSTTS <> 0   then CUSTBLNC + @AGPERAMT_1 + @AGPERAMT_2 + @AGPERAMT_3 + @AGPERAMT_4 + @AGPERAMT_5 + @AGPERAMT_6 + @AGPERAMT_7  else CUSTBLNC  end,   AGPERAMT_1 = AGPERAMT_1 + @AGPERAMT_1,   AGPERAMT_2 = AGPERAMT_2 + @AGPERAMT_2,  AGPERAMT_3 = AGPERAMT_3 + @AGPERAMT_3,  AGPERAMT_4 = AGPERAMT_4 + @AGPERAMT_4,  AGPERAMT_5 = AGPERAMT_5 + @AGPERAMT_5,  AGPERAMT_6 = AGPERAMT_6 + @AGPERAMT_6,  AGPERAMT_7 = AGPERAMT_7 + @AGPERAMT_7,  NUMADTPL = NUMADTPL - @NUMADTPL,  NUMADTPY = NUMADTPY - @NUMADTPY,  NONSFLIF =        case   when @VOIDSTTS = 2  then NONSFLIF + 1  else NONSFLIF  end,   TNSFCYTD =       case   when @VOIDSTTS = 2  then TNSFCYTD + @AGPERAMT_1 + @AGPERAMT_2 + @AGPERAMT_3 + @AGPERAMT_4 + @AGPERAMT_5 + @AGPERAMT_6 + @AGPERAMT_7  else TNSFCYTD  end,  TNSFCLIF =      case   when @VOIDSTTS = 2   then TNSFCLIF + @AGPERAMT_1 + @AGPERAMT_2 + @AGPERAMT_3 + @AGPERAMT_4 + @AGPERAMT_5 + @AGPERAMT_6 + @AGPERAMT_7  else TNSFCLIF  end  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6647    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@VOIDSTTS in(1,2)) begin  update RM00103 set   CUSTBLNC = CUSTBLNC + (@ORTRXAMTPYMNT - @CASHAMNT),  AGPERAMT_1 =  case  when @AGNGBUKT = 1  then AGPERAMT_1 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_1  end,  AGPERAMT_2 =  case  when @AGNGBUKT = 2  then AGPERAMT_2 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_2  end,  AGPERAMT_3 =  case  when @AGNGBUKT = 3  then AGPERAMT_3 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_3  end,  AGPERAMT_4 =  case  when @AGNGBUKT = 4  then AGPERAMT_4 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_4  end,  AGPERAMT_5 =  case  when @AGNGBUKT = 5  then AGPERAMT_5 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_5  end,  AGPERAMT_6 =  case  when @AGNGBUKT = 6  then AGPERAMT_6 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_6  end,  AGPERAMT_7 =  case  when @AGNGBUKT = 7  then AGPERAMT_7 + (@ORTRXAMTPYMNT - @CASHAMNT)  else AGPERAMT_7  end  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 8330    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPTODCNM = '') begin   delete RM20201 where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6839    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  delete RM20201 where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL   and APTODCNM = @I_vAPTODCNM and APTODCTY = @I_vAPTODCTY and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6840    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end   if (@DOCLOCATION = 4)   begin  insert RM20201 (  ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  )  select   ActualApplyToAmount,  ActualDiscAvailTaken,  ActualDiscTakenAmount,  ActualWriteOffAmount,  APFRDCDT,  APFRDCNM,  APFRDCTY,  APFRMAPLYAMT,  APFRMDENRATE,  APFRMDISCAVAIL,  APFRMDISCTAKEN,  APFRMEXRATE,  APFRMMCTRXSTT,  APFRMRTCLCMETH,  APFRMWROFAMT,  ApplyFromGLPostDate,  ApplyToGLPostDate,  APPTOAMT,  APTODCDT,  APTODCNM,  APTODCTY,  APTODENRATE,  APTOEXRATE,  APTOMCTRXSTT,  APTORTCLCMETH,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  CPRCSTNM,  CURNCYID,  CURRNIDX,  CUSTNMBR,  DATE1,  DISAVTKN,  DISTKNAM,  FROMCURR,  GLPOSTDT,  GSTDSAMT,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ORAPTOAM,  ORDATKN,  ORDISTKN,  ORWROFAM,  POSTED,  PPSAMDED,  RLGANLOS,  Settled_Gain_CreditCurrT,  Settled_Gain_DebitCurrTr,  Settled_Gain_DebitDiscAv,  Settled_Loss_CreditCurrT,  Settled_Loss_DebitCurrTr,  Settled_Loss_DebitDiscAv,  TAXDTLID,  TIME1,  TRXSORCE,  WROFAMNT  from RM30201 a where APFRDCNM = @I_vDOCNUMBR and APFRDCTY = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR  and not exists ( select 1 from RM20201 b where a.APFRDCNM = b.APFRDCNM   and a.APFRDCTY = b.APFRDCTY and a.APTODCTY = b.APTODCTY and a.APTODCNM = b.APTODCNM and a.CUSTNMBR = b.CUSTNMBR )  if (@@error <> 0)  begin  select @O_iErrorState = 6279    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  end end  if (@DOCLOCATION = 3 or @DOCLOCATION = 4) and ( @DISAVTKNSUM > 0 or @DISTKNAMSUM > 0 or @APPTOAMTSUM > 0 or @VOIDDATE <> '' or @VOIDSTTS = 1 or @VOIDSTTS = 2 or @ORAPTOAMSUM > 0) begin  update RM20101 set   DINVPDOF =   case  when @VOIDSTTS in (1,2)  then @VOIDDATE  else ''  end,  DISAVTKN =   case  when @DOCLOCATION = 3  then DISAVTKN - @APFRMDISCAVAILSUM  else DISAVTKN  end,  DISTKNAM = DISTKNAM - @APFRMDISCTAKENSUM,  WROFAMNT = WROFAMNT - @APFRMWROFAMTSUM,  CURTRXAM =   case  when @VOIDSTTS in (1,2)  then 0  else CURTRXAM + @APFRMAPLYAMTSUM  end  where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6244   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update MC020102 set  DCSTATUS = 2,  ORWROFAM = ORWROFAM - @ActualWriteOffAmountSUM,  ORDISTKN = ORDISTKN - @ActualDiscTakenAmountSUM,  ORDATKN = ORDATKN - @ActualDiscAvailTakenSUM,  ORCTRXAM =   case   when @VOIDSTTS in (1,2)  then 0  else ORCTRXAM + @ActualApplyToAmountSUM  end  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 6937    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@VOIDSTTS in (1,2) and @ORTRXAMTPYMNT > 0)  begin  select top 1 @PERIODIDF = PERIODID, @YEAR1F = YEAR1 from SY40100 (nolock) where PERIODDT <= @DOCDATEPAYMENT and SERIES = 3 and ODESCTN = 'Voided Trx Maintenance'  order by PERIODDT desc   select @PERIODIDC = month(@DOCDATEPAYMENT)  select @YEAR1C = year(@DOCDATEPAYMENT)   update RM00104 set  SMRYSALS =  case  when @I_vRMDTYPAL in (8,9)  then SMRYSALS   else SMRYSALS + @SLSAMNT2  end,  SMRYRTRN =   case  when @I_vRMDTYPAL in (7,9)  then SMRYRTRN   else SMRYRTRN - @SLSAMNT2  end,  SMRYCRCD =   case  when @I_vRMDTYPAL = 9  then SMRYCRCD - @ORTRXAMTPYMNT  when @I_vRMDTYPAL = 8  then SMRYCRCD + @CASHAMNT  else SMRYCRCD  end,  SMRYCOST =  case  when @I_vRMDTYPAL = 9  then SMRYCOST   else SMRYCOST + @COSTAMNT2  end  where CUSTNMBR = @I_vCUSTNMBR and   ((YEAR1 = @YEAR1F and PERIODID = @PERIODIDF and HISTTYPE = 1) or   (YEAR1 = @YEAR1C and PERIODID = @PERIODIDC and HISTTYPE = 0))  if (@@error <> 0)  begin  select @O_iErrorState = 6249    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   if (@I_vRMDTYPAL = 8)  begin  update RM00305 set   COMSLTDT = COMSLTDT + @SLSAMNT2,  TTLCOMAM = TTLCOMAM + @COMDLRAM2,  COSTAMNT = COSTAMNT + @COSTAMNT2  where SALSTERR = @SALSTERR and  (( YEAR1 = @YEAR1F and PERIODID = @PERIODIDF and HISTTYPE = 1) or   (YEAR1 = @YEAR1C and PERIODID = @PERIODIDC and HISTTYPE = 0))  if (@@error <> 0)  begin  select @O_iErrorState = 6250    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update RM00302 set   COMSLTDT = COMSLTDT + @SLSAMNT2,  TTLCOMAM = TTLCOMAM + @COMDLRAM2,  COSTAMNT = COSTAMNT + @COSTAMNT2  where SLPRSNID = @SLPRSNID and  ((YEAR1 = @YEAR1F and PERIODID = @PERIODIDF and HISTTYPE = 1) or   (YEAR1 = @YEAR1C and PERIODID = @PERIODIDC and HISTTYPE = 0))  if (@@error <> 0)  begin  select @O_iErrorState = 6251    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update RM00303 set   COMSLTDT = COMSLTDT + @SLSAMNT2,  TTLCOMTD = TTLCOMTD + @COMDLRAM2,  COSTTODT = COSTTODT + @COSTAMNT2  where SALSTERR = @SALSTERR   if (@@error <> 0)  begin  select @O_iErrorState = 5338    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update RM00301 set   COMSLTDT = COMSLTDT + @SLSAMNT2,  TTLCOMTD = TTLCOMTD + @COMDLRAM2,  COSTTODT = COSTTODT + @COSTAMNT2  where SLPRSNID = @SLPRSNID   if (@@error <> 0)  begin  select @O_iErrorState = 6260    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update TX00202 set   TDTSYTD = TDTSYTD +(select isnull(sum(TAXDTSLS),0) from RM10601 where RM10601.DOCNUMBR =   @I_vDOCNUMBR and RM10601.RMDTYPAL = @I_vRMDTYPAL and  TX00202.TAXDTLID = RM10601.TAXDTLID ),  TXDTSYTD = TXDTSYTD +(select isnull(sum(TAXDTSLS),0) from RM10601 where RM10601.DOCNUMBR =   @I_vDOCNUMBR and RM10601.RMDTYPAL = @I_vRMDTYPAL and  TX00202.TAXDTLID = RM10601.TAXDTLID ),  TXDSTYTD = TXDSTYTD +(select isnull(sum(TAXAMNT),0) from RM10601 where RM10601.DOCNUMBR =   @I_vDOCNUMBR and RM10601.RMDTYPAL = @I_vRMDTYPAL and  TX00202.TAXDTLID = RM10601.TAXDTLID )  where TAXDTLID in (select TAXDTLID from RM10601 where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR)  if (@@error <> 0)  begin  select @O_iErrorState = 5336    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   update TX00203 set   TDTSLPCH = TDTSLPCH +(select isnull(sum(TAXDTSLS),0) from RM10601 where RM10601.DOCNUMBR =   @I_vDOCNUMBR and RM10601.RMDTYPAL = @I_vRMDTYPAL and  TX00203.TAXDTLID = RM10601.TAXDTLID ),  TXDTTXSP = TXDTTXSP +(select isnull(sum(TAXDTSLS),0) from RM10601 where RM10601.DOCNUMBR =   @I_vDOCNUMBR and RM10601.RMDTYPAL = @I_vRMDTYPAL and  TX00203.TAXDTLID = RM10601.TAXDTLID ),  TXDTSPTX = TXDTSPTX +(select isnull(sum(TAXAMNT),0) from RM10601 where RM10601.DOCNUMBR =   @I_vDOCNUMBR and RM10601.RMDTYPAL = @I_vRMDTYPAL and  TX00203.TAXDTLID = RM10601.TAXDTLID )  where TAXDTLID in (select TAXDTLID from RM10601 where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR)  and ( ( YEAR1 = @YEAR1F and PERIODID = @PERIODIDF and HISTTYPE = 1) or   ( YEAR1 = @YEAR1C and PERIODID = @PERIODIDC and HISTTYPE = 0 ) )  if (@@error <> 0)  begin  select @O_iErrorState = 5337    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  end end  else if @DOCLOCATION = 1 and ( @DISTKNAMSUM > 0 or @DISAVTKNSUM  > 0 or @APPTOAMTSUM > 0 ) begin  update RM10201 set   DISTKNAM = DISTKNAM - @APFRMDISCTAKENSUM,  DISAVTKN = DISAVTKN - @APFRMDISCAVAILSUM,  CURTRXAM = CURTRXAM + @APFRMAPLYAMTSUM  where RMDTYPAL = @I_vRMDTYPAL and   DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6648    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  else if @DOCLOCATION = 2 and (@DISTKNAMSUM > 0 or @DISAVTKNSUM > 0 or @APPTOAMTSUM > 0) begin  update RM10301 set   DISTKNAM = DISTKNAM - @DISTKNAMSUM,  DISAVTKN = DISAVTKN - @APFRMDISCAVAILSUM,  APPLDAMT = APPLDAMT - @APFRMAPLYAMTSUM  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 6242    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@ISMCTRX = 0) or ( (not exists(select distinct 1 from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select distinct 1 from CM00100 (nolock) where CURNCYID <> ''))) begin  update RM10101 set  ORCRDAMT = 0,   ORDBTAMT = 0  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 8303    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  EXEC @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,  @I_vtable_path_name = @Tbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output if ((@DexLockErrorState <> 0) or (@@error <> 0) or (@iStatus <> 0)) begin  select @O_iErrorState = 6268   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taRMUnapplyTransactionPost  @I_vCUSTNMBR,  @I_vDOCNUMBR,  @I_vRMDTYPAL,  @I_vAPTODCTY,  @I_vAPTODCNM,  @I_vGLPOSTDT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6283    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMUnapplyTransaction] TO [DYNGRP]
GO

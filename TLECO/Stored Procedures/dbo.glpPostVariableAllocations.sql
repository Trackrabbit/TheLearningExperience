SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[glpPostVariableAllocations]  @I_iSQLSessionID                int             = NULL,  @I_sTransactionType             smallint        = NULL,   @I_iJournalEntry                int             = NULL,   @I_cBatchSource                 char(15)        = NULL,   @I_cBatchNumber                 char(15)        = NULL,   @I_cUserID                      char(15)        = NULL,   @I_sSeries                      smallint        = NULL,   @I_iAccountIndex                int             = NULL,  @I_mDebit                       numeric(19,5)   = NULL,  @I_mCredit                      numeric(19,5)   = NULL,  @I_cAuditTrailCode              char(13)        = NULL,  @I_dTransactionDate             datetime        = NULL,  @I_sTransactionYear             smallint        = NULL,  @I_sPeriodID                    smallint        = NULL,  @I_nLedgerID int  = NULL,  @I_cDescription                 char(30)        = NULL,  @I_tPrintDistributions          tinyint  = NULL,   @I_tReversing                   tinyint  = NULL,   @I_tPrinting                    tinyint  = NULL,   @I_tPosting                     tinyint  = NULL,   @I_tRealTimeQuick               tinyint  = NULL,   @I_sQuickOffset                 smallint        = NULL,  @I_tHistory                     tinyint  = NULL,   @I_tOffsetAccount               tinyint  = NULL,   @I_mSequenceLine                numeric(19,5)   = NULL,  @I_mRecurringTRXSequence        numeric(19,5)   = NULL,  @I_sBalanceForCalculation       smallint        = NULL,  @I_mExchangeRate                numeric(15,7)   = NULL,  @I_cExchangeTableID             char(15)        = NULL,  @I_cFuncCurrencyID              char(15)        = NULL,  @I_sFuncCurrencyIndex           smallint        = NULL,  @I_sFuncDecimalPlaces           smallint        = NULL,  @I_tMCRegistered                tinyint  = NULL,  @I_sMCTransaction               smallint        = NULL,  @I_mOrigDebit                   numeric(19,5)   = NULL,  @I_mOrigCredit                  numeric(19,5)   = NULL,  @I_cOrigCurrencyID              char(15)        = NULL,  @I_sOrigCurrencyIndex           smallint        = NULL,  @I_sOrigDecimalPlaces           smallint        = NULL,  @I_sRateCalculationMethod       smallint        = NULL,  @I_cRateTypeID                  char(15)        = NULL,  @I_cIntercompanyID char(5)  = NULL,  @I_tICTransaction tinyint  = NULL,  @I_cOriginatingDocNumber char(21) = NULL,  @I_cOriginatingControlNumber char(21) = NULL,  @I_cOriginatingMasterID char(31) = NULL,  @I_cOriginatingMasterName char(65) = NULL,  @I_sOriginatingTrxType smallint = NULL,  @I_cOriginatingTRXDesc char(30) = NULL,  @I_sOrigDTASeries smallint = NULL,  @I_iOrigSequenceNumber int  = NULL,  @I_sDTAGLStatus smallint = NULL,  @I_nDTAIndex numeric(19,5) = NULL,  @I_nDenomExchangeRate numeric(15,7) = NULL,  @I_sMCTrxState smallint = NULL,  @I_dDocumentDate datetime = NULL,  @I_iClearingAccountIndex        int             = NULL,  @I_iPostingNumber int  = NULL,  @I_iPeriodPostingNumber int  = NULL,  @I_iPostingNumberHist int  = NULL,  @I_iPeriodPostingNumberHist int  = NULL,  @I_cCorrespondingUnit char(5)  = NULL,  @IO_bLineMessages               binary(4)       = NULL  output,  @IO_bLineMessages2              binary(4)       = NULL  output,  @IO_bRetainEarnMessages         binary(4)       = NULL  output,  @IO_bRetainEarnMessages2        binary(4)       = NULL  output,  @O_tDistributionsExist          tinyint  = NULL  output,  @O_iErrorState                  int             = NULL  output as  declare  @TRUE                           tinyint,  @FALSE                          tinyint,  @ALLOCATION                     smallint,  @MS_ITEM_31                     int,  @iDistributionIndex             int,  @iBreakdownIndex                int,  @iTempIndex                     int,  @sBalanceForCalculation  smallint,  @mAmount                        numeric(19,5),  @mAllocationTotal               numeric(19,5),  @mDistributionTotal             numeric(19,5),  @mBalanceSheetTotalDebits             numeric(19,5),  @mBalanceSheetTotalCredits             numeric(19,5),  @mProfitAndLossTotalDebits            numeric(19,5),  @mProfitAndLossTotalCredits            numeric(19,5),  @mOrigBalanceSheetTotalDebs         numeric(19,5),  @mOrigBalanceSheetTotalCreds         numeric(19,5),  @mOrigProfitAndLossTotalDebs        numeric(19,5),  @mOrigProfitAndLossTotalCred        numeric(19,5),  @mTempAmount      numeric(19,5),  @sAccountType                   smallint,  @tBreakdownsExist               tinyint,  @tTransaction                   tinyint,  @iError                         int,  @iStatus                        int,  @tLoop                          tinyint,  @bRetainEarnMessages binary(4),  @bRetainEarnMessages2 binary(4)  select   @O_tDistributionsExist = 0,  @O_iErrorState = 0,  @iStatus                = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID                is NULL or  @I_sTransactionType             is NULL or  @I_iJournalEntry                is NULL or   @I_cBatchSource                 is NULL or   @I_cBatchNumber                 is NULL or  @I_cUserID                      is NULL or   @I_sSeries                      is NULL or   @I_iAccountIndex                is NULL or  @I_mDebit                       is NULL or  @I_mCredit                      is NULL or  @I_cAuditTrailCode              is NULL or  @I_dTransactionDate             is NULL or  @I_sTransactionYear             is NULL or  @I_sPeriodID                    is NULL or  @I_nLedgerID is NULL or  @I_cDescription                 is NULL or  @I_tPrintDistributions          is NULL or  @I_tReversing                   is NULL or  @I_tPrinting                    is NULL or  @I_tPosting                     is NULL or  @I_tRealTimeQuick               is NULL or  @I_sQuickOffset                 is NULL or  @I_tHistory                     is NULL or  @I_tOffsetAccount               is NULL or  @I_mSequenceLine                is NULL or  @I_mRecurringTRXSequence        is NULL or  @I_sBalanceForCalculation       is NULL or  @I_mExchangeRate                is NULL or  @I_cExchangeTableID             is NULL or  @I_cFuncCurrencyID              is NULL or  @I_sFuncCurrencyIndex           is NULL or  @I_sFuncDecimalPlaces           is NULL or  @I_tMCRegistered                is NULL or  @I_sMCTransaction               is NULL or  @I_mOrigDebit                   is NULL or  @I_mOrigCredit                  is NULL or  @I_cOrigCurrencyID              is NULL or  @I_sOrigCurrencyIndex           is NULL or  @I_sOrigDecimalPlaces           is NULL or  @I_sRateCalculationMethod       is NULL or  @I_cRateTypeID                  is NULL or  @I_cIntercompanyID is NULL or  @I_tICTransaction is NULL or  @I_cOriginatingDocNumber is NULL or  @I_cOriginatingControlNumber is NULL or  @I_cOriginatingMasterID is NULL or  @I_cOriginatingMasterName is NULL or  @I_sOriginatingTrxType is NULL or  @I_cOriginatingTRXDesc is NULL or  @I_sOrigDTASeries is NULL or  @I_iOrigSequenceNumber is NULL or  @I_sDTAGLStatus is NULL or  @I_nDTAIndex is NULL or  @I_nDenomExchangeRate is NULL or  @I_sMCTrxState is NULL or  @I_dDocumentDate is NULL or  @I_iClearingAccountIndex        is NULL or  @I_iPostingNumber is NULL or  @I_iPeriodPostingNumber is NULL or  @I_iPostingNumberHist is NULL or  @I_iPeriodPostingNumberHist is NULL or  @IO_bLineMessages               is NULL or  @IO_bLineMessages2              is NULL or  @IO_bRetainEarnMessages is NULL or  @IO_bRetainEarnMessages2        is NULL or   @I_cCorrespondingUnit is NULL  begin   select @O_iErrorState = 20148  break  end    select  @TRUE           = 1,  @FALSE          = 0,  @ALLOCATION = 1,  @MS_ITEM_31 = power(2, 6)   select  @mProfitAndLossTotalDebits   = 0.0,  @mProfitAndLossTotalCredits   = 0.0     exec @iStatus = glpVerifyVariableAllocation  @I_iSQLSessionID,  @I_iAccountIndex,  @I_mDebit,  @I_mCredit,  @I_tPosting,  @ALLOCATION,                              @I_sFuncDecimalPlaces,  @I_sMCTransaction,  @I_mOrigDebit,  @I_mOrigCredit,  @I_cOrigCurrencyID,  @I_sOrigDecimalPlaces,  @IO_bLineMessages       output,  @IO_bLineMessages2      output,  @sAccountType           output,   @O_tDistributionsExist output,  @tBreakdownsExist       output,  @O_iErrorState          output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0 or @O_tDistributionsExist = @FALSE  break   if @tBreakdownsExist = @TRUE  begin  select   @iDistributionIndex = NULL,  @mAllocationTotal = 0.0   select  @iDistributionIndex = min (DistributionIndex)  from  #Breakdowns  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     AllocationType = @ALLOCATION   if @iDistributionIndex is NULL   begin  select @O_iErrorState = 20150  break   end    while (@iDistributionIndex is not NULL)  begin  select   @iBreakdownIndex        = NULL,  @mDistributionTotal = 0.0   select  @iBreakdownIndex = min (BreakdownIndex)  from  #Breakdowns  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     DistributionIndex = @iDistributionIndex  and     AllocationType = @ALLOCATION   if @iBreakdownIndex is NULL  begin  select @O_iErrorState = 20151  break   end    while (@iBreakdownIndex is not NULL)  begin  select @mAmount = 0.0   select  @sAccountType = AccountType  from  #Breakdowns  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     DistributionIndex = @iDistributionIndex  and BreakdownIndex = @iBreakdownIndex  and     AllocationType = @ALLOCATION   if @iBreakdownIndex is NULL  begin  select @O_iErrorState = 20151  break   end    if @iBreakdownIndex <> @I_iClearingAccountIndex  begin  exec @iStatus = glpCalculateAmountToPost  @iBreakdownIndex,  @sAccountType,  @I_sTransactionYear,  @I_sPeriodID,  @I_nLedgerID,  @I_sBalanceForCalculation,  @mAmount        output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end   select @mAmount = abs(@mAmount)   select  @mAllocationTotal = @mAllocationTotal + @mAmount,  @mDistributionTotal = @mDistributionTotal + @mAmount,  @iTempIndex = @iBreakdownIndex,  @iBreakdownIndex = NULL   select  @iBreakdownIndex = min (BreakdownIndex)  from  #Breakdowns  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     DistributionIndex = @iDistributionIndex  and     BreakdownIndex > @iTempIndex  and     AllocationType = @ALLOCATION  end    if @iStatus <> 0 or @O_iErrorState <> 0  break   if @mDistributionTotal <> 0.0  begin  update #Distributions   set     Percentage = @mDistributionTotal  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     DistributionIndex = @iDistributionIndex  and     AllocationType = @ALLOCATION   if @@rowcount <> 1  begin  select @O_iErrorState = 20276  break   end   end    select   @iTempIndex = @iDistributionIndex,  @iDistributionIndex     = NULL   select  @iDistributionIndex = min (DistributionIndex)  from  #Breakdowns  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     DistributionIndex > @iTempIndex  and     AllocationType = @ALLOCATION  end    if @iStatus <> 0 or @O_iErrorState <> 0  break   if @mAllocationTotal = 0.0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @MS_ITEM_31)  if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20152  break  end  else  begin  update #Distributions   set     #Distributions.LineMessage = (#Distributions.LineMessage | convert(int, @IO_bLineMessages))   from  #Distributions,  #Breakdowns     var  where  #Distributions.SQLSessionID = @I_iSQLSessionID  and     #Distributions.AllocationIndex = var.AllocationIndex  and #Distributions.DistributionIndex = var.DistributionIndex  and     #Distributions.AllocationType = @ALLOCATION   if @@rowcount = 0  begin  select @O_iErrorState = 20809  break   end   end   end  else  begin  update #Distributions   set     #Distributions.Debit =  round(round((#Distributions.Percentage/@mAllocationTotal),5)  * @I_mDebit, @I_sFuncDecimalPlaces),  #Distributions.Credit =  round(round((#Distributions.Percentage/@mAllocationTotal),5)  * @I_mCredit, @I_sFuncDecimalPlaces),  #Distributions.OriginatingDebit =  round(round((#Distributions.Percentage/@mAllocationTotal),5)  * @I_mOrigDebit, @I_sOrigDecimalPlaces),  #Distributions.OriginatingCredit =  round(round((#Distributions.Percentage/@mAllocationTotal),5)  * @I_mOrigCredit, @I_sOrigDecimalPlaces),  #Distributions.LineMessage = (#Distributions.LineMessage | convert(int, var.LineMessage))   from  #Distributions,  #Breakdowns     var  where  #Distributions.SQLSessionID = @I_iSQLSessionID  and     #Distributions.AllocationIndex = var.AllocationIndex  and #Distributions.DistributionIndex = var.DistributionIndex  and     #Distributions.AllocationType = @ALLOCATION   if @@rowcount = 0  begin  select @O_iErrorState = 20153  break   end    exec @iStatus = glpAdjustOverage  @I_iSQLSessionID,  @I_iAccountIndex,  @I_mDebit,  @I_mCredit,  @ALLOCATION,              @I_mOrigDebit,  @I_mOrigCredit,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end    end    select @mTempAmount = @I_mDebit - @I_mCredit   exec @iStatus = glpPostDistributionAccounts  @I_iSQLSessionID,  @I_sTransactionType,   @I_iJournalEntry,   @I_cBatchSource,   @I_cBatchNumber,  @I_cUserID,   @I_sSeries,   @I_iAccountIndex,  @I_cAuditTrailCode,  @I_dTransactionDate,  @I_sTransactionYear,  @I_sTransactionYear,      @I_sPeriodID,  @I_nLedgerID,  @I_cDescription,  @I_tPrintDistributions,  @I_tReversing,  @I_tPrinting,  @I_tPosting,  @I_tRealTimeQuick,  @I_sQuickOffset,  @ALLOCATION,                      @I_tHistory,  @I_tOffsetAccount,  @I_mSequenceLine,  @I_mRecurringTRXSequence,  @I_mExchangeRate,  @I_cExchangeTableID,  @I_cFuncCurrencyID,   @I_sFuncCurrencyIndex,  @I_sFuncDecimalPlaces,  @I_tMCRegistered,  @I_sMCTransaction,  @I_cOrigCurrencyID,  @I_sOrigCurrencyIndex,  @I_sOrigDecimalPlaces,  @I_sRateCalculationMethod,  @I_cRateTypeID,  @I_cIntercompanyID,  @I_tICTransaction,  @I_cOriginatingDocNumber,  @I_cOriginatingControlNumber,  @I_cOriginatingMasterID,  @I_cOriginatingMasterName,  @I_sOriginatingTrxType,  @I_cOriginatingTRXDesc,  @I_sOrigDTASeries,  @I_iOrigSequenceNumber,  @I_sDTAGLStatus,  @I_nDTAIndex,  @I_nDenomExchangeRate,  @I_sMCTrxState,  @I_dDocumentDate,  @mTempAmount,  @I_iPostingNumber,  @I_iPeriodPostingNumber,  @I_iPostingNumberHist,  @I_iPeriodPostingNumberHist,  @I_cCorrespondingUnit,  @mBalanceSheetTotalDebits             output,  @mBalanceSheetTotalCredits             output,  @mProfitAndLossTotalDebits     output,  @mProfitAndLossTotalCredits     output,  @mOrigBalanceSheetTotalDebs  output,  @mOrigBalanceSheetTotalCreds  output,  @mOrigProfitAndLossTotalDebs output,  @mOrigProfitAndLossTotalCred output,  @IO_bRetainEarnMessages  output,   @IO_bRetainEarnMessages2  output,   @O_iErrorState    output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpPostVariableAllocations] TO [DYNGRP]
GO

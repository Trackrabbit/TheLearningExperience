SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glPMatchRMTransactions]  @iGLTempTable varchar(50),  @iRMTempTable varchar(50),  @iRMPMatchTable varchar(50),  @iGLPMatchTable varchar(50)  AS  DECLARE  @lSQLError int  EXEC(  'INSERT INTO ' +  @iRMPMatchTable +   ' (POSTEDDT,  CUSTNMBR,  TRXSORCE,  ORTRXSRC,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  RMDTYPAL,  CustomerNumberDrillback,  DocumentNumberDrillback)  SELECT  POSTEDDT,  CUSTNMBR,  TRXSORCE,  ORTRXSRC,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  RMDTYPAL,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppCustomerID(1,CUSTNMBR),  case '+@iRMTempTable + '.HISTRX   when 1 then  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppReceivablesTransactionNumber(1,RMDTYPAL,CUSTNMBR,DOCNUMBR,3,TRXSORCE,'''',1,-1 )  else  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppReceivablesTransactionNumber(1,RMDTYPAL,CUSTNMBR,DOCNUMBR,2,TRXSORCE,'''',1,-1 )  end  FROM '  + @iRMTempTable + ' JOIN ' + @iGLTempTable + '  ON  TRXSORCE = ORTRXSRC  GROUP BY  POSTEDDT,  CUSTNMBR,  TRXSORCE,  ORTRXSRC,   DOCNUMBR,  STRVAL,  ACCTAMNT,  TRX_ID,  RMDTYPAL,  '+@iRMTempTable + '.HISTRX ')  EXEC(  'INSERT INTO ' +  @iGLPMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ACCTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  SUM(DEBITAMT - CRDTAMNT),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,ACTINDX),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,RCTRXSEQ,YEAR1,TRXDATE)   FROM '  + @iGLTempTable + ' JOIN ' + @iRMTempTable + '  ON  ORTRXSRC = TRXSORCE   GROUP BY  TRXDATE,  JRNENTRY,  RCTRXSEQ,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  '+@iGLTempTable + '.HISTRX,  '+@iGLTempTable + '.YEAR1 ')  EXEC(  'DELETE   FROM ' +  @iRMTempTable +  ' WHERE ' +  @iRMTempTable + '.TRXSORCE IN  (SELECT   TRXSORCE  FROM ' +  @iRMPMatchTable + ')')  EXEC(  'DELETE   FROM ' +  @iGLTempTable +   ' WHERE ' +  @iGLTempTable + '.ORTRXSRC IN  (SELECT  ORTRXSRC  FROM ' +  @iGLPMatchTable + ')')  EXEC(  'SELECT  POSTEDDT,  CUSTNMBR,  TRXSORCE,  DOCNUMBR,  STRVAL,  ACCTAMNT,  TRX_ID,  RMDTYPAL,  HISTRX  INTO   ##RMDetailTemp  FROM '  + @iRMTempTable +   ' GROUP BY  POSTEDDT,  CUSTNMBR,  TRXSORCE,   DOCNUMBR,  STRVAL,  ACCTAMNT,  TRX_ID,  RMDTYPAL,  HISTRX ')  EXEC(  'SELECT  TRXDATE,  JRNENTRY,  RCTRXSEQ,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  HISTRX,  YEAR1  INTO   ##GLDetailTemp  FROM ' +  @iGLTempTable +   ' GROUP BY  TRXDATE,  JRNENTRY,  RCTRXSEQ,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  HISTRX,  YEAR1 ')  SELECT  POSTEDDT,  TRXSORCE,  SUM(ACCTAMNT) AS ACCTAMNT INTO  #RMSumprocess FROM  ##RMDetailTemp GROUP BY  POSTEDDT,  TRXSORCE  SELECT  TRXDATE,  ORTRXSRC,  (SUM(DEBITAMT) - SUM(CRDTAMNT)) AS GLACCTAMNT INTO  #GLSumProcess FROM  ##GLDetailTemp GROUP BY  TRXDATE,  ORTRXSRC  SELECT   #RMSumprocess.POSTEDDT,  #RMSumprocess.TRXSORCE,  #RMSumprocess.ACCTAMNT INTO  #RMSumTemp FROM  #RMSumprocess JOIN ##RMDetailTemp ON  #RMSumprocess.TRXSORCE = ##RMDetailTemp.TRXSORCE WHERE  1 = (SELECT  COUNT(POSTEDDT)   FROM  #RMSumprocess  WHERE  #RMSumprocess.TRXSORCE = ##RMDetailTemp.TRXSORCE) GROUP BY  #RMSumprocess.POSTEDDT,  #RMSumprocess.TRXSORCE,  #RMSumprocess.ACCTAMNT  SELECT   #GLSumProcess.TRXDATE,  #GLSumProcess.ORTRXSRC,  #GLSumProcess.GLACCTAMNT INTO  #GLSumTemp FROM  #GLSumProcess JOIN ##GLDetailTemp ON  #GLSumProcess.ORTRXSRC = ##GLDetailTemp.ORTRXSRC WHERE  1 = (SELECT  COUNT(TRXDATE)   FROM  #GLSumProcess  WHERE  #GLSumProcess.ORTRXSRC = ##GLDetailTemp.ORTRXSRC) GROUP BY  #GLSumProcess.TRXDATE,  #GLSumProcess.ORTRXSRC,  #GLSumProcess.GLACCTAMNT  SELECT  POSTEDDT,  TRXSORCE,  ACCTAMNT INTO  #RMProcess FROM   #RMSumTemp JOIN #GLSumTemp  ON  POSTEDDT = TRXDATE  AND  ACCTAMNT = GLACCTAMNT WHERE  1 = (SELECT   COUNT(TRXSORCE)  FROM  #RMSumTemp  WHERE  POSTEDDT = TRXDATE  AND  ACCTAMNT = GLACCTAMNT)  SELECT  TRXDATE,  ORTRXSRC,  GLACCTAMNT INTO  #GLProcess FROM   #GLSumTemp JOIN #RMSumTemp  ON  TRXDATE = POSTEDDT  AND  GLACCTAMNT = ACCTAMNT WHERE  1 = (SELECT   COUNT(ORTRXSRC)  FROM  #GLSumTemp  WHERE  TRXDATE = POSTEDDT  AND  GLACCTAMNT = ACCTAMNT)  SELECT  POSTEDDT,  TRXSORCE,  ORTRXSRC,  ACCTAMNT INTO  #RMMATCH FROM  #RMProcess JOIN #GLProcess ON  POSTEDDT = TRXDATE AND  ACCTAMNT = GLACCTAMNT  SELECT  TRXDATE,  ORTRXSRC,  GLACCTAMNT INTO  #GLMatch FROM  #GLProcess JOIN #RMProcess ON  TRXDATE = POSTEDDT AND  GLACCTAMNT = ACCTAMNT  EXEC(  'INSERT INTO ' +  @iRMPMatchTable +   ' (POSTEDDT,  CUSTNMBR,  TRXSORCE,  ORTRXSRC,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  RMDTYPAL,  CustomerNumberDrillback,  DocumentNumberDrillback)  SELECT  ##RMDetailTemp.POSTEDDT,  CUSTNMBR,  ##RMDetailTemp.TRXSORCE,  #RMMATCH.ORTRXSRC,  DOCNUMBR,  STRVAL,  TRX_ID,  ##RMDetailTemp.ACCTAMNT,  RMDTYPAL,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppCustomerID(1,CUSTNMBR),  case HISTRX   when 1 then  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppReceivablesTransactionNumber(1,RMDTYPAL,CUSTNMBR,DOCNUMBR,3,##RMDetailTemp.TRXSORCE,'''',1,-1 )  else  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppReceivablesTransactionNumber(1,RMDTYPAL,CUSTNMBR,DOCNUMBR,2,##RMDetailTemp.TRXSORCE,'''',1,-1 )  end  FROM  ##RMDetailTemp JOIN #RMMATCH  ON  ##RMDetailTemp.TRXSORCE = #RMMATCH.TRXSORCE  GROUP BY  ##RMDetailTemp.POSTEDDT,  CUSTNMBR,  ##RMDetailTemp.TRXSORCE,  #RMMATCH.ORTRXSRC,  DOCNUMBR,  STRVAL,  ##RMDetailTemp.ACCTAMNT,  TRX_ID,  RMDTYPAL,  HISTRX ')  EXEC(  'INSERT INTO ' +  @iGLPMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ACCTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT   ##GLDetailTemp.TRXDATE,  JRNENTRY,  ##GLDetailTemp.ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  SUM(DEBITAMT - CRDTAMNT),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,ACTINDX),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,RCTRXSEQ,YEAR1,##GLDetailTemp.TRXDATE)   FROM   ##GLDetailTemp JOIN #GLMatch  ON  ##GLDetailTemp.ORTRXSRC = #GLMatch.ORTRXSRC   GROUP BY  ##GLDetailTemp.TRXDATE,  JRNENTRY,  RCTRXSEQ,  ##GLDetailTemp.ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  HISTRX,  YEAR1 ')  EXEC(  'DELETE   FROM ' +  @iRMTempTable +  ' WHERE ' +  @iRMTempTable + '.TRXSORCE IN  (SELECT   TRXSORCE   FROM '  + @iRMPMatchTable + ')') EXEC(  'DELETE   FROM ' +  @iGLTempTable +   ' WHERE ' +  @iGLTempTable + '.ORTRXSRC IN  (SELECT  ORTRXSRC  FROM '  + @iGLPMatchTable + ')')  DROP TABLE  ##RMDetailTemp,  ##GLDetailTemp RETURN (@lSQLError)    
GO
GRANT EXECUTE ON  [dbo].[glPMatchRMTransactions] TO [DYNGRP]
GO

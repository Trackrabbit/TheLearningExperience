SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smItemNumberCombiner] @I_charStartItem char(31), @I_charEndItem char(31), @O_iErrorState int=NULL output with encryption as set transaction isolation level read uncommitted set nocount on declare	@count int, @count1 int, @ITEMNMBR char(255), @cStatement varchar(255), @counter int, @DBNAME	char(25), @DBID char(25), @iStatus int, @cStartItem char(50), @cEndItem char(50), @maxseq	int, @maxserseq int, @maxlotseq int, @SEQNUMBR int, @OrigCounter int select @DBNAME=DB_NAME() select @DBID=CMPANYID from DYNAMICS..SY01500 where INTERID=@DBNAME select	@O_iErrorState=0, @counter=0, @count=0, @count1=0, @maxserseq=0, @maxlotseq=0, @maxseq=0, @SEQNUMBR=0, @OrigCounter=0 exec @iStatus=smFormatStringsForExecs @I_vInputString =@I_charStartItem, @O_cOutputString=@cStartItem output, @O_iErrorState=@O_iErrorState output if ((@iStatus<>0) or (@O_iErrorState<>0)) begin set @O_iErrorState=1 return end exec @iStatus=smFormatStringsForExecs @I_vInputString =@I_charEndItem, @O_cOutputString=@cEndItem output, @O_iErrorState	=@O_iErrorState output if ((@iStatus<>0) or (@O_iErrorState<>0)) begin set @O_iErrorState=2 return end select 	@O_iErrorState=0 exec @iStatus=taItemNumberCombinerPre @I_charStartItem output, @I_charEndItem output, @cStartItem output, @cEndItem output, @O_iErrorState output if (@O_iErrorState<>0) begin return end if (@I_charStartItem is NULL or @I_charEndItem is NULL or @cStartItem is NULL or @cEndItem is NULL) begin select @O_iErrorState=3	 return end update IV30101 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists (select ITEMNMBR from IV30101 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=100  return end update a set a.SQTYSYTD=isnull(a.SQTYSYTD,0)+b.SQTYSYTD, a.SUMCSYTD=isnull(a.SUMCSYTD,0)+b.SUMCSYTD, a.SMSLSYTD=isnull(a.SMSLSYTD,0)+b.SMSLSYTD, a.SQTYSLYR=isnull(a.SQTYSLYR,0)+b.SQTYSLYR, a.SUMCSLYR=isnull(a.SUMCSLYR,0)+b.SUMCSLYR, a.SMSLSLYR=isnull(a.SMSLSLYR,0)+b.SMSLSLYR from IV30101 a, IV30101 b where a.ITEMNMBR=@I_charEndItem and b.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=7	 return end update IV30102 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and cast(SMRYTYPE as varchar)+LOCNCODE+cast(YEAR1 as varchar)+cast(SMRYPMTH as varchar) not in(select cast(SMRYTYPE as varchar)+LOCNCODE+cast(YEAR1 as varchar)+cast(SMRYPMTH as varchar) from IV30102 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=4	 return end update a set a.SMRYQTYS=a.SMRYQTYS+b.SMRYQTYS, a.SMRYCOST=+a.SMRYCOST+b.SMRYCOST, a.SMRYSALS=a.SMRYSALS+b.SMRYSALS, a.SMMRYDPNDNTUSGQTY=a.SMMRYDPNDNTUSGQTY+b.SMMRYDPNDNTUSGQTY, a.SMMRYPRJCTDUSGQTY=a.SMMRYPRJCTDUSGQTY+b.SMMRYPRJCTDUSGQTY, a.SMMRYDPNDNTUSGCST=a.SMMRYDPNDNTUSGCST+b.SMMRYDPNDNTUSGCST from IV30102 a, IV30102 b where a.LOCNCODE=b.LOCNCODE and a.SMRYTYPE=b.SMRYTYPE and a.SMRYPMTH=b.SMRYPMTH and a.YEAR1=b.YEAR1 and a.ITEMNMBR=@I_charEndItem and b.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=10  return end select TRXLOCTN,DATERECD,QTYTYPE,RCTSEQNM, RCTSEQNM as NEWRCTSEQNM, RCPTNMBR into #subitem from IV10200 a where ITEMNMBR=@I_charStartItem and exists(select 1 from IV10200 where a.QTYTYPE =IV10200.QTYTYPE and a.RCTSEQNM=IV10200.RCTSEQNM and IV10200.ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=12  return end select @SEQNUMBR=isnull(max(SEQNUMBR),0) from SEE30303 where ITEMNMBR=@I_charEndItem update SEE30303 set SEQNUMBR=SEQNUMBR+@SEQNUMBR where ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=101  return end select @count=isnull(max(RCTSEQNM),0) from IV10200 where ITEMNMBR=@I_charEndItem or ITEMNMBR=@I_charStartItem select @count1=isnull(max(RCTSEQNM),0) from IV10201 where ITEMNMBR=@I_charEndItem or ITEMNMBR=@I_charStartItem if (@count > @count1) select @counter = @count+1 else select @counter = @count1+1 select @OrigCounter=@counter update #subitem set NEWRCTSEQNM = @counter, @counter = @counter+ 1 if (@@error<>0) begin select @O_iErrorState=91  return end update a set ITEMNMBR=@I_charEndItem, RCTSEQNM=NEWRCTSEQNM from IV10200 a, #subitem n where 	n.QTYTYPE=a.QTYTYPE and n.RCTSEQNM=a.RCTSEQNM and a.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=13  return end update a set SRCRCTSEQNM=NEWRCTSEQNM from IV10201 a, #subitem n where	n.QTYTYPE=a.QTYTYPE and n.RCTSEQNM=a.SRCRCTSEQNM and a.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=71  return end update a set RCTSEQNM=NEWRCTSEQNM from IV00300 a, #subitem n where 	n.QTYTYPE=a.QTYTYPE and n.RCTSEQNM=a.RCTSEQNM and a.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=81  return end update a set a.ITEMNMBR=@I_charEndItem, a.RCTSEQNM=n.NEWRCTSEQNM from SEE30303 a, #subitem n where 	n.QTYTYPE=a.QTYTYPE and n.RCTSEQNM=a.RCTSEQNM and n.RCPTNMBR=a.DOCNUMBR and a.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=86  return end drop table #subitem  if (@@error<>0) begin select @O_iErrorState=14  return end select TRXLOCTN,DOCDATE,QTYTYPE,RCTSEQNM,RCTSEQNM as NEWRCTSEQNM, ORIGINDOCID into #subitem1 from IV10201 a where ITEMNMBR=@I_charStartItem and exists(select 1 from IV10201 where (a.QTYTYPE=QTYTYPE and a.RCTSEQNM=RCTSEQNM and IV10201.ITEMNMBR=@I_charEndItem) or (a.RCTSEQNM=RCTSEQNM and a.PCHSRCTY=PCHSRCTY and IV10201.ITEMNMBR=@I_charEndItem)) if (@@error<>0) begin select @O_iErrorState=87  return end select @count=isnull(max(RCTSEQNM),0) from IV10200 where ITEMNMBR=@I_charEndItem or ITEMNMBR=@I_charStartItem select @count1=isnull(max(RCTSEQNM),0) from IV10201 where ITEMNMBR=@I_charEndItem or ITEMNMBR=@I_charStartItem if (@count > @count1) select @counter = @count+1 else select @counter = @count1+1 select @OrigCounter=@counter update #subitem1 set NEWRCTSEQNM = @counter, @counter = @counter+ 1 if (@@error<>0) begin select @O_iErrorState=92  return end update a set ITEMNMBR=@I_charEndItem, a.RCTSEQNM=n.NEWRCTSEQNM from IV10201 a, #subitem1 n where	n.QTYTYPE=a.QTYTYPE and n.RCTSEQNM=a.RCTSEQNM and a.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=75  return end select @counter=@OrigCounter update a set a.ITEMNMBR=@I_charEndItem, a.RCTSEQNM=NEWRCTSEQNM from SEE30303 a, #subitem1 n where	n.QTYTYPE=a.QTYTYPE and n.RCTSEQNM=a.RCTSEQNM and n.ORIGINDOCID=a.DOCNUMBR and a.ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=86  return end select @count=isnull(max(RCTSEQNM),0) from IV10200 where ITEMNMBR=@I_charEndItem or ITEMNMBR=@I_charStartItem select @count1=isnull(max(RCTSEQNM),0) from IV10201 where ITEMNMBR=@I_charEndItem or ITEMNMBR=@I_charStartItem if (@count > @count1) select @counter = @count+1 else select @counter = @count1+1 if (exists(select top 1 1 from IV10202 where ITEMNMBR=@I_charEndItem)) begin update IV10202 set RCTSEQNM = @counter where ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=96  return end end else begin update IV10202 set ITEMNMBR=@I_charEndItem, RCTSEQNM=@counter where ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=60  return end end drop table #subitem1  if (@@error<>0) begin select @O_iErrorState=94  return end update a set ORMSTRID=@I_charEndItem from GL10001 a, GL10000 b where 	a.ORMSTRID=@I_charStartItem and a.JRNENTRY=b.JRNENTRY and b.SERIES=5 if (@@error<>0) begin select @O_iErrorState=15  return end update GL20000 set ORMSTRID=@I_charEndItem where ORMSTRID=@I_charStartItem and SERIES=5 if (@@error<>0) begin select @O_iErrorState=16  return end update GL30000 set ORMSTRID=@I_charEndItem where ORMSTRID=@I_charStartItem and SERIES=5 if (@@error<>0) begin select @O_iErrorState=17  return end update PJOURNAL set ORMSTRID=@I_charEndItem where ORMSTRID=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=18  return end  select @maxserseq=isnull(max(DTSEQNUM),0) from IV00200 where ITEMNMBR = @I_charEndItem update IV10002 set DTSEQNUM=DTSEQNUM+@maxserseq where ITEMNMBR=@I_charStartItem and DTSEQNUM <> 0 if (@@error<>0) begin select @O_iErrorState=84  return end update SOP10201 set DTSEQNUM=DTSEQNUM+@maxserseq where ITEMNMBR=@I_charStartItem and POSTED = 0 and DTSEQNUM <> 0 if (@@error<>0) begin select @O_iErrorState=85  return end update IV00200 set DTSEQNUM=DTSEQNUM+@maxserseq where ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=61  return end select @maxlotseq=isnull(max(DTSEQNUM),0) from IV00300 where ITEMNMBR=@I_charEndItem update IV10002 set DTSEQNUM=DTSEQNUM+@maxlotseq where ITEMNMBR=@I_charStartItem and DTSEQNUM <> 0 if (@@error<>0) begin select @O_iErrorState=80  return end update SOP10201 set DTSEQNUM=DTSEQNUM+@maxlotseq where ITEMNMBR=@I_charStartItem and POSTED = 0 and DTSEQNUM <> 0 if (@@error<>0) begin select @O_iErrorState=83  return end update IV00300 set DTSEQNUM=DTSEQNUM+@maxlotseq where ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=82  return end declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set ITEMNMBR='+rtrim(@cEndItem) + ' where ITEMNMBR='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ITEMNMBR' and o.name<>'IV00101' and o.name<>'IV00102' and o.name<>'IV00103' and o.name<>'IV00104' and o.name<>'IV00301' and o.name<>'IV30101' and o.name<>'IV30102' and o.name<>'IV00105' and o.name<>'IV00106' and o.name<>'IV00107' and o.name<>'IV00108' and o.name<>'IV00109' and o.name<>'IV00115' and o.name<>'IV00117' and o.name<>'IV00118' and o.name<>'ASI82630' and o.name<>'ASI82650' and o.name<>'ASI82655' and o.name<>'ASILOC50' and o.name<>'ASILOC14' and o.name<>'IV10301' and o.name<>'IV10302' and o.name<>'IV10303' and o.name<>'IV30701' and o.name<>'IV30702' and o.name<>'QI04080' and o.name<>'IV00112' and o.name<>'IV10202' and o.name<>'IV10400' and o.name<>'IV10401' and o.name<>'IV10402' and o.name<>'IV10403' and o.name<>'IV00400' and o.name<>'IV00401' and o.name<>'SOP40700' and o.name<>'SOP40701' and o.name<>'SOP40702' and o.name<>'SOP40703' and o.name<>'SOP40704' and o.name<>'SOP40706' and o.name<>'SOP60300' and o.name<>'GST00101' and o.name<>'gpItmCus' and o.name<>'MRP0100' and o.name<>'MRP0101' and o.name<>'MRP2130' and o.name<>'MRP2230' and o.name<>'MRP2330' and o.name<>'MRP2430' and o.name<>'MRP4040'	 and o.name<>'IntIvPriceList'  and o.name<>'IntSubstituteItems'  and o.name not like 'SVC%'	 and o.name not like 'BM0%'	 and o.name not like 'BMS%'   and o.name not like 'BMF%' and o.name not like 'Bom%' and o.name not like 'BMU%' and o.name not like 'CT%' and o.name not like 'DW%' and o.name not like 'EC%' and o.name not like 'FI%' and o.name not like 'IC%' and o.name not like 'IS%' and o.name not like 'IVR%' and o.name not like 'MF%' and o.name not like 'MOP%' and o.name not like 'MP%' and o.name not like 'MU%' and o.name not like 'OC%' and o.name not like 'PK%' and o.name not like 'PRW%' and o.name not like 'QA%' and o.name not like 'RT%' and o.name not like 'RV%' and o.name not like 'SC%' and o.name not like 'SF%' and o.name not like 'SH%' and o.name not like 'SO%B' and o.name not like 'WO%' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=19  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set STTITNUM='+rtrim(@cEndItem) + ' where STTITNUM='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='STTITNUM' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=20  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set ENITMNBR='+rtrim(@cEndItem) + ' where ENITMNBR='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ENITMNBR' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=21  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set EC_ItemNumber='+rtrim(@cEndItem) + ' where EC_ItemNumber='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='EC_ItemNumber' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=121  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set ALTITEM1='+rtrim(@cEndItem) + ' where ALTITEM1='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ALTITEM1' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=22  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set ALTITEM2='+rtrim(@cEndItem) + ' where ALTITEM2='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ALTITEM2' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=23  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return update i set i.CMPTITNM=@I_charEndItem from IV00104 i where i.ITEMNMBR+rtrim(@I_charEndItem)+i.CMPITUOM not in (select i2.ITEMNMBR+rtrim(i2.CMPTITNM)+i2.CMPITUOM from IV00104 i2 (nolock) where i2.CMPTITNM=@I_charEndItem) and i.CMPTITNM=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=24  return end delete IV00104 where CMPTITNM=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=117  return end update IV00115 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTURER+MNFCTRITMNMBR+cast(PRIMARYITEM as varchar) not in(select MANUFACTURER+MNFCTRITMNMBR+cast(PRIMARYITEM as varchar) from IV00115 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=118  return end update IV00117 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and LOCNCODE+cast(Priority as varchar)+BIN not in(select LOCNCODE+cast(Priority as varchar)+BIN from IV00117 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=130  return end select @maxseq=isnull(max(SEQNUMBR),16384) from IV00104 where ITEMNMBR=@I_charEndItem update IV00104 set ITEMNMBR=@I_charEndItem, @maxseq=@maxseq+16384,  SEQNUMBR=@maxseq where ITEMNMBR=@I_charStartItem and @I_charEndItem+CMPTITNM+CMPITUOM not in (select ITEMNMBR+CMPTITNM+CMPITUOM from IV00104) if (@@error<>0) begin select @O_iErrorState=25  return end declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set FGDITMNM='+rtrim(@cEndItem) + ' where FGDITMNM='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='FGDITMNM' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=26  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return update IV00103 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and VENDORID not in(select VENDORID from IV00103 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=30  return end update b set b.QTYRQSTN=a.QTYRQSTN+b.QTYRQSTN, b.QTYONORD=a.QTYONORD+b.QTYONORD, b.QTYBKORD=a.QTYBKORD+b.QTYBKORD, b.QTY_Drop_Shipped=a.QTY_Drop_Shipped+b.QTY_Drop_Shipped, b.QTYINUSE=a.QTYINUSE+b.QTYINUSE, b.QTYINSVC=a.QTYINSVC+b.QTYINSVC, b.QTYRTRND=a.QTYRTRND+b.QTYRTRND, b.QTYDMGED=a.QTYDMGED+b.QTYDMGED, b.QTYONHND=a.QTYONHND+b.QTYONHND, b.ATYALLOC=a.ATYALLOC+b.ATYALLOC, b.QTYCOMTD=a.QTYCOMTD+b.QTYCOMTD, b.QTYSOLD=a.QTYSOLD+b.QTYSOLD from IV00102 a, IV00102 b where a.ITEMNMBR=@I_charStartItem and b.ITEMNMBR=@I_charEndItem and a.RCRDTYPE=b.RCRDTYPE and a.LOCNCODE=b.LOCNCODE if (@@error<>0) begin select @O_iErrorState=32  return end delete a from IV00102 a, IV00102 b where a.ITEMNMBR=@I_charStartItem and b.ITEMNMBR=@I_charEndItem and a.RCRDTYPE=b.RCRDTYPE and a.LOCNCODE=b.LOCNCODE if (@@error<>0) begin select @O_iErrorState=32  return end update IV00102 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=29  return end declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set item_requested='+rtrim(@cEndItem) + ' where item_requested='+rtrim(@cStartItem) from sysobjects o, syscolumns c where o.id=c.id and o.type='U' and c.name='item_requested' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=36  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return update SY01200 set Master_ID=@I_charEndItem where Master_ID=@I_charStartItem and Master_Type='ITM' and ADRSCODE not in (select ADRSCODE from SY01200 where Master_ID=@I_charEndItem and Master_Type='ITM') if (@@error<>0) begin select @O_iErrorState=37  return end delete SY01200 where Master_ID=@I_charStartItem and Master_Type='ITM' if (@@error<>0) begin select @O_iErrorState=38  return end update IV10301 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and STCKCNTID+LOCNCODE not in (select STCKCNTID+LOCNCODE from IV10301 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=39  return end update i2 set i2.CAPTUREDQTY=(i.CAPTUREDQTY+i2.CAPTUREDQTY), i2.COUNTEDQTY=(i.COUNTEDQTY+i2.COUNTEDQTY), i2.Stock_Serial_Lot_Count=(i.Stock_Serial_Lot_Count+i2.Stock_Serial_Lot_Count), i2.STCKSRLLTVRNC=(i.STCKSRLLTVRNC+i2.STCKSRLLTVRNC), i2.VARIANCEQTY=(i.VARIANCEQTY+i2.VARIANCEQTY), i2.Temp_Allocated_Quantity=(i.Temp_Allocated_Quantity+i2.Temp_Allocated_Quantity) from IV10301 i, IV10301 i2 where   i.STCKCNTID=i2.STCKCNTID and i.LOCNCODE=i2.LOCNCODE and i.ITEMNMBR=@I_charStartItem and i2.ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=40  return end update IV10302 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and STCKCNTID+LOCNCODE+SERLTNUM+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) not in (select STCKCNTID+LOCNCODE+SERLTNUM+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV10302 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=42  return end update i2 set i2.COUNTEDQTY=(i.COUNTEDQTY+i2.COUNTEDQTY), i2.CAPTUREDQTY=(i.CAPTUREDQTY+i2.CAPTUREDQTY), i2.VARIANCEQTY=(i.VARIANCEQTY+i2.VARIANCEQTY), i2.Temp_Allocated_Quantity=(i.Temp_Allocated_Quantity+i2.Temp_Allocated_Quantity) from IV10302 i, IV10302 i2 where   i.STCKCNTID=i2.STCKCNTID and i.LOCNCODE=i2.LOCNCODE and i.SERLTNUM=i2.SERLTNUM and i.DATERECD=i2.DATERECD and i.DTSEQNUM=i2.DTSEQNUM and i.ITEMNMBR=@I_charStartItem and i2.ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=43  return end update IV10303 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and STCKCNTID+LOCNCODE+UOFM not in(select STCKCNTID+LOCNCODE+UOFM from IV10303 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=45  return end update i2 set i2.COUNTEDQTY=(i.COUNTEDQTY+i2.COUNTEDQTY) from IV10303 i,IV10303 i2 where   i.STCKCNTID=i2.STCKCNTID and i.LOCNCODE=i2.LOCNCODE and i.UOFM=i2.UOFM and i.ITEMNMBR=@I_charStartItem and i2.ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=46  return end update IV30701 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and STCKCNTID+cast(SEQNUMBR as varchar)+LOCNCODE not in (select STCKCNTID+cast(SEQNUMBR as varchar)+LOCNCODE from IV30701 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=48  return end update i2 set i2.COUNTEDQTY =(i.COUNTEDQTY+i2.COUNTEDQTY), i2.CAPTUREDQTY=(i.CAPTUREDQTY+i2.CAPTUREDQTY), i2.VARIANCEQTY=(i.VARIANCEQTY+i2.VARIANCEQTY) from IV30701 i, IV30701 i2 where   i.STCKCNTID=i2.STCKCNTID and i.SEQNUMBR=i2.SEQNUMBR and i.LOCNCODE=i2.LOCNCODE and i.ITEMNMBR=@I_charStartItem and i2.ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=49  return end update IV30702 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and STCKCNTID+cast(SEQNUMBR as varchar)+LOCNCODE+cast(SLTSQNUM as varchar) not in (select STCKCNTID+cast(SEQNUMBR as varchar)+LOCNCODE+cast(SLTSQNUM as varchar) from IV30702 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=51  return end update i2 set i2.COUNTEDQTY =(i.COUNTEDQTY+i2.COUNTEDQTY), i2.CAPTUREDQTY=(i.CAPTUREDQTY+i2.CAPTUREDQTY), i2.VARIANCEQTY=(i.VARIANCEQTY+i2.VARIANCEQTY) from IV30702 i, IV30702 i2 where   i.STCKCNTID=i2.STCKCNTID and i.SEQNUMBR =i2.SEQNUMBR and i.LOCNCODE =i2.LOCNCODE and i.SLTSQNUM =i2.SLTSQNUM and i.ITEMNMBR =@I_charStartItem and i2.ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=52  return end update BM00111 set CMPTITNM=@I_charEndItem where CMPTITNM=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=54  return end delete a from SY03900 a, IV00101 b where b.ITEMNMBR=@I_charStartItem and a.NOTEINDX=b.NOTEINDX if (@@error<>0) begin select @O_iErrorState=62  return end if (exists (select 1 from sysobjects (nolock) where name='ASI82650')) begin update ASI82650 set ITEMNMBR=@I_charEndItem  where ITEMNMBR=@I_charStartItem and CUSTNMBR not in (select CUSTNMBR from ASI82650 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=63  return end end if (exists (select 1 from sysobjects (nolock) where name='ASILOC50')) begin update ASILOC50 set ITEMNMBR=@I_charEndItem  where ITEMNMBR=@I_charStartItem and CUSTNMBR not in (select CUSTNMBR from ASILOC50 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=64  return end end if (exists (select * from sysobjects where id=object_id('dbo.QI04080') and sysstat & 0xf=3)) begin update QI04080 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and LOCNCODE not in (select LOCNCODE from QI04080 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=65  return end end declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set FREEITEM='+rtrim(@cEndItem) + ' where FREEITEM='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='FREEITEM' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=66  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return declare ta_INCCursor insensitive CURSOR for select 'update '+o.name+' set CONTITEMNBR='+rtrim(@cEndItem) + ' where CONTITEMNBR='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='CONTITEMNBR' order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=67  break end FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return update IV70500 set End_Component_Item_Numbe=@I_charEndItem where End_Component_Item_Numbe=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=68  return end update IV70500 set Start_Component_Item_Num=@I_charEndItem where Start_Component_Item_Num=@I_charStartItem if (@@error<>0) begin select @O_iErrorState=69  return end update IV00112 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and LOCNCODE+BIN+cast(QTYTYPE as varchar) not in (select LOCNCODE+BIN+cast(QTYTYPE as varchar) from IV00112 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=73  return end update i2 set QUANTITY=(i.QUANTITY+i2.QUANTITY), ATYALLOC=(i.ATYALLOC+i2.ATYALLOC) from IV00112 i, IV00112 i2 where   i.LOCNCODE=i2.LOCNCODE and i.BIN=i2.BIN and i.QTYTYPE=i2.QTYTYPE and i.ITEMNMBR=@I_charStartItem and i2.ITEMNMBR=@I_charEndItem if (@@error<>0) begin select @O_iErrorState=74  return end update SOP40700 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and USERID+CUSTNMBR+UOFM+cast(QTYFROM as varchar) not in(select USERID+CUSTNMBR+UOFM+cast(QTYFROM as varchar) from SOP40700 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=110  return end update SOP40701 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and USERID+PRCBKID+UOFM+cast(QTYFROM as varchar) not in(select USERID+PRCBKID+UOFM+cast(QTYFROM as varchar) from SOP40701 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=111  return end update SOP40702 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and USERID+CURNCYID+UOFM+cast(QTYFROM as varchar) not in(select USERID+CURNCYID+UOFM+cast(QTYFROM as varchar) from SOP40702 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=112  return end update SOP40703 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and USERID+CUSTNMBR+UOFM+cast(QTYFROM as varchar) not in(select USERID+CUSTNMBR+UOFM+cast(QTYFROM as varchar) from SOP40703 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=113  return end update SOP40704 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and USERID+PRCBKID+UOFM+cast(QTYFROM as varchar) not in(select USERID+PRCBKID+UOFM+cast(QTYFROM as varchar) from SOP40704 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=114  return end update SOP40706 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and USERID+CURNCYID+PRCBKID+UOFM+cast(QTYFROM as varchar) not in (select USERID+CURNCYID+PRCBKID+UOFM+cast(QTYFROM as varchar) from SOP40706 where ITEMNMBR=@I_charEndItem) and USERID+CURNCYID+PRCBKID+cast(UMQTYINB as varchar)+cast(QTYFROM as varchar) not in (select USERID+CURNCYID+PRCBKID+cast(UMQTYINB as varchar)+cast(QTYFROM as varchar) from SOP40706 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=115  return end update IV10400 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists (select ITEMNMBR from IV10400 where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=76  return end update IV10401 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and EPITMTYP='I' and PRCSHID+EPITMTYP not in (select PRCSHID+EPITMTYP from IV10401 where ITEMNMBR=@I_charEndItem and EPITMTYP='I') if (@@error<>0) begin select @O_iErrorState=77  return end update IV10402 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and EPITMTYP='I' and PRCSHID+EPITMTYP+cast(SEQNUMBR as varchar) not in (select PRCSHID+EPITMTYP+cast(SEQNUMBR as varchar) from IV10402 where ITEMNMBR=@I_charEndItem and EPITMTYP='I') and PRCSHID+EPITMTYP+cast(QTYBSUOM as varchar)+cast(QTYFROM as varchar)+cast(QTYTO as varchar) not in (select PRCSHID+EPITMTYP+cast(QTYBSUOM as varchar)+cast(QTYFROM as varchar)+cast(QTYTO as varchar) from IV10402 where ITEMNMBR=@I_charEndItem and EPITMTYP='I') and PRCSHID+EPITMTYP+UOFM+cast(QTYFROM as varchar)+cast(QTYTO as varchar) not in (select PRCSHID+EPITMTYP+UOFM+cast(QTYFROM as varchar)+cast(QTYTO as varchar) from IV10402 where ITEMNMBR=@I_charEndItem and EPITMTYP='I') if (@@error<>0) begin select @O_iErrorState=78  return end update IV10403 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and EPITMTYP='I' and PRCSHID+EPITMTYP+UOFM not in (select PRCSHID+EPITMTYP+ UOFM from IV10403 where ITEMNMBR=@I_charEndItem and EPITMTYP='I') if (@@error<>0) begin select @O_iErrorState=79  return end if (exists (select * from sysobjects where id=object_id('dbo.IntIvPriceList') and sysstat & 0xf=3)) begin update IntIvPriceList set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and CURNCYID+PRCLEVEL+UOFM not in (select CURNCYID+PRCLEVEL+UOFM from IntIvPriceList where ITEMNMBR=@I_charEndItem) if (@@error<>0) begin select @O_iErrorState=90  return end end exec smItemNumberCombiner2 @I_charStartItem, @I_charEndItem, @cStartItem, @cEndItem, @O_iErrorState output if (@O_iErrorState<>0) or (@@error<>0) begin select @O_iErrorState=70  return end declare ta_INCCursor insensitive CURSOR for select 'delete '+o.name+' where ITEMNMBR='+rtrim(@cStartItem) from sysobjects o, syscolumns c where o.id=c.id and o.type='U' and c.name='ITEMNMBR' and (o.name='IV00101' or o.name='IV00103' or o.name='IV00104' or o.name='IV00105' or o.name='IV00106' or o.name='IV00107' or o.name='IV00108' or o.name='IV00109' or o.name='IV00115' or o.name='IV00117' or o.name='IV00118' or o.name='IV00301' or o.name='IV30101' or o.name='IV30102' or o.name='IV00400' or o.name='IV00401' or o.name='ASI82630' or o.name='ASI82650' or o.name='ASI82655' or o.name='ASILOC50' or o.name='ASILOC14' or o.name='IV10301' or o.name='IV10302' or o.name='IV10303' or o.name='IV30701' or o.name='IV30702' or o.name='QI04080' or o.name='IV00112' or o.name='IV10202' or o.name='IV10400' or o.name='IV10401' or o.name='IV10402' or o.name='IV10403' or o.name='SOP40700' or o.name='SOP40701' or o.name='SOP40702' or o.name='SOP40703' or o.name='SOP40704' or o.name='SOP40706' or o.name='SOP60300' or o.name='GST00101' or o.name='gpItmCus' or o.name='MRP0100' or o.name='MRP0101' or o.name='MRP2130' or o.name='MRP2230' or o.name='MRP2330' or o.name='MRP2430' or o.name='MRP4040' or o.name='IntIvPriceList'  or o.name='IntSubstituteItems')  order by o.name set nocount on OPEN ta_INCCursor FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITEMNMBR) if (@@error<>0) begin select @O_iErrorState=72  break end  FETCH NEXT FROM ta_INCCursor INTO @ITEMNMBR end DEALLOCATE ta_INCCursor if (@O_iErrorState<>0) return if @O_iErrorState  <>0 begin exec @iStatus=taItemNumberCombinerPost @I_charStartItem, @I_charEndItem, @cStartItem, @cEndItem, @O_iErrorState output if @O_iErrorState<>0  or @@error<>0 begin select @O_iErrorState = 95 return end end return  
GO
GRANT EXECUTE ON  [dbo].[smItemNumberCombiner] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[rmCLRMOPEN]   @I_cUserID char(15) = NULL,  @I_cUserDate char(12) = NULL,  @I_cFunctionalCurrency char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cFileName2 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @I_tMCRegistered tinyint  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,   @iStatus int,    @tLoop tinyint,  @CHECK int,  @TRUE int,  @OPEN int,  @ReturnDoc int,  @cDBName char(5),   @BatchSource varchar(15)  select  @O_iErrorState = 0,  @iStatus  = 0,  @TRUE   = 1,  @cDBName = db_name()  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL  or @I_cUserDate is NULL  or @I_cFunctionalCurrency is NULL  or @I_cFileName1 is NULL  or @I_cFileName2 is NULL  or    @I_cSearchString1 is NULL  or @I_tMCRegistered is NULL  begin  select @O_iErrorState = 20846  break  end   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'CHECK',   @CHECK output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'RM_DOC_RETURNS',   @ReturnDoc output,   @O_iErrorState output    select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS..smGetMsgString  16504,   @cDBName,  @BatchSource output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'OPEN',   @OPEN output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM20101  where  RM20101.CURNCYID <> ''  and RM20101.CURNCYID <> @I_cFunctionalCurrency  and NOT EXISTS  (select 1  from MC020102  where RM20101.DOCNUMBR = MC020102.DOCNUMBR  and RM20101.RMDTYPAL = MC020102.RMDTYPAL )   if @@rowcount <> 0  begin   if @I_tMCRegistered = @TRUE   begin  delete RM20101  where RM20101.CURNCYID <> ''  and RM20101.CURNCYID <> @I_cFunctionalCurrency  and NOT EXISTS  (select 1  from MC020102  where RM20101.DOCNUMBR = MC020102.DOCNUMBR  and RM20101.RMDTYPAL = MC020102.RMDTYPAL )   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  17638,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end  else   begin  update  RM20101  set  CURNCYID = ''  where RM20101.CURNCYID <> ''  and RM20101.CURNCYID <> @I_cFunctionalCurrency  and NOT EXISTS  (select 1  from MC020102  where RM20101.DOCNUMBR = MC020102.DOCNUMBR  and RM20101.RMDTYPAL = MC020102.RMDTYPAL )  end   end    update  RM00401  set   DOCNUMBR = RM20101.DOCNUMBR,  RMDTYPAL = RM20101.RMDTYPAL,  DCSTATUS = 2,  BCHSOURC = RM20101.BCHSOURC,  CUSTNMBR = RM20101.CUSTNMBR,  CHEKNMBR =   case RM20101.CSHRCTYP  when @CHECK then RM20101.CHEKNMBR  else ''  end,   DOCDATE = RM20101.DOCDATE  from  RM00401,  RM20101  where RM20101.CUSTNMBR <> ''  and RM00401.DOCNUMBR = RM20101.DOCNUMBR  and RM00401.RMDTYPAL = RM20101.RMDTYPAL   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID)  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM20101  where RM20101.CUSTNMBR <> ''  and NOT EXISTS  (select 1  from RM00401  where RM00401.DOCNUMBR = RM20101.DOCNUMBR  and RM00401.RMDTYPAL = RM20101.RMDTYPAL  and RM00401.DCSTATUS = @OPEN)   if @@rowcount <> 0  begin   insert into   RM00401(  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  CHEKNMBR,  DOCDATE)  select  DOCNUMBR,  RMDTYPAL,  2,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  case CSHRCTYP  when @CHECK then CHEKNMBR  else ''  end,  DOCDATE  from RM20101  where RM20101.CUSTNMBR <> ''  and NOT EXISTS  (select 1  from RM00401  where RM00401.DOCNUMBR = RM20101.DOCNUMBR  and RM00401.RMDTYPAL = RM20101.RMDTYPAL  and RM00401.DCSTATUS = @OPEN)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10324,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break     update RM00401  set NEGQTYSOPINV = 1  where RM00401.RMDTYPAL = @ReturnDoc and RM00401.BCHSOURC = @BatchSource   and RM00401.DCSTATUS = 2 and RM00401.NEGQTYSOPINV = 0  and exists(select 1  from  SOP30200  where  SOP30200.SOPTYPE = 3  and  SOP30200.SOPNUMBE = RM00401.DOCNUMBR  and    SOP30200.ORDOCAMT < 0.0)   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM20101  where RM20101.CUSTNMBR = ''   if @@rowcount <> 0  begin  delete RM20101  where RM20101.CUSTNMBR = ''  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  11066,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end   end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[rmCLRMOPEN] TO [DYNGRP]
GO

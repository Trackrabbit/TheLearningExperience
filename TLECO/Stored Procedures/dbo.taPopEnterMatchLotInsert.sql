SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopEnterMatchLotInsert]  @I_vPOPRCTNM  char(17),     @I_vITEMNMBR  char(30),    @I_vSERLTNUM  char(20),    @I_vSERLTQTY  numeric(19,5),   @I_vRCPTLNNM int,     @I_vEXPNDATE datetime = '',   @I_vMFGDATE datetime = '',    @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',   @I_vUSRDEFND2  char(50) = '',   @I_vUSRDEFND3  char(50) = '',   @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output, @oErrString  varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @SLTSQNUM int,     @ITMTRKOP smallint,    @DTSEQNUM smallint,    @LOTTYPE char(10),    @ENABLEMULTIBIN tinyint,  @sCompanyID int,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @SLTSQNUM = 0,  @ITMTRKOP = 0,  @DTSEQNUM = 0,  @LOTTYPE = 0,  @ENABLEMULTIBIN = 0,  @sCompanyID = 0,  @NOTEINDX = 0,  @iGetNextNoteIdxErrState = 0,  @iStatus = 0,  @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taPopEnterMatchLotInsertPre  @I_vPOPRCTNM output,  @I_vITEMNMBR output,  @I_vSERLTNUM output,  @I_vSERLTQTY output,  @I_vRCPTLNNM output,  @I_vEXPNDATE output,  @I_vMFGDATE output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if (@iStatus = 0 and @iError <> 0) begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11795    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vPOPRCTNM is NULL or  @I_vITEMNMBR is NULL or  @I_vSERLTNUM is NULL or  @I_vRCPTLNNM is NULL or   @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL) begin  select @O_iErrorState = 11796    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM = '' or  @I_vITEMNMBR = '' or  @I_vSERLTNUM = '') begin  select @O_iErrorState = 11797    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vSERLTNUM = UPPER(@I_vSERLTNUM)  if (@O_iErrorState <> 0)  return (@O_iErrorState)  select @ITMTRKOP = ITMTRKOP,  @LOTTYPE = isnull(LOTTYPE,'')  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@ITMTRKOP <> 3) begin  select @O_iErrorState = 11798    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1=@I_vPOPRCTNM,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 11799   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@LOTTYPE <> '') begin  if not exists(select 1 from IV00301 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOTNUMBR = @I_vSERLTNUM)  begin  insert IV00301  (  ITEMNMBR,  LOTNUMBR,  LOTATRB1,  LOTATRB2,  LOTATRB3,  LOTATRB4,  LOTATRB5,  IUSCOUNT,  RCRDSTTS   )  select  @I_vITEMNMBR,   @I_vSERLTNUM,   '',      '',      '',      '',      '',      1,      0      if (@@error <> 0)  begin  select @O_iErrorState = 11800     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  update IV00301 set IUSCOUNT = IUSCOUNT + 1 where ITEMNMBR = @I_vITEMNMBR and LOTNUMBR = @I_vSERLTNUM  if (@@error <> 0)  begin  select @O_iErrorState = 11801     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@ITMTRKOP = 3) begin  select @SLTSQNUM = isnull(max(SLTSQNUM),0) + 1 from POP10330 (nolock) where ITMTRKOP = 3 and POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vRCPTLNNM and QTYTYPE = 1   if @I_vSERLTNUM = ''  begin  select @O_iErrorState = 11802   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert POP10330  (  ITMTRKOP,  POPRCTNM,  RCPTLNNM,  SLTSQNUM,  ITEMNMBR,  SERLTNUM,  SERLTQTY,  TRXSORCE,  DATERECD,  DTSEQNUM,  UNITCOST,  QTYTYPE,  BIN,  MFGDATE,  EXPNDATE  )  select  3,      @I_vPOPRCTNM,   @I_vRCPTLNNM,   @SLTSQNUM,    @I_vITEMNMBR,   @I_vSERLTNUM,   @I_vSERLTQTY,   '',      '',      0,      0,      1,      '',  @I_vMFGDATE,   @I_vEXPNDATE   if (@@error <> 0)  begin  select @O_iErrorState = 11803     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPopEnterMatchLotInsertPost  @I_vPOPRCTNM,  @I_vITEMNMBR,  @I_vSERLTNUM,  @I_vSERLTQTY,  @I_vRCPTLNNM,  @I_vEXPNDATE,  @I_vMFGDATE,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11804    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1=@I_vPOPRCTNM,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 11805   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopEnterMatchLotInsert] TO [DYNGRP]
GO

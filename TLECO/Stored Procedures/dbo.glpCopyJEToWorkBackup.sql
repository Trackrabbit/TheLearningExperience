SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpCopyJEToWorkBackup]  @iNewJrnlEntry int  = NULL,  @iCopyJrnlEntry int  = NULL,  @iTrxYear int  = NULL,  @iRecurTrxSeq numeric(19,5) = NULL,  @iRevDistFlag smallint = NULL,  @iBatchNum char(15) = NULL,  @iCompanyID char(5)  = NULL,  @iReversingTrx tinyint  = NULL,  @iDocDate datetime = NULL,  @iDecimalPlaces smallint = NULL,  @iCurrencyIndex smallint = NULL,  @iNewDTAIndex numeric(19,5) = NULL as  declare  @FALSE tinyint,  @lTrxStarted tinyint,  @lControlLoop tinyint,  @lReturnStatus int,  @lSqlError int,  @lError int,  @lDateError int,  @lOrigin char(50),  @lPeriod smallint,  @lYear smallint,  @lClosingYear smallint,  @lClosed tinyint,  @lPostingToHist tinyint,  @lPostHist1Year tinyint,  @lOpenYearExists tinyint,  @lFirstTwoOpenYears tinyint  select   @lPeriod = 0,  @lYear = 0,  @lClosingYear = 0,  @lClosed = 0,  @lDateError = 0  if @@trancount = 0 begin  select @lTrxStarted = 1  begin transaction end  while (@lControlLoop is NULL) begin   select @lControlLoop = 1   if @iNewJrnlEntry is NULL or  @iCopyJrnlEntry is NULL or  @iTrxYear is NULL or  @iRecurTrxSeq is NULL or  @iRevDistFlag is NULL or  @iBatchNum is NULL or  @iCompanyID is NULL or  @iReversingTrx is NULL or  @iDecimalPlaces is NULL or  @iCurrencyIndex is NULL  begin  select @lReturnStatus = 1  break  end   select   @FALSE = 0   exec @lReturnStatus = DYNAMICS..smGetConstantString  'TRX_SOURCE_GL_GENERAL_ENTRY',  @lOrigin output,  @lError output   select @lSqlError = @@error  if @lSqlError <> 0  begin  select @lReturnStatus = @lSqlError  break  end    if @lReturnStatus = 0 and @lError <> 0  select @lReturnStatus = @lError  if @lReturnStatus <> 0  break    select  @lPostingToHist = HISTORYR  from  SY40101  where  YEAR1 = @iTrxYear   if @lPostingToHist = @FALSE  begin  exec @lReturnStatus = glpCopyOpenJEToWork  @iNewJrnlEntry,  @iCopyJrnlEntry,  @iTrxYear,  @iRecurTrxSeq,  @iRevDistFlag,  @iBatchNum,  @iCompanyID,  @iReversingTrx,  @iDocDate,  @iDecimalPlaces,  @iCurrencyIndex,  @iNewDTAIndex   select @lSqlError = @@error  if @lSqlError <> 0  begin  select @lReturnStatus = @lSqlError  break  end    if @lReturnStatus <> 0  break  end     else  begin  exec @lReturnStatus = glpCopyHistJEToWork  @iNewJrnlEntry,  @iCopyJrnlEntry,  @iTrxYear,  @iRecurTrxSeq,  @iRevDistFlag,  @iBatchNum,  @iCompanyID,  @iReversingTrx,  @iDocDate,  @iDecimalPlaces,  @iCurrencyIndex,  @iNewDTAIndex   select @lSqlError = @@error  if @lSqlError <> 0  begin  select @lReturnStatus = @lSqlError  break  end    if @lReturnStatus <> 0  break  end     exec @lReturnStatus = glpCopyTaxToWork  @iCopyJrnlEntry,  @iNewJrnlEntry,  @iRecurTrxSeq,  @lPostingToHist,  @iDocDate   select @lSqlError = @@error  if @lSqlError <> 0  begin  select @lReturnStatus = @lSqlError  break  end    if @lReturnStatus <> 0  break end   if @lReturnStatus <> 0 begin  if @lTrxStarted = 1  rollback transaction end else begin  if @lTrxStarted = 1  commit transaction end  return (@lReturnStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpCopyJEToWorkBackup] TO [DYNGRP]
GO

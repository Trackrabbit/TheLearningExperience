SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 CREATE  PROCEDURE [dbo].[aagGenericGLHistTOD] @USERID CHAR(15), @TBName VARCHAR(25), @Preview SMALLINT, @O_SQL_Error_State INT = NULL  OUTPUT AS  BEGIN   SET NOCOUNT ON  SET TRANSACTION ISOLATION LEVEL READ COMMITTED  BEGIN TRANSACTION  Declare @CMPANYID SMALLINT,  @aagGetHdrID INT,  @Status INT,  @RCTRXSEQ NUMERIC(19,5),  @HSTYEAR INT,  @TRXSORCE CHAR(13),  @TRXDATE DATETIME,  @JRNENTRY BIGINT,  @HDRID INT,  @DISTID INT,  @SEQNUMBR INT,  @DISTID2 INT,  @LedgerID INT,  @cDBName CHAR(5),  @l_nStatus INT,  @l_nError INT,  @O_nSQL_Error_State INT,  @l_cBBF VARCHAR(255),  @l_cPANDL VARCHAR(255)  select @cDBName = DB_NAME()   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12030, @cDBName, @l_cBBF output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12125, @cDBName, @l_cPANDL output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   IF @Preview = 1  BEGIN  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Header Table'',''AA GL History Header ID=''+LTRIM(STR(A.aaGLHdrID)),1,1,LTRIM(STR(A.JRNENTRY))  FROM AAG40000 A LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY,HSTYEAR,TRXSORCE,RCTRXSEQ FROM GL30000) B ON A.JRNENTRY=B.JRNENTRY AND A.YEAR1=B.HSTYEAR AND   A.aaGLTRXSource = B.TRXSORCE  AND A.RCTRXSEQ=B.RCTRXSEQ LEFT OUTER JOIN AAG40001 A1 ON A.aaGLHdrID = A1.aaGLHdrID and A1.AA_CL_Status = 0 WHERE B.JRNENTRY IS NULL')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Header Table'','''' ,9,1 ,LTRIM(STR(GL30000.JRNENTRY))  FROM GL30000 where SOURCDOC not IN(''' + @l_cBBF +''', ''' + @l_cPANDL + ''')   and JRNENTRY not in   (select Distinct JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND GL30000.HSTYEAR = YEAR1)  group by HSTYEAR,JRNENTRY,RCTRXSEQ,TRXSORCE,TRXDATE')    EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Distribution Table'',''AA GL History Header ID=''+CONVERT(VARCHAR(20),(SELECT dbo.aagGetHdrID(0,1,'' '','' '',JRNENTRY,RCTRXSEQ, TRXDATE,HSTYEAR,TRXSORCE,40000))) ,9,1,LTRIM(STR(GL30000.JRNENTRY))  from GL30000 where SOURCDOC not IN(''' + @l_cBBF +''', ''' + @l_cPANDL + ''') and  (JRNENTRY IN (select JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR   and aaGLHdrID not in (select Distinct aaGLHdrID from AAG40001))   or (JRNENTRY IN (select JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR  and aaGLHdrID in (select Distinct aaGLHdrID from AAG40001))  and (SEQNUMBR) not in (select Distinct SEQNUMBR from AAG40001   where aaGLHdrID   in (select aaGLHdrID from AAG40000   where AAG40000.aaGLTRXSource=GL30000.TRXSORCE and AAG40000.JRNENTRY=GL30000.JRNENTRY AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR))))')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Assignment Table'',''AA GL History Header ID=''+LTRIM(STR(AAG40001.aaGLHdrID))+SPACE(3)+''AA GL History Distribution ID=''+LTRIM(STR(AAG40001.aaGLDistID)) ,9,1,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40001.aaGLHdrID)) ),0)  from AAG40001 where (AAG40001.aaGLDistID not in (select Distinct aaGLDistID from AAG40002 where AAG40002.aaGLHdrID =AAG40001.aaGLHdrID) )   or AAG40001.aaGLHdrID not in (select Distinct aaGLHdrID from AAG40002)')  END  ELSE  BEGIN  Begin  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Header Table'',''AA GL History Header ID=''+LTRIM(STR(A.aaGLHdrID)),1,1,LTRIM(STR(A.JRNENTRY))  FROM AAG40000 A LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY,HSTYEAR,TRXSORCE,RCTRXSEQ FROM GL30000) B ON A.JRNENTRY=B.JRNENTRY AND A.YEAR1=B.HSTYEAR AND   A.aaGLTRXSource = B.TRXSORCE  AND A.RCTRXSEQ=B.RCTRXSEQ LEFT OUTER JOIN AAG40001 A1 ON A.aaGLHdrID = A1.aaGLHdrID and A1.AA_CL_Status = 0 WHERE B.JRNENTRY IS NULL')   DELETE AAG40000 FROM AAG40000 A LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY,HSTYEAR,TRXSORCE,RCTRXSEQ FROM GL30000) B ON A.JRNENTRY=B.JRNENTRY AND A.YEAR1=B.HSTYEAR AND   A.aaGLTRXSource = B.TRXSORCE  AND A.RCTRXSEQ=B.RCTRXSEQ LEFT OUTER JOIN AAG40001 A1 ON A.aaGLHdrID = A1.aaGLHdrID and A1.AA_CL_Status = 0 WHERE B.JRNENTRY IS NULL   select  @CMPANYID = CMPANYID from DYNAMICS.dbo.SY01500 where INTERID = DB_NAME()   exec DYNAMICS..aagGetNextID 30000, @CMPANYID, @aagGetHdrID out, @Status  declare CGLOPEN cursor fast_forward for   select JRNENTRY, RCTRXSEQ,HSTYEAR,TRXSORCE,TRXDATE, Ledger_ID  from GL30000 where SOURCDOC not IN(@l_cBBF, @l_cPANDL)   and JRNENTRY not in   (select Distinct JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND GL30000.HSTYEAR = YEAR1)  group by HSTYEAR,JRNENTRY,RCTRXSEQ,TRXSORCE,TRXDATE, Ledger_ID  for read only   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Header Table'','''',3,1,LTRIM(STR(GL30000.JRNENTRY))  FROM GL30000 where SOURCDOC not IN(''' + @l_cBBF +''', ''' + @l_cPANDL + ''')   and JRNENTRY not in   (select Distinct JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND GL30000.HSTYEAR = YEAR1)  group by HSTYEAR,JRNENTRY,RCTRXSEQ,TRXSORCE,TRXDATE')    open CGLOPEN   fetch next from CGLOPEN into @JRNENTRY,@RCTRXSEQ,@HSTYEAR,@TRXSORCE,@TRXDATE,@LedgerID  while @@fetch_status =0  begin  exec DYNAMICS..aagGetNextID 30000, @CMPANYID, @aagGetHdrID out, @Status  insert into AAG40000  (aaGLHdrID,JRNENTRY,RCTRXSEQ,YEAR1,aaTRXType,aaGLTRXSource,aaTRXSource,GLPOSTDT, Ledger_ID)  values(@aagGetHdrID,@JRNENTRY,@RCTRXSEQ,@HSTYEAR,1,@TRXSORCE,' ',@TRXDATE,@LedgerID)    fetch next from CGLOPEN into @JRNENTRY,@RCTRXSEQ,@HSTYEAR,@TRXSORCE,@TRXDATE,@LedgerID  end   close CGLOPEN  deallocate CGLOPEN   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Distribution Table'',''AA GL History Header ID=''+CONVERT(VARCHAR(20),(SELECT dbo.aagGetHdrID(0,1,'' '','' '',JRNENTRY,RCTRXSEQ, TRXDATE,HSTYEAR,TRXSORCE,40000))),3,1,LTRIM(STR(GL30000.JRNENTRY))  from GL30000 where SOURCDOC not IN(''' + @l_cBBF +''', ''' + @l_cPANDL + ''') and  (JRNENTRY IN (select JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR   and aaGLHdrID not in (select Distinct aaGLHdrID from AAG40001))   or (JRNENTRY IN (select JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR  and aaGLHdrID in (select Distinct aaGLHdrID from AAG40001))  and (SEQNUMBR) not in (select Distinct SEQNUMBR from AAG40001   where aaGLHdrID   in (select aaGLHdrID from AAG40000   where AAG40000.aaGLTRXSource=GL30000.TRXSORCE and AAG40000.JRNENTRY=GL30000.JRNENTRY AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR))))')   insert into AAG40001   (aaGLHdrID,  aaGLDistID, INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SEQNUMBR,   aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,aaChangeDate, aaChangeTime, AA_CL_Status)  select dbo.aagGetHdrID(0,1,' ',' ',JRNENTRY,RCTRXSEQ, TRXDATE,HSTYEAR,TRXSORCE,40000),  DEX_ROW_ID,   DB_NAME() ,CorrespondingUnit,ACTINDX, dbo.aagGetAccountType(ACTINDX),  0,2,  DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID,  EXGTBLID, XCHGRATE, EXCHDATE,TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SEQNUMBR,'',  '', '', '', 8,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108),0  from GL30000 where SOURCDOC not IN(@l_cBBF, @l_cPANDL) and  (JRNENTRY IN (select JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR  and aaGLHdrID not in (select Distinct aaGLHdrID from AAG40001))   or (JRNENTRY IN (select JRNENTRY from AAG40000   where  aaGLTRXSource=GL30000.TRXSORCE AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR  and aaGLHdrID in (select Distinct aaGLHdrID from AAG40001))   and (SEQNUMBR) not in (select Distinct SEQNUMBR from AAG40001   where aaGLHdrID   in (select aaGLHdrID from AAG40000   where AAG40000.aaGLTRXSource=GL30000.TRXSORCE and AAG40000.JRNENTRY=GL30000.JRNENTRY AND   AAG40000.RCTRXSEQ = GL30000.RCTRXSEQ AND  YEAR1 = HSTYEAR))  )) order by GL30000.SEQNUMBR   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Assignment Table'',''AA GL History Header ID=''+LTRIM(STR(AAG40001.aaGLHdrID)),3,1,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40001.aaGLHdrID)) ),0)  from AAG40001 where (AAG40001.aaGLDistID not in (select Distinct aaGLDistID from AAG40002 where AAG40002.aaGLHdrID =AAG40001.aaGLHdrID) )   or AAG40001.aaGLHdrID not in (select Distinct aaGLHdrID from AAG40002)')   insert into AAG40002  (aaGLHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent,  DistRef,NOTEINDX)  select AAG40001.aaGLHdrID,AAG40001.aaGLDistID,1,AAG40001.DEBITAMT,AAG40001.CRDTAMNT,AAG40001.ORDBTAMT,AAG40001.ORCRDAMT,10000,  ' ',0 from AAG40001 where (AAG40001.aaGLDistID not in (select Distinct aaGLDistID from AAG40002 where AAG40002.aaGLHdrID =AAG40001.aaGLHdrID) )   or AAG40001.aaGLHdrID not in (select Distinct aaGLHdrID from AAG40002)   END  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Assignment Table'',''AA GL Open Header ID=''+LTRIM(STR(AAG40002.aaGLHdrID))+SPACE(3)+''AA GL Open Distribution ID=''+LTRIM(STR(AAG40002.aaGLDistID)),1,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40002.aaGLHdrID)) ),-9999)  FROM AAG40002 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40001 WHERE AAG40001.aaGLHdrID=AAG40002.aaGLHdrID AND AAG40001.aaGLDistID=AAG40002.aaGLDistID)')   DELETE AAG40002 FROM AAG40002 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40001 WHERE AAG40001.aaGLHdrID=AAG40002.aaGLHdrID AND AAG40001.aaGLDistID=AAG40002.aaGLDistID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Code Table'',''AA GL Open Header ID=''+LTRIM(STR(AAG40003.aaGLHdrID))+SPACE(3)+''AA GL Open Distribution ID=''+LTRIM(STR(AAG40003.aaGLDistID)),1,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40003.aaGLHdrID)) ),-9999)  FROM AAG40003 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40001 WHERE AAG40003.aaGLHdrID=AAG40001.aaGLHdrID AND AAG40001.aaGLDistID=AAG40003.aaGLDistID)')   DELETE AAG40003 FROM AAG40003 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40001 WHERE AAG40003.aaGLHdrID=AAG40001.aaGLHdrID AND AAG40001.aaGLDistID=AAG40003.aaGLDistID)   UPDATE AAG40001 SET aaGLDistID=0-ABS(aaGLDistID)  UPDATE AAG40002 SET aaGLDistID=0-ABS(aaGLDistID)   UPDATE AAG40003 SET aaGLDistID=0-ABS(aaGLDistID)    UPDATE AAG40003 SET aaGLDistID = a.ID FROM (  SELECT RANK() OVER (PARTITION BY AAG40001.aaGLHdrID ORDER BY SEQNUMBR,AAG40001.DEX_ROW_ID ASC) ID,AAG40001.aaGLHdrID,aaGLDistID from AAG40001 WHERE SOURCDOC = '' group by AAG40001.aaGLHdrID,SEQNUMBR,aaGLDistID,AAG40001.DEX_ROW_ID  ) a INNER JOIN AAG40001 A1 ON A1.aaGLHdrID = a.aaGLHdrID AND A1.aaGLDistID = a.aaGLDistID  INNER JOIN AAG40003 A3 ON A3.aaGLHdrID = A1.aaGLHdrID AND A3.aaGLDistID = A1.aaGLDistID AND A1.SOURCDOC = ''   UPDATE AAG40002 SET aaGLDistID = a.ID FROM (  SELECT RANK() OVER (PARTITION BY AAG40001.aaGLHdrID ORDER BY SEQNUMBR,AAG40001.DEX_ROW_ID ASC) ID,AAG40001.aaGLHdrID,aaGLDistID from AAG40001 WHERE SOURCDOC = '' group by AAG40001.aaGLHdrID,SEQNUMBR,aaGLDistID,AAG40001.DEX_ROW_ID  ) a INNER JOIN AAG40001 A1 ON A1.aaGLHdrID = a.aaGLHdrID AND A1.aaGLDistID = a.aaGLDistID  INNER JOIN AAG40002 A2 ON A2.aaGLHdrID = A1.aaGLHdrID AND A2.aaGLDistID = A1.aaGLDistID AND A1.SOURCDOC = ''   UPDATE AAG40001 SET aaGLDistID = a.ID FROM (  SELECT RANK() OVER (PARTITION BY AAG40001.aaGLHdrID ORDER BY SEQNUMBR,AAG40001.DEX_ROW_ID ASC) ID,AAG40001.aaGLHdrID,aaGLDistID from AAG40001 WHERE SOURCDOC = ''  group by AAG40001.aaGLHdrID,SEQNUMBR,aaGLDistID,AAG40001.DEX_ROW_ID  ) a INNER JOIN AAG40001 A1 ON A1.aaGLHdrID = a.aaGLHdrID AND A1.aaGLDistID = a.aaGLDistID AND A1.SOURCDOC = ''   UPDATE AAG40003 SET aaGLDistID = ABS(aaGLDistID)  UPDATE AAG40002 SET aaGLDistID = ABS(aaGLDistID)  UPDATE AAG40001 SET aaGLDistID = ABS(aaGLDistID)  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Distribution Table'',''AA GL Open Header ID=''+LTRIM(STR(AAG40001.aaGLHdrID))+SPACE(3)+''AA GL Open Distribution ID=''+LTRIM(STR(AAG40001.aaGLDistID)),1,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40001.aaGLHdrID)) ),-9999)  FROM AAG40001 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40000 WHERE AAG40000.aaGLHdrID=AAG40001.aaGLHdrID)')   DELETE AAG40001 FROM AAG40001 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40000 WHERE AAG40000.aaGLHdrID=AAG40001.aaGLHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Assignment Table'',''AA GL Open Header ID=''+LTRIM(STR(AAG40002.aaGLHdrID))+SPACE(3)+''AA GL Open Distribution ID=''+LTRIM(STR(AAG40002.aaGLDistID)),1,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40002.aaGLHdrID)) ),-9999)  FROM AAG40002 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40000 WHERE AAG40000.aaGLHdrID=AAG40002.aaGLHdrID)')   DELETE AAG40002 FROM AAG40002 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40000 WHERE AAG40000.aaGLHdrID=AAG40002.aaGLHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL History Code Table'',''AA GL Open Header ID=''+LTRIM(STR(AAG40003.aaGLHdrID))+SPACE(3)+''AA GL Open Distribution ID=''+LTRIM(STR(AAG40003.aaGLDistID)),1,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG40000 WHERE aaGLHdrID =LTRIM(STR(AAG40003.aaGLHdrID)) ),-9999)  FROM AAG40003 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40000 WHERE AAG40000.aaGLHdrID=AAG40003.aaGLHdrID)')   DELETE AAG40003 FROM AAG40003 WHERE NOT EXISTS (SELECT DISTINCT aaGLHdrID FROM AAG40000 WHERE AAG40000.aaGLHdrID=AAG40003.aaGLHdrID)   EXEC(' DECLARE @JRNENTRY1 bigint, @SEQNUMBR1 INT,  @HSTYEAR1 SMALLINT,   @RCTRXSEQ1 numeric(19,5),   @TRXSORCE1 char(13),   @CRDTAMNT1 numeric(19,5),   @DEBITAMT1 numeric(19,5),  @TRXDATE1 datetime,  @CURNCYID1 CHAR(16),  @CURRNIDX1 SMALLINT,   @Ledger_ID1 INT,   @ACTINDX1 INT,  @SEQ1 INT   DECLARE C1 CURSOR FAST_FORWARD FOR (SELECT JRNENTRY, SEQNUMBR , HSTYEAR, RCTRXSEQ, TRXSORCE, CRDTAMNT, DEBITAMT,  TRXDATE,CURNCYID,CURRNIDX, Ledger_ID, ACTINDX , RANK() OVER (PARTITION BY JRNENTRY,HSTYEAR,RCTRXSEQ,TRXSORCE ORDER BY SEQNUMBR ASC)FROM GL30000   WHERE SOURCDOC NOT IN ('''+ @l_cBBF + ''' , ''' + @l_cPANDL + '''))  OPEN C1  FETCH NEXT FROM C1 INTO @JRNENTRY1, @SEQNUMBR1,@HSTYEAR1, @RCTRXSEQ1, @TRXSORCE1, @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ1  while @@fetch_status = 0  Begin  UPDATE AAG40001 SET AA_CL_Status = 1   FROM AAG40001 A1 INNER JOIN AAG40000 A ON A1.aaGLHdrID = A.aaGLHdrID  WHERE A.JRNENTRY = @JRNENTRY1 AND A.RCTRXSEQ = @RCTRXSEQ1   AND A.YEAR1 = @HSTYEAR1 AND A.aaGLTRXSource = @TRXSORCE1 AND A1.ACTINDX = @ACTINDX1  AND A1.CRDTAMNT  = @CRDTAMNT1 AND A1.DEBITAMT = @DEBITAMT1 AND A.GLPOSTDT = @TRXDATE1   AND A1.CURNCYID = @CURNCYID1 AND A1.CURRNIDX = @CURRNIDX1 AND A.Ledger_ID = @Ledger_ID1  AND A1.SEQNUMBR=@SEQNUMBR1 AND A1.aaGLDistID = @SEQ1   FETCH NEXT FROM C1 INTO @JRNENTRY1, @SEQNUMBR1,@HSTYEAR1, @RCTRXSEQ1, @TRXSORCE1, @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ1  END   close C1  deallocate C1')  EXEC('UPDATE AAG40001 SET AA_CL_Status = 1 WHERE SOURCDOC IN ('''+@l_cBBF+''' , '''+@l_cPANDL+''')')  EXEC(' DECLARE @JRNENTRY bigint, @SEQNUMBR INT,  @OPENYEAR SMALLINT,   @RCTRXSEQ numeric(19,5),   @TRXSORCE char(13),   @CRDTAMNT numeric(19,5),   @DEBITAMT numeric(19,5),  @TRXDATE datetime,  @CURNCYID CHAR(16),  @CURRNIDX SMALLINT,   @Ledger_ID INT,   @ACTINDX INT,  @SEQ1 INT   DECLARE C1 CURSOR FAST_FORWARD FOR (SELECT JRNENTRY, SEQNUMBR , OPENYEAR, RCTRXSEQ, TRXSORCE, CRDTAMNT, DEBITAMT,  TRXDATE,CURNCYID,CURRNIDX, Ledger_ID, ACTINDX , RANK() OVER (PARTITION BY JRNENTRY,OPENYEAR,RCTRXSEQ,TRXSORCE ORDER BY SEQNUMBR ASC)FROM GL20000   WHERE SOURCDOC NOT IN ('''+@l_cBBF+''' , '''+@l_cPANDL+'''))  OPEN C1  FETCH NEXT FROM C1 INTO @JRNENTRY, @SEQNUMBR,@OPENYEAR, @RCTRXSEQ, @TRXSORCE, @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@CURRNIDX, @Ledger_ID, @ACTINDX,@SEQ1  while @@fetch_status = 0  Begin  update AAG30001 set AA_CL_Status = 1   FROM AAG30001 A1 INNER JOIN AAG30000 A ON A1.aaGLHdrID = A.aaGLHdrID  WHERE A.JRNENTRY = @JRNENTRY AND A.RCTRXSEQ = @RCTRXSEQ   AND A.YEAR1 = @OPENYEAR AND A.aaGLTRXSource = @TRXSORCE AND   A1.ACTINDX = @ACTINDX AND A1.CRDTAMNT  = @CRDTAMNT AND A1.DEBITAMT = @DEBITAMT   AND A.GLPOSTDT = @TRXDATE AND A1.CURNCYID = @CURNCYID AND A1.CURRNIDX = @CURRNIDX AND A.Ledger_ID = @Ledger_ID  AND A1.SEQNUMBR=@SEQNUMBR AND A1.aaGLDistID = @SEQ1   FETCH NEXT FROM C1 INTO @JRNENTRY, @SEQNUMBR,@OPENYEAR, @RCTRXSEQ, @TRXSORCE, @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@CURRNIDX, @Ledger_ID, @ACTINDX,@SEQ1  END   close C1  deallocate C1')  EXEC('UPDATE AAG30001 SET AA_CL_Status = 1 WHERE SOURCDOC IN ('''+@l_cBBF+''' , '''+@l_cPANDL+''')')  END  IF @Preview = 1  EXEC ('DECLARE @JRN INTEGER,@AAERMSG SMALLINT,@AATBL VARCHAR  DECLARE ABC CURSOR FAST_FORWARD FOR   SELECT JRNENTRY,AAERMSG,AATBL FROM  '+@TBName+'  OPEN ABC   FETCH NEXT FROM ABC INTO @JRN,@AAERMSG,@AATBL  WHILE @@FETCH_STATUS = 0   BEGIN  IF @AAERMSG=15  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (6,9,10)  IF @AAERMSG=19  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG <> 19  IF @AAERMSG=21  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG <> 21  IF @AAERMSG=12  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (1,9,10)  IF @AAERMSG=9 AND @AATBL NOT LIKE ''%Assignment Table''  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG =10 AND AATBL IN (''AA GL Work Distribution Table'',''AA GL Open Distribution Table'',''AA GL History Distribution Table'')  IF @AAERMSG=1  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (15,9,10)  IF @AAERMSG=17  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG <> 17  IF @AAERMSG=6  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (9)  IF @AAERMSG=10  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG NOT IN ( 10 ) AND AATBL IN (''AA GL History Distribution Table'',''AA GL History Assignment Table'')  FETCH NEXT FROM ABC INTO @JRN,@AAERMSG,@AATBL  END   CLOSE ABC   DEALLOCATE ABC')   EXEC ('DELETE FROM '+@TBName+' WHERE JRNENTRY=0')  EXEC ('UPDATE '+@TBName+' SET JRNENTRY=0 WHERE JRNENTRY=-9999')   EXEC ('SELECT DISTINCT USERID,AATBL,ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY INTO  #Temp FROM '+@TBName+'  Truncate table '+@TBName+'  INSERT INTO '+@TBName +' SELECT USERID,AATBL,ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY FROM #Temp   DROP TABLE #Temp')   IF @@ERROR <> 0  BEGIN  ROLLBACK TRANSACTION  END  ELSE  BEGIN  COMMIT TRANSACTION  END  SET NOCOUNT OFF  END   
GO
GRANT EXECUTE ON  [dbo].[aagGenericGLHistTOD] TO [DYNGRP]
GO

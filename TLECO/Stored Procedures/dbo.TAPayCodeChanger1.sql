SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[TAPayCodeChanger1]   @I_charStartPayCode  char(20),   @I_charEndPayCode  char(20),   @O_iErrorState   int = NULL  output  with encryption as  declare   @CODE   char (255),  @tTransaction tinyint,  @tLoop tinyint,  @iStatus int,  @cStartPayCode char (17),  @cEndPayCode char (17)  exec @iStatus = smFormatStringsForExecs  @I_vInputString  = @I_charStartPayCode,  @O_cOutputString = @cStartPayCode output,  @O_iErrorState  = @O_iErrorState output  if @iStatus <> 0 or @O_iErrorState <> 0 begin  set @O_iErrorState = 90  return end  exec @iStatus = smFormatStringsForExecs  @I_vInputString  = @I_charEndPayCode,  @O_cOutputString = @cEndPayCode output,  @O_iErrorState  = @O_iErrorState output  if @iStatus <> 0 or @O_iErrorState <> 0 begin  set @O_iErrorState = 91  return end  select  @O_iErrorState   = 0  if @@trancount = 0  begin  select @tTransaction = 1  begin transaction end  while ( @tLoop is NULL ) begin  select @tLoop = 1   if @I_charStartPayCode is NULL or  @I_charEndPayCode is NULL or  @cStartPayCode is NULL or  @cEndPayCode is NULL  begin  select @O_iErrorState = 1    break  end    declare T_cursor CURSOR for select 'update '+o.name+' set PAYRCORD =' + rtrim(@cEndPayCode) +  ' where PAYRCORD = ' + rtrim(@cStartPayCode)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'PAYRCORD'   order by o.name   set nocount on  OPEN T_cursor  FETCH NEXT FROM T_cursor INTO @CODE  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@CODE)  if @@error <> 0   begin  select @O_iErrorState = 3   break  end   FETCH NEXT FROM T_cursor INTO @CODE  end  DEALLOCATE T_cursor   if @O_iErrorState <> 0  break   declare T_cursor CURSOR for select 'update '+o.name+' set BSPAYRCD =' + rtrim(@cEndPayCode) +  ' where BSPAYRCD = ' + rtrim(@cStartPayCode)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'BSPAYRCD'   order by o.name   set nocount on  OPEN T_cursor  FETCH NEXT FROM T_cursor INTO @CODE  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@CODE)  if @@error <> 0   begin  select @O_iErrorState = 34   break  end   FETCH NEXT FROM T_cursor INTO @CODE  end  DEALLOCATE T_cursor   if @O_iErrorState <> 0  break   update UPR10302 set UPRTRXCD = @I_charEndPayCode where UPRTRXCD = @I_charStartPayCode and COMPTRTP = 1  if @@error <> 0  begin  select @O_iErrorState = 11   break  end   update UPR10303 set UPRTRXCD = @I_charEndPayCode where UPRTRXCD = @I_charStartPayCode and COMPTRTP = 1  if @@error <> 0  begin  select @O_iErrorState = 11   break  end   update UPR10308 set UPRTRXCD = @I_charEndPayCode where UPRTRXCD = @I_charStartPayCode and MLTRXTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 11   break  end   declare T_cursor CURSOR for select 'update '+o.name+' set BSDONCDE =' + rtrim(@cEndPayCode) +  ' where BSDONCDE = ' + rtrim(@cStartPayCode)  from sysobjects o, syscolumns c  where o.id = c.id  and o.type = 'U'  and c.name = 'BSDONCDE'   and o.name <> 'UPR00501' and o.name <> 'UPR00601' and o.name <> 'UPR40801' and o.name <> 'UPR40901'  order by o.name  set nocount on  OPEN T_cursor  FETCH NEXT FROM T_cursor INTO @CODE  WHILE (@@FETCH_STATUS <> -1)  begin  exec (@CODE)  if @@error <> 0   begin  select @O_iErrorState = 4   break  end   FETCH NEXT FROM T_cursor INTO @CODE  end  DEALLOCATE T_cursor   if @O_iErrorState <> 0  break   update UPR10201 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and PYRLRTYP = 1  if @@error <> 0   begin  select @O_iErrorState = 11   break  end    update UPR10211 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and PYRLRTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 11   break  end    update UPR30300 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and PYRLRTYP = 1  if @@error <> 0   begin  select @O_iErrorState = 11   break  end    update UPR30301 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and PYRLRTYP = 1  if @@error <> 0   begin  select @O_iErrorState = 11   break  end    update UPR10400 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and UPRACTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 12   break  end   update UPR19901 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and UPRACTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 12   break  end   update UPR40500 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and UPRACTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 11   break  end   update UPR41201 set PAYROLCD = @I_charEndPayCode where PAYROLCD = @I_charStartPayCode and PYRLRTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 11   break  end   update UPR70500 set STRTPYCD = @I_charEndPayCode where STRTPYCD = @I_charStartPayCode  if @@error <> 0  begin  select @O_iErrorState = 13   break  end   update UPR70500 set ENDPAYCD = @I_charEndPayCode where ENDPAYCD = @I_charStartPayCode   if @@error <> 0  begin  select @O_iErrorState = 14   break  end   update UPR00601 set BSDONCDE = @I_charEndPayCode where BSDONCDE = @I_charStartPayCode and BORCDTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 86   break  end  update UPR40801 set BSDONCDE = @I_charEndPayCode where BSDONCDE = @I_charStartPayCode and BORCDTYP = 1  if @@error <> 0  begin  select @O_iErrorState = 87   break  end   update UPR40901 set BSDONCDE = @I_charEndPayCode where BSDONCDE = @I_charStartPayCode  if @@error <> 0  begin  select @O_iErrorState = 89   break  end  update UPR00501 set BSDONCDE = @I_charEndPayCode where BSDONCDE = @I_charStartPayCode  if @@error <> 0  begin  select @O_iErrorState = 88   break  end end  if @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1 begin  commit transaction end  return    
GO
GRANT EXECUTE ON  [dbo].[TAPayCodeChanger1] TO [DYNGRP]
GO

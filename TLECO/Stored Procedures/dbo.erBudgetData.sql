SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 create procedure [dbo].[erBudgetData]  @budget_id char(15)=NULL,  @period_id smallint=NULL,  @list_of_segments varchar(255)=NULL as  declare   @vSelectAcct varchar(255),  @vSelectAcct1 varchar(255),  @vSelectAcct2 varchar(255),  @vGroupByClause varchar(255),  @vAcctSegName varchar(20),  @vAcctColName varchar(20),  @tNumberSegments tinyint,  @tLoopControl tinyint,  @cIndex char(2),  @vInternalSegList varchar(255),  @vSortOrder varchar(255),  @bFirstSelectTerm bit,  @cBudgetIDTemp char(17),  @cPeriodIDTemp char(5),  @iRetval integer  set nocount on if @budget_id is null or @budget_id not in (select BUDGETID from GL00200) begin  return -4 end if @period_id is null or @period_id < 0 or @period_id >   (select NUMOFPER from SY40101 a join GL00200 b on a.YEAR1 = b.YEAR1   where b.BUDGETID = @budget_id) begin  return -3 end  select @tLoopControl    = 1 select @bFirstSelectTerm  = 1 select @vSortOrder    = '' select @vSelectAcct    = '' select @vSelectAcct1   = '' select @vSelectAcct2   = '' select @vGroupByClause   = ''  exec @iRetval = erInternalParseSegmentList   @list_of_segments,   @vInternalSegList out,   @vSortOrder out,  @tNumberSegments out if @iRetval <> 0 begin  return @iRetval end  while @tLoopControl <= @tNumberSegments begin  select @cIndex = ltrim(str(@tLoopControl))  if substring(@vInternalSegList,@tLoopControl,1) = '1'  begin   select @vAcctSegName = 'account_number_' + @cIndex  select @vAcctColName = 'ACTNUMBR_' + @cIndex   if @bFirstSelectTerm = 1  begin  select @vSelectAcct  = @vAcctSegName + ' = ' + @vAcctColName  select @vGroupByClause = @vAcctColName  select @bFirstSelectTerm = 0  end  else  begin  select @vSelectAcct  = @vSelectAcct + ',' +  @vAcctSegName + ' = ' +   @vAcctColName  select @vGroupByClause = @vGroupByClause + ',' + @vAcctColName  end    end  if @tLoopControl = 5  begin  select @vSelectAcct1 = @vSelectAcct  select @vSelectAcct  = ''  end  if @tLoopControl = 10  begin  select @vSelectAcct2 = @vSelectAcct  select @vSelectAcct  = ''  end   select @tLoopControl = @tLoopControl + 1 end  select @cBudgetIDTemp = ''''+rtrim(@budget_id)+'''' select @cPeriodIDTemp = convert(char(2),@period_id) exec (   'select ' +  @vSelectAcct1 + @vSelectAcct2 + @vSelectAcct +  ',amount=sum(BUDGETAMT) from GL00201 ' +  ' where BUDGETID = ' + @cBudgetIDTemp +  ' and PERIODID = ' + @cPeriodIDTemp +  ' group by ' + @vGroupByClause )  return 0    
GO
GRANT EXECUTE ON  [dbo].[erBudgetData] TO [DYNGRP]
GO

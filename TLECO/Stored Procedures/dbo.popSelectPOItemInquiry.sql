SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[popSelectPOItemInquiry]  @I_vTableName varchar(25) = NULL,  @I_vSPromisedDate datetime = NULL,  @I_vEPromisedDate datetime = NULL,  @I_vSRequiredDate datetime = NULL,  @I_vERequiredDate datetime = NULL,  @I_vSPromShipDate datetime = NULL,  @I_vEPromShipDate datetime = NULL,  @I_vSRequestedBy varchar(22) = NULL,  @I_vERequestedBy varchar(22) = NULL,  @I_vSVendorID varchar(17) = NULL,  @I_vEVendorID varchar(17) = NULL,  @I_vSItemDesc varchar(102) = NULL,  @I_vEItemDesc varchar(102) = NULL,  @I_vSVenItemDesc varchar(102) = NULL,  @I_vEVenItemDesc varchar(102) = NULL,  @I_vSLocation varchar(12) = NULL,  @I_vELocation varchar(12) = NULL,  @I_vSItemNumber varchar(32) = NULL,  @I_vEItemNumber varchar(52) = NULL,  @I_vSVendorItemNumber varchar(52) = NULL,  @I_vEVendorItemNumber varchar(32) = NULL,  @I_vSProjectNumber varchar(17)  = NULL,  @I_vEProjectNumber varchar(17)  = NULL,  @I_vSCostCategoryID varchar(17)  = NULL,  @I_vECostCategoryID varchar(17)  = NULL,  @I_vRestrictBy int  = NULL,  @I_vUserDate datetime = NULL,  @I_vFileType int  = NULL,  @O_iErrorState          int             = NULL output  as  declare @iStatus int,  @iError int,  @sPOP_ORIGIN_OPEN_PO char(10),  @sPOP_ORIGIN_HIST_PO char(10),  @sPOP_DOCTYPE_DROPSHIP smallint,  @sPOP_DOCTYPE_BLANKET_DROPSHIP smallint,  @sPOP_RECEIPT_POSTED smallint,  @sPOP_RECEIPT_UNPOSTED smallint,  @sPOP_POLINESTATUS_RELEASED smallint,  @sPOP_POLINESTATUS_CHANGEORDER smallint,  @SQLStatement varchar(2000),  @SQLStatement2 varchar(2000)  select @sPOP_ORIGIN_OPEN_PO = 'Open PO',  @sPOP_ORIGIN_HIST_PO = 'Hist. PO',  @sPOP_RECEIPT_POSTED = 1,  @sPOP_RECEIPT_UNPOSTED = 0,  @sPOP_DOCTYPE_DROPSHIP = 2,  @sPOP_DOCTYPE_BLANKET_DROPSHIP = 4,  @sPOP_POLINESTATUS_RELEASED = 2,  @sPOP_POLINESTATUS_CHANGEORDER = 3,  @iStatus = 0,  @SQLStatement = '',  @SQLStatement2 = ''  select @O_iErrorState = 0  if( @I_vTableName is NULL or  @I_vSPromisedDate is NULL or  @I_vEPromisedDate is NULL or  @I_vSRequiredDate is NULL or  @I_vERequiredDate is NULL or  @I_vSPromShipDate is NULL or  @I_vEPromShipDate is NULL or  @I_vSRequestedBy is NULL or  @I_vERequestedBy is NULL or  @I_vSVendorID is NULL or  @I_vEVendorID is NULL or  @I_vSItemDesc is NULL or  @I_vEItemDesc is NULL or  @I_vSVenItemDesc is NULL or  @I_vEVenItemDesc is NULL or  @I_vSLocation is NULL or  @I_vELocation is NULL or  @I_vSItemNumber is NULL or  @I_vEItemNumber is NULL or  @I_vSVendorItemNumber is NULL or  @I_vEVendorItemNumber is NULL or  @I_vSProjectNumber  is NULL or  @I_vEProjectNumber  is NULL or  @I_vSCostCategoryID  is NULL or  @I_vECostCategoryID  is NULL or  @I_vRestrictBy is NULL or  @I_vUserDate is NULL or  @I_vFileType is NULL)  begin  select          @O_iErrorState = 21022  return end  create table #Quantities  (  PONUMBER char(17) not null,  POLNENUM int not null,  QtyShippedPosted numeric(19,5) not null,  QtyInvoicedPosted numeric(19,5) not null,  QtyRejectedPosted numeric(19,5) not null,  QtyMatchedPosted numeric(19,5) not null,  QtyShippedUnPst numeric(19,5) not null,  QtyInvoicedUnPosted numeric(19,5) not null,  QtyRejectedUnPosted numeric(19,5) not null,  QtyMatchedUnPosted numeric(19,5) not null,  ) CREATE INDEX AK2#Quantities ON #Quantities (PONUMBER, POLNENUM)   create table #QuantitiesPOP10500  (  PONUMBER char(17) not null,  POLNENUM int not null,  QtyShipped numeric(19,5) not null,  QtyInvoiced numeric(19,5) not null,  QtyRejected numeric(19,5) not null,  QtyMatched numeric(19,5) not null,  ) CREATE INDEX AK2#QuantitiesPOP10500 ON #QuantitiesPOP10500 (PONUMBER, POLNENUM)   CREATE TABLE #PODetailed  (  ITEMNMBR char(31) NOT NULL,  VNDITNUM char(31) NOT NULL,  PONUMBER char(17) NOT NULL,  POTYPE int NOT NULL,  POSTATUS int NOT NULL,   ORD int NOT NULL,   NONINVEN smallint NOT NULL,   VENDORID char(15) NOT NULL,  QTYORDER numeric(19,5) NOT NULL,  QTYSHPPD numeric(19,5) NOT NULL,   QTYINVCD numeric(19,5) NOT NULL,   QTYONORD numeric(19,5) NOT NULL,   ITEMDESC char(102) NOT NULL,  VNDITDSC char(102) NOT NULL,  UOFM char(9) NOT NULL,   LOCNCODE char(11) NOT NULL,   PRMDATE datetime NOT NULL,  DAYSOLD int NOT NULL,  REQSTDBY char(20) NOT NULL,  REQDATE datetime NOT NULL,  PRMSHPDTE datetime NOT NULL,  POP_Origin char(10) NOT NULL,  DECPLQTY int NOT NULL,  VOIDED tinyint  NULL,   ProjNum char(15) NOT NULL,  CostCatID char(15) NOT NULL,  DEX_ROW_ID int identity NOT NULL  )  CREATE INDEX AK2#PODetailed ON #PODetailed (PONUMBER, ORD)   if (@I_vSItemNumber <> '')  begin  exec smFormatStringsForExecs @I_vSItemNumber, @I_vSItemNumber OUTPUT , @O_iErrorState OUTPUT    select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)   exec smFormatStringsForExecs @I_vEItemNumber, @I_vEItemNumber OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSVendorItemNumber <> '')  begin  exec smFormatStringsForExecs @I_vSVendorItemNumber, @I_vSVendorItemNumber OUTPUT , @O_iErrorState OUTPUT    select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)   exec smFormatStringsForExecs @I_vEVendorItemNumber, @I_vEVendorItemNumber OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSVendorID <> '')  begin  exec smFormatStringsForExecs @I_vSVendorID, @I_vSVendorID OUTPUT , @O_iErrorState OUTPUT    select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)   exec smFormatStringsForExecs @I_vEVendorID, @I_vEVendorID OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSVenItemDesc <> '')  begin  exec smFormatStringsForExecs @I_vSVenItemDesc, @I_vSVenItemDesc OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)   exec smFormatStringsForExecs @I_vEVenItemDesc, @I_vEVenItemDesc OUTPUT , @O_iErrorState OUTPUT    select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSItemDesc <> '')  begin  select @I_vRestrictBy = 10  exec smFormatStringsForExecs @I_vSItemDesc, @I_vSItemDesc OUTPUT , @O_iErrorState OUTPUT    select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)   exec smFormatStringsForExecs @I_vEItemDesc, @I_vEItemDesc OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSLocation <> '')  begin  exec smFormatStringsForExecs @I_vSLocation, @I_vSLocation OUTPUT , @O_iErrorState OUTPUT    select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)   exec smFormatStringsForExecs @I_vELocation, @I_vELocation OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSProjectNumber <> '')  begin  exec smFormatStringsForExecs @I_vSProjectNumber, @I_vSProjectNumber OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  exec smFormatStringsForExecs @I_vEProjectNumber, @I_vEProjectNumber OUTPUT , @O_iErrorState OUTPUT  select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  if (@I_vSCostCategoryID <> '')  begin  exec smFormatStringsForExecs @I_vSCostCategoryID, @I_vSCostCategoryID OUTPUT , @O_iErrorState OUTPUT   select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  exec smFormatStringsForExecs @I_vECostCategoryID, @I_vECostCategoryID OUTPUT , @O_iErrorState OUTPUT  select @iError = @@error  if (@iError <> 0) or (@O_iErrorState <> 0)  return (@iError)  end  select @SQLStatement = 'insert #PODetailed (ProjNum, CostCatID, ITEMNMBR, VNDITNUM,PONUMBER,POTYPE,POSTATUS,ORD, NONINVEN, VENDORID,QTYORDER, ITEMDESC, VNDITDSC, UOFM,   LOCNCODE,PRMDATE,DAYSOLD,REQSTDBY,REQDATE,PRMSHPDTE,DECPLQTY,QTYSHPPD,QTYINVCD,QTYONORD, POP_Origin)  select a.ProjNum, a.CostCatID, a.ITEMNMBR, a.VNDITNUM,a.PONUMBER,a.POTYPE,b.POSTATUS, a.ORD, a.NONINVEN, a.VENDORID,(a.QTYORDER - a.QTYCANCE), a.ITEMDESC, a.VNDITDSC, a.UOFM,   a.LOCNCODE,a.PRMDATE,0,a.REQSTDBY,a.REQDATE,a.PRMSHPDTE,a.DECPLQTY,0,0,0,'''  select @SQLStatement = case  @I_vFileType   when 1 then @SQLStatement + @sPOP_ORIGIN_OPEN_PO + ''' from POP10110 a join POP10100 b on a.PONUMBER = b.PONUMBER '  when 2 then @SQLStatement + @sPOP_ORIGIN_HIST_PO + ''' from POP30110 a join POP30100 b on a.PONUMBER = b.PONUMBER ' end  select @SQLStatement2 = case   when @I_vRestrictBy = 1 then 'where  a.PRMDATE between ''' + convert(char(12),@I_vSPromisedDate,110) + ''' and ''' + convert(char(12),@I_vEPromisedDate,110) + ''''  when @I_vRestrictBy = 2 then 'where  a.REQDATE between ''' + convert(char(12),@I_vSRequiredDate,110) + ''' and ''' + convert(char(12),@I_vERequiredDate,110) + ''''  when @I_vRestrictBy = 3 then 'where  a.PRMSHPDTE between ''' + convert(char(12),@I_vSPromShipDate,110) + ''' and ''' + convert(char(12),@I_vEPromShipDate,110) + ''''  when @I_vRestrictBy = 4 then 'where  a.REQSTDBY between ''' + @I_vSRequestedBy + ''' and ''' + @I_vERequestedBy + ''''  when @I_vRestrictBy = 5 and @I_vSVendorID <> '' then 'where  a.VENDORID between ' + @I_vSVendorID + ' and ' + @I_vEVendorID  when @I_vRestrictBy = 6 and @I_vSVenItemDesc <> '' then 'where  a.VNDITDSC between ' + @I_vSVenItemDesc + ' and ' + @I_vEVenItemDesc  when @I_vRestrictBy = 7 then 'where (a.QTYORDER - a.QTYCANCE) > 0 AND   (a.POLNESTA = ' + convert(char,@sPOP_POLINESTATUS_RELEASED) + ' OR a.POLNESTA = ' + convert(char,@sPOP_POLINESTATUS_CHANGEORDER) + ') AND   (b.POTYPE <> ' + convert(char,@sPOP_DOCTYPE_DROPSHIP) + ' AND b.POTYPE <> ' + convert(char,@sPOP_DOCTYPE_BLANKET_DROPSHIP) + ') AND  a.NONINVEN = 0'  when @I_vRestrictBy = 8 and @I_vSProjectNumber <> '' then 'where  a.ProjNum between ' + @I_vSProjectNumber + ' and ' + @I_vEProjectNumber  when @I_vRestrictBy = 9 and @I_vSCostCategoryID <> '' then 'where  a.CostCatID between ' + @I_vSCostCategoryID + ' and ' + @I_vECostCategoryID  when @I_vRestrictBy = 10 and @I_vSItemDesc <> '' then 'where a.ITEMDESC between ' + @I_vSItemDesc + ' and ' + @I_vEItemDesc  else '' end  if (@SQLStatement2 = '') and ((@I_vSItemNumber <> '') or (@I_vSVendorItemNumber <> '') or (@I_vSLocation <> '')) begin  select @SQLStatement2 = ' where ' end else  if (@SQLStatement2 <> '') and ((@I_vSItemNumber <> '') or (@I_vSVendorItemNumber <> '') or (@I_vSLocation <> ''))  begin  select @SQLStatement2 = @SQLStatement2 + ' and '   end  if (@I_vSItemNumber) <> '' begin  select @SQLStatement2 = @SQLStatement2 + 'a.ITEMNMBR between ' + @I_vSItemNumber + ' and ' + @I_vEItemNumber  end else  if (@I_vSVendorItemNumber) <> ''  begin  select @SQLStatement2 = @SQLStatement2 + 'a.VNDITNUM between ' + @I_vSVendorItemNumber + ' and ' + @I_vSVendorItemNumber   end  if (@I_vSLocation <> '') and (@I_vSVendorItemNumber = '') and (@I_vSItemNumber = '') begin  select @SQLStatement2 = @SQLStatement2 + 'a.LOCNCODE between ' + @I_vSLocation + ' and ' + @I_vELocation + '' end else  if (@I_vSLocation <> '') and ((@I_vSVendorItemNumber <> '') or (@I_vSItemNumber <> ''))  begin  select @SQLStatement2 = @SQLStatement2 + ' and a.LOCNCODE between ' + @I_vSLocation + ' and ' + @I_vELocation + ''  end  select @SQLStatement = @SQLStatement + @SQLStatement2 + ' and a.LineNumber <> 0'  exec (@SQLStatement)  select @iError = @@error if @iError <> 0  return (@iError)  insert #Quantities (PONUMBER, POLNENUM,  QtyShippedPosted, QtyInvoicedPosted, QtyRejectedPosted, QtyMatchedPosted, QtyShippedUnPst, QtyInvoicedUnPosted, QtyRejectedUnPosted, QtyMatchedUnPosted) select PONUMBER,ORD, 0, 0, 0, 0, 0, 0, 0, 0 from #PODetailed  select @iError = @@error if @iError <> 0  return (@iError)  insert #QuantitiesPOP10500 (PONUMBER, POLNENUM, QtyShipped, QtyInvoiced, QtyRejected, QtyMatched) select r.PONUMBER,r.POLNENUM, sum(r.QTYSHPPD), sum(r.QTYINVCD), sum(r.QTYREJ), sum(r.QTYMATCH)  from #Quantities t, POP10500 r  where  t.PONUMBER = r.PONUMBER and  t.POLNENUM = r.POLNENUM and  (r.Status = @sPOP_RECEIPT_POSTED)  group by r.PONUMBER, r.POLNENUM, r.Status  select @iError = @@error if @iError <> 0  return (@iError)  update t  set  t.QtyShippedPosted=p.QtyShipped, t.QtyInvoicedPosted=p.QtyInvoiced, t.QtyRejectedPosted=p.QtyRejected, t.QtyMatchedPosted=p.QtyMatched  from #Quantities t, #QuantitiesPOP10500 p  where  t.PONUMBER = p.PONUMBER  and t.POLNENUM = p.POLNENUM  select @iError = @@error if @iError <> 0  return (@iError)  truncate table #QuantitiesPOP10500  select @iError = @@error if @iError <> 0  return (@iError)  insert #QuantitiesPOP10500 (PONUMBER, POLNENUM, QtyShipped, QtyInvoiced, QtyRejected, QtyMatched) select r.PONUMBER,r.POLNENUM, sum(r.QTYSHPPD), sum(r.QTYINVCD), sum(r.QTYREJ), sum(r.QTYMATCH)  from #Quantities t, POP10500 r  where  t.PONUMBER = r.PONUMBER and  t.POLNENUM = r.POLNENUM and  (r.Status = @sPOP_RECEIPT_UNPOSTED)  group by r.PONUMBER, r.POLNENUM, r.Status  select @iError = @@error if @iError <> 0  return (@iError)  update t  set  t.QtyShippedUnPst=p.QtyShipped, t.QtyInvoicedUnPosted=p.QtyInvoiced, t.QtyRejectedUnPosted=p.QtyRejected, t.QtyMatchedUnPosted=p.QtyMatched  from #Quantities t, #QuantitiesPOP10500 p  where  t.PONUMBER = p.PONUMBER  and t.POLNENUM = p.POLNENUM  select @iError = @@error if @iError <> 0  return (@iError)  if (@I_vFileType = 1) begin  update t   set   t.QTYSHPPD = (p.QtyShippedPosted - p.QtyRejectedPosted) + (p.QtyShippedUnPst - p.QtyRejectedUnPosted),  t.QTYINVCD = (p.QtyInvoicedPosted + p.QtyInvoicedUnPosted),  t.QTYONORD =   case  WHEN (l.POLNESTA = @sPOP_POLINESTATUS_RELEASED OR   l.POLNESTA = @sPOP_POLINESTATUS_CHANGEORDER)  THEN  (t.QTYORDER - (p.QtyShippedPosted - p.QtyRejectedPosted))  else  0.0  END,  t.VOIDED = 0,  t.DAYSOLD =   case   WHEN ( datediff(day,t.PRMDATE,@I_vUserDate) > 0 ) and  ( ( ((t.POTYPE = @sPOP_DOCTYPE_DROPSHIP) or (t.POTYPE = @sPOP_DOCTYPE_BLANKET_DROPSHIP)) and (t.QTYORDER - p.QtyInvoicedPosted - p.QtyInvoicedUnPosted > 0) ) or  ( ((t.POTYPE <> @sPOP_DOCTYPE_DROPSHIP) and (t.POTYPE <> @sPOP_DOCTYPE_BLANKET_DROPSHIP)) and (t.QTYORDER - (p.QtyShippedPosted - p.QtyRejectedPosted) - (p.QtyShippedUnPst - p.QtyRejectedUnPosted) > 0) ) )  THEN  datediff(day,t.PRMDATE,@I_vUserDate)   else  0  END  from #PODetailed t, #Quantities p, POP10110 l   where  t.PONUMBER = p.PONUMBER  and t.ORD = p.POLNENUM  and l.PONUMBER = p.PONUMBER  and  l.ORD = p.POLNENUM   select @iError = @@error  if @iError <> 0  return (@iError)  end else  if (@I_vFileType = 2)  begin  update t   set   t.QTYSHPPD = p.QtyShippedPosted,  t.QTYINVCD = p.QtyInvoicedPosted,  t.QTYONORD = 0.0,   t.VOIDED =   case  when t.POSTATUS = 1 then 1  else   0  end  from #PODetailed t, #Quantities p  where  t.PONUMBER = p.PONUMBER  and t.ORD = p.POLNENUM   select @iError = @@error  if @iError <> 0  return (@iError)   end  exec  ('insert '+@I_vTableName +  '(ITEMNMBR, VNDITNUM,PONUMBER, ORD, NONINVEN, VENDORID,QTYORDER, ITEMDESC, VNDITDSC, UOFM,  LOCNCODE,PRMDATE,DAYSOLD,REQSTDBY,REQDATE,PRMSHPDTE,POP_Origin,DECPLQTY,QTYSHPPD,QTYINVCD,QTYONORD,VOIDED,ProjNum,CostCatID)  select ITEMNMBR, VNDITNUM,PONUMBER, ORD, NONINVEN, VENDORID,QTYORDER, ITEMDESC, VNDITDSC, UOFM,  LOCNCODE,PRMDATE,DAYSOLD,REQSTDBY,REQDATE,PRMSHPDTE,POP_Origin,DECPLQTY,QTYSHPPD,QTYINVCD,QTYONORD,VOIDED,ProjNum,CostCatID  from #PODetailed'  )   select @iError = @@error if @iError <> 0  return (@iError)  drop table #Quantities drop table #QuantitiesPOP10500 drop table #PODetailed  return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[popSelectPOItemInquiry] TO [DYNGRP]
GO

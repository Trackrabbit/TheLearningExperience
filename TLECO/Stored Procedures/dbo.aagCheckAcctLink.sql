SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create   procedure [dbo].[aagCheckAcctLink]  @aaGLWorkHdrID int as begin  set nocount on  declare @Status   smallint ,  @aaGLWorkDistID  int,  @aaBrowseTypeOld int,  @aaBrowseTypeNew int,  @ACTINDX   int,  @ClassID   int,  @oRequiredFieldEmpty tinyint,  @Cnt int  select  @Status   = null,  @aaGLWorkDistID  = 0,  @aaBrowseTypeOld = 0,  @aaBrowseTypeNew = 0,  @ACTINDX  = 0,  @ClassID  = 0,  @Cnt   = 0   exec aagRenumberAAGLDistsALL @aaGLWorkHdrID,@Status output   declare CGLRec cursor fast_forward for   select aaGLWorkDistID, aaBrowseType,ACTINDX  from AAG10001  where aaGLWorkHdrID = @aaGLWorkHdrID  order by aaGLWorkDistID  open CGLRec  fetch next from CGLRec into @aaGLWorkDistID, @aaBrowseTypeOld,@ACTINDX  while @@fetch_status = 0  begin   exec aagGetClassIDBrowseType   @ACTINDX,   @ClassID output,   @aaBrowseTypeNew output   if @aaBrowseTypeNew <> 0   and not exists  (select 1 from AAG10003  where aaGLWorkHdrID = @aaGLWorkHdrID  and aaGLWorkDistID = @aaGLWorkDistID)  begin   exec aagGLWorkCodeUpdate   @aaGLWorkHdrID,   @aaGLWorkDistID,   1,   @ClassID,   @oRequiredFieldEmpty output    set @aaBrowseTypeNew = 0   end    update AAG10001 set aaBrowseType = 1  where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID = @aaGLWorkDistID   fetch next from CGLRec into @aaGLWorkDistID, @aaBrowseTypeOld,@ACTINDX  end  close CGLRec  deallocate CGLRec    select @Cnt = count(*)  from AAG10001  where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID = @aaGLWorkDistID and  aaBrowseType <> 0  if @Cnt  = 0  begin  delete from AAG10000 where aaGLWorkHdrID = @aaGLWorkHdrID  delete from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID  delete from AAG10002 where aaGLWorkHdrID = @aaGLWorkHdrID   end  set nocount off  end    
GO
GRANT EXECUTE ON  [dbo].[aagCheckAcctLink] TO [DYNGRP]
GO

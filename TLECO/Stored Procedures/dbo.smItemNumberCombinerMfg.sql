SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smItemNumberCombinerMfg]   @I_charStartItem char(30), @I_charEndItem char(30), @cStartItem char(50), @cEndItem char(50), @O_iErrorState int=NULL output with encryption as declare @ITMNBR char (255) select @O_iErrorState=0 set nocount on declare ta_INCMCursor insensitive CURSOR for select 'update '+o.name+' set CPN_I='+rtrim(@cEndItem) + ' where CPN_I='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='CPN_I' and (o.name='BM010115' or o.name='EC050031' or o.name='MPB01000' or o.name='SCSU0020') order by o.name set nocount on OPEN ta_INCMCursor FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITMNBR) if (@@error<>0) begin select @O_iErrorState=4  break end FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR end DEALLOCATE ta_INCMCursor if (@O_iErrorState<>0) return update BM010200 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+ROUTINGNAME_I+RTSEQNUM_I not in(select PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+ROUTINGNAME_I+RTSEQNUM_I from BM010200 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=6  return end update Bomlev1 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I not in(select PPN_I from Bomlev1 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=7  return end update Bomlev2 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I not in(select PPN_I from Bomlev2 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=8  return end update ICW00001 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I+cast(ITERATION_I as varchar) not in(select PPN_I+cast(ITERATION_I as varchar) from ICW00001 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=10  return end update MOP1014 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+cast(BOMSEQ_I as varchar) not in(select PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+cast(BOMSEQ_I as varchar) from MOP1014 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=193  return end update z set QUANTITY_I=z.QUANTITY_I+a.QUANTITY_I, FIXED_QTY_I=z.FIXED_QTY_I+a.FIXED_QTY_I from MOP1014 z, MOP1014 a where z.CPN_I=@I_charEndItem and a.CPN_I=@I_charStartItem and z.PPN_I=a.PPN_I and z.BOMCAT_I=a.BOMCAT_I and z.BOMNAME_I=a.BOMNAME_I and z.BOMSEQ_I=a.BOMSEQ_I if @@error <> 0 begin select @O_iErrorState=194  return end update SCSU0030 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+cast(Option_Category as varchar) not in(select PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+cast(Option_Category as varchar) from SCSU0030 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=198  return end update TARD1001 set CPN_I=@I_charEndItem where CPN_I=@I_charStartItem and PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+cast(SERLNMBR as varchar)+cast(BOMSEQ_I as varchar) not in(select PPN_I+cast(BOMCAT_I as varchar)+BOMNAME_I+cast(SERLNMBR as varchar)+cast(BOMSEQ_I as varchar) from TARD1001 where CPN_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=199  return end declare ta_INCMCursor CURSOR for select 'update '+o.name+' set STARTITEMNUM_I='+rtrim(@cEndItem) + ' where STARTITEMNUM_I='+rtrim(@cStartItem) from sysobjects o, syscolumns c where o.id=c.id and o.type='U' and c.name='STARTITEMNUM_I' and (o.name='BMUF0101' or o.name='BMUF0130' or o.name='DWUF0130' or o.name='ECUF0132' or o.name='IVUF0130' or o.name='OCUF0010') order by o.name set nocount on OPEN ta_INCMCursor FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITMNBR) if (@@error<>0) begin select @O_iErrorState=12  break end FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR end DEALLOCATE ta_INCMCursor if (@O_iErrorState<>0) return declare ta_INCMCursor CURSOR for select 'update '+o.name+' set ENDITEMNUM_I='+rtrim(@cEndItem) + ' where ENDITEMNUM_I='+rtrim(@cStartItem) from sysobjects o, syscolumns c where o.id=c.id and o.type='U' and c.name='ENDITEMNUM_I' and (o.name='BMUF0101' or o.name='BMUF0130' or o.name='DWUF0130' or o.name='ECUF0132' or o.name='IVUF0130' or o.name='OCUF0010') order by o.name set nocount on OPEN ta_INCMCursor FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR WHILE (@@FETCH_STATUS<>-1) begin exec (@ITMNBR) if (@@error<>0) begin select @O_iErrorState=13  break end FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR end DEALLOCATE ta_INCMCursor if (@O_iErrorState<>0) return declare ta_INCMCursor insensitive CURSOR for select 'update '+o.name+' set ITEMNMBR='+rtrim(@cEndItem) + ' where ITEMNMBR='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ITEMNMBR' and (o.name='CT00002' or o.name='EC010031' or o.name='EC010131' or o.name='EC040131' or o.name='EC050031' or o.name='FI040100' or o.name='FI040101' or o.name='ICJC3500' or o.name='ICJC5001' or o.name='IS010001' or o.name='IS030001' or o.name='ISCVTLNE' or o.name='IVR50000' or o.name='MF010130' or o.name='MF010430' or o.name='PK010033' or o.name='QA010433' or o.name='QA010532' or o.name='QA020032' or o.name='QAD10433' or o.name='QAD10532' or o.name='QAD30000' or o.name='RTW10000' or o.name='SC020130' or o.name='SC020630' or o.name='SF010115' or o.name='SF010200' or o.name='SF010501' or o.name='SF010502' or o.name='WO010032' or o.name='WO010116' or o.name='WO010302' or o.name='WO010400' or o.name='WO010515' or o.name='WO010615' or o.name='MOP1006' or o.name='MOP1009' or o.name='MOP1011' or o.name='MOP1015' or o.name='MOP1020' or o.name='MOP1025' or o.name='MOP1027' or o.name='MOP1030' or o.name='MOP1040' or o.name='MOP1041' or o.name='MOP1042'  or o.name='MOP1043' or o.name='MOP1050' or o.name='MOP1055' or o.name='MOP1071' or o.name='MOP1072' or o.name='MOP1090' or o.name='MOP1095' or o.name='MOP1120' or o.name='MOP1121' or o.name='MOP1210' or o.name='MOP1400' or o.name='MOP1410' or o.name='MOP1600' or o.name='MOP1700' or o.name='MOP1800' or o.name='MOP1900' or o.name='MOP3000' or o.name='MOPW200' or o.name='MOPW300' or o.name='MOPW400') order by o.name set nocount on OPEN ta_INCMCursor FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITMNBR) if @@error <> 0 begin select @O_iErrorState=25  break end  FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR end DEALLOCATE ta_INCMCursor if (@O_iErrorState<>0) return update BM010300 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and PPN_I+cast(CHANGENUMBER_I as varchar)+cast(DATE1 as varchar)+cast(TIME1 as varchar) not in(select PPN_I+cast(CHANGENUMBER_I as varchar)+cast(DATE1 as varchar)+cast(TIME1 as varchar) from BM010300 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=24  return end update CT00003 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from CT00003 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=26  return end update CT00005 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from CT00005 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=27  return end update CT00102 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from CT00102 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=28  return end update DW010013 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from DW010013 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=29  return end update DW010100 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and DWGNUM_I not in(select DWGNUM_I from DW010100 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=30  return end update EC010230 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ECNumber not in(select ECNumber from EC010230 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=33  return end update EC030031 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ECNumber not in(select ECNumber from EC030031 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=34  return end update FI020000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from FI020000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=38  return end update IC10200 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and TRXLOCTN+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(RCTSEQNM as varchar) not in(select TRXLOCTN+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(RCTSEQNM as varchar) from IC10200 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=41  return end update ICIV0323 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from ICIV0323 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=42  return end update ICJC2000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from ICJC2000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=43  return end update IS090000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from IS090000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=48  return end update IVR10015 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from IVR10015 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=50  return end update IVR10100 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ALTPART_I not in(select ALTPART_I from IVR10100 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=51  return end update IVR10232 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and VENDORID not in(select VENDORID from IVR10232 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=52  return end update MP030000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and LOCNCODE+cast(MRPEXCLUSIONTYPE_I as varchar) not in(select LOCNCODE+cast(MRPEXCLUSIONTYPE_I as varchar) from MP030000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=56  return end update MPS10000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and RESOURCENAME_I+cast(INDEXNUMBER_I as varchar) not in(select RESOURCENAME_I+cast(INDEXNUMBER_I as varchar) from MPS10000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=59  return end update OC010100 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I not in(select Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I from OC010100 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=62  return end update OC010200 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I+Excluded_Category+Excluded_Item+cast(Excluded_BOM_Cat as varchar)+Excluded_BOM_Name not in(select Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I+Excluded_Category+Excluded_Item+cast(Excluded_BOM_Cat as varchar)+Excluded_BOM_Name from OC010200 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=63  return end update OC010300 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I+Included_Category+Included_Item+cast(Included_BOM_Cat as varchar)+Included_BOM_Name not in(select Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I+Included_Category+Included_Item+cast(Included_BOM_Cat as varchar)+Included_BOM_Name from OC010300 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=64  return end update OC010400 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I+PROMOTION_ID_I not in(select Option_Category+cast(BOMCAT_I as varchar)+BOMNAME_I+PROMOTION_ID_I from OC010400 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=65  return end update PK020031 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I not in(select MANUFACTUREORDER_I from PK020031 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=67  return end update QA160032 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and not exists(select ITEMNMBR from QA160032 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=73  return end update RT010001 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ROUTINGNAME_I not in(select ROUTINGNAME_I from RT010001 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=77  return end update RT010130 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ROUTINGNAME_I+RTSEQNUM_I not in(select ROUTINGNAME_I+RTSEQNUM_I from RT010130 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=78  return end update RT010500 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ROUTINGNAME_I+RTSEQNUM_I not in(select ROUTINGNAME_I+RTSEQNUM_I from RT010500 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=79  return end update RTH10100 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ROUTINGNAME_I not in(select ROUTINGNAME_I from RTH10100 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=80  return end update RTS10001 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ROUTINGNAME_I+USERID+WINNAME not in(select ROUTINGNAME_I+USERID+WINNAME from RTS10001 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=81  return end update RTW20000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and ROUTINGNAME_I not in(select ROUTINGNAME_I from RTW20000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=83  return end update SF010400 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I+RTSEQNUM_I+USERID+cast(SEQNUMBR as varchar) not in(select MANUFACTUREORDER_I+RTSEQNUM_I+USERID+cast(SEQNUMBR as varchar) from SF010400 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=91  return end update WO01050 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I+TO_SITE_I+cast(DATERECD as varchar)+cast(WIPSEQNMBR as varchar) not in(select MANUFACTUREORDER_I+TO_SITE_I+cast(DATERECD as varchar)+cast(WIPSEQNMBR as varchar) from WO01050 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=201  return end update z set QTYSOLD=z.QTYSOLD+a.QTYSOLD, ITEM_COSTS_ARRAY_I_1=z.ITEM_COSTS_ARRAY_I_1+a.ITEM_COSTS_ARRAY_I_1, ITEM_COSTS_ARRAY_I_2=z.ITEM_COSTS_ARRAY_I_2+a.ITEM_COSTS_ARRAY_I_2, ITEM_COSTS_ARRAY_I_3=z.ITEM_COSTS_ARRAY_I_3+a.ITEM_COSTS_ARRAY_I_3, ITEM_COSTS_ARRAY_I_4=z.ITEM_COSTS_ARRAY_I_4+a.ITEM_COSTS_ARRAY_I_4, ITEM_COSTS_ARRAY_I_5=z.ITEM_COSTS_ARRAY_I_5+a.ITEM_COSTS_ARRAY_I_5, ITEM_COSTS_ARRAY_I_6=z.ITEM_COSTS_ARRAY_I_6+a.ITEM_COSTS_ARRAY_I_6, ITEM_COSTS_ARRAY_I_7=z.ITEM_COSTS_ARRAY_I_7+a.ITEM_COSTS_ARRAY_I_7, ITEM_COSTS_ARRAY_I_8=z.ITEM_COSTS_ARRAY_I_8+a.ITEM_COSTS_ARRAY_I_8, ITEM_COSTS_ARRAY_I_9=z.ITEM_COSTS_ARRAY_I_9+a.ITEM_COSTS_ARRAY_I_9, ITEM_COSTS_ARRAY_I_10=z.ITEM_COSTS_ARRAY_I_10+a.ITEM_COSTS_ARRAY_I_10, QTYRECVD=z.QTYRECVD+a.QTYRECVD from WO01050 z, WO01050 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MANUFACTUREORDER_I=a.MANUFACTUREORDER_I and z.TO_SITE_I=a.TO_SITE_I and z.DATERECD=a.DATERECD and z.WIPSEQNMBR=a.WIPSEQNMBR if @@error <> 0 begin select @O_iErrorState=200  return end update MOP1000 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I+TO_SITE_I+cast(DATERECD as varchar)+cast(WIPSEQNMBR as varchar) not in(select MANUFACTUREORDER_I+TO_SITE_I+cast(DATERECD as varchar)+cast(WIPSEQNMBR as varchar) from MOP1000 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=204  return end update z set  WIPQTYSOLD=z.WIPQTYSOLD+a.WIPQTYSOLD, QTYRECVD=z.QTYRECVD+a.QTYRECVD, QTYSOLD=z.QTYSOLD+a.QTYSOLD, ITEM_COSTS_ARRAY_I_1=z.ITEM_COSTS_ARRAY_I_1+a.ITEM_COSTS_ARRAY_I_1, ITEM_COSTS_ARRAY_I_2=z.ITEM_COSTS_ARRAY_I_2+a.ITEM_COSTS_ARRAY_I_2, ITEM_COSTS_ARRAY_I_3=z.ITEM_COSTS_ARRAY_I_3+a.ITEM_COSTS_ARRAY_I_3, ITEM_COSTS_ARRAY_I_4=z.ITEM_COSTS_ARRAY_I_4+a.ITEM_COSTS_ARRAY_I_4, ITEM_COSTS_ARRAY_I_5=z.ITEM_COSTS_ARRAY_I_5+a.ITEM_COSTS_ARRAY_I_5, ITEM_COSTS_ARRAY_I_6=z.ITEM_COSTS_ARRAY_I_6+a.ITEM_COSTS_ARRAY_I_6, ITEM_COSTS_ARRAY_I_7=z.ITEM_COSTS_ARRAY_I_7+a.ITEM_COSTS_ARRAY_I_7, ITEM_COSTS_ARRAY_I_8=z.ITEM_COSTS_ARRAY_I_8+a.ITEM_COSTS_ARRAY_I_8, ITEM_COSTS_ARRAY_I_9=z.ITEM_COSTS_ARRAY_I_9+a.ITEM_COSTS_ARRAY_I_9, ITEM_COSTS_ARRAY_I_10=z.ITEM_COSTS_ARRAY_I_10+a.ITEM_COSTS_ARRAY_I_10, NUMBERSCRAPPED_I=z.NUMBERSCRAPPED_I+a.NUMBERSCRAPPED_I from MOP1000 z, MOP1000 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MANUFACTUREORDER_I=a.MANUFACTUREORDER_I and z.TO_SITE_I=a.TO_SITE_I and z.DATERECD=a.DATERECD and z.WIPSEQNMBR=a.WIPSEQNMBR if @@error <> 0 begin select @O_iErrorState=203  return end update MOP1001 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I+TO_SITE_I+cast(DATERECD as varchar)+cast(WIPSEQNMBR as varchar) not in(select MANUFACTUREORDER_I+TO_SITE_I+cast(DATERECD as varchar)+cast(WIPSEQNMBR as varchar) from MOP1001 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=205  return end update z set  WIPQTYSOLD=z.WIPQTYSOLD+a.WIPQTYSOLD, QTYRECVD=z.QTYRECVD+a.QTYRECVD, QTYSOLD=z.QTYSOLD+a.QTYSOLD, ITEM_COSTS_ARRAY_I_1=z.ITEM_COSTS_ARRAY_I_1+a.ITEM_COSTS_ARRAY_I_1, ITEM_COSTS_ARRAY_I_2=z.ITEM_COSTS_ARRAY_I_2+a.ITEM_COSTS_ARRAY_I_2, ITEM_COSTS_ARRAY_I_3=z.ITEM_COSTS_ARRAY_I_3+a.ITEM_COSTS_ARRAY_I_3, ITEM_COSTS_ARRAY_I_4=z.ITEM_COSTS_ARRAY_I_4+a.ITEM_COSTS_ARRAY_I_4, ITEM_COSTS_ARRAY_I_5=z.ITEM_COSTS_ARRAY_I_5+a.ITEM_COSTS_ARRAY_I_5, ITEM_COSTS_ARRAY_I_6=z.ITEM_COSTS_ARRAY_I_6+a.ITEM_COSTS_ARRAY_I_6, ITEM_COSTS_ARRAY_I_7=z.ITEM_COSTS_ARRAY_I_7+a.ITEM_COSTS_ARRAY_I_7, ITEM_COSTS_ARRAY_I_8=z.ITEM_COSTS_ARRAY_I_8+a.ITEM_COSTS_ARRAY_I_8, ITEM_COSTS_ARRAY_I_9=z.ITEM_COSTS_ARRAY_I_9+a.ITEM_COSTS_ARRAY_I_9, ITEM_COSTS_ARRAY_I_10=z.ITEM_COSTS_ARRAY_I_10+a.ITEM_COSTS_ARRAY_I_10, NUMBERSCRAPPED_I=z.NUMBERSCRAPPED_I+a.NUMBERSCRAPPED_I from MOP1001 z, MOP1001 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MANUFACTUREORDER_I=a.MANUFACTUREORDER_I and z.TO_SITE_I=a.TO_SITE_I and z.DATERECD=a.DATERECD and z.WIPSEQNMBR=a.WIPSEQNMBR if @@error <> 0 begin select @O_iErrorState=206  return end update MOP1004 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I not in(select MANUFACTUREORDER_I from MOP1004 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=170  return end update z set  MRPAMOUNT_I=z.MRPAMOUNT_I+a.MRPAMOUNT_I, MRPAMOUNT2_I=z.MRPAMOUNT2_I+a.MRPAMOUNT2_I, ORIGQTYALLOW=z.ORIGQTYALLOW+a.ORIGQTYALLOW, QTYRECVD=z.QTYRECVD+a.QTYRECVD, QTY_ISSUED_I=z.QTY_ISSUED_I+a.QTY_ISSUED_I, QTYCONSUMED=z.QTYCONSUMED+a.QTYCONSUMED, VARPRODMOCOSTS_1=z.VARPRODMOCOSTS_1+a.VARPRODMOCOSTS_1, VARPRODMOCOSTS_2=z.VARPRODMOCOSTS_2+a.VARPRODMOCOSTS_2, VARPRODMOCOSTS_3=z.VARPRODMOCOSTS_3+a.VARPRODMOCOSTS_3, VARPRODMOCOSTS_4=z.VARPRODMOCOSTS_4+a.VARPRODMOCOSTS_4, VARPRODMOCOSTS_5=z.VARPRODMOCOSTS_5+a.VARPRODMOCOSTS_5, VARPRODMOCOSTS_6=z.VARPRODMOCOSTS_6+a.VARPRODMOCOSTS_6, VARPRODMOCOSTS_7=z.VARPRODMOCOSTS_7+a.VARPRODMOCOSTS_7, VARPRODMOCOSTS_8=z.VARPRODMOCOSTS_8+a.VARPRODMOCOSTS_8, VARPRODMOCOSTS_9=z.VARPRODMOCOSTS_9+a.VARPRODMOCOSTS_9, VARPRODMOCOSTS_10=z.VARPRODMOCOSTS_10+a.VARPRODMOCOSTS_10, VARPRODMOCOSTS_11=z.VARPRODMOCOSTS_11+a.VARPRODMOCOSTS_11, VARPRODMOCOSTS_12=z.VARPRODMOCOSTS_12+a.VARPRODMOCOSTS_12, VARPRODMOCOSTS_13=z.VARPRODMOCOSTS_13+a.VARPRODMOCOSTS_13, VARPRODRECDCOSTS_1=z.VARPRODRECDCOSTS_1+a.VARPRODRECDCOSTS_1, VARPRODRECDCOSTS_2=z.VARPRODRECDCOSTS_2+a.VARPRODRECDCOSTS_2, VARPRODRECDCOSTS_3=z.VARPRODRECDCOSTS_3+a.VARPRODRECDCOSTS_3, VARPRODRECDCOSTS_4=z.VARPRODRECDCOSTS_4+a.VARPRODRECDCOSTS_4, VARPRODRECDCOSTS_5=z.VARPRODRECDCOSTS_5+a.VARPRODRECDCOSTS_5, VARPRODRECDCOSTS_6=z.VARPRODRECDCOSTS_6+a.VARPRODRECDCOSTS_6, VARPRODRECDCOSTS_7=z.VARPRODRECDCOSTS_7+a.VARPRODRECDCOSTS_7, VARPRODRECDCOSTS_8=z.VARPRODRECDCOSTS_8+a.VARPRODRECDCOSTS_8, VARPRODRECDCOSTS_9=z.VARPRODRECDCOSTS_9+a.VARPRODRECDCOSTS_9, VARPRODRECDCOSTS_10=z.VARPRODRECDCOSTS_10+a.VARPRODRECDCOSTS_10, VARPRODRECDCOSTS_11=z.VARPRODRECDCOSTS_11+a.VARPRODRECDCOSTS_11, VARPRODRECDCOSTS_12=z.VARPRODRECDCOSTS_12+a.VARPRODRECDCOSTS_12, VARPRODRECDCOSTS_13=z.VARPRODRECDCOSTS_13+a.VARPRODRECDCOSTS_13, VARCOSTSCLLCTD_1=z.VARCOSTSCLLCTD_1+a.VARCOSTSCLLCTD_1, VARCOSTSCLLCTD_2=z.VARCOSTSCLLCTD_2+a.VARCOSTSCLLCTD_2, VARCOSTSCLLCTD_3=z.VARCOSTSCLLCTD_3+a.VARCOSTSCLLCTD_3, VARCOSTSCLLCTD_4=z.VARCOSTSCLLCTD_4+a.VARCOSTSCLLCTD_4, VARCOSTSCLLCTD_5=z.VARCOSTSCLLCTD_5+a.VARCOSTSCLLCTD_5, VARCOSTSCLLCTD_6=z.VARCOSTSCLLCTD_6+a.VARCOSTSCLLCTD_6, VARCOSTSCLLCTD_7=z.VARCOSTSCLLCTD_7+a.VARCOSTSCLLCTD_7, VARCOSTSCLLCTD_8=z.VARCOSTSCLLCTD_8+a.VARCOSTSCLLCTD_8, VARCOSTSCLLCTD_9=z.VARCOSTSCLLCTD_9+a.VARCOSTSCLLCTD_9, VARCOSTSCLLCTD_10=z.VARCOSTSCLLCTD_10+a.VARCOSTSCLLCTD_10, VARCOSTSCLLCTD_11=z.VARCOSTSCLLCTD_11+a.VARCOSTSCLLCTD_11, VARCOSTSCLLCTD_12=z.VARCOSTSCLLCTD_12+a.VARCOSTSCLLCTD_12, VARCOSTSCLLCTD_13=z.VARCOSTSCLLCTD_13+a.VARCOSTSCLLCTD_13, VARCOSTSUSED_1=z.VARCOSTSUSED_1+a.VARCOSTSUSED_1, VARCOSTSUSED_2=z.VARCOSTSUSED_2+a.VARCOSTSUSED_2, VARCOSTSUSED_3=z.VARCOSTSUSED_3+a.VARCOSTSUSED_3, VARCOSTSUSED_4=z.VARCOSTSUSED_4+a.VARCOSTSUSED_4, VARCOSTSUSED_5=z.VARCOSTSUSED_5+a.VARCOSTSUSED_5, VARCOSTSUSED_6=z.VARCOSTSUSED_6+a.VARCOSTSUSED_6, VARCOSTSUSED_7=z.VARCOSTSUSED_7+a.VARCOSTSUSED_7, VARCOSTSUSED_8=z.VARCOSTSUSED_8+a.VARCOSTSUSED_8, VARCOSTSUSED_9=z.VARCOSTSUSED_9+a.VARCOSTSUSED_9, VARCOSTSUSED_10=z.VARCOSTSUSED_10+a.VARCOSTSUSED_10, VARCOSTSUSED_11=z.VARCOSTSUSED_11+a.VARCOSTSUSED_11, VARCOSTSUSED_12=z.VARCOSTSUSED_12+a.VARCOSTSUSED_12, VARCOSTSUSED_13=z.VARCOSTSUSED_13+a.VARCOSTSUSED_13, VARSTDCOSTS1_1=z.VARSTDCOSTS1_1+a.VARSTDCOSTS1_1, VARSTDCOSTS1_2=z.VARSTDCOSTS1_2+a.VARSTDCOSTS1_2, VARSTDCOSTS1_3=z.VARSTDCOSTS1_3+a.VARSTDCOSTS1_3, VARSTDCOSTS1_4=z.VARSTDCOSTS1_4+a.VARSTDCOSTS1_4, VARSTDCOSTS1_5=z.VARSTDCOSTS1_5+a.VARSTDCOSTS1_5, VARSTDCOSTS1_6=z.VARSTDCOSTS1_6+a.VARSTDCOSTS1_6, VARSTDCOSTS1_7=z.VARSTDCOSTS1_7+a.VARSTDCOSTS1_7, VARSTDCOSTS1_8=z.VARSTDCOSTS1_8+a.VARSTDCOSTS1_8, VARSTDCOSTS1_9=z.VARSTDCOSTS1_9+a.VARSTDCOSTS1_9, VARSTDCOSTS1_10=z.VARSTDCOSTS1_10+a.VARSTDCOSTS1_10, VARSTDCOSTS1_11=z.VARSTDCOSTS1_11+a.VARSTDCOSTS1_11, VARSTDCOSTS1_12=z.VARSTDCOSTS1_12+a.VARSTDCOSTS1_12, VARSTDCOSTS1_13=z.VARSTDCOSTS1_13+a.VARSTDCOSTS1_13, VARSTDCOSTS2_1=z.VARSTDCOSTS2_1+a.VARSTDCOSTS2_1, VARSTDCOSTS2_2=z.VARSTDCOSTS2_2+a.VARSTDCOSTS2_2, VARSTDCOSTS2_3=z.VARSTDCOSTS2_3+a.VARSTDCOSTS2_3, VARSTDCOSTS2_4=z.VARSTDCOSTS2_4+a.VARSTDCOSTS2_4, VARSTDCOSTS2_5=z.VARSTDCOSTS2_5+a.VARSTDCOSTS2_5, VARSTDCOSTS2_6=z.VARSTDCOSTS2_6+a.VARSTDCOSTS2_6, VARSTDCOSTS2_7=z.VARSTDCOSTS2_7+a.VARSTDCOSTS2_7, VARSTDCOSTS2_8=z.VARSTDCOSTS2_8+a.VARSTDCOSTS2_8, VARSTDCOSTS2_9=z.VARSTDCOSTS2_9+a.VARSTDCOSTS2_9, VARSTDCOSTS2_10=z.VARSTDCOSTS2_10+a.VARSTDCOSTS2_10, VARSTDCOSTS2_11=z.VARSTDCOSTS2_11+a.VARSTDCOSTS2_11, VARSTDCOSTS2_12=z.VARSTDCOSTS2_12+a.VARSTDCOSTS2_12, VARSTDCOSTS2_13=z.VARSTDCOSTS2_13+a.VARSTDCOSTS2_13 from MOP1004 z, MOP1004 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MANUFACTUREORDER_I=a.MANUFACTUREORDER_I if @@error <> 0 begin select @O_iErrorState=115  return end update MOP1012 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MANUFACTUREORDER_I not in(select MANUFACTUREORDER_I from MOP1012 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=119  return end update z set MRPAMOUNT_I=z.MRPAMOUNT_I+a.MRPAMOUNT_I, MRPAMOUNT2_I=z.MRPAMOUNT2_I+a.MRPAMOUNT2_I, VARSTDCOSTS1_1=z.VARSTDCOSTS1_1+a.VARSTDCOSTS1_1, VARSTDCOSTS1_2=z.VARSTDCOSTS1_2+a.VARSTDCOSTS1_2, VARSTDCOSTS1_3=z.VARSTDCOSTS1_3+a.VARSTDCOSTS1_3, VARSTDCOSTS1_4=z.VARSTDCOSTS1_4+a.VARSTDCOSTS1_4, VARSTDCOSTS1_5=z.VARSTDCOSTS1_5+a.VARSTDCOSTS1_5, VARSTDCOSTS1_6=z.VARSTDCOSTS1_6+a.VARSTDCOSTS1_6, VARSTDCOSTS1_7=z.VARSTDCOSTS1_7+a.VARSTDCOSTS1_7, VARSTDCOSTS1_8=z.VARSTDCOSTS1_8+a.VARSTDCOSTS1_8, VARSTDCOSTS1_9=z.VARSTDCOSTS1_9+a.VARSTDCOSTS1_9, VARSTDCOSTS1_10=z.VARSTDCOSTS1_10+a.VARSTDCOSTS1_10, VARSTDCOSTS1_11=z.VARSTDCOSTS1_11+a.VARSTDCOSTS1_11, VARSTDCOSTS1_12=z.VARSTDCOSTS1_12+a.VARSTDCOSTS1_12, VARSTDCOSTS1_13=z.VARSTDCOSTS1_13+a.VARSTDCOSTS1_13, VARSTDCOSTS2_1=z.VARSTDCOSTS2_1+a.VARSTDCOSTS2_1, VARSTDCOSTS2_2=z.VARSTDCOSTS2_2+a.VARSTDCOSTS2_2, VARSTDCOSTS2_3=z.VARSTDCOSTS2_3+a.VARSTDCOSTS2_3, VARSTDCOSTS2_4=z.VARSTDCOSTS2_4+a.VARSTDCOSTS2_4, VARSTDCOSTS2_5=z.VARSTDCOSTS2_5+a.VARSTDCOSTS2_5, VARSTDCOSTS2_6=z.VARSTDCOSTS2_6+a.VARSTDCOSTS2_6, VARSTDCOSTS2_7=z.VARSTDCOSTS2_7+a.VARSTDCOSTS2_7, VARSTDCOSTS2_8=z.VARSTDCOSTS2_8+a.VARSTDCOSTS2_8, VARSTDCOSTS2_9=z.VARSTDCOSTS2_9+a.VARSTDCOSTS2_9, VARSTDCOSTS2_10=z.VARSTDCOSTS2_10+a.VARSTDCOSTS2_10, VARSTDCOSTS2_11=z.VARSTDCOSTS2_11+a.VARSTDCOSTS2_11, VARSTDCOSTS2_12=z.VARSTDCOSTS2_12+a.VARSTDCOSTS2_12, VARSTDCOSTS2_13=z.VARSTDCOSTS2_13+a.VARSTDCOSTS2_13 from MOP1012 z, MOP1012 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MANUFACTUREORDER_I=a.MANUFACTUREORDER_I if @@error <> 0 begin select @O_iErrorState=184  return end update MOP1110 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MOPRCTNM+cast(PICKLISTSEQ as varchar) not in(select MOPRCTNM+cast(PICKLISTSEQ as varchar) from MOP1110 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=138  return end update z set ITEM_COSTS_ARRAY_I_1=z.ITEM_COSTS_ARRAY_I_1+a.ITEM_COSTS_ARRAY_I_1, ITEM_COSTS_ARRAY_I_2=z.ITEM_COSTS_ARRAY_I_2+a.ITEM_COSTS_ARRAY_I_2, ITEM_COSTS_ARRAY_I_3=z.ITEM_COSTS_ARRAY_I_3+a.ITEM_COSTS_ARRAY_I_3, ITEM_COSTS_ARRAY_I_4=z.ITEM_COSTS_ARRAY_I_4+a.ITEM_COSTS_ARRAY_I_4, ITEM_COSTS_ARRAY_I_5=z.ITEM_COSTS_ARRAY_I_5+a.ITEM_COSTS_ARRAY_I_5, ITEM_COSTS_ARRAY_I_6=z.ITEM_COSTS_ARRAY_I_6+a.ITEM_COSTS_ARRAY_I_6, ITEM_COSTS_ARRAY_I_7=z.ITEM_COSTS_ARRAY_I_7+a.ITEM_COSTS_ARRAY_I_7, ITEM_COSTS_ARRAY_I_8=z.ITEM_COSTS_ARRAY_I_8+a.ITEM_COSTS_ARRAY_I_8, ITEM_COSTS_ARRAY_I_9=z.ITEM_COSTS_ARRAY_I_9+a.ITEM_COSTS_ARRAY_I_9, ITEM_COSTS_ARRAY_I_10=z.ITEM_COSTS_ARRAY_I_10+a.ITEM_COSTS_ARRAY_I_10, QTYPLANNEDTOCONSUME=z.QTYPLANNEDTOCONSUME+a.QTYPLANNEDTOCONSUME, QTYPLANNEDTOBACKFLUSH=z.QTYPLANNEDTOBACKFLUSH+a.QTYPLANNEDTOBACKFLUSH, QTYTOCONSUME=z.QTYTOCONSUME+a.QTYTOCONSUME, QTYTOBACKFLUSH=z.QTYTOBACKFLUSH+a.QTYTOBACKFLUSH, QTYTOUSE=z.QTYTOUSE+a.QTYTOUSE, NUMBERSCRAPPED_I=z.NUMBERSCRAPPED_I+a.NUMBERSCRAPPED_I, FIXDQTYTOCONS=z.FIXDQTYTOCONS+a.FIXDQTYTOCONS, FIXDQTYTOBF=z.FIXDQTYTOBF+a.FIXDQTYTOBF from MOP1110 z, MOP1110 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MOPRCTNM=a.MOPRCTNM and z.PICKLISTSEQ=a.PICKLISTSEQ if @@error <> 0 begin select @O_iErrorState=181  return end update MOPW500 set ITEMNMBR=@I_charEndItem where ITEMNMBR=@I_charStartItem and MOPRCTNM+cast(PICKLISTSEQ as varchar)+USERID not in(select MOPRCTNM+cast(PICKLISTSEQ as varchar)+USERID from MOPW500 where ITEMNMBR=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=152  return end update z set QTYPLANNEDTOCONSUME=z.QTYPLANNEDTOCONSUME+a.QTYPLANNEDTOCONSUME, QTYPLANNEDTOBACKFLUSH=z.QTYPLANNEDTOBACKFLUSH+a.QTYPLANNEDTOBACKFLUSH, QTYTOCONSUME=z.QTYTOCONSUME+a.QTYTOCONSUME, QTYTOBACKFLUSH=z.QTYTOBACKFLUSH+a.QTYTOBACKFLUSH, QTYTOUSE=z.QTYTOUSE+a.QTYTOUSE, MOP_REQUIRED_QUANTITY_I=z.MOP_REQUIRED_QUANTITY_I+a.MOP_REQUIRED_QUANTITY_I, WIPQUANTITY=z.WIPQUANTITY+a.WIPQUANTITY, QTYAVAIL=z.QTYAVAIL+a.QTYAVAIL, QTYCONSUMEDTODATE=z.QTYCONSUMEDTODATE+a.QTYCONSUMEDTODATE, QTYBACKFLUSHEDTODATE=z.QTYBACKFLUSHEDTODATE+a.QTYBACKFLUSHEDTODATE, QTYSLCTD=z.QTYSLCTD+a.QTYSLCTD, NUMBERSCRAPPED_I=z.NUMBERSCRAPPED_I+a.NUMBERSCRAPPED_I, ATYALLOC=z.ATYALLOC+a.ATYALLOC, PLNDFIXDQTYTOCONS=z.PLNDFIXDQTYTOCONS+a.PLNDFIXDQTYTOCONS, PLNDFIXDQTYTOBF=z.PLNDFIXDQTYTOBF+a.PLNDFIXDQTYTOBF, FIXDQTYTOCONS=z.FIXDQTYTOCONS+a.FIXDQTYTOCONS, FIXDQTYTOBF=z.FIXDQTYTOBF+a.FIXDQTYTOBF, QTYSELCTDBF=z.QTYSELCTDBF+a.QTYSELCTDBF from MOPW500 z, MOPW500 a where z.ITEMNMBR=@I_charEndItem and a.ITEMNMBR=@I_charStartItem and z.MOPRCTNM=a.MOPRCTNM and z.PICKLISTSEQ=a.PICKLISTSEQ and z.USERID=a.USERID if @@error <> 0 begin select @O_iErrorState=153  return end update EC050031 set ECM_Item_Number=@I_charEndItem where ECM_Item_Number=@I_charStartItem if @@error <> 0 begin select @O_iErrorState=106  return end update IVR10100 set ALTPART_I=@I_charEndItem where ALTPART_I=@I_charStartItem and ITEMNMBR not in(select ITEMNMBR from IVR10100 where ALTPART_I=@I_charEndItem) if @@error <> 0 begin select @O_iErrorState=107  return end declare ta_INCMCursor insensitive CURSOR for select 'delete '+o.name+'  where rtrim(CPN_I) ='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='CPN_I' and (o.name='BM010200' or o.name='Bomlev1'  or o.name='Bomlev2' or o.name='ICIV0500' or o.name='ICW00001' or o.name='MOP1014' or o.name='SCSU0030' or o.name='TARD1001') order by o.name set nocount on OPEN ta_INCMCursor FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITMNBR) if @@error <> 0 begin select @O_iErrorState=108  break end  FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR end DEALLOCATE ta_INCMCursor if (@O_iErrorState<>0) return declare ta_INCMCursor insensitive CURSOR for select 'delete '+o.name+' where rtrim(ITEMNMBR) ='+rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ITEMNMBR' and (o.name='BM010300' or o.name='CT00003'  or o.name='CT00005' or o.name='CT00102' or o.name='DW010013' or o.name='DW010100' or o.name='EC010230' or o.name='EC030031' or o.name='FI020000' or o.name='IC10200' or o.name='ICIV0323' or o.name='ICJC2000' or o.name='IS090000' or o.name='IVR10015' or o.name='IVR10100' or o.name='IVR10232' or o.name='MOP1000' or o.name='MOP1001' or o.name='MOP1004' or o.name='MOP1012' or o.name='MOP1110' or o.name='MOPW500' or o.name='MP030000' or o.name='MPS10000' or o.name='OC010100' or o.name='OC010200' or o.name='OC010300' or o.name='OC010400' or o.name='PK020031' or o.name='PRW30015' or o.name='QA160032' or o.name='RT010001' or o.name='RT010130' or o.name='RT010500' or o.name='RTH10100' or o.name='RTS10001' or o.name='RTW20000' or o.name='SF010400') order by o.name set nocount on OPEN ta_INCMCursor FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITMNBR) if @@error <> 0 begin select @O_iErrorState=109  break end  FETCH NEXT FROM ta_INCMCursor INTO @ITMNBR end DEALLOCATE ta_INCMCursor if (@O_iErrorState<>0) return delete IVR10100 where ALTPART_I=@I_charStartItem if @@error <> 0 begin select @O_iErrorState=110  return end 
GO
GRANT EXECUTE ON  [dbo].[smItemNumberCombinerMfg] TO [DYNGRP]
GO

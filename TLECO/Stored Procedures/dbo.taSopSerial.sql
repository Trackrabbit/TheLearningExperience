SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taSopSerial]  @I_vSOPTYPE smallint,     @I_vSOPNUMBE char(21),      @I_vLNITMSEQ int,      @I_vCMPNTSEQ int = 0,     @I_vQTYTYPE smallint = 1,     @I_vITEMNMBR char(30),     @I_vLOCNCODE char(10) = '',    @I_vQUANTITY numeric(19,5)= 1,     @I_vBIN char(15) = '',     @I_vCREATEBIN tinyint = 0,    @I_vSERLNMBR char(20) = '',    @I_vAUTOCREATESERIAL int = 0,   @I_vDOCID char(15) = '',    @I_vDROPSHIP smallint = 0,    @I_vQTYFULFI numeric(19,5) = null,   @I_vALLOCATE smallint = 0,    @I_vUpdateIfExists smallint = 0,  @I_vSERLNMBRToReplace char(20) = '', @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set deadlock_priority low  set transaction isolation level read uncommitted set nocount on  declare  @SERLNSLD int,     @FGDITMNM char(20),    @FGSERNBR char(30),    @VNDRNMBR char (25),    @CMPFINGD int,     @ITMTRKOP smallint,    @RCTSEQNM int,  @DTSEQNUM numeric(19,5),   @DATERECD datetime,    @UNITCOST numeric (19,5),  @SERLTQTY numeric (19,5),   @SLTSQNUM int,     @OVRSERLT smallint,    @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @ALLOCABY smallint,  @USPFULPR smallint,  @currdate datetime,  @SOPHdrTbl char(18),  @DexRowID int,  @oExists int,  @OInsStatus int,  @mylock tinyint,  @DexLockErrorState int,  @LOCNCODE char(10),  @ExstITEMNMBR char(30),  @ExstATYALLOC numeric(19,5),  @ExstQTYFULFI numeric(19,5),  @FulAmnt int,  @QTYBSUOM numeric(19,5),  @Result int,  @ENABLEMULTIBIN tinyint,  @sCompanyID int,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState int,  @BinToReplace char(15),  @QUANTITY numeric(19,5),  @USEEXISTINGSNLOTS tinyint,  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint   select  @SERLNSLD = 0,  @FGDITMNM = '',  @FGSERNBR = '',  @VNDRNMBR = '',  @CMPFINGD = 0,   @ITMTRKOP = 0,  @RCTSEQNM = 0,  @DTSEQNUM = 0,  @DATERECD = '',    @UNITCOST = 0,  @SERLTQTY = 1,  @SLTSQNUM = 0,  @OVRSERLT = 0,  @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_iErrorState = 0,  @ALLOCABY = 0,  @USPFULPR = 0,  @currdate = convert(varchar(12),getdate()),  @SOPHdrTbl = '',  @DexRowID = 0,  @oExists = 0,  @OInsStatus = 0,  @mylock = 0,  @DexLockErrorState = 0,  @LOCNCODE = '',  @ExstITEMNMBR = '',  @ExstATYALLOC = 0,  @ExstQTYFULFI = 0,  @FulAmnt = 0,  @QTYBSUOM = 0,  @Result = 0,  @ENABLEMULTIBIN = 0,  @sCompanyID = 0,  @NOTEINDX = 0,  @iGetNextNoteIdxErrState = 0,  @BinToReplace = '',  @QUANTITY = 1,  @USEEXISTINGSNLOTS = 0,  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0   if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taSopSerialPre  @I_vSOPTYPE output,  @I_vSOPNUMBE output,  @I_vLNITMSEQ output,  @I_vCMPNTSEQ output,  @I_vQTYTYPE output,  @I_vITEMNMBR output,  @I_vLOCNCODE output,  @I_vQUANTITY output,  @I_vBIN output,  @I_vCREATEBIN output,  @I_vSERLNMBR output,  @I_vAUTOCREATESERIAL output,  @I_vDOCID output,  @I_vDROPSHIP output,  @I_vQTYFULFI output,  @I_vALLOCATE output,  @I_vUpdateIfExists output,  @I_vSERLNMBRToReplace output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 3543    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vSOPTYPE is NULL or  @I_vSOPNUMBE is NULL or  @I_vQTYTYPE is NULL or   @I_vITEMNMBR is NULL or  @I_vQUANTITY is NULL or  @I_vBIN is null or  @I_vCREATEBIN is null or  @I_vSERLNMBR is NULL or  @I_vCMPNTSEQ is NULL or  @I_vAUTOCREATESERIAL is NULL or  @I_vDOCID is NULL or  @I_vDROPSHIP is NULL or  @I_vUpdateIfExists is NULL or  @I_vALLOCATE is NULL ) begin  select @O_iErrorState = 1528    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vSOPTYPE = 0 or  @I_vSOPNUMBE = '' or   @I_vITEMNMBR = '' ) begin  select @O_iErrorState = 1529    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE),  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vDOCID = UPPER(@I_vDOCID),  @I_vLOCNCODE = UPPER(@I_vLOCNCODE),  @I_vBIN = upper(@I_vBIN)   select @QUANTITY = @I_vQUANTITY  if (@I_vSOPTYPE = 3 and @I_vQUANTITY = -1) begin  select @I_vQUANTITY = 1 end  select  @ENABLEMULTIBIN = ENABLEMULTIBIN,  @USEEXISTINGSNLOTS = USEEXISTINGSNLOTS  from IV40100 (nolock) where SETUPKEY = 1  if (@I_vQUANTITY not in (-1,1)) or (@I_vQUANTITY = -1 and @I_vSOPTYPE <> 3) begin  select @O_iErrorState = 5525     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vUpdateIfExists < 0) or (@I_vUpdateIfExists > 1)) begin  select @O_iErrorState = 3568     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vUpdateIfExists = 0) and (@I_vSERLNMBRToReplace <> '')) begin  select @O_iErrorState = 3569     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vUpdateIfExists = 1) and (@I_vSOPTYPE <> 4) and (@I_vSERLNMBRToReplace <> '') and not exists (select 1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBRToReplace)) begin  select @O_iErrorState = 3570     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vUpdateIfExists = 1) and (@I_vSOPTYPE in(2,3,4,6)) and (@I_vSERLNMBRToReplace <> '') and not exists (select 1 from SOP10201 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ and POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBRToReplace)) begin  select @O_iErrorState = 3571     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vSOPTYPE not in(2,3,4,6)) begin  select @O_iErrorState = 1530     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAUTOCREATESERIAL not in (0,1)) begin  select @O_iErrorState = 9548     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDOCID <> '' and @I_vSOPTYPE <> 6) and (not exists(select 1 from SOP40200 (nolock) where DOCID = @I_vDOCID and SOPTYPE = @I_vSOPTYPE)))  begin  select @O_iErrorState = 5655     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vDOCID <> '' and @I_vSOPTYPE = 6) and (not exists(select 1 from SOP40200 (nolock) where DOCID = @I_vDOCID and SOPTYPE = 3 and WORKFLOWENABLED = 1)))  begin  select @O_iErrorState = 7740     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDOCID <> '') and (@I_vSOPTYPE <> 6)   select @ALLOCABY = ALLOCABY, @USPFULPR = USPFULPR  from SOP40200 (nolock) where DOCID = @I_vDOCID and SOPTYPE = @I_vSOPTYPE else  select @ALLOCABY = 1, @USPFULPR = 0  if (@I_vDOCID <> '') and (@I_vSOPTYPE = 6)   select @ALLOCABY = ALLOCABY, @USPFULPR = USPFULPR  from SOP40200 (nolock) where DOCID = @I_vDOCID and SOPTYPE = 3 else  select @ALLOCABY = 1, @USPFULPR = 0  if (@I_vQTYFULFI is null) begin  select @I_vQTYFULFI = 1 end  if ((@I_vAUTOCREATESERIAL = 0) and (@I_vSERLNMBR <> '')) begin   if exists  (  select 1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR and SERLNSLD = 1 union  select 2 from BM10400 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 3 from POP10330 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 4 from IV10002 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 5 from IVC10102 (nolock) where POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 6 from SOP10201 (nolock) where POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR  )  begin  select @O_iErrorState = 1526     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vAUTOCREATESERIAL = 1) and (@I_vSERLNMBR <> '')) begin   if exists  (  select 2 from BM10400 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 3 from POP10330 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 4 from IV10002 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 5 from IVC10102 (nolock) where POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 6 from SOP10201 (nolock) where POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR  )  begin  select @O_iErrorState = 9549     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vSERLNMBR <> '') and (@I_vSOPTYPE in (2,3,6)) begin  if exists (select 1 from IV00200 where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR and QTYTYPE <> 1)  begin  select @O_iErrorState = 9562     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vSOPTYPE in (2,3,6)) and (@I_vQTYTYPE <> 1))  begin  select @O_iErrorState = 1538     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vQTYTYPE < 1) or (@I_vQTYTYPE > 5)) begin  select @O_iErrorState = 1539     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @ITMTRKOP = ITMTRKOP from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@ITMTRKOP <> 2) begin  select @O_iErrorState = 1531     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLOCNCODE = '') begin   select @I_vLOCNCODE = LOCNCODE from SOP40100 (nolock) end  select top 1 @LOCNCODE = LOCNCODE from IV40700 (nolock) where LOCNCODE <> ''  if (@I_vLOCNCODE = '') begin  if (@LOCNCODE <> '')  begin  select @O_iErrorState = 129    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE))  begin  select @O_iErrorState = 283     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)))  begin  select @O_iErrorState = 693     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@LOCNCODE = '') begin  select @O_iErrorState = 1774    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @SITEINACTIVE = INACTIVE from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE select @ITEMSITEINACTIVE = INACTIVE from IV00102 (nolock) where (ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)  if (@I_vLOCNCODE <> '' and @SITEINACTIVE = 1) begin  select @O_iErrorState = 11815     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end if (@I_vLOCNCODE <> '' and @I_vITEMNMBR <> '' and @ITEMSITEINACTIVE = 1) begin  select @O_iErrorState = 11816     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPTYPE in(2,3,6)) and (@I_vQUANTITY > 0) and (@I_vAUTOCREATESERIAL = 0) and (@I_vSERLNMBR <> '') and (not exists (select 1 from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR and LOCNCODE = @I_vLOCNCODE and SERLNSLD = 0))) begin  select @O_iErrorState = 3551     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (((@I_vSOPTYPE = 4) or ((@I_vSOPTYPE = 3 and @I_vQUANTITY < 0))) and (@I_vAUTOCREATESERIAL = 0) and (@I_vSERLNMBR <> '') and (exists(select 1 from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR and LOCNCODE = @I_vLOCNCODE and SERLNSLD = 0))) begin  select @O_iErrorState = 8244     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUpdateIfExists = 1) begin  select @ExstITEMNMBR = ITEMNMBR,  @ExstATYALLOC = ATYALLOC,  @ExstQTYFULFI = QTYFULFI,  @QTYBSUOM = QTYBSUOM  from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ   if (@I_vITEMNMBR <> @ExstITEMNMBR)  begin  select @O_iErrorState = 2902     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select 1 from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE))  begin  select @O_iErrorState = 2903     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vSERLNMBR <> '') and (@I_vSERLNMBRToReplace = '') and (@ExstQTYFULFI + 1 > @ExstATYALLOC))  begin  select @O_iErrorState = 2905     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vUpdateIfExists = 0) and (@I_vUSRDEFND5 <> 'taSopSerial48B022C4-9017-4C0D-926F-DFC059D91737') and  (exists(select 1 from SOP10201 (nolock)   where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and  LNITMSEQ = @I_vLNITMSEQ and POSTED = 0 and  ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR))) begin  select @O_iErrorState = 2904     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (((@I_vSOPTYPE = 4) and (@I_vSERLNMBR = '')) or ((@QUANTITY = -1) and (@I_vSERLNMBR = '')))  begin  select @O_iErrorState = 1537     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (((@I_vSOPTYPE = 4) and (@I_vSERLNMBR <> '')) or ((@QUANTITY = -1) and (@I_vSERLNMBR = '')))  begin  if (exists(select 1 from SOP10201 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR and POSTED = 0))   begin  select @O_iErrorState = 1532     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vDROPSHIP = 1) and (@I_vAUTOCREATESERIAL = 1)) begin  select @O_iErrorState = 3331     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@ENABLEMULTIBIN = 0) begin  if (@I_vCREATEBIN = 1)  begin  select @O_iErrorState = 7154     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vBIN <> '')  begin  select @O_iErrorState = 7155     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin   if ((@I_vAUTOCREATESERIAL = 0) and (@I_vCREATEBIN = 1))  begin  select @O_iErrorState = 7156     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (((@I_vSOPTYPE = 4) and (@I_vBIN = '')) or ((@QUANTITY = -1) and (@I_vBIN = '')))   begin  select @O_iErrorState = 7157     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vSOPTYPE <> 4) and (@I_vBIN <> '') and (@I_vCREATEBIN = 0))  begin  select @O_iErrorState = 7158     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vBIN = '') and (@I_vCREATEBIN = 1))  begin  select @O_iErrorState = 7159      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (@I_vCREATEBIN not in (0,1))  begin  select @O_iErrorState = 7160     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if ((@I_vBIN <> '') and not exists(select 1 from IV40701 (nolock) where LOCNCODE = @I_vLOCNCODE and BIN = @I_vBIN) and (@I_vCREATEBIN = 0))  begin  select @O_iErrorState = 7161     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vCREATEBIN = 0) and (@I_vSOPTYPE <> 4))  begin  select @I_vBIN = BIN from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR and LOCNCODE = @I_vLOCNCODE  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 1761    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  while (1=1) begin  select @SOPHdrTbl = rtrim(db_name()) + '.dbo.SOP10100'   select @DexRowID = DEX_ROW_ID from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPHdrTbl and row_id = @DexRowID and session_id = @@spid))  begin  select @mylock = 1   exec DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPHdrTbl,   @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 2022    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vUpdateIfExists = 1)  begin  select @BinToReplace = BIN from SOP10201 (nolock)  where SOPTYPE = @I_vSOPTYPE and  SOPNUMBE = @I_vSOPNUMBE and  POSTED = 0 and  ITEMNMBR = @I_vITEMNMBR and  SERLTNUM = @I_vSERLNMBRToReplace   if ((@I_vSOPTYPE <> 4) and (@BinToReplace <> ''))  begin  update IV00112 set ATYALLOC = ATYALLOC - 1  from IV00112 (updlock)  where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE and  BIN = @BinToReplace and QTYTYPE = @I_vQTYTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 7162    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   delete SOP10201 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBRToReplace  if (@@error <> 0)  begin  select @O_iErrorState = 3572    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@I_vSOPTYPE in (2,3,6)) and (@I_vQUANTITY = 1))  begin  update IV00200 set SERLNSLD = 0 from IV00200 (updlock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBRToReplace  if (@@error <> 0)  begin  select @O_iErrorState = 3573    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vSERLNMBR <> '')  begin  update SOP10200 set FUFILDAT = @currdate, ACTLSHIP = @currdate  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 4076    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vCMPNTSEQ <> 0)  begin  update SOP10200 set FUFILDAT = @currdate, ACTLSHIP = @currdate  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0  if (@@error <> 0)  begin  select @O_iErrorState = 4077    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (@UNITCOST = 0)  begin  select @UNITCOST =  case  when VCTNMTHD in (4,5) then STNDCOST  else CURRCOST  end  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  end    select @DTSEQNUM = max(DTSEQNUM)+1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE and DATERECD = @currdate   if (@DTSEQNUM is null)  begin  select @DTSEQNUM = 1  end   if ((@I_vCREATEBIN = 1) and not exists(select 1 from IV40701 (nolock) where LOCNCODE = @I_vLOCNCODE and BIN = @I_vBIN))  begin  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 7163    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   insert IV40701 (LOCNCODE, BIN, NOTEINDX)  select @I_vLOCNCODE, @I_vBIN, @NOTEINDX  if (@@error <> 0)  begin  select @O_iErrorState = 7164    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if ((@I_vAUTOCREATESERIAL = 1) and (@I_vSERLNMBR <> '') and ((@I_vSOPTYPE = 2) or (@I_vSOPTYPE in (3,6) and @QUANTITY = 1)) and ((@ALLOCABY = 1) or (@I_vALLOCATE = 1))   and ((@USPFULPR = 0) or (@I_vQTYFULFI > 0)) and (@I_vQTYFULFI <> 0) and (@I_vDROPSHIP = 0))  begin  if (not exists(select 1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR))  begin  if (@ENABLEMULTIBIN = 1)  begin  if ((@I_vCREATEBIN = 1) and not exists(select 1 from IV00112 (nolock) where ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @I_vLOCNCODE and BIN = @I_vBIN and QTYTYPE = 1))  begin   insert IV00112 (ITEMNMBR, LOCNCODE, BIN, QTYTYPE, QUANTITY, ATYALLOC)  select @I_vITEMNMBR, @I_vLOCNCODE, @I_vBIN,1,0,0  if (@@error <> 0)  begin  select @O_iErrorState = 7165    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   update IV00112 set QUANTITY = QUANTITY + 1  from IV00112 (updlock)  where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE and  BIN = @I_vBIN and QTYTYPE = @I_vQTYTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 7166    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@USEEXISTINGSNLOTS = 1)  begin  select @O_iErrorState = 8674    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select @OVRSERLT = 1   insert IV00200  (  ITEMNMBR,  LOCNCODE,  DATERECD,  DTSEQNUM,  SERLNMBR,  FGDITMNM,  FGSERNBR,  UNITCOST,  RCTSEQNM,  VNDRNMBR,  CMPFINGD,  SERLNSLD,  QTYTYPE,  BIN  )  select   @I_vITEMNMBR,    @I_vLOCNCODE,    @currdate,    @DTSEQNUM,    @I_vSERLNMBR,    @FGDITMNM,    @FGSERNBR,    @UNITCOST,    @RCTSEQNM,    @VNDRNMBR,    @CMPFINGD,    @SERLNSLD,    @I_vQTYTYPE,    case @ENABLEMULTIBIN   when 1  then @I_vBIN  else ''  end  if (@@error <> 0)  begin  select @O_iErrorState = 1533    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set QTYONHND = QTYONHND + 1 from IV00102 (updlock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 1542    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set QTYONHND = QTYONHND + 1 from IV00102 (updlock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = ''   if (@@error <> 0)  begin  select @O_iErrorState = 1543    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   select @I_vSERLNMBR = SERLNMBR,  @UNITCOST = UNITCOST,  @DATERECD = DATERECD,  @I_vQTYTYPE = QTYTYPE,  @I_vBIN =  case @ENABLEMULTIBIN  when 1 then BIN  else ''  end  from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and  SERLNMBR = @I_vSERLNMBR   if (@SLTSQNUM = 0)  begin  select @SLTSQNUM = isnull(max(SLTSQNUM),0) + 1   from SOP10201 (nolock)  where  SOPTYPE = @I_vSOPTYPE and  SOPNUMBE = @I_vSOPNUMBE and  LNITMSEQ = @I_vLNITMSEQ and  CMPNTSEQ = @I_vCMPNTSEQ  end   if (not exists(select 1 from SOP10201 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @SLTSQNUM)) and (((@ALLOCABY = 1) or (@I_vALLOCATE = 1) or (@I_vSOPTYPE = 4)) and ((@USPFULPR = 0) or (@I_vQTYFULFI > 0))  and (@I_vQTYFULFI <> 0) and (@I_vDROPSHIP = 0) and (@I_vSERLNMBR <> ''))  begin  insert SOP10201  (  SOPTYPE,  SOPNUMBE,  LNITMSEQ,  CMPNTSEQ,  QTYTYPE,  SERLTNUM,  SERLTQTY,  SLTSQNUM,  DATERECD,  DTSEQNUM,  UNITCOST,  ITEMNMBR,  TRXSORCE,  POSTED,  OVRSERLT,  BIN,  MFGDATE,  EXPNDATE  )  select  @I_vSOPTYPE,    @I_vSOPNUMBE,    @I_vLNITMSEQ,    @I_vCMPNTSEQ,    @I_vQTYTYPE,    @I_vSERLNMBR,    @SERLTQTY,    @SLTSQNUM,    case     when (@QUANTITY = -1)   then ''  else @DATERECD  end,  case      when (@I_vSOPTYPE = 4) or (@QUANTITY = -1)  then 0  else @DTSEQNUM  end,  case     when (@I_vSOPTYPE = 4) or (@QUANTITY = -1)   then 0  else @UNITCOST  end,  @I_vITEMNMBR,    '',     0,     @OVRSERLT,    case @ENABLEMULTIBIN   when 1  then @I_vBIN  else ''  end,  '',     ''     if (@@error <> 0)   begin  select @O_iErrorState = 1534    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00200 set SERLNSLD = 1  from IV00200 (updlock)  where ITEMNMBR = @I_vITEMNMBR and  SERLNMBR = @I_vSERLNMBR  if @@error <> 0  begin  select @O_iErrorState = 1535    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@ENABLEMULTIBIN = 1) and (@I_vSOPTYPE <> 4))  begin  update IV00112 set ATYALLOC = ATYALLOC + 1  from IV00112 (updlock)  where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE and  BIN = @I_vBIN and QTYTYPE = @I_vQTYTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 7167    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if ((@mylock = 1) and (@I_vUpdateIfExists = 1))  begin  select @FulAmnt = count(*) from SOP10201 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  select @Result = @FulAmnt/@QTYBSUOM   if ((@I_vSERLNMBRToReplace <> '') and (@I_vSERLNMBR = ''))  begin  update SOP10200 set  QTYFULFI = @Result,  QTYSLCTD = @Result * @QTYBSUOM,  EXTQTYSEL = @Result * @QTYBSUOM  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 2369    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vSERLNMBRToReplace <> '')  begin  if ((select RCTSEQNM from IV00200 (nolock) where SERLNMBR = @I_vSERLNMBRToReplace and ITEMNMBR = @I_vITEMNMBR) = 0)  begin  delete IV00200 where SERLNMBR = @I_vSERLNMBRToReplace and ITEMNMBR = @I_vITEMNMBR and RCTSEQNM = 0  if (@@error <> 0)  begin  select @O_iErrorState = 7168    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set QTYONHND = QTYONHND - 1 from IV00102 (updlock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 7170    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set QTYONHND = QTYONHND - 1 from IV00102 (updlock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = ''   if (@@error <> 0)  begin  select @O_iErrorState = 7172    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@BinToReplace <> '')  begin  update IV00112 set QUANTITY = QUANTITY - 1 from IV00112 (updlock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE and  BIN = @BinToReplace and QTYTYPE = @I_vQTYTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 7169    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  end   if ((@I_vSERLNMBR <> '') and (@I_vSERLNMBRToReplace = ''))  begin  update SOP10200 set  QTYFULFI = @Result,  QTYSLCTD = @Result * @QTYBSUOM,  EXTQTYSEL = @Result * @QTYBSUOM  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 2901    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  break end  if (@mylock = 1) begin  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,   @I_vtable_path_name = @SOPHdrTbl,   @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 2021    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taSopSerialPost  @I_vSOPTYPE,  @I_vSOPNUMBE,  @I_vLNITMSEQ,  @I_vCMPNTSEQ,  @I_vQTYTYPE,  @I_vITEMNMBR,  @I_vLOCNCODE,  @I_vQUANTITY,  @I_vBIN,  @I_vCREATEBIN,  @I_vSERLNMBR,  @I_vAUTOCREATESERIAL,  @I_vDOCID,  @I_vDROPSHIP,  @I_vQTYFULFI,  @I_vALLOCATE,  @I_vUpdateIfExists,  @I_vSERLNMBRToReplace,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 3544    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 2077    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taSopSerial] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taFSRTVLine]  @I_vRTV_Number char(15),    @I_vRTV_Line numeric(19,5) = null,   @I_vRTV_Type char(11) = null,    @I_vVRMA_Document_ID char(15) = null,   @I_vRETDOCID char(15) = null,    @I_vLNSEQNBR numeric(19,5) = null,   @I_vSVC_Process_SEQ_Number numeric(19,5) = null,  @I_vDSCRIPTN char(31) = null,    @I_vREFRENCE char(31) = null,    @I_vReference2 char(31) = null,    @I_vITEMNMBR char(31) = null,    @I_vITEMDESC char(101) = null,    @I_vQUANTITY numeric(19,5) = null,   @I_vUOFM char(9) = null,    @I_vVENDORID char(15) = null,    @I_vADRSCODE char(15) = null,    @I_vShip_Address_Name char(65) = null,   @I_vShip_Address_1 char(61) = null,   @I_vShip_Address_2 char(61) = null,   @I_vShip_Address_3 char(61) = null,   @I_vShip_City char(35) = null,    @I_vShip_State char(29) = null,    @I_vZIPCODE char(11) = null,    @I_vShip_Country char(61) = null,   @I_vVNDITNUM char(31) = null,    @I_vReturn_Item_Number char(31) = null,   @I_vOFFID char(11) = null,    @I_vLOCCODEB char(11) = null,    @I_vLOCNCODE char(11) = null,    @I_vENTDTE datetime = null,    @I_vENTTME datetime = null,    @I_vPRMDATE datetime = null,    @I_vPromised_Time datetime = null,   @I_vShipped_Date datetime = null,   @I_vShipped_Time datetime = null,   @I_vReceiptdate datetime = null,   @I_vReceipt_Time datetime = null,   @I_vCOMPDTE datetime = null,    @I_vCOMPTME datetime = null,    @I_vBill_of_Lading_Out char(31) = null,   @I_vShipping_Method_Out char(15) = null,  @I_vBill_of_Lading char(31) = null,   @I_vSHIPMTHD char(15) = null,    @I_vTracking_Number char(41) = null,   @I_vNOTETXT nvarchar(2000) = '',    @I_vCUSTOWN tinyint  = null,    @I_vUSERDEF1 char(21) = null,    @I_vUSERDEF2 char(21) = null,    @I_vUSRDEF03 char(21) = null,    @I_vUSRDEF04 char(21) = null,    @I_vUSRDEF05 char(21) = null,    @I_vPart_Price numeric(19,5) = null,   @I_vPart_Cost numeric(19,5) = null,   @I_vLabor_Price numeric(19,5) = null,   @I_vLabor_Cost numeric(19,5) = null,   @I_vExpense_Price numeric(19,5) = null,   @I_vExpense_Cost numeric(19,5) = null,   @I_vTravel_Price numeric(19,5) = null,   @I_vTravel_Cost numeric(19,5) = null,   @I_vCURNCYID char(15) = '',    @I_vUpdateIfExists tinyint = 1,    @I_vRequesterTrx smallint = 0,    @I_vUSRDEFND1 char(50) = '',    @I_vUSRDEFND2 char(50) = '',      @I_vUSRDEFND3 char(50) = '',    @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output,    @oErrString varchar(255) output     with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @O_TODAY datetime,  @O_DUMMYDT datetime,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState int,  @O_iNOTEINDX numeric(19,5),  @iStatus int,  @iError int,  @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @CMPANYID smallint,  @iValueExists smallint,  @iValid smallint,  @AuditDesc char(31),  @UserID char(15),  @AuditLNITMSEQ int,  @Line_Seq_Exists smallint,  @FRMSTAT char(3),  @O_ITEMNMBR char(31),  @OFFID char(11),  @RTV_Type char(11),  @RTV_Return_Status char(3),  @RTV_Shipping_Status char(3),  @RTV_Received_Status char(3),  @RTV_Closed_Status char(3),  @SVC_Ready_To_Ship_Status char(3),  @SVC_Partial_Shipped_Stat char(3),  @SVC_Partial_Received_Sta char(3),  @RTVLOCNCODE char(11),  @Location_Code_Vendor char(11),  @SVC_PO_Validation smallint,  @RETSTATUS char(3),  @USERETPRICELVL tinyint,  @RETPRICELVL char(11),  @iCURRNIDX int,  @iMCCurrDecPlaces int,  @iITMTRKOP smallint,  @iITEMTYPE smallint,  @iUOMSCHDL char(10),  @iSELNGUOM char(10),  @iCurrDecPlaces smallint,  @iQtyDecPlaces smallint,  @iSTNDCOST numeric(19,5),  @iCURRCOST numeric(19,5),  @O_vITMSHNAM char(15),  @O_vITMGEDSC char(10),  @O_vITMCLSCD char(10),  @O_vITEMSHWT bigint,  @ITMDEFPRCLEVEL char(15),  @HOLD smallint,  @INACTIVE int,  @NAME char(31),  @PYMTRMID char(20),  @VADCDSFR char(10),  @CURNCYID char(15),  @RATETPID char(15),  @O_vADDRESS1 char(60),  @O_vADDRESS2 char(60),  @O_vADDRESS3 char(60),  @O_vCOUNTRY char(60),  @O_vCITY char(35),  @O_vSTATE char(40),  @O_vZIPCODE char(10),  @O_vVNDCNTCT char(60),  @O_vPHONE1 char(22),  @PRICELVL char(10),  @O_vPRICELVL char(10),  @iRTNITMTRKOP smallint,  @iRTNITEMTYPE smallint,  @O_vRTNUOMSCHDL char(10),  @O_vRTNSELNGUOM char(10),  @iRTNCurrDecPlaces smallint,  @iRTNQtyDecPlaces smallint,  @iRTNSTNDCOST numeric(19,5),  @iRTNCURRCOST numeric(19,5),  @O_vRTNITMCLSCD char(10),  @O_vRTNITMDEFPRCLEVEL char(15),  @O_vDECPLQTY int,  @O_vOriginating_Part_Price numeric(19,5),  @O_vOriginating_Part_Cost numeric(19,5),  @O_vOriginating_Labor_Price numeric(19,5),  @O_vOriginating_Labor_Cost numeric(19,5),  @O_vOriginating_ExpensePrice numeric(19,5),  @O_vOriginating_Expense_Cost numeric(19,5),  @O_vOriginating_Travel_Price numeric(19,5),  @O_vOriginating_Travel_Cost numeric(19,5),  @iTotalCost numeric(19,5),  @iOrigTotalCost numeric(19,5),  @iTotalPrice numeric(19,5),  @iOrigTotalPrice numeric(19,5),  @FUNLCURR char(15),  @O_vEXGTBLID char(15),  @O_vDECPLACS int,  @O_vRATECALC int,  @O_vVIEWMODE int,  @O_vISMCTRX tinyint,  @O_vDENXRATE numeric(19,5),  @O_vMCTRXSTT int,  @ISMCTRX int,  @O_vQTYSHPPD numeric(19,5),  @O_vQTY_To_Receive numeric(19,5),  @O_vQTYRECVD numeric(19,5),  @O_vQTYCANCE numeric(19,5),  @O_vPONMBRSTR char(17),  @O_vPOLNSEQ numeric(19,5),  @O_vPOPRCTNM char(17),  @O_vRCPTLNNM int,  @O_vTransfer_Reference char(31),  @O_vTRANSLINESEQ int,  @O_vVCHNUMWK char(17),  @O_vVoucher_Number_Invoice char(17),  @O_vVoucher_Number_Reimburse char(17),  @iCalcPart_Price numeric(19,5),  @iCalcLabor_Price numeric(19,5),  @iCalcTravel_Price numeric(19,5),  @iCalcExpense_Price numeric(19,5),  @O_vRTV_Status smallint,  @SLSRATETPID char(15),  @FINRATETPID char(15),  @PURRATETPID char(15),  @VENDORID char(15),  @O_vXCHGRATE numeric(19,5),  @O_vRATETPID char(15),  @O_vEXPNDATE datetime,  @O_vEXCHDATE datetime,  @O_vEXGTBDSC char(30),  @O_vEXTBLSRC char(50),  @O_vRATEEXPR smallint,  @O_vDYSTINCR smallint,  @O_vRATEVARC numeric(19,5),  @O_vTRXDTDEF smallint,  @O_vRTCLCMTD smallint,  @O_vPRVDSLMT smallint,  @O_vDATELMTS smallint,  @O_vTIME1 datetime,  @iAvailQty numeric(19,5),  @O_vRTV_Return_Status char(3),  @O_vCALLNBR char(11),  @O_vEQPLINE int,  @O_vLINITMTYP char(3),  @O_vLNITMSEQ int,  @RTV_Routing smallint,  @iSerialCount int,  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint  select  @O_iErrorState = 0,  @O_TODAY = convert(char(11), convert(datetime, getdate()), 101),  @O_DUMMYDT = convert(char(11), convert(datetime, '1900-01-01'), 101),  @NOTEINDX = 0.0,  @iGetNextNoteIdxErrState = 0,  @O_iNOTEINDX = 0.0,  @iStatus = 0,  @iError = 0,  @iCustomState =  0,  @O_oErrorState = 0,  @iCustomErrString = '',  @oErrString = '',  @CMPANYID = 0,  @FRMSTAT = '',  @O_ITEMNMBR = '',  @OFFID = '',  @iValueExists = 0,  @AuditDesc = 'RTV Line Add/Update',  @UserID = 'eConnect',  @AuditLNITMSEQ = 0,  @Line_Seq_Exists = 0,  @RTV_Type = '',  @RTV_Return_Status = '',  @RTV_Shipping_Status = '',  @RTV_Received_Status = '',  @RTV_Closed_Status = '',  @SVC_Ready_To_Ship_Status = '',  @SVC_Partial_Shipped_Stat = '',  @SVC_Partial_Received_Sta = '',  @RTVLOCNCODE = '',  @Location_Code_Vendor = '',  @SVC_PO_Validation = 1,  @RETSTATUS = '',  @USERETPRICELVL = 0,  @RETPRICELVL = '',  @iCURRNIDX = 0,  @iMCCurrDecPlaces = 0,  @iITMTRKOP = 1,  @iITEMTYPE = 1,  @iUOMSCHDL = '',  @iSELNGUOM = '',  @iCurrDecPlaces = 0,  @iQtyDecPlaces = 0,  @iSTNDCOST = 0,  @iCURRCOST = 0,  @O_vITMSHNAM = '',  @O_vITMGEDSC = '',  @O_vITMCLSCD = '',  @O_vITEMSHWT = 0,  @ITMDEFPRCLEVEL = '',  @HOLD = 0,  @INACTIVE = 1,  @NAME = '',  @PYMTRMID = '',  @VADCDSFR = '',  @CURNCYID = '',  @RATETPID = '',  @O_vADDRESS1 = '',  @O_vADDRESS2 = '',  @O_vADDRESS3 = '',  @O_vCOUNTRY = '',  @O_vCITY = '',  @O_vSTATE = '',  @O_vZIPCODE = '',  @O_vVNDCNTCT = '',  @O_vPHONE1 = '',  @PRICELVL = '',  @iRTNITMTRKOP = 0,  @iRTNITEMTYPE = 0,  @O_vRTNUOMSCHDL = '',  @O_vRTNSELNGUOM = '',  @iRTNCurrDecPlaces = 0,  @iRTNQtyDecPlaces = 0,  @iRTNSTNDCOST = 0,  @iRTNCURRCOST = 0,  @O_vRTNITMCLSCD = '',  @O_vRTNITMDEFPRCLEVEL = '',  @O_vDECPLQTY = 0,  @O_vOriginating_Part_Price = 0,  @O_vOriginating_Part_Cost = 0,  @O_vOriginating_Labor_Price = 0,  @O_vOriginating_Labor_Cost = 0,  @O_vOriginating_ExpensePrice = 0,  @O_vOriginating_Expense_Cost = 0,  @O_vOriginating_Travel_Price = 0,  @O_vOriginating_Travel_Cost = 0,  @iTotalCost = 0,  @iOrigTotalCost = 0,  @iTotalPrice = 0,  @iOrigTotalPrice = 0,  @FUNLCURR = '',  @O_vRATECALC = 1,  @O_vMCTRXSTT = 0,  @O_vDECPLACS = 0,  @O_vVIEWMODE = 3,  @O_vDENXRATE = 0,  @O_vEXGTBLID = '',  @ISMCTRX = 0,  @O_vQTYSHPPD = 0,  @O_vQTY_To_Receive = 0,  @O_vQTYRECVD = 0,  @O_vQTYCANCE = 0,  @O_vPONMBRSTR = '',  @O_vPOLNSEQ = 0,  @O_vPOPRCTNM = '',  @O_vRCPTLNNM = 0,  @O_vTransfer_Reference = '',  @O_vTRANSLINESEQ = 0,  @O_vVCHNUMWK = '',  @O_vVoucher_Number_Invoice = '',  @O_vVoucher_Number_Reimburse = '',  @iCalcPart_Price = 0,  @iCalcLabor_Price = 0,  @iCalcTravel_Price = 0,  @iCalcExpense_Price = 0,  @O_vRTV_Status = 0,  @SLSRATETPID = '',  @FINRATETPID = '',  @PURRATETPID = '',  @VENDORID = '',  @O_vRATEEXPR = -1,  @O_vDYSTINCR = -1,  @O_vRATEVARC = 0,  @O_vTRXDTDEF = -1,  @O_vRTCLCMTD = -1,  @O_vPRVDSLMT = 0,  @O_vDATELMTS = 0,  @iAvailQty = 0,  @O_vRTV_Return_Status = '',  @O_vCALLNBR = '',  @O_vEQPLINE = 0,  @O_vLINITMTYP = '',  @O_vLNITMSEQ = 0,  @RTV_Routing = 0,  @iSerialCount = 0,  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0  exec @iStatus = taFSRTVLinePre  @I_vRTV_Number output,  @I_vRTV_Line output,  @I_vRTV_Type output,  @I_vVRMA_Document_ID output,  @I_vRETDOCID output,  @I_vLNSEQNBR output,  @I_vSVC_Process_SEQ_Number output,  @I_vDSCRIPTN output,  @I_vREFRENCE output,  @I_vReference2 output,  @I_vITEMNMBR output,  @I_vITEMDESC output,  @I_vQUANTITY output,  @I_vUOFM output,  @I_vVENDORID output,  @I_vADRSCODE output,  @I_vShip_Address_Name output,  @I_vShip_Address_1 output,  @I_vShip_Address_2 output,  @I_vShip_Address_3 output,  @I_vShip_City output,  @I_vShip_State output,  @I_vZIPCODE output,  @I_vShip_Country output,  @I_vVNDITNUM output,  @I_vReturn_Item_Number output,  @I_vOFFID output,  @I_vLOCCODEB output,  @I_vLOCNCODE output,  @I_vENTDTE output,  @I_vENTTME output,  @I_vPRMDATE output,  @I_vPromised_Time output,  @I_vShipped_Date output,  @I_vShipped_Time output,  @I_vReceiptdate output,  @I_vReceipt_Time output,  @I_vCOMPDTE output,  @I_vCOMPTME output,  @I_vBill_of_Lading_Out output,  @I_vShipping_Method_Out output,  @I_vBill_of_Lading output,  @I_vSHIPMTHD output,  @I_vTracking_Number output,  @I_vNOTETXT output,  @I_vCUSTOWN output,  @I_vUSERDEF1 output,  @I_vUSERDEF2 output,  @I_vUSRDEF03 output,  @I_vUSRDEF04 output,  @I_vUSRDEF05 output,  @I_vPart_Price output,  @I_vPart_Cost output,  @I_vLabor_Price output,  @I_vLabor_Cost output,  @I_vExpense_Price output,  @I_vExpense_Cost output,  @I_vTravel_Price output,  @I_vTravel_Cost output,  @I_vCURNCYID output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  set @iError = @@error if @iStatus = 0 and @iError <> 0 begin  set @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  set @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10170     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vRTV_Number is NULL or  @I_vVENDORID is NULL or  @I_vADRSCODE is NULL or   @I_vITEMNMBR is NULL or  @I_vLOCCODEB is NULL or  @I_vLOCNCODE is NULL or  @I_vCURNCYID is NULL or  @I_vUOFM is NULL) begin  set @O_iErrorState = 10171   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vRTV_Number = '' or  @I_vVENDORID = '' or  @I_vADRSCODE = '' ) begin  set @O_iErrorState = 10172    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vADRSCODE = UPPER(@I_vADRSCODE),  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vRTV_Number = UPPER(@I_vRTV_Number)  if @I_vRTV_Line < 0 or  @I_vLNSEQNBR < 0 or  @O_vRCPTLNNM < 0 or  @I_vCUSTOWN < 0 begin  set @O_iErrorState = 10173    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_vEQPLINE < 0 or  @O_vLNITMSEQ < 0 or  @O_vTRANSLINESEQ < 0 begin  set @O_iErrorState = 10174     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vQUANTITY < 0  begin  set @O_iErrorState = 10175    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vPart_Price < 0 or   @I_vPart_Cost < 0 or   @I_vLabor_Price < 0 or   @I_vLabor_Cost < 0 or   @I_vExpense_Price < 0 or   @I_vExpense_Cost < 0 or   @I_vTravel_Price < 0 or   @I_vTravel_Cost < 0 begin  set @O_iErrorState = 10176    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC35601 (nolock) where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line) begin  select @Line_Seq_Exists=1   set @O_iErrorState = 10177    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if exists(select 1 from SVC05601 (nolock) where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line) begin  select @Line_Seq_Exists=1 end  if (@Line_Seq_Exists = 0) begin  if (@I_vITEMNMBR = '' or  @I_vLOCNCODE = '')  begin  set @O_iErrorState = 10178    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if exists(select 1 from SVC05635 (nolock) where RTV_Number = @I_vRTV_Number and (MKDTOPST = 1 or POSTED = 1)) begin  set @O_iErrorState = 10181    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC05625 (nolock) where RTV_Number = @I_vRTV_Number and (MKDTOPST = 1 or POSTED = 1)) begin  set @O_iErrorState = 10180    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC05615 (nolock) where RTV_Number = @I_vRTV_Number and (MKDTOPST = 1 or POSTED = 1)) begin  set @O_iErrorState = 10179    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@Line_Seq_Exists = 1) begin  select  @I_vRTV_Type = case   when @I_vRTV_Type is null then isnull(RTV_Type, '')  else @I_vRTV_Type  end,  @O_vRTV_Status = case  when @O_vRTV_Status = 0 then isnull(RTV_Status, 1)  else @O_vRTV_Status  end,  @O_vRTV_Return_Status = case  when @O_vRTV_Return_Status = '' then isnull(RTV_Return_Status, '')  else @O_vRTV_Return_Status  end,  @I_vVRMA_Document_ID = case  when @I_vVRMA_Document_ID is null then isnull(VRMA_Document_ID, '')  else @I_vVRMA_Document_ID  end,  @I_vRETDOCID = case  when @I_vRETDOCID is null then isnull(RETDOCID, '')  else @I_vRETDOCID  end,  @I_vLNSEQNBR = case  when @I_vLNSEQNBR is null then isnull(LNSEQNBR, 0)  else @I_vLNSEQNBR  end,  @I_vSVC_Process_SEQ_Number = case  when @I_vSVC_Process_SEQ_Number is null then isnull(SVC_Process_SEQ_Number, 0)  else @I_vSVC_Process_SEQ_Number  end,  @I_vDSCRIPTN = case  when @I_vDSCRIPTN is null then isnull(DSCRIPTN, '')  else @I_vDSCRIPTN  end,  @I_vREFRENCE = case  when @I_vREFRENCE is null then isnull(REFRENCE, '')  else @I_vREFRENCE  end,  @I_vReference2 = case  when @I_vReference2 is null then isnull(Reference2, '')  else @I_vReference2  end,  @O_ITEMNMBR = isnull(ITEMNMBR, ''),  @I_vITEMDESC = case  when @I_vITEMDESC is null then isnull(ITEMDESC, '')  else @I_vITEMDESC  end,  @iITMTRKOP = isnull(ITMTRKOP, 1),  @O_vDECPLQTY = isnull(DECPLQTY, 1),  @I_vQUANTITY = case  when @I_vQUANTITY is null then isnull(QUANTITY, 0)  else @I_vQUANTITY  end,  @O_vQTYSHPPD = isnull(QTYSHPPD, 0),  @O_vQTY_To_Receive = isnull(QTY_To_Receive, 0),  @O_vQTYRECVD = isnull(QTYRECVD, 0),  @O_vQTYCANCE = isnull(QTYCANCE, 0),  @I_vUOFM = case  when @I_vUOFM is null then isnull(UOFM, '')  else @I_vUOFM  end,  @VENDORID = isnull(VENDORID, ''),  @I_vADRSCODE = case  when @I_vADRSCODE is null then isnull(ADRSCODE, '')  else @I_vADRSCODE  end,  @I_vShip_Address_Name = case  when @I_vShip_Address_Name is null then isnull(Ship_Address_Name, '')  else @I_vShip_Address_Name  end,  @I_vShip_Address_1 = case  when @I_vShip_Address_1 is null then isnull(Ship_Address_1, '')  else @I_vShip_Address_1  end,  @I_vShip_Address_2 = case  when @I_vShip_Address_2 is null then isnull(Ship_Address_2, '')  else @I_vShip_Address_2  end,  @I_vShip_Address_3 = case  when @I_vShip_Address_3 is null then isnull(Ship_Address_3, '')  else @I_vShip_Address_3  end,  @I_vShip_City = case  when @I_vShip_City is null then isnull(Ship_City, '')  else @I_vShip_City  end,  @I_vShip_State = case  when @I_vShip_State is null then isnull(Ship_State, '')  else @I_vShip_State  end,  @I_vZIPCODE = case  when @I_vZIPCODE is null then isnull(ZIPCODE, '')  else @I_vZIPCODE  end,  @I_vShip_Country = case  when @I_vShip_Country is null then isnull(Ship_Country, '')  else @I_vShip_Country  end,  @I_vVNDITNUM = case  when @I_vVNDITNUM is null then isnull(VNDITNUM, '')  else @I_vVNDITNUM  end,  @I_vReturn_Item_Number = case  when @I_vReturn_Item_Number is null and (@O_vRTV_Status = 0 or @O_vRTV_Status = 1) then isnull(Return_Item_Number, @I_vITEMNMBR)  when @I_vReturn_Item_Number is null then isnull(Return_Item_Number, '')  else @I_vReturn_Item_Number  end,  @I_vOFFID = case  when @I_vOFFID is null then isnull(OFFID, '')  else @I_vOFFID  end,  @I_vLOCCODEB = case  when @I_vLOCCODEB is null then isnull(LOCCODEB, '')  else @I_vLOCCODEB  end,  @I_vLOCNCODE = case  when @I_vLOCNCODE is null then isnull(LOCNCODE, '')  else @I_vLOCNCODE  end,  @I_vENTDTE = case  when @I_vENTDTE is null then isnull(ENTDTE, @O_TODAY)  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then isnull(ENTTME, convert(varchar(12), getdate(), 108))  else @I_vENTTME  end,  @I_vPRMDATE = case  when @I_vPRMDATE is null then isnull(PRMDATE, @O_DUMMYDT)  else @I_vPRMDATE  end,  @I_vPromised_Time = case  when @I_vPromised_Time is null then isnull(Promised_Time, @O_DUMMYDT)  else @I_vPromised_Time  end,  @I_vShipped_Date = case  when @I_vShipped_Date is null then isnull(Shipped_Date, @O_DUMMYDT)  else @I_vShipped_Date  end,  @I_vShipped_Time = case  when @I_vShipped_Time is null then isnull(Shipped_Time, @O_DUMMYDT)  else @I_vShipped_Time  end,  @I_vReceiptdate = case  when @I_vReceiptdate is null then isnull(receiptdate, @O_DUMMYDT)  else @I_vReceiptdate  end,  @I_vReceipt_Time = case  when @I_vReceipt_Time is null then isnull(Receipt_Time, @O_DUMMYDT)  else @I_vReceipt_Time  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then isnull(COMPDTE, @O_DUMMYDT)  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then isnull(COMPTME, @O_DUMMYDT)  else @I_vCOMPTME  end,  @O_vPONMBRSTR = case  when @O_vPONMBRSTR is null then isnull(PONMBRSTR, '')  else @O_vPONMBRSTR  end,  @O_vPOLNSEQ = case  when @O_vPOLNSEQ is null then isnull(POLNSEQ, 0)  else @O_vPOLNSEQ  end,  @O_vPOPRCTNM = case  when @O_vPOPRCTNM is null then isnull(POPRCTNM, '')  else @O_vPOPRCTNM  end,  @O_vRCPTLNNM = case  when @O_vRCPTLNNM is null then isnull(RCPTLNNM, 0)  else @O_vRCPTLNNM  end,  @O_vTransfer_Reference = case  when @O_vTransfer_Reference is null then isnull(Transfer_Reference, '')  else @O_vTransfer_Reference  end,  @O_vTRANSLINESEQ = case  when @O_vTRANSLINESEQ is null then isnull(TRANSLINESEQ, 0)  else @O_vTRANSLINESEQ  end,  @O_vCALLNBR = isnull(CALLNBR, ''),  @O_vEQPLINE = isnull(EQPLINE, 0),  @O_vLINITMTYP = isnull(LINITMTYP, ''),  @O_vLNITMSEQ = isnull(LNITMSEQ, 0),  @I_vBill_of_Lading_Out = case  when @I_vBill_of_Lading_Out is null then isnull(Bill_of_Lading_Out, '')  else @I_vBill_of_Lading_Out  end,  @I_vShipping_Method_Out = case  when @I_vShipping_Method_Out is null then isnull(Shipping_Method_Out, '')  else @I_vShipping_Method_Out  end,  @I_vBill_of_Lading = case  when @I_vBill_of_Lading is null then isnull(Bill_of_Lading, '')  else @I_vBill_of_Lading  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null then isnull(SHIPMTHD, '')  else @I_vSHIPMTHD  end,  @I_vTracking_Number = case  when @I_vTracking_Number is null then isnull(Tracking_Number, '')  else @I_vTracking_Number  end,  @O_vVCHNUMWK = case  when @O_vVCHNUMWK is null then isnull(VCHNUMWK, '')  else @O_vVCHNUMWK  end,  @O_vVoucher_Number_Invoice = case  when @O_vVoucher_Number_Invoice is null then isnull(Voucher_Number_Invoice, '')  else @O_vVoucher_Number_Invoice  end,  @O_vVoucher_Number_Reimburse = case  when @O_vVoucher_Number_Reimburse is null then isnull(Voucher_Number_Reimburse, '')  else @O_vVoucher_Number_Reimburse  end,   @I_vCUSTOWN = case  when @I_vCUSTOWN is null then isnull(CUSTOWN, 0)  else @I_vCUSTOWN  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then isnull(USERDEF1, '')  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then isnull(USERDEF2, '')  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case   when @I_vUSRDEF03 is null then isnull(USRDEF03, '')  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then isnull(USRDEF04, '')  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then isnull(USRDEF05, '')  else @I_vUSRDEF05  end,  @I_vPart_Price = case  when @I_vPart_Price is null then isnull(Part_Price, null)  else @I_vPart_Price  end,  @I_vPart_Cost = case  when @I_vPart_Cost is null then isnull(Part_Cost, 0)  else @I_vPart_Cost  end,  @I_vLabor_Price = case  when @I_vLabor_Price is null then isnull(Labor_Price, null)  else @I_vLabor_Price  end,  @I_vLabor_Cost = case  when @I_vLabor_Cost is null then isnull(Labor_Cost, 0)  else @I_vLabor_Cost  end,  @I_vExpense_Price = case  when @I_vExpense_Price is null then isnull(Expense_Price, null)  else @I_vExpense_Price  end,  @I_vExpense_Cost = case  when @I_vExpense_Cost is null then isnull(Expense_Cost, 0)  else @I_vExpense_Cost  end,  @I_vTravel_Price = case  when @I_vTravel_Price is null then isnull(Travel_Price, null)  else @I_vTravel_Price  end,  @I_vTravel_Cost = case  when @I_vTravel_Cost is null then isnull(Travel_Cost, 0)  else @I_vTravel_Cost  end,  @O_vOriginating_Part_Price = isnull(Originating_Part_Price, 0),  @O_vOriginating_Part_Cost = isnull(Originating_Part_Cost, 0),  @O_vOriginating_Labor_Price = isnull(Originating_Labor_Price, 0),  @O_vOriginating_Labor_Cost = isnull(Originating_Labor_Cost, 0),  @O_vOriginating_ExpensePrice = isnull(Originating_ExpensePrice, 0),  @O_vOriginating_Expense_Cost = isnull(Originating_Expense_Cost, 0),  @O_vOriginating_Travel_Price = isnull(Originating_Travel_Price, 0),  @O_vOriginating_Travel_Cost = isnull(Originating_Travel_Cost, 0),  @O_iNOTEINDX = isnull(NOTEINDX, 0)  from SVC05601 (nolock)   where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line end  if (@VENDORID <> '') and (@I_vVENDORID <> @VENDORID) begin  set @O_iErrorState = 10238     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @RTV_Type= isnull(RTV_Type, ''),  @Location_Code_Vendor = isnull(Location_Code_Vendor, ''),  @SVC_PO_Validation = isnull(SVC_PO_Validation, 1),  @RETSTATUS = isnull(RETSTATUS, ''),  @USERETPRICELVL = isnull(SVC_Use_Return_Price_Lev, 0),  @RETPRICELVL = isnull(SVC_Return_Price_Level, '')  from SVC00998 (nolock)  select @PRICELVL =   case  when @PRICELVL = ''  then isnull(PRCLEVEL,'')   else @PRICELVL  end  from RM40101 (nolock)  select @PRICELVL =  case   when @PRICELVL = ''  then isnull(@ITMDEFPRCLEVEL, '')  else @PRICELVL  end  select  @I_vRTV_Line = case  when @I_vRTV_Line is null then 0  else @I_vRTV_Line  end,  @I_vRTV_Type = case   when @I_vRTV_Type is null then @RTV_Type  else @I_vRTV_Type  end,  @O_vRTV_Status = 1,  @O_vRTV_Return_Status = case  when @O_vRTV_Return_Status <> '' then @O_vRTV_Return_Status  else ''  end,  @I_vVRMA_Document_ID = case  when @I_vVRMA_Document_ID is null then ''  else @I_vVRMA_Document_ID  end,  @I_vRETDOCID = case  when @I_vRETDOCID is null then ''  else @I_vRETDOCID  end,  @I_vLNSEQNBR = case  when @I_vLNSEQNBR is null then 0  else @I_vLNSEQNBR  end,  @I_vSVC_Process_SEQ_Number = case  when @I_vSVC_Process_SEQ_Number is null then 0  else @I_vSVC_Process_SEQ_Number  end,  @I_vDSCRIPTN = case  when @I_vDSCRIPTN is null then ''  else @I_vDSCRIPTN  end,  @I_vREFRENCE = case  when @I_vREFRENCE is null then ''  else @I_vREFRENCE  end,  @I_vReference2 = case  when @I_vReference2 is null then ''  else @I_vReference2  end,  @I_vITEMDESC = case  when @I_vITEMDESC is null then ''  else @I_vITEMDESC  end,  @I_vQUANTITY = case  when @I_vQUANTITY is null then 0  else @I_vQUANTITY  end,  @O_vQTYSHPPD = case  when @O_vQTYSHPPD is null then 0  else @O_vQTYSHPPD  end,  @O_vQTY_To_Receive = case  when @O_vQTY_To_Receive is null then 0  else @O_vQTY_To_Receive  end,  @O_vQTYRECVD = case  when @O_vQTYRECVD is null then 0  else @O_vQTYRECVD  end,  @O_vQTYCANCE = case  when @O_vQTYCANCE is null then 0  else @O_vQTYCANCE  end,  @I_vUOFM = case  when @I_vUOFM is null then ''  else @I_vUOFM  end,  @I_vVENDORID = case  when @I_vVENDORID is null then ''  else @I_vVENDORID  end,  @I_vADRSCODE = case  when @I_vADRSCODE is null then ''  else @I_vADRSCODE  end,  @I_vShip_Address_Name = case  when @I_vShip_Address_Name is null then ''  else @I_vShip_Address_Name  end,  @I_vShip_Address_1 = case  when @I_vShip_Address_1 is null then ''  else @I_vShip_Address_1  end,  @I_vShip_Address_2 = case  when @I_vShip_Address_2 is null then ''  else @I_vShip_Address_2  end,  @I_vShip_Address_3 = case  when @I_vShip_Address_3 is null then ''  else @I_vShip_Address_3  end,  @I_vShip_City = case  when @I_vShip_City is null then ''  else @I_vShip_City  end,  @I_vShip_State = case  when @I_vShip_State is null then ''  else @I_vShip_State  end,  @I_vZIPCODE = case  when @I_vZIPCODE is null then ''  else @I_vZIPCODE  end,  @I_vShip_Country = case  when @I_vShip_Country is null then ''  else @I_vShip_Country  end,  @I_vVNDITNUM = case  when @I_vVNDITNUM is null then ''  else @I_vVNDITNUM  end,  @I_vReturn_Item_Number = case  when @I_vReturn_Item_Number is null and (@O_vRTV_Status = 0 or @O_vRTV_Status = 1) then @I_vITEMNMBR  when @I_vReturn_Item_Number is null then ''  else @I_vReturn_Item_Number  end,  @I_vOFFID = case  when @I_vOFFID is null then ''  else @I_vOFFID  end,  @I_vLOCCODEB = case  when @I_vLOCCODEB is null then ''  else @I_vLOCCODEB  end,  @I_vLOCNCODE = case  when @I_vLOCNCODE is null then ''  else @I_vLOCNCODE  end,  @I_vENTDTE = case  when @I_vENTDTE is null then @O_TODAY  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then convert(varchar(12), getdate(), 108)  else @I_vENTTME  end,  @I_vPRMDATE = case  when @I_vPRMDATE is null then @O_DUMMYDT  else @I_vPRMDATE  end,  @I_vPromised_Time = case  when @I_vPromised_Time is null then @O_DUMMYDT  else @I_vPromised_Time  end,  @I_vShipped_Date = case  when @I_vShipped_Date is null then @O_DUMMYDT  else @I_vShipped_Date  end,  @I_vShipped_Time = case  when @I_vShipped_Time is null then @O_DUMMYDT  else @I_vShipped_Time  end,  @I_vReceiptdate = case  when @I_vReceiptdate is null then @O_DUMMYDT  else @I_vReceiptdate  end,  @I_vReceipt_Time = case  when @I_vReceipt_Time is null then @O_DUMMYDT  else @I_vReceipt_Time  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then @O_DUMMYDT  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then @O_DUMMYDT  else @I_vCOMPTME  end,  @O_vPONMBRSTR = case  when @O_vPONMBRSTR is null then ''  else @O_vPONMBRSTR  end,  @O_vPOLNSEQ = case  when @O_vPOLNSEQ is null then 0  else @O_vPOLNSEQ  end,  @O_vPOPRCTNM = case  when @O_vPOPRCTNM is null then ''  else @O_vPOPRCTNM  end,  @O_vRCPTLNNM = case  when @O_vRCPTLNNM is null then 0  else @O_vRCPTLNNM  end,  @O_vTransfer_Reference = case  when @O_vTransfer_Reference is null then ''  else @O_vTransfer_Reference  end,  @O_vTRANSLINESEQ = case  when @O_vTRANSLINESEQ is null then 0  else @O_vTRANSLINESEQ  end,  @O_vCALLNBR = case  when @O_vCALLNBR <> '' then @O_vCALLNBR  else ''  end,  @O_vEQPLINE = case  when @O_vEQPLINE <> 0 then @O_vEQPLINE  else 0  end,  @O_vLINITMTYP = case  when @O_vLINITMTYP <> '' then @O_vLINITMTYP  else ''  end,  @O_vLNITMSEQ = case  when @O_vLNITMSEQ <> 0 then @O_vLNITMSEQ  else 0  end,  @I_vBill_of_Lading_Out = case  when @I_vBill_of_Lading_Out is null then ''  else @I_vBill_of_Lading_Out  end,  @I_vShipping_Method_Out = case  when @I_vShipping_Method_Out is null then ''  else @I_vShipping_Method_Out  end,  @I_vBill_of_Lading = case  when @I_vBill_of_Lading is null then ''  else @I_vBill_of_Lading  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null then ''  else @I_vSHIPMTHD  end,  @I_vTracking_Number = case  when @I_vTracking_Number is null then ''  else @I_vTracking_Number  end,  @O_vVCHNUMWK = case  when @O_vVCHNUMWK is null then ''  else @O_vVCHNUMWK  end,  @O_vVoucher_Number_Invoice = case  when @O_vVoucher_Number_Invoice is null then ''  else @O_vVoucher_Number_Invoice  end,  @O_vVoucher_Number_Reimburse = case  when @O_vVoucher_Number_Reimburse is null then ''  else @O_vVoucher_Number_Reimburse  end,   @I_vCUSTOWN = case  when @I_vCUSTOWN is null then 0  else @I_vCUSTOWN  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then ''  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then ''  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case   when @I_vUSRDEF03 is null then ''  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then ''  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then ''  else @I_vUSRDEF05  end,  @I_vPart_Cost = case  when @I_vPart_Cost is null then 0  else @I_vPart_Cost  end,  @I_vLabor_Cost = case  when @I_vLabor_Cost is null then 0  else @I_vLabor_Cost  end,  @I_vExpense_Cost = case  when @I_vExpense_Cost is null then 0  else @I_vExpense_Cost  end,  @I_vTravel_Cost = case  when @I_vTravel_Cost is null then 0  else @I_vTravel_Cost  end,   @O_vXCHGRATE = case   when @O_vXCHGRATE is null then 0  else @O_vXCHGRATE  end,  @O_vRATETPID = case  when @O_vRATETPID is null then ''  else @O_vRATETPID  end,  @O_vEXPNDATE = case   when @O_vEXPNDATE is null then @O_DUMMYDT  else @O_vEXPNDATE  end,   @O_vEXCHDATE = case  when @O_vEXCHDATE is null then @O_DUMMYDT  else @O_vEXCHDATE  end,  @O_vEXGTBDSC = case  when @O_vEXGTBDSC is null then ''  else @O_vEXGTBDSC  end,  @O_vEXTBLSRC = case  when @O_vEXTBLSRC is null then ''  else @O_vEXTBLSRC  end,  @O_vTIME1 = case  when @O_vTIME1 is null then @O_DUMMYDT  else @O_vTIME1  end  if (@I_vRTV_Type = '')  set @I_vRTV_Type = @RTV_Type  if (@I_vRTV_Type <> '')  begin  set @iValueExists = 0  select @iValueExists = 1, @RTV_Return_Status = isnull(RTV_Return_Status, ''),  @I_vDSCRIPTN = case   when @I_vDSCRIPTN is null or @I_vDSCRIPTN = '' then DSCRIPTN  else @I_vDSCRIPTN  end,  @RTV_Shipping_Status = isnull(RTV_Shipping_Status,''),  @RTV_Received_Status = isnull(RTV_Received_Status, ''),  @RTV_Closed_Status = isnull(RTV_Closed_Status, ''),  @RTVLOCNCODE = isnull(LOCNCODE, ''),  @SVC_Ready_To_Ship_Status = isnull(SVC_Ready_To_Ship_Status, ''),  @SVC_Partial_Shipped_Stat = isnull(SVC_Partial_Shipped_Stat, ''),  @SVC_Partial_Received_Sta = isnull(SVC_Partial_Received_Sta, ''),  @RTV_Routing = isnull(RTV_Routing, 0)  from SVC05003 where RTV_Type = @I_vRTV_Type  if @iValueExists <> 1  begin  set @O_iErrorState = 10217    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vVENDORID <> '') and (@I_vITEMNMBR <> '') and (@I_vRTV_Type <> '') begin  exec @iStatus = SVC_RMA_Get_Vendor_Reimburse  @I_vVENDORID,  @I_vITEMNMBR,  @I_vRTV_Type,  @O_vCALLNBR,  @iCalcPart_Price output,  @iCalcLabor_Price output,  @iCalcTravel_Price output,  @iCalcExpense_Price output  set @iError = @@error  if (@iStatus <> 0) or (@iError <> 0)  begin  set @O_iErrorState = 10182    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @I_vPart_Price = case  when @I_vPart_Price is null then @iCalcPart_Price  else @I_vPart_Price  end,  @I_vLabor_Price = case  when @I_vLabor_Price is null then @iCalcLabor_Price  else @I_vLabor_Price  end,  @I_vExpense_Price = case  when @I_vExpense_Price is null then @iCalcExpense_Price  else @I_vExpense_Price  end,  @I_vTravel_Price = case  when @I_vTravel_Price is null then @iCalcTravel_Price  else @I_vTravel_Price  end  if @Line_Seq_Exists = 1 and (@O_vQTYSHPPD > 0 and @I_vQUANTITY > 0) begin  set @O_iErrorState = 10183    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @Line_Seq_Exists = 1 and (@O_vQTYRECVD > 0 and @I_vQUANTITY > 0) begin  set @O_iErrorState = 10184    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_vRTV_Status < 1 or @O_vRTV_Status > 6 begin  set @O_iErrorState = 10185     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vCUSTOWN < 0 or @I_vCUSTOWN > 1 begin  set @O_iErrorState = 10186     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1 begin  set @O_iErrorState = 10187     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vRTV_Line > 0 and ((@Line_Seq_Exists = 1) and (@O_ITEMNMBR <> '') and (@O_ITEMNMBR <> @I_vITEMNMBR)) begin  set @Line_Seq_Exists = 0  set @I_vRTV_Line = 0 end  if (@I_vRTV_Line = 0) or (@I_vRTV_Line = null) begin  select @I_vRTV_Line = (isnull(max(RTV_Line),0) + 100) from SVC05601 (nolock) where RTV_Number = @I_vRTV_Number  set @Line_Seq_Exists = 0 end  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)  begin  set @O_iErrorState = 10188    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vITEMNMBR <> '') begin  set @iValueExists = 0  select @iValueExists = 1,   @I_vITEMDESC = case   when @I_vITEMDESC is null or @I_vITEMDESC = '' then isnull(ITEMDESC,'')  else @I_vITEMDESC  end,  @iITMTRKOP = ITMTRKOP, @iITEMTYPE = ITEMTYPE, @iUOMSCHDL = UOMSCHDL, @iSELNGUOM = SELNGUOM,   @iCurrDecPlaces = (isnull(DECPLCUR, 1)-1), @iQtyDecPlaces = (isnull(DECPLQTY,1)-1),  @iSTNDCOST = isnull(STNDCOST, 0.0), @iCURRCOST = isnull(CURRCOST, 0.0),   @O_vITMSHNAM = isnull(ITMSHNAM,''), @O_vITMGEDSC = isnull(ITMGEDSC, ''), @O_vITMCLSCD = isnull(ITMCLSCD, ''),  @O_vITEMSHWT = isnull(ITEMSHWT, ''),  @ITMDEFPRCLEVEL = isnull(PRCLEVEL, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@I_vITEMNMBR)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10189     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   set @O_vDECPLQTY = @iQtyDecPlaces + 1 end  if @I_vVENDORID <> '' begin  set @iValueExists = 0  select  @iValueExists=1,  @HOLD=isnull(HOLD,0),  @INACTIVE=isnull(VENDSTTS,1),  @PYMTRMID=isnull(PYMTRMID,''),  @VADCDSFR=isnull(VADCDSFR,''),  @CURNCYID=isnull(CURNCYID,''),  @RATETPID=isnull(RATETPID,''),  @NAME=isnull(VENDNAME,''),  @I_vShipping_Method_Out = case  when @I_vShipping_Method_Out is null or @I_vShipping_Method_Out = '' then SHIPMTHD  else @I_vShipping_Method_Out  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null or @I_vSHIPMTHD = '' then SHIPMTHD  else @I_vSHIPMTHD  end  from PM00200 (nolock) where VENDORID=@I_vVENDORID   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10190    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCURNCYID =   case  when @I_vCURNCYID = '' then @CURNCYID   else  @I_vCURNCYID  end,  @O_vRATETPID =   case  when @O_vRATETPID = '' then @RATETPID   else  @O_vRATETPID  end end  if (@I_vADRSCODE <> '') begin  set @iValueExists = 0  select  @iValueExists = 1,  @O_vADDRESS1=isnull(ADDRESS1,''),  @O_vADDRESS2=isnull(ADDRESS2,''),  @O_vADDRESS3=isnull(ADDRESS3,''),  @O_vCOUNTRY=isnull(COUNTRY,''),  @O_vCITY=isnull(CITY,''),  @O_vSTATE=isnull(STATE,''),  @O_vZIPCODE=isnull(ZIPCODE,''),  @O_vVNDCNTCT=isnull(VNDCNTCT,0),  @O_vPHONE1=isnull(PHNUMBR1,''),  @I_vShipping_Method_Out = case  when @I_vShipping_Method_Out is null or @I_vShipping_Method_Out = '' then SHIPMTHD  else @I_vShipping_Method_Out  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null or @I_vSHIPMTHD = '' then SHIPMTHD  else @I_vSHIPMTHD  end  from PM00300 (nolock) where VENDORID=@I_vVENDORID and ADRSCODE = @I_vADRSCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10193     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vShip_Address_1 = '' and @I_vShip_City = '')  begin  select @I_vShip_Address_Name = @NAME,  @I_vShip_Address_1 = @O_vADDRESS1,  @I_vShip_Address_2 = @O_vADDRESS2,  @I_vShip_Address_3 = @O_vADDRESS3,  @I_vShip_City = @O_vCITY,  @I_vShip_State = @O_vSTATE,  @I_vZIPCODE = @O_vZIPCODE,  @I_vShip_Country = @O_vCOUNTRY  end end  if (@I_vVNDITNUM <> '') begin  if not exists(select 1 from IV00103 where ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and VNDITNUM = @I_vVNDITNUM)  begin  set @O_iErrorState = 10194    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  set @iValueExists = 0  select @iValueExists = 1, @I_vVNDITNUM = isnull(VNDITNUM,'') from IV00103 where ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10195     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vShipping_Method_Out <> '') begin  if not exists(select 1 from SY03000 where SHIPMTHD = @I_vShipping_Method_Out)  begin  set @O_iErrorState = 10196     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vSHIPMTHD <> '') begin  if not exists(select 1 from SY03000 where SHIPMTHD = @I_vSHIPMTHD)  begin  set @O_iErrorState = 10197     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vCURNCYID <> '') begin  set @iValueExists= 0  select @iValueExists = 1, @iCURRNIDX = isnull(CURRNIDX,0), @iMCCurrDecPlaces = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if (@iValueExists = 0) or (@iCURRNIDX = 0)  begin  set @O_iErrorState = 10198     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  set @iCurrDecPlaces = @iMCCurrDecPlaces end  select @FUNLCURR = FUNLCURR, @SLSRATETPID = isnull(DEFSLSTP, ''), @FINRATETPID = isnull(DEFFINTP, ''), @PURRATETPID = isnull(DEFPURTP, '')  from MC40000 (nolock)  select @O_vRATETPID = case  when @O_vRATETPID = '' and @PURRATETPID <> '' then @PURRATETPID  when @O_vRATETPID = '' and @FINRATETPID <> '' then  @FINRATETPID  when @O_vRATETPID = '' then @RATETPID  else @O_vRATETPID  end  if (@O_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @O_vRATETPID))  begin  set @O_iErrorState = 10201     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @O_vDECPLACS = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@I_vCURNCYID = '') and (@iCURRNIDX = 0) begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @iCURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end else if (@I_vCURNCYID = '') and (@iCURRNIDX <> 0) begin  select @I_vCURNCYID = isnull(CURNCYID,'') from DYNAMICS..MC40200 (nolock) where CURRNIDX = @iCURRNIDX end else begin  select @iCURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if (@I_vCURNCYID <> '') begin  set @iValueExists= 0  select @iValueExists = 1, @iCURRNIDX = isnull(CURRNIDX,0), @iMCCurrDecPlaces = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if (@iValueExists = 0) or (@iCURRNIDX = 0)  begin  set @O_iErrorState = 10341     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  set @iCurrDecPlaces = @iMCCurrDecPlaces end  if (@iCURRNIDX <> 0) begin  set @iValueExists= 0  select @iValueExists = 1, @I_vCURNCYID = isnull(CURNCYID,0), @iMCCurrDecPlaces = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURRNIDX = @iCURRNIDX  if (@iValueExists = 0)  begin  set @O_iErrorState = 10199     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  set @iCurrDecPlaces = @iMCCurrDecPlaces end  if  (@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR) begin  select @ISMCTRX = 1,@O_vVIEWMODE=4   if (@O_vEXCHDATE is null or @O_vEXCHDATE = '' or @O_vEXCHDATE = @O_DUMMYDT)  begin  select top 1 @O_vEXCHDATE = EXCHDATE from DYNAMICS..MC00100 (nolock)  where EXGTBLID = (select top 1 EXGTBLID from MC40301 where CURNCYID = @I_vCURNCYID AND RATETPID = @O_vRATETPID)  AND EXCHDATE <= @I_vENTDTE and EXPNDATE >= @I_vENTDTE  order by EXCHDATE + TIME1 desc  end   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vVENDORID,  @I_vDOCDATE  = @I_vENTDTE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @O_vEXCHDATE,  @I_vEXGTBDSC = @O_vEXGTBDSC,  @I_vEXTBLSRC = @O_vEXTBLSRC,  @I_vRATEEXPR = @O_vRATEEXPR output,  @I_vDYSTINCR = @O_vDYSTINCR output,  @I_vRATEVARC = @O_vRATEVARC,  @I_vTRXDTDEF = @O_vTRXDTDEF,  @I_vPRVDSLMT = @O_vPRVDSLMT,  @I_vDATELMTS = @O_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @O_vTIME1 output,  @I_vXCHGRATE = @O_vXCHGRATE output,  @I_vEXPNDATE = @O_vEXPNDATE output,  @I_vRATETPID = @O_vRATETPID output,  @I_vRTCLCMTD = @O_vRTCLCMTD output,  @I_vEXGTBLID = @O_vEXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   set @O_iErrorState = 10200   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  else begin  select @ISMCTRX = 0, @O_vRATEEXPR = 0, @O_vDYSTINCR = 0, @O_vRTCLCMTD = 0, @O_vVIEWMODE = 3 end   if (@I_vITEMNMBR <> '') and (@I_vLOCCODEB <> '') begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCCODEB)  begin  set @O_iErrorState = 10202    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  select @iValueExists = 0, @iAvailQty = 0  select @iValueExists = 1, @iAvailQty = (isnull(QTYONHND,0) - isnull(ATYALLOC,0) - isnull(QTYCOMTD,0)) from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCCODEB  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10203    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@iAvailQty <= 0)  begin  set @O_iErrorState = 10239    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vITEMNMBR <> '') and (@I_vLOCNCODE <> '') begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10204    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  select @iValueExists = 0, @iAvailQty = 0  select @iValueExists = 1, @iAvailQty = (isnull(QTYONHND,0) - isnull(ATYALLOC,0) - isnull(QTYCOMTD,0)) from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10205    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUOFM = '') begin  if (@iSELNGUOM is NULL or @iSELNGUOM = '')  begin  SELECT @I_vUOFM = isnull(rtrim(BASEUOFM),'') from IV40201 where UOMSCHDL = @iUOMSCHDL  if (@@ERROR <> 0 or @I_vUOFM = '')  begin  return (@O_iErrorState)  end  end  else  set @I_vUOFM = rtrim(@iSELNGUOM) end  if (@I_vITEMNMBR <> '' and @I_vUOFM <> '') begin  exec @iStatus = SVC_Obj_ValidateUOM  @I_vITEMNMBR,  @I_vUOFM,  @iValid output  select @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  if (@iStatus = 0)  set @iStatus = @iError   set @O_iErrorState = 10206    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if ((@iValid is NULL) or (@iValid <> 1))  begin  set @O_iErrorState = 10207    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  select @iSerialCount = sum(SERLTQTY) from SVC05602   where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and ITEMNMBR = @I_vITEMNMBR  if ((@iITMTRKOP = 2 or @iITMTRKOP = 3) and (@iSerialCount > 0 and @I_vQUANTITY < @iSerialCount)) begin  set @O_iErrorState = 8976     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vReturn_Item_Number <> '' and (@I_vLOCNCODE = '' or @I_vUOFM  = '')) begin  set @O_iErrorState = 10208     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vReturn_Item_Number <> '') and (@I_vReturn_Item_Number <> @I_vITEMNMBR) begin  set @iValueExists = 0  select @iValueExists = 1, @iRTNITMTRKOP = ITMTRKOP, @iRTNITEMTYPE = ITEMTYPE, @O_vRTNUOMSCHDL = UOMSCHDL, @O_vRTNSELNGUOM = SELNGUOM,   @iRTNCurrDecPlaces = (isnull(DECPLCUR, 1)-1), @iRTNQtyDecPlaces = (isnull(DECPLQTY,1)-1),  @iRTNSTNDCOST = isnull(STNDCOST, 0.0), @iRTNCURRCOST = isnull(CURRCOST, 0.0),   @O_vRTNITMCLSCD = isnull(ITMCLSCD, ''),  @O_vRTNITMDEFPRCLEVEL = isnull(PRCLEVEL, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@I_vReturn_Item_Number)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10209     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vReturn_Item_Number <> '') and (@I_vLOCNCODE <> '') begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10210    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  if not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vReturn_Item_Number and LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10211    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vReturn_Item_Number <> '' and @I_vUOFM  <> '') begin  exec @iStatus = SVC_Obj_ValidateUOM  @I_vReturn_Item_Number,  @I_vUOFM ,  @iValid output  select @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  if (@iStatus = 0)  set @iStatus = @iError   set @O_iErrorState = 10212    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if ((@iValid is NULL) or (@iValid <> 1))  begin  set @O_iErrorState = 10213    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output   if (@O_vRTNSELNGUOM is NULL or @O_vRTNSELNGUOM = '')  begin  SELECT @I_vUOFM  = isnull(rtrim(BASEUOFM),'') from IV40201 where UOMSCHDL = @O_vRTNUOMSCHDL  if (@@ERROR <> 0 or @I_vUOFM = '')  begin  return (@O_iErrorState)  end  end  else  set @I_vUOFM  = rtrim(@O_vRTNSELNGUOM)  end  end  if (@I_vReturn_Item_Number = '') or (@I_vLOCNCODE = '') or (@I_vUOFM  = '') begin  select @I_vReturn_Item_Number = '' end  if (@O_vCALLNBR <> '') and (@O_vLNITMSEQ > 0) begin  if not exists(select 1 from SVC00203 where (SRVRECTYPE = 2 or SRVRECTYPE = 3) and CALLNBR = @O_vCALLNBR and EQPLINE = @O_vEQPLINE and LNITMSEQ = @O_vLNITMSEQ)  begin  if not exists(select 1 from SVC30203 where SRVRECTYPE = 3 and CALLNBR = @O_vCALLNBR and EQPLINE = @O_vEQPLINE and LNITMSEQ = @O_vLNITMSEQ)  begin  set @O_iErrorState = 10214     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  select  @O_vCALLNBR = '',  @O_vLNITMSEQ = 0,  @O_vEQPLINE = 0 end  if (@O_vPRICELVL = '')  set @O_vPRICELVL = @PRICELVL  if (@O_vPRICELVL <> '') and not exists(select 1 from IV40800 where PRCLEVEL = @O_vPRICELVL) begin  set @O_iErrorState = 10216    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_vRTV_Return_Status = '') begin  set @O_vRTV_Return_Status = case  when @O_vRTV_Status = 2 then @SVC_Ready_To_Ship_Status  when @O_vRTV_Status = 3 then @RTV_Shipping_Status  when @O_vRTV_Status = 4 then @SVC_Partial_Received_Sta  when @O_vRTV_Status = 5 then @RTV_Received_Status  when @O_vRTV_Status = 6 then @RTV_Closed_Status  else @RTV_Return_Status  end end  if (@O_vRTV_Return_Status <> '') begin  if not exists(select 1 from SVC05002 where RTV_Return_Status = @O_vRTV_Return_Status)  begin  set @O_iErrorState = 10218     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vENTDTE is NULL)  set @I_vENTDTE = convert(varchar(12),getdate())  if (@I_vENTTME is NULL) or (@I_vENTTME = '')  select @I_vENTTME = getdate()- convert(char(12),getdate(),12) else  set @I_vENTTME = convert(varchar(10), @I_vENTTME, 108)  if (@I_vENTTME <> '') and not (datepart(day,@I_vENTTME) = 1 and datepart(month,@I_vENTTME) = 1 and datepart(year,@I_vENTTME) = 1900) begin  set @O_iErrorState = 10219    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vENTDTE <> '') and not (datepart(hour,@I_vENTDTE) = 0 and datepart(minute,@I_vENTDTE) = 0 and datepart(second,@I_vENTDTE) = 0   and datepart(millisecond,@I_vENTDTE) = 0) begin  set @O_iErrorState = 10220    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vPRMDATE is NULL)  set @I_vPRMDATE = @O_DUMMYDT  if (@I_vPromised_Time = '')  set @I_vPromised_Time = @O_DUMMYDT else  set @I_vPromised_Time = convert(varchar(10), @I_vPromised_Time, 108)  if (@I_vPromised_Time <> '')   if not (datepart(day,@I_vPromised_Time) = 1 and datepart(month,@I_vPromised_Time) = 1 and datepart(year,@I_vPromised_Time) = 1900)  begin  set @O_iErrorState = 10221    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vPRMDATE <> '')  begin  if not (datepart(hour,@I_vPRMDATE) = 0 and datepart(minute,@I_vPRMDATE) = 0 and datepart(second,@I_vPRMDATE) = 0   and datepart(millisecond,@I_vPRMDATE) = 0)  begin  set @O_iErrorState = 10222    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vShipped_Date is NULL)  set @I_vShipped_Date = ''  if (@I_vShipped_Time is NULL)  set @I_vShipped_Time = '' else  set @I_vShipped_Time = convert(varchar(10), @I_vShipped_Time, 108)  if (@I_vShipped_Date <> '')  begin  if (@I_vShipped_Time <> '')   if not (datepart(day,@I_vShipped_Time) = 1 and datepart(month,@I_vShipped_Time) = 1 and datepart(year,@I_vReceipt_Time) = 1900)  begin  set @O_iErrorState = 10223    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vShipped_Date) = 0 and datepart(minute,@I_vShipped_Date) = 0 and datepart(second,@I_vShipped_Date) = 0   and datepart(millisecond,@I_vShipped_Date) = 0)  begin  set @O_iErrorState = 10224    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @RTV_Return_Status = @RTV_Shipping_Status end  if (@I_vReceiptdate is NULL)  set @I_vReceiptdate = ''  if (@I_vReceipt_Time is NULL)  set @I_vReceipt_Time = '' else  set @I_vReceipt_Time = convert(varchar(10), @I_vReceipt_Time, 108)  if (@I_vReceiptdate <> '')  begin  if (@I_vReceipt_Time <> '')   if not (datepart(day,@I_vReceipt_Time) = 1 and datepart(month,@I_vReceipt_Time) = 1 and datepart(year,@I_vReceipt_Time) = 1900)  begin  set @O_iErrorState = 10225    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vReceiptdate) = 0 and datepart(minute,@I_vReceiptdate) = 0 and datepart(second,@I_vReceiptdate) = 0   and datepart(millisecond,@I_vReceiptdate) = 0)  begin  set @O_iErrorState = 10226    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @RTV_Return_Status = @RTV_Received_Status end  if (@I_vCOMPDTE is NULL)  set @I_vCOMPDTE = ''  if (@I_vCOMPTME is NULL)  set @I_vCOMPTME = '' else  set @I_vCOMPTME = convert(varchar(10), @I_vCOMPTME, 108)  if (@I_vCOMPDTE <> '') begin  if (@I_vCOMPTME <> '')   if not (datepart(day,@I_vCOMPTME) = 1 and datepart(month,@I_vCOMPTME) = 1 and datepart(year,@I_vCOMPTME) = 1900)  begin  set @O_iErrorState = 10227    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vCOMPDTE) = 0 and datepart(minute,@I_vCOMPDTE) = 0 and datepart(second,@I_vCOMPDTE) = 0   and datepart(millisecond,@I_vCOMPDTE) = 0)  begin  set @O_iErrorState = 10228     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @RTV_Return_Status = @RTV_Closed_Status end  if (@I_vRETDOCID <> '' and @I_vLNSEQNBR > 0) begin  set @iValueExists = 0  select @iValueExists = 1, @OFFID = isnull(OFFID,'') from SVC05200 where RETDOCID = @I_vRETDOCID and LNSEQNBR = @I_vLNSEQNBR  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10229    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vOFFID <> '') begin  if (not exists(select 1 from SVC00902 (nolock) where OFFID = @I_vOFFID))  begin  set @O_iErrorState = 10230    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @O_vOriginating_Part_Price = @I_vPart_Price,      @O_vOriginating_Part_Cost = @I_vPart_Cost,      @O_vOriginating_Labor_Price = @I_vLabor_Price,       @O_vOriginating_Labor_Cost = @I_vLabor_Cost,      @O_vOriginating_ExpensePrice = @I_vExpense_Price,     @O_vOriginating_Expense_Cost = @I_vExpense_Cost,     @O_vOriginating_Travel_Price = @I_vTravel_Price,     @O_vOriginating_Travel_Cost = @I_vTravel_Cost      if ( @ISMCTRX = 1) begin  if @O_vXCHGRATE = 0   begin  set @O_iErrorState = 10231     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @O_vRTCLCMTD = 0     begin  select   @I_vPart_Price = round(@O_vOriginating_Part_Price * @O_vXCHGRATE, @O_vDECPLACS),  @I_vPart_Cost = round(@O_vOriginating_Part_Cost * @O_vXCHGRATE, @O_vDECPLACS),  @I_vLabor_Price = round(@O_vOriginating_Labor_Price * @O_vXCHGRATE, @O_vDECPLACS),  @I_vLabor_Cost = round(@O_vOriginating_Labor_Cost * @O_vXCHGRATE, @O_vDECPLACS),  @I_vExpense_Price = round(@O_vOriginating_ExpensePrice * @O_vXCHGRATE, @O_vDECPLACS),  @I_vExpense_Cost = round(@O_vOriginating_Expense_Cost * @O_vXCHGRATE, @O_vDECPLACS),  @I_vTravel_Price = round(@O_vOriginating_Travel_Price * @O_vXCHGRATE, @O_vDECPLACS),  @I_vTravel_Cost = round(@O_vOriginating_Travel_Cost * @O_vXCHGRATE, @O_vDECPLACS)  end  else if @O_vRTCLCMTD = 1    begin  select   @I_vPart_Price = round(@O_vOriginating_Part_Price / @O_vXCHGRATE, @O_vDECPLACS),  @I_vPart_Cost = round(@O_vOriginating_Part_Cost / @O_vXCHGRATE, @O_vDECPLACS),  @I_vLabor_Price = round(@O_vOriginating_Labor_Price / @O_vXCHGRATE, @O_vDECPLACS),  @I_vLabor_Cost = round(@O_vOriginating_Labor_Cost / @O_vXCHGRATE, @O_vDECPLACS),  @I_vExpense_Price = round(@O_vOriginating_ExpensePrice / @O_vXCHGRATE, @O_vDECPLACS),  @I_vExpense_Cost = round(@O_vOriginating_Expense_Cost / @O_vXCHGRATE, @O_vDECPLACS),  @I_vTravel_Price = round(@O_vOriginating_Travel_Price / @O_vXCHGRATE, @O_vDECPLACS),  @I_vTravel_Cost = round(@O_vOriginating_Travel_Cost / @O_vXCHGRATE, @O_vDECPLACS)  end end  select @AuditLNITMSEQ = count(RTV_Number) + 1 from SVC05620 (nolock) where RTV_Number = @I_vRTV_Number  if (@Line_Seq_Exists=0) or (isnull(@O_iNOTEINDX,0) = 0) begin  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,   @oErrString,  @oErrString output,  @O_oErrorState output  end  set @O_iErrorState = 10232    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @NOTEINDX = isnull(@O_iNOTEINDX, 0) end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@Line_Seq_Exists=0) begin     insert into SVC05601( RTV_Number,  RTV_Line,  RTV_Type,  RTV_Status,  RTV_Return_Status,  VRMA_Document_ID,  RETDOCID,  LNSEQNBR,  SVC_Process_SEQ_Number,  DSCRIPTN,  REFRENCE,  Reference2,  ITEMNMBR,  ITEMDESC,  ITMTRKOP,  DECPLQTY,  QUANTITY,  QTYSHPPD,  QTY_To_Receive,  QTYRECVD,  QTYCANCE,  UOFM,  VENDORID,  ADRSCODE,  Ship_Address_Name,  Ship_Address_1,  Ship_Address_2,  Ship_Address_3,  Ship_City,  Ship_State,  ZIPCODE,  Ship_Country,  VNDITNUM,  Return_Item_Number,  OFFID,  LOCCODEB,  LOCNCODE,  ENTDTE,  ENTTME,  PRMDATE,  Promised_Time,  Shipped_Date,  Shipped_Time,  receiptdate,  Receipt_Time,  COMPDTE,  COMPTME,  PONMBRSTR,  POLNSEQ,  POPRCTNM,  RCPTLNNM,  Transfer_Reference,  TRANSLINESEQ,  CALLNBR,  EQPLINE,  LINITMTYP,  LNITMSEQ,  Bill_of_Lading_Out,  Shipping_Method_Out,  Bill_of_Lading,  SHIPMTHD,  Tracking_Number,  NOTEINDX,  VCHNUMWK,  Voucher_Number_Invoice,  Voucher_Number_Reimburse,  CUSTOWN,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  Part_Price,  Part_Cost,  Labor_Price,  Labor_Cost,  Expense_Price,  Expense_Cost,  Travel_Price,  Travel_Cost,  Originating_Part_Price,  Originating_Part_Cost,  Originating_Labor_Price,  Originating_Labor_Cost,  Originating_ExpensePrice,  Originating_Expense_Cost,  Originating_Travel_Price,  Originating_Travel_Cost)   select  @I_vRTV_Number,  @I_vRTV_Line,  @I_vRTV_Type,  @O_vRTV_Status,  @O_vRTV_Return_Status,  @I_vVRMA_Document_ID,  @I_vRETDOCID,  @I_vLNSEQNBR,  @I_vSVC_Process_SEQ_Number,  @I_vDSCRIPTN,  @I_vREFRENCE,  @I_vReference2,  @I_vITEMNMBR,  @I_vITEMDESC,  @iITMTRKOP,  @O_vDECPLQTY,  @I_vQUANTITY,  @O_vQTYSHPPD,  @O_vQTY_To_Receive,  @O_vQTYRECVD,  @O_vQTYCANCE,  @I_vUOFM,  @I_vVENDORID,  @I_vADRSCODE,  @I_vShip_Address_Name,  @I_vShip_Address_1,  @I_vShip_Address_2,  @I_vShip_Address_3,  @I_vShip_City,  @I_vShip_State,  @I_vZIPCODE,  @I_vShip_Country,  @I_vVNDITNUM,  @I_vReturn_Item_Number,  @I_vOFFID,  @I_vLOCCODEB,  @I_vLOCNCODE,  @I_vENTDTE,  @I_vENTTME,  @I_vPRMDATE,  @I_vPromised_Time,  @I_vShipped_Date,  @I_vShipped_Time,  @I_vReceiptdate,  @I_vReceipt_Time,  @I_vCOMPDTE,  @I_vCOMPTME,  @O_vPONMBRSTR,  @O_vPOLNSEQ,  @O_vPOPRCTNM,  @O_vRCPTLNNM,  @O_vTransfer_Reference,  @O_vTRANSLINESEQ,  @O_vCALLNBR,  @O_vEQPLINE,  @O_vLINITMTYP,  @O_vLNITMSEQ,  @I_vBill_of_Lading_Out,  @I_vShipping_Method_Out,  @I_vBill_of_Lading,  @I_vSHIPMTHD,  @I_vTracking_Number,  @NOTEINDX,  @O_vVCHNUMWK,  @O_vVoucher_Number_Invoice,  @O_vVoucher_Number_Reimburse,  @I_vCUSTOWN,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vPart_Price,  @I_vPart_Cost,  @I_vLabor_Price,  @I_vLabor_Cost,  @I_vExpense_Price,  @I_vExpense_Cost,  @I_vTravel_Price,  @I_vTravel_Cost,  @O_vOriginating_Part_Price,  @O_vOriginating_Part_Cost,  @O_vOriginating_Labor_Price,  @O_vOriginating_Labor_Cost,  @O_vOriginating_ExpensePrice,  @O_vOriginating_Expense_Cost,  @O_vOriginating_Travel_Price,  @O_vOriginating_Travel_Cost   if @@error <> 0  begin  set @O_iErrorState = 10233    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC05620  (RTV_Number,  RTV_Line,  LNSEQNBR,  SVCFRMSTAT,  SVCTOSTAT,  DSCRPTION,  USERID,  CREATDDT,  CREATETIME)  select  @I_vRTV_Number,  @I_vRTV_Line,  @AuditLNITMSEQ,  @FRMSTAT,  @O_vRTV_Return_Status,  @AuditDesc,  @UserID,  convert(varchar(12),getdate(),101),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  set @O_iErrorState = 10332    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin     if (@I_vUpdateIfExists > 0)  begin  update SVC05601 set RTV_Type = @I_vRTV_Type,  RTV_Status = @O_vRTV_Status,  RTV_Return_Status = @O_vRTV_Return_Status,  VRMA_Document_ID = @I_vVRMA_Document_ID,  RETDOCID = @I_vRETDOCID,  LNSEQNBR = @I_vLNSEQNBR,  SVC_Process_SEQ_Number = @I_vSVC_Process_SEQ_Number,  DSCRIPTN = @I_vDSCRIPTN,  REFRENCE = @I_vREFRENCE,  Reference2 = @I_vReference2,  ITEMNMBR = @I_vITEMNMBR,  ITEMDESC = @I_vITEMDESC,  ITMTRKOP = @iITMTRKOP,  DECPLQTY = @O_vDECPLQTY,  QUANTITY = @I_vQUANTITY,  QTYSHPPD = @O_vQTYSHPPD,  QTY_To_Receive = @O_vQTY_To_Receive,  QTYRECVD = @O_vQTYRECVD,  QTYCANCE = @O_vQTYCANCE,  UOFM = @I_vUOFM,  VENDORID = @I_vVENDORID,  ADRSCODE = @I_vADRSCODE,  Ship_Address_Name = @I_vShip_Address_Name,  Ship_Address_1 = @I_vShip_Address_1,  Ship_Address_2 = @I_vShip_Address_2,  Ship_Address_3 = @I_vShip_Address_3,  Ship_City = @I_vShip_City,  Ship_State = @I_vShip_State,  ZIPCODE = @I_vZIPCODE,  Ship_Country = @I_vShip_Country,  VNDITNUM = @I_vVNDITNUM,  Return_Item_Number = @I_vReturn_Item_Number,  OFFID = @I_vOFFID,  LOCCODEB = @I_vLOCCODEB,  LOCNCODE = @I_vLOCNCODE,  ENTDTE = @I_vENTDTE,  ENTTME = @I_vENTTME,  PRMDATE = @I_vPRMDATE,  Promised_Time = @I_vPromised_Time,  Shipped_Date = @I_vShipped_Date,  Shipped_Time = @I_vShipped_Time,  receiptdate = @I_vReceiptdate,  Receipt_Time = @I_vReceipt_Time,  COMPDTE = @I_vCOMPDTE,  COMPTME = @I_vCOMPTME,  PONMBRSTR = @O_vPONMBRSTR,  POLNSEQ = @O_vPOLNSEQ,  POPRCTNM = @O_vPOPRCTNM,  RCPTLNNM = @O_vRCPTLNNM,  Transfer_Reference = @O_vTransfer_Reference,  TRANSLINESEQ = @O_vTRANSLINESEQ,  CALLNBR = @O_vCALLNBR,  EQPLINE = @O_vEQPLINE,  LINITMTYP = @O_vLINITMTYP,  LNITMSEQ = @O_vLNITMSEQ,  Bill_of_Lading_Out = @I_vBill_of_Lading_Out,  Shipping_Method_Out = @I_vShipping_Method_Out,  Bill_of_Lading = @I_vBill_of_Lading,  SHIPMTHD = @I_vSHIPMTHD,  Tracking_Number = @I_vTracking_Number,  NOTEINDX = @NOTEINDX,  VCHNUMWK = @O_vVCHNUMWK,  Voucher_Number_Invoice = @O_vVoucher_Number_Invoice,  Voucher_Number_Reimburse = @O_vVoucher_Number_Reimburse,  CUSTOWN = @I_vCUSTOWN,  USERDEF1 = @I_vUSERDEF1,  USERDEF2 = @I_vUSERDEF2,  USRDEF03 = @I_vUSRDEF03,  USRDEF04 = @I_vUSRDEF04,  USRDEF05 = @I_vUSRDEF05,  Part_Price = @I_vPart_Price,  Part_Cost = @I_vPart_Cost,  Labor_Price = @I_vLabor_Price,  Labor_Cost = @I_vLabor_Cost,  Expense_Price = @I_vExpense_Price,  Expense_Cost = @I_vExpense_Cost,  Travel_Price = @I_vTravel_Price,  Travel_Cost = @I_vTravel_Cost,  Originating_Part_Price = @O_vOriginating_Part_Price,  Originating_Part_Cost = @O_vOriginating_Part_Cost,  Originating_Labor_Price = @O_vOriginating_Labor_Price,  Originating_Labor_Cost = @O_vOriginating_Labor_Cost,  Originating_ExpensePrice = @O_vOriginating_ExpensePrice,  Originating_Expense_Cost = @O_vOriginating_Expense_Cost,  Originating_Travel_Price = @O_vOriginating_Travel_Price,  Originating_Travel_Cost = @O_vOriginating_Travel_Cost   where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line  if (@@error <> 0)  begin  set @O_iErrorState = 10235    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC05620  (RTV_Number,  RTV_Line,  LNSEQNBR,  SVCFRMSTAT,  SVCTOSTAT,  DSCRPTION,  USERID,  CREATDDT,  CREATETIME)  select  @I_vRTV_Number,  @I_vRTV_Line,  @AuditLNITMSEQ,  @FRMSTAT,  @O_vRTV_Return_Status,  @AuditDesc,  @UserID,  convert(varchar(12),getdate()),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  set @O_iErrorState = 10234    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   end end  if (@I_vNOTETXT is NULL)  select @I_vNOTETXT = convert(varchar(2000),isnull(TXTFIELD,''))  from SY03900 where NOTEINDX = @NOTEINDX  if (@NOTEINDX > 0) begin  if exists(select 1 from SY03900 where NOTEINDX = @NOTEINDX)  update SY03900 set TXTFIELD = @I_vNOTETXT,   DATE1 = @O_TODAY,   TIME1 = convert(char(12), getdate(), 108)   where NOTEINDX = @NOTEINDX  else  insert into SY03900 (NOTEINDX,   DATE1,   TIME1,   TXTFIELD)   select @NOTEINDX,   @O_TODAY,   convert(char(12), getdate(), 108),   @I_vNOTETXT end  if (@I_vQUANTITY > 0) begin  set @iTotalCost = @I_vPart_Cost + @I_vLabor_Cost + @I_vExpense_Cost + @I_vTravel_Cost  set @iOrigTotalCost = @O_vOriginating_Part_Cost + @O_vOriginating_Labor_Cost + @O_vOriginating_Expense_Cost +  @O_vOriginating_Travel_Cost   set @iTotalPrice = @I_vPart_Price + @I_vLabor_Price + @I_vExpense_Price + @I_vTravel_Price  set @iOrigTotalPrice = @O_vOriginating_Part_Price + @O_vOriginating_Labor_Price + @O_vOriginating_ExpensePrice +  @O_vOriginating_Travel_Price   exec @iStatus = SVC_Set_RTV_Dist   @I_vRTV_Number,  @I_vRTV_Line,  '',     '',       @iTotalPrice,     @iOrigTotalPrice,    @iTotalCost,  @iOrigTotalCost   select @iError = @@error  if @iStatus = 0 and @iError <> 0  set @iStatus = @iError   if (@iStatus <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10236    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@iITMTRKOP = 2 or @iITMTRKOP = 3) begin  update SVC05602 set SVC_Return_Serial_ID = case   when @RTV_Routing = 3 and Return_Item_Number <> '' and SVC_Return_Serial_ID = '' then SVC_Serial_ID  else SVC_Return_Serial_ID  end,  Return_Serial_Number = case  when @RTV_Routing = 3 and Return_Item_Number <> '' and Return_Serial_Number = '' then SERLNMBR  else Return_Serial_Number  end,  SVC_Original_Serial = case  when @I_vRETDOCID <> '' then 1  else SVC_Original_Serial  end  where RTV_Number = @I_vRTV_Number and RTV_Line = @I_vRTV_Line and Shipped = 0  if (@@error <> 0)  begin  set @O_iErrorState = 10326    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taFSRTVLinePost  @I_vRTV_Number,  @I_vRTV_Line,  @I_vRTV_Type,  @I_vVRMA_Document_ID,  @I_vRETDOCID,  @I_vLNSEQNBR,  @I_vSVC_Process_SEQ_Number,  @I_vDSCRIPTN,  @I_vREFRENCE,  @I_vReference2,  @I_vITEMNMBR,  @I_vITEMDESC,  @I_vQUANTITY,  @I_vUOFM,  @I_vVENDORID,  @I_vADRSCODE,  @I_vShip_Address_Name,  @I_vShip_Address_1,  @I_vShip_Address_2,  @I_vShip_Address_3,  @I_vShip_City,  @I_vShip_State,  @I_vZIPCODE,  @I_vShip_Country,  @I_vVNDITNUM,  @I_vReturn_Item_Number,  @I_vOFFID,  @I_vLOCCODEB,  @I_vLOCNCODE,  @I_vENTDTE,  @I_vENTTME,  @I_vPRMDATE,  @I_vPromised_Time,  @I_vShipped_Date,  @I_vShipped_Time,  @I_vReceiptdate,  @I_vReceipt_Time,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vBill_of_Lading_Out,  @I_vShipping_Method_Out,  @I_vBill_of_Lading,  @I_vSHIPMTHD,  @I_vTracking_Number,  @I_vNOTETXT,  @I_vCUSTOWN,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vPart_Price,  @I_vPart_Cost,  @I_vLabor_Price,  @I_vLabor_Cost,  @I_vExpense_Price,  @I_vExpense_Cost,  @I_vTravel_Price,  @I_vTravel_Cost,  @I_vCURNCYID,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10237    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taFSRTVLine] TO [DYNGRP]
GO

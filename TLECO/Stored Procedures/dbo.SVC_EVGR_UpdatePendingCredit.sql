SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_EVGR_UpdatePendingCredit]  @CONSTS                 smallint,  @CONTNBR                char(11),  @LNSEQNBR               numeric(19,5),  @CANCELDATE             datetime AS  declare @Cancel tinyint, @CoverageStart datetime, @CoverageEnd datetime, @BilledCoverageEnd datetime, @BilledCoverageStart datetime, @LINECOUNTER numeric(19,2), @DR numeric(19,5), @OrigDR numeric(19,5),  @TotalBilled numeric(19,2),@OrigTotalBilled numeric(19,2), @TotalCreditAmount numeric(19,2), @OrigTotalCreditAmount numeric(19,2), @Sequence int, @CoverageStartDate datetime, @TransactionDate datetime,@ErrorCondition integer,@UserID char(30), @NEXTBILLDATE datetime, @Total numeric(19,2),@OrigTotal numeric(19,2), @BILSTAT smallint declare @PriceType integer declare @SourceDocument varchar(51) declare @MinDate datetime,@MaxDate datetime  exec smGetMinDate @MinDate output  select @MaxDate = DATEADD(yy, 1000, @MinDate),  @UserID = SUSER_SNAME()  delete from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0 select @BilledCoverageEnd =  max(SVC_Coverage_End_Date), @BilledCoverageStart = min(SVC_Coverage_Start_Date),  @TotalBilled = sum(PSTDAMNT), @OrigTotalBilled = sum(ORIGPSTDAMNT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  if @BilledCoverageEnd > @CANCELDATE  Begin  select @LINECOUNTER = DATEDIFF(dd,@CANCELDATE,@BilledCoverageEnd)  select @DR = @TotalBilled / (datediff(dd, @BilledCoverageStart, @BilledCoverageEnd)+1),  @OrigDR = @OrigTotalBilled / (datediff(dd, @BilledCoverageStart, @BilledCoverageEnd)+1)  select @OrigTotalCreditAmount = @OrigDR * @LINECOUNTER, @TotalCreditAmount = @DR * @LINECOUNTER  select @Sequence = isnull(max(SVC_Invoice_SEQ_Number),0) + 1 from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @CoverageStartDate = DATEADD(day,1,@CANCELDATE)   insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @Sequence,  IsNull(@CANCELDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  0 ,  @CoverageStartDate,  IsNull(@BilledCoverageEnd,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),   0,  @MinDate,  0,  @TotalCreditAmount,  @DR,  0,  0,   0,  @OrigTotalCreditAmount,  0,0,'',0)  select @Total = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)) - sum(isnull(DSCDLRAM,0)),  @OrigTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) - sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE, Contract_Line_Status = 'P', BILSTAT = 4,  Amount_To_Invoice = (-1) * @TotalCreditAmount, Orig_Amount_To_Invoice = (-1) * @OrigTotalCreditAmount,   ORIGTOTAL = @OrigTotal, TOTAL = @Total  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Header @CONSTS, @CONTNBR  if  exists(select 1 from SVC00600 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and (BILCYC = 4 or (BILCYC = 3 and (svcFrequencyQty > 1 or Liabiltiy_Reduction = 1))))  Begin  exec SVC_RET_Cancel_Revenue_Recognition_Lines @CONSTS,@CONTNBR,@LNSEQNBR,@CANCELDATE,@UserID,@ErrorCondition OUTPUT  End   End else  Begin  update SVC00601 with (rowlock) set ENDDATE = @CANCELDATE, BILEND = @CANCELDATE, Contract_Line_Status = 'P', BILSTAT = 4  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_EVGR_Update_Contract_Line @CONSTS, @CONTNBR, @LNSEQNBR, 2  exec SVC_EVGR_Check_PendingCancel @CONSTS, @CONTNBR, @LNSEQNBR, '', @BILSTAT output  if @BILSTAT  = 2  update SVC00601 with (rowlock) set Contract_Line_Status = 'C', BILSTAT = 2  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  End  return   
GO
GRANT EXECUTE ON  [dbo].[SVC_EVGR_UpdatePendingCredit] TO [DYNGRP]
GO

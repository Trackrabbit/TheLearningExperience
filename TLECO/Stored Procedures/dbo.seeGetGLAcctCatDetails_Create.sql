SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[seeGetGLAcctCatDetails_Create] @iLanguageID int   as   set nocount on   declare @sqldropstring varchar(400),   @sqlstring1 varchar(8000),   @sqlstring2 varchar(8000),   @sqlstring3 varchar(8000),   @sqlstring4 varchar(8000),   @sqlstring5 varchar(8000),   @sqlstring6 varchar(8000),   @sqlstring7 varchar(8000),   @sqlstring8 varchar(8000),   @sqlstring9 varchar(8000),   @sqlstring10 varchar(8000),   @sqljoinstring varchar(8000),   @sqlaccessstring varchar(2000),   @tNumberSegments int,   @tSegment int,   @I_iDictID int,   @I_iLangID int,   @I_iMessageNumber int,   @I_iAliasMessageNumber int,   @I_iIntegerValue int,  @Account_Index varchar(255), @TRX_Date varchar(255)  select @I_iDictID = 1493 select @I_iMessageNumber = 24415 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Account_Index output   select @I_iDictID = 1493 select @I_iMessageNumber = 24447 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @TRX_Date output    select @sqldropstring =   'IF EXISTS (SELECT * FROM   sys.objects WHERE  object_id = OBJECT_ID(N''[dbo].[seeGetGLAcctCatDetails]'') AND type in ( N''P'', N''PC'' ))  ' +   '  DROP PROCEDURE [dbo].[seeGetGLAcctCatDetails]  '   select @sqlstring1 =   'create procedure seeGetGLAcctCatDetails ( '+   ' @StartDate datetime,  '+   '    @AcctCat   int ) '+   'AS  '+   ' BEGIN '+   '   DECLARE @FullPeriodStart datetime  '+   '      DECLARE @FullPeriodEnd datetime  '+   '      DECLARE @FullPeriodIDStart int  '+   '      DECLARE @FullPeriodIDEnd int  '+   '      DECLARE @CurrentYear int  '+   '      DECLARE @IsHist int  '+   '      DECLARE @TrxStartDate datetime  '+   '      DECLARE @TrxEndDate datetime  '+   '      DECLARE @DATEMAX datetime  '+   '      DECLARE @INVALIDPERIOD int  '+   '      DECLARE @FinalBalance Numeric(19, 5)  '+   '   SELECT @StartDate = dbo.GetDateStripTime(@StartDate)  '+   '      SET @DATEMAX = dbo.GetDefaultMaxDate()  '+   '      set @INVALIDPERIOD = -1  '+   '      SELECT @CurrentYear = YEAR1,  '+   '             @IsHist = HISTORYR  '+   '      FROM   SY40101  '+   '      WHERE  @StartDate between FSTFSCDY and LSTFSCDY  '+   '   SELECT @FullPeriodStart = ISNULL((SELECT TOP 1 PERIODDT  '+   '                                        FROM   SY40100  '+   '                                        WHERE  PERIODDT <= @StartDate  '+   '                                               AND PERDENDT >= @StartDate  '+   '                                               AND YEAR1 = @CurrentYear  '+   '                                               AND FORIGIN = 1  '+   '                                        ORDER  BY PERIODDT ASC), @DATEMAX)  '+   '      SELECT @FullPeriodIDStart = ISNULL((SELECT DISTINCT PERIODID  '+   '                                          FROM   SY40100  '+   '                                          WHERE  PERIODDT = @FullPeriodStart  '+   '                                                 AND YEAR1 = @CurrentYear  '+   '                                                 AND FORIGIN = 1),  '+   '                                  @INVALIDPERIOD)  '+   '      SELECT @FullPeriodEnd = ISNULL((SELECT TOP 1 PERDENDT  '+   '                                      FROM   SY40100  '+   '                                      WHERE  PERIODDT <= @StartDate  '+   '                                             AND PERDENDT >= @StartDate  '+   '                                             AND YEAR1 = @CurrentYear  '+   '                                             AND FORIGIN = 1  '+   '                                      ORDER  BY PERDENDT DESC), @DATEMAX)  '+   '      SELECT @FullPeriodIDEnd = ISNULL((SELECT DISTINCT PERIODID  '+   '                                        FROM   SY40100  '+   '                                        WHERE  PERDENDT = @FullPeriodEnd  '+   '                                               AND YEAR1 = @CurrentYear  '+   '                                               AND FORIGIN = 1), @INVALIDPERIOD)  '+   '   IF @AcctCat = 1  '+   '        BEGIN  '+   '   '+   '   select a.* from AccountTransactions a '+   '    inner join GL00100 b on a.['+@Account_Index+'] = b.ACTINDX '+   '    where ['+@TRX_Date+'] >= @FullPeriodStart and  ['+@TRX_Date+'] <=@FullPeriodEnd '+   '    and b.ACCATNUM in (33,34,35,36,37,38,39,40,41,42,47) '+   '        END '+   '      IF @AcctCat = 2 '+   '        BEGIN  '+   '         '+   '   select a.* from AccountTransactions a '+   '    inner join GL00100 b on a.['+@Account_Index+'] = b.ACTINDX '+   '    where ['+@TRX_Date+'] >= @FullPeriodStart and  ['+@TRX_Date+'] <=@FullPeriodEnd '+   '    and b.ACCATNUM in (31,43,32,46) '+   '        END '+   '      IF @AcctCat = 3 '+   '  BEGIN '+   '   '+   '   select a.* from AccountTransactions a '+   '    inner join GL00100 b on a.['+@Account_Index+'] = b.ACTINDX '+   '    where ['+@TRX_Date+'] >= @FullPeriodStart and  ['+@TRX_Date+'] <=@FullPeriodEnd '+   '    and b.ACCATNUM in (33) '+   '  END '+   'END '   select @sqlaccessstring =   'GRANT execute ON [dbo].[seeGetGLAcctCatDetails] TO [rpt_executive], [rpt_bookkeeper], [rpt_accounting manager], [rpt_certified accountant] '   exec (@sqldropstring)   exec (@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10)   exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[seeGetGLAcctCatDetails_Create] TO [DYNGRP]
GO

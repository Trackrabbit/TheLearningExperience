SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[popPrepaymentHasCurrentTrxAmtAvail]  @I_vPOPReceiptNumber varchar(20)  = NULL,  @I_DiscPercentAmtDif numeric(23,0) = NULL,  @I_DiscDollarAmtDif numeric(19,5) = NULL,  @O_fTrxAmtIsAvailable tinyint   = NULL output,  @O_iErrorState            int       = NULL output  as  declare @cyDiscAmt numeric(19,5),  @iStatus int   select @iStatus = 0,  @O_iErrorState = 0,  @O_fTrxAmtIsAvailable = 0  if( @I_vPOPReceiptNumber is NULL or  @I_DiscPercentAmtDif is NULL or  @I_DiscDollarAmtDif is NULL ) begin  select          @O_iErrorState = 21022  return end  if @I_DiscPercentAmtDif <> 0.0  begin  if (select count(*) from   (select (max(Pay.ORCTRXAM) - sum(round((Line.OREXTCST * (@I_DiscPercentAmtDif * .0001)), (Line.DECPLCUR - 7)))) as Available  from POP10500 Apply, POP10170 Pay , POP10310 Line   where Apply.POPRCTNM = @I_vPOPReceiptNumber  and Apply.PONUMBER = Pay.PONUMBER  and Apply.POPRCTNM = Line.POPRCTNM  and Pay.PONUMBER = Line.PONUMBER  group by Apply.POPRCTNM, Apply.PONUMBER) AvailTable  where AvailTable.Available < 0) > 0  select @O_fTrxAmtIsAvailable = 0  else  select @O_fTrxAmtIsAvailable = 1  end else  begin  if (select count(*) from   (select (max(Pay.ORCTRXAM) - (sum(Line.OREXTCST - Line.OriginatingPrepaymentAmt - Line.ORDISTKN))) as Available  from POP10500 Apply, POP10170 Pay , POP10310 Line   where Apply.POPRCTNM = @I_vPOPReceiptNumber  and Apply.PONUMBER = Pay.PONUMBER  and Apply.POPRCTNM = Line.POPRCTNM  and Pay.PONUMBER = Line.PONUMBER  group by Apply.POPRCTNM, Apply.PONUMBER) AvailTable  where AvailTable.Available < @I_DiscDollarAmtDif) > 0  select @O_fTrxAmtIsAvailable = 0  else  select @O_fTrxAmtIsAvailable = 1   end  return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[popPrepaymentHasCurrentTrxAmtAvail] TO [DYNGRP]
GO

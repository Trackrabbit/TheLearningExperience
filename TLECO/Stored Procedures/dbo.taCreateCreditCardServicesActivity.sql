SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateCreditCardServicesActivity]  @I_vCUSTNMBR char(15),                           @I_vSOPTYPE  smallint,                           @I_vSOPNUMBE char(21),                           @I_vSEQNUMBR int,                                @I_vLNITMSEQ int = 0,                            @I_vPAYMENTSERVICEREF char(37) = '',       @I_vDATE1 datetime = '',                         @I_vPAYMENTSERVICEOP smallint = 0,         @I_vTRXAMNT numeric(19, 5) = 0,                  @I_vPAYMENTSERVICESSTATUS smallint = 0,    @I_vPAYMENTSERVICESSOURCE char(36) = '', @I_vAUTHCODE char(50) = '',                      @I_vERMSGTXT char(255) = '', @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',          @I_vUSRDEFND5 varchar(8000) = '',          @O_iErrorState int output,                       @oErrString varchar(255) output                   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @CMPANYID smallint,                         @iStatus int,                               @do_active tinyint,                         @PROCESSELECTRONICALLY tinyint,       @RMDTYPAL smallint,                         @AMNTPAID numeric(19, 5),  @iAddCodeErrState int,                @O_oErrorState int,  @iCustomErrString varchar(255),  @iError int,                                 @SEQNUMBR int          select  @CMPANYID = 0,                              @iStatus = 0,                               @do_active = 0,                             @PROCESSELECTRONICALLY = 0,           @RMDTYPAL = 0,                              @AMNTPAID = 0,  @iAddCodeErrState =0,                 @O_oErrorState = 0,  @iCustomErrString = '',  @iError = 0,                                @O_iErrorState = 0,                          @SEQNUMBR  = 16384  if (@oErrString is NULL) begin  select @oErrString = '' end  if    (  @I_vCUSTNMBR is null or  @I_vSOPTYPE is null or  @I_vSOPNUMBE is null or  @I_vLNITMSEQ is null or  @I_vPAYMENTSERVICEREF is null or  @I_vDATE1 is null or  @I_vPAYMENTSERVICEOP is null or  @I_vTRXAMNT is null or  @I_vPAYMENTSERVICESSTATUS is null or  @I_vPAYMENTSERVICESSOURCE is null or  @I_vAUTHCODE is null or  @I_vERMSGTXT is null  ) begin  select @O_iErrorState = 11465    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ((@I_vSOPTYPE not in(2,3,4,5,6)) or (@I_vSOPNUMBE = '') or (@I_vCUSTNMBR = ''))  begin  select @O_iErrorState = 11470    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ((@I_vSEQNUMBR is not null) and (@I_vSEQNUMBR <> 0)) begin  select @SEQNUMBR = @I_vSEQNUMBR end  select  @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (not exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'DO40100')) begin  select @O_iErrorState = 11466    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end else begin  select @do_active = PSACTIVE from DYNAMICS..DO40100 (nolock) where CMPANYID = @CMPANYID  if (@do_active = 0)  begin  select @O_iErrorState = 11467    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@do_active = 1) begin  select @PROCESSELECTRONICALLY = PROCESSELECTRONICALLY from DO10103 (nolock)   where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR  if @PROCESSELECTRONICALLY <> 1  begin  select @O_iErrorState = 11468    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  select @AMNTPAID = isnull(AMNTPAID, 0) from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR if    (@I_vTRXAMNT <> @AMNTPAID) begin  select @O_iErrorState = 11469    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if    (@I_vPAYMENTSERVICEOP not in (1,2,3,4)) begin  select @O_iErrorState = 11471     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if    (@I_vPAYMENTSERVICESSTATUS not in (1,2,3,4)) begin  select @O_iErrorState = 11472     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if    ((@I_vLNITMSEQ = 0) and (@do_active = 1)) begin  select @I_vLNITMSEQ = isnull(max(LNITMSEQ), 0) + 16384 from DO10100 (nolock) where   SOPTYPE = @I_vSOPTYPE and DOCNUMBR = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR end if (exists(select 1 from DO10100 (nolock) where SOPTYPE = @I_vSOPTYPE and DOCNUMBR = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR and LNITMSEQ = @I_vLNITMSEQ)) begin  select @O_iErrorState = 11473     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if    (@I_vDATE1 = '') begin  select @I_vDATE1 = isnull(DOCDATE, '') from SOP10103 (nolock) where   SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR end else begin  select @I_vDATE1 = cast(@I_vDATE1 as varchar(12))  if (@I_vDATE1 <> (select DOCDATE from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR))  begin  select @O_iErrorState = 11474     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end if (@I_vDATE1 = '') begin  select @O_iErrorState = 11475     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@O_iErrorState = 0) begin  if (not exists (select 1 from DO10100 (nolock) where SOPTYPE = @I_vSOPTYPE and DOCNUMBR = @I_vSOPNUMBE and SEQNUMBR = @SEQNUMBR and LNITMSEQ = @I_vLNITMSEQ))  begin  insert into DO10100  (  CUSTNMBR,  SOPTYPE,  DOCNUMBR,  RMDTYPAL,  SEQNUMBR,  LNITMSEQ,  PAYMENTSERVICEREF,  DATE1,  PAYMENTSERVICEOP,  TRXAMNT,  PAYMENTSERVICESSTATUS,  PAYMENTSERVICESSOURCE,  doAUTHCODE,  ERMSGTXT  )  select  @I_vCUSTNMBR,                               @I_vSOPTYPE,                                @I_vSOPNUMBE,                               @RMDTYPAL,           @SEQNUMBR,                               @I_vLNITMSEQ,                               @I_vPAYMENTSERVICEREF,                @I_vDATE1,                                  @I_vPAYMENTSERVICEOP,                 @I_vTRXAMNT,                                @I_vPAYMENTSERVICESSTATUS,            @I_vPAYMENTSERVICESSOURCE,            @I_vAUTHCODE,                               @I_vERMSGTXT                                 if (@@error <> 0)  begin  select @O_iErrorState = 11476    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 11477     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateCreditCardServicesActivity] TO [DYNGRP]
GO

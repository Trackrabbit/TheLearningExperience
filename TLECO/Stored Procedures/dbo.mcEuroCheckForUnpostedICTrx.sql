SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[mcEuroCheckForUnpostedICTrx]  @I_cCurrencyID char(15) = NULL,  @I_cIntercompanyID char(5)  = NULL,  @I_tGLRegistered tinyint  = NULL,  @I_tPMRegistered tinyint  = NULL,  @I_sCurrencyIndex smallint = NULL,  @O_cVoucherNumber char(21) = NULL output,  @O_iJournalEntry int  = NULL output,  @O_cBatchNumber char(15) = NULL output,  @O_cCompany char(5)  = NULL  output,  @O_iErrorState int  = NULL  output  as   declare  @cICID char(5),  @vDatabaseName varchar(11),  @cProcName varchar(255),  @iStatus  int,  @iError int  select   @O_cCompany  = '',  @O_iErrorState   = 0,  @iStatus   = 0,  @iError   = 0  if @I_cCurrencyID is NULL or  @I_cIntercompanyID is NULL or  @I_tGLRegistered is NULL or  @I_tPMRegistered is NULL or  @I_sCurrencyIndex is NULL  begin  select @O_iErrorState = 21042  return end   select  @cICID = ''  declare   Companycursor INSENSITIVE cursor for select distinct  INTERID,  DBNAME from   DYNAMICS.dbo.SY01500,   DYNAMICS.dbo.SY02100 where   DYNAMICS.dbo.SY01500.CMPANYID =   DYNAMICS.dbo.SY02100.CMPANYID  open Companycursor if (@@cursor_rows <>  0) and (@@cursor_rows <>  -1)  begin   fetch next from  Companycursor  into  @cICID,  @vDatabaseName   while (@@fetch_status <> -1)  begin  select @cProcName = rtrim(@vDatabaseName) + '..mcEuroICUnpostedExists'   exec @iStatus = @cProcName  @I_cCurrencyID  ,  @I_cIntercompanyID ,  @I_tGLRegistered ,  @I_tPMRegistered ,  @I_sCurrencyIndex ,  @O_cVoucherNumber output,  @O_iJournalEntry output,    @O_cBatchNumber output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  break  end   if @iStatus <> 0 or @O_iErrorState <> 0  break    if @O_cVoucherNumber <> '' or @O_iJournalEntry <> 0   begin  select @O_cCompany = @vDatabaseName  break  end   fetch next from  Companycursor  into  @cICID,  @vDatabaseName  end   end   deallocate Companycursor  return (@iStatus)     
GO
GRANT EXECUTE ON  [dbo].[mcEuroCheckForUnpostedICTrx] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopCreateDistributions]  @I_vPOPTYPE smallint, @I_vPOPRCTNM char(20), @I_vVENDORID char(15), @I_vCURRNIDX int, @I_vTRDISAMT numeric(19,5), @I_vFRTAMNT numeric(19,5), @I_vMISCAMNT numeric(19,5), @I_vTAXAMNT numeric(19,5), @I_vDISAVAMT numeric(19,5), @I_vORTDISAM numeric(19,5), @I_vORFRTAMT numeric(19,5), @I_vORMISCAMT numeric(19,5), @I_vORTAXAMT numeric(19,5), @I_vORDAVAMT numeric(19,5), @I_vCASHAMNT numeric(19,5), @I_vCHEKAMNT numeric(19,5), @I_vCRCRDAMT numeric(19,5), @I_vDISTKNAM numeric(19,5), @I_vCURNCYID char(15), @I_vRATETPID char(15), @I_vEXGTBLID char(15), @I_vXCHGRATE numeric(19,7),  @I_vEXCHDATE datetime, @I_vTIME1 datetime, @I_vRTCLCMTD smallint, @I_vDECPLUSED  int, @I_vINTERID char(5) = '',   @I_vCMPANYID    smallint = 0,   @I_vCREATEDIST  int = 1,   @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare @O_oErrorState int,  @cDTYPE int,  @cDTAMT numeric(19,5),  @cCTAMT numeric(19,5),  @iCursorError int,  @cINDEX int,  @cStatement varchar(255),  @DTAREF char(25),  @iStatus int,  @iError int,  @PYMTTYPE smallint,  @CARDNAME char(15),  @CashAccount int,  @CHEKBKID char(15),  @AMNTPAID numeric(19,5),  @OnHandAccount int,  @ReturnAccount int,  @InUseAccount int,  @InServiceAccount int,  @DamagedAccount int,  @CogsAccount int,  @UnitCost numeric(19,5),  @Quantity numeric(19,5),  @QuantityOnHand numeric(19,5),  @QuantityReturned numeric(19,5),  @QuantityInUse numeric(19,5),  @QuantityInService numeric(19,5),  @QuantityDamaged numeric(19,5),  @ORDTAMT numeric(19,5),  @ORCTAMT numeric(19,5),  @PMACTINDX int,  @ACPURIDX int,  @CURNCYID char(15),  @XCHGRATE numeric(19,7),   @DSUM numeric(19,5),  @CSUM numeric(19,5),  @TRKDISAV smallint,  @ORIGDECPLCUR int,  @ISMCTRX smallint,  @O_iErrorStateAASub int,  @O_iErrorStringAASub varchar(255),  @itaProcessAnalyticsErrState int,  @itaProcessAnalyticsErrString varchar(8000),  @aaSubLedgerHdrID int,  @FUNDECPLCUR int,  @FUNLCURR char(15),  @PApurordnum char(30),  @PAPROJNUMBER char(15),  @PACOSTCATID char(15),  @dropship tinyint,  @ITEMNMBR char(31),   @RCPTLNNM int,  @PACGBWIPIDX int,  @tempPACOSTCATID char(15),  @PAIV_Item_Checkbox smallint,  @PATU smallint,  @tempPAPROJNUMBER char(15),  @PAbllngtype smallint,  @PAProjectType smallint,  @PAAcctgMethod smallint,  @PACOGSIDXFlag smallint,  @PAWIPIDXFlag smallint,  @InventoryIDXFlag smallint,  @PAContraAccountIDXFlag smallint,  @AccruedPuchasesIDXFlag smallint,  @PMPuchasesIDXFlag smallint,  @INVINDX int,  @PMPRCHIX int,  @NONINVEN smallint,  @PMDTKIDX int,  @RcptIndex int,  @TAXAMNT1 numeric(19,5),  @ORTAXAMNT1 numeric(19,5)  select  @DTAREF = '',  @O_iErrorState = 0,  @iStatus = 0,  @O_oErrorState = 0,  @PMACTINDX = 0,  @ACPURIDX = 0,  @CURNCYID = '',  @XCHGRATE = 0,  @DSUM = 0,  @CSUM = 0,  @TRKDISAV = 1,  @ORIGDECPLCUR = 0,  @ISMCTRX = 1,  @O_iErrorStateAASub = 0,  @O_iErrorStringAASub = '',  @itaProcessAnalyticsErrState = 0,  @itaProcessAnalyticsErrString = '',  @aaSubLedgerHdrID = 0,  @FUNDECPLCUR = 0,  @FUNLCURR = '',  @PApurordnum = '',  @PAPROJNUMBER = '',  @PACOSTCATID = '',  @dropship = 0,  @ITEMNMBR = '',  @RCPTLNNM = 0,  @PACGBWIPIDX = 0,  @tempPACOSTCATID = '',  @PAIV_Item_Checkbox = 0,  @PATU = 0,  @tempPAPROJNUMBER = '',  @PAbllngtype = 0,  @PAProjectType = 0,  @PAAcctgMethod = 0,  @PACOGSIDXFlag = 0,  @PAWIPIDXFlag = 0,  @InventoryIDXFlag = 0,  @PAContraAccountIDXFlag = 0,  @AccruedPuchasesIDXFlag = 0,  @PMPuchasesIDXFlag = 0,  @INVINDX = 0,  @PMPRCHIX = 0,  @NONINVEN = 0,  @PMDTKIDX = 0,  @RcptIndex = 0,  @TAXAMNT1 = 0,  @ORTAXAMNT1 = 0  if (  @I_vPOPTYPE is NULL or  @I_vPOPRCTNM is NULL or  @I_vVENDORID is NULL or  @I_vCURRNIDX is NULL or  @I_vTRDISAMT is NULL or  @I_vFRTAMNT is NULL or  @I_vMISCAMNT is NULL or  @I_vTAXAMNT is NULL or  @I_vDISAVAMT is NULL or  @I_vORTDISAM is NULL or  @I_vORFRTAMT is NULL or  @I_vORMISCAMT is NULL or  @I_vORTAXAMT is NULL or  @I_vORDAVAMT is NULL or  @I_vCURNCYID is NULL or  @I_vRATETPID is NULL or  @I_vEXGTBLID is NULL or  @I_vXCHGRATE is NULL or  @I_vEXCHDATE is NULL or  @I_vTIME1 is NULL or  @I_vRTCLCMTD is NULL) begin  select @O_iErrorState = 7130     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vVENDORID = '' or  @I_vPOPTYPE = 0 or  @I_vPOPRCTNM = '') begin  select @O_iErrorState = 7132    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vPOPRCTNM = UPPER(@I_vPOPRCTNM),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  select @TRKDISAV = TRKDISAV from PM40100 (nolock) where UNIQKEY = 1  select top 1 @CURNCYID = CURNCYID from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM  if (@CURNCYID = '') begin  select @CURNCYID = FUNLCURR, @FUNLCURR = FUNLCURR from MC40000 (nolock) end else begin  select @FUNLCURR = isnull(FUNLCURR, '') from MC40000 (nolock)  end  if @I_vRTCLCMTD not in (0,1) begin  select @I_vXCHGRATE = 0, @I_vXCHGRATE = 0, @I_vTIME1 = '', @ISMCTRX = 0  end  select @FUNDECPLCUR = DECPLCUR-1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if @I_vCREATEDIST = 1 begin  select @ORIGDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID   delete POP10390 where POPRCTNM = @I_vPOPRCTNM   if @@error <> 0  begin  select @O_iErrorState = 7131    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @DTAREF = rtrim(@I_vPOPRCTNM) + space(20 - len(@I_vPOPRCTNM)) + '0'   if (exists (select 1 from DTA10100 (nolock) where DTASERIES = 12 and DTAREF = @DTAREF))  begin  delete DTA10100 where DTASERIES = 12 and DTAREF = @DTAREF  if (@@error <> 0)  begin  select @O_iErrorState = 3630    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (exists (select 1 from DTA10200 (nolock) where DTASERIES = 12 and DTAREF = @DTAREF))  begin  delete DTA10200 where DTASERIES = 12 and DTAREF = @DTAREF  if (@@error <> 0)  begin  select @O_iErrorState = 3631    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   create table #temp (DTYPE int, DTAMT numeric(19,5), CTAMT numeric(19,5), ORDTAMT numeric(19,5), ORCTAMT numeric(19,5), DTINDEX int, XCHGRATE numeric(19,7))   if ((@I_vPOPTYPE = 1) and exists(select 1 from POP10500 where POPRCTNM = @I_vPOPRCTNM))  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT,0), @I_vDECPLUSED)))  else 0  end,  UPPVIDX,  @I_vXCHGRATE  from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM  group by POPRCTNM, UPPVIDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) > 0  then sum(round(isnull(((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT) * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) > 0  then sum(round(isnull(((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT) / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) > 0  then sum(round(isnull((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) < 0  then abs(sum(round(isnull(((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT) * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) < 0  then abs(sum(round(isnull(((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT) / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) < 0  then abs(sum(round(isnull((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) > 0  then sum(round(isnull((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT),0) < 0  then abs(sum(round(isnull((b.OREXTCST - b.OBTAXAMT) - a.RUPPVAMT,0), @I_vDECPLUSED)))  else 0  end,  b.INVINDX,  @I_vXCHGRATE  from POP10500 a(nolock), POP10310 b where (a.POPRCTNM = @I_vPOPRCTNM and  b.POPRCTNM = @I_vPOPRCTNM and a.RCPTLNNM = b.RCPTLNNM   and a.ITEMNMBR in (select ITEMNMBR from IV00101 (nolock))) or   (a.POPRCTNM = @I_vPOPRCTNM and b.POPRCTNM = @I_vPOPRCTNM and a.RCPTLNNM = b.RCPTLNNM   and b.CostCatID = '' and a.ITEMNMBR not in (select ITEMNMBR from IV00101 (nolock)))  group by b.POPRCTNM, b.INVINDX   end   if ((@I_vPOPTYPE = 3) and exists(select 1 from POP10500 where POPRCTNM = @I_vPOPRCTNM))  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)   select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT/nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(RUPPVAMT),0) > 0  then sum(round(isnull(RUPPVAMT,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(RUPPVAMT),0) < 0  then abs(sum(round(isnull(RUPPVAMT,0), @I_vDECPLUSED)))  else 0  end,  UPPVIDX,  @I_vXCHGRATE  from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM  group by POPRCTNM, UPPVIDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) > 0  then sum(round (isnull ((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0.0 and @I_vRTCLCMTD = 1 and (isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) > 0)  then sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) > 0  then sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD,0),@FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) < 0  then abs(sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) < 0  then abs(sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) < 0  then abs(sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD,0),@FUNDECPLCUR)))  else 0  end,  case  when isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) > 0  then sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD,0),@I_vDECPLUSED))  else 0  end,  case  when isnull(sum((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD),0) < 0  then abs(sum(round(isnull((a.ORCPTCOST - (a.OSTDCOST * a.UMQTYINB)) * a.QTYINVCD,0),@I_vDECPLUSED)))  else 0  end,  b.PURPVIDX,  @I_vXCHGRATE  from POP10500 a(nolock), POP10310 b(nolock), IV00101 c(nolock)  where a.POPRCTNM = @I_vPOPRCTNM and b.POPRCTNM = @I_vPOPRCTNM and  a.RCPTLNNM = b.RCPTLNNM and c.ITEMNMBR = a.ITEMNMBR and  c.VCTNMTHD in(4,5)  group by b.PURPVIDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and   isnull(sum(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round (isnull (((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and   isnull(sum (((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round (isnull (((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and   isnull(sum (((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round(isnull(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and   isnull(sum(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum (round (isnull (((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and   isnull(sum(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum (round (isnull (((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and   isnull(sum(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum (round(isnull(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round(isnull(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum(round(isnull(((a.OSTDCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @I_vDECPLUSED)))  else 0  end,  b.INVINDX,  @I_vXCHGRATE  from POP10500 a(nolock), POP10310 b(nolock), IV00101 c(nolock)  where a.POPRCTNM = @I_vPOPRCTNM and b.POPRCTNM = @I_vPOPRCTNM and   a.RCPTLNNM = b.RCPTLNNM and c.ITEMNMBR = a.ITEMNMBR and  c.VCTNMTHD in (4,5)  group by b.INVINDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 1,   sum(round(isnull(a.EXTDCOST + (round(((c.QTYSHPPD - c.QTYREJ - c.QTYINVCD)* a.UNITCOST), @FUNDECPLCUR)) - a.BCKTXAMT,0), @FUNDECPLCUR)),   0,  sum(round(isnull(a.OREXTCST + (round(((c.QTYSHPPD - c.QTYREJ - c.QTYINVCD)* a.ORUNTCST), @I_vDECPLUSED)) - a.OBTAXAMT,0), @I_vDECPLUSED)),   0,  a.INVINDX,  @I_vXCHGRATE  from POP10310 a(nolock), IV00101 b(nolock), POP10500 c  where a.POPRCTNM = @I_vPOPRCTNM and  c.POPRCTNM = @I_vPOPRCTNM and  a.RCPTLNNM = c.RCPTLNNM and  a.ITEMNMBR = c.ITEMNMBR and  a.ITEMNMBR = b.ITEMNMBR and  b.VCTNMTHD not in(4,5)  group by a.POPRCTNM, a.INVINDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 1,   case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and   isnull(sum(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round (isnull (((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and   isnull(sum (((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round (isnull (((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and   isnull(sum (((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round(isnull(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and   isnull(sum(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum (round (isnull (((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and   isnull(sum(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum (round (isnull (((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and   isnull(sum(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum (round(isnull(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) > 0  then sum(round(isnull(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB),0) < 0  then abs(sum(round(isnull(((a.ORCPTCOST*(a.QTYSHPPD - a.QTYREJ)) - b.OBTAXAMT) * a.UMQTYINB,0), @I_vDECPLUSED)))  else 0  end,  a.INVINDX,  @I_vXCHGRATE  from POP10500 a, POP10310 b(nolock)  where a.POPRCTNM = @I_vPOPRCTNM and  b.POPRCTNM = @I_vPOPRCTNM and a.RCPTLNNM = b.RCPTLNNM and b.CostCatID = '' and   b.ITEMNMBR not in(select ITEMNMBR from IV00101 (nolock))  group by a.POPRCTNM, a.INVINDX   if (@TRKDISAV = 1)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 6, 0, @I_vDISAVAMT, 0, @I_vORDAVAMT, 0, @I_vXCHGRATE  end   if (@TRKDISAV = 1)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(isnull(sum(EXTDCOST),0) + @I_vMISCAMNT + @I_vFRTAMNT - @I_vTRDISAMT - @I_vDISAVAMT, @I_vDECPLUSED),  0, round(isnull(sum(OREXTCST),0) + @I_vORMISCAMT + @I_vORFRTAMT - @I_vORTDISAM - @I_vORDAVAMT, @I_vDECPLUSED) , 0, @I_vXCHGRATE  from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and CostCatID = ''    group by POPRCTNM, TAXAMNT, ORTAXAMT   end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(isnull(sum(EXTDCOST),0) + @I_vMISCAMNT + @I_vFRTAMNT - @I_vTRDISAMT, @I_vDECPLUSED),  0, round(isnull(sum(OREXTCST),0) + @I_vORMISCAMT + @I_vORFRTAMT - @I_vORTDISAM, @I_vDECPLUSED), 0, @I_vXCHGRATE  from POP10310 (nolock)   where  POPRCTNM = @I_vPOPRCTNM and CostCatID = ''     group by POPRCTNM, TAXAMNT, ORTAXAMT   end   if exists (select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and CostCatID <> '')  begin  if (@TRKDISAV = 1)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(isnull(sum(MSCTXAMT),0) + isnull(SUM(FRTTXAMT),0), @I_vDECPLUSED),  0, round(isnull(sum(ORMSCTAX),0) + isnull(sum(ORFRTTAX),0), @I_vDECPLUSED), 0, @I_vXCHGRATE  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM in (2147483645,2147483646)  group by POPRCTNM  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(@I_vMISCAMNT + @I_vFRTAMNT - @I_vTRDISAMT - @I_vDISAVAMT, @I_vDECPLUSED),  0, round(@I_vORMISCAMT + @I_vORFRTAMT - @I_vORTDISAM - @I_vORDAVAMT, @I_vDECPLUSED), 0, @I_vXCHGRATE  from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM   group by POPRCTNM   end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(isnull(sum(MSCTXAMT),0)+ isnull(SUM(FRTTXAMT),0), @I_vDECPLUSED),  0, round (isnull(sum(ORMSCTAX),0) + isnull(sum(ORFRTTAX),0), @I_vDECPLUSED), 0, @I_vXCHGRATE  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM in (2147483645,2147483646)   group by POPRCTNM  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(@I_vMISCAMNT + @I_vFRTAMNT - @I_vTRDISAMT, @I_vDECPLUSED),  0, round(@I_vORMISCAMT + @I_vORFRTAMT - @I_vORTDISAM, @I_vDECPLUSED), 0, @I_vXCHGRATE  from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM   group by POPRCTNM  end  end    if ((@I_vPOPTYPE = 3) and exists(select 1 from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM))  Begin  Select @TAXAMNT1 = sum(TAXAMNT), @ORTAXAMNT1 = sum(ORTAXAMT) from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM  and RCPTLNNM = 0   update #temp Set CTAMT = CTAMT + @TAXAMNT1 , ORCTAMT = ORCTAMT + @ORTAXAMNT1 where DTYPE = 7  End   if (@I_vCASHAMNT + @I_vCHEKAMNT + @I_vCRCRDAMT + @I_vDISTKNAM) <> 0  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, @I_vCASHAMNT + @I_vCHEKAMNT + @I_vCRCRDAMT + @I_vDISTKNAM, 0, @I_vCASHAMNT + @I_vCHEKAMNT + @I_vCRCRDAMT + @I_vDISTKNAM, 0,0,@I_vXCHGRATE  end   else   begin   if exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and ProjNum <> '' and CostCatID <> '') and (@I_vTRDISAMT <> 0)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, @I_vTRDISAMT, 0, @I_vTRDISAMT, 0,0,@I_vXCHGRATE  end  end    if (@TRKDISAV = 1) and exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and ProjNum <> '' and CostCatID <> '') and (@I_vDISAVAMT <> 0)   begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, @I_vDISAVAMT, 0, @I_vORDAVAMT, 0, 0, @I_vXCHGRATE  end   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9, 0, isnull(sum(round(((i.QTYSHPPD - i.QTYREJ - i.QTYINVCD)* d.UNITCOST), @I_vDECPLUSED)),0),  0,isnull(sum(round(((i.QTYSHPPD - i.QTYREJ - i.QTYINVCD)* d.ORUNTCST), @I_vDECPLUSED)),0), i.ACPURIDX, i.XCHGRATE  from POP10500 i (nolock), POP10310 d (nolock)  where (i.POPRCTNM = @I_vPOPRCTNM  and i.POPRCTNM = d.POPRCTNM and   i.RCPTLNNM = d.RCPTLNNM )  group by i.POPRCTNM, i.ACPURIDX, i.XCHGRATE   if (@I_vCASHAMNT > 0) or (@I_vCHEKAMNT > 0) or (@I_vCRCRDAMT > 0)  begin  select @PMACTINDX = PMAPINDX from PM00200 (nolock) where VENDORID = @I_vVENDORID   if (@PMACTINDX = 0)  begin  select @PMACTINDX = ACTINDX from SY01100 (nolock) where SERIES = 4 and SEQNUMBR = 200  end  end   if (@I_vCASHAMNT > 0)   begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 13, 0, @I_vCASHAMNT, 0, @I_vCASHAMNT, @PMACTINDX,@I_vXCHGRATE  end   if (@I_vCHEKAMNT > 0)  begin   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 13, 0, @I_vCHEKAMNT, 0, @I_vCHEKAMNT, @PMACTINDX,@I_vXCHGRATE  end   if (@I_vCRCRDAMT > 0)  begin   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 13, 0, @I_vCRCRDAMT, 0, @I_vCRCRDAMT, @PMACTINDX,@I_vXCHGRATE  end     if (@I_vDISTKNAM > 0)  begin   select @PMDTKIDX = PMDTKIDX from PM00200 (nolock) where VENDORID = @I_vVENDORID    if (@PMDTKIDX = 0)  begin  select @PMDTKIDX = ACTINDX from SY0100 (nolock) where SERIES = 4 and SEQNUMBR = 400  end  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 14, 0, @I_vDISTKNAM, 0, @I_vDISTKNAM, @PMDTKIDX,@I_vXCHGRATE  end   end   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 2, 0, round(@I_vTRDISAMT - isnull(sum(BackoutTradeDiscTax),0), @FUNDECPLCUR),0,@I_vORTDISAM - round(isnull(sum(OrigBackoutTradeDiscTax),0), @I_vDECPLUSED),0, @I_vXCHGRATE  from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  group by POPRCTNM   if (exists(select 1 from POP10360 (nolock) where BKOUTTAX = 1 and POPRCTNM = @I_vPOPRCTNM and RCPTLNNM not in (0,2147483646)))  begin  insert #temp (DTYPE, DTAMT, CTAMT,ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 3,  case  when BackoutFreightTaxAmt > 0  then @I_vFRTAMNT - BackoutFreightTaxAmt  else @I_vFRTAMNT  end,  0,  case  when OrigBackoutFreightTaxAmt > 0  then @I_vORFRTAMT - OrigBackoutFreightTaxAmt  else @I_vORFRTAMT  end,  0,  0,  @I_vXCHGRATE  from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM  end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 3, @I_vFRTAMNT, 0, @I_vORFRTAMT, 0, 0, @I_vXCHGRATE  end   if (exists(select 1 from POP10360 (nolock) where BKOUTTAX = 1 and POPRCTNM = @I_vPOPRCTNM and RCPTLNNM not in (0,2147483645)))  begin  insert #temp (DTYPE, DTAMT, CTAMT,ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 4,  case  when BackoutMiscTaxAmt > 0  then @I_vMISCAMNT - BackoutMiscTaxAmt  else @I_vMISCAMNT  end,  0,  case  when OrigBackoutMiscTaxAmt > 0  then @I_vMISCAMNT - OrigBackoutMiscTaxAmt  else @I_vORMISCAMT  end,  0,  0,  @I_vXCHGRATE  from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM  end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT,ORCTAMT, DTINDEX, XCHGRATE)  select 4, @I_vMISCAMNT, 0,@I_vORMISCAMT,0, 0, @I_vXCHGRATE  end   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  5,  round(isnull(sum(TAXAMNT),0), @FUNDECPLCUR),  0,  round(isnull(sum(ORTAXAMT),0), @I_vDECPLUSED),  0,  ACTINDX,  @I_vXCHGRATE  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and TAXAMNT > 0  group by POPRCTNM, ACTINDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  5,  0,  round(isnull(sum(TAXAMNT * -1),0), @FUNDECPLCUR),  0,  round(isnull(sum(ORTAXAMT * -1),0), @I_vDECPLUSED),  ACTINDX,  @I_vXCHGRATE  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and TAXAMNT < 0  group by POPRCTNM, ACTINDX    insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 5, round(isnull(sum(FRTTXAMT),0), @FUNDECPLCUR), 0,round(isnull(sum(ORFRTTAX),0), @I_vDECPLUSED), 0, ACTINDX, @I_vXCHGRATE  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 2147483646  group by POPRCTNM, ACTINDX   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 5, round(isnull(sum(MSCTXAMT),0), @FUNDECPLCUR), 0,round(isnull(sum(ORMSCTAX),0), @I_vDECPLUSED), 0, ACTINDX, @I_vXCHGRATE  from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 2147483645  group by POPRCTNM, ACTINDX   if (@I_vPOPTYPE = 1)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 6, 0, @I_vDISAVAMT, 0, @I_vORDAVAMT, 0, @I_vXCHGRATE   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9, 0,round(isnull(sum(EXTDCOST),0) + @I_vMISCAMNT + @I_vFRTAMNT + @I_vTAXAMNT - @I_vTRDISAMT - @I_vDISAVAMT, @FUNDECPLCUR),  0, round(isnull(sum(OREXTCST),0) + @I_vORMISCAMT + @I_vORFRTAMT + @I_vORTAXAMT - @I_vORTDISAM - @I_vORDAVAMT, @I_vDECPLUSED), 0, @I_vXCHGRATE  from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  group by POPRCTNM  end   if (@I_vPOPTYPE = 2)  begin  select @PMACTINDX = PMAPINDX from PM00200 (nolock) where VENDORID = @I_vVENDORID   if (@PMACTINDX = 0)  begin  select @PMACTINDX = ACTINDX from SY01100 (nolock) where SERIES = 4 and SEQNUMBR = 200  end   if (@TRKDISAV = 1)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(isnull(sum(SUBTOTAL),0) + @I_vMISCAMNT + @I_vFRTAMNT + @I_vTAXAMNT - @I_vTRDISAMT - @I_vDISAVAMT, @FUNDECPLCUR),  0, round(isnull(sum(ORSUBTOT),0) + @I_vORMISCAMT + @I_vORFRTAMT + @I_vORTAXAMT - @I_vORTDISAM - @I_vORDAVAMT, @I_vDECPLUSED), @PMACTINDX, @I_vXCHGRATE  from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM  end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 7, 0, round(isnull(sum(SUBTOTAL),0) + @I_vMISCAMNT + @I_vFRTAMNT + @I_vTAXAMNT - @I_vTRDISAMT, @FUNDECPLCUR),  0, round(isnull(sum(ORSUBTOT),0) + @I_vORMISCAMT + @I_vORFRTAMT + @I_vORTAXAMT - @I_vORTDISAM, @I_vDECPLUSED), @PMACTINDX, @I_vXCHGRATE  from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM  end   if (exists(select 1 from POP10600 where POPIVCNO = @I_vPOPRCTNM))  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL * @I_vXCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.UPPVTOTL / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL * @I_vXCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL / nullif(@I_vXCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL,0), @I_vDECPLUSED)))  else 0  end,  a.PURPVIDX,  @I_vXCHGRATE  from POP10600 a (nolock), POP10500 i (nolock), IV00101 c (nolock)  where a.POPIVCNO = @I_vPOPRCTNM and a.POPIVCNO = i.POPRCTNM and a.IVCLINNO = i.RCPTLNNM and c.ITEMNMBR = i.ITEMNMBR and  c.VCTNMTHD in(4,5)  group by a.PURPVIDX   insert into #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull((a.PPVTotal) * a.QTYINVCD * s.XCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull((a.PPVTotal) * a.QTYINVCD / nullif(s.XCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.PPVTotal,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull((a.PPVTotal) * a.QTYINVCD * s.XCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull((a.PPVTotal) * a.QTYINVCD / nullif(s.XCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull(a.PPVTotal,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.PPVTotal,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull(a.PPVTotal,0), @I_vDECPLUSED)))  else 0  end,  a.PURPVIDX,  s.XCHGRATE  from POP10600 a (nolock), POP10500 s (nolock), IV00101 c (nolock)  where a.POPIVCNO = @I_vPOPRCTNM and a.POPRCTNM = s.POPRCTNM and a.RCPTLNNM = s.RCPTLNNM and c.ITEMNMBR = s.ITEMNMBR and  c.VCTNMTHD in(1,2,3)  group by a.POPIVCNO, a.PURPVIDX, s.XCHGRATE   insert into #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull((a.PPVTotal) * a.QTYINVCD * s.XCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull((a.PPVTotal) * a.QTYINVCD / nullif(s.XCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.PPVTotal,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull((a.PPVTotal) * a.QTYINVCD * s.XCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull((a.PPVTotal) * a.QTYINVCD / nullif(s.XCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull(a.PPVTotal,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.PPVTotal,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull(a.PPVTotal,0), @I_vDECPLUSED)))  else 0  end,  a.PURPVIDX,  s.XCHGRATE  from POP10600 a (nolock), POP10500 s (nolock), IV00101 c (nolock)  where a.POPIVCNO = @I_vPOPRCTNM and a.POPRCTNM = s.POPRCTNM and a.RCPTLNNM = s.RCPTLNNM and c.ITEMNMBR = s.ITEMNMBR and  c.VCTNMTHD in(0) and c.ITEMTYPE in (4,5,6)  group by a.POPIVCNO, a.PURPVIDX, s.XCHGRATE   insert #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD) * @I_vXCHGRATE,0),@I_vDECPLUSED) > 0)  then sum(round(isnull(i.SumQTYINVCD - b.SumQTYINVCD * @I_vXCHGRATE,0),@FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD) * @I_vXCHGRATE,0),@I_vDECPLUSED) > 0)  then sum(round(isnull(i.SumQTYINVCD - b.SumQTYINVCD / nullif(@I_vXCHGRATE,0),0),@FUNDECPLCUR))  when @I_vXCHGRATE = 0 and (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD),0),@FUNDECPLCUR) > 0)  then sum(round(i.SumQTYINVCD - b.SumQTYINVCD, @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD) * @I_vXCHGRATE,0),@FUNDECPLCUR) < 0)  then sum(round(isnull(i.SumQTYINVCD - b.SumQTYINVCD * @I_vXCHGRATE,0),@FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD) * @I_vXCHGRATE,0),@FUNDECPLCUR) < 0)  then sum(round(isnull(i.SumQTYINVCD - b.SumQTYINVCD / nullif(@I_vXCHGRATE,0),0),@FUNDECPLCUR))  when @I_vXCHGRATE = 0 and (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD),0),@FUNDECPLCUR) < 0)  then sum(round(b.SumQTYINVCD - i.SumQTYINVCD, @FUNDECPLCUR))  else 0  end,  case  when (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD),0),@I_vDECPLUSED) > 0)  then sum(round(i.SumQTYINVCD - b.SumQTYINVCD, @I_vDECPLUSED))   else 0  end,  case  when (round(isnull(sum(i.SumQTYINVCD - b.SumQTYINVCD),0),@I_vDECPLUSED) < 0)  then sum(round(b.SumQTYINVCD - i.SumQTYINVCD, @I_vDECPLUSED))   else 0  end,  a.PURPVIDX,  @I_vXCHGRATE  from POP10310 a (nolock), IV00101 d (nolock),  (select POPRCTNM, RCPTLNNM, isnull(sum(QTYINVCD),0) QTYINVCD, isnull(sum(QTYINVCD * ORCPTCOST),0) SumQTYINVCD from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM group by POPRCTNM, RCPTLNNM) i,  (select POPIVCNO, IVCLINNO, isnull(sum(QTYINVCD),0) QTYINVCD, isnull(sum(QTYINVCD * ORCPTCOST),0) SumQTYINVCD from POP10600 (nolock) where POPIVCNO = @I_vPOPRCTNM group by POPIVCNO, IVCLINNO) b  where  a.POPRCTNM = @I_vPOPRCTNM and a.POPRCTNM = b.POPIVCNO and a.RCPTLNNM = b.IVCLINNO and a.POPRCTNM = i.POPRCTNM and a.RCPTLNNM = i.RCPTLNNM  and a.ITEMNMBR = d.ITEMNMBR and d.VCTNMTHD = 0 and d.ITEMTYPE not in (4,5,6)   group by a.PURPVIDX   insert #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull((a.PPVTotal) * a.QTYINVCD * s.XCHGRATE,0), @FUNDECPLCUR))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull((a.PPVTotal) * a.QTYINVCD / nullif(s.XCHGRATE,0),0), @FUNDECPLCUR))  when @I_vXCHGRATE = 0 and isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.PPVTotal,0), @FUNDECPLCUR))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull((a.PPVTotal) * a.QTYINVCD * s.XCHGRATE,0), @FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull((a.PPVTotal) * a.QTYINVCD / nullif(s.XCHGRATE,0),0), @FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull(a.PPVTotal,0), @FUNDECPLCUR)))  else 0  end,  case  when isnull(sum(a.PPVTotal),0) > 0  then sum(round(isnull(a.PPVTotal,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(a.PPVTotal),0) < 0  then abs(sum(round(isnull(a.PPVTotal,0), @I_vDECPLUSED)))  else 0  end,  a.PURPVIDX,  @I_vXCHGRATE  from POP10600 a (nolock), POP10500 s (nolock)  where a.POPIVCNO = @I_vPOPRCTNM and a.POPRCTNM = s.POPRCTNM and a.RCPTLNNM = s.RCPTLNNM  and s.ITEMNMBR not in(select ITEMNMBR from IV00101 (nolock)) and s.VENDORID =  @I_vVENDORID and s.PONUMBER <> ''   group by a.POPIVCNO, a.PURPVIDX, s.XCHGRATE   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  1,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL * s.XCHGRATE,0),@FUNDECPLCUR)))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL / nullif(s.XCHGRATE,0),0),@FUNDECPLCUR)))  when @I_vXCHGRATE = 0 and isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL,0), @FUNDECPLCUR)))  else 0  end,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0 and isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL * s.XCHGRATE,0),@I_vDECPLUSED))  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1 and isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL / nullif(s.XCHGRATE,0),0),@I_vDECPLUSED))  when @I_vXCHGRATE = 0 and isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL,0), @I_vDECPLUSED))  else 0  end,  case  when isnull(sum(a.UPPVTOTL),0) < 0  then abs(sum(round(isnull(a.UPPVTOTL,0), @I_vDECPLUSED)))  else 0  end,  case  when isnull(sum(a.UPPVTOTL),0) > 0  then sum(round(isnull(a.UPPVTOTL,0), @I_vDECPLUSED))  else 0  end,  s.UPPVIDX,  s.XCHGRATE  from POP10600 a (nolock), POP10500 s(nolock)  where a.POPIVCNO = @I_vPOPRCTNM and a.POPRCTNM = s.POPRCTNM and a.RCPTLNNM = s.RCPTLNNM and s.VENDORID = @I_vVENDORID  group by s.UPPVIDX, s.XCHGRATE     end   if (exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and PONUMBER = ''))  begin  insert #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  isnull(sum(EXTDCOST),0),  0,  isnull(sum(OREXTCST),0),  0,  PURPVIDX,  @I_vXCHGRATE  from POP10310 (nolock)  where POPRCTNM = @I_vPOPRCTNM and PONUMBER = '' and Landed_Cost = 0  and rtrim(@I_vPOPRCTNM) + cast(RCPTLNNM as varchar) not in(select rtrim(POPIVCNO) + cast(IVCLINNO as varchar)  from POP10600 (nolock))  group by POPRCTNM, PURPVIDX  end   if (exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and PONUMBER <> ''))  begin  insert #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  isnull(sum(a.EXTDCOST),0),  0,  isnull(sum(a.OREXTCST),0),  0,  a.PURPVIDX,  @I_vXCHGRATE  from POP10310 a (nolock), POP10100 b (nolock)  where a.PONUMBER = b.PONUMBER and a.POPRCTNM = @I_vPOPRCTNM and a.PONUMBER <> '' and a.Landed_Cost = 0 and b.POTYPE = 1 and  rtrim(@I_vPOPRCTNM) + cast(a.RCPTLNNM as varchar) not in(select rtrim(POPIVCNO) + cast(IVCLINNO as varchar) from POP10600 (nolock))  group by POPRCTNM, PURPVIDX  end   if (exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and PONUMBER <> ''))  begin  insert #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  isnull(sum(a.EXTDCOST),0),  0,  isnull(sum(a.OREXTCST),0),  0,  a.INVINDX,  @I_vXCHGRATE  from POP10310 a (nolock), POP10100 b (nolock)  where a.PONUMBER = b.PONUMBER and a.POPRCTNM = @I_vPOPRCTNM and a.PONUMBER <> '' and a.Landed_Cost = 0 and b.POTYPE = 2  group by POPRCTNM, INVINDX  end   if (exists(select 1 from POP10360 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and BKOUTTAX = 1))  begin  insert #temp  (  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX,  XCHGRATE  )  select  1,  0,  isnull(sum(TAXAMNT),0),  0,  isnull(sum(ORTAXAMT),0),  INVINDX,  @I_vXCHGRATE  from POP10500 i (nolock), POP10360 b (nolock)  where i.POPRCTNM = @I_vPOPRCTNM and b.POPRCTNM = @I_vPOPRCTNM and b.RCPTLNNM = 0 and BKOUTTAX = 1  group by i.INVINDX  end   if (@TRKDISAV = 1)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 6, 0, @I_vDISAVAMT, 0, @I_vORDAVAMT, 0, @I_vXCHGRATE  end   if (@I_vXCHGRATE > 0)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then isnull(round(sum((b.ORCPTCOST * case when d.Landed_Cost = 1 then 1 else b.QTYINVCD end) * s.XCHGRATE), @FUNDECPLCUR), 0)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then isnull(round(sum((b.ORCPTCOST * case when d.Landed_Cost = 1 then 1 else b.QTYINVCD end) / s.XCHGRATE),  @FUNDECPLCUR), 0)  else isnull(round(sum(b.RCPTCOST * case when d.Landed_Cost = 1 then 1 else b.QTYINVCD end),  @FUNDECPLCUR), 0)   end,  0,  isnull(round(sum(b.ORCPTCOST * b.QTYINVCD), @ORIGDECPLCUR),0),  0,  s.ACPURIDX,  s.XCHGRATE  from POP10500 i (nolock), POP10600 b (nolock), POP10500 s (nolock), POP10310 d (nolock)  where (d.PONUMBER <> '' and d.Landed_Cost = 0 and i.POPRCTNM = @I_vPOPRCTNM and i.PONUMBER <> '' and i.POPRCTNM = b.POPIVCNO and  i.RCPTLNNM = b.IVCLINNO and b.POPRCTNM  = s.POPRCTNM and b.RCPTLNNM = s.RCPTLNNM and  d.POPRCTNM = @I_vPOPRCTNM and d.RCPTLNNM = i.RCPTLNNM and i.POPRCTNM = d.POPRCTNM and  d.Landed_Cost = 0 and b.IVCLINNO = d.RCPTLNNM and s.PONUMBER <> '' and b.LCLINENUMBER = 0)  OR  (d.PONUMBER = '' and d.Landed_Cost = 1 and i.POPRCTNM = @I_vPOPRCTNM and i.POPRCTNM = b.POPIVCNO and  i.RCPTLNNM = b.IVCLINNO and b.POPRCTNM  = s.POPRCTNM and b.RCPTLNNM = s.RCPTLNNM and  d.POPRCTNM = @I_vPOPRCTNM and b.IVCLINNO = d.RCPTLNNM and s.PONUMBER = '' and b.LCLINENUMBER = s.POLNENUM)  group by i.POPRCTNM, s.ACPURIDX, s.XCHGRATE  end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9,  isnull(round(sum(round(b.RCPTCOST * case when d.Landed_Cost = 1 then 1 else b.QTYINVCD end,@I_vDECPLUSED)),  @FUNDECPLCUR), 0),  0,  isnull(round(sum(round(b.ORCPTCOST * case when d.Landed_Cost = 1 then 1 else b.QTYINVCD end,@I_vDECPLUSED)), @ORIGDECPLCUR),0),  0,  s.ACPURIDX,  s.XCHGRATE  from POP10500 i (nolock), POP10600 b (nolock), POP10500 s (nolock), POP10310 d (nolock)  where (d.PONUMBER <> '' and d.Landed_Cost = 0 and i.POPRCTNM = @I_vPOPRCTNM and i.PONUMBER <> '' and i.POPRCTNM = b.POPIVCNO and  i.RCPTLNNM = b.IVCLINNO and b.POPRCTNM  = s.POPRCTNM and b.RCPTLNNM = s.RCPTLNNM and  d.POPRCTNM = @I_vPOPRCTNM and d.RCPTLNNM = i.RCPTLNNM and i.POPRCTNM = d.POPRCTNM and  d.Landed_Cost = 0 and b.IVCLINNO = d.RCPTLNNM and s.PONUMBER <> '' and b.LCLINENUMBER = 0)  OR  (d.PONUMBER = '' and d.Landed_Cost = 0 and i.POPRCTNM = @I_vPOPRCTNM and i.PONUMBER = '' and i.POPRCTNM = b.POPIVCNO and  i.RCPTLNNM = b.IVCLINNO and b.POPRCTNM  = s.POPRCTNM and b.RCPTLNNM = s.RCPTLNNM and  d.POPRCTNM = @I_vPOPRCTNM and d.RCPTLNNM = i.RCPTLNNM and i.POPRCTNM = d.POPRCTNM and  d.Landed_Cost = 0 and b.IVCLINNO = d.RCPTLNNM and s.PONUMBER = '' and b.LCLINENUMBER = 0)  group by i.POPRCTNM, s.ACPURIDX, s.XCHGRATE   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9,  isnull(round(sum(round(b.RCPTCOST * case when d.Landed_Cost = 1 and lc.CALCMTHD in(1,2) then 1 else b.QTYINVCD/b.ORCPTCOST end,@I_vDECPLUSED)),  @FUNDECPLCUR), 0),  0,  isnull(round(sum(round(b.ORCPTCOST * case when d.Landed_Cost = 1 and lc.CALCMTHD in(1,2) then 1 else b.QTYINVCD/b.ORCPTCOST end,@I_vDECPLUSED)), @ORIGDECPLCUR),0),  0,  s.ACPURIDX,  s.XCHGRATE  from POP10500 i (nolock)  join POP10600 b (nolock) on  (i.POPRCTNM = @I_vPOPRCTNM and i.POPRCTNM = b.POPIVCNO and i.RCPTLNNM = b.IVCLINNO)  join POP10500 s (nolock) on  (i.POPRCTNM = @I_vPOPRCTNM and i.POPRCTNM = b.POPIVCNO and i.RCPTLNNM = b.IVCLINNO and b.POPRCTNM = s.POPRCTNM and  b.RCPTLNNM = s.RCPTLNNM and s.PONUMBER = '' and b.LCLINENUMBER = s.POLNENUM)  join POP10310 d (nolock) on  (d.PONUMBER = '' and d.Landed_Cost = 1 and i.POPRCTNM = @I_vPOPRCTNM and i.POPRCTNM = b.POPIVCNO and  i.RCPTLNNM = b.IVCLINNO and b.POPRCTNM  = s.POPRCTNM and b.RCPTLNNM = s.RCPTLNNM and  d.POPRCTNM = @I_vPOPRCTNM and b.IVCLINNO = d.RCPTLNNM and s.PONUMBER = '' and b.LCLINENUMBER = s.POLNENUM)  left outer join IV41100 lc (nolock) on  (i.ITEMNMBR = lc.Landed_Cost_ID and d.ITEMNMBR = lc.Landed_Cost_ID)  group by i.POPRCTNM, s.ACPURIDX, s.XCHGRATE  end   if (@I_vXCHGRATE > 0)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then isnull(round(sum((d.ORUNTCST * case when d.Landed_Cost = 1 then 1 else i.QTYINVCD end) * i.XCHGRATE),  @FUNDECPLCUR), 0)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then isnull(round(sum((d.ORUNTCST * case when d.Landed_Cost = 1 then 1 else i.QTYINVCD end) / i.XCHGRATE),  @FUNDECPLCUR), 0)  else isnull(round(sum(d.UNITCOST * case when d.Landed_Cost = 1 then 1 else i.QTYINVCD end),  @FUNDECPLCUR), 0)  end,  0,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then isnull(round(sum((d.ORUNTCST * case when d.Landed_Cost = 1 then 1 else i.QTYINVCD end) * i.XCHGRATE), @ORIGDECPLCUR), 0)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then isnull(round(sum((d.ORUNTCST * case when d.Landed_Cost = 1 then 1 else i.QTYINVCD end) / i.XCHGRATE), @ORIGDECPLCUR), 0)  else isnull(round(sum(d.UNITCOST * case when d.Landed_Cost = 1 then 1 else i.QTYINVCD end), @I_vDECPLUSED), 0)  end,  0,  i.ACPURIDX,  i.XCHGRATE  from POP10500 i (nolock), POP10310 d (nolock), IV41100 lc (nolock)  where (i.POPRCTNM = @I_vPOPRCTNM and  d.POPRCTNM = @I_vPOPRCTNM and  i.POPRCTNM = d.POPRCTNM and   i.RCPTLNNM = d.RCPTLNNM and  d.Landed_Cost = 1 and  i.ITEMNMBR = lc.Landed_Cost_ID and  d.ITEMNMBR = lc.Landed_Cost_ID and  d.PONUMBER = '')  and i.POPRCTNM not in(select POPIVCNO from POP10600 where i.POPRCTNM = POPIVCNO)  group by i.POPRCTNM, i.ACPURIDX, i.XCHGRATE  end  else  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 9,  isnull(round(sum(round(d.UNITCOST *   case   when d.Landed_Cost = 1 and lc.CALCMTHD in(1,2)  then 1   else i.QTYINVCD   end, @I_vDECPLUSED)),  @FUNDECPLCUR), 0),  0,  isnull(round(sum(round(d.UNITCOST *   case   when d.Landed_Cost = 1 and lc.CALCMTHD in(1,2)  then 1   else i.QTYINVCD   end, @I_vDECPLUSED)), @I_vDECPLUSED), 0),  0,  i.ACPURIDX,  i.XCHGRATE  from POP10500 i (nolock), POP10310 d (nolock), IV41100 lc (nolock)  where (i.POPRCTNM = @I_vPOPRCTNM and  d.POPRCTNM = @I_vPOPRCTNM and  i.POPRCTNM = d.POPRCTNM and   i.RCPTLNNM = d.RCPTLNNM and  d.Landed_Cost = 1 and  i.ITEMNMBR = lc.Landed_Cost_ID and  d.ITEMNMBR = lc.Landed_Cost_ID and  d.PONUMBER = '')  and i.POPRCTNM not in(select POPIVCNO from POP10600 where i.POPRCTNM = POPIVCNO)  group by i.POPRCTNM, i.ACPURIDX, i.XCHGRATE  end   if (@I_vXCHGRATE > 0)  begin  insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  1,  case  when @I_vRTCLCMTD = 0 and (isnull(sum(a.ACPURTOT - a.UPPVTOTL) * @I_vXCHGRATE,0)) - (isnull(sum(a.ACPURTOT - a.UPPVTOTL) * s.XCHGRATE,0)) > 0  then abs(sum(round(isnull(a.ACPURTOT - a.UPPVTOTL * @I_vXCHGRATE,0) - (isnull(a.ACPURTOT - a.UPPVTOTL * s.XCHGRATE,0)),@FUNDECPLCUR)))  when @I_vRTCLCMTD = 1 and (isnull(sum(a.ACPURTOT - a.UPPVTOTL) / @I_vXCHGRATE,0)) - (isnull(sum(a.ACPURTOT - a.UPPVTOTL) / s.XCHGRATE,0)) > 0  then abs(sum(round(isnull(a.ACPURTOT - a.UPPVTOTL / nullif(@I_vXCHGRATE,0),0) - (isnull(a.ACPURTOT - a.UPPVTOTL / nullif(s.XCHGRATE,0),0)),@FUNDECPLCUR)))  else 0  end,  case  when @I_vRTCLCMTD = 0 and (isnull(sum(a.ACPURTOT - a.UPPVTOTL) * @I_vXCHGRATE,0)) - (isnull(sum(a.ACPURTOT - a.UPPVTOTL) * s.XCHGRATE,0)) < 0  then abs(sum(round(isnull(a.ACPURTOT - a.UPPVTOTL * @I_vXCHGRATE,0) - (isnull(a.ACPURTOT - a.UPPVTOTL * s.XCHGRATE,0)),@FUNDECPLCUR)))  when @I_vRTCLCMTD = 1 and (isnull(sum(a.ACPURTOT - a.UPPVTOTL) / @I_vXCHGRATE,0)) - (isnull(sum(a.ACPURTOT - a.UPPVTOTL) / s.XCHGRATE,0)) < 0  then abs(sum(round(isnull(a.ACPURTOT - a.UPPVTOTL / nullif(@I_vXCHGRATE,0),0) - (isnull(a.ACPURTOT - a.UPPVTOTL / nullif(s.XCHGRATE,0),0)),@FUNDECPLCUR)))  else 0  end,  0,  0,  a.PURPVIDX,  0  from POP10600 a, POP10500 s(nolock)  where a.POPIVCNO = @I_vPOPRCTNM and a.POPRCTNM = s.POPRCTNM and a.RCPTLNNM = s.RCPTLNNM and s.VENDORID = @I_vVENDORID  group by a.PURPVIDX, s.XCHGRATE      end  end   if exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and ProjNum <> '' and CostCatID <> '')  begin   declare PAPOReceivingCreateDist INSENSITIVE cursor for  select PApurordnum,PAPROJNUMBER,PACOSTCATID,ITEMNMBR,RCPTLNNM,PACGBWIPIDX  from PA10702 (nolock) where PAVIDN = @I_vPOPRCTNM   open PAPOReceivingCreateDist  if (@@cursor_rows > 0)  begin  fetch next from PAPOReceivingCreateDist into @PApurordnum,@PAPROJNUMBER,@PACOSTCATID,@ITEMNMBR,@RCPTLNNM,@PACGBWIPIDX  while (@@fetch_status <> -1)  begin  if @I_vPOPTYPE = 2 select @dropship = 1   if (@PACOSTCATID <> '<NONE>') and (@PAPROJNUMBER <> '<NONE>')  begin  select @tempPACOSTCATID = PACOSTCATID, @PAIV_Item_Checkbox = PAIV_Item_Checkbox,@PATU = PATU,@PAbllngtype = PAbllngtype  from PA01301 (nolock)   where PAPROJNUMBER = @PAPROJNUMBER and PACOSTCATID = @PACOSTCATID  if (@tempPACOSTCATID <> '')  begin  if (@PAIV_Item_Checkbox = 1)  begin  if not exists (select 1 from PA01303 (nolock) where PAPROJNUMBER = @PAPROJNUMBER and PACOSTCATID = @PACOSTCATID and   ITEMNMBR = @ITEMNMBR)  begin     select @tempPAPROJNUMBER = PAPROJNUMBER, @PAProjectType = PAProjectType, @PAAcctgMethod = PAAcctgMethod from PA01201 (nolock)   where PAPROJNUMBER = @PAPROJNUMBER  if (@tempPAPROJNUMBER <> '')  begin  if (@PAProjectType = 1)   begin  if (@PAbllngtype = 1)    begin  if (@PAAcctgMethod = 1)   begin  select @PACOGSIDXFlag = 1  end  else  begin  if (@PATU = 4)  begin   if (@PACGBWIPIDX = 0)  begin  select @PACOGSIDXFlag = 1  end  else  begin  select @PAWIPIDXFlag = 1  end   end  end  end  else  begin  select @PACOGSIDXFlag = 1   end  end  else   begin  select @PAWIPIDXFlag = 1  end  end  end   else  begin  if (@dropship = 0)  begin  select @InventoryIDXFlag = 1  end  if (@dropship <> 0)  begin  select @tempPAPROJNUMBER = PAPROJNUMBER,@PAProjectType = PAProjectType, @PAAcctgMethod = PAAcctgMethod   from PA01201 (nolock) where PAPROJNUMBER = @PAPROJNUMBER  if (@tempPAPROJNUMBER <> '')  begin  if (@PAProjectType = 1)   begin  if (@PAbllngtype = 1)    begin  if (@PATU = 4)  begin   if (@PACGBWIPIDX = 0)  begin  select @PACOGSIDXFlag = 1  end  else  begin  select @PAWIPIDXFlag = 1  end  end   end  else   begin  select @PACOGSIDXFlag = 1  end  end  else   begin  select @PAWIPIDXFlag = 1  end  end   end  end  end  else   begin  select @tempPAPROJNUMBER = PAPROJNUMBER,@PAProjectType = PAProjectType, @PAAcctgMethod = PAAcctgMethod   from PA01201 (nolock) where PAPROJNUMBER = @PAPROJNUMBER  if (@tempPAPROJNUMBER <> '')  begin  if (@PAProjectType = 1)   begin  if (@PAbllngtype = 1)    begin  if (@PAAcctgMethod = 1)   begin  select @PACOGSIDXFlag = 1  end  else  begin  if (@PATU = 4)  begin  if (@PACGBWIPIDX = 0)  begin  select @PACOGSIDXFlag = 1  end  else  begin  select @PAWIPIDXFlag = 1  end  end  end  end  else   begin  select @PACOGSIDXFlag = 1   end  end  else   begin  select @PAWIPIDXFlag = 1  end  end  end  end   if (@I_vPOPTYPE = 1)  begin  select @AccruedPuchasesIDXFlag = 1    end  else   begin  if (@NONINVEN = 1)  begin  select @PAContraAccountIDXFlag = 1  end  else  begin  select @PAContraAccountIDXFlag = 1  end  end  end   if (@PACOSTCATID <> '<NONE>') and (@PAPROJNUMBER = '<NONE>')  begin  select @PACOGSIDXFlag = 1   if (@I_vPOPTYPE = 1)  begin  select @AccruedPuchasesIDXFlag = 1  end  else   begin  select @PAContraAccountIDXFlag = 1  end   end   if (@PACOSTCATID = '<NONE>') and (@PAPROJNUMBER = '<NONE>')  begin  if exists (select 1 from IV00101 (nolock) where ITEMNMBR = @ITEMNMBR)  begin  if (@dropship = 0)  begin  select @InventoryIDXFlag = 1  end  else  begin  select @InventoryIDXFlag = 1  end  end  else  begin  if (@INVINDX = 0)  begin  select @PMPRCHIX = PMPRCHIX from PM00200 (nolock) where VENDORID = @I_vVENDORID   if (@PMPRCHIX <> 0)  begin  select @PMPuchasesIDXFlag = 1  end  else  begin  select @InventoryIDXFlag = 1  end  end  else  begin  select @InventoryIDXFlag = 1   end  if (@PApurordnum <> '')  begin  select @InventoryIDXFlag = 1  end  end   if (@I_vPOPTYPE = 2)  begin  select @AccruedPuchasesIDXFlag = 1   end  else   begin   select @PAContraAccountIDXFlag = 1  end   end   if (@PAWIPIDXFlag = 1)  begin  select @RcptIndex = (select INVINDX from POP10310 where RCPTLNNM = @RCPTLNNM and POPRCTNM = @I_vPOPRCTNM)   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  15,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then round(isnull(sum(b.QTYSHPPD * c.ORUNTCST) * @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then round(isnull(sum(b.QTYSHPPD * c.ORUNTCST) / @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE = 0  then round(isnull(sum(b.QTYSHPPD * c.UNITCOST),0),@FUNDECPLCUR)  else 0  end,  0,  round(isnull(sum(b.QTYSHPPD * c.ORUNTCST),0),@FUNDECPLCUR),    0,  case  when @RcptIndex <> 0 then @RcptIndex   else PACGBWIPIDX  end,  @I_vXCHGRATE  from PA10702 a (nolock), POP10500 b (nolock), POP10310 c (nolock)  where a.PAVIDN = @I_vPOPRCTNM and a.RCPTLNNM = @RCPTLNNM  and a.PACGBWIPIDX <> 0 and  a.PAVIDN = b.POPRCTNM and a.RCPTLNNM = b.RCPTLNNM and a.RCPTLNNM = c.RCPTLNNM and  a.PAVIDN = c.POPRCTNM  group by PACGBWIPIDX  end   if (@PACOGSIDXFlag = 1)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  17,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then round(isnull(sum(b.QTYSHPPD * c.ORUNTCST) * @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then round(isnull(sum(b.QTYSHPPD * c.ORUNTCST) / @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE = 0  then round(isnull(sum(b.QTYSHPPD * c.UNITCOST),0),@FUNDECPLCUR)  else 0  end,  0,  isnull(sum(b.QTYSHPPD * c.ORUNTCST),0),  0,PACogs_Idx,  @I_vXCHGRATE  from PA10702 a (nolock), POP10500 b (nolock), POP10310 c (nolock)  where a.PAVIDN = @I_vPOPRCTNM and a.RCPTLNNM = @RCPTLNNM  and a.PACogs_Idx <> 0 and  a.PAVIDN = b.POPRCTNM and a.RCPTLNNM = b.RCPTLNNM and a.RCPTLNNM = c.RCPTLNNM and  a.PAVIDN = c.POPRCTNM  group by PACogs_Idx  end   if (@PAContraAccountIDXFlag = 1)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select 18,  0,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then round(isnull(sum((b.QTYINVCD * c.ORUNTCST)+ c.ORTAXAMT) * @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then round(isnull(sum((b.QTYINVCD * c.ORUNTCST)+ c.ORTAXAMT) / @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE = 0  then round(isnull(sum((b.QTYINVCD * c.UNITCOST)+ c.TAXAMNT),0),@FUNDECPLCUR)  else 0  end,  0,  isnull(sum((b.QTYINVCD * c.ORUNTCST)+ c.ORTAXAMT),0),  PAContra_Account_IDX,  @I_vXCHGRATE  from PA10702 a (nolock), POP10500 b (nolock), POP10310 c (nolock)  where a.PAVIDN = @I_vPOPRCTNM and a.RCPTLNNM = @RCPTLNNM  and a.PAContra_Account_IDX <> 0 and  a.PAVIDN = b.POPRCTNM and a.RCPTLNNM = b.RCPTLNNM and a.RCPTLNNM = c.RCPTLNNM and  a.PAVIDN = c.POPRCTNM  group by PAContra_Account_IDX  end   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  16,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then round(isnull(sum(PAORIACCRREV) * @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then round(isnull(sum(PAORIACCRREV) / @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE = 0  then round(isnull(sum(PAACREV),0),@FUNDECPLCUR)  else 0  end,  0,  isnull(sum(PAORIACCRREV),0),  0,  PAUnbilled_AR_Idx,  @I_vXCHGRATE  from PA10702 (nolock) where PAVIDN = @I_vPOPRCTNM and RCPTLNNM = @RCPTLNNM  and PAUnbilled_AR_Idx <> 0   group by PAUnbilled_AR_Idx   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  20,  0,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then round(isnull(sum(PAORIACCRREV) * @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then round(isnull(sum(PAORIACCRREV) / @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE = 0  then round(isnull(sum(PAACREV),0),@FUNDECPLCUR)  else 0  end,  0,  isnull(sum(PAORIACCRREV),0),  PAUnbilled_Proj_Rev_Idx,  @I_vXCHGRATE  from PA10702 (nolock) where PAVIDN = @I_vPOPRCTNM and RCPTLNNM = @RCPTLNNM  and PAUnbilled_Proj_Rev_Idx <> 0  group by PAUnbilled_Proj_Rev_Idx   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX, XCHGRATE)  select  19,  0,  case  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 0  then round(isnull(sum(PAORIGTOTOVRHD) * @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE <> 0 and @I_vRTCLCMTD = 1  then round(isnull(sum(PAORIGTOTOVRHD) / @I_vXCHGRATE,0), @FUNDECPLCUR)  when @I_vXCHGRATE = 0  then round(isnull(sum(PAORIGTOTOVRHD),0),@FUNDECPLCUR)  else 0  end,  0,  isnull(sum(PAORIGTOTOVRHD),0),  PAOverhead_IDX,  @I_vXCHGRATE  from PA10702 (nolock) where PAVIDN = @I_vPOPRCTNM and RCPTLNNM = @RCPTLNNM  and PAOverhead_IDX<>0  group by PAOverhead_IDX   select @PAWIPIDXFlag = 0,  @PACOGSIDXFlag = 0,  @PAContraAccountIDXFlag = 0   fetch next from PAPOReceivingCreateDist into @PApurordnum,@PAPROJNUMBER,@PACOSTCATID,@ITEMNMBR,@RCPTLNNM,@PACGBWIPIDX  end  end  deallocate PAPOReceivingCreateDist  end   declare DistLine INSENSITIVE cursor for select  t1.DTYPE,  t1.DTAMT,  t1.CTAMT,  t1.ORDTAMT,  t1.ORCTAMT,  t1.DTINDEX,  t1.XCHGRATE   from #temp a, ((select sum(DTAMT) DTAMT, sum(CTAMT) CTAMT, sum(ORDTAMT) ORDTAMT, sum(ORCTAMT) ORCTAMT, DTYPE DTYPE,   DTINDEX DTINDEX, XCHGRATE XCHGRATE from #temp  where (DTAMT > 0) group by DTYPE,DTINDEX,XCHGRATE)  union  (select sum(DTAMT) DTAMT, sum(CTAMT) CTAMT, sum(ORDTAMT) ORDTAMT, sum(ORCTAMT) ORCTAMT, DTYPE DTYPE,   DTINDEX DTINDEX, XCHGRATE XCHGRATE from #temp  where (CTAMT > 0) group by DTYPE,DTINDEX,XCHGRATE)) t1   where a.DTYPE = t1.DTYPE and a.DTINDEX = t1.DTINDEX   group by t1.DTYPE,  t1.DTAMT,  t1.CTAMT,  t1.ORDTAMT,  t1.ORCTAMT,  t1.DTINDEX,  t1.XCHGRATE   open DistLine  select @iCursorError = @@cursor_rows   if (@iCursorError > 0)  begin  fetch next from DistLine into  @cDTYPE,  @cDTAMT,  @cCTAMT,  @ORDTAMT,  @ORCTAMT,  @cINDEX,  @XCHGRATE  while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 7135   break  end   if (@cDTAMT <> @cCTAMT)  begin  exec @iStatus = taPopDistributionBuild  @I_vPOPTYPE,  @I_vPOPRCTNM,  @I_vVENDORID,  '',  @cINDEX,  @cDTAMT,  @cCTAMT,  @cDTYPE,  @I_vCURRNIDX,  @ORDTAMT,  @ORCTAMT,  @I_vCURNCYID,  @I_vRATETPID,  @I_vEXGTBLID,  @XCHGRATE,  @I_vEXCHDATE,  @I_vTIME1,  @I_vRTCLCMTD,  @O_oErrorState output,  @oErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@O_oErrorState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @oErrString  select @O_iErrorState = 7133    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  deallocate DistLine  return (@O_iErrorState)  end  end   fetch next from DistLine into  @cDTYPE,  @cDTAMT,  @cCTAMT,  @ORDTAMT,  @ORCTAMT,  @cINDEX,  @XCHGRATE  end  end  deallocate DistLine end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'AAG00102') begin  if exists(select 1 from DYNAMICS..AAG00102 (nolock) where CMPANYID = @I_vCMPANYID)  begin   exec @iStatus = aagCreateSubWorkDist  @aaSubLedgerHdrID out,  0,   @I_vPOPTYPE,   @I_vPOPRCTNM,  '',   10390,  12,   @I_vCMPANYID,   0,  @I_vCURNCYID,   @I_vCURRNIDX,   @I_vRATETPID,   @I_vEXGTBLID,   @I_vXCHGRATE,   @I_vEXCHDATE,   @I_vTIME1,  @I_vRTCLCMTD,   0,  0,   @I_vDECPLUSED,   1,   @I_vINTERID,   0,   0,  '',  @O_iErrorStateAASub output,  @O_iErrorStringAASub output   if (@@error <> 0)   begin  select @O_iErrorState = 8194    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  if @aaSubLedgerHdrID <> 0  begin  exec @iStatus = taProcessAnalytics  @I_vDOCNMBR = @I_vPOPRCTNM,  @I_vKey = @I_vPOPRCTNM,  @I_vDOCTYPE = 0,  @O_iErrorState = @itaProcessAnalyticsErrState output,  @oErrString = @itaProcessAnalyticsErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@itaProcessAnalyticsErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @itaProcessAnalyticsErrString  select @O_iErrorState = 8195    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  end  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopCreateDistributions] TO [DYNGRP]
GO

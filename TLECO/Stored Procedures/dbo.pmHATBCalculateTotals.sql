SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmHATBCalculateTotals]  @I_tUsingDocumentDate tinyint  = NULL,  @I_dStartDate datetime = NULL,  @I_dEndDate datetime = NULL,  @I_dAgingDate datetime = NULL,  @I_tExcludeUnpostedAppldCrDocs  tinyint  = NULL,  @I_cFunctionalCurrency char(15) = NULL,  @I_tMCRegistered tinyint  = NULL,  @I_sPrintCurrencyIn smallint = NULL,  @I_nReportingExchangeRate numeric(15,7) = NULL,  @I_sReportingRateCalcMethod smallint = NULL,  @I_sReportingDecimalPlaces smallint = NULL,  @O_iErrorState                  int             = NULL output as  declare  @TRUE smallint,  @FALSE smallint,  @cUsingDocumentDate char(1),  @cStartDate char(12),  @cEndDate char(12),  @cAgingDate char(12),  @cExcludeUnpostedFlag char(1),  @vExcludeUnpostedAppldCrDocs varchar(255),  @vExcludeApplyDateRange1 varchar(255),  @vExcludeApplyDateRange2 varchar(255),  @cPrintCurrencyIn char(1),  @cMCRegistered char(1),  @cReportingExchangeRate char(20),  @cReportingRateCalcMethod char(1),  @cReportingDecimalPlaces char(1),  @tLoopControl            tinyint,  @iStatus int,  @iError                  int  select @O_iErrorState = 0  select @iStatus = 0  select  @TRUE  = 1,  @FALSE = 0  while @tLoopControl is NULL begin  select @tLoopControl = 1   if @I_tUsingDocumentDate is NULL or  @I_dStartDate is NULL or  @I_dEndDate is NULL or  @I_dAgingDate is NULL or  @I_tExcludeUnpostedAppldCrDocs is NULL or  @I_cFunctionalCurrency is NULL or  @I_tMCRegistered is NULL or  @I_sPrintCurrencyIn is NULL or  @I_nReportingExchangeRate is NULL or  @I_sReportingRateCalcMethod is NULL or  @I_sReportingDecimalPlaces is NULL  begin  select @O_iErrorState = 21025  break  end    select @cUsingDocumentDate = convert(char(1),@I_tUsingDocumentDate),  @cStartDate = '''' + convert(char(10),@I_dStartDate,102) + '''',  @cEndDate = '''' + convert(char(10),@I_dEndDate,102) + '''',  @cAgingDate = '''' + convert(char(10),@I_dAgingDate,102) + '''',  @cExcludeUnpostedFlag = convert(char(1),@I_tExcludeUnpostedAppldCrDocs)   select @cMCRegistered = convert(char(1),@I_tMCRegistered)  select @cPrintCurrencyIn = convert(char(1),@I_sPrintCurrencyIn)  select @cReportingExchangeRate = convert(char(16),@I_nReportingExchangeRate)  select @cReportingRateCalcMethod = convert(char(1),@I_sReportingRateCalcMethod)  select @cReportingDecimalPlaces = convert(char(1),@I_sReportingDecimalPlaces)   update  #DocumentTEMP  set  DiscountTakenAmount =    DiscountTakenAmount -   case  WHEN (OpenRecord = 1) THEN  isnull((select sum(  case WHEN @I_sPrintCurrencyIn = 1 and @I_tMCRegistered = 1 then  case when @I_sReportingRateCalcMethod = 1 then  ISNULL(ROUND((DISTKNAM * @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  +  ISNULL(ROUND((GSTDSAMT * @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  else  ISNULL(ROUND((DISTKNAM / @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  +  ISNULL(ROUND((GSTDSAMT / @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  end  ELSE  DISTKNAM + GSTDSAMT  end )  from  PM10200 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM10200.APTVCHNM  and #DocumentTEMP.DocumentType  = PM10200.APTODCTY),0.00)  ELSE  isnull((select sum(  case WHEN @I_sPrintCurrencyIn = 1 and @I_tMCRegistered = 1 then  case when @I_sReportingRateCalcMethod = 1 then  ISNULL(ROUND((DISTKNAM * @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  +  ISNULL(ROUND((GSTDSAMT * @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  else  ISNULL(ROUND((DISTKNAM / @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  +  ISNULL(ROUND((GSTDSAMT / @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  end  ELSE  DISTKNAM + GSTDSAMT  end )  from  PM30300 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM30300.APTVCHNM  and #DocumentTEMP.DocumentType  = PM30300.APTODCTY),0.00)  end,   WriteoffAmount =   WriteoffAmount -   case  WHEN (OpenRecord = 1) THEN  isnull((select sum(  case WHEN @I_sPrintCurrencyIn = 1 and @I_tMCRegistered = 1 then  case when @I_sReportingRateCalcMethod = 1 then  ISNULL(ROUND((WROFAMNT * @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  else  ISNULL(ROUND((WROFAMNT / @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  end  ELSE  WROFAMNT  end )  from  PM10200 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM10200.APTVCHNM  and #DocumentTEMP.DocumentType  = PM10200.APTODCTY),0.00)  ELSE  isnull((select sum(  case WHEN @I_sPrintCurrencyIn = 1 and @I_tMCRegistered = 1 then  case when @I_sReportingRateCalcMethod = 1 then  ISNULL(ROUND((WROFAMNT * @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  else  ISNULL(ROUND((WROFAMNT / @I_nReportingExchangeRate),   @I_sReportingDecimalPlaces),0.00)  end  ELSE  WROFAMNT  end )  from  PM30300 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM30300.APTVCHNM  and #DocumentTEMP.DocumentType  = PM30300.APTODCTY),0.00)  end,   OrigDiscTakenAmount =    OrigDiscTakenAmount -   case  WHEN (OpenRecord = 1) THEN  isnull((select  sum(ORDISTKN)  from  PM10200 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM10200.APTVCHNM  and #DocumentTEMP.DocumentType  = PM10200.APTODCTY  and ((PM10200.FROMCURR <> '''' and PM10200.FROMCURR <> @I_cFunctionalCurrency)  or (PM10200.CURNCYID <> '''' and PM10200.CURNCYID <> @I_cFunctionalCurrency))),0.00)  ELSE  isnull((select  sum(ORDISTKN)  from  PM30300 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM30300.APTVCHNM  and #DocumentTEMP.DocumentType  = PM30300.APTODCTY  and ((PM30300.FROMCURR <> '''' and PM30300.FROMCURR <> @I_cFunctionalCurrency)  or (PM30300.CURNCYID <> '''' and PM30300.CURNCYID <> @I_cFunctionalCurrency))),0.00)  end,   OrigWriteoffAmount =   OrigWriteoffAmount -   case  WHEN (OpenRecord = 1) THEN  isnull((select  sum(ORWROFAM)  from  PM10200 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM10200.APTVCHNM  and #DocumentTEMP.DocumentType  = PM10200.APTODCTY  and ((PM10200.FROMCURR <> '''' and PM10200.FROMCURR <> @I_cFunctionalCurrency)  or (PM10200.CURNCYID <> '''' and PM10200.CURNCYID <> @I_cFunctionalCurrency))),0.00)  ELSE  isnull((select  sum(ORWROFAM)  from  PM30300 with (NOLOCK)  where  #DocumentTEMP.VoucherNumber = PM30300.APTVCHNM  and #DocumentTEMP.DocumentType  = PM30300.APTODCTY  and ((PM30300.FROMCURR <> '''' and PM30300.FROMCURR <> @I_cFunctionalCurrency)  or (PM30300.CURNCYID <> '''' and PM30300.CURNCYID <> @I_cFunctionalCurrency))),0.00)  end  where  #DocumentTEMP.DocumentType < 4   exec('update  #DocumentTEMP  set  CurrentTrxAmount =  DocumentAmount -  SettledGainOrLoss -  SettledDiscAvail -  RevalDocAmountAdj -  DiscountTakenAmount -   isnull((select  sum(AppliedAmount + DiscountTakenAmount + GSTDiscountAmount + WriteoffAmount + PPSAmount)  from  #ApplyTEMP WITH(INDEX(AK1ApplyTEMP))  where  #DocumentTEMP.VoucherNumber = #ApplyTEMP.ApplyToVoucherNumber  and #DocumentTEMP.DocumentType  = #ApplyTEMP.ApplyToDocumentType),0.00),  OrigCurrentTrxAmount =  OrigDocumentAmount -  OrigDiscTakenAmount -  isnull((select  sum(OrigAppliedAmount + OrigDiscTakenAmount + OrigWriteoffAmount)  from  #ApplyTEMP WITH(INDEX(AK1ApplyTEMP))  where  #DocumentTEMP.VoucherNumber = #ApplyTEMP.ApplyToVoucherNumber  and #DocumentTEMP.DocumentType  = #ApplyTEMP.ApplyToDocumentType),0.00),  DiscountTakenAmount =   DiscountTakenAmount +  isnull((select  sum(DiscountTakenAmount + GSTDiscountAmount)  from  #ApplyTEMP WITH(INDEX(AK1ApplyTEMP))  where  #DocumentTEMP.VoucherNumber = #ApplyTEMP.ApplyToVoucherNumber  and #DocumentTEMP.DocumentType  = #ApplyTEMP.ApplyToDocumentType),0.00),  WriteoffAmount =   WriteoffAmount +  isnull((select  sum(WriteoffAmount + PPSAmount)  from  #ApplyTEMP WITH(INDEX(AK1ApplyTEMP))  where  #DocumentTEMP.VoucherNumber = #ApplyTEMP.ApplyToVoucherNumber  and #DocumentTEMP.DocumentType  = #ApplyTEMP.ApplyToDocumentType),0.00),  OrigDiscTakenAmount =   OrigDiscTakenAmount +  isnull((select  sum(OrigDiscTakenAmount)  from  #ApplyTEMP WITH(INDEX(AK1ApplyTEMP))  where  #DocumentTEMP.VoucherNumber = #ApplyTEMP.ApplyToVoucherNumber  and #DocumentTEMP.DocumentType  = #ApplyTEMP.ApplyToDocumentType),0.00),  OrigWriteoffAmount =   OrigWriteoffAmount +  isnull((select  sum(OrigWriteoffAmount)  from  #ApplyTEMP WITH(INDEX(AK1ApplyTEMP))  where  #DocumentTEMP.VoucherNumber = #ApplyTEMP.ApplyToVoucherNumber  and #DocumentTEMP.DocumentType  = #ApplyTEMP.ApplyToDocumentType),0.00),  RevalDiscAmountAvailAdj = RevalDiscAmountAvailAdj +  (CASE when ' + @cAgingDate + ' <= DiscountDate then  isnull((select  CASE when ' + @cPrintCurrencyIn + ' = 1 and ' + @cMCRegistered + ' = 1 then  CASE when ' + @cReportingRateCalcMethod + ' = 1 then  ISNULL(round((A.Total_Gain_or_Loss_on_Di * ' + @cReportingExchangeRate + '), ' + @cReportingDecimalPlaces + '), 0.00)  else  ISNULL(round((A.Total_Gain_or_Loss_on_Di / ' + @cReportingExchangeRate + '), ' + @cReportingDecimalPlaces + '), 0.00)  end  else  ISNULL(A.Total_Gain_or_Loss_on_Di, 0.00)  end  from  MC020105 A with (NOLOCK)  where   A.CURNCYID = #DocumentTEMP.CurrencyID  and  A.VCHRNMBR = #DocumentTEMP.VoucherNumber  and  A.DOCTYPE  = #DocumentTEMP.DocumentType  and   convert(char(10), A.RVLUDATE, 102) + convert(char(10), A.SEQNUMBR)  = (select max(convert(char(10), B.RVLUDATE, 102) + convert(char(10), B.SEQNUMBR))  from  MC020105 B with (NOLOCK)  where  B.CURNCYID = #DocumentTEMP.CurrencyID  and B.VCHRNMBR = #DocumentTEMP.VoucherNumber  and  B.DOCTYPE  = #DocumentTEMP.DocumentType)), 0.00)  else  0.00  end)  where  #DocumentTEMP.DocumentType < 4')   if @I_tExcludeUnpostedAppldCrDocs = 1  select @vExcludeUnpostedAppldCrDocs = ' and POSTED = 1'  else  select @vExcludeUnpostedAppldCrDocs = ''   if @I_tUsingDocumentDate = 1  begin  select @vExcludeApplyDateRange1 = ' and DATE1 BETWEEN ' + @cStartDate + ' and ' + @cEndDate  select @vExcludeApplyDateRange2 = ' and APTODCDT BETWEEN ' + @cStartDate + ' and ' + @cEndDate  end  else  begin  select @vExcludeApplyDateRange1 = ' and  BETWEEN ' + @cStartDate + ' and ' + @cEndDate  select @vExcludeApplyDateRange2 = ' and ApplyToGLPostDate BETWEEN ' + @cStartDate + ' and ' + @cEndDate  end   Exec @iStatus = pmHATBCalculatePaymentTotals  @I_tUsingDocumentDate,  @I_dStartDate,  @I_dEndDate,  @I_tExcludeUnpostedAppldCrDocs,  @I_cFunctionalCurrency,  @I_tMCRegistered,  @I_sPrintCurrencyIn,  @I_nReportingExchangeRate,  @I_sReportingRateCalcMethod,  @I_sReportingDecimalPlaces,  @O_iErrorState   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break  end   return   
GO
GRANT EXECUTE ON  [dbo].[pmHATBCalculateTotals] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[pmHATBCalculateTotals] TO [rpt_accounting manager]
GO
GRANT EXECUTE ON  [dbo].[pmHATBCalculateTotals] TO [rpt_accounts payable coordinator]
GO
GRANT EXECUTE ON  [dbo].[pmHATBCalculateTotals] TO [rpt_bookkeeper]
GO
GRANT EXECUTE ON  [dbo].[pmHATBCalculateTotals] TO [rpt_executive]
GO

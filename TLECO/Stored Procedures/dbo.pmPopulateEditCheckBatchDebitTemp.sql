SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[pmPopulateEditCheckBatchDebitTemp]  @I_cDebitTemp char(40) = NULL,  @I_cBatchSource char(15) = NULL,  @I_cBatchNumber char(15) = NULL,  @I_tFuncBatch tinyint=NULL,  @I_cFuncCurrencyID char(15) = NULL,  @I_cVendorID char(15) = NULL,  @O_iErrorState int          = NULL output as  declare  @cBatchNumber char(32),  @cBatchSource char(32),  @cVendorID char(32),  @cFuncCurrencyID char(32),  @cRemittance   char(32),  @iError int,  @iStatus int,  @TRUE int,  @FALSE int  select  @O_iErrorState   = 0,  @iStatus         = 0   if @I_cDebitTemp is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_cVendorID is NULL or  @I_tFuncBatch is NULL or  @I_cFuncCurrencyID is NULL  begin  select @O_iErrorState = 21096  return  end    exec @iStatus = DYNAMICS..smGetConstantInt 'TRUE', @TRUE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantInt 'FALSE', @FALSE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantString 'KEYSOURCE_PM', @cRemittance output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchNumber,  @cBatchNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchSource,  @cBatchSource output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cVendorID,  @cVendorID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cFuncCurrencyID,  @cFuncCurrencyID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @cRemittance,  @cRemittance output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   exec ('delete ' + @I_cDebitTemp)   exec('insert into ' + @I_cDebitTemp + '  select  T.VENDORID,  T.VCHRNMBR,  T.DOCNUMBR,  T.DOCTYPE,  T.DUEDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.CURTRXAM  else  M.ORCTRXAM  end,  (select isnull(sum(distinct  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T2.CURNCYID = ''''  or T2.CURNCYID = ' + @cFuncCurrencyID + ' then   A.APPLDAMT  else  A.ORAPPAMT  end  ),0)   from PM10300 P, PM20100 A, PM20000 T2  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and T2.VCHRNMBR = T.VCHRNMBR  and T2.DOCTYPE = T.DOCTYPE  and P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  and P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE),  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DOCAMNT  else  M.ORDOCAMT  end,  T.DISCDATE,  T.DOCDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  case when T.DISAMTAV - T.DISTKNAM > 0 then  T.DISAMTAV - T.DISTKNAM  else  0  end  else  case when M.ODISAMTAV - M.ORDISTKN > 0 then  M.ODISAMTAV - M.ORDISTKN  else  0  end  end,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DISTKNAM  else  M.ORDISTKN  end,  T.TRXDSCRN,  case when T.CURNCYID = '''' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end,  case when exists (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  then  (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  else  0  end,  case when (select sum(A.APPLDAMT) from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  and not(P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  ) > 0 then  1  else  0  end,  case when exists(select 1 from PM10300 P, PM20100 A  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  and P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE) then  1  else  0  end  from  PM20000 T left outer join MC020103 M  on M.VCHRNMBR = T.VCHRNMBR  and M.DOCTYPE = T.DOCTYPE  where  exists (select 1 from PM20100 A  where   A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (  P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or P.PMNTNMBR = A.Payment_To_Print_On_Stub  )  )  or (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  )  ')   exec('insert into ' + @I_cDebitTemp + '  select  T.VENDORID,  T.VCHRNMBR,  T.DOCNUMBR,  T.DOCTYPE,  T.DUEDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.CURTRXAM  else  M.ORCTRXAM  end,  (select isnull(sum(distinct  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T2.CURNCYID = ''''  or T2.CURNCYID = ' + @cFuncCurrencyID + ' then   A.APPLDAMT  else  A.ORAPPAMT  end  ),0)   from PM10300 P, PM20100 A, PM30200 T2  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and T2.VCHRNMBR = T.VCHRNMBR  and T2.DOCTYPE = T.DOCTYPE  and P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  and P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE),  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DOCAMNT  else  M.ORDOCAMT  end,  T.DISCDATE,  T.DOCDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  case when T.DISAMTAV - T.DISTKNAM > 0 then  T.DISAMTAV - T.DISTKNAM  else  0  end  else  case when M.ODISAMTAV - M.ORDISTKN > 0 then  M.ODISAMTAV - M.ORDISTKN  else  0  end  end,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DISTKNAM  else  M.ORDISTKN  end,  T.TRXDSCRN,  case when T.CURNCYID = '''' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end,  case when exists (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  then  (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  else  0  end,  case when (select sum(A.APPLDAMT) from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  and not(P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  ) > 0 then  1  else  0  end,  case when exists(select 1 from PM10300 P, PM20100 A  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  and P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE) then  1  else  0  end  from  PM30200 T left outer join MC020103 M  on M.VCHRNMBR = T.VCHRNMBR  and M.DOCTYPE = T.DOCTYPE  where  exists (select 1 from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (  P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or P.PMNTNMBR = A.Payment_To_Print_On_Stub  )  )  or (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  )  ')   exec('insert into ' + @I_cDebitTemp + '  select  T.VENDORID,  T.VCHRNMBR,  T.DOCNUMBR,  T.DOCTYPE,  T.DUEDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.CURTRXAM  else  M.ORCTRXAM  end,  0,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DOCAMNT  else  M.ORDOCAMT  end,  T.DISCDATE,  T.DOCDATE,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  case when T.DISAMTAV - T.DISTKNAM > 0 then  T.DISAMTAV - T.DISTKNAM  else  0  end  else  case when M.ODISAMTAV - M.ORDISTKN > 0 then  M.ODISAMTAV - M.ORDISTKN  else  0  end  end,  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DISTKNAM  else  M.ORDISTKN  end,  T.TRXDSCRN,  case when T.CURNCYID = '''' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end,  case when exists (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  then  (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  else  0  end,  case when (select sum(A.APPLDAMT) from PM10300 P, PM20100 A  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = T.VCHRNMBR  and A.APTODCTY = T.DOCTYPE  and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  and not(P.PMNTNMBR = A.VCHRNMBR  and P.DOCTYPE = A.DOCTYPE)  ) > 0 then  1  else  0  end,  0  from  PM20000 T left outer join MC020103 M  on M.VCHRNMBR = T.VCHRNMBR  and M.DOCTYPE = T.DOCTYPE  where  T.VENDORID = ' + @cVendorID + '   and  T.DOCTYPE >= 1 and T.DOCTYPE <= 3  and  T.CURTRXAM > 0  and  not exists (select 1 from ' + @I_cDebitTemp + ' T2  where  T2.VENDORID = ' + @cVendorID + '   and T2.VCHRNMBR = T.VCHRNMBR  and T2.DOCTYPE = T.DOCTYPE  )  ')  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmPopulateEditCheckBatchDebitTemp] TO [DYNGRP]
GO

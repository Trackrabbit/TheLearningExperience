SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_Create_RTV] (@CreateAll tinyint,  @RMA char(15),  @Line numeric(19,5),  @ProcessLine as numeric(19,5),   @SerialSeq as int,  @SYSDate datetime,  @RTV char(15) output,  @RTVLine numeric(19,5) output,  @CMPNTSEQ int = 0  ) as declare @Status int declare @thisdate varchar(18) declare @thistime varchar(18) declare @SYSTime datetime declare @RMAType char(11) declare @RTVType char(11) declare @UoM char(8), @ReturnUoM char(8) declare @Qty numeric(19,5), @ReturnQty numeric(19,5) declare @RTVStatus char(3), @RTVName char(30) declare @Item char(31),@ReturnItem char(31) declare @Serial char(31), @ReturnSerial char(31) declare @Equip int, @ReturnEquip int declare @AddressCode char(15) declare @Vendor char(15), @RTVVendor char(15) declare @VendorItem char(31) declare @VendorName char(65) declare @UserID char(15) declare @CurrencyID char(15) declare @CallNumber char(11), @EQPLINE int,@LNITMSEQ int declare @address1 varchar(31) declare @address2 varchar(31) declare @address3 varchar(31) declare @city varchar(31) declare @Shipmethod varchar(15) declare @state varchar(30) declare @zip varchar(11) declare @country char(21) declare @ItemDescription char(51) declare @PARTAMOUNT numeric(19,2),  @LABORAMOUNT numeric(19,2),  @TRAVELAMOUNT numeric(19,2),  @MISCAMOUNT numeric(19,2) declare   @CURRNIDX  smallint,  @I_sRateCalcMethod  smallint ,           @I_sViewMode  smallint,            @I_nExchangeRate  numeric(15,7),       @I_nDenomExchangeRate numeric(15,7),       @I_sMCTrxState  smallint,            @I_sDecimalPlaces  smallint,           @RateType  char(15),  @ExchangeTableType char(15),  @ExchangeDate datetime,  @ExchangeTime datetime,  @ISMCTRX smallint,  @EXPNDATE datetime declare @MinDate datetime,@MfgDate datetime,@ExpDate datetime,@RecDate datetime declare @Tracking smallint declare @Received tinyint, @Location char(10), @Bin char(15), @LocationIn char(10) declare @EnableBin tinyint declare @l_exists tinyint, @ProcessExists tinyint declare @NoteIndex numeric(19,5),@DateSEQ numeric(19,5) declare @DECPLQTY numeric(19,5) declare @audit_desc char(100) declare @customer char(15), @Custaddresscode char(15), @DocNumber char(20) declare @ProcessType smallint, @LotSeq int, @NumberProcessed int declare @Createheader tinyint, @QtyInBase numeric(19,5), @RTVrouting smallint declare @QTYType smallint  select @UserID = SYSTEM_USER, @Createheader = 1 exec smGetMinDate @MinDate output  select @EnableBin = ENABLEMULTIBIN from IV40100  select @RMAType = RETTYPE, @customer = SVC05200.CUSTNMBR, @Custaddresscode = ADRSCODE,  @Equip = isnull(SVC05255.Return_Equipment_ID,''),  @Item = isnull(SVC05200.Return_Item_Number, ''),  @Serial = isnull(SVC05255.Return_Serial_Number,''),  @ExpDate = isnull(SVC05255.EXPNDATE,@MinDate),  @MfgDate = isnull(SVC05255.MFGDATE,@MinDate),  @RecDate = isnull(SVC05255.DATERECD,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  @DateSEQ = isnull(SVC05255.DTSEQNUM,0),  @Bin = isnull(SVC05255.BIN,''),@ReturnUoM = isnull(Return_U_Of_M,''),  @Qty = SVC05210.SVC_Process_QTY, @UoM = isnull(SVC05200.UOFM, ''),  @CallNumber = isnull(CALLNBR,''), @EQPLINE = isnull(EQPLINE,0) ,@LNITMSEQ = isnull(LNITMSEQ,0),  @Received = SVC05200.Received, @DECPLQTY = SVC05200.DECPLQTY,  @QTYType = SVC05210.QTYTYPE  from SVC05210 left join SVC05200 on   SVC05210.RETDOCID = SVC05200.RETDOCID and SVC05210.LNSEQNBR = SVC05200.LNSEQNBR and SVC05210.CMPNTSEQ = SVC05200.svcRMAComponentSeq  left join SVC05255 on SVC05255.RETDOCID = SVC05210.RETDOCID and SVC05210.LNSEQNBR = SVC05255.LNSEQNBR and SVC05210.SLTSQNUM = SVC05255.SLTSQNUM and SVC05210.CMPNTSEQ = SVC05255.CMPNTSEQ  where SVC05210.RETDOCID = @RMA and SVC05210.LNSEQNBR = @Line and SVC05210.SVC_Process_SEQ_Number = @ProcessLine and SVC05210.CMPNTSEQ = @CMPNTSEQ order by SVC05210.QTYTYPE select @CurrencyID = CURNCYID,  @I_sRateCalcMethod = RATECALC,   @I_sViewMode = 3,            @I_nExchangeRate = XCHGRATE,   @I_nDenomExchangeRate = DENXRATE,   @I_sDecimalPlaces = DECPLACS,   @I_sMCTrxState = MCTRXSTT,  @RateType = RATETPID,  @ExchangeTableType = EXGTBLID,  @ExchangeDate = EXCHDATE,  @ExchangeTime = TIME1,  @ISMCTRX = ISMCTRX,  @EXPNDATE = EXPNDATE  from SVC05000 where SVC05000.RETDOCID = @RMA  select @RTVType = RTV_Type from SVC05501 where RETTYPE = @RMAType  if @RTVType = '' or @RTVType is null   select @RTVType = RTV_Type from SVC00998 select @RTVStatus = RTV_Return_Status, @RTVName = DSCRIPTN, @LocationIn = LOCNCODE, @RTVrouting = RTV_Routing from SVC05003 where RTV_Type = @RTVType select @RTVStatus = isnull(@RTVStatus,''), @LocationIn = isnull(@LocationIn,'') select @SYSDate = isnull(@SYSDate,(CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00')) if @Received = 1 select @UoM = isnull(@ReturnUoM,@UoM)  if @Equip > 0   select @Vendor = VENDORID from SVC00300 where EQUIPID = @Equip if @Vendor = '' or @Vendor is null  select @Vendor = VENDORID from SVC00951 where ITEMNMBR = @Item select @Vendor = isnull(@Vendor,'')  if (select CNSOLDTD from SVC00998) = 1  exec SVC_RTV_FindAppendingRTV @RTV output, @RTVLine output, @Vendor, @RMA, @Line, @l_exists output, @QTYType if @l_exists = 1   begin  select @RTVVendor = isnull(VENDORID,'') from SVC05600 where RTV_Number = @RTV  if @Vendor > '' and @RTVVendor > '' and @Vendor = @RTVVendor  select @Createheader = 0  else if @Vendor = '' or @RTVVendor = ''  select  @Createheader = 0  if @Vendor = ''  select @Vendor = @RTVVendor  end if @Vendor > ''  begin  select @VendorItem = VNDITNUM from IV00103 where ITEMNMBR = @Item and VENDORID = @Vendor  select @VendorName = VENDNAME, @CurrencyID = CURNCYID from PM00200 where VENDORID = @Vendor  exec SVC_GetDefaultAddress @Vendor,@AddressCode output  exec SVC_RMA_Get_Vendor_Reimburse @Vendor,@Item,@RTVType,@CallNumber,  @PARTAMOUNT OUTPUT,@LABORAMOUNT OUTPUT, @TRAVELAMOUNT OUTPUT,@MISCAMOUNT OUTPUT  select @address1=ADDRESS1,@address2=ADDRESS2,@address3=ADDRESS3,@city=CITY,  @state=STATE,@zip=ZIPCODE,@country=COUNTRY, @Shipmethod = SHIPMTHD  from PM00300 where VENDORID = @Vendor and ADRSCODE = @AddressCode  if @CurrencyID = '' or @CurrencyID = null   begin  select @CurrencyID = FUNLCURR,@CURRNIDX = FUNCRIDX, @RateType = DEFPURTP from MC40000   end  end  if @CMPNTSEQ > 0 and @RTVLine > 0   begin  if exists(select * from SVC05210 where RETDOCID = @RMA and LNSEQNBR = @Line and SVC_Document_Number = @RTV and SVC_IV_SEQ_Number =@RTVLine and CMPNTSEQ <> @CMPNTSEQ)  select @RTVLine = 0  end  select @ItemDescription = ITEMDESC, @Tracking = ITMTRKOP from IV00101 where ITEMNMBR = @Item if @EnableBin = 1 and @Tracking = 1   select @Bin = BIN from SVC05212 where Return_Record_Type = 1 and RETDOCID =@RMA and LNSEQNBR = @Line  if @l_exists = 0 or @Createheader = 1  begin  exec @Status = SVC_New_DocumentID 'RTV', @RTV out  if @Status <> 0 return @Status  exec SVC_Get_Next_Note_Index @NoteIndex output  insert SVC05600 select   @RTV,  @RTVType,  @RTVStatus,  1,  '',  @RMA,  @Line,  isnull(@RTVName,''),  isnull(@Vendor,''),  isnull(@VendorName,''),  isnull(@AddressCode,''),  isnull(@VendorName,''),  isnull(@address1,''),  isnull(@address2,''),  isnull(@address3,''),  Isnull(@city,''),  isnull(@state,''),  isnull(@zip,''),  isnull(@country,''),  @SYSDate,  @MinDate + CONVERT(varchar(10),GETDATE(),108),  @MinDate,@MinDate,  @MinDate,@MinDate,  @MinDate,@MinDate,  @MinDate,@MinDate,  isnull(Return_Location_Code,''),  @LocationIn,  isnull(@PARTAMOUNT,0.0),  0,  isnull(@LABORAMOUNT,0.0),  0,  isnull(@MISCAMOUNT,0.0),  0,  isnull(@TRAVELAMOUNT,0.0),  0,  '',  isnull(@Shipmethod,''),  '',  '',  OFFID,  @NoteIndex,  '',  '',  '',  CUSTOWN,  @UserID,  '',  '',  '',  '',  '',  isnull(@CurrencyID,''),  isnull(@CURRNIDX,0),  isnull(@RateType,''),  isnull(@ExchangeTableType,''),  isnull(@I_nExchangeRate,0),  isnull(@ExchangeDate,@MinDate),  isnull(@I_sDecimalPlaces,0),  isnull(@ExchangeTime,@MinDate),  isnull(@I_sRateCalcMethod,0),  isnull(@I_sViewMode,0),  isnull(@ISMCTRX,0),  isnull(@EXPNDATE,@MinDate),  isnull(@I_nDenomExchangeRate,0),  isnull(@I_sMCTrxState,0),  isnull(@PARTAMOUNT,0.0),  0,  isnull(@LABORAMOUNT,0.0),  0,  isnull(@MISCAMOUNT,0.0),  0,  isnull(@TRAVELAMOUNT,0.0),  0,  0  from SVC05200 where RETDOCID = @RMA and SVC05200.LNSEQNBR = @Line and svcRMAComponentSeq = @CMPNTSEQ    end  if @RTVLine = 0 or @RTVLine is null  Begin  select @l_exists = 0  exec SVC_RTV_GetNewLineSeq @RTV, @RTVLine output  exec SVC_Get_Next_Note_Index @NoteIndex output   insert SVC05601 select   @RTV,  @RTVLine,  @RTVType,  1,  @RTVStatus,  '',  @RMA,  @Line,  @ProcessLine,  isnull(@RTVName,''),  '',  '',  isnull(@Item,''),  isnull(@ItemDescription,''),  isnull(@Tracking,1),  isnull(@DECPLQTY,1),  isnull(@Qty,0.0),  0,0,0,0,  isnull(@UoM,''),  isnull(VENDORID,''),  isnull(@VendorItem,''),  isnull(@Item,''),  OFFID,  LOCCODEB,  SVC05600.LOCNCODE,  ADRSCODE,  Ship_Address_Name,  Ship_Address_1,  Ship_Address_2,  Ship_Address_3,  Ship_City,  Ship_State,  ZIPCODE,  Ship_Country,  @SYSDate,  @MinDate + CONVERT(varchar(10),GETDATE(),108),  @MinDate,@MinDate,  @MinDate,@MinDate,  @MinDate,@MinDate,  @MinDate,@MinDate,  '',  0,  '',  0,  '',  0,  @CallNumber,  @EQPLINE,'P',@LNITMSEQ,  Bill_of_Lading_Out,  Shipping_Method_Out,  Bill_of_Lading,  SHIPMTHD,  '',  @NoteIndex,  '',  '',  '',  CUSTOWN,  '',  '',  '',  '',  '',  isnull(@PARTAMOUNT,0.0),  0,  isnull(@LABORAMOUNT,0.0),  0,  isnull(@MISCAMOUNT,0.0),  0,  isnull(@TRAVELAMOUNT,0.0),  0,  isnull(@PARTAMOUNT,0.0),  0,  isnull(@LABORAMOUNT,0.0),  0,  isnull(@MISCAMOUNT,0.0),  0,  isnull(@TRAVELAMOUNT,0.0),  0,  @QTYType  from SVC05600 where RTV_Number = @RTV  End  else  Begin  if @CreateAll <> 1   update SVC05601 set QUANTITY = QUANTITY+@Qty where RTV_Number = @RTV and RTV_Line = @RTVLine  End  if @CreateAll = 1   Begin  select @NumberProcessed = 0  if exists(select * from SVC05210 where RETDOCID = @RMA and LNSEQNBR = @Line and Return_Disposition_Statu =1)  select @ProcessExists = 1  else  select @ProcessExists = 0  declare Process_Line cursor for select SVC_Process_SEQ_Number, SVC_Document_Number, SVC_Process_Type, SVC_Process_QTY,  Return_Equipment_ID,  Return_Item_Number, Return_Serial_Number, SVC05210.QTYTYPE  from SVC05210 left join SVC05255 on SVC05255.RETDOCID = SVC05210.RETDOCID and SVC05210.LNSEQNBR = SVC05255.LNSEQNBR  and SVC05210.SLTSQNUM = SVC05255.SLTSQNUM and SVC05210.CMPNTSEQ = SVC05255.CMPNTSEQ  where SVC05210.RETDOCID = @RMA and SVC05210.LNSEQNBR = @Line and SVC05210.Return_Disposition_Statu = 0 and SVC05210.CMPNTSEQ = @CMPNTSEQ   open Process_Line   fetch next from Process_Line into @ProcessLine, @DocNumber, @ProcessType,  @Qty, @Equip, @Item, @Serial, @QTYType  while @@FETCH_STATUS = 0  Begin  if @DocNumber = '' and @ProcessType = 2  Begin  select @Location = LOCCODEB from SVC05601 where RTV_Number = @RTV and RTV_Line = @RTVLine  exec SVC_RTV_Create_SerialLot @RTV, @RTVLine, @Serial, @Item, @LocationIn,@Bin, @Vendor, @customer, @Custaddresscode, 1,@ExpDate,@MfgDate,@RecDate,@DateSEQ,@Qty, @Received, @QTYType  if @Received = 1   begin  if @Tracking = 2  update IV00200 set SERLNSLD  = 1 where ITEMNMBR = @Item and SERLNMBR = @Serial  if @Tracking = 3  update IV00300 set ATYALLOC = ATYALLOC + @Qty where ITEMNMBR = @Item and LOTNUMBR = @Serial and LOCNCODE = @Location  and DATERECD = @RecDate and DTSEQNUM = @DateSEQ  end  update SVC05210 set SVC_Document_Number = @RTV ,SVC_Process_Status = @RTVStatus, SVC_IV_SEQ_Number = @RTVLine,  Return_Disposition_Statu = 1 where Return_Record_Type = 1 and RETDOCID = @RMA   and LNSEQNBR = @Line and SVC05210.CMPNTSEQ = @CMPNTSEQ  and SVC_Process_SEQ_Number = @ProcessLine  select @NumberProcessed = @NumberProcessed + 1  End  fetch next from Process_Line into  @ProcessLine, @DocNumber, @ProcessType, @Qty, @Equip, @Item, @Serial, @QTYType  End  deallocate Process_Line   if @l_exists = 1 and @ProcessExists = 1  update SVC05601 set QUANTITY = QUANTITY + @NumberProcessed where RTV_Number = @RTV and RTV_Line = @RTVLine  else  update SVC05601 set QUANTITY = @NumberProcessed where RTV_Number = @RTV and RTV_Line = @RTVLine  select @Qty = @NumberProcessed, @Location = LOCCODEB from SVC05601 where RTV_Number = @RTV and RTV_Line = @RTVLine  End  else  Begin  if @Tracking = 1 and @EnableBin = 1  begin  select @Location = LOCNCODE, @Bin = BIN, @Qty = QUANTITY from SVC05212  where Return_Record_Type = 1 and RETDOCID = @RMA and LNSEQNBR = @Line  select @Location = isnull(@Location,''), @Qty = isnull(@Qty,0), @Bin = isnull(@Bin,'')  exec SVC_Bin_CreateBinWork 4, 0, @RTV, @RTVLine, @Item, @Location, '', @Bin, '', @Qty,0,@QTYType   end  else if @Tracking > 1  begin  select @Location = LOCCODEB from SVC05601 where RTV_Number = @RTV and RTV_Line = @RTVLine  exec SVC_RTV_Create_SerialLot @RTV, @RTVLine, @Serial, @Item, @LocationIn,@Bin, @Vendor, @customer, @Custaddresscode, 1,  @ExpDate,@MfgDate,@RecDate,@DateSEQ,@Qty, @Received, @QTYType  if @Received = 1  begin  if @Tracking = 2  update IV00200 set SERLNSLD  = 1 where ITEMNMBR = @Item and SERLNMBR = @Serial  if @Tracking = 3  update IV00300 set ATYALLOC = ATYALLOC + @Qty   where ITEMNMBR = @Item and LOTNUMBR = @Serial and LOCNCODE = @Location and DATERECD = @RecDate and DTSEQNUM = @DateSEQ and QTYTYPE = @QTYType  end  end  update SVC05210 set SVC_Document_Number = @RTV ,SVC_Process_Status = @RTVStatus, SVC_IV_SEQ_Number = @RTVLine,  Return_Disposition_Statu = 1 where Return_Record_Type = 1 and CMPNTSEQ = @CMPNTSEQ  and RETDOCID = @RMA and LNSEQNBR = @Line and SVC_Process_SEQ_Number = @ProcessLine   End   if @Received = 1 and (select CUSTOWN from SVC05601 where RTV_Number = @RTV and RTV_Line = @RTVLine) = 0 and @QTYType = 1  begin  if @EnableBin = 1 and @Bin > ''   begin  if exists(select * from IV00112 where ITEMNMBR = @Item and LOCNCODE = @Location and QTYTYPE = 1 and BIN = @Bin)  update IV00112 set ATYALLOC = ATYALLOC + @Qty where ITEMNMBR = @Item and LOCNCODE = @Location and QTYTYPE = 1 and BIN = @Bin  else  insert IV00112 select @Item, @Location, @Bin, 1, 0, @Qty  end  else  begin  select @Location = LOCCODEB from SVC05601 where RTV_Number = @RTV and RTV_Line = @RTVLine  exec SVC_Get_QtyInBase @Item,@UoM,1,@QtyInBase OUTPUT   select @Qty = @Qty * @QtyInBase  end   if @RTVrouting <> 3   exec SVC_Allocate_Quantity @Item, @Location, @Qty  end  select @audit_desc =  'Create RTV from RMA:' +@RMA exec SVC_Set_RTV_Dist @RTV, @RTVLine,'',0,0,0,0,0  exec SVC_Create_RTV_Audit  @RTV, @RTVLine,'', @RTVStatus, @audit_desc,@UserID,@SYSDate, @SYSDate  return @@ERROR    
GO
GRANT EXECUTE ON  [dbo].[SVC_Create_RTV] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create   procedure [dbo].[aagUpdateGLBankDep]  @CompanyID smallint,  @aaSubLedgerHdrID int,   @JRNENTRY int,  @ORTRXSRC char(13),  @GLPOSTDT datetime as  begin  declare @Cnt int,  @aaSubLedgerDistID int,  @aaGLWorkDistID int,  @lastDist int,  @aaGLWorkHdrID int,  @FUNLCURR char(15),  @CURRID char(15)   select @FUNLCURR = FUNLCURR from MC40000   Select @Cnt   = 0,  @aaSubLedgerDistID = 0,  @aaGLWorkDistID  = 0,  @lastDist  = 0,   @aaGLWorkHdrID  = 0   Select @Cnt=count(*) from GL10000 where SOURCDOC = 'CMDEP' and ORTRXSRC = @ORTRXSRC  set @lastDist = @Cnt * 2 - 1   Select @Cnt=count(*) from GL10001 where JRNENTRY=@JRNENTRY    exec DYNAMICS.dbo.aagGetNextID 10000, @CompanyID, @aaGLWorkHdrID output   insert into  AAG10000 (aaGLWorkHdrID,JRNENTRY,RCTRXSEQ,GLPOSTDT,aaTRXType,aaHdrErrors, Ledger_ID)  values(@aaGLWorkHdrID,@JRNENTRY,0,@GLPOSTDT,1,0,1 )  declare CSubDist cursor fast_forward for  Select aaSubLedgerDistID  from AAG20001  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID >= @lastDist and aaSubLedgerDistID < (@lastDist + @Cnt)  open CSubDist  fetch next from CSubDist into @aaSubLedgerDistID   while @@fetch_status = 0  begin   set @aaGLWorkDistID = @aaGLWorkDistID + 1  INSERT INTO AAG10001(aaGLWorkHdrID,aaGLWorkDistID,  INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,DECPLACS,FXDORVAR,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX,RATETPID,EXGTBLID,  XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,SQNCLINE,  aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,  aaCopyStatus,aaWinWasOpen,aaDistErrors,aaBrowseType,aaChangeDate, aaChangeTime)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,  INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,DECPLACS,dbo.aagFixedOrVar(ACTINDX),   DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX,RATETPID,EXGTBLID,  XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,SEQNUMBR,  aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,  aaCopyStatus,1,0,aaBrowseType,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108)  from AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID    INSERT INTO AAG10002(aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,aaAssignedPercent,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,DistRef,NOTEINDX)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,aaSubLedgerAssignID,aaAssignedPercent,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,DistRef,NOTEINDX  from AAG20002 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID    INSERT INTO AAG10003(aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,  aaTrxDimID,aaTrxCodeID,aaCodeErrors)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,aaSubLedgerAssignID,  aaTrxDimID,aaTrxCodeID,aaCodeErrors  from AAG20003 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID  SELECT  @CURRID = CURNCYID from AAG10001 WHERE aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID =  @aaGLWorkDistID   if  (@FUNLCURR = @CURRID) or len(rtrim(ltrim(@CURRID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @aaGLWorkDistID  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @aaGLWorkDistID  and aaGLWorkAssignID > 0  end    fetch next from CSubDist into @aaSubLedgerDistID   end  close CSubDist  deallocate CSubDist  end     
GO
GRANT EXECUTE ON  [dbo].[aagUpdateGLBankDep] TO [DYNGRP]
GO

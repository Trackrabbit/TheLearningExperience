SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagCreateGLforLandCostRecevingsTrx]  @DOCNUMBR VARCHAR(100),  @TRXSORCE VARCHAR(100),  @aaGLWorkHdrID INT,  @aaOrgTrxSrc   INT,  @l_ErrorCode SMALLINT = NULL OUTPUT AS  BEGIN   DECLARE   @PONUMBER VARCHAR(100),  @DOCTYPE Varchar(21),  @JRNENTRY INT,  @InterID CHAR(5),  @ACTINDX INT,  @aaGLWorkDistID INT,  @LCaaSubLedgerHdrID INT,  @LCaaSubLedgerDistID INT,  @CURNCYID CHAR(15),  @DECPLACS INT,  @GLPOSTDT DATETIME,  @USERID VARCHAR(100),  @O_nSQL_Error_State INT,  @l_nError INT,  @AccrPurch VARCHAR(31),  @Purchases VARCHAR(31),  @DSCRIPTN VARCHAR(31),  @CURRNIDX SMALLINT,  @DEBITAMT NUMERIC(19,7),  @ORDBTAMT NUMERIC(19,7),   @CRDTAMNT NUMERIC(19,7),  @ORCRDAMT NUMERIC(19,7),  @aaSubLedgerHdrID INT,  @HdrID INT,  @aaSubLedgerAssignID INT,  @aaAssignedPercent INT,  @aaGLWorkAssignID INT,  @aaGLWorkAssignID1 INT,  @AssignPercent INT,  @flag TINYINT   SELECT @InterID =DB_NAME(), @USERID = SYSTEM_USER, @DOCTYPE = 0, @flag = 0   exec    @l_ErrorCode = DYNAMICS.dbo.smGetMsgString 18736, @InterID, @AccrPurch output, @O_nSQL_Error_State output   SELECT @l_nError = @@ERROR   IF @l_ErrorCode = 0 and @l_nError <> 0   SELECT @l_ErrorCode = @l_nError   IF ( (@l_ErrorCode <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_ErrorCode)  exec    @l_ErrorCode = DYNAMICS.dbo.smGetMsgString 135, @InterID, @Purchases output, @O_nSQL_Error_State output   SELECT @l_nError = @@ERROR   IF @l_ErrorCode = 0 and @l_nError <> 0   SELECT @l_ErrorCode = @l_nError   IF ( (@l_ErrorCode <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_ErrorCode)   SELECT @aaSubLedgerHdrID = aaSubLedgerHdrID , @DOCTYPE = DOCTYPE FROM AAG20000 WHERE DOCNUMBR = @DOCNUMBR AND SERIES = 12 AND DOCTYPE <> 20  SELECT @LCaaSubLedgerHdrID = aaSubLedgerHdrID FROM AAG20000 WHERE DOCNUMBR = @DOCNUMBR AND SERIES = 12 AND DOCTYPE = 20   if (@aaSubLedgerHdrID = 0  OR @aaSubLedgerHdrID IS NULL) OR (@LCaaSubLedgerHdrID = 0  OR @LCaaSubLedgerHdrID IS NULL)   RETURN   SELECT aaSubLedgerDistID, aaSubLedgerHdrID INTO #Distribution FROM AAG20001 WHERE 1 = 2   SELECT @JRNENTRY = JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID = @aaGLWorkHdrID  SELECT @CURRNIDX = CURRNIDX, @CURNCYID = CURNCYID  FROM GL10000 WHERE JRNENTRY = @JRNENTRY   UPDATE AAG10001 SET CURNCYID=ISNULL(GL10000.CURNCYID,''), CURRNIDX = GL10001.CURRNIDX,   RATETPID = ISNULL(GL10001.RATETPID,''), EXGTBLID = ISNULL(GL10001.EXGTBLID,''),   XCHGRATE = GL10001.XCHGRATE, EXCHDATE = GL10001.EXCHDATE, TIME1 = GL10001.TIME1,   RTCLCMTD = GL10001.RTCLCMTD, DENXRATE = GL10001.DENXRATE, MCTRXSTT = GL10001.MCTRXSTT, aaWinWasOpen = 1  FROM GL10001 INNER JOIN GL10000 ON GL10000.JRNENTRY = GL10001.JRNENTRY AND GL10001.JRNENTRY = @JRNENTRY WHERE AAG10001.aaGLWorkHdrID = @aaGLWorkHdrID   DECLARE Cursor1 CURSOR LOCAL FAST_FORWARD FOR  SELECT A.aaGLWorkDistID ,A.ACTINDX, A.DEBITAMT, A.CRDTAMNT, A.ORDBTAMT, A.ORCRDAMT, GL10001.DSCRIPTN  FROM AAG10001 A INNER JOIN AAG10000 on AAG10000.aaGLWorkHdrID = A.aaGLWorkHdrID AND A.aaGLWorkHdrID = @aaGLWorkHdrID  INNER JOIN GL10001 ON GL10001.JRNENTRY = AAG10000.JRNENTRY AND GL10001.SQNCLINE = A.SQNCLINE ORDER BY A.SQNCLINE  OPEN Cursor1  FETCH NEXT FROM Cursor1 INTO @aaGLWorkDistID, @ACTINDX, @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT, @DSCRIPTN  WHILE @@FETCH_STATUS = 0  BEGIN  DELETE FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID  DELETE FROM AAG10003 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID   SELECT @LCaaSubLedgerDistID = 0   IF @DSCRIPTN = @AccrPurch  BEGIN  IF EXISTS (SELECT * FROM MC40000 WHERE FUNCRIDX = @CURRNIDX)   BEGIN  INSERT INTO #Distribution   SELECT aaSubLedgerDistID, @LCaaSubLedgerHdrID FROM AAG20001 WHERE aaSubLedgerHdrID = @LCaaSubLedgerHdrID AND   ACTINDX = @ACTINDX AND CURNCYID = @CURNCYID AND CURRNIDX = @CURRNIDX AND DISTTYPE IN (9,209) AND   DEBITAMT = @DEBITAMT AND CRDTAMNT = @CRDTAMNT AND ORDBTAMT = @ORDBTAMT AND ORCRDAMT = @ORCRDAMT  UNION  SELECT aaSubLedgerDistID, @aaSubLedgerHdrID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND   ACTINDX = @ACTINDX AND CURNCYID = @CURNCYID AND CURRNIDX = @CURRNIDX AND DISTTYPE IN (9,209) AND   DEBITAMT = @DEBITAMT AND CRDTAMNT = @CRDTAMNT AND ORDBTAMT = @ORDBTAMT AND ORCRDAMT = @ORCRDAMT  IF NOT EXISTS (SELECT TOP 1 1 FROM #Distribution)  BEGIN  INSERT INTO #Distribution   SELECT aaSubLedgerDistID, @aaSubLedgerHdrID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND   ACTINDX = @ACTINDX AND CURNCYID = @CURNCYID AND CURRNIDX = @CURRNIDX AND DISTTYPE IN (9,209)  IF NOT EXISTS (SELECT TOP 1 1 FROM #Distribution)  INSERT INTO #Distribution   SELECT aaSubLedgerDistID, @LCaaSubLedgerHdrID FROM AAG20001 WHERE aaSubLedgerHdrID = @LCaaSubLedgerHdrID AND   ACTINDX = @ACTINDX AND CURNCYID = @CURNCYID AND CURRNIDX = @CURRNIDX AND DISTTYPE IN (9,209)  END  END  ELSE  BEGIN  INSERT INTO #Distribution   SELECT aaSubLedgerDistID, @LCaaSubLedgerHdrID FROM AAG20001 WHERE aaSubLedgerHdrID = @LCaaSubLedgerHdrID AND   ACTINDX = @ACTINDX AND CURNCYID = @CURNCYID AND CURRNIDX = @CURRNIDX AND DISTTYPE IN (9,209)   IF NOT EXISTS (SELECT TOP 1 1 FROM #Distribution)  INSERT INTO #Distribution   SELECT aaSubLedgerDistID, @LCaaSubLedgerHdrID FROM AAG20001 WHERE aaSubLedgerHdrID = @LCaaSubLedgerHdrID AND   ACTINDX = @ACTINDX AND DISTTYPE IN (9,209)  END   DECLARE Cursor2 CURSOR LOCAL FAST_FORWARD FOR  SELECT aaSubLedgerDistID, aaSubLedgerHdrID FROM #Distribution  OPEN Cursor2  FETCH NEXT FROM Cursor2 INTO @LCaaSubLedgerDistID, @HdrID  WHILE @@FETCH_STATUS = 0  BEGIN  INSERT INTO AAG10002(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)   SELECT @aaGLWorkHdrID, @aaGLWorkDistID, -aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID   FROM AAG20002 WHERE aaSubLedgerHdrID = @HdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID   INSERT INTO AAG10003(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, aaTrxDimID, aaTrxCodeID, aaCodeErrors)   SELECT @aaGLWorkHdrID, @aaGLWorkDistID, -aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID, aaCodeErrors FROM AAG20003   WHERE aaSubLedgerHdrID = @HdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID  UPDATE AAG20001 SET POSTED = 1 WHERE aaSubLedgerHdrID = @HdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID   DECLARE Cursor3 CURSOR LOCAL FAST_FORWARD FOR  SELECT DISTINCT aaGLWorkAssignID FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID < 0 ORDER BY aaGLWorkAssignID DESC  OPEN Cursor3  FETCH NEXT FROM Cursor3 INTO @aaGLWorkAssignID  WHILE @@FETCH_STATUS = 0  BEGIN  SELECT @aaGLWorkAssignID1 = ISNULL(MAX(aaGLWorkAssignID),0)+1 FROM AAG10002 WHERE aaGLWorkHdrID=@aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID > 0  UPDATE AAG10002 SET aaGLWorkAssignID = @aaGLWorkAssignID1 WHERE aaGLWorkHdrID=@aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaGLWorkAssignID  UPDATE AAG10003 SET aaGLWorkAssignID = @aaGLWorkAssignID1 WHERE aaGLWorkHdrID=@aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaGLWorkAssignID   FETCH NEXT FROM Cursor3 INTO @aaGLWorkAssignID  END  CLOSE Cursor3  DEALLOCATE Cursor3   FETCH NEXT FROM Cursor2 INTO @LCaaSubLedgerDistID, @HdrID  END  CLOSE Cursor2  DEALLOCATE Cursor2  TRUNCATE TABLE #Distribution   UPDATE AAG10002 SET aaAssignedPercent = CASE (ORCRDAMT+ORDBTAMT)   WHEN 0 THEN ROUND(((CRDTAMNT+DEBITAMT)* 10000)/(@CRDTAMNT+@DEBITAMT),2)  ELSE ROUND(((ORCRDAMT+ORDBTAMT)* 10000)/(@ORCRDAMT+@ORDBTAMT),2)   END  WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID   SELECT @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID)  IF @AssignPercent <> 0 AND @AssignPercent > 9900   UPDATE AAG10002 SET aaAssignedPercent = aaAssignedPercent + (10000 - @AssignPercent),  CRDTAMNT= CRDTAMNT+(SELECT a1.CRDTAMNT - SUM(a2.CRDTAMNT) FROM AAG10002 a2 Inner JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.CRDTAMNT),  ORCRDAMT= ORCRDAMT+(SELECT a1.ORCRDAMT - SUM(a2.ORCRDAMT) FROM AAG10002 a2 Inner JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.ORCRDAMT),  DEBITAMT= DEBITAMT+(SELECT a1.DEBITAMT - SUM(a2.DEBITAMT) FROM AAG10002 a2 Inner JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.DEBITAMT),  ORDBTAMT= ORDBTAMT+(SELECT a1.ORDBTAMT - SUM(a2.ORDBTAMT) FROM AAG10002 a2 Inner JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.ORDBTAMT)  FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND   aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaGLWorkAssignID1   END  ELSE  BEGIN  SELECT TOP 1 @LCaaSubLedgerDistID = aaSubLedgerDistID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND DISTTYPE IN (1,201) AND ACTINDX = @ACTINDX   if @LCaaSubLedgerDistID = 0  BEGIN  SELECT TOP 1 @LCaaSubLedgerDistID = aaSubLedgerDistID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND DISTTYPE IN (7) AND ACTINDX = @ACTINDX  SET @flag = 1  END   DECLARE Assign CURSOR LOCAL FOR   SELECT aaSubLedgerAssignID,aaAssignedPercent FROM AAG20002   WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID  OPEN Assign  FETCH NEXT FROM Assign INTO @aaSubLedgerAssignID, @aaAssignedPercent  WHILE @@FETCH_STATUS = 0   BEGIN  IF @flag = 0  BEGIN  INSERT INTO AAG10002(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)  SELECT @aaGLWorkHdrID, @aaGLWorkDistID, @aaSubLedgerAssignID, (@DEBITAMT * @aaAssignedPercent)/10000, 0 , (@ORDBTAMT * @aaAssignedPercent)/10000, 0, [aaAssignedPercent], [DistRef], [NOTEINDX], [aaAssignErrors], [aaAliasID]  FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID AND  aaSubLedgerAssignID = @aaSubLedgerAssignID  END  ELSE  BEGIN  INSERT INTO AAG10002(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)  SELECT @aaGLWorkHdrID, @aaGLWorkDistID, @aaSubLedgerAssignID, 0 , (@CRDTAMNT * @aaAssignedPercent)/10000, 0, (@ORCRDAMT * @aaAssignedPercent)/10000, [aaAssignedPercent], [DistRef], [NOTEINDX], [aaAssignErrors], [aaAliasID]  FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID AND  aaSubLedgerAssignID = @aaSubLedgerAssignID  END  INSERT INTO AAG10003(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, aaTrxDimID, aaTrxCodeID, aaCodeErrors)   SELECT @aaGLWorkHdrID, @aaGLWorkDistID,@aaSubLedgerAssignID,aaTrxDimID,aaTrxCodeID,aaCodeErrors FROM AAG20003   WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @LCaaSubLedgerDistID AND  aaSubLedgerAssignID = @aaSubLedgerAssignID   FETCH NEXT FROM Assign INTO @aaSubLedgerAssignID,@aaAssignedPercent  END  CLOSE Assign  DEALLOCATE Assign  SET @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID)  IF @AssignPercent = 10000  BEGIN  IF @flag = 0  BEGIN  UPDATE AAG10002 SET   DEBITAMT= DEBITAMT+(SELECT a1.DEBITAMT - SUM(a2.DEBITAMT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.DEBITAMT),  ORDBTAMT= ORDBTAMT+(SELECT a1.ORDBTAMT - SUM(a2.ORDBTAMT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.ORDBTAMT)  FROM AAG10002   WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaSubLedgerAssignID   END  ELSE  BEGIN  UPDATE AAG10002 SET   CRDTAMNT= CRDTAMNT+(SELECT a1.CRDTAMNT - SUM(a2.CRDTAMNT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.CRDTAMNT),  ORCRDAMT= ORCRDAMT+(SELECT a1.ORCRDAMT - SUM(a2.ORCRDAMT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.ORCRDAMT)  FROM AAG10002   WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaSubLedgerAssignID   END  END  SET @flag = 0  END  FETCH NEXT FROM Cursor1 INTO @aaGLWorkDistID, @ACTINDX, @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT, @DSCRIPTN  END  CLOSE Cursor1  DEALLOCATE Cursor1 END   
GO
GRANT EXECUTE ON  [dbo].[aagCreateGLforLandCostRecevingsTrx] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[seePMAgedTB]  @ASOFDATE char(21),       @SORTBY char(15),       @i_VENDOR_RS char(15) = '',     @i_VENDOR_RE char(15) = '',     @i_VENDCLS_RS char(11) = '',    @i_VENDCLS_RE char(11) = '',    @i_VENDNAME_RS char(65) = '',    @i_VENDNAME_RE char(65) = '',    @i_USRDEF1_RS char(17) = '',    @i_USRDEF1_RE char(17) = '',    @i_PAYPRI_RS char(3) = '',     @i_PAYPRI_RE char(3) = '',     @i_DOCNUMBR_RS char(21) = '',    @i_DOCNUMBR_RE char(21) = '',    @DUMP tinyint = 0        as  set nocount on  declare @AGINGBKLBL1 char(15), @AGINGBKLBL2 char(15), @AGINGBKLBL3 char(15), @AGINGBKLBL4 char(15), @AGINGBKLBL5 char(15), @AGINGBKLBL6 char(15), @AGINGBKLBL7 char(15), @AGINGBKDY1 int, @AGINGBKDY2 int, @AGINGBKDY3 int, @AGINGBKDY4 int, @AGINGBKDY5 int, @AGINGBKDY6 int, @AGINGBKDY7 int, @MAXDAYS int, @MAXINDX tinyint, @CDATE char(12), @C_DTDIFF int, @C_DOCDATE datetime,  @C_CURTRXAM numeric(19,5),  @C_MY_DEX_ROW int  set @AGINGBKLBL1 = '' set @AGINGBKLBL2 = '' set @AGINGBKLBL3 = '' set @AGINGBKLBL4 = '' set @AGINGBKLBL5 = '' set @AGINGBKLBL6 = '' set @AGINGBKLBL7 = '' set @AGINGBKDY1 = 0 set @AGINGBKDY2 = 0 set @AGINGBKDY3 = 0 set @AGINGBKDY4 = 0 set @AGINGBKDY5 = 0 set @AGINGBKDY6 = 0 set @AGINGBKDY7 = 0 set @CDATE = convert(char(12), getdate(), 101)  select @AGINGBKLBL1 = DSCRIPTN, @AGINGBKDY1 = ENDGPDYS from PM40101 where INDEX1 = 1 select @AGINGBKLBL2 = DSCRIPTN, @AGINGBKDY2 = ENDGPDYS from PM40101 where INDEX1 = 2 select @AGINGBKLBL3 = DSCRIPTN, @AGINGBKDY3 = ENDGPDYS from PM40101 where INDEX1 = 3 select @AGINGBKLBL4 = DSCRIPTN, @AGINGBKDY4 = ENDGPDYS from PM40101 where INDEX1 = 4 select @AGINGBKLBL5 = DSCRIPTN, @AGINGBKDY5 = ENDGPDYS from PM40101 where INDEX1 = 5 select @AGINGBKLBL6 = DSCRIPTN, @AGINGBKDY6 = ENDGPDYS from PM40101 where INDEX1 = 6 select @AGINGBKLBL7 = DSCRIPTN, @AGINGBKDY7 = ENDGPDYS from PM40101 where INDEX1 = 7  select @MAXDAYS = max(ENDGPDYS) from PM40101 select @MAXINDX = INDEX1 from PM40101 where ENDGPDYS = @MAXDAYS set @MAXINDX = @MAXINDX - 1 select @MAXDAYS = ENDGPDYS from PM40101 where INDEX1 = @MAXINDX  If OBJECT_ID('tempdb..#PMOPENTRX') is  NULL  Begin  create table #PMOPENTRX (  VENDORID char(15) not null default '',  VENDNAME char(65) not null default '',  VENDCLID char(11) not null default '',  VCHRNMBR char(21) not null default '',  DOCNUMBR char(21) not null default '',  DOCAMNT numeric(19,5) not null default 0.00,  CURTRXM numeric(19,5) not null default 0.00,  WROFAMNT numeric(19,5) not null default 0.00,  DISAMTAV numeric(19,5) not null default 0.00,  DOCTYPE tinyint not null default 0,  DOCDATE datetime not null default '01/01/1900',  DUEDATE datetime not null default '01/01/1900',  DISCDATE datetime not null default '01/01/1900',  USERDEF1 char(21) not null default '',  PYMNTPRI char(3) not null default '',  USERDEF2 char(21) not null default '',  NUMOFDYS int not null default 0,  AGINGBK1 numeric(19,5) not null default 0.00,  AGINGBK2 numeric(19,5) not null default 0.00,  AGINGBK3 numeric(19,5) not null default 0.00,  AGINGBK4 numeric(19,5) not null default 0.00,  AGINGBK5 numeric(19,5) not null default 0.00,  AGINGBK6 numeric(19,5) not null default 0.00,  AGINGBK7 numeric(19,5) not null default 0.00,  MY_DEX_ROW int Identity (1,1) )  End   delete #PMOPENTRX   insert into #PMOPENTRX (VENDORID,VENDNAME,VENDCLID,VCHRNMBR,DOCNUMBR,DOCAMNT,CURTRXM,WROFAMNT,DISAMTAV,DOCTYPE,DOCDATE,DUEDATE,DISCDATE,USERDEF1,USERDEF2)  select a.VENDORID,b.VENDNAME,b.VNDCLSID,a.VCHRNMBR,a.DOCNUMBR,a.DOCAMNT,a.CURTRXAM,a.WROFAMNT,a.DISAMTAV,a.DOCTYPE,a.DOCDATE,a.DUEDATE,a.DISCDATE,b.USERDEF1,b.USERDEF2  from PM20000 a, PM00200 b  where a.VENDORID = b.VENDORID and  a.VENDORID between @i_VENDOR_RS and @i_VENDOR_RE and  b.VNDCLSID between @i_VENDCLS_RS and @i_VENDCLS_RE and  b.VENDNAME between @i_VENDNAME_RS and @i_VENDNAME_RE and   b.USERDEF1 between @i_USRDEF1_RS and @i_USRDEF1_RE and  b.PYMNTPRI between @i_PAYPRI_RS and @i_PAYPRI_RE and  a.DOCNUMBR between @i_DOCNUMBR_RS and @i_DOCNUMBR_RE   order by a.VENDORID, a.DOCDATE ASC   DECLARE TRX_RANGE CURSOR FOR  SELECT DOCDATE, CURTRXM, MY_DEX_ROW  FROM #PMOPENTRX  order by MY_DEX_ROW   OPEN TRX_RANGE   FETCH NEXT FROM TRX_RANGE  INTO @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  WHILE @@FETCH_STATUS = 0  Begin   SELECT @C_DTDIFF = DATEDIFF(day, @C_DOCDATE, @CDATE)   If ((@C_DTDIFF <= @AGINGBKDY2) or (@C_DTDIFF > @MAXDAYS and @AGINGBKDY2 > @MAXDAYS))  Begin  update #PMOPENTRX set AGINGBK1 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End   If ((@C_DTDIFF <= @AGINGBKDY3) or (@C_DTDIFF > @MAXDAYS and @AGINGBKDY3 > @MAXDAYS))  Begin  update #PMOPENTRX set AGINGBK2 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End   If ((@C_DTDIFF <= @AGINGBKDY4) or (@C_DTDIFF > @MAXDAYS and @AGINGBKDY4 > @MAXDAYS))  Begin  update #PMOPENTRX set AGINGBK3 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End   If ((@C_DTDIFF <= @AGINGBKDY5) or (@C_DTDIFF > @MAXDAYS and @AGINGBKDY5 > @MAXDAYS))  Begin  update #PMOPENTRX set AGINGBK4 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End   If ((@C_DTDIFF <= @AGINGBKDY6) or (@C_DTDIFF > @MAXDAYS and @AGINGBKDY6 > @MAXDAYS))  Begin  update #PMOPENTRX set AGINGBK5 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End   If ((@C_DTDIFF <= @AGINGBKDY7) or (@C_DTDIFF > @MAXDAYS and @AGINGBKDY7 > @MAXDAYS))  Begin  update #PMOPENTRX set AGINGBK6 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End  Else  Begin  update #PMOPENTRX set AGINGBK7 = @C_CURTRXAM, NUMOFDYS = @C_DTDIFF where MY_DEX_ROW = @C_MY_DEX_ROW   set @C_DTDIFF = 0  FETCH NEXT FROM TRX_RANGE INTO  @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  Continue  End   FETCH NEXT FROM TRX_RANGE INTO @C_DOCDATE, @C_CURTRXAM, @C_MY_DEX_ROW  End    CLOSE TRX_RANGE  DEALLOCATE TRX_RANGE  select * from #PMOPENTRX order by VENDORID, VCHRNMBR   
GO
GRANT EXECUTE ON  [dbo].[seePMAgedTB] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seePMAgedTB] TO [rpt_accounting manager]
GO
GRANT EXECUTE ON  [dbo].[seePMAgedTB] TO [rpt_accounts payable coordinator]
GO
GRANT EXECUTE ON  [dbo].[seePMAgedTB] TO [rpt_bookkeeper]
GO
GRANT EXECUTE ON  [dbo].[seePMAgedTB] TO [rpt_power user]
GO

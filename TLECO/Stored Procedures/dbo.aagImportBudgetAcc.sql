SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE     PROCEDURE [dbo].[aagImportBudgetAcc] (  @aaBudgetID INTEGER ) AS BEGIN  DECLARE @nFPCount INTEGER  DECLARE @TrxCount INTEGER  DECLARE @nStartPos INTEGER  DECLARE @nIndex INTEGER  DECLARE @ExecString VARCHAR(6000)  DECLARE @AmtRow INTEGER  DECLARE @QtyRow INTEGER  DECLARE @nPos INTEGER  DECLARE @nResult  INTEGER  DECLARE @CodeSeqAbove INTEGER   DECLARE @CodeSeqBelow INTEGER  DECLARE @nResultOut INTEGER  DECLARE @RowID VARCHAR(150)  DECLARE @aaCodeSequence INTEGER  DECLARE @AccountNumber VARCHAR(150)   DECLARE @RowInc INTEGER  DECLARE @nCount INTEGER  DECLARE @CodeBackUP INTEGER  DECLARE @ACCTPOS INTEGER  DECLARE @ACCTNUMST VARCHAR(250)   DECLARE @DateFetched DATETIME  DECLARE @PeriodFetched INTEGER  DECLARE @PeriodFetchedAcct INTEGER   DECLARE @DateFetchedAcct DATETIME   DECLARE @TempTable VARCHAR(50)  SELECT @TempTable = '##TEMP_TEMP'  + REPLACE(system_user,'''','') + db_name()   SET @nResultOut = 0  SELECT @nFPCount = COUNT(PERIODDT)   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID and aaCodeSequence = 1   SELECT @TrxCount = COUNT(*)   FROM AAG00901   WHERE aaBudgetTreeID =  ( SELECT aaBudgetTreeID FROM AAG00903 WHERE aaBudgetID = @aaBudgetID )   SET @nStartPos = @TrxCount + 5  SET @ACCTPOS = @nStartPos - 1  SET @nIndex = 1  SET @nFPCount = @nFPCount * 2  SET @nPos = 0   SET TRANSACTION ISOLATION LEVEL READ COMMITTED  BEGIN TRANSACTION  UPDATE AAG00904  SET Balance = 0, QUANTITY = 0 WHERE aaBudgetID = @aaBudgetID   Delete from AAG00905 WHERE aaBudgetID = @aaBudgetID  DECLARE PeriodCursor CURSOR FAST_FORWARD FOR  SELECT PERIODDT, aaFiscalPeriod   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID and aaCodeSequence = 1  ORDER BY PERIODDT   OPEN PeriodCursor  FETCH NEXT FROM PeriodCursor into @DateFetched, @PeriodFetched  SET @nIndex = 1  SET @nPos = 0   WHILE (@nIndex <= @nFPCount)  BEGIN  SET @AmtRow = @nIndex + @nStartPos  SET @QtyRow = @nIndex + 1 + @nStartPos   SET @ExecString =   'UPDATE AAG00904  SET Balance = F' + LTRIM(RTRIM(@AmtRow)) + ', QUANTITY = F' + LTRIM(RTRIM(@QtyRow)) + '  FROM [' + @TempTable + ']  WHERE   AAG00904.aaBudgetID = ' + CONVERT(VARCHAR, @aaBudgetID) + ' AND  AAG00904.aaCodeSequence = [' + @TempTable + '].aaCodeSequence AND  AAG00904.PERIODDT = ''' + CONVERT(VARCHAR, @DateFetched) + ''' AND  AAG00904.aaFiscalPeriod =  ' + '' + CONVERT(VARCHAR, @PeriodFetched)  + '' + ' AND  [' + @TempTable + '].RowInc  > 3 and (F3 <> '''' or F4 <> '''')'   EXEC ( @ExecString )   SET @nIndex = @nIndex + 2  SET @nPos = @nPos + 1  FETCH NEXT FROM PeriodCursor into  @DateFetched, @PeriodFetched   END  CLOSE PeriodCursor  deallocate PeriodCursor  DECLARE PeriodCursor CURSOR FAST_FORWARD FOR  SELECT PERIODDT, aaFiscalPeriod   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID and aaCodeSequence = 1  ORDER BY PERIODDT    OPEN PeriodCursor  FETCH NEXT FROM PeriodCursor into @DateFetched, @PeriodFetched  SET @nIndex = 1  SET @nPos = 0  WHILE (@nIndex <= @nFPCount)  BEGIN  SET @AmtRow = @nIndex + @nStartPos  SET @QtyRow = @nIndex + 1 + @nStartPos   SET @ExecString = '  Insert Into AAG00905 (aaBudgetID, aaCodeSequence, ACTINDX, PERIODDT, aaFiscalPeriod,   aaActualPriliminary, aaRange, Balance, YEAR1)   Select AAG00904.aaBudgetID, AAG00904.aaCodeSequence, GL00100.ACTINDX, AAG00904.PERIODDT,   AAG00904.aaFiscalPeriod, 0 as aaActualPriliminary, 0 as aaRange, CASE GL00100.ACCTTYPE   WHEN 1 THEN F' + LTRIM(RTRIM(@AmtRow)) + '  ELSE F' + LTRIM(RTRIM(@QtyRow)) + '  END as Balance ,(SELECT TOP 1 aaFiscalYear FROM AAG00500 WHERE AAG00500.DATE1=ISNULL((SELECT  top 1 DATE1 from AAG00500 WHERE DATE1 =AAG00904.PERIODDT),DATEADD(MONTH, 1, AAG00904.PERIODDT)))  as YEAR1' + '  FROM [' + @TempTable + '], AAG00904, GL00105, GL00100   WHERE   GL00105.ACTNUMST = [' + @TempTable + '].F' + LTRIM(RTRIM(CONVERT(VARCHAR,@ACCTPOS))) + ' and   GL00100.ACTINDX = GL00105.ACTINDX and   AAG00904.aaBudgetID = ' + CONVERT(VARCHAR, @aaBudgetID) + ' AND  AAG00904.aaCodeSequence = [' + @TempTable + '].aaCodeSequence AND  AAG00904.PERIODDT = ''' + CONVERT(VARCHAR, @DateFetched) + ''' AND  AAG00904.aaFiscalPeriod = ' + '' + CONVERT(VARCHAR, @PeriodFetched)  + '' + ' AND   RowInc  > 3 and (F3 = '''' and F4 = '''')'   EXEC ( @ExecString )   SET @nIndex = @nIndex + 2  SET @nPos = @nPos + 1  FETCH NEXT FROM PeriodCursor into @DateFetched, @PeriodFetched  SET @nPos = @nPos + 1  END  CLOSE PeriodCursor  DEALLOCATE PeriodCursor  SELECT @nResult = dbo.aagIsRootNodeRollDown(0)   SELECT @nResult = @nResult * dbo.aagIsRootNodeRollDown(1)   IF @nResult = 0  BEGIN  ROLLBACK TRANSACTION   DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO  AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )  VALUES (-1,'0',0,1)  RETURN -1000   END   EXEC aagValidateBudgetForImportAcc @aaBudgetID, @CodeSeqAbove OUTPUT, @CodeSeqBelow OUTPUT, @nResultOut OUTPUT   IF @nResultOut = 0  BEGIN  ROLLBACK TRANSACTION  DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO  AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )  VALUES (-1,'0',@CodeSeqAbove,2)  RETURN -1010  END  COMMIT TRANSACTION  DELETE FROM AAG2000E WHERE aaSubLedgerHdrID = -1  INSERT INTO  AAG2000E (aaSubLedgerHdrID, aaTrxDimCode, aaSubLedgerDistID, AADOCVAL )   VALUES (-1,'0',0,5)  RETURN 1 END    
GO
GRANT EXECUTE ON  [dbo].[aagImportBudgetAcc] TO [DYNGRP]
GO

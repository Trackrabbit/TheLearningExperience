SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateProcessHold]  @I_vPRCHLDID char(15),    @I_vDSCRIPTN char(30) = '',   @I_vPASSWORD char(15) = '',   @I_vXFERPHOL tinyint = 0,   @I_vPOSTPHOL tinyint = 0,   @I_vFUFIPHOL tinyint = 0,    @I_vPRINPHOL tinyint = 0,   @I_vHOLDDATE datetime = '',   @I_vUSER2ENT char(15)='',   @I_vUpdateIfExistsMaster int = 0,  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @CMPANYID smallint,    @NOTEINDX numeric(19,5),    @iGetNextNoteIdxErrState int,   @iError int,   @iStatus int,  @O_oErrorState int  select   @CMPANYID = 0 ,     @NOTEINDX = 0,     @O_iErrorState = 0,  @iStatus = 0 if (@oErrString is NULL) begin  select @oErrString = '' end  if (  @I_vPRCHLDID is NULL or  @I_vDSCRIPTN is NULL or  @I_vPASSWORD is NULL or  @I_vXFERPHOL is NULL or  @I_vPOSTPHOL is NULL or  @I_vFUFIPHOL is NULL or  @I_vPRINPHOL is NULL or  @I_vHOLDDATE is NULL or  @I_vUSER2ENT is NULL or  @I_vUpdateIfExistsMaster is NULL) begin  select @O_iErrorState = 6101    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   if (@I_vHOLDDATE = '')  select @I_vHOLDDATE = convert(varchar(12),getdate())   if (@I_vPRCHLDID = '') begin  select @O_iErrorState = 6102     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vUpdateIfExistsMaster < 0 and @I_vUpdateIfExistsMaster > 1) begin  select @O_iErrorState = 7055     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vPRCHLDID = UPPER(@I_vPRCHLDID)   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @O_iErrorState = 9147   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists(select 1 from SOP00100 (nolock) where PRCHLDID = @I_vPRCHLDID) begin  insert SOP00100  (  PRCHLDID,  DSCRIPTN,  PASSWORD,  XFERPHOL,  POSTPHOL,  FUFIPHOL,  PRINPHOL,  WORKFLOWHOLD,  NOTEINDX,  USER2ENT,  CREATDDT,  MODIFDT  )  select  @I_vPRCHLDID,     @I_vDSCRIPTN,     @I_vPASSWORD,     @I_vXFERPHOL,     @I_vPOSTPHOL,     @I_vFUFIPHOL,     @I_vPRINPHOL,     0,      @NOTEINDX,     @I_vUSER2ENT,     convert(varchar(12),getdate()),   convert(varchar(12),getdate())   if (@@error <> 0)  begin  select @O_iErrorState = 6103    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if (@I_vUpdateIfExistsMaster > 0)  begin  update SOP00100  set  PRCHLDID = @I_vPRCHLDID,  DSCRIPTN = @I_vDSCRIPTN,  PASSWORD = @I_vPASSWORD,  XFERPHOL = @I_vXFERPHOL,  POSTPHOL = @I_vPOSTPHOL,  FUFIPHOL = @I_vFUFIPHOL,  PRINPHOL = @I_vPRINPHOL,  USER2ENT = @I_vUSER2ENT,  MODIFDT  = convert(varchar(12),getdate())  where PRCHLDID = @I_vPRCHLDID  if (@@error <> 0)  begin  select @O_iErrorState = 6104    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateProcessHold] TO [DYNGRP]
GO

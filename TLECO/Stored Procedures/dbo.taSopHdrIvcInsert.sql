SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taSopHdrIvcInsert]  @I_vSOPTYPE smallint,    @I_vDOCID char(15),    @I_vSOPNUMBE char(21),     @I_vORIGNUMB char(21) = '',   @I_vORIGTYPE smallint = 0,   @I_vTAXSCHID char(15) = '',   @I_vFRTSCHID char(15) = '',   @I_vMSCSCHID char(15) = '',   @I_vSHIPMTHD char(15) = null,   @I_vTAXAMNT numeric(19,5) = 0,   @I_vLOCNCODE char(10) = '',   @I_vDOCDATE datetime,     @I_vFREIGHT numeric(19,5) = 0,   @I_vMISCAMNT numeric(19,5) = 0,   @I_vTRDISAMT numeric(19,5) = null,  @I_vTRADEPCT numeric(19,2) = null,  @I_vDISTKNAM numeric(19,5) = 0,   @I_vMRKDNAMT numeric(19,5) = 0,   @I_vCUSTNMBR char(15),     @I_vCUSTNAME char(64) = '',   @I_vCSTPONBR char(20) = '',   @I_vShipToName char(64) = '',   @I_vADDRESS1 char(60) = '',   @I_vADDRESS2 char(60) = '',   @I_vADDRESS3 char(60) = '',   @I_vCNTCPRSN char(60) = '',   @I_vFAXNUMBR char(21) = '',   @I_vCITY char(35) = '',    @I_vSTATE char(29) = '',   @I_vZIPCODE char(10) = '',    @I_vCOUNTRY char(60) = '',   @I_vPHNUMBR1 char(21) = '',   @I_vPHNUMBR2 char(21) = '',   @I_vPHNUMBR3 char(21) = '',   @I_vPrint_Phone_NumberGB smallint = null,     @I_vSUBTOTAL numeric(19,5) = 0,   @I_vDOCAMNT numeric(19,5)= 0,   @I_vPYMTRCVD numeric(19,5) = 0,   @I_vSALSTERR char(15) = null,   @I_vSLPRSNID char(15) = null,   @I_vUPSZONE char(3) = null,   @I_vUSER2ENT char(15) = '',   @I_vBACHNUMB char(15),    @I_vPRBTADCD char(15) = '',   @I_vPRSTADCD char(15) = null,   @I_vFRTTXAMT numeric(19,5) = 0,   @I_vMSCTXAMT numeric(19,5) = 0,   @I_vORDRDATE datetime = '',   @I_vMSTRNUMB int = 0,    @I_vPYMTRMID char(20) = null,   @I_vDUEDATE datetime = '',   @I_vDISCDATE datetime = '',   @I_vREFRENCE char(30) = '',   @I_vUSINGHEADERLEVELTAXES int = 0,  @I_vBatchCHEKBKID char(15) = '',  @I_vCREATECOMM smallint = 0,   @I_vCOMMAMNT numeric(19,5) = 0,   @I_vCOMPRCNT numeric(19,2) = 0,   @I_vCREATEDIST smallint = 1,   @I_vCREATETAXES smallint = 0,   @I_vDEFTAXSCHDS smallint = 0,   @I_vCURNCYID char(15) = '',   @I_vXCHGRATE numeric(19,7) = 0,   @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7) = 0,   @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vDISAVAMT numeric(19,5) = null,  @I_vDSCDLRAM numeric(19,5) = null,  @I_vDSCPCTAM numeric(19,2) = null,  @I_vFREIGTBLE int = 0,    @I_vMISCTBLE int = 0,    @I_vCOMMNTID char(15) = null,   @I_vCOMMENT_1 char(50) = '',   @I_vCOMMENT_2 char(50) = '',   @I_vCOMMENT_3 char(50) = '',   @I_vCOMMENT_4 char(50) = '',   @I_vGPSFOINTEGRATIONID char(30) = '',  @I_vINTEGRATIONSOURCE smallint = 0,  @I_vINTEGRATIONID char(30) = '',  @I_vReqShipDate datetime = '',   @I_vRequesterTrx smallint = 0,   @I_vCKCreditLimit tinyint = 0,   @I_vCKHOLD tinyint = 0,    @I_vUpdateExisting tinyint = 0,   @I_vQUOEXPDA datetime = '',   @I_vQUOTEDAT datetime = '',   @I_vINVODATE datetime = '',   @I_vBACKDATE datetime = '',   @I_vRETUDATE datetime = '',   @I_vCMMTTEXT varchar(500) = '',   @I_vPRCLEVEL char(10) = '',   @I_vDEFPRICING tinyint = 0,   @I_vTAXEXMT1 char(25) = null,   @I_vTAXEXMT2 char(25) = null,   @I_vTXRGNNUM char(25) = null,   @I_vREPTING tinyint = 0,   @I_vTRXFREQU smallint = 0,    @I_vTIMETREP smallint = 0,   @I_vQUOTEDYSTINCR smallint = 0,   @I_vNOTETEXT varchar(8000) = null,  @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @FRTSCHID char(15),    @MSCSCHID char(15),    @TOCOMMAMT numeric(19,5),   @OREXTCST numeric(19,5),   @ORNCMAMT numeric(19,5),   @ORCOSAMT numeric(19,5),   @ORSUBTOTAL numeric(19,5),   @ORDOCAMT numeric(19,5),   @ORACTAMT numeric(19,5),   @ORPMTRVD numeric(19,5),   @ORTAXAMT numeric(19,5),   @OTAXTAMT numeric(19,5),   @TXBTXAMT numeric(19,5),   @OBTAXAMT numeric(19,5),   @ORBKTMSC numeric(19,5),   @ORBKTFRT numeric(19,5),   @ORMISCAMT numeric(19,5),   @ORFRTAMT numeric(19,5),   @ORSUBTOT numeric(19,5),   @ORTDISAM numeric(19,5),   @OCOMMAMT numeric(19,5),   @ORMRKDAM numeric(19,5),   @ORDATKN numeric(19,5),    @I_vDISAVTKN numeric(19,5),   @ORDDLRAT numeric(19,5),   @ORDISTKN numeric(19,5),   @I_vDISCRTND numeric(19,5),   @ORDAVAMT numeric(19,5),   @ORDISRTD numeric(19,5),   @ORDAVMSC numeric(19,5),   @ORDAVFRT numeric(19,5),   @FUNLCURR char(15),    @EXGTBLID char(15),    @ISMCTRX int,     @DECPLCUR int,  @LOCNCODE char(10),  @LOCNCODECustomer char(10),   @LOCNCODEPassed smallint,   @TAXSCHID char(15),  @STAXSCHD char(15),  @SHIPTYPE int,  @USEADVTX int,     @MS_ITEM_1 int,  @BACKOSALES numeric(19,5),   @BACKOFREHT numeric(19,5),   @BACKOMISC numeric(19,5),   @FUTOTAMT numeric(19,5),  @RECALC int,  @VATEnabled int,  @DECIMALPLACES int,  @ALLOCABY smallint,  @SLSRECRDS int,  @MRKDNAMT numeric(19,5),  @TAXAMNTH numeric(19,5),  @TAXAMNTL numeric(19,5),  @ACCTAMNT numeric(19,5),  @DEPOSITS numeric(19,5),  @ORDEPOSITS numeric(19,5),  @PAYMENTS numeric(19,5),  @ORPAYMENTS numeric(19,5),  @PYMTRMID char(20),  @dtDEFAULT datetime,  @CURRNIDX int,  @MSTRNUMB int,  @BCHSOURC char(15),  @USDOCID1 char(15),  @USDOCID2 char(15),  @DOCAMNT numeric(19,5),  @iStatus int,  @CurrDate char(12),  @CurrTime datetime,  @iError int,  @O_oErrorState int,  @iGetMstrErrState int,  @iUpdtBthErrState int,  @iCustomState int,  @iCustomErrString varchar(255),  @iAddShippingErrState int,  @iAddShippingErrString varchar(255),  @iCalcDueDateErrState int,  @iCalcDueDateErrString varchar(255),  @iCreateBatchErrString varchar(255),  @FRTTXAMT numeric(19,5),  @ORFRTTAX numeric(19,5),  @MSCTXAMT numeric(19,5),  @ORMSCTAX numeric(19,5),  @UNPSTOSA numeric(19,5),  @EXTDCOST numeric(19,5),    @CUSTNAME char(64),     @dDISCDATE datetime,     @dDUEDATE datetime,     @DAYTOEXP smallint,     @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @sCompanyID smallint,     @tTRMSTNUM tinyint,     @FRGTTXBL smallint,     @MISCTXBL smallint,     @COMMAMNT numeric(19,2),  @COMAPPTO smallint,     @CMMSLAMT numeric(19,2),  @NCOMAMNT numeric(19,2),  @SLPR char(15),  @O_iCommErrorState int,  @sCommErrString char(255),  @PostingType smallint,     @O_iInitErrorState int,     @oInitErrString varchar(255),    @TRADEPCT numeric(19,5),  @TRDISAMT numeric(19,5),    @TRDISAMTDIF numeric(19,5),    @I_vDISCFRGT numeric(19,5),    @I_vDISCMISC numeric(19,5),    @SumLineORTAXAMT numeric(19,5),    @O_iCommentMstErrState int,  @DECPLUSED int,      @OverCreditLimit tinyint,  @CRLMTTYP smallint,  @CurrBalance numeric(19,5),  @CRLMTAMT numeric(19,5),  @CUSTBLNC numeric(19,5),  @UNPSTDSA numeric(19,5),  @UNPSTOSA1 numeric(19,5),  @ONORDAMT numeric(19,5),  @UNPSTDCA numeric(19,5),  @UNPSTOCA1 numeric(19,5),  @DEPRECV numeric(19,5),  @iCustomerBalanceErrState int,  @taCustomerBalanceErrString char(255),  @INACTIVE int,  @HOLD tinyint,  @taSopHdrRecalcErrState int,  @taSopHdrRecalcErrString char(255),  @taSopTaxEngineErrState int,  @taSopTaxEngineErrString char(255),  @taCreateSOPDistributionsErrState int,  @taCreateSOPDistributionsErrString char(255),  @taMCCurrencyValidateErrString char(255),  @taMCCurrencyValidateErrState int,  @FUFILDAT datetime,  @ACTLSHIP datetime,  @QUOTOINV smallint,  @QUOTOORD smallint,  @INVTOBAC smallint,  @BACTOINV smallint,  @BACTOORD smallint,  @ORDTOBAC smallint,  @XTNDPRCEKIT numeric(19,5),  @BackoutTradeDisc numeric(19,5),  @OrigBackoutTradeDisc numeric(19,5),  @linecount int,  @REMSUBTO numeric(19,5),  @OREMSUBT numeric(19,5),  @DSCLCTYP smallint,  @DSCDLRAM numeric(19,5),  @DSCPCTAM numeric(19,5),  @SALPURCH smallint,  @DISCNTCB smallint,  @FREIGHT smallint,  @MISC smallint,  @TAX smallint,  @PymtTermAmnt1 numeric(19,5),  @PymtTermAmnt2 numeric(19,5),  @PymtTermAmnt3 numeric(19,5),  @PymtTermAmnt4 numeric(19,5),  @PymtTermAmnt5 numeric(19,5),  @PymtTermAmnt8 numeric(19,5),  @MCINSTALLED smallint,  @GLPOSTDT datetime,  @USINGNEGATIVES smallint,  @TXSCHSRC smallint,      @noteindex numeric(19,5),   @ALLREPEA tinyint,      @BSIVCTTL tinyint,     @TAXAMNTSum numeric(19,5),  @BOTAX numeric(19,5),  @BOFREIGHT numeric(19,5),  @BOMISC numeric(19,5),  @INTERID char(5),  @CRLMTPER smallint,     @CRLMTPAM numeric(19,5),    @Flags tinyint,  @CCode char(7),      @NONINVEN smallint,     @defUPSZONE char(3),  @defSALSTERR char(15),  @defSLPRSNID char(15),  @defSHIPMTHD char(15),  @ADDRESS1 char(60),  @ADDRESS2 char(60),  @ADDRESS3 char(60),  @CNTCPRSN char(60),  @FAXNUMBR char(21),  @CITY char(30),  @STATE char(29),  @ZIPCODE char(10),  @COUNTRY char(60),  @PHNUMBR1 char(21),  @PHNUMBR2 char(21),  @PHNUMBR3 char(21),  @NACREDITCHECK tinyint,     @CPRCSTNM char(15),     @CUSTNMBR char(15),     @WORKFLOWENABLED smallint,     @WorkflowApprStatusQuote smallint,    @WorkflowPriorityQuote smallint,   @WorkflowApprStatCreditLm smallint,   @WorkflowPriorityCreditLm smallint,   @UseShipTypeTaxOpt tinyint,      @Print_Phone_NumberGB smallint,  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint  select @FRTSCHID ='',  @MSCSCHID ='',  @CURRNIDX = 0,  @OREXTCST = 0,  @TOCOMMAMT = 0,  @ORNCMAMT = 0,  @ORCOSAMT = 0,  @ORSUBTOTAL = 0,  @ORDOCAMT = 0,  @ORACTAMT = 0,  @ORPMTRVD = 0,  @ORTAXAMT = 0,  @OTAXTAMT = 0,  @TXBTXAMT = 0,  @OBTAXAMT = 0,  @ORBKTMSC = 0,  @ORBKTFRT = 0,  @ORMISCAMT = 0,  @ORFRTAMT = 0,  @ORSUBTOT = 0,  @ORTDISAM = 0,  @OCOMMAMT = 0,  @ORMRKDAM = 0,  @ORDATKN = 0,  @I_vDISAVTKN = 0,  @ORDDLRAT = 0,  @ORDISTKN = 0,  @ORDISRTD = 0,  @ORDAVAMT = 0,  @I_vDISCRTND = @I_vDISTKNAM,  @ORDAVMSC = 0,  @ORDAVFRT = 0,  @EXTDCOST = 0,  @FUNLCURR = '',  @EXGTBLID = '',  @ISMCTRX = 0,  @DECPLCUR = 0,  @LOCNCODE = '',  @LOCNCODECustomer = '',  @LOCNCODEPassed = 1,  @TAXSCHID = '',  @STAXSCHD = '',  @SHIPTYPE = 10,     @USEADVTX = 0,  @MS_ITEM_1 = power(2,24),   @BACKOSALES = 0,    @BACKOFREHT = 0,    @BACKOMISC = 0,     @FUTOTAMT = 0,  @RECALC = 0,  @VATEnabled = 0,  @DECIMALPLACES = 0,  @SLSRECRDS = 0,  @TAXAMNTH = 0,  @TAXAMNTL = 0,  @MSTRNUMB = 0,  @O_oErrorState = 0,  @O_iErrorState = 0,  @iStatus = 0,  @dDISCDATE = '',  @dtDEFAULT = '',  @dDUEDATE = '',  @DAYTOEXP = 0,  @BCHSOURC = 'Sales Entry',  @ACCTAMNT = 0,  @DEPOSITS = 0,  @ORDEPOSITS = 0,  @PAYMENTS = 0,  @ORPAYMENTS = 0,  @oErrString = '',  @iGetMstrErrState = 0,  @iUpdtBthErrState = 0,  @UNPSTOSA = 0,  @COMMAMNT = 0,  @COMAPPTO = 0,  @CMMSLAMT = 0,  @NCOMAMNT = 0,  @PostingType = 0,     @TRADEPCT = 0,  @TRDISAMT = 0,       @TRDISAMTDIF = 0,     @I_vDISCFRGT = 0,      @I_vDISCMISC = 0,     @O_iCommentMstErrState = 0,  @SumLineORTAXAMT = 0,  @DECPLUSED = 0,  @OverCreditLimit = 0,  @CRLMTTYP = 0,  @CurrBalance = 0,  @CRLMTAMT = 0,  @CUSTBLNC = 0,  @UNPSTDSA = 0,  @UNPSTOSA1 = 0,  @ONORDAMT = 0,  @UNPSTDCA = 0,  @UNPSTOCA1 = 0,  @DEPRECV = 0,  @iCustomerBalanceErrState = 0,  @taCustomerBalanceErrString = '',  @INACTIVE = 0,  @HOLD = 0,  @taSopHdrRecalcErrState = 0,  @taSopHdrRecalcErrString = '',  @taSopTaxEngineErrState = 0,  @taSopTaxEngineErrString = '',  @taCreateSOPDistributionsErrState = 0,  @taCreateSOPDistributionsErrString = '',  @taMCCurrencyValidateErrString = '',  @taMCCurrencyValidateErrState = 0,  @FUFILDAT = '',  @ACTLSHIP = '',  @QUOTOINV = 0,  @QUOTOORD = 0,  @INVTOBAC = 0,  @BACTOINV = 0,  @BACTOORD = 0,  @ORDTOBAC = 0,  @XTNDPRCEKIT = 0,  @BackoutTradeDisc = 0,  @OrigBackoutTradeDisc = 0,  @nNextNoteIndex = 0,  @iGetNextNoteIdxErrState = 0,  @linecount = 0,  @sCompanyID = 0,  @REMSUBTO = 0,  @OREMSUBT = 0,  @DSCLCTYP = 0,  @DSCDLRAM = 0,  @DSCPCTAM = 0,  @SALPURCH = 1,  @DISCNTCB = 1,  @FREIGHT = 1,  @MISC = 1,  @TAX = 1,  @PymtTermAmnt1 = 0,  @PymtTermAmnt2 = 0,  @PymtTermAmnt3 = 0,  @PymtTermAmnt4 = 0,  @PymtTermAmnt5 = 0,  @PymtTermAmnt8 = 0,  @MCINSTALLED = 1,  @GLPOSTDT = '',  @USINGNEGATIVES = 0,  @TXSCHSRC = 2,       @noteindex = 0,  @ALLREPEA = 0,      @BSIVCTTL = 0,      @TAXAMNTSum = 0,  @BOTAX = 0,  @BOFREIGHT = 0,  @BOMISC = 0,   @INTERID = '',  @CRLMTPER = 0,     @CRLMTPAM = 0,     @Flags = 0,  @CCode = '',     @NONINVEN = 0,     @defUPSZONE = '',  @defSALSTERR = '',  @defSLPRSNID = '',  @defSHIPMTHD = '',  @ADDRESS1 = '',  @ADDRESS2 = '',  @ADDRESS3 = '',  @CNTCPRSN = '',  @FAXNUMBR = '',  @CITY = '',  @STATE = '',  @ZIPCODE = '',  @COUNTRY = '',  @PHNUMBR1 = '',  @PHNUMBR2 = '',  @PHNUMBR3 = '',  @NACREDITCHECK = 0,    @CPRCSTNM = '',     @CUSTNMBR = '',     @WORKFLOWENABLED = 0,  @WorkflowApprStatusQuote = 0,  @WorkflowPriorityQuote = 0,  @WorkflowApprStatCreditLm = 0,  @WorkflowPriorityCreditLm = 0,  @UseShipTypeTaxOpt = 0,   @Print_Phone_NumberGB = 0,  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taSopHdrIvcInsertPre  @I_vSOPTYPE output,  @I_vDOCID output,  @I_vSOPNUMBE output,  @I_vORIGNUMB output,  @I_vORIGTYPE output,  @I_vTAXSCHID output,  @I_vFRTSCHID output,  @I_vMSCSCHID output,  @I_vSHIPMTHD output,  @I_vTAXAMNT output,  @I_vLOCNCODE output,  @I_vDOCDATE output,  @I_vFREIGHT output,  @I_vMISCAMNT output,  @I_vTRDISAMT output,  @I_vTRADEPCT output,  @I_vDISTKNAM output,  @I_vMRKDNAMT output,  @I_vCUSTNMBR output,  @I_vCUSTNAME output,  @I_vCSTPONBR output,  @I_vShipToName output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCNTCPRSN output,  @I_vFAXNUMBR output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIPCODE output,  @I_vCOUNTRY output,  @I_vPHNUMBR1 output,  @I_vPHNUMBR2 output,  @I_vPHNUMBR3 output,  @I_vPrint_Phone_NumberGB output,  @I_vSUBTOTAL output,  @I_vDOCAMNT output,  @I_vPYMTRCVD output,  @I_vSALSTERR output,  @I_vSLPRSNID output,  @I_vUPSZONE output,  @I_vUSER2ENT output,  @I_vBACHNUMB output,  @I_vPRBTADCD output,  @I_vPRSTADCD output,  @I_vFRTTXAMT output,  @I_vMSCTXAMT output,  @I_vORDRDATE output,  @I_vMSTRNUMB output,  @I_vPYMTRMID output,  @I_vDUEDATE output,  @I_vDISCDATE output,  @I_vREFRENCE output,  @I_vUSINGHEADERLEVELTAXES output,  @I_vBatchCHEKBKID output,  @I_vCREATECOMM output,  @I_vCOMMAMNT output,  @I_vCOMPRCNT output,  @I_vCREATEDIST output,  @I_vCREATETAXES output,  @I_vDEFTAXSCHDS output,  @I_vCURNCYID output,      @I_vXCHGRATE output,      @I_vRATETPID output,      @I_vEXPNDATE output,      @I_vEXCHDATE output,      @I_vEXGTBDSC output,      @I_vEXTBLSRC output,      @I_vRATEEXPR output,       @I_vDYSTINCR output,       @I_vRATEVARC output,      @I_vTRXDTDEF output,      @I_vRTCLCMTD output,      @I_vPRVDSLMT output,      @I_vDATELMTS output,      @I_vTIME1 output,       @I_vDISAVAMT output,  @I_vDSCDLRAM output,  @I_vDSCPCTAM output,  @I_vFREIGTBLE output,  @I_vMISCTBLE output,  @I_vCOMMNTID output,  @I_vCOMMENT_1 output,  @I_vCOMMENT_2 output,  @I_vCOMMENT_3 output,  @I_vCOMMENT_4 output,  @I_vGPSFOINTEGRATIONID output,  @I_vINTEGRATIONSOURCE output,  @I_vINTEGRATIONID output,  @I_vReqShipDate output,  @I_vRequesterTrx output,  @I_vCKCreditLimit output,  @I_vCKHOLD output,  @I_vUpdateExisting output,  @I_vQUOEXPDA output,  @I_vQUOTEDAT output,  @I_vINVODATE output,  @I_vBACKDATE output,  @I_vRETUDATE output,  @I_vCMMTTEXT output,  @I_vPRCLEVEL output,  @I_vDEFPRICING output,  @I_vTAXEXMT1 output,  @I_vTAXEXMT2 output,  @I_vTXRGNNUM output,  @I_vREPTING output,  @I_vTRXFREQU output,  @I_vTIMETREP output,  @I_vQUOTEDYSTINCR output,  @I_vNOTETEXT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 599    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @CurrDate = convert(varchar(12),getdate()) select @CurrTime = ' '+ substring(convert(varchar(25),getdate()),12,12)  if ( (@I_vGPSFOINTEGRATIONID is null) or  (@I_vINTEGRATIONSOURCE is null) or  (@I_vINTEGRATIONID is null) or  (@I_vDISCMISC is null) or  (@I_vDISCFRGT is null) or  (@I_vMSCSCHID is null) or  (@I_vFRTSCHID is null) or  (@I_vSOPTYPE is null) or  (@I_vSOPNUMBE is null) or  (@I_vDOCDATE is null) or  (@I_vDISTKNAM is null) or  (@I_vCUSTNMBR is null) or  (@I_vCUSTNAME is null) or  (@I_vCSTPONBR is null) or  (@I_vShipToName is null) or  (@I_vADDRESS1 is null) or  (@I_vADDRESS2 is null) or  (@I_vADDRESS3 is null) or  (@I_vCNTCPRSN is null) or  (@I_vFAXNUMBR is null) or  (@I_vBACHNUMB is null) or  (@I_vCITY is null) or  (@I_vSTATE is null) or  (@I_vZIPCODE is null) or  (@I_vCOUNTRY is null) or  (@I_vPHNUMBR1 is null) or  (@I_vPHNUMBR2 is null) or  (@I_vPHNUMBR3 is null) or  (@I_vSUBTOTAL is null) or  (@I_vLOCNCODE is null) or  (@I_vDOCAMNT is null) or  (@I_vORIGNUMB is null) or  (@I_vORIGTYPE is null) or  (@I_vPYMTRCVD is null) or  (@I_vUSER2ENT is null) or  (@I_vPRBTADCD is null) or  (@I_vFRTTXAMT is null) or  (@I_vMSCTXAMT is null) or  (@I_vORDRDATE is null) or  (@I_vCREATEDIST is null) or  (@I_vCURNCYID is null) or    (@I_vXCHGRATE is null) or     (@I_vRATETPID is null) or    (@I_vEXPNDATE is null) or    (@I_vEXCHDATE is null) or    (@I_vEXGTBDSC is null) or    (@I_vEXTBLSRC is null) or    (@I_vRATEEXPR is null) or    (@I_vDYSTINCR is null) or    (@I_vRATEVARC is null) or    (@I_vTRXDTDEF is null) or    (@I_vRTCLCMTD is null) or    (@I_vPRVDSLMT is null) or    (@I_vDATELMTS is null) or    (@I_vTIME1 is null) or  (@I_vFREIGTBLE is null) or  (@I_vMISCTBLE is null) or  (@I_vCOMMENT_1 is null) or  (@I_vCOMMENT_2 is null) or  (@I_vCOMMENT_3 is null) or  (@I_vCOMMENT_4 is null) or  (@I_vReqShipDate is null) or  (@I_vRequesterTrx is null) or  (@I_vQUOEXPDA is null) or  (@I_vQUOTEDAT is null) or  (@I_vINVODATE is null) or  (@I_vBACKDATE is null) or  (@I_vRETUDATE is null) or  (@I_vCMMTTEXT is null) or  (@I_vPRCLEVEL is null) or  (@I_vDEFPRICING is null)  ) begin  select @O_iErrorState = 53    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPNUMBE = '') or (@I_vDOCDATE = '') or (@I_vCUSTNMBR = '') or (@I_vDOCID = '') or (@I_vBACHNUMB = '')) begin  select @O_iErrorState = 54     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPTYPE < 1) or (@I_vSOPTYPE > 6))  begin  select @O_iErrorState = 898     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCREATECOMM < 0) or (@I_vCREATECOMM > 1)) begin  select @O_iErrorState = 899     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCREATEDIST < 0) or (@I_vCREATEDIST > 1)) begin  select @O_iErrorState = 2211     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCREATETAXES < 0) or (@I_vCREATETAXES > 1)) begin  select @O_iErrorState = 2212     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDEFTAXSCHDS < 0) or (@I_vDEFTAXSCHDS > 1)) begin  select @O_iErrorState = 2213     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vFREIGTBLE < 0) or (@I_vFREIGTBLE > 3)) begin  select @O_iErrorState = 2214     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vMISCTBLE < 0) or (@I_vMISCTBLE > 3)) begin  select @O_iErrorState = 2215     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 2216     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vQUOEXPDA <> '') and (@I_vSOPTYPE <> 1)) begin  select @O_iErrorState = 2272     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCKCreditLimit < 0) or (@I_vCKCreditLimit > 1)) begin  select @O_iErrorState = 3554     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCKHOLD < 0) or (@I_vCKHOLD > 1)) begin  select @O_iErrorState = 3555     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRDISAMT is not null) and (@I_vTRADEPCT is not null) begin  select @O_iErrorState = 7802     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (  (@I_vDISTKNAM < 0) or  (@I_vPYMTRCVD < 0) or  (@I_vFRTTXAMT < 0) or  (@I_vMSCTXAMT < 0) or  (@I_vCOMMAMNT < 0) or  (@I_vCOMPRCNT < 0) or  (@I_vXCHGRATE < 0) or  (@I_vRATEVARC < 0) or  (@I_vDISAVAMT < 0) or  (@I_vDSCDLRAM < 0) or  (@I_vDSCPCTAM < 0)  ) begin  select @O_iErrorState = 786    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vDOCID = UPPER(@I_vDOCID),  @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE),  @I_vORIGNUMB = UPPER(@I_vORIGNUMB),  @I_vTAXSCHID = UPPER(@I_vTAXSCHID),  @I_vSHIPMTHD = UPPER(@I_vSHIPMTHD),  @I_vLOCNCODE = UPPER(@I_vLOCNCODE),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vCSTPONBR = UPPER(@I_vCSTPONBR),  @I_vSLPRSNID = UPPER(@I_vSLPRSNID),  @I_vSALSTERR = UPPER(@I_vSALSTERR),  @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vPRBTADCD = UPPER(@I_vPRBTADCD),  @I_vPRSTADCD = UPPER(@I_vPRSTADCD),  @I_vFRTSCHID = UPPER(@I_vFRTSCHID),  @I_vMSCSCHID = UPPER(@I_vMSCSCHID),  @I_vBatchCHEKBKID = UPPER(@I_vBatchCHEKBKID),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vRATETPID = UPPER(@I_vRATETPID),  @I_vCOMMNTID = UPPER(@I_vCOMMNTID),  @I_vPRCLEVEL = UPPER(@I_vPRCLEVEL)  if (@I_vLOCNCODE = '') begin  select @LOCNCODEPassed = 0 end  select  @TAXSCHID = TAXSCHID,  @FRGTTXBL = FRGTTXBL,   @MISCTXBL = MISCTXBL,  @FRTSCHID = FRTSCHID,  @MSCSCHID = MSCSCHID,  @I_vLOCNCODE =   case   when @I_vLOCNCODE = ''  then LOCNCODE  else @I_vLOCNCODE  end,  @tTRMSTNUM = TRMSTNUM,  @USEADVTX = USEADVTX  from SOP40100 (nolock) where SETUPKEY = 1  if (@USEADVTX = 1) begin  select @FRGTTXBL = 0,  @FRTSCHID = '',  @I_vFRTSCHID = '',  @MISCTXBL = 0,  @MSCSCHID = '',  @I_vMSCSCHID = '' end  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(RM00101.CURNCYID, '') from RM00101 (nolock) where RM00101.CUSTNMBR = @I_vCUSTNMBR   if (@I_vCURNCYID <> '')  begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end  else  begin  select @I_vCURNCYID = isnull(FUNLCURR, ''),  @CURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock)  end end else begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if ((@FUNLCURR <> '') or (@I_vCURNCYID <> '')) begin  if (@I_vCURNCYID <> '')  select @DECPLUSED = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  else  select @DECPLUSED = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   if ( (@I_vTAXAMNT <> round(@I_vTAXAMNT,@DECPLUSED)) or  (@I_vFREIGHT <> round(@I_vFREIGHT,@DECPLUSED)) or  (@I_vMISCAMNT <> round(@I_vMISCAMNT,@DECPLUSED)) or  (@I_vTRDISAMT <> round(@I_vTRDISAMT,@DECPLUSED)) or  (@I_vDISTKNAM <> round(@I_vDISTKNAM,@DECPLUSED)) or  (@I_vMRKDNAMT <> round(@I_vMRKDNAMT,@DECPLUSED)) or  (@I_vSUBTOTAL <> round(@I_vSUBTOTAL,@DECPLUSED)) or  (@I_vDOCAMNT <> round(@I_vDOCAMNT,@DECPLUSED)) or  (@I_vPYMTRCVD <> round(@I_vPYMTRCVD,@DECPLUSED)) or  (@I_vFRTTXAMT <> round(@I_vFRTTXAMT,@DECPLUSED)) or  (@I_vMSCTXAMT <> round(@I_vMSCTXAMT,@DECPLUSED)) or  (@I_vCOMMAMNT <> round(@I_vCOMMAMNT,@DECPLUSED)) or  (@I_vDISAVAMT <> round(@I_vDISAVAMT,@DECPLUSED)) or  (@I_vDSCDLRAM <> round(@I_vDSCDLRAM,@DECPLUSED)))  begin  select @O_iErrorState = 832     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@CURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 724    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCURNCYID <> '') begin  if exists (select 1 from SOP10200 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and CURRNIDX <> @CURRNIDX and CMPNTSEQ = 0)  begin  select @O_iErrorState = 9370     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @ALLREPEA = ALLREPEA from SOP40200 (nolock) where SOPTYPE = @I_vSOPTYPE and DOCID = @I_vDOCID  if (@I_vREPTING < 0) or (@I_vREPTING > 1) begin  select @O_iErrorState = 5639     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRXFREQU < 0) or (@I_vTRXFREQU > 7) begin  select @O_iErrorState = 5640     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTIMETREP < 0) or (@I_vTIMETREP > 9999) begin  select @O_iErrorState = 5641     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vQUOTEDYSTINCR < 0) or (@I_vQUOTEDYSTINCR > 999)  begin  select @O_iErrorState = 5642     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPTYPE not in(1,2)) and ((@I_vREPTING <> 0) or (@I_vTRXFREQU <> 0) or (@I_vTIMETREP <> 0) or (@I_vQUOTEDYSTINCR <> 0))) begin  select @O_iErrorState = 5643     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPTYPE in (1,2)) and (@ALLREPEA = 0) and ((@I_vREPTING <> 0) or (@I_vTRXFREQU <> 0) or (@I_vTIMETREP <> 0) or (@I_vQUOTEDYSTINCR <> 0))) begin  select @O_iErrorState = 9284     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vREPTING = 1) and (@I_vTRXFREQU = 0) begin  select @I_vTRXFREQU = 1 end  if (@I_vTRXFREQU <> 7) and (@I_vQUOTEDYSTINCR <> 0) begin  select @O_iErrorState = 5644     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUpdateExisting = 0) begin  if exists (select 1 from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and QUANTITY < 0) or   exists (select 1 from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and UNITPRCE < 0)  begin  select @USINGNEGATIVES = 1  end    select @VATEnabled = abs(sign(isnull(Company_Options, 0) & @MS_ITEM_1)) from DYNAMICS..SY01500 (nolock) where INTERID = DB_Name()   if (@I_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vRATETPID))  begin  select @O_iErrorState = 723     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vMSTRNUMB <> 0)  begin  if (exists(select 1 from SOP40500 (nolock) where MSTRNUMB = @I_vMSTRNUMB))  begin  select @O_iErrorState = 3770     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vDISTKNAM > 0) and (@I_vSOPTYPE not in(3,4)))  begin  select @O_iErrorState = 737     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vDISAVAMT > 0) and (@I_vSOPTYPE not in(3,6)))   begin  select @O_iErrorState = 736     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vBatchCHEKBKID <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID))  begin  select @O_iErrorState = 364     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9515     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vBACHNUMB <> '')  begin  if exists(select 1 from SY00500 a (nolock) where a.BACHNUMB = @I_vBACHNUMB and BCHSOURC = 'Sales Entry' and MKDTOPST = 1)  begin  select @O_iErrorState = 5616     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vCMMTTEXT <> '') and ((@I_vCOMMENT_1 <> '') or (@I_vCOMMENT_2 <> '') or (@I_vCOMMENT_3 <> '') or (@I_vCOMMENT_4 <> '')))  begin  select @O_iErrorState = 2296    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ( (exists(select 1 from SOP10100 a (nolock) where a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE)) or  (exists(select 1 from SOP30200 a (nolock) where a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE)))  begin  select @O_iErrorState = 56     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vSOPTYPE = 4) and (@I_vORDRDATE <> ''))  begin  select @O_iErrorState = 180     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vSLPRSNID <> '')  begin  if (not exists(select 1 from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID))  begin  select @O_iErrorState = 178     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (exists(select 1 from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID and INACTIVE = 1))  begin  select @O_iErrorState = 9538     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   end   if (@I_vSALSTERR <> '')  begin  if (not exists(select 1 from RM00303 (nolock) where SALSTERR = @I_vSALSTERR))  begin  select @O_iErrorState = 244     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vSOPTYPE = 4) and ((@I_vORIGTYPE <> 0) or (@I_vORIGNUMB <> '')))  begin  select @O_iErrorState = 181     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select top 1 @LOCNCODE = LOCNCODE from IV40700 (nolock) where LOCNCODE <> ''   if (@I_vLOCNCODE = '')  begin  if (@LOCNCODE <> '')  begin  select @O_iErrorState = 58     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if (not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE))  begin  select @O_iErrorState = 59     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@LOCNCODE = '') and (@I_vLOCNCODE <> ''))  begin  select @O_iErrorState = 3002     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @STAXSCHD = STAXSCHD from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE   select @DEPOSITS = isnull(sum(p.AMNTPAID),0)  from SOP10103 p (nolock) left outer join SY03100 b (nolock) on p.CARDNAME = b.CARDNAME  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and (p.PYMTTYPE in (1,2,3))   select @PAYMENTS = isnull(sum(p.AMNTPAID),0)  from SOP10103 p (nolock) left outer join SY03100 b (nolock) on p.CARDNAME = b.CARDNAME  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and (p.PYMTTYPE in (4,5,6))   if ((@DEPOSITS + @PAYMENTS) <> @I_vPYMTRCVD)  begin  select @O_iErrorState = 60     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vRTCLCMTD not in (-1,0,1))  begin  select @O_iErrorState = 9342     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vCREATECOMM = 1) and (@I_vCOMMAMNT > 0))  begin  select @O_iErrorState = 710     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCREATECOMM = 1)  begin  if (exists (select 1 from SOP10101 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE))  begin  select @O_iErrorState = 711    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vDISCFRGT > @I_vFREIGHT) and (@I_vFREIGHT > 0)   begin  select @O_iErrorState = 895     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vDISCMISC > @I_vMISCAMNT) and (@I_vMISCAMNT > 0)   begin  select @O_iErrorState = 896     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select  @PYMTRMID =  case  when (@I_vSOPTYPE = 4)  then ''  else RM00101.PYMTRMID  end,  @I_vPRCLEVEL =   case  when (@I_vPRCLEVEL = '')  then PRCLEVEL  else @I_vPRCLEVEL  end,     @CUSTNAME = CUSTNAME,  @CPRCSTNM = CPRCSTNM,     @I_vPRBTADCD =  case   when @I_vPRBTADCD = ''  then PRBTADCD  else @I_vPRBTADCD  end,  @I_vPRSTADCD =  case   when @I_vPRSTADCD is null  then PRSTADCD   else @I_vPRSTADCD  end,  @I_vTAXEXMT1 =       case   when (@I_vTAXEXMT1 is null)   then TAXEXMT1  else @I_vTAXEXMT1  end,  @I_vTAXEXMT2 =       case   when (@I_vTAXEXMT2 is null)   then TAXEXMT2  else @I_vTAXEXMT2  end,   @I_vTXRGNNUM =       case   when (@I_vTXRGNNUM is null)   then TXRGNNUM  else @I_vTXRGNNUM  end  from RM00101 (nolock) where RM00101.CUSTNMBR = @I_vCUSTNMBR   if (@I_vPRCLEVEL = '')  begin  select @I_vPRCLEVEL = PRCLEVEL from RM40101 (nolock)  end   if (@I_vPRBTADCD <> '')  begin  if (not exists(select 1 from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRBTADCD))  begin  select @O_iErrorState = 818     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vPRSTADCD <> '')  begin  if (not exists(select 1 from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD))  begin  select @O_iErrorState = 867     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  if (@I_vShipToName = '' and @I_vADDRESS1 = '' and @I_vADDRESS2 = '' and @I_vADDRESS3 = '' and @I_vCNTCPRSN = '' and @I_vFAXNUMBR = '' and @I_vCITY = ''  and @I_vSTATE = '' and @I_vZIPCODE = '' and @I_vCOUNTRY = '' and @I_vPHNUMBR1 = '' and @I_vPHNUMBR2 = '' and @I_vPHNUMBR3 = '' )  begin  select @I_vADDRESS1=ADDRESS1,  @I_vADDRESS2=ADDRESS2,  @I_vADDRESS3=ADDRESS3,  @I_vCNTCPRSN=CNTCPRSN,  @I_vFAXNUMBR=FAX,  @I_vCITY=CITY,  @I_vSTATE=STATE,  @I_vZIPCODE=ZIP,  @I_vCOUNTRY=COUNTRY,  @I_vPHNUMBR1=PHONE1,  @I_vPHNUMBR2=PHONE2,  @I_vPHNUMBR3=PHONE3,  @LOCNCODECustomer = LOCNCODE     from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD   end  else  begin  select @ADDRESS1 = ADDRESS1,  @ADDRESS2 = ADDRESS2,  @ADDRESS3 = ADDRESS3,  @CNTCPRSN = CNTCPRSN,  @CITY = CITY,  @STATE = STATE,  @ZIPCODE = ZIP,  @COUNTRY = COUNTRY,  @PHNUMBR1 = PHONE1,  @PHNUMBR2 = PHONE2,  @PHNUMBR3 = PHONE3,  @FAXNUMBR = FAX  from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD   if ((@I_vADDRESS1 <> @ADDRESS1) or  (@I_vADDRESS2 <> @ADDRESS2) or  (@I_vADDRESS3 <> @ADDRESS3) or  (@I_vCNTCPRSN <> @CNTCPRSN) or  (@I_vCITY <> @CITY) or  (@I_vSTATE <> @STATE) or  (@I_vZIPCODE <> @ZIPCODE) or  (@I_vCOUNTRY <> @COUNTRY) or  (@I_vPHNUMBR1 <> @PHNUMBR1) or  (@I_vPHNUMBR2 <> @PHNUMBR2) or  (@I_vPHNUMBR3 <> @PHNUMBR3) or  (@I_vFAXNUMBR <> @FAXNUMBR)) and   (((@I_vPHNUMBR1 not in ('','00000000000000')) or  (@PHNUMBR1 not in ('','00000000000000'))) or   ((@I_vPHNUMBR2 not in ('','00000000000000')) or  (@PHNUMBR2 not in ('','00000000000000'))) or   ((@I_vPHNUMBR3 not in ('','00000000000000')) or  (@PHNUMBR3 not in ('','00000000000000'))) or   ((@I_vFAXNUMBR not in ('','00000000000000')) or  (@FAXNUMBR not in ('','00000000000000'))))  begin  select @Flags = 1  end  end  end  end  else  begin  if ( @I_vADDRESS1 <> '' or  @I_vADDRESS2 <> '' or  @I_vADDRESS3 <> '' or  @I_vCNTCPRSN <> '' or  @I_vFAXNUMBR <> '' or  @I_vCITY <> '' or  @I_vSTATE <> '' or  @I_vZIPCODE <> '' or  @I_vCOUNTRY <> '' or  @I_vPHNUMBR1 <> '' or  @I_vPHNUMBR2 <> '' or  @I_vPHNUMBR3 <> ''  )  begin  select @Flags = 1  end  end   select  @defUPSZONE =   case  when @I_vUPSZONE is null  then UPSZONE  else @I_vUPSZONE  end,  @defSHIPMTHD =   case  when @I_vSHIPMTHD is null  then SHIPMTHD  else @I_vSHIPMTHD  end,  @defSALSTERR =   case  when @I_vSALSTERR is null  then SALSTERR  else @I_vSALSTERR  end,  @defSLPRSNID =   case  when @I_vSLPRSNID is null  then SLPRSNID  else @I_vSLPRSNID  end,  @CCode = CCode  from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD   select  @defUPSZONE =   case  when @defUPSZONE = ''  then UPSZONE  else @defUPSZONE  end,  @defSHIPMTHD =   case  when @defSHIPMTHD = ''  then SHIPMTHD  else @defSHIPMTHD  end,  @defSALSTERR =   case  when @defSALSTERR = ''  then SALSTERR  else @defSALSTERR  end,  @defSLPRSNID =   case  when @defSLPRSNID = ''  then SLPRSNID  else @defSLPRSNID  end,  @CCode =   case  when @CCode = ''  then CCode  else @CCode  end  from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   select @I_vUPSZONE =   case   when @I_vUPSZONE is null  then @defUPSZONE  else @I_vUPSZONE  end  select @I_vSHIPMTHD =   case  when @I_vSHIPMTHD is null  then @defSHIPMTHD  else @I_vSHIPMTHD  end  select @I_vSALSTERR =   case  when @I_vSALSTERR is null  then @defSALSTERR  else @I_vSALSTERR  end  select @I_vSLPRSNID =   case  when @I_vSLPRSNID is null  then @defSLPRSNID  else @I_vSLPRSNID  end   if (@I_vLOCNCODE <> '') and (@LOCNCODECustomer <> '') and (@LOCNCODEPassed = 0)  begin  select @I_vLOCNCODE = @LOCNCODECustomer  end   if (@I_vShipToName = '' and @I_vPRSTADCD = '')   select @I_vShipToName = ''  if (@I_vShipToName = '' and @I_vPRSTADCD <> '')  select @I_vShipToName = ShipToName from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD   if ((@I_vSHIPMTHD <> '') and (@I_vSOPTYPE <> 4))  begin  if (not exists(select 1 from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD))  begin  exec @iStatus = taCreateShippingMethod  @I_vSHIPMTHD = @I_vSHIPMTHD,  @I_vUpdateIfExists = 0,  @O_iErrorState = @iAddShippingErrState output,  @oErrString = @iAddShippingErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iAddShippingErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iAddShippingErrString))  select @O_iErrorState = 177     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end   select @SHIPTYPE = SHIPTYPE from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD   if ((@I_vCREATETAXES = 1) and (@I_vUSINGHEADERLEVELTAXES = 1))  begin  select @O_iErrorState = 859     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vFRTSCHID <> '')  begin  if (not exists(select 1 from TX00102 (nolock) where TAXSCHID = @I_vFRTSCHID))  begin  select @O_iErrorState = 890     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @FRGTTXBL = 1  end  end   if (@I_vMSCSCHID <> '')  begin  if (not exists(select 1 from TX00102 (nolock) where TAXSCHID = @I_vMSCSCHID))  begin  select @O_iErrorState = 891     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @MISCTXBL = 1  end  end   select @UseShipTypeTaxOpt = abs(sign(isnull(Company_Options, 0) & power(2,24))) from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   if (@I_vDEFTAXSCHDS = 1)  begin  if (@I_vTAXSCHID = '')  begin  if (@VATEnabled = 0)    begin  select @I_vTAXSCHID = TAXSCHID from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD   end  else  begin  if ((@USEADVTX = 0) and (@I_vSHIPMTHD <> ''))  begin  if ((@SHIPTYPE = 0) and (@I_vLOCNCODE <> '') and (@STAXSCHD <> '') and (@UseShipTypeTaxOpt = 1))  begin  select @I_vTAXSCHID = @STAXSCHD, @TXSCHSRC = 1  end  else  if (@SHIPTYPE = 1)  begin  select @I_vTAXSCHID = isnull(TAXSCHID,'') from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD  end  end  else  if (@USEADVTX = 1)  begin  select @I_vTAXSCHID = @TAXSCHID  end  end  end  if (@I_vTAXSCHID is null)  begin  select @I_vTAXSCHID = ''  end   if ((((@I_vFREIGTBLE = 0) and (@FRGTTXBL = 1)) or (@I_vFREIGTBLE = 1)) and (@I_vFRTSCHID = ''))  begin  select @I_vFRTSCHID = @FRTSCHID, @FRGTTXBL = 1  end  else  begin  if ((((@I_vFREIGTBLE = 0) and (@FRGTTXBL = 3)) or (@I_vFREIGTBLE = 3)) and (@I_vFRTSCHID = ''))  begin  select @I_vFRTSCHID = @I_vTAXSCHID, @FRGTTXBL = 3  end  end   if ((((@I_vMISCTBLE = 0) and (@MISCTXBL = 1)) or (@I_vMISCTBLE = 1)) and (@I_vMSCSCHID = ''))  begin  select @I_vMSCSCHID = @MSCSCHID, @MISCTXBL = 1  end  else  begin  if ((((@I_vMISCTBLE = 0) and (@MISCTXBL = 3)) or (@I_vMISCTBLE = 3)) and (@I_vMSCSCHID = ''))  begin  select @I_vMSCSCHID = @I_vTAXSCHID, @MISCTXBL = 3  end  end   end   if ((@I_vFREIGTBLE = 2) and (@I_vFRTSCHID = ''))  begin  select @FRGTTXBL = 2  end   if ((@I_vMISCTBLE = 2) and (@I_vMSCSCHID = ''))  begin  select @MISCTXBL = 2  end   if (@USEADVTX = 1)  begin  select @FRGTTXBL = 0,  @MISCTXBL = 0,  @I_vFRTSCHID = '',  @I_vMSCSCHID = ''  end   if (@I_vTAXSCHID <> '')  begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vTAXSCHID))  begin  select @O_iErrorState = 61     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if (@I_vTAXAMNT > 0.00)  begin  select @O_iErrorState = 82     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (not exists(select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR))  begin  select @O_iErrorState = 66     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @INACTIVE = INACTIVE from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@INACTIVE = 1)  begin  select @O_iErrorState = 1790     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCKHOLD = 1)  begin  select @HOLD = HOLD from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@HOLD = 1)  begin  select @O_iErrorState = 1541     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@O_iErrorState <> 0)  return (@O_iErrorState)   select @XTNDPRCEKIT = isnull(sum(round((((QUANTITY - QTYTBAOR) * UNITPRCE) - ((QUANTITY - QTYTBAOR) * MRKDNAMT)), @DECPLUSED)),0)  from SOP10200 a (nolock), IV00101 b (nolock)  where a.SOPTYPE = 3 and  a.SOPNUMBE = @I_vSOPNUMBE and   a.ITEMNMBR = b.ITEMNMBR and  b.ITEMTYPE = 3 and  a.XTNDPRCE = 0   select @DOCAMNT = isnull(sum(XTNDPRCE),0) from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@I_vDEFPRICING = 1)  begin  select @I_vSUBTOTAL = @DOCAMNT + @XTNDPRCEKIT  end   if (@DOCAMNT + @XTNDPRCEKIT <> @I_vSUBTOTAL)  begin  select @O_iErrorState = 67     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vTRDISAMT is not null)   begin  select @I_vTRADEPCT = 0  end   if (@I_vTRADEPCT is not null) and (@I_vTRADEPCT <> 0)  begin  select @I_vDEFPRICING = 1  select @I_vTRDISAMT = round(@I_vSUBTOTAL * @I_vTRADEPCT/100.00,@DECPLUSED)  end   if (@I_vTRDISAMT is null) and (@I_vTRADEPCT is null)   begin   select @I_vTRADEPCT = cast(CUSTDISC as numeric(19,2))/100.00 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if (@I_vTRADEPCT > 0)  begin  select @I_vDEFPRICING = 1  select @I_vTRDISAMT = round(@I_vSUBTOTAL * @I_vTRADEPCT/100.00,@DECPLUSED)  end  else  begin  select @I_vTRDISAMT = 0  end  end   if (@I_vTRDISAMT is null)  begin  select @I_vTRDISAMT = 0  end   if (@I_vDEFPRICING = 1)  begin  select @I_vDOCAMNT = @I_vSUBTOTAL + @I_vFREIGHT + @I_vMISCAMNT + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT - @I_vTRDISAMT  end  if (@I_vTRDISAMT > @I_vSUBTOTAL) and (@I_vTRDISAMT > 0)   begin  select @O_iErrorState = 4602     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vSOPTYPE <> 6) and (not exists(select 1 from SOP40200 (nolock) where DOCID = @I_vDOCID and SOPTYPE = @I_vSOPTYPE))   begin  select @O_iErrorState = 68     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vSOPTYPE = 6) and (not exists(select 1 from SOP40200 (nolock) where DOCID = @I_vDOCID and SOPTYPE = 3 and WORKFLOWENABLED = 1)))   begin  select @O_iErrorState = 7739     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vSOPTYPE > 0 and @I_vSOPTYPE < 6)   begin  select @ALLOCABY = ALLOCABY, @USDOCID1 = USDOCID1, @USDOCID2 = USDOCID2, @DAYTOEXP = DAYTOEXP, @QUOTOINV = QUOTOINV,  @QUOTOORD = QUOTOORD, @INVTOBAC = INVTOBAC, @BACTOINV = BACTOINV, @BACTOORD = BACTOORD, @ORDTOBAC= ORDTOBAC  from SOP40200 a (nolock) where a.DOCID = @I_vDOCID and a.SOPTYPE = @I_vSOPTYPE  end   if (@I_vSOPTYPE = 6)   begin  select @ALLOCABY = ALLOCABY, @USDOCID1 = USDOCID1, @USDOCID2 = USDOCID2, @DAYTOEXP = DAYTOEXP, @QUOTOINV = QUOTOINV,  @QUOTOORD = QUOTOORD, @INVTOBAC = INVTOBAC, @BACTOINV = BACTOINV, @BACTOORD = BACTOORD, @ORDTOBAC= ORDTOBAC  from SOP40200 a (nolock) where a.DOCID = @I_vDOCID and a.SOPTYPE = 3  end   if (@I_vSOPTYPE = 1)  begin  if (((@QUOTOORD = 0) and (exists(select 1 from SOP10200 (nolock) where QTYTORDR > 0 and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and CMPNTSEQ = 0))) and     ((@QUOTOINV = 0) and (exists(select 1 from SOP10200 (nolock) where QTYTOINV > 0 and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and CMPNTSEQ = 0))))  begin  select @O_iErrorState = 2698     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE = 2)  begin  if ((@ORDTOBAC = 0) and (exists(select 1 from SOP10200 (nolock) where QTYTBAOR > 0 and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE)))  begin  select @O_iErrorState = 2697     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE in (3,6))  begin  if ((@INVTOBAC = 0) and (exists(select 1 from SOP10200 (nolock) where QTYTBAOR > 0 and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE)))  begin  select @O_iErrorState = 2696     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE = 5)  begin  if (((@BACTOINV = 0) and (exists (select 1 from SOP10200 (nolock) where QTYTOINV > 0 and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE))) or  ((@BACTOORD = 0) and (exists(select 1 from SOP10200 (nolock) where QTYTORDR > 0 and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE))))  begin  select @O_iErrorState = 2695     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vCUSTNAME = '')  begin  select @I_vCUSTNAME = @CUSTNAME  end   if (@I_vCUSTNAME = '')  begin  select @O_iErrorState = 43     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vSUBTOTAL <> 0) and (@I_vTRADEPCT = 0)  begin  select @TRADEPCT = @I_vTRDISAMT / @I_vSUBTOTAL  end  else  begin  select @TRADEPCT = @I_vTRADEPCT/100    end   if (@I_vTRDISAMT <> 0) and (@I_vTRADEPCT = 0) and (@I_vSUBTOTAL > 0)   begin  update SOP10200 set  TRDISAMT = round(((XTNDPRCE/@I_vSUBTOTAL) * @I_vTRDISAMT), @DECPLUSED),  ORTDISAM = round(((XTNDPRCE/@I_vSUBTOTAL) * @I_vTRDISAMT), @DECPLUSED)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 2264    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else   begin  update SOP10200 set  TRDISAMT = round(((XTNDPRCE) * (@I_vTRADEPCT/100)), @DECPLUSED),  ORTDISAM = round(((XTNDPRCE) * (@I_vTRADEPCT/100)), @DECPLUSED)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 9369    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @TRDISAMT = sum(TRDISAMT) from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  select @TRDISAMTDIF = @I_vTRDISAMT - @TRDISAMT  if (@TRDISAMTDIF <> 0)  begin  update b set  TRDISAMT = TRDISAMT + @TRDISAMTDIF,  ORTDISAM = ORTDISAM + @TRDISAMTDIF  from SOP10200 b, (select max(DEX_ROW_ID)as Dex from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE) as t1  where b.SOPTYPE = @I_vSOPTYPE and b.SOPNUMBE = @I_vSOPNUMBE and b.DEX_ROW_ID = t1.Dex  if (@@error <> 0)  begin  select @O_iErrorState = 2265    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if ((@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR))  begin   if (exists(select 1 from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and DOCDATE <> @I_vDOCDATE))  begin  select @O_iErrorState = 1321     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCUSTNMBR,  @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 1,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @taMCCurrencyValidateErrString output,  @O_iErrorState = @taMCCurrencyValidateErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@taMCCurrencyValidateErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taMCCurrencyValidateErrString  select @O_iErrorState = 726    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   else  begin  select @ISMCTRX = 0, @I_vRATEEXPR=0, @I_vDYSTINCR=0, @I_vRTCLCMTD = -1  end   if (@I_vRTCLCMTD = 0)   begin  update SOP10200 set  XTNDPRCE =  case  when ORUNTPRC = 0  then XTNDPRCE  else round(OXTNDPRC * @I_vXCHGRATE, @DECPLCUR)  end,  OXTNDPRC =  case  when ORUNTPRC = 0  then round(XTNDPRCE / @I_vXCHGRATE, (ODECPLCU - 1))   else OXTNDPRC  end,  EXTDCOST =  case  when ORUNTCST > UNITCOST  then round(((ORUNTCST * @I_vXCHGRATE) * QUANTITY), @DECPLCUR)  else EXTDCOST  end,  OREXTCST =   case  when UNITCOST > ORUNTCST  then round(((round(UNITCOST * QUANTITY,@DECPLCUR) / @I_vXCHGRATE)), @DECPLUSED)   else OREXTCST  end,  UNITCOST =  case  when ORUNTCST > UNITCOST  then round(ORUNTCST * @I_vXCHGRATE, DECPLCUR - 1)  else UNITCOST  end,  ORUNTCST =  case  when UNITCOST > ORUNTCST  then round(UNITCOST / @I_vXCHGRATE, (ODECPLCU - 1))   else ORUNTCST  end  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 8133    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vRTCLCMTD = 1)   begin  update SOP10200 set  XTNDPRCE =  case  when ORUNTPRC = 0  then XTNDPRCE  else round(OXTNDPRC / @I_vXCHGRATE, @DECPLCUR)  end,  OXTNDPRC =  case  when ORUNTPRC = 0  then round(XTNDPRCE * @I_vXCHGRATE, (ODECPLCU - 1))   else OXTNDPRC  end,  EXTDCOST =  case  when ORUNTCST > UNITCOST  then round(((ORUNTCST / @I_vXCHGRATE) * QUANTITY), @DECPLCUR)  else EXTDCOST  end,  OREXTCST =  case  when UNITCOST > ORUNTCST  then round(((UNITCOST * QUANTITY) * @I_vXCHGRATE), @DECPLUSED)   else OREXTCST  end,  UNITCOST =  case  when ORUNTCST > UNITCOST  then round(ORUNTCST / @I_vXCHGRATE, @DECPLCUR)  else UNITCOST  end,  ORUNTCST =  case  when UNITCOST > ORUNTCST  then round(UNITCOST * @I_vXCHGRATE, (ODECPLCU - 1))   else ORUNTCST  end  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 8134    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  if (@I_vCREATETAXES = 1)  begin  if ((@I_vFRTTXAMT <> 0) or (@I_vMSCTXAMT <> 0) or (@I_vTAXAMNT <> 0))   begin  select @O_iErrorState = 866     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @DECIMALPLACES = @DECPLUSED  exec @iStatus = taSopTaxEngine  @I_vMSTRTAXSLID = @I_vTAXSCHID,    @I_vFREITAXDSLID = @I_vFRTSCHID,   @I_vMISCAMTTAXSLID = @I_vMSCSCHID,   @I_vDOCTYPE = @I_vSOPTYPE,    @I_vDOCNUMBE = @I_vSOPNUMBE,    @I_vCUSTNMBR = @I_vCUSTNMBR,    @I_vTRADEPCT = @TRADEPCT,    @I_vFRTAMT = @I_vFREIGHT,    @I_vMISCAMTAMT = @I_vMISCAMNT,    @I_vINVOICETOTAL = @I_vDOCAMNT,    @I_vINVOICETOTTAXABLE = @I_vDOCAMNT,   @I_vDAFRTAMT = @I_vDISCFRGT,    @I_vDAMISCAMT = @I_vDISCMISC,    @I_vSLAMDUNK = @USEADVTX,    @I_vDECIMALPLACES = @DECIMALPLACES,   @I_vRTCLCMTD = @I_vRTCLCMTD,    @I_vXCHGRATE = @I_vXCHGRATE,    @I_vVATENABLED = @VATEnabled,    @I_vBACKOSALES = @BACKOSALES output,   @I_vBACKOFREHT = @BACKOFREHT output,   @I_vBACKOMISC = @BACKOMISC output,   @I_vRECALC = @RECALC,     @I_vTAXAMNT = @I_vTAXAMNT output,   @I_vFUTOTAMT = @FUTOTAMT output,   @I_vFRTTXAMT = @I_vFRTTXAMT output,   @I_vMSCTXAMT = @I_vMSCTXAMT output,   @O_iErrorState = @taSopTaxEngineErrState output,  @oErrString = @taSopTaxEngineErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@taSopTaxEngineErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taSopTaxEngineErrString  select @O_iErrorState = 852    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @I_vDOCAMNT = @I_vDOCAMNT + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT  end  else  begin  update b set b.BKTSLSAM = a.TAXDTSLS, b.ORBKTSLS = a.ORTXSLS from SOP10105 a (nolock), SOP10200 b (nolock)  where a.SOPNUMBE = b.SOPNUMBE and  a.SOPTYPE = b.SOPTYPE and  a.LNITMSEQ = b.LNITMSEQ and  a.SOPNUMBE = @I_vSOPNUMBE and  a.SOPTYPE = @I_vSOPTYPE and  a.LNITMSEQ <> 0 and  a.BKOUTTAX = 1  if (@@error <> 0)  begin  select @O_iErrorState = 4649    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  update SOP10200 set BKTSLSAM = XTNDPRCE, ORBKTSLS = OXTNDPRC  where SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and  (  LNITMSEQ not in(select LNITMSEQ from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE) or  LNITMSEQ not in(select LNITMSEQ from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and LNITMSEQ <> 0 and BKOUTTAX  <> 0)  )  if (@@error <> 0)  begin  select @O_iErrorState = 9577    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @ORBKTMSC = isnull(sum(ORMSCTAX), 0) from SOP10105 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = 2147483645 and BKOUTTAX = 1   select @ORBKTFRT = isnull(sum(ORFRTTAX), 0) from SOP10105 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = 2147483646 and BKOUTTAX = 1    if ((select isnull(sum(BKTSLSAM), 0) from SOP10200 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE) <> 0)  begin  select @BACKOSALES = isnull(sum(OXTNDPRC - ORBKTSLS),0) from SOP10200 (nolock)  where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE  select @BACKOSALES = @BACKOSALES + @ORBKTMSC + @ORBKTFRT   end  end   if exists(select 1 from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and   TAXDTLID in(select TAXDTLID from TX00201 (nolock)where (TXDTQUAL = 3 and (TDTABMIN > 0 or TDTABMAX > 0)) or(TDTAXMIN > 0 or TDTAXMAX > 0)))  begin  select @BSIVCTTL = 1  end   if (@I_vSOPTYPE <> 3) and (@I_vFREIGHT < 0) and (@USINGNEGATIVES = 0)  begin  select @O_iErrorState = 7473     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (@I_vSOPTYPE <> 3) and (@I_vMISCAMNT < 0) and (@USINGNEGATIVES = 0)  begin  select @O_iErrorState = 7474     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (@I_vSOPTYPE <> 3) and (@I_vTRDISAMT < 0) and (@USINGNEGATIVES = 0)  begin  select @O_iErrorState = 7475     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (@I_vSOPTYPE <> 3) and (@I_vSUBTOTAL < 0) and (@USINGNEGATIVES = 0)  begin  select @O_iErrorState = 7476     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vSOPTYPE <> 3) and (@I_vDOCAMNT < 0)   begin  select @O_iErrorState = 7477     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (@I_vSOPTYPE <> 3) and (@I_vTAXAMNT < 0) and (@USINGNEGATIVES = 0)  begin  select @O_iErrorState = 5526     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vSOPTYPE in(3,6))  begin  if (@I_vPYMTRMID is null)  begin  select @I_vPYMTRMID = @PYMTRMID  end   select @SALPURCH = SALPURCH,  @DISCNTCB = DISCNTCB,  @FREIGHT = FREIGHT,  @MISC = MISC,  @TAX = TAX  from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID   if exists (select 1 from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and BKOUTTAX = 1)  begin  select @BOTAX = isnull(sum(ORSLSTAX),0),  @BOFREIGHT = isnull(sum(ORFRTTAX),0),  @BOMISC = isnull(sum(ORMSCTAX),0)  from SOP10105 (nolock)  where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and  BKOUTTAX = 1 and LNITMSEQ in (0)  end   select  @PymtTermAmnt1 = round(((@I_vSUBTOTAL-@BOTAX) * @SALPURCH), @DECPLUSED),  @PymtTermAmnt2 = round((@I_vTRDISAMT * @DISCNTCB), @DECPLUSED),  @PymtTermAmnt3 = round(((@I_vFREIGHT-@BOFREIGHT) * @FREIGHT), @DECPLUSED),  @PymtTermAmnt4 = round(((@I_vMISCAMNT-@BOMISC) * @MISC),@DECPLUSED),  @PymtTermAmnt5 = round((((@I_vTAXAMNT+@BOTAX) + (@I_vFRTTXAMT+@BOFREIGHT) + (@I_vMSCTXAMT+@BOMISC)) * @TAX),@DECPLUSED),  @PymtTermAmnt8 = @PymtTermAmnt1 - @PymtTermAmnt2 + @PymtTermAmnt3 + @PymtTermAmnt4 + @PymtTermAmnt5   if ((@I_vPYMTRMID = '') and (@I_vDISAVAMT is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null))  begin  select @I_vDISAVAMT = 0, @I_vDSCDLRAM = 0, @I_vDSCPCTAM = 0  end   if ((@I_vDISAVAMT is not null) and (@I_vDSCDLRAM is null or @I_vDSCDLRAM <> @I_vDISAVAMT))  begin  select @I_vDSCDLRAM = 0  end   if ((@I_vDISAVAMT is not null) and (@I_vDSCPCTAM is null or round((@I_vDSCPCTAM / 100) * @PymtTermAmnt8, @DECPLUSED) <> @I_vDISAVAMT))  begin  select @I_vDSCPCTAM = 0  end   if ((@I_vDSCDLRAM is not null and @I_vDSCDLRAM <> 0) and (@I_vDSCPCTAM is not null and @I_vDSCPCTAM <> 0))  begin  select @O_iErrorState = 7031     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vDSCDLRAM is not null) and (@I_vDISAVAMT is null))  begin  select @I_vDISAVAMT = @I_vDSCDLRAM,  @ORDDLRAT = @I_vDSCDLRAM  select @ORDAVAMT = @I_vDISAVAMT,  @I_vDSCPCTAM = 0  end   if ((@I_vDSCPCTAM is not null) and (@I_vDISAVAMT is null))  begin  select @I_vDISAVAMT = round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt1), @DECPLUSED)  select @I_vDISAVAMT = @I_vDISAVAMT - round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt2), @DECPLUSED)  select @I_vDISAVAMT = @I_vDISAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt3), @DECPLUSED)  select @I_vDISAVAMT = @I_vDISAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt4), @DECPLUSED)  select @I_vDISAVAMT = @I_vDISAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt5), @DECPLUSED)  select @ORDAVAMT = @I_vDISAVAMT,   @I_vDSCDLRAM = 0  end   select @DSCLCTYP = DSCLCTYP, @DSCDLRAM = DSCDLRAM, @DSCPCTAM = DSCPCTAM from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID  if ((@I_vPYMTRMID <> '') and (@I_vDISAVAMT is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null))  begin  if (@DSCLCTYP = 1)   begin  select @I_vDSCPCTAM = @DSCPCTAM / 100,  @I_vDSCDLRAM = 0   if (@ISMCTRX = 1)   begin  select @ORDAVAMT = round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt1), @DECPLUSED)  select @ORDAVAMT = @ORDAVAMT - round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt2), @DECPLUSED)  select @ORDAVAMT = @ORDAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt3), @DECPLUSED)  select @ORDAVAMT = @ORDAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt4), @DECPLUSED)  select @ORDAVAMT = @ORDAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt5), @DECPLUSED)  select @ORDDLRAT = 0  select @I_vDISAVAMT =  case  when (@I_vRTCLCMTD = 0)  then round(@ORDAVAMT * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ORDAVAMT / @I_vXCHGRATE, @DECPLCUR)  else 0  end  end  else  begin  select @I_vDISAVAMT = ((@I_vDSCPCTAM / 100) * @PymtTermAmnt1)      select @I_vDISAVAMT = @I_vDISAVAMT - ((@I_vDSCPCTAM / 100) * @PymtTermAmnt2)    select  @I_vDISAVAMT = round(@I_vDISAVAMT,@DECPLCUR)       select @I_vDISAVAMT = @I_vDISAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt3), @DECPLUSED)  select @I_vDISAVAMT = @I_vDISAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt4), @DECPLUSED)  select @I_vDISAVAMT = @I_vDISAVAMT + round(((@I_vDSCPCTAM / 100) * @PymtTermAmnt5), @DECPLUSED)   select @ORDAVAMT = @I_vDISAVAMT,  @ORDDLRAT = 0  end  end  else  if (@DSCLCTYP = 2)     begin  select @I_vDSCPCTAM = 0   if (@ISMCTRX = 1)   begin  select @I_vDISAVAMT = @DSCDLRAM,  @I_vDSCDLRAM = @DSCDLRAM   select @ORDAVAMT =  case  when (@I_vRTCLCMTD = 0)  then round(@I_vDISAVAMT / @I_vXCHGRATE, @DECPLUSED)  when (@I_vRTCLCMTD = 1)  then round(@I_vDISAVAMT * @I_vXCHGRATE, @DECPLUSED)  else 0  end   select @ORDDLRAT = @ORDAVAMT  end  else  begin  select @I_vDSCDLRAM = @DSCDLRAM,  @I_vDISAVAMT = @DSCDLRAM   select @ORDDLRAT = @I_vDISAVAMT,  @ORDAVAMT = @I_vDISAVAMT  end  end  end  else  if (@ISMCTRX = 1)    begin  select @ORDAVAMT = @I_vDISAVAMT   select @I_vDISAVAMT =   case   when (@I_vRTCLCMTD = 0)  then round(@ORDAVAMT * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ORDAVAMT / @I_vXCHGRATE, @DECPLCUR)  else 0  end  select @ORDAVAMT = round(@ORDAVAMT,@DECPLUSED)   if (@I_vDSCPCTAM = 0)  begin  select @ORDDLRAT = @ORDAVAMT,  @I_vDSCDLRAM = @I_vDISAVAMT  end  end  else  begin  select @I_vDISAVAMT = round(@I_vDISAVAMT,@DECPLCUR),  @ORDAVAMT = @I_vDISAVAMT   if (@I_vDSCPCTAM = 0)  begin  select @I_vDSCDLRAM = @I_vDISAVAMT,  @ORDDLRAT = @I_vDISAVAMT  end  end  end  else  begin  if (@I_vSOPTYPE = 4)   begin  select @I_vPYMTRMID = '', @I_vDISAVAMT = 0, @I_vDSCDLRAM = 0, @I_vDSCPCTAM = 0  end  else  begin  if (@I_vPYMTRMID is null)  begin  select @I_vPYMTRMID = @PYMTRMID  end   select @I_vDISAVAMT = 0   select @I_vDSCPCTAM = DSCPCTAM / 100.0,  @I_vDSCDLRAM = isnull(DSCDLRAM,0)    from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID     select @ORDDLRAT = isnull(@I_vDSCDLRAM,0)     select @I_vDSCPCTAM = isnull(@I_vDSCPCTAM,0),  @I_vDSCDLRAM = isnull(@I_vDSCDLRAM,0)  if (@ISMCTRX = 1)  begin  select @ORDDLRAT =  case  when (@I_vRTCLCMTD = 0)  then round(@I_vDSCDLRAM / @I_vXCHGRATE, @DECPLCUR)    when (@I_vRTCLCMTD = 1)  then round(@I_vDSCDLRAM * @I_vXCHGRATE, @DECPLCUR)    else 0  end  end  end  end   if (@I_vPYMTRMID <> '')  begin  if (not exists(select 1 from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID))  begin  select @O_iErrorState = 7032     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vSOPTYPE <> 4)  and ((@I_vPYMTRMID <> '') and (@I_vDUEDATE = '' or @I_vDISCDATE = '')))  begin   exec @iStatus = taCalcDueDateRM  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vPYMTRMID = @I_vPYMTRMID,  @I_vDOCDATE = @I_vDOCDATE,  @O_dDISCDATE = @dDISCDATE output,  @O_dDUEDATE = @dDUEDATE output,  @O_iErrorState = @iCalcDueDateErrState output,  @oErrString = @iCalcDueDateErrString output  select @iError = @@error   if ((@iStatus <> 0) or (@iCalcDueDateErrState <> 0) or (@dDUEDATE is null) or (@dDISCDATE is null) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCalcDueDateErrString  select @O_iErrorState = 218    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vDUEDATE = '')  select @I_vDUEDATE = @dDUEDATE   if (@I_vDISCDATE = '')  select @I_vDISCDATE = @dDISCDATE  end   select @ORDAVFRT = @I_vDISCFRGT,  @ORDAVMSC = @I_vDISCMISC,  @ORDISRTD = @I_vDISTKNAM,  @ORDISTKN = @I_vDISTKNAM,  @ORDATKN = @I_vDISAVTKN,  @ORMRKDAM = @I_vMRKDNAMT,  @OCOMMAMT = @I_vCOMMAMNT,  @ORTDISAM = @I_vTRDISAMT,  @ORSUBTOT = @I_vSUBTOTAL,  @ORFRTAMT = @I_vFREIGHT,  @ORMISCAMT = @I_vMISCAMNT,  @ORFRTTAX = @I_vFRTTXAMT,  @ORMSCTAX = @I_vMSCTXAMT,  @ORBKTFRT = case when (@I_vCREATETAXES = 1) then @BACKOFREHT else @ORBKTFRT end,  @ORBKTMSC = case when (@I_vCREATETAXES = 1) then @BACKOMISC else @ORBKTMSC end,  @OBTAXAMT = @BACKOSALES,  @OTAXTAMT = @TXBTXAMT,  @ORTAXAMT = @I_vTAXAMNT,  @ORPMTRVD = @I_vPYMTRCVD,  @ORDEPOSITS = @DEPOSITS,  @ORPAYMENTS = @PAYMENTS,  @ORACTAMT = @I_vDOCAMNT - @I_vPYMTRCVD - @I_vDISTKNAM,  @ORDOCAMT = @DOCAMNT + @ORFRTAMT + @ORMISCAMT + @ORTAXAMT + @ORFRTTAX + @ORMSCTAX - @ORTDISAM,  @ORSUBTOTAL = @DOCAMNT   if (@I_vCREATETAXES = 0)  begin  select @ORBKTFRT =   case  when @ORBKTFRT = 0  then @ORBKTFRT  else (@ORFRTAMT - @ORBKTFRT)  end,  @ORBKTMSC =   case  when @ORBKTMSC = 0   then @ORBKTMSC  else (@ORMISCAMT - @ORBKTMSC)  end  select @BACKOFREHT = @ORBKTFRT,@BACKOMISC = @ORBKTMSC  end   if (@I_vDISAVAMT > @I_vDOCAMNT) and (@I_vDOCAMNT > 0)   begin  select @O_iErrorState = 735     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vDISTKNAM > @I_vDOCAMNT) and (@I_vDOCAMNT > 0)   begin  select @O_iErrorState = 7122     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vSOPTYPE = 4) and (@I_vPYMTRCVD > @I_vDOCAMNT))  begin  select @O_iErrorState = 787     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCREATECOMM = 1)  begin  exec @iStatus = taSopCalcCommissions  @I_vSOPTYPE = @I_vSOPTYPE,  @I_vSOPNUMBE = @I_vSOPNUMBE,  @I_vCOMPRCNT = @I_vCOMPRCNT,  @I_vDOCAMNT = @I_vDOCAMNT,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURNCYID    = @I_vCURNCYID,     @O_iErrorState = @O_iCommErrorState output,  @oErrString = @sCommErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iCommErrorState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @sCommErrString  select @O_iErrorState = 706    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   delete SOP10101 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and COMMAMNT = 0 and ACTSLAMT = 0 and @I_vCREATECOMM = 1  if (@@error <> 0)  begin  select @O_iErrorState = 8121    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select distinct @SLPR = SLPRSNID from SOP10101 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if @@rowcount > 1   select @COMAPPTO = 0  else  select @COMAPPTO = isnull(COMAPPTO,0) from RM00301 (nolock)   where SLPRSNID in (select distinct (SLPRSNID) from SOP10101(nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE)   update SOP10200 set SLPRSNID = '', SALSTERR = ''  where SLPRSNID <> '' and SALSTERR <> '' and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and QTYTBAOR = 0 and @I_vCREATECOMM = 0  and SLPRSNID+SALSTERR not in (select SLPRSNID+SALSTERR from SOP10101 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE)  if (@@error <> 0)  begin  select @O_iErrorState = 8120    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCREATETAXES = 0)  begin  select @TAXAMNTL = isnull(sum(STAXAMNT + FRTTXAMT + MSCTXAMT),0.00) from SOP10105 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = 0 and BKOUTTAX = 0   if (@TAXAMNTL <> (@I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT))  begin  select @O_iErrorState = 799     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vUSINGHEADERLEVELTAXES = 0)  begin  select @SumLineORTAXAMT = isnull(sum(ORTAXAMT),0.00) from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@SumLineORTAXAMT <> @I_vTAXAMNT)  begin  select @O_iErrorState = 868     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @TAXAMNTH = isnull(sum(STAXAMNT + FRTTXAMT + MSCTXAMT), 0) from SOP10105 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ <> 0 and BKOUTTAX = 0   if @TAXAMNTH <> (@I_vTAXAMNT +@I_vFRTTXAMT + @I_vMSCTXAMT)  begin  select @O_iErrorState = 62     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end   select @FRTTXAMT = isnull(sum(FRTTXAMT), 0), @ORFRTTAX = isnull(sum(ORFRTTAX), 0) from SOP10105 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = 2147483646 and BKOUTTAX = 0   if ((@I_vFRTTXAMT <> @FRTTXAMT) or (@I_vFRTTXAMT <> @ORFRTTAX))  begin  select @O_iErrorState = 85     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @MSCTXAMT = isnull(sum(MSCTXAMT), 0), @ORMSCTAX = isnull(sum(ORMSCTAX), 0) from SOP10105 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = 2147483645 and BKOUTTAX = 0   if ((@I_vMSCTXAMT <> @MSCTXAMT) or (@I_vMSCTXAMT <> @ORMSCTAX))  begin  select @O_iErrorState = 86     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vSOPTYPE in (1,2,4,5))  begin  select @MRKDNAMT = isnull(sum(round(MRKDNAMT * QUANTITY, @DECPLUSED)), 0.00) from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end  else   begin  select @MRKDNAMT = isnull(sum(round(MRKDNAMT * (QUANTITY-QTYCANCE-QTYTBAOR), @DECPLUSED)), 0.00) from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end   if (@MRKDNAMT <> @I_vMRKDNAMT) and (@I_vMRKDNAMT <> 0)   begin  select @O_iErrorState = 64     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@MRKDNAMT <> 0) and (@I_vMRKDNAMT = 0)  begin  select @I_vMRKDNAMT = @MRKDNAMT  select @ORMRKDAM = @I_vMRKDNAMT  end   if @I_vSUBTOTAL + @I_vFREIGHT + @I_vMISCAMNT + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT - @I_vTRDISAMT <> @I_vDOCAMNT  begin  select @O_iErrorState = 235     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @PostingType = UPSTDTFR from SY02300 (nolock) where SERIES = 3 and TRXSOURC = 'Sales Transaction Entry'   if (@O_iErrorState <> 0)  return (@O_iErrorState)   if (@I_vRequesterTrx=0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Sales_Transaction',  @I_vINDEX1 = @I_vSOPNUMBE,  @I_vINDEX2 = @I_vSOPTYPE,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 2017    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @TAXAMNTSum = @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT   if (@ISMCTRX = 1)  begin  if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 727     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRTCLCMTD = 0)   begin  select  @I_vFREIGHT = round(@I_vFREIGHT * @I_vXCHGRATE, @DECPLCUR),    @I_vMISCAMNT = round(@I_vMISCAMNT * @I_vXCHGRATE, @DECPLCUR),    @I_vTRDISAMT = round(@I_vTRDISAMT * @I_vXCHGRATE, @DECPLCUR),    @I_vDISTKNAM = round(@I_vDISTKNAM * @I_vXCHGRATE, @DECPLCUR),    @I_vDISCFRGT = round(@I_vDISCFRGT * @I_vXCHGRATE, @DECPLCUR),    @I_vDISCMISC = round(@I_vDISCMISC * @I_vXCHGRATE, @DECPLCUR),    @I_vMRKDNAMT = round(@I_vMRKDNAMT * @I_vXCHGRATE, @DECPLCUR),    @I_vSUBTOTAL = round(@I_vSUBTOTAL * @I_vXCHGRATE, @DECPLCUR),    @I_vDOCAMNT = round(@I_vDOCAMNT * @I_vXCHGRATE, @DECPLCUR),    @I_vPYMTRCVD = round(@I_vPYMTRCVD * @I_vXCHGRATE, @DECPLCUR),    @DEPOSITS = round(@DEPOSITS * @I_vXCHGRATE, @DECPLCUR),    @PAYMENTS = round(@PAYMENTS * @I_vXCHGRATE, @DECPLCUR),    @I_vFRTTXAMT = round(@I_vFRTTXAMT * @I_vXCHGRATE, @DECPLCUR),    @I_vMSCTXAMT = round(@I_vMSCTXAMT * @I_vXCHGRATE, @DECPLCUR),    @I_vCOMMAMNT = round(@I_vCOMMAMNT * @I_vXCHGRATE, @DECPLCUR),    @I_vTAXAMNT = round(@I_vTAXAMNT * @I_vXCHGRATE, @DECPLCUR),    @BACKOSALES = round(@BACKOSALES * @I_vXCHGRATE, @DECPLCUR),    @BACKOFREHT = round(@BACKOFREHT * @I_vXCHGRATE, @DECPLCUR),    @BACKOMISC = round(@BACKOMISC * @I_vXCHGRATE, @DECPLCUR),    @CMMSLAMT = round(@CMMSLAMT * @I_vXCHGRATE, @DECPLCUR),    @TAXAMNTSum = round(@TAXAMNTSum * @I_vXCHGRATE, @DECPLCUR)  end  else  if (@I_vRTCLCMTD = 1)   begin  select  @I_vFREIGHT = round(@I_vFREIGHT / @I_vXCHGRATE, @DECPLCUR),    @I_vMISCAMNT = round(@I_vMISCAMNT / @I_vXCHGRATE, @DECPLCUR),    @I_vTRDISAMT = round(@I_vTRDISAMT / @I_vXCHGRATE, @DECPLCUR),    @I_vDISTKNAM = round(@I_vDISTKNAM / @I_vXCHGRATE, @DECPLCUR),    @I_vDISCFRGT = round(@I_vDISCFRGT / @I_vXCHGRATE, @DECPLCUR),    @I_vDISCMISC = round(@I_vDISCMISC / @I_vXCHGRATE, @DECPLCUR),    @I_vMRKDNAMT = round(@I_vMRKDNAMT / @I_vXCHGRATE, @DECPLCUR),    @I_vSUBTOTAL = round(@I_vSUBTOTAL / @I_vXCHGRATE, @DECPLCUR),    @I_vDOCAMNT = round(@I_vDOCAMNT / @I_vXCHGRATE, @DECPLCUR),    @I_vPYMTRCVD = round(@I_vPYMTRCVD / @I_vXCHGRATE, @DECPLCUR),    @DEPOSITS = round(@DEPOSITS / @I_vXCHGRATE, @DECPLCUR),    @PAYMENTS = round(@PAYMENTS / @I_vXCHGRATE, @DECPLCUR),    @I_vFRTTXAMT = round(@I_vFRTTXAMT / @I_vXCHGRATE, @DECPLCUR),    @I_vMSCTXAMT = round(@I_vMSCTXAMT / @I_vXCHGRATE, @DECPLCUR),    @I_vCOMMAMNT = round(@I_vCOMMAMNT / @I_vXCHGRATE, @DECPLCUR),    @I_vTAXAMNT = round(@I_vTAXAMNT / @I_vXCHGRATE, @DECPLCUR),    @BACKOSALES = round(@BACKOSALES / @I_vXCHGRATE, @DECPLCUR),    @BACKOFREHT = round(@BACKOFREHT / @I_vXCHGRATE, @DECPLCUR),    @BACKOMISC = round(@BACKOMISC / @I_vXCHGRATE, @DECPLCUR),    @CMMSLAMT = round(@CMMSLAMT / @I_vXCHGRATE, @DECPLCUR),    @TAXAMNTSum = round(@TAXAMNTSum / @I_vXCHGRATE, @DECPLCUR)  end   if (@I_vRTCLCMTD = 0)   begin  update SOP10103 set  AMNTREMA = round(AMNTREMA * @I_vXCHGRATE, @DECPLCUR),  OAMNTREM = AMNTREMA,  AMNTPAID = round(AMNTPAID * @I_vXCHGRATE, @DECPLCUR),  OAMTPAID = AMNTPAID,  CURRNIDX = @CURRNIDX,  CURNCYID = @I_vCURNCYID  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 728    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10200 set  UNITPRCE =  case  when ORUNTPRC = 0  then round(round(UNITPRCE / @I_vXCHGRATE, (ODECPLCU - 1)) * @I_vXCHGRATE, (DECPLCUR - 1))   else round(ORUNTPRC * @I_vXCHGRATE, (DECPLCUR - 1))  end,  ORUNTPRC =  case  when ORUNTPRC = 0  then round(UNITPRCE / @I_vXCHGRATE, (ODECPLCU - 1))   else ORUNTPRC  end,   MRKDNAMT = round(MRKDNAMT * @I_vXCHGRATE, @DECPLCUR),  ORMRKDAM = MRKDNAMT,  REMPRICE =  case  when OREPRICE = 0  then REMPRICE  else round(REMPRICE * @I_vXCHGRATE, @DECPLCUR)  end,  OREPRICE =  case  when OREPRICE = 0  then round(REMPRICE / @I_vXCHGRATE, (ODECPLCU - 1))   else OREPRICE  end,  BKTSLSAM = round(BKTSLSAM * @I_vXCHGRATE, @DECPLCUR),  ORBKTSLS = BKTSLSAM,  TAXAMNT = round(TAXAMNT * @I_vXCHGRATE, @DECPLCUR),  ORTAXAMT = TAXAMNT,  TXBTXAMT = round(TXBTXAMT * @I_vXCHGRATE, @DECPLCUR),  OTAXTAMT = TXBTXAMT,  TRDISAMT = round(TRDISAMT * @I_vXCHGRATE, @DECPLCUR),  ORTDISAM = TRDISAMT,  DISCSALE = round(DISCSALE * @I_vXCHGRATE, @DECPLCUR),  ORDAVSLS = DISCSALE,  CURRNIDX = @CURRNIDX,  BackoutTradeDisc = round(OrigBackoutTradeDisc * @I_vXCHGRATE, @DECPLCUR)    where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 553    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10105 set  STAXAMNT = round(STAXAMNT * @I_vXCHGRATE, @DECPLCUR),  ORSLSTAX = STAXAMNT,  FRTTXAMT = round(FRTTXAMT * @I_vXCHGRATE, @DECPLCUR),  ORFRTTAX = FRTTXAMT,  MSCTXAMT = round(MSCTXAMT * @I_vXCHGRATE, @DECPLCUR),  ORMSCTAX = MSCTXAMT,  TAXDTSLS = round(TAXDTSLS * @I_vXCHGRATE, @DECPLCUR),  ORTOTSLS = TAXDTSLS,  TDTTXSLS = round(TDTTXSLS * @I_vXCHGRATE, @DECPLCUR),  ORTXSLS = TDTTXSLS,  TXDTOTTX = round(TXDTOTTX * @I_vXCHGRATE, @DECPLCUR),  OTTAXPON = TXDTOTTX,  CURRNIDX = @CURRNIDX  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 732    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  update SOP10102 set  CURRNIDX = @CURRNIDX,  DEBITAMT = round(DEBITAMT * @I_vXCHGRATE, @DECPLCUR),  ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT * @I_vXCHGRATE, @DECPLCUR),  ORCRDAMT = CRDTAMNT   where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@@error <> 0)  begin  select @O_iErrorState = 811    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vRTCLCMTD = 1)   begin  update SOP10103 set  AMNTREMA = round(AMNTREMA / @I_vXCHGRATE, @DECPLCUR),  OAMNTREM = AMNTREMA,  AMNTPAID = round(AMNTPAID / @I_vXCHGRATE, @DECPLCUR),  OAMTPAID = AMNTPAID,  CURRNIDX = @CURRNIDX,  CURNCYID = @I_vCURNCYID  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 730    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10200 set  UNITPRCE =  case  when ORUNTPRC = 0  then round(round(UNITPRCE * @I_vXCHGRATE, (ODECPLCU - 1)) / @I_vXCHGRATE, (DECPLCUR - 1))   else round(ORUNTPRC / @I_vXCHGRATE, (DECPLCUR - 1))  end,  ORUNTPRC =  case  when ORUNTPRC = 0  then round(UNITPRCE * @I_vXCHGRATE, (ODECPLCU - 1))   else ORUNTPRC  end,  MRKDNAMT = round(MRKDNAMT / @I_vXCHGRATE, @DECPLCUR),  ORMRKDAM = MRKDNAMT,  REMPRICE =  case  when OREPRICE = 0  then REMPRICE  else round(REMPRICE / @I_vXCHGRATE, @DECPLCUR)  end,  OREPRICE =  case  when OREPRICE = 0  then round(REMPRICE * @I_vXCHGRATE, (ODECPLCU - 1))   else OREPRICE  end,  BKTSLSAM = round(BKTSLSAM / @I_vXCHGRATE, @DECPLCUR),  ORBKTSLS = BKTSLSAM,  TAXAMNT = round(TAXAMNT / @I_vXCHGRATE, @DECPLCUR),  ORTAXAMT = TAXAMNT,  TXBTXAMT = round(TXBTXAMT / @I_vXCHGRATE, @DECPLCUR),  OTAXTAMT = TXBTXAMT,  TRDISAMT = round(TRDISAMT / @I_vXCHGRATE, @DECPLCUR),  ORTDISAM = TRDISAMT,  DISCSALE = round(DISCSALE / @I_vXCHGRATE, @DECPLCUR),  ORDAVSLS = DISCSALE,  CURRNIDX = @CURRNIDX  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 731    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10105 set  STAXAMNT = round(STAXAMNT / @I_vXCHGRATE, @DECPLCUR),  ORSLSTAX = STAXAMNT,  FRTTXAMT = round(FRTTXAMT / @I_vXCHGRATE, @DECPLCUR),  ORFRTTAX = FRTTXAMT,  MSCTXAMT = round(MSCTXAMT / @I_vXCHGRATE, @DECPLCUR),  ORMSCTAX = MSCTXAMT,  TAXDTSLS = round(TAXDTSLS / @I_vXCHGRATE, @DECPLCUR),  ORTOTSLS = TAXDTSLS,  TDTTXSLS = round(TDTTXSLS / @I_vXCHGRATE, @DECPLCUR),  ORTXSLS = TDTTXSLS,  TXDTOTTX = round(TXDTOTTX / @I_vXCHGRATE, @DECPLCUR),  OTTAXPON = TXDTOTTX,  CURRNIDX = @CURRNIDX  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 729    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  update SOP10102 set  CURRNIDX = @CURRNIDX,  DEBITAMT = round(DEBITAMT / @I_vXCHGRATE, @DECPLCUR),  ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT / @I_vXCHGRATE, @DECPLCUR),  ORCRDAMT = CRDTAMNT   where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@@error <> 0)  begin  select @O_iErrorState = 812    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE = 2)  begin  if (@I_vRTCLCMTD = 0)  begin  update c set  c.CURRNIDX = @CURRNIDX,  c.CURNCYID = @I_vCURNCYID,  c.DECPLCUR = @DECPLCUR,  c.Checkbook_Amount = round(ORIGAMT * @I_vXCHGRATE, @DECPLCUR),  c.RCPTAMT =  round(ORIGAMT * @I_vXCHGRATE, @DECPLCUR),  c.RCVGRATETPID = @I_vRATETPID,  c.TIME1 = @I_vTIME1,  c.XCHGRATE = @I_vXCHGRATE,  c.EXGTBLID = @EXGTBLID,  c.EXCHDATE = @I_vEXCHDATE,  c.Receiving_Exchange_Rate = @I_vXCHGRATE  from CM20300 c, CM20100 ch (nolock), SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  end  else  if (@I_vRTCLCMTD = 1)  begin  update c set  c.CURRNIDX = @CURRNIDX,  c.CURNCYID = @I_vCURNCYID,  c.DECPLCUR = @DECPLCUR,  c.Checkbook_Amount = round(ORIGAMT / @I_vXCHGRATE, @DECPLCUR),  c.RCPTAMT =  round(ORIGAMT * @I_vXCHGRATE, @DECPLCUR),  c.RCVGRATETPID = @I_vRATETPID,  c.TIME1 = @I_vTIME1,  c.XCHGRATE = @I_vXCHGRATE,  c.EXGTBLID = @EXGTBLID,  c.EXCHDATE = @I_vEXCHDATE,  c.Receiving_Exchange_Rate = @I_vXCHGRATE  from CM20300 c, CM20100 ch (nolock), SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  end  if @@error <> 0  begin  select @O_iErrorState = 869    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRTCLCMTD = 0)  begin  update s set  s.CURRNIDX = @CURRNIDX,  s.CURNCYID = @I_vCURNCYID,  s.AMNTPAID = round(s.OAMTPAID * @I_vXCHGRATE, @DECPLCUR),  s.RATETPID = @I_vRATETPID,  s.RTCLCMTD = @I_vRTCLCMTD,  s.EXCHDATE = @I_vEXCHDATE,  s.EXGTBLID = @EXGTBLID,    s.XCHGRATE = @I_vXCHGRATE   from SOP30201 s, SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = s.TRXSORCE  end  else  if (@I_vRTCLCMTD = 1)  begin  update s set  s.CURRNIDX = @CURRNIDX,  s.CURNCYID = @I_vCURNCYID,  s.AMNTPAID = round(s.OAMTPAID / @I_vXCHGRATE, @DECPLCUR),  s.RATETPID = @I_vRATETPID,  s.RTCLCMTD = @I_vRTCLCMTD,  s.EXCHDATE = @I_vEXCHDATE,  s.EXGTBLID = @EXGTBLID,    s.XCHGRATE = @I_vXCHGRATE   from SOP30201 s, SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = s.TRXSORCE  end  if @@error <> 0  begin  select @O_iErrorState = 855    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update g set  g.CURRNIDX = @CURRNIDX,  g.CURNCYID = @I_vCURNCYID,  g.RATETPID = @I_vRATETPID,  g.XCHGRATE = @I_vXCHGRATE,  g.EXGTBLID = @EXGTBLID,  g.TIME1 = @I_vTIME1,  g.RTCLCMTD = @I_vRTCLCMTD,  g.EXCHDATE = @I_vEXCHDATE  from  SOP10103 p (nolock), GL10000 g  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and  g.BCHSOURC = 'GL_Normal'  and g.BACHNUMB  = p.TRXSORCE  and (   g.ORTRXSRC = p.TRXSORCE   and  g.DTAControlNum = @I_vSOPNUMBE  and     g.DTATRXType = @I_vSOPTYPE   )  if @@error <> 0  begin  select @O_iErrorState = 857    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRTCLCMTD = 0)  begin  update g set  g.DECPLACS = @DECPLCUR,  g.XCHGRATE = @I_vXCHGRATE,  g.RATETPID = @I_vRATETPID,  g.EXCHDATE = @I_vEXCHDATE,  g.EXGTBLID = @EXGTBLID,  g.TIME1 = @I_vTIME1,  g.RTCLCMTD = @I_vRTCLCMTD,  g.CRDTAMNT = round(ORCRDAMT * @I_vXCHGRATE, @DECPLCUR),  g.DEBITAMT = round(ORDBTAMT * @I_vXCHGRATE, @DECPLCUR)  from SOP10103 p (nolock), GL10000 h (nolock), GL10001 g  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and  h.BCHSOURC = 'GL_Normal'  and h.BACHNUMB  = p.TRXSORCE  and  (  h.ORTRXSRC = p.TRXSORCE  and  h.DTAControlNum = @I_vSOPNUMBE  and     h.DTATRXType = @I_vSOPTYPE  and  g.JRNENTRY = h.JRNENTRY  and g.BACHNUMB  = p.TRXSORCE  )  end  else  if (@I_vRTCLCMTD = 1)  begin  update g set  g.DECPLACS = @DECPLCUR,  g.XCHGRATE = @I_vXCHGRATE,  g.RATETPID = @I_vRATETPID,  g.EXCHDATE = @I_vEXCHDATE,  g.EXGTBLID = @EXGTBLID,  g.TIME1 = @I_vTIME1,  g.RTCLCMTD = @I_vRTCLCMTD,  g.CRDTAMNT = round(ORCRDAMT / @I_vXCHGRATE, @DECPLCUR),  g.DEBITAMT = round(ORDBTAMT / @I_vXCHGRATE, @DECPLCUR)  from SOP10103 p (nolock), GL10000 h (nolock), GL10001 g  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and  h.BCHSOURC = 'GL_Normal'  and h.BACHNUMB  = p.TRXSORCE  and  (  h.ORTRXSRC = p.TRXSORCE  and  h.DTAControlNum = @I_vSOPNUMBE  and     h.DTATRXType = @I_vSOPTYPE  and  g.JRNENTRY = h.JRNENTRY  and g.BACHNUMB  = p.TRXSORCE  )  end  if @@error <> 0  begin  select @O_iErrorState = 858    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select  @OTAXTAMT = isnull(sum(OTAXTAMT), 0.00), @TXBTXAMT = isnull(sum(TXBTXAMT), 0.00)  from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (exists(select 1 from SOP10200 d (nolock) inner join DYNAMICS..MC40200 m (nolock) on (d.CURRNIDX = m.CURRNIDX)  inner join IV00105 i (nolock) on (d.ITEMNMBR = i.ITEMNMBR and m.CURNCYID = i.CURNCYID)  where  d.SOPNUMBE = @I_vSOPNUMBE  and d.SOPTYPE = @I_vSOPTYPE  and i.DEX_ROW_ID is null))  begin  select @O_iErrorState = 1319    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10200 set CURRNIDX = 0 where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and CMPNTSEQ > 0  if (@@error <> 0)  begin  select @O_iErrorState = 8127    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin   if (not exists(select 1 from RM00101 (nolock) where CUSTNMBR=@I_vCUSTNMBR and (CURNCYID = @I_vCURNCYID or CURNCYID = '')))  begin  update SOP10103 set  CURRNIDX = @CURRNIDX,  CURNCYID = @I_vCURNCYID  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 4008    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update c set  c.CURRNIDX = @CURRNIDX,  c.CURNCYID = @I_vCURNCYID  from CM20300 c, CM20100 ch (nolock), SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  if @@error <> 0  begin  select @O_iErrorState = 4009    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update s set  s.CURRNIDX = @CURRNIDX,  s.CURNCYID = @I_vCURNCYID  from SOP30201 s, SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = s.TRXSORCE  if @@error <> 0  begin  select @O_iErrorState = 4010    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update g set  g.CURRNIDX = @CURRNIDX,  g.CURNCYID = @I_vCURNCYID  from CM20300 c (nolock), CM20100 ch (nolock), SOP10103 p (nolock), GL10000 g  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  and c.USERDEF1 = g.JRNENTRY  if @@error <> 0  begin  select @O_iErrorState = 4011    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update g set  g.CURRNIDX = @CURRNIDX  from CM20300 c (nolock), CM20100 ch (nolock), SOP10103 p (nolock), GL10001 g  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  and c.USERDEF1 = g.JRNENTRY  if @@error <> 0  begin  select @O_iErrorState = 4012    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10101 set  CURRNIDX = @CURRNIDX  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 4013    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10102 set  CURRNIDX = @CURRNIDX  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 4014    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update SOP10105 set  CURRNIDX = @CURRNIDX  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 4015    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   select @ACCTAMNT = @I_vDOCAMNT - @I_vPYMTRCVD - @I_vDISTKNAM   if (@CPRCSTNM <> '')   begin  select @NACREDITCHECK = NACREDITCHECK from RM00105 (nolock) where CPRCSTNM = @CPRCSTNM  end   if (@NACREDITCHECK = 1)  begin  select @CUSTNMBR = @CPRCSTNM  end   else  begin  select @CUSTNMBR = @I_vCUSTNMBR  end   if (@I_vCKCreditLimit = 1)  begin  exec @iStatus = taCustomerBalance  @I_vCUSTNMBR = @CUSTNMBR,  @I_vNewSaleAmt = @I_vDOCAMNT,  @O_nOverCreditLimit = @OverCreditLimit output,  @O_CRLMTTYP = @CRLMTTYP output,  @O_nCurrBalance = @CurrBalance output,  @O_nCRLMTAMT = @CRLMTAMT output,  @O_CRLMTPER = @CRLMTPER output,      @O_nCRLMTPAM = @CRLMTPAM output,      @O_nCUSTBLNC = @CUSTBLNC output,  @O_nUNPSTDSA = @UNPSTDSA output,  @O_nUNPSTOSA = @UNPSTOSA1 output,  @O_nONORDAMT = @ONORDAMT output,  @O_nUNPSTDCA = @UNPSTDCA output,  @O_nUNPSTOCA = @UNPSTOCA1 output,  @O_nDEPRECV = @DEPRECV output,  @O_iErrorState = @iCustomerBalanceErrState output,  @oErrString = @taCustomerBalanceErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomerBalanceErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taCustomerBalanceErrString  select @O_iErrorState = 1792     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@OverCreditLimit = 1)  begin  select @O_iErrorState = 1791     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vCREATECOMM = 0)  begin  select @SLSRECRDS = count(SOPTYPE) from SOP10101 (nolock) where  SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SALSTERR <> '' and SLPRSNID <> ''   if ((@SLSRECRDS = 1) and (exists(select 1 from SOP10101 a (nolock), RM00301 b (nolock) where   a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE and a.SLPRSNID = b.SLPRSNID and b.COMAPPTO = 1)))  begin  if (exists(select 1 from SOP10101 a (nolock), RM00301 b (nolock) where   a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE and a.SLPRSNID = b.SLPRSNID and b.COMAPPTO = 1))  begin  if ((@I_vRTCLCMTD = 0) and (@ISMCTRX = 1))  begin  update SOP10101 set  COMMAMNT = round(COMMAMNT * @I_vXCHGRATE, @DECPLCUR),  OCOMMAMT = COMMAMNT,  ACTSLAMT = @I_vDOCAMNT,  ORSLSAMT = @ORDOCAMT,  CMMSLAMT = round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR),  ORCOSAMT = round((@ORDOCAMT * (PRCTOSAL*.0001)), @DECPLUSED),  CURRNIDX = @CURRNIDX,  NCOMAMNT = @I_vDOCAMNT - round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR),  ORNCMAMT = @ORDOCAMT - round((@ORDOCAMT * (PRCTOSAL*.0001)), @DECPLUSED)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SLPRSNID <> ''  if (@@error <> 0)  begin  select @O_iErrorState = 554    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if ((@I_vRTCLCMTD = 1) and (@ISMCTRX = 1))  begin  update SOP10101 set  COMMAMNT = round(COMMAMNT / @I_vXCHGRATE, @DECPLCUR),  OCOMMAMT = COMMAMNT,  ACTSLAMT = @I_vDOCAMNT,  ORSLSAMT = @ORDOCAMT,  CMMSLAMT = round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR),  ORCOSAMT = round((@ORDOCAMT * (PRCTOSAL*.0001)), @DECPLUSED),  CURRNIDX = @CURRNIDX,  NCOMAMNT = @I_vDOCAMNT - round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR),  ORNCMAMT = @ORDOCAMT - round((@ORDOCAMT * (PRCTOSAL*.0001)), @DECPLUSED)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SLPRSNID <> ''  if (@@error <> 0)  begin  select @O_iErrorState = 766    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  update SOP10101 set  ACTSLAMT = @I_vDOCAMNT,  ORSLSAMT = @I_vDOCAMNT,  CMMSLAMT = round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR),  ORCOSAMT = round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLUSED),  CURRNIDX = @CURRNIDX,  NCOMAMNT = (round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR)) - round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLCUR),  ORNCMAMT = (round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLUSED)) - round((@I_vDOCAMNT * (PRCTOSAL*.0001)), @DECPLUSED)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SLPRSNID <> ''  if (@@error <> 0)  begin  select @O_iErrorState = 765    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  end   select @TOCOMMAMT = @OCOMMAMT  select @COMMAMNT = isnull(sum(COMMAMNT),0), @CMMSLAMT = isnull(sum(CMMSLAMT),0), @NCOMAMNT = isnull(sum(NCOMAMNT),0),  @OCOMMAMT = isnull(sum(OCOMMAMT),0), @ORCOSAMT = isnull(sum(ORCOSAMT),0), @ORNCMAMT = isnull(sum(ORNCMAMT),0)  from SOP10101 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@COMMAMNT <> @TOCOMMAMT)  begin  select @O_iErrorState = 709    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  if ((@I_vRTCLCMTD = 0) and (@ISMCTRX = 1))  begin  update SOP10101 set  COMMAMNT = round(COMMAMNT * @I_vXCHGRATE, @DECPLCUR),  OCOMMAMT = COMMAMNT,  ACTSLAMT = round(ACTSLAMT * @I_vXCHGRATE, @DECPLCUR),  ORSLSAMT = ACTSLAMT,  CMMSLAMT = round(CMMSLAMT * @I_vXCHGRATE, @DECPLCUR),  ORCOSAMT = CMMSLAMT,  CURRNIDX = @CURRNIDX,  NCOMAMNT = round(NCOMAMNT * @I_vXCHGRATE, @DECPLCUR),  ORNCMAMT = NCOMAMNT  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SLPRSNID <> ''  if (@@error <> 0)  begin  select @O_iErrorState = 733    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if ((@I_vRTCLCMTD = 1) and (@ISMCTRX = 1))  begin  update SOP10101 set  COMMAMNT = round(COMMAMNT / @I_vXCHGRATE, @DECPLCUR),  OCOMMAMT = COMMAMNT,  ACTSLAMT = round(ACTSLAMT / @I_vXCHGRATE, @DECPLCUR),  ORSLSAMT = ACTSLAMT,  CMMSLAMT = round(CMMSLAMT / @I_vXCHGRATE, @DECPLCUR),  ORCOSAMT = CMMSLAMT,  CURRNIDX = @CURRNIDX,  NCOMAMNT = round(NCOMAMNT / @I_vXCHGRATE, @DECPLCUR),  ORNCMAMT = NCOMAMNT  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SLPRSNID <> ''  if (@@error <> 0)  begin  select @O_iErrorState = 764    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @COMMAMNT = isnull(sum(COMMAMNT), 0), @CMMSLAMT = isnull(sum(CMMSLAMT), 0), @NCOMAMNT = isnull(sum(NCOMAMNT), 0),  @OCOMMAMT = isnull(sum(OCOMMAMT), 0), @ORCOSAMT = isnull(sum(ORCOSAMT), 0), @ORNCMAMT = isnull(sum(ORNCMAMT), 0)  from SOP10101 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end   if (@I_vSOPTYPE in (3,6))   begin  select @UNPSTOSA = @I_vDOCAMNT   update RM00103 set  UNPSTOSA = UNPSTOSA + @UNPSTOSA  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 170     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE = 4)  begin  select @UNPSTOSA = @I_vDOCAMNT * -1   update RM00103 set  UNPSTOSA = UNPSTOSA + @UNPSTOSA  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 133     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE = 2)   begin  update RM00103 set  ONORDAMT = ONORDAMT + @I_vSUBTOTAL,  DEPRECV = DEPRECV + @DEPOSITS  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 146     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vSOPTYPE = 5)  begin  update RM00103 set  DEPRECV = DEPRECV + @DEPOSITS  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 3768     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if exists (select 1 from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and NONINVEN = 1)  begin  select @NONINVEN = 1  end    if (@I_vSOPTYPE = 4)  begin  select @EXTDCOST = isnull(sum(EXTDCOST),0),  @OREXTCST = isnull(sum(OREXTCST),0)  from SOP10200 a (nolock), IV00101 b (nolock) where a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE and a.CMPNTSEQ = 0 and a.ITEMNMBR = b.ITEMNMBR and b.ITEMTYPE <> 5     end  else  begin  select @EXTDCOST = 0  end   if (@I_vSOPTYPE = 4) and (@NONINVEN = 1)   begin  select  @EXTDCOST = isnull(sum(EXTDCOST),0),  @OREXTCST = isnull(sum(OREXTCST),0)  from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and CMPNTSEQ = 0  end   if (@I_vSOPTYPE = 3)  begin  select @EXTDCOST = isnull(sum(EXTDCOST*-1),0),  @OREXTCST = isnull(sum(OREXTCST*-1),0)   from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and QUANTITY < 0 and CMPNTSEQ = 0   end    select @OREMSUBT = isnull(sum(round((a.QUANTITY - a.QTYCANCE) * (a.ORUNTPRC - a.ORMRKDAM), @DECPLUSED)),0)  from SOP10200 a (nolock) left outer join IV00101 b on a.ITEMNMBR = b.ITEMNMBR  where a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE and a.CMPNTSEQ = 0 and  ((b.ITEMNMBR is null) or ((a.QUANTITY > 0) or (a.QUANTITY < 0 and b.ITEMTYPE <> 3)))   if (@ISMCTRX = 1)  begin  if (@I_vRTCLCMTD = 0)   begin  select @REMSUBTO = round(@OREMSUBT * @I_vXCHGRATE, @DECPLCUR)  end  else  begin  select @REMSUBTO = round(@OREMSUBT / @I_vXCHGRATE, @DECPLCUR)  end  end  else  begin  select @REMSUBTO = @OREMSUBT  end   select @FUFILDAT = isnull(max(FUFILDAT), ''), @ACTLSHIP = isnull(max(ACTLSHIP), '') from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@PostingType = 1)   begin   select @GLPOSTDT = @dtDEFAULT   end  else  begin  select @GLPOSTDT = @I_vDOCDATE  end   exec @iStatus = taCreateUpdateBatchHeaderRcd  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vSERIES = 3,  @I_vGLPOSTDT = @GLPOSTDT,  @I_vBCHSOURC = 'Sales Entry',  @I_vDOCAMT = @I_vDOCAMNT,  @I_vORIGIN = 1,  @I_vNUMOFTRX = 1,  @I_vCHEKBKID = @I_vBatchCHEKBKID,  @I_vUSERID = @I_vUSER2ENT,         @I_vEFTFileFormat = 0,  @O_iErrorState = @iUpdtBthErrState output,  @oErrString = @iCreateBatchErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iUpdtBthErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCreateBatchErrString  select @O_iErrorState = 70     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @INTERID = INTERID, @sCompanyID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name()  if ((@I_vSOPTYPE = 2) and (@I_vPYMTRCVD > 0))  begin   select @linecount = @linecount + count(c.CMRECNUM)  from CM20300 c (nolock), CM20100 ch (nolock), SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM   select @linecount = @linecount + count(g.JRNENTRY)  from CM20300 c (nolock), CM20100 ch (nolock), SOP10103 p (nolock), GL10000 g (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  and c.USERDEF1 = g.JRNENTRY   select @linecount = @linecount + 1   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = @linecount,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 762    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @nNextNoteIndex = @nNextNoteIndex - 1   update c set c.NOTEINDX = @nNextNoteIndex, @nNextNoteIndex = @nNextNoteIndex + 1  from CM20300 c, CM20100 ch (nolock), SOP10103 p (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  if @@error <> 0  begin  select @O_iErrorState = 688    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update g set g.NOTEINDX = @nNextNoteIndex, @nNextNoteIndex = @nNextNoteIndex + 1  from CM20300 c (nolock), CM20100 ch (nolock), SOP10103 p (nolock), GL10000 g  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  and c.USERDEF1 = g.JRNENTRY  if @@error <> 0  begin  select @O_iErrorState = 3470    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @nNextNoteIndex = @nNextNoteIndex + 1  end  else  begin  select @linecount = 1  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = @linecount,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  if @iGetNextNoteIdxErrState <> 0 select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 248    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@tTRMSTNUM = 1)  begin  if (@I_vMSTRNUMB = 0)  begin  exec @iStatus = taSopGetMasterNumber  @MSTRNUMB output,  @iGetMstrErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetMstrErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetMstrErrState  select @O_iErrorState = 69    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @MSTRNUMB = @I_vMSTRNUMB  end   insert SOP40500 (MSTRNUMB)  select @MSTRNUMB  if (@@error <> 0)  begin  select @O_iErrorState = 95    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @MSTRNUMB = 0   end   if ((@I_vSOPTYPE = 3) and (@I_vPYMTRMID <> '') and ((@I_vDISAVAMT is not null) or (@I_vDSCDLRAM is not null) or (@I_vDSCPCTAM is not null)))  begin  if ((@I_vDSCDLRAM <> @DSCDLRAM) or (@I_vDSCPCTAM <> @DSCPCTAM/100))  begin  select @I_vPYMTRMID = ''  end  end   if @ISMCTRX = 0   begin  if exists(select 1 from IV00105 a (nolock), SOP10200 b (nolock) where   b.SOPNUMBE = @I_vSOPNUMBE and b.SOPTYPE = @I_vSOPTYPE and b.ITEMNMBR = a.ITEMNMBR)  begin  if not exists(select 1 from IV00105 a (nolock), SOP10200 b (nolock) where  b.SOPNUMBE = @I_vSOPNUMBE and b.SOPTYPE = @I_vSOPTYPE and b.ITEMNMBR = a.ITEMNMBR and CURNCYID <> '')  begin  select @MCINSTALLED = 0  end  end  else  begin  if not exists(select 1 from IV00105 a (nolock) where CURNCYID <> '')  begin  select @MCINSTALLED = 0  end  end  end   update c set  c.Checkbook_Amount =  case  when m.CURNCYID = c.CURNCYID  then c.ORIGAMT  when m.CURNCYID <> c.CURNCYID and c.CURNCYID = @FUNLCURR and m.CURNCYID <> ''   then 0  else c.Checkbook_Amount  end  from CM20300 c, CM20100 ch with (nolock index=AK3CM20100), SOP10103 p (nolock), CM00100 m (nolock)  where p.SOPTYPE = @I_vSOPTYPE  and p.SOPNUMBE = @I_vSOPNUMBE  and p.TRXSORCE = ch.AUDITTRAIL  and ch.RecNumControl = c.CMRECNUM  and ch.CHEKBKID = m.CHEKBKID  if (@@error <> 0)  begin  select @O_iErrorState = 5439    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCOMMNTID is null) and (@I_vCMMTTEXT = '' and @I_vCOMMENT_1 = '' and @I_vCOMMENT_2 = '' and @I_vCOMMENT_3 = '' and @I_vCOMMENT_4 = '')  begin  if (@I_vSOPTYPE <> 6)  begin  select @I_vCOMMNTID = COMMNTID from SOP40200 (nolock) where SOPTYPE = @I_vSOPTYPE and DOCID = @I_vDOCID  end   else   begin  select @I_vCOMMNTID = COMMNTID from SOP40200 (nolock) where SOPTYPE = 3 and DOCID = @I_vDOCID     end  end  else   begin  select @I_vCOMMNTID =   case  when @I_vCOMMNTID <> ''  then @I_vCOMMNTID  else ''  end  end   if ((@I_vCOMMNTID = '') and (@I_vCMMTTEXT <> '' or @I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> ''))  begin  select @Flags = 2   end   if ((@I_vSOPTYPE = 1) or (@I_vSOPTYPE = 2) or (@I_vSOPTYPE = 3) or (@I_vSOPTYPE = 6))  begin  select @WORKFLOWENABLED = WORKFLOWENABLED from DYNAMICS..SY01500 where INTERID = db_name()  if(@I_vSOPTYPE = 1)  begin  if(@WORKFLOWENABLED = 1)  begin  select @WorkflowApprStatusQuote = 1, @WorkflowPriorityQuote = 2  end  else  begin  select @WorkflowApprStatusQuote = 9, @WorkflowPriorityQuote = 2  end  end  else  begin  if(@WORKFLOWENABLED = 1)  begin   select @WorkflowApprStatCreditLm = 1, @WorkflowPriorityCreditLm = 2  end  else   begin  select @WorkflowApprStatCreditLm = 9, @WorkflowPriorityCreditLm = 2  end  end  end   select @BackoutTradeDisc = isnull(sum(BackoutTradeDisc), 0), @OrigBackoutTradeDisc = isnull(sum(OrigBackoutTradeDisc), 0)  from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@I_vPrint_Phone_NumberGB is null and @I_vPRSTADCD <> '' )  begin  select @I_vPrint_Phone_NumberGB = Print_Phone_NumberGB from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD  end  if (@I_vPrint_Phone_NumberGB is null and @I_vPRSTADCD = '')  begin  select @I_vPrint_Phone_NumberGB = 0   end    if (@I_vPrint_Phone_NumberGB not in(0,1,2,3,4))  begin  select @O_iErrorState = 11764     exec @iStatus = taUpdateString  @O_iErrorState,  @iCustomErrString,  @oErrString output,  @O_oErrorState output  end    select @SITEINACTIVE = INACTIVE from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE  if (@I_vLOCNCODE <> '' and @SITEINACTIVE = 1)  begin  select @O_iErrorState = 11809     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   insert SOP10100  (  GPSFOINTEGRATIONID,  INTEGRATIONSOURCE,  INTEGRATIONID,  EXGTBLID,  DISAVAMT,  ORDAVAMT,  TXSCHSRC,  FRGTTXBL,  MISCTXBL,  ORFRTTAX,  FRTTXAMT,  MSCTXAMT,  ORMSCTAX,  FRTAMNT,  ORFRTAMT,  MISCAMNT,  ORMISCAMT,  TAXEXMT1,    TAXEXMT2,    TXRGNNUM,    ORDISTKN,  DISTKNAM,  TRDISAMT,  ORTDISAM,  UPSZONE,  SLPRSNID,  SALSTERR,  TAXAMNT,  ORTAXAMT,  SHIPMTHD,  TAXSCHID,  BSIVCTTL,    USER2ENT,  PYMTRMID,  PRCLEVEL,  PYMTRCVD,  ORPMTRVD,  DEPRECVD,  ORDEPRVD,  MSTRNUMB,  BACHNUMB,  BCHSOURC,  USDOCID1,  USDOCID2,  DISCDATE,  DUEDATE,  REPTING,    TRXFREQU,    TIMETREP,    DYSTINCR,    ACTLSHIP,  FUFILDAT,  ReqShipDate,  RETUDATE,  ORDRDATE,  INVODATE,  BACKDATE,  QUOTEDAT,  QUOEXPDA,  DOCID,  SOPTYPE,  ORIGTYPE,  SOPNUMBE,  ORIGNUMB,  LOCNCODE,  DOCDATE,  MRKDNAMT,  ORMRKDAM,  CUSTNMBR,  CUSTNAME,  CSTPONBR,  ShipToName,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CNTCPRSN,  FAXNUMBR,  CITY,  STATE,  ZIPCODE,  CCode,  COUNTRY,  PHNUMBR1,  PHNUMBR2,  PHONE3,  COMAPPTO,  COMMAMNT,  OCOMMAMT,  CMMSLAMT,  ORCOSAMT,  NCOMAMNT,  ORNCMAMT,  SUBTOTAL,  DOCAMNT,  ORSUBTOT,  REMSUBTO,  OREMSUBT,  TXENGCLD,  ORDOCAMT,  ACCTAMNT,  ORACTAMT,  ALLOCABY,  CURNCYID,  CURRNIDX,  CREATDDT,  MODIFDT,  Tax_Date,  APLYWITH,  WITHHAMT,  PRBTADCD,  PRSTADCD,  EXTDCOST,    OREXTCST,     DISCRTND,    ORDISRTD,    COMMNTID,    REFRENCE,  SALEDATE,  NOTEINDX,  GLPOSTDT,    FRTSCHID,  MSCSCHID,  DISCFRGT,  ORDAVFRT,  DISCMISC,  ORDAVMSC,  BCKTXAMT,    OBTAXAMT,  BKTFRTAM,    ORBKTFRT,  BKTMSCAM,    ORBKTMSC,  OTAXTAMT,     TXBTXAMT,    RATETPID,  RTCLCMTD,  TIME1,  XCHGRATE,  EXCHDATE,  DSCDLRAM,  ORDDLRAT,  BackoutTradeDisc,  OrigBackoutTradeDisc,  DSCPCTAM,  SOPSTATUS,  SHIPCOMPLETE,  DIRECTDEBIT,  Flags,     TRDISPCT,   WorkflowApprStatusQuote,  WorkflowPriorityQuote,  WorkflowApprStatCreditLm,  WorkflowPriorityCreditLm,  Print_Phone_NumberGB  )  select  @I_vGPSFOINTEGRATIONID,  @I_vINTEGRATIONSOURCE,  @I_vINTEGRATIONID,  @EXGTBLID,  case   when @I_vDOCAMNT < 0   then 0  else @I_vDISAVAMT  end,  case   when @I_vDOCAMNT < 0   then 0   else @ORDAVAMT  end,  @TXSCHSRC,      @FRGTTXBL,  @MISCTXBL,  @ORFRTTAX,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @ORMSCTAX,  @I_vFREIGHT,  @ORFRTAMT,  @I_vMISCAMNT,  @ORMISCAMT,  @I_vTAXEXMT1,    @I_vTAXEXMT2,    @I_vTXRGNNUM,    case  when (@I_vSOPTYPE = 3)  then @ORDISTKN  else 0  end,  case     when (@I_vSOPTYPE = 3)  then @I_vDISTKNAM  else 0  end,  @I_vTRDISAMT,  @ORTDISAM,  @I_vUPSZONE,  @I_vSLPRSNID,  @I_vSALSTERR,  @TAXAMNTSum,  @ORTAXAMT + @ORFRTTAX + @ORMSCTAX,  @I_vSHIPMTHD,  @I_vTAXSCHID,  @BSIVCTTL,    @I_vUSER2ENT,  @I_vPYMTRMID,  @I_vPRCLEVEL,  case  when (@I_vSOPTYPE in (2,3,4,5,6))   then @PAYMENTS  else 0  end,  case  when (@I_vSOPTYPE in (2,3,4,5,6))   then @ORPAYMENTS  else 0  end,  case  when (@I_vSOPTYPE in (2,5))  then @DEPOSITS  else 0  end,  case  when (@I_vSOPTYPE in (2,5))  then @ORDEPOSITS  else 0  end,  @MSTRNUMB,  @I_vBACHNUMB,  @BCHSOURC,  @USDOCID1,  @USDOCID2,  case    when (@I_vSOPTYPE in (1,2,4,5))   then @dtDEFAULT  else @I_vDISCDATE  end,  case    when ((@I_vSOPTYPE in (1,2,4)) or (@I_vDUEDATE = @dtDEFAULT))   then @I_vDOCDATE  else @I_vDUEDATE  end,  @I_vREPTING,     @I_vTRXFREQU,     @I_vTIMETREP,     @I_vQUOTEDYSTINCR,     case    when (@I_vSOPTYPE <> 4)  then @ACTLSHIP  else @dtDEFAULT  end,  case    when (@I_vSOPTYPE <> 4)  then @FUFILDAT  else @dtDEFAULT  end,  case     when ((@I_vSOPTYPE = 1) and (@I_vReqShipDate = ''))  then @dtDEFAULT  when ((@I_vSOPTYPE <> 1) and (@I_vReqShipDate = ''))  then @I_vDOCDATE  else @I_vReqShipDate  end,  case    when (@I_vSOPTYPE = 4)  then @I_vDOCDATE  when ((@I_vSOPTYPE <> 4) and (@I_vRETUDATE = ''))  then @dtDEFAULT  else @I_vRETUDATE  end,  case    when (@I_vSOPTYPE = 2)  then @I_vDOCDATE  when ((@I_vSOPTYPE <> 2) and (@I_vORDRDATE = ''))  then @dtDEFAULT  else @I_vORDRDATE  end,  case    when (@I_vSOPTYPE in (3,6))   then @I_vDOCDATE  when ((@I_vSOPTYPE <> 3) and (@I_vINVODATE = ''))  then @dtDEFAULT  else @I_vINVODATE  end,  case    when (@I_vSOPTYPE = 5)  then @I_vDOCDATE  when ((@I_vSOPTYPE <> 5) and (@I_vBACKDATE = ''))  then @dtDEFAULT  else @I_vBACKDATE  end,  case     when (@I_vSOPTYPE = 1)  then @I_vDOCDATE  when ((@I_vSOPTYPE <> 1) and (@I_vQUOTEDAT = ''))  then @dtDEFAULT  else @I_vQUOTEDAT  end,  case    when ((@I_vSOPTYPE = 1) and (@I_vQUOEXPDA = ''))  then (@I_vDOCDATE + @DAYTOEXP)  else @I_vQUOEXPDA  end,  @I_vDOCID,  @I_vSOPTYPE,   @I_vORIGTYPE,  @I_vSOPNUMBE,  @I_vORIGNUMB,  @I_vLOCNCODE,   @I_vDOCDATE,  @I_vMRKDNAMT,  @ORMRKDAM,  @I_vCUSTNMBR,  @I_vCUSTNAME,  @I_vCSTPONBR,  @I_vShipToName,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCNTCPRSN,  @I_vFAXNUMBR,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @CCode,    @I_vCOUNTRY,  @I_vPHNUMBR1,  @I_vPHNUMBR2,  @I_vPHNUMBR3,  @COMAPPTO,  @COMMAMNT,  @OCOMMAMT,  @CMMSLAMT,  @ORCOSAMT,  @NCOMAMNT,  @ORNCMAMT,  @I_vSUBTOTAL,   @I_vDOCAMNT,   @ORSUBTOT,  @REMSUBTO,   @OREMSUBT,  case       when @I_vCREATETAXES = 1   then 1  else 0  end,  @ORDOCAMT,  @ACCTAMNT,   @ORACTAMT,  case    when (@I_vSOPTYPE = 1 or @I_vSOPTYPE = 4) or (@ALLOCABY <> 1)  then 0  else 1  end,  case   when (@MCINSTALLED = 1)  then @I_vCURNCYID  else ''  end,    @CURRNIDX,  convert(varchar(12),getdate()),  convert(varchar(12),getdate()),  case    when ((@I_vSOPTYPE = 3) or (@I_vSOPTYPE = 4) or (@I_vSOPTYPE = 6))   then @I_vDOCDATE  else @dtDEFAULT  end,  0,   0,   @I_vPRBTADCD,  @I_vPRSTADCD,  @EXTDCOST,  @OREXTCST,  case  when (@I_vSOPTYPE = 4)  then @I_vDISTKNAM  else 0  end,   case  when (@I_vSOPTYPE = 4)  then @ORDISRTD  else 0  end,  @I_vCOMMNTID,  @I_vREFRENCE,  '',   @nNextNoteIndex,  case  when ((@PostingType = 1) and ((@I_vSOPTYPE = 3) or (@I_vSOPTYPE = 4)))  then @I_vDOCDATE   else @dtDEFAULT  end,  case  when @FRGTTXBL = 1  then @I_vFRTSCHID  else ''  end,  case  when @MISCTXBL = 1  then @I_vMSCSCHID  else ''  end,  @I_vDISCFRGT,  @ORDAVFRT,  @I_vDISCMISC,  @ORDAVMSC,  @BACKOSALES,    @OBTAXAMT,  @BACKOFREHT,    @ORBKTFRT,  @BACKOMISC,    @ORBKTMSC,  @OTAXTAMT,  @TXBTXAMT,  @I_vRATETPID,  case  when @I_vRTCLCMTD = -1  then 0  else @I_vRTCLCMTD  end,  case  when (@ISMCTRX = 1)  then @I_vTIME1  else @dtDEFAULT  end,  @I_vXCHGRATE,  @I_vEXCHDATE,    case   when @I_vSOPTYPE = 3 and @USINGNEGATIVES = 1  then 0   else @I_vDSCDLRAM  end,  case   when @I_vSOPTYPE = 3 and @USINGNEGATIVES = 1  then 0  else @ORDDLRAT  end,  @BackoutTradeDisc,  @OrigBackoutTradeDisc,  @I_vDSCPCTAM * 100,  case       when @I_vSOPTYPE = 2  then 1  when @I_vSOPTYPE = 6   then 2   else 0  end,   0,     0,     @Flags,     @I_vTRADEPCT * 100,    @WorkflowApprStatusQuote,  @WorkflowPriorityQuote,  @WorkflowApprStatCreditLm,  @WorkflowPriorityCreditLm,  @I_vPrint_Phone_NumberGB  if (@@error <> 0)  begin  select @O_iErrorState = 71    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vSOPTYPE = 6)   begin  insert into SOP10112  (  SOPNUMBE,  SOPTYPE,  ORD,  Effective_Date,  TIME1,  SOPSTATUS,  USERID  )  select  @I_vSOPNUMBE,  @I_vSOPTYPE,  16384,        convert(varchar(12),getdate()),     substring(convert(varchar(25),getdate()),12,12),  2,         case  when @I_vUSER2ENT <> ''  then @I_vUSER2ENT  else 'eConnect'  end  if (@@error <> 0)  begin  select @O_iErrorState = 5333    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vCOMMNTID <> '')  begin  if ((@I_vCMMTTEXT = '') and (@I_vCOMMENT_1 = '') and (@I_vCOMMENT_2 = '') and (@I_vCOMMENT_3 = '') and (@I_vCOMMENT_4 = ''))  begin  if (exists(select 1 from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID))  begin  select @I_vCMMTTEXT = CMMTTEXT from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID   exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 2279    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if not exists( select 1 from SOP10106 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE )  begin  insert SOP10106  (  SOPTYPE,  SOPNUMBE,  USRDAT01,  USRDAT02,  USRTAB01,  USRTAB09,  USRTAB03,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select  @I_vSOPTYPE,  @I_vSOPNUMBE,  '',  '',  '',  '',  '',  '',  '',  '',  '',  '',  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vCMMTTEXT  end  else  begin  update SOP10106  set COMMENT_1 = @I_vCOMMENT_1,  COMMENT_2 = @I_vCOMMENT_2,  COMMENT_3 = @I_vCOMMENT_3,  COMMENT_4 = @I_vCOMMENT_4,  CMMTTEXT = @I_vCMMTTEXT  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end  if (@@error <> 0)  begin  select @O_iErrorState = 897    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  exec @iStatus = taCreateCommentMaster  3,  @I_vCOMMNTID,  @I_vCMMTTEXT,  @O_iErrorState = @O_iCommentMstErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iCommentMstErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @O_iCommentMstErrState  select @O_iErrorState = 901     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  else  begin  if (@I_vCMMTTEXT <> '')  begin  exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 2280    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @I_vCMMTTEXT =  rtrim(@I_vCOMMENT_1) + char(13) +  rtrim(@I_vCOMMENT_2) + char(13) +  rtrim(@I_vCOMMENT_3) + char(13) +  rtrim(@I_vCOMMENT_4)  end  if not exists( select 1 from SOP10106 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE )  begin  insert SOP10106  (  SOPTYPE,  SOPNUMBE,  USRDAT01,  USRDAT02,  USRTAB01,  USRTAB09,  USRTAB03,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select  @I_vSOPTYPE,  @I_vSOPNUMBE,  '',  '',  '',  '',  '',  '',  '',  '',  '',  '',  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vCMMTTEXT  end  else  begin  update SOP10106  set COMMENT_1 = @I_vCOMMENT_1,  COMMENT_2 = @I_vCOMMENT_2,  COMMENT_3 = @I_vCOMMENT_3,  COMMENT_4 = @I_vCOMMENT_4,  CMMTTEXT = @I_vCMMTTEXT  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end  if (@@error <> 0)  begin  select @O_iErrorState = 63    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = taCreateCommentMaster  3,  @I_vCOMMNTID,  @I_vCMMTTEXT,  @O_iErrorState = @O_iCommentMstErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iCommentMstErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @O_iCommentMstErrState  select @O_iErrorState = 3415    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  else  begin  if ((@I_vCOMMENT_1 <> '') or (@I_vCOMMENT_2 <> '') or(@I_vCOMMENT_3 <> '') or (@I_vCOMMENT_4 <> '') or (@I_vCMMTTEXT <> ''))  begin  if (@I_vCMMTTEXT <> '')  begin  exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 2278    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @I_vCMMTTEXT =  rtrim(@I_vCOMMENT_1) + char(13) +  rtrim(@I_vCOMMENT_2) + char(13) +  rtrim(@I_vCOMMENT_3) + char(13) +  rtrim(@I_vCOMMENT_4)  end   if not exists( select 1 from SOP10106 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE )  begin  insert SOP10106  (  SOPTYPE,  SOPNUMBE,  USRDAT01,  USRDAT02,  USRTAB01,  USRTAB09,  USRTAB03,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select  @I_vSOPTYPE,  @I_vSOPNUMBE,  '',  '',  '',  '',  '',  '',  '',  '',  '',  '',  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vCMMTTEXT  end  else  begin  update SOP10106  set COMMENT_1 = @I_vCOMMENT_1,  COMMENT_2 = @I_vCOMMENT_2,  COMMENT_3 = @I_vCOMMENT_3,  COMMENT_4 = @I_vCOMMENT_4,  CMMTTEXT = @I_vCMMTTEXT  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end  if (@@error <> 0)  begin  select @O_iErrorState = 2210    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   if ((@I_vNOTETEXT <> '') and (@I_vNOTETEXT is not null))  begin  insert SY03900   (  NOTEINDX,   DATE1,   TIME1,   TXTFIELD  )   select   @nNextNoteIndex,  convert(varchar(12),getdate()),  substring(convert(varchar(25),getdate()),12,12),  @I_vNOTETEXT  if (@@error <> 0)  begin  select @O_iErrorState = 9243    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@O_iErrorState <> 0)  begin  return (@O_iErrorState)  end   exec @iStatus = taCreateSOPDistributions  @I_vSOPTYPE = @I_vSOPTYPE,  @I_vSOPNUMBE = @I_vSOPNUMBE,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX,  @I_vORDOCAMT = @ORDOCAMT,  @I_vORACTAMT = @ORACTAMT,  @I_vORMISCAMT = @ORMISCAMT,  @I_vORFRTAMT = @ORFRTAMT,  @I_vORDISTKN = @ORDISTKN,  @I_vORDAVAMT = @ORDAVAMT,  @I_vORDISRTD = @ORDISRTD,  @I_vCURNCYID = @I_vCURNCYID,  @I_vCMPANYID = @sCompanyID,  @I_vINTERID = @INTERID,  @I_vRTCLCMTD = @I_vRTCLCMTD,   @I_vXCHGRATE = @I_vXCHGRATE,  @I_vTIME1 = @I_vTIME1,  @I_vRATETPID = @I_vRATETPID,  @I_vEXGTBLID = @EXGTBLID,  @I_vEXCHDATE = @I_vEXCHDATE,  @I_vTRXSORCE = '',  @I_vCREATEDIST = @I_vCREATEDIST,  @I_vDECPLCUR = @DECPLCUR,  @I_vORDECPLCUR = @DECPLUSED,   @I_vFNDECPLCUR = @DECPLCUR,   @O_iErrorState = @taCreateSOPDistributionsErrState output,  @oErrString = @taCreateSOPDistributionsErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iErrorState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taCreateSOPDistributionsErrString  select @O_iErrorState = 72     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not exists(select 1 from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE)  begin  update SOP10200 set BKTSLSAM = 0, ORBKTSLS = 0  where SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 6356    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  update SOP10200 set BKTSLSAM = 0, ORBKTSLS = 0  where SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and  LNITMSEQ not in(select LNITMSEQ from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and BKOUTTAX = 1)  if (@@error <> 0)  begin  select @O_iErrorState = 4634    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@BSIVCTTL = 1)  begin  update SOP10200 set BSIVCTTL = 1  where SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and  CMPNTSEQ = 0 and  LNITMSEQ in(select LNITMSEQ from SOP10105 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and   TAXDTLID in(select TAXDTLID from TX00201 (nolock)where (TXDTQUAL = 3 and (TDTABMIN > 0 or TDTABMAX > 0)) or(TDTAXMIN > 0 or TDTAXMAX > 0)))  if (@@error <> 0)  begin  select @O_iErrorState = 8106    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   insert SOP10104  (  SOPTYPE,  SOPNUMBE,  PRCHLDID,  DELETE1,  USERID,  HOLDDATE,  TIME1,  TRXSORCE  )  select  @I_vSOPTYPE,  @I_vSOPNUMBE,  PRCHLDID,  0,  @I_vUSER2ENT,  @CurrDate,  @CurrTime,  ''  from SOP40201 (nolock) where SOPTYPE = @I_vSOPTYPE and DOCID = @I_vDOCID  if (@@error <> 0)  begin  select @O_iErrorState = 1563    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if (exists(select 1 from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE))  begin  if (@I_vRequesterTrx = 0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Sales_Transaction',  @I_vINDEX1 = @I_vSOPNUMBE,  @I_vINDEX2 = @I_vSOPTYPE,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 2298    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   exec @iStatus = taSopHdrRecalc  @I_vSOPTYPE = @I_vSOPTYPE,  @I_vSOPNUMBE = @I_vSOPNUMBE,  @I_vTAXSCHID = @I_vTAXSCHID,  @I_vFRTSCHID = @I_vFRTSCHID,  @I_vMSCSCHID = @I_vMSCSCHID,  @I_vSHIPMTHD = @I_vSHIPMTHD,  @I_vLOCNCODE = @I_vLOCNCODE,  @I_vDOCDATE = @I_vDOCDATE,  @I_vFREIGHT = @I_vFREIGHT,  @I_vMISCAMNT = @I_vMISCAMNT,  @I_vTRDISAMT = @I_vTRDISAMT,  @I_vTRADEPCT = @I_vTRADEPCT,  @I_vDISTKNAM = @I_vDISTKNAM,  @I_vCUSTNAME = @I_vCUSTNAME,  @I_vCSTPONBR = @I_vCSTPONBR,  @I_vShipToName = @I_vShipToName,  @I_vADDRESS1 = @I_vADDRESS1,  @I_vADDRESS2 = @I_vADDRESS2,  @I_vADDRESS3 = @I_vADDRESS3,  @I_vCNTCPRSN = @I_vCNTCPRSN,  @I_vFAXNUMBR = @I_vFAXNUMBR,  @I_vCITY = @I_vCITY,  @I_vSTATE = @I_vSTATE,  @I_vZIPCODE = @I_vZIPCODE,  @I_vCOUNTRY = @I_vCOUNTRY,  @I_vPHNUMBR1 = @I_vPHNUMBR1,  @I_vPHNUMBR2 = @I_vPHNUMBR2,  @I_vPHNUMBR3 = @I_vPHNUMBR3,  @I_vPrint_Phone_NumberGB = @I_vPrint_Phone_NumberGB,  @I_vPYMTRCVD = @I_vPYMTRCVD,  @I_vSALSTERR = @I_vSALSTERR,  @I_vSLPRSNID = @I_vSLPRSNID,  @I_vUPSZONE = @I_vUPSZONE,  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vPRBTADCD = @I_vPRBTADCD,  @I_vPRSTADCD = @I_vPRSTADCD,  @I_vORDRDATE = @I_vORDRDATE,  @I_vPYMTRMID = @I_vPYMTRMID,  @I_vDUEDATE  = @I_vDUEDATE,  @I_vDISCDATE  = @I_vDISCDATE,  @I_vREFRENCE = @I_vREFRENCE,  @I_vBatchCHEKBKID = @I_vBatchCHEKBKID,  @I_vRECREATECOMM = @I_vCREATECOMM,  @I_vCOMPRCNT = @I_vCOMPRCNT,  @I_vRECREATEDIST = @I_vCREATEDIST,  @I_vRECREATETAXES = @I_vCREATETAXES,  @I_vDEFTAXSCHDS = @I_vDEFTAXSCHDS,  @I_vXCHGRATE = @I_vXCHGRATE,  @I_vRATETPID = @I_vRATETPID,  @I_vEXPNDATE = @I_vEXPNDATE,  @I_vEXCHDATE = @I_vEXCHDATE,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR,  @I_vDYSTINCR = @I_vDYSTINCR,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vRTCLCMTD = @I_vRTCLCMTD,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vTIME1 = @I_vTIME1,  @I_vDISAVAMT = @I_vDISAVAMT,  @I_vDSCDLRAM = @I_vDSCDLRAM,  @I_vDSCPCTAM = @I_vDSCPCTAM,  @I_vFREIGTBLE = @I_vFREIGTBLE,  @I_vMISCTBLE = @I_vMISCTBLE,  @I_vCOMMNTID = @I_vCOMMNTID,  @I_vCOMMENT_1 = @I_vCOMMENT_1,  @I_vCOMMENT_2 = @I_vCOMMENT_2,  @I_vCOMMENT_3 = @I_vCOMMENT_3,  @I_vCOMMENT_4 = @I_vCOMMENT_4,  @I_vGPSFOINTEGRATIONID = @I_vGPSFOINTEGRATIONID,  @I_vINTEGRATIONSOURCE = @I_vINTEGRATIONSOURCE,  @I_vINTEGRATIONID = @I_vINTEGRATIONID,  @I_vReqShipDate = @I_vReqShipDate,  @I_vRequesterTrx = 1,  @I_vQUOEXPDA = @I_vQUOEXPDA,  @I_vQUOTEDAT = @I_vQUOTEDAT,  @I_vINVODATE = @I_vINVODATE,  @I_vBACKDATE = @I_vBACKDATE,  @I_vRETUDATE = @I_vRETUDATE,  @I_vCMMTTEXT = @I_vCMMTTEXT,  @I_vRECALCBTCHTOT = 3,        @I_vCKCreditLimit = @I_vCKCreditLimit,  @I_vCKHOLD = @I_vCKHOLD,  @I_vPRCLEVEL = @I_vPRCLEVEL,       @I_vTAXEXMT1 = @I_vTAXEXMT1,       @I_vTAXEXMT2 = @I_vTAXEXMT2,        @I_vTXRGNNUM = @I_vTXRGNNUM,       @I_vREPTING = @I_vREPTING,        @I_vTRXFREQU = @I_vTRXFREQU,       @I_vTIMETREP = @I_vTIMETREP,       @I_vQUOTEDYSTINCR = @I_vQUOTEDYSTINCR,     @I_vNOTETEXT = @I_vNOTETEXT,  @I_vUSRDEFND1 = @I_vUSRDEFND1,  @I_vUSRDEFND2 = @I_vUSRDEFND2,  @I_vUSRDEFND3 = @I_vUSRDEFND3,  @I_vUSRDEFND4 = @I_vUSRDEFND4,  @I_vUSRDEFND5 = @I_vUSRDEFND5,  @O_iErrorState = @taSopHdrRecalcErrState output,  @oErrString = @taSopHdrRecalcErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@taSopHdrRecalcErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taSopHdrRecalcErrString  select @O_iErrorState = 2218    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 2217    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taSopHdrIvcInsertPost  @I_vSOPTYPE,  @I_vDOCID,  @I_vSOPNUMBE,  @I_vORIGNUMB,  @I_vORIGTYPE,  @I_vTAXSCHID,  @I_vFRTSCHID,  @I_vMSCSCHID,  @I_vSHIPMTHD,  @I_vTAXAMNT,  @I_vLOCNCODE,  @I_vDOCDATE,  @I_vFREIGHT,  @I_vMISCAMNT,  @I_vTRDISAMT,  @I_vTRADEPCT,  @I_vDISTKNAM,  @I_vMRKDNAMT,  @I_vCUSTNMBR,  @I_vCUSTNAME,  @I_vCSTPONBR,  @I_vShipToName,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCNTCPRSN,  @I_vFAXNUMBR,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCOUNTRY,  @I_vPHNUMBR1,  @I_vPHNUMBR2,  @I_vPHNUMBR3,  @I_vPrint_Phone_NumberGB,  @I_vSUBTOTAL,  @I_vDOCAMNT,  @I_vPYMTRCVD,  @I_vSALSTERR,  @I_vSLPRSNID,  @I_vUPSZONE,  @I_vUSER2ENT,  @I_vBACHNUMB,  @I_vPRBTADCD,  @I_vPRSTADCD,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @I_vORDRDATE,  @I_vMSTRNUMB,  @I_vPYMTRMID,  @I_vDUEDATE,  @I_vDISCDATE,  @I_vREFRENCE,  @I_vUSINGHEADERLEVELTAXES,  @I_vBatchCHEKBKID,  @I_vCREATECOMM,  @I_vCOMMAMNT,  @I_vCOMPRCNT,  @I_vCREATEDIST,  @I_vCREATETAXES,  @I_vDEFTAXSCHDS,  @I_vCURNCYID,      @I_vXCHGRATE,      @I_vRATETPID,      @I_vEXPNDATE,      @I_vEXCHDATE,      @I_vEXGTBDSC,      @I_vEXTBLSRC,      @I_vRATEEXPR,      @I_vDYSTINCR,      @I_vRATEVARC,      @I_vTRXDTDEF,      @I_vRTCLCMTD,      @I_vPRVDSLMT,      @I_vDATELMTS,       @I_vTIME1,      @I_vDISAVAMT,  @I_vDSCDLRAM,  @I_vDSCPCTAM,  @I_vFREIGTBLE,  @I_vMISCTBLE,  @I_vCOMMNTID,  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vGPSFOINTEGRATIONID,  @I_vINTEGRATIONSOURCE,  @I_vINTEGRATIONID,  @I_vReqShipDate,  @I_vRequesterTrx,  @I_vCKCreditLimit,  @I_vCKHOLD,  @I_vUpdateExisting,  @I_vQUOEXPDA,  @I_vQUOTEDAT,  @I_vINVODATE,  @I_vBACKDATE,  @I_vRETUDATE,  @I_vCMMTTEXT,  @I_vPRCLEVEL,   @I_vDEFPRICING,   @I_vTAXEXMT1,  @I_vTAXEXMT2,  @I_vTXRGNNUM,  @I_vREPTING,  @I_vTRXFREQU,  @I_vTIMETREP,  @I_vQUOTEDYSTINCR,  @I_vNOTETEXT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 600    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 2018    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taSopHdrIvcInsert] TO [DYNGRP]
GO

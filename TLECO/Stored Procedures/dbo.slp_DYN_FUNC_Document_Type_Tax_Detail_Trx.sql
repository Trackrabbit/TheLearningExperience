SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[slp_DYN_FUNC_Document_Type_Tax_Detail_Trx] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlaccessstring varchar(1000),  @I_iDictID int, @I_sFunctionName varchar(100), @I_iFunctionEnum int, @Financial_General_Entry varchar(255),  @Receivables_Sales__Invoices varchar(255),  @Receivables_Scheduled_Payments varchar(255),  @Receivables_Debit_Memos varchar(255),  @Receivables_Finance_Charges varchar(255),  @Receivables_Service__Repairs varchar(255),  @Receivables_Warranty varchar(255),  @Receivables_Credit_Memo varchar(255),  @Receivables_Returns varchar(255),  @Receivables_Payments varchar(255),  @Invoicing_Invoice varchar(255),  @Invoicing_Return varchar(255),  @Invoicing_Packing_Slip varchar(255),  @Sales_Invoice varchar(255),  @Sales_Return varchar(255),  @Payables_Invoice varchar(255),  @Payables_Finance_Charge varchar(255),  @Payables_Misc_Charge varchar(255),  @Payables_Return varchar(255),  @Payables_Credit__Memo varchar(255),  @Payables_Payment varchar(255),  @Payables_Schedule varchar(255),  @Purchasing_Invoice varchar(255)  select @I_iDictID = 0 select @I_sFunctionName = 'DYN_FUNC_Document_Type_Tax_Detail_Trx' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Financial_General_Entry output  select @I_iFunctionEnum = 2 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Sales__Invoices output  select @I_iFunctionEnum = 3 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Scheduled_Payments output  select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Debit_Memos output  select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Finance_Charges output  select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Service__Repairs output  select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Warranty output  select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Credit_Memo output  select @I_iFunctionEnum = 9 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Returns output  select @I_iFunctionEnum = 10 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Receivables_Payments output  select @I_iFunctionEnum = 11 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Invoicing_Invoice output  select @I_iFunctionEnum = 12 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Invoicing_Return output  select @I_iFunctionEnum = 13 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Invoicing_Packing_Slip output  select @I_iFunctionEnum = 14 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Sales_Invoice output  select @I_iFunctionEnum = 15 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Sales_Return output  select @I_iFunctionEnum = 16 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Invoice output  select @I_iFunctionEnum = 17 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Finance_Charge output  select @I_iFunctionEnum = 18 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Misc_Charge output  select @I_iFunctionEnum = 19 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Return output  select @I_iFunctionEnum = 20 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Credit__Memo output  select @I_iFunctionEnum = 21 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Payment output  select @I_iFunctionEnum = 22 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Payables_Schedule output  select @I_iFunctionEnum = 23 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Purchasing_Invoice output  select @sqldropstring =  'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[DYN_FUNC_Document_Type_Tax_Detail_Trx]'') and xtype in (N''FN'',N''IF'',N''TF'')) ' +  'drop function [dbo].[DYN_FUNC_Document_Type_Tax_Detail_Trx] '  select @sqlstring1 =  'create function [dbo].[DYN_FUNC_Document_Type_Tax_Detail_Trx] (@iIntEnum integer) returns varchar(100) ' +  'as  '+ 'begin  '+ 'declare @oVarcharValuestring varchar(100) ' + 'set @oVarcharValuestring = ' + 'case ' +  ' when @iIntEnum = 1 then ''' + @Financial_General_Entry + '''' +  ' when @iIntEnum = 2 then ''' + @Receivables_Sales__Invoices + '''' +  ' when @iIntEnum = 3 then ''' + @Receivables_Scheduled_Payments + '''' +  ' when @iIntEnum = 4 then ''' + @Receivables_Debit_Memos + '''' +  ' when @iIntEnum = 5 then ''' + @Receivables_Finance_Charges + '''' +  ' when @iIntEnum = 6 then ''' + @Receivables_Service__Repairs + '''' +  ' when @iIntEnum = 7 then ''' + @Receivables_Warranty + '''' +  ' when @iIntEnum = 8 then ''' + @Receivables_Credit_Memo + '''' +  ' when @iIntEnum = 9 then ''' + @Receivables_Returns + '''' +  ' when @iIntEnum = 10 then ''' + @Receivables_Payments + '''' +  ' when @iIntEnum = 11 then ''' + @Invoicing_Invoice + '''' +  ' when @iIntEnum = 12 then ''' + @Invoicing_Return + '''' +  ' when @iIntEnum = 13 then ''' + @Invoicing_Packing_Slip + '''' +  ' when @iIntEnum = 14 then ''' + @Sales_Invoice + '''' +  ' when @iIntEnum = 15 then ''' + @Sales_Return + '''' +  ' when @iIntEnum = 16 then ''' + @Payables_Invoice + '''' +  ' when @iIntEnum = 17 then ''' + @Payables_Finance_Charge + '''' +  ' when @iIntEnum = 18 then ''' + @Payables_Misc_Charge + '''' +  ' when @iIntEnum = 19 then ''' + @Payables_Return + '''' +  ' when @iIntEnum = 20 then ''' + @Payables_Credit__Memo + '''' +  ' when @iIntEnum = 21 then ''' + @Payables_Payment + '''' +  ' when @iIntEnum = 22 then ''' + @Payables_Schedule + '''' +  ' when @iIntEnum = 23 then ''' + @Purchasing_Invoice + '''' +  ' else '''' ' +  ' end ' +  ' RETURN(@oVarcharValuestring) ' +  ' END '  exec (@sqldropstring)  exec (@sqlstring1+' '+@sqlstring2)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[slp_DYN_FUNC_Document_Type_Tax_Detail_Trx] TO [DYNGRP]
GO

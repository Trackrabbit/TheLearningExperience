SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create   procedure [dbo].[aagMLCreatePreBudgetRunSetup]  @SysColTable nvarchar(30),  @ColTable nvarchar(30),  @LvlTable nvarchar(30),  @PrdStr nvarchar(100),  @YEARStr nvarchar(100),  @YEAR1 nvarchar(4),  @UNITFlag integer as begin  set nocount on  declare @aaOrderBud int,  @aaOrderLvl int,  @aaOrder int,  @aaColumn int,  @aaISCodeSpread int,  @aaTrxDimID int,  @aaBudgetTreeID int,  @Cnt int,  @CodeStr2   nvarchar(500),   @DummyCodeStr   nvarchar(500),   @aaAcctCode nvarchar(50),  @USERID char(15),   @Plus nvarchar(10),  @REPTYPE nvarchar(5)   select  @aaOrderBud  = 0,  @aaOrderLvl  = 0,  @aaISCodeSpread  = 0,  @aaColumn  = 0,  @aaTrxDimID  = 0,  @aaBudgetTreeID  = 0,  @aaOrder  = 0,  @CodeStr2  = null,  @aaAcctCode  = ' ',  @Cnt   = 0   if exists(select name from tempdb..sysobjects where name = '##BudParam'    and type = 'U') drop table ##BudParam  if exists(select name from tempdb..sysobjects where name = '##Level'    and type = 'U') drop table ##Level  create table ##BudParam (USERID char(15) primary key, aaBudgetTreeID integer,  YEAR1 nvarchar(4), YEARStr nvarchar(100), PrdStr nvarchar(100),  AcctCode nvarchar(50),AcctStr nvarchar(500),REPTYPE char(5),  CodeStr2 nvarchar(500), DummyCodeStr nvarchar(500))   create table ##Level(aaColumn integer, aaTrxDimID integer,aaOrder integer,aaISCodeSpread integer)   if @UNITFlag =  1  begin  set @REPTYPE = '1,2'  end  else if @UNITFlag = 2  begin  set @REPTYPE = '1'   end   else if @UNITFlag = 3  begin  set @REPTYPE = '2'  end  set @Plus  = '''+'''  exec('update ' + @LvlTable + ' set aaOrder = aaOrder * -1  where aaIsCodeSpread <> 1')  exec('declare cOrd cursor fast_forward for select aaOrder,aaColumn from '  + @LvlTable + ' where aaOrder < 0 order by aaOrder desc')  open cOrd   fetch next from cOrd into @aaOrder, @aaColumn  while @@fetch_status = 0  begin  set @Cnt = @Cnt + 1   exec('update '+ @LvlTable +'  set aaOrder =  ' +@Cnt +  '  where aaColumn = ' + @aaColumn + ' and aaOrder = ' + @aaOrder)   fetch next from cOrd into @aaOrder, @aaColumn  end  close cOrd  deallocate cOrd  set @Cnt = 0  select @USERID = ''''+system_user+''''  exec('insert into  ##BudParam (USERID) select ' +@USERID )  exec('declare @aaBudgetTreeID int  select top 1 @aaBudgetTreeID = aaBudgetTreeID from ' + @SysColTable +  ' where aaColumn > 80 update ##BudParam set aaBudgetTreeID = @aaBudgetTreeID')  exec('insert into ##Level select b.aaColumn, a.aaTrxDimID,b.aaOrder,  b.aaIsCodeSpread from '+@ColTable +' as a, '+ @LvlTable + ' as b  where a.aaColumn = b.aaColumn and b.aaColumn<> -1')  declare cLvl cursor fast_forward for  select AAG00901.aaOrder ,##Level.aaOrder,##Level.aaISCodeSpread ,AAG00901.aaTrxDimID  from ##Level RIGHT OUTER JOIN  AAG00901 ON ##Level.aaTrxDimID = AAG00901.aaTrxDimID  where AAG00901.aaBudgetTreeID = (select aaBudgetTreeID from ##BudParam )  and AAG00901.aaTrxDimID <= (select max(##Level.aaTrxDimID) from ##Level)   order by AAG00901.aaOrder    open cLvl  fetch next from cLvl into @aaOrderBud,@aaOrderLvl ,@aaISCodeSpread ,@aaTrxDimID  while @@fetch_status = 0  begin   if (@aaOrderLvl IS NULL)   begin  if @DummyCodeStr is null  begin   SET @DummyCodeStr  = 'Dummy' + rtrim(ltrim(str(@aaOrderBud)))   end  else  begin  SET @DummyCodeStr  = @DummyCodeStr + ',' + 'Dummy' + ltrim(rtrim(str(@aaOrderBud)))   end  end  if @aaISCodeSpread = 1 and  @aaTrxDimID is not null  begin  if @CodeStr2 is null  begin  set @CodeStr2 =  'L0_codeID'   exec('update ##BudParam set CodeStr2 = ''' + @CodeStr2 + ''' where USERID = ' + @USERID)   SET @DummyCodeStr  = @CodeStr2  end  else  begin   update ##BudParam set CodeStr2 =  CodeStr2 + ','  set @CodeStr2 = ''''+'L0_codeID'+''''  SET @DummyCodeStr  = @DummyCodeStr + ',L0_codeID'   exec('update ##BudParam set CodeStr2 =  CodeStr2 + ' + @CodeStr2 +' where USERID = ' + @USERID)   end  end  else if @aaISCodeSpread = 0 and  @aaTrxDimID is not null  begin  if @CodeStr2 is null  begin   set @CodeStr2 = 'L'+ltrim(str(@aaOrderLvl))+'_codeID'   exec('update ##BudParam set CodeStr2 = ''' + @CodeStr2 +''' where USERID = ' + @USERID)    if @DummyCodeStr is null  begin  set @DummyCodeStr = @CodeStr2  exec('update ##BudParam set DummyCodeStr = ''' + @DummyCodeStr +''' where USERID = ' + @USERID)   end  else  begin   select @DummyCodeStr = @DummyCodeStr + ',' + @CodeStr2  exec('update ##BudParam set DummyCodeStr = ''' + @DummyCodeStr +  ''' where USERID = ' + @USERID)   end  end  else   begin   set @CodeStr2 = ''''+'L'+ltrim(str(@aaOrderLvl))+'_codeID'+''''   update ##BudParam set CodeStr2 =  CodeStr2 + ','  set @DummyCodeStr = @DummyCodeStr + ',' + 'L'+ltrim(str(@aaOrderLvl))+'_codeID'   exec(' update ##BudParam set CodeStr2 =  CodeStr2 + ' + @CodeStr2 + ' where USERID = ' + @USERID)   end  end   fetch next from cLvl into @aaOrderBud,@aaOrderLvl ,@aaISCodeSpread ,@aaTrxDimID   end   exec(' update ##BudParam set DummyCodeStr = '''+ @DummyCodeStr  + ''' where USERID = ' + @USERID)   close cLvl  deallocate cLvl  exec('update ##BudParam set AcctCode = '''+@aaAcctCode+'''  , YEAR1 = '''+@YEAR1+''', YEARStr = '''+@YEARStr+  ''' ,PrdStr = '''+ @PrdStr+''', REPTYPE = '''+@REPTYPE+'''   where USERID = ' + @USERID)  exec('declare @Cnt int, @aaOrder integer , @aaISCodeSpread int, @REPTYPE char(5)   select  @Cnt = 0, @REPTYPE = ''1,2''   select @Cnt = count(*), @aaOrder = aaOrder,  @aaISCodeSpread = aaISCodeSpread from ##Level  where aaColumn = 6   group by aaOrder ,aaISCodeSpread  if @Cnt  = 1  begin  set @REPTYPE = ''3''  if @aaISCodeSpread = 1 set @aaOrder = 0  update ##BudParam set AcctCode = ''L''+ltrim(str(@aaOrder))+''_codeID'',  REPTYPE = @REPTYPE where USERID = '+@USERID+'  end ')  set nocount off end    
GO
GRANT EXECUTE ON  [dbo].[aagMLCreatePreBudgetRunSetup] TO [DYNGRP]
GO

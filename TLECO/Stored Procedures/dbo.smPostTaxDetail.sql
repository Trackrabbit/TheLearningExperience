SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smPostTaxDetail]  @I_cTaxDetail char(15) = NULL,  @I_mTaxAmt numeric(19,5) = NULL,  @I_mTotalTaxableAmt numeric(19,5) = NULL,  @I_mTotalAmt numeric(19,5) = NULL,  @I_sFiscPeriod smallint = NULL,  @I_sFiscYear smallint = NULL,  @I_dDocDate datetime = NULL,  @O_iErrorState int  = NULL output as  declare   @TRUE tinyint,  @FALSE tinyint,  @iError int,  @iStatus int,  @TAX_PERIOD_HIST_TYPE_CALENDAR int,  @TAX_PERIOD_HIST_TYPE_FISCAL int,  @tLoop tinyint,  @tTransaction tinyint,  @cTaxDetailId char(15),  @tKeepCalHist tinyint,  @tKeepFiscHist tinyint  select  @O_iErrorState = 0  while (@tLoop is NULL)  begin   select @tLoop = 1   if @I_cTaxDetail  is NULL or   @I_sFiscPeriod  is NULL or  @I_sFiscYear  is NULL or  @I_dDocDate  is NULL  begin  select @O_iErrorState = 21082  break  end    select  @TRUE = 1,  @FALSE = 0   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'TAX_PERIOD_HIST_TYPE_CALENDAR',  @TAX_PERIOD_HIST_TYPE_CALENDAR output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'TAX_PERIOD_HIST_TYPE_FISCAL',  @TAX_PERIOD_HIST_TYPE_FISCAL output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus   if not exists(  select   1  from   TX00201 with (NOLOCK)  where  TAXDTLID = @I_cTaxDetail  )  begin  select @O_iErrorState = 21084  break  end    select   @tKeepCalHist = KPCALHST,  @tKeepFiscHist = KPERHIST  from  TX00202 with (NOLOCK)  where   TAXDTLID = @I_cTaxDetail   if @tKeepCalHist is null  begin  select @O_iErrorState = 21083  break  end   if @@trancount = 0  begin  select @tTransaction = 1  begin transaction  end    update  TX00202  set  TDTSYTD = TDTSYTD + @I_mTotalAmt,     TXDTSYTD = TXDTSYTD + @I_mTotalTaxableAmt,    TXDSTYTD = TXDSTYTD + @I_mTaxAmt    where  TAXDTLID = @I_cTaxDetail   if @tKeepCalHist = @TRUE  begin  if not exists(  select   1  from   TX00203 with (nolock)  where  TAXDTLID = @I_cTaxDetail   and HISTTYPE = @TAX_PERIOD_HIST_TYPE_CALENDAR  and YEAR1 = datepart(year, @I_dDocDate)  and PERIODID = datepart(month, @I_dDocDate)  )  begin  insert into  TX00203  values (@TAX_PERIOD_HIST_TYPE_CALENDAR,  datepart(year, @I_dDocDate),  datepart(month, @I_dDocDate),  @I_cTaxDetail,  @I_mTotalAmt,  @I_mTotalTaxableAmt,  @I_mTaxAmt)  end   else   begin  update   TX00203  set  TDTSLPCH = TDTSLPCH + @I_mTotalAmt,     TXDTTXSP = TXDTTXSP + @I_mTotalTaxableAmt,   TXDTSPTX = TXDTSPTX + @I_mTaxAmt    where  TAXDTLID = @I_cTaxDetail   and HISTTYPE = @TAX_PERIOD_HIST_TYPE_CALENDAR  and YEAR1 = datepart(year, @I_dDocDate)  and PERIODID = datepart(month, @I_dDocDate)  end  end   if @tKeepFiscHist = @TRUE  begin  if not exists(  select   1  from   TX00203 with (nolock)  where  TAXDTLID = @I_cTaxDetail   and HISTTYPE = @TAX_PERIOD_HIST_TYPE_FISCAL  and YEAR1 = @I_sFiscYear  and PERIODID = @I_sFiscPeriod)  begin  insert into  TX00203  values (@TAX_PERIOD_HIST_TYPE_FISCAL,  @I_sFiscYear,  @I_sFiscPeriod,  @I_cTaxDetail,  @I_mTotalAmt,  @I_mTotalTaxableAmt,  @I_mTaxAmt)  end   else   begin  update   TX00203  set  TDTSLPCH = TDTSLPCH + @I_mTotalAmt,     TXDTTXSP = TXDTTXSP + @I_mTotalTaxableAmt,   TXDTSPTX = TXDTSPTX + @I_mTaxAmt    where  TAXDTLID = @I_cTaxDetail   and HISTTYPE = @TAX_PERIOD_HIST_TYPE_FISCAL  and YEAR1 = @I_sFiscYear  and PERIODID = @I_sFiscPeriod  end  end  end   if @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return     
GO
GRANT EXECUTE ON  [dbo].[smPostTaxDetail] TO [DYNGRP]
GO

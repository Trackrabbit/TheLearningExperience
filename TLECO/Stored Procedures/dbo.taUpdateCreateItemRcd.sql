SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taUpdateCreateItemRcd]  @I_vITEMNMBR char(30),      @I_vITEMDESC char(100) = null,    @I_vITMSHNAM char(15) = null,          @I_vITMGEDSC char(10) = null,    @I_vITMCLSCD char(10) = null,    @I_vITEMTYPE smallint = null,     @I_vVCTNMTHD smallint = null,    @I_vTAXOPTNS smallint = null,    @I_vITMTSHID char(15) = null,    @I_vUOMSCHDL char(10) = null,    @I_vITEMSHWT numeric(8,2) = null,   @I_vTCC char(30) = null,     @I_vCNTRYORGN char(6) = null,    @I_vDECPLQTY smallint = null,    @I_vDECPLCUR smallint = null,    @I_vPurchase_Tax_Options smallint=null,  @I_vPurchase_Item_Tax_Schedu char(15) = null,  @I_vSTNDCOST numeric(19,5) = null,   @I_vCURRCOST numeric(19,5) = null,   @I_vLISTPRCE numeric(19,5) = null,   @I_vNOTETEXT varchar(8000) = null,   @I_vALTITEM1 char(30) = null,    @I_vALTITEM2 char(30) = null,    @I_vITMTRKOP smallint = null,    @I_vLOTTYPE char(10) = null,    @I_vLOTEXPWARN tinyint = null,    @I_vLOTEXPWARNDAYS smallint = null,   @I_vINCLUDEINDP tinyint = null,    @I_vMINSHELF1 smallint = null,    @I_vMINSHELF2 smallint = null,    @I_vALWBKORD tinyint = null,    @I_vWRNTYDYS smallint = null,    @I_vABCCODE smallint = null,    @I_vUSCATVLS_1 char(10) = null,    @I_vUSCATVLS_2 char(10) = null,    @I_vUSCATVLS_3 char(10) = null,    @I_vUSCATVLS_4 char(10) = null,    @I_vUSCATVLS_5 char(10) = null,    @I_vUSCATVLS_6 char(10) = null,    @I_vKPCALHST tinyint = null,    @I_vKPERHIST tinyint = null,    @I_vKPTRXHST tinyint = null,    @I_vKPDSTHST tinyint = null,    @I_vIVIVACTNUMST varchar(75) = null,  @I_vIVIVOFACTNUMST varchar(75) = null,  @I_vIVCOGSACTNUMST varchar(75) = null,  @I_vIVSLSACTNUMST varchar(75) = null,  @I_vIVSLDSACTNUMST varchar(75) = null,  @I_vIVSLRNACTNUMST varchar(75) = null,  @I_vIVINUSACTNUMST varchar(75) = null,  @I_vIVINSVACTNUMST varchar(75) = null,  @I_vIVDMGACTNUMST varchar(75) = null,  @I_vIVVARACTNUMST varchar(75) = null,  @I_vDPSHPACTNUMST varchar(75) = null,  @I_vPURPVACTNUMST varchar(75) = null,  @I_vUPPVACTNUMST varchar(75) = null,  @I_vIVRETACTNUMST varchar(75) = null,  @I_vASMVRACTNUMST varchar(75) = null,  @I_vKTACCTSR smallint = null,    @I_vPRCHSUOM char(8) = null,    @I_vRevalue_Inventory tinyint = null,  @I_vTolerance_Percentage numeric(19,2) = null,  @I_vLOCNCODE char(10) = null,    @I_vPRICMTHD smallint = null,    @I_vPriceGroup char(10) = null,    @I_vUseQtyOverageTolerance tinyint = null,  @I_vUseQtyShortageTolerance tinyint = null, @I_vQtyOverTolerancePercent int = null,  @I_vQtyShortTolerancePercent int = null,  @I_vUseItemClass tinyint = 0,    @I_vUpdateIfExists tinyint = 1,    @I_vRequesterTrx smallint = 0,    @I_vUSRDEFND1 char(50) = null,       @I_vUSRDEFND2 char(50) = null,       @I_vUSRDEFND3 char(50) = null,       @I_vUSRDEFND4 varchar(8000) = null,   @I_vUSRDEFND5 varchar(8000) = null,   @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int,  @exists tinyint,  @sCompanyID smallint,  @nNextNoteIndex numeric(19,5),  @iGetNextNoteIdxErrState int,  @ActualDate datetime,  @ActualTime datetime,  @UseRolldown tinyint,  @IVIVINDX int,  @IVIVOFIX int,  @IVCOGSIX int,  @IVSLSIDX int,  @IVSLDSIX int,  @IVSLRNIX int,  @IVINUSIX int,  @IVINSVIX int,  @IVDMGIDX int,  @IVVARIDX int,  @DPSHPIDX int,  @PURPVIDX int,  @UPPVIDX int,  @IVRETIDX int,  @ASMVRIDX int,  @ISMCREG tinyint,  @FUNLCURR char(15),  @DECPLCUR int,  @ITEMTYPE smallint,  @VCTNMTHD smallint,  @STNDCOST numeric(19,5),  @UOMSCHDL char(10),  @UMDPQTYS smallint,  @ACTIVE tinyint,  @ACCTTYPE smallint,  @FUNCRIDX int,  @uofmchanged tinyint,  @PRCLEVEL char(10),   @ExistingPRCLEVEL char(10),  @DECPLQTY smallint  select @O_iErrorState = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @iError = 0,  @exists = 0,  @sCompanyID = 0,  @nNextNoteIndex = 0,  @iGetNextNoteIdxErrState = 0,  @ActualDate = '',  @ActualTime = '',  @UseRolldown = 0,  @IVIVINDX = 0,  @IVIVOFIX = 0,  @IVCOGSIX = 0,  @IVSLSIDX = 0,  @IVSLDSIX = 0,  @IVSLRNIX = 0,  @IVINUSIX = 0,  @IVINSVIX = 0,  @IVDMGIDX = 0,  @IVVARIDX = 0,  @DPSHPIDX = 0,  @PURPVIDX = 0,  @UPPVIDX = 0,  @IVRETIDX = 0,  @ASMVRIDX = 0,  @ISMCREG = 1,  @FUNLCURR = '',  @DECPLCUR = 0,  @ITEMTYPE = 0,  @VCTNMTHD = 0,  @STNDCOST = 0,  @UOMSCHDL = '',  @UMDPQTYS = 0,  @ACTIVE = 0,  @ACCTTYPE = 0,  @FUNCRIDX = 0,  @uofmchanged = 0,  @PRCLEVEL = '',  @ExistingPRCLEVEL = '',  @DECPLQTY = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taUpdateCreateItemRcdPre  @I_vITEMNMBR output,  @I_vITEMDESC output,  @I_vITMSHNAM output,  @I_vITMGEDSC output,  @I_vITMCLSCD output,  @I_vITEMTYPE output,  @I_vVCTNMTHD output,  @I_vTAXOPTNS output,  @I_vITMTSHID output,  @I_vUOMSCHDL output,  @I_vITEMSHWT output,  @I_vTCC output,  @I_vCNTRYORGN output,  @I_vDECPLQTY output,  @I_vDECPLCUR output,  @I_vPurchase_Tax_Options output,  @I_vPurchase_Item_Tax_Schedu output,  @I_vSTNDCOST output,  @I_vCURRCOST output,  @I_vLISTPRCE output,  @I_vNOTETEXT output,  @I_vALTITEM1 output,  @I_vALTITEM2 output,  @I_vITMTRKOP output,  @I_vLOTTYPE output,  @I_vLOTEXPWARN output,  @I_vLOTEXPWARNDAYS output,  @I_vINCLUDEINDP output,  @I_vMINSHELF1 output,  @I_vMINSHELF2 output,  @I_vALWBKORD output,  @I_vWRNTYDYS output,  @I_vABCCODE output,  @I_vUSCATVLS_1 output,  @I_vUSCATVLS_2 output,  @I_vUSCATVLS_3 output,  @I_vUSCATVLS_4 output,  @I_vUSCATVLS_5 output,  @I_vUSCATVLS_6 output,  @I_vKPCALHST output,  @I_vKPERHIST output,  @I_vKPTRXHST output,  @I_vKPDSTHST output,  @I_vIVIVACTNUMST output,  @I_vIVIVOFACTNUMST output,  @I_vIVCOGSACTNUMST output,  @I_vIVSLSACTNUMST output,  @I_vIVSLDSACTNUMST output,  @I_vIVSLRNACTNUMST output,  @I_vIVINUSACTNUMST output,  @I_vIVINSVACTNUMST output,  @I_vIVDMGACTNUMST  output,  @I_vIVVARACTNUMST output,  @I_vDPSHPACTNUMST output,  @I_vPURPVACTNUMST output,  @I_vUPPVACTNUMST output,  @I_vIVRETACTNUMST output,  @I_vASMVRACTNUMST output,  @I_vKTACCTSR output,  @I_vPRCHSUOM output,  @I_vRevalue_Inventory output,  @I_vTolerance_Percentage output,  @I_vLOCNCODE output,  @I_vPRICMTHD output,  @I_vPriceGroup output,  @I_vUseQtyOverageTolerance output,   @I_vUseQtyShortageTolerance output,  @I_vQtyOverTolerancePercent output,   @I_vQtyShortTolerancePercent output,   @I_vUseItemClass output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 29    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vITEMNMBR is null or  @I_vUseItemClass is null or  @I_vUpdateIfExists is null or  @I_vRequesterTrx is null  ) begin  select @O_iErrorState = 126     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (  (@I_vITEMSHWT < 0) or  (@I_vSTNDCOST < 0) or  (@I_vCURRCOST < 0) or  (@I_vTolerance_Percentage < 0)  ) begin  select @O_iErrorState = 4620     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vITMCLSCD = UPPER(@I_vITMCLSCD),  @I_vITMTSHID = UPPER(@I_vITMTSHID),  @I_vUOMSCHDL = UPPER(@I_vUOMSCHDL),  @I_vPurchase_Item_Tax_Schedu = UPPER(@I_vPurchase_Item_Tax_Schedu),  @I_vALTITEM1 = UPPER(@I_vALTITEM1),  @I_vALTITEM2 = UPPER(@I_vALTITEM2)  if (exists(select top 1 ITEMNMBR from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR)) begin  select @exists = 1   if (@I_vUpdateIfExists = 2)  begin  return (@O_iErrorState)  end end  if ((@exists = 0) and (@I_vUpdateIfExists = 2)) begin  select @I_vUpdateIfExists = 0 end  if (@I_vITEMNMBR = '') begin  select @O_iErrorState = 127     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select @ActualDate = convert(varchar(12),getdate()) select @ActualTime = ltrim(substring(convert(varchar(25),getdate()),12,12))  select @FUNLCURR = FUNLCURR,  @FUNCRIDX = FUNCRIDX  from MC40000 (nolock)  if (@FUNLCURR = '') begin  select @O_iErrorState = 7909    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if ( (not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> ''))) begin  select @ISMCREG = 0 end  if (@exists = 0) begin  if ((@I_vITEMTYPE = 3) and (@I_vDECPLQTY <> 0) and (@I_vDECPLQTY is not null))  begin  select @O_iErrorState = 7923     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vITEMTYPE in(3,4,5,6)) and (@I_vITMTRKOP <> 1))  begin  select @O_iErrorState = 784     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vUOMSCHDL is not null)  begin  select @UMDPQTYS = UMDPQTYS from IV40201 (nolock) where UOMSCHDL = @I_vUOMSCHDL  end   if ((@I_vDECPLQTY is not null) and (@I_vUOMSCHDL is not null))  begin  if (@I_vDECPLQTY + 1 <> @UMDPQTYS)  begin  select @O_iErrorState = 4621     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if ((@I_vDECPLQTY is null) and (@I_vUOMSCHDL is not null))   begin  select @I_vDECPLQTY = @UMDPQTYS - 1  end   if (@I_vUseItemClass = 0)  begin  select  @I_vITEMDESC =  case  when @I_vITEMDESC is null  then ''  else @I_vITEMDESC  end,  @I_vITMSHNAM =  case  when @I_vITMSHNAM is null  then ''  else @I_vITMSHNAM  end,  @I_vITMGEDSC =  case  when @I_vITMGEDSC is null  then ''  else @I_vITMGEDSC  end,  @I_vITMCLSCD =  case  when @I_vITMCLSCD is null  then ''  else @I_vITMCLSCD  end,  @I_vITEMTYPE =  case  when @I_vITEMTYPE is null  then 1  else @I_vITEMTYPE  end,  @I_vVCTNMTHD =  case  when @I_vVCTNMTHD is null  then 1  else @I_vVCTNMTHD  end,  @I_vTAXOPTNS =  case  when @I_vTAXOPTNS is null  then 1  else @I_vTAXOPTNS  end,  @I_vITMTSHID =  case  when @I_vITMTSHID is null  then ''  else @I_vITMTSHID  end,  @I_vUOMSCHDL =  case  when @I_vUOMSCHDL is null  then ''  else @I_vUOMSCHDL  end,  @I_vITEMSHWT =  case  when @I_vITEMSHWT is null  then 0  else @I_vITEMSHWT  end,  @I_vTCC =  case  when @I_vTCC is null  then ''  else @I_vTCC  end,  @I_vCNTRYORGN =  case  when @I_vCNTRYORGN is null  then ''  else @I_vCNTRYORGN  end,  @I_vDECPLQTY = @I_vDECPLQTY + 1,     @I_vDECPLCUR =  case  when @I_vDECPLCUR is null  then @DECPLCUR + 1  else @I_vDECPLCUR + 1  end,  @I_vPurchase_Tax_Options =  case  when @I_vPurchase_Tax_Options is null  then 1  else @I_vPurchase_Tax_Options  end,  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu is null  then ''  else @I_vPurchase_Item_Tax_Schedu  end,  @I_vSTNDCOST =  case  when @I_vSTNDCOST is null  then 0  else @I_vSTNDCOST  end,  @I_vCURRCOST =  case  when @I_vCURRCOST is null  then 0  else @I_vCURRCOST  end,  @I_vLISTPRCE =  case  when @I_vLISTPRCE is null  then 0  else @I_vLISTPRCE  end,  @I_vNOTETEXT =  case  when @I_vNOTETEXT is null  then ''  else @I_vNOTETEXT  end,  @I_vALTITEM1 =  case  when @I_vALTITEM1 is null  then ''  else @I_vALTITEM1  end,  @I_vALTITEM2 =  case  when @I_vALTITEM2 is null  then ''  else @I_vALTITEM2  end,  @I_vITMTRKOP =  case  when @I_vITMTRKOP is null  then 1  else @I_vITMTRKOP  end,  @I_vLOTTYPE =  case  when @I_vLOTTYPE is null  then ''  else @I_vLOTTYPE  end,  @I_vLOTEXPWARN =  case  when @I_vLOTEXPWARN is null  then 0  else @I_vLOTEXPWARN  end,  @I_vLOTEXPWARNDAYS =  case  when @I_vLOTEXPWARNDAYS is null  then 0  else @I_vLOTEXPWARNDAYS  end,  @I_vINCLUDEINDP =  case  when @I_vINCLUDEINDP is null  then 0  else @I_vINCLUDEINDP  end,  @I_vMINSHELF1 =  case  when @I_vMINSHELF1 is null  then 0  else @I_vMINSHELF1  end,  @I_vMINSHELF2 =  case  when @I_vMINSHELF2 is null  then 0  else @I_vMINSHELF2  end,  @I_vALWBKORD =  case  when @I_vALWBKORD is null  then 0  else @I_vALWBKORD  end,  @I_vWRNTYDYS =  case  when @I_vWRNTYDYS is null  then 0  else @I_vWRNTYDYS  end,  @I_vABCCODE =  case  when @I_vABCCODE is null  then 1  else @I_vABCCODE  end,  @I_vUSCATVLS_1 =  case  when @I_vUSCATVLS_1 is null  then ''  else @I_vUSCATVLS_1  end,  @I_vUSCATVLS_2 =  case  when @I_vUSCATVLS_2 is null  then ''  else @I_vUSCATVLS_2  end,  @I_vUSCATVLS_3 =  case  when @I_vUSCATVLS_3 is null  then ''  else @I_vUSCATVLS_3  end,  @I_vUSCATVLS_4 =  case  when @I_vUSCATVLS_4 is null  then ''  else @I_vUSCATVLS_4  end,  @I_vUSCATVLS_5 =  case  when @I_vUSCATVLS_5 is null  then ''  else @I_vUSCATVLS_5  end,  @I_vUSCATVLS_6 =  case  when @I_vUSCATVLS_6 is null  then ''  else @I_vUSCATVLS_6  end,  @I_vKPCALHST =  case  when @I_vKPCALHST is null  then 0  else @I_vKPCALHST  end,  @I_vKPERHIST =  case  when @I_vKPERHIST is null  then 0  else @I_vKPERHIST  end,  @I_vKPTRXHST =  case  when @I_vKPTRXHST is null  then 0  else @I_vKPTRXHST  end,  @I_vKPDSTHST =  case  when @I_vKPDSTHST is null  then 0  else @I_vKPDSTHST  end,  @I_vIVIVACTNUMST =  case  when @I_vIVIVACTNUMST is null  then ''  else @I_vIVIVACTNUMST  end,  @I_vIVIVOFACTNUMST =  case  when @I_vIVIVOFACTNUMST is null  then ''  else @I_vIVIVOFACTNUMST  end,  @I_vIVCOGSACTNUMST =  case  when @I_vIVCOGSACTNUMST is null  then ''  else @I_vIVCOGSACTNUMST  end,  @I_vIVSLSACTNUMST =  case  when @I_vIVSLSACTNUMST is null  then ''  else @I_vIVSLSACTNUMST  end,  @I_vIVSLDSACTNUMST =  case  when @I_vIVSLDSACTNUMST is null  then ''  else @I_vIVSLDSACTNUMST  end,  @I_vIVSLRNACTNUMST =  case  when @I_vIVSLRNACTNUMST is null  then ''  else @I_vIVSLRNACTNUMST  end,  @I_vIVINUSACTNUMST =  case  when @I_vIVINUSACTNUMST is null  then ''  else @I_vIVINUSACTNUMST  end,  @I_vIVINSVACTNUMST =  case  when @I_vIVINSVACTNUMST is null  then ''  else @I_vIVINSVACTNUMST  end,  @I_vIVDMGACTNUMST =  case  when @I_vIVDMGACTNUMST is null  then ''  else @I_vIVDMGACTNUMST  end,  @I_vIVVARACTNUMST =  case  when @I_vIVVARACTNUMST is null  then ''  else @I_vIVVARACTNUMST  end,  @I_vDPSHPACTNUMST =  case  when @I_vDPSHPACTNUMST is null  then ''  else @I_vDPSHPACTNUMST  end,  @I_vPURPVACTNUMST =  case  when @I_vPURPVACTNUMST is null  then ''  else @I_vPURPVACTNUMST  end,  @I_vUPPVACTNUMST =  case  when @I_vUPPVACTNUMST is null  then ''  else @I_vUPPVACTNUMST  end,  @I_vIVRETACTNUMST =  case  when @I_vIVRETACTNUMST is null  then ''  else @I_vIVRETACTNUMST  end,  @I_vASMVRACTNUMST =  case  when @I_vASMVRACTNUMST is null  then ''  else @I_vASMVRACTNUMST  end,  @I_vKTACCTSR =  case  when @I_vKTACCTSR is null  then 0  else @I_vKTACCTSR  end,  @I_vPRCHSUOM =  case  when @I_vPRCHSUOM is null  then ''  else @I_vPRCHSUOM  end,  @I_vRevalue_Inventory =  case  when @I_vRevalue_Inventory is null  then 1  else @I_vRevalue_Inventory  end,  @I_vTolerance_Percentage =  case  when @I_vTolerance_Percentage is null  then 0.00  else @I_vTolerance_Percentage  end,  @I_vLOCNCODE =  case  when @I_vLOCNCODE is null  then ''  else @I_vLOCNCODE  end,  @I_vPRICMTHD =  case  when @I_vPRICMTHD is null  then 1  else @I_vPRICMTHD  end,  @I_vPriceGroup =  case  when @I_vPriceGroup is null  then ''  else @I_vPriceGroup  end,  @I_vUseQtyOverageTolerance =   case   when @I_vUseQtyOverageTolerance is null  then 0  else @I_vUseQtyOverageTolerance  end,  @I_vUseQtyShortageTolerance =   case   when @I_vUseQtyShortageTolerance is null  then 0  else @I_vUseQtyShortageTolerance  end,  @I_vQtyOverTolerancePercent =   case   when @I_vQtyOverTolerancePercent is null  then 0  else @I_vQtyOverTolerancePercent  end,  @I_vQtyShortTolerancePercent =   case   when @I_vQtyShortTolerancePercent is null  then 0  else @I_vQtyShortTolerancePercent  end,  @PRCLEVEL = ''        end  else  if (@I_vUseItemClass = 1)  begin  if ((@I_vUseItemClass = 1) and ((@I_vITMCLSCD = '') or (@I_vITMCLSCD is null)))  begin  select @O_iErrorState = 7910     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select  @I_vITEMDESC =  case  when @I_vITEMDESC is null  then ''  else @I_vITEMDESC  end,  @I_vITMSHNAM =  case  when @I_vITMSHNAM is null  then ''  else @I_vITMSHNAM  end,  @I_vITMGEDSC =  case  when @I_vITMGEDSC is null  then a.ITMGEDSC  else @I_vITMGEDSC  end,  @I_vITEMTYPE =  case  when @I_vITEMTYPE is null  then a.ITEMTYPE  else @I_vITEMTYPE  end,  @I_vVCTNMTHD =  case  when @I_vVCTNMTHD is null  then a.VCTNMTHD  else @I_vVCTNMTHD  end,  @I_vTAXOPTNS =  case  when @I_vTAXOPTNS is null  then a.TAXOPTNS  else @I_vTAXOPTNS  end,  @I_vITMTSHID =  case  when @I_vITMTSHID is null  then a.ITMTSHID  else @I_vITMTSHID  end,  @I_vUOMSCHDL =  case  when @I_vUOMSCHDL is null  then a.UOMSCHDL  else @I_vUOMSCHDL  end,  @I_vITEMSHWT =  case  when @I_vITEMSHWT is null  then 0  else @I_vITEMSHWT  end,  @I_vTCC =  case  when @I_vTCC is null  then a.TCC  else @I_vTCC  end,  @I_vCNTRYORGN =  case  when @I_vCNTRYORGN is null  then a.CNTRYORGN  else @I_vCNTRYORGN  end,  @I_vDECPLQTY =  case  when @I_vDECPLQTY is null  then a.DECPLQTY  else @I_vDECPLQTY + 1  end,  @I_vDECPLCUR = @I_vDECPLCUR + 1,     @I_vPurchase_Tax_Options =  case  when @I_vPurchase_Tax_Options is null  then a.Purchase_Tax_Options  else @I_vPurchase_Tax_Options  end,  @I_vPurchase_Item_Tax_Schedu =   case  when @I_vPurchase_Item_Tax_Schedu is null and @I_vPurchase_Tax_Options = 1  then a.Purchase_Item_Tax_Schedu  when @I_vPurchase_Item_Tax_Schedu is not null and @I_vPurchase_Tax_Options = 1  then @I_vPurchase_Item_Tax_Schedu  else ''  end,  @I_vSTNDCOST =  case  when @I_vSTNDCOST is null  then 0  else @I_vSTNDCOST  end,  @I_vCURRCOST =  case  when @I_vCURRCOST is null  then 0  else @I_vCURRCOST  end,  @I_vLISTPRCE =  case  when @I_vLISTPRCE is null  then 0  else @I_vLISTPRCE  end,  @I_vNOTETEXT =  case  when @I_vNOTETEXT is null  then ''  else @I_vNOTETEXT  end,  @I_vALTITEM1 =  case  when @I_vALTITEM1 is null  then ''  else @I_vALTITEM1  end,  @I_vALTITEM2 =  case  when @I_vALTITEM2 is null  then ''  else @I_vALTITEM2  end,  @I_vITMTRKOP =  case  when @I_vITMTRKOP is null  then a.ITMTRKOP  else @I_vITMTRKOP  end,  @I_vLOTTYPE =  case  when @I_vLOTTYPE is null  then a.LOTTYPE  else @I_vLOTTYPE  end,  @I_vLOTEXPWARN =  case  when @I_vLOTEXPWARN is null  then a.LOTEXPWARN  else @I_vLOTEXPWARN  end,  @I_vLOTEXPWARNDAYS =   case  when @I_vLOTEXPWARNDAYS is null  then a.LOTEXPWARNDAYS  else @I_vLOTEXPWARNDAYS  end,  @I_vINCLUDEINDP =  case  when @I_vINCLUDEINDP is null  then a.INCLUDEINDP  else @I_vINCLUDEINDP  end,  @I_vMINSHELF1 =  case  when @I_vMINSHELF1 is null  then 0  else @I_vMINSHELF1  end,  @I_vMINSHELF2 =  case  when @I_vMINSHELF2 is null  then 0  else @I_vMINSHELF2  end,  @I_vALWBKORD =  case  when @I_vALWBKORD is null  then a.ALWBKORD  else @I_vALWBKORD  end,  @I_vWRNTYDYS =  case  when @I_vWRNTYDYS is null  then 0  else @I_vWRNTYDYS  end,  @I_vABCCODE =  case  when @I_vABCCODE is null  then 1  else @I_vABCCODE  end,  @I_vUSCATVLS_1 =  case  when @I_vUSCATVLS_1 is null  then a.USCATVLS_1  else @I_vUSCATVLS_1  end,  @I_vUSCATVLS_2 =  case  when @I_vUSCATVLS_2 is null  then a.USCATVLS_2  else @I_vUSCATVLS_2  end,  @I_vUSCATVLS_3 =  case  when @I_vUSCATVLS_3 is null  then a.USCATVLS_3  else @I_vUSCATVLS_3  end,  @I_vUSCATVLS_4 =  case  when @I_vUSCATVLS_4 is null  then a.USCATVLS_4  else @I_vUSCATVLS_4  end,  @I_vUSCATVLS_5 =  case  when @I_vUSCATVLS_5 is null  then a.USCATVLS_5  else @I_vUSCATVLS_5  end,  @I_vUSCATVLS_6 =  case  when @I_vUSCATVLS_6 is null  then a.USCATVLS_6  else @I_vUSCATVLS_6  end,  @I_vKPCALHST =  case  when @I_vKPCALHST is null  then a.KPCALHST  else @I_vKPCALHST  end,  @I_vKPERHIST =  case  when @I_vKPERHIST is null  then a.KPERHIST  else @I_vKPERHIST  end,  @I_vKPTRXHST =  case  when @I_vKPTRXHST is null  then a.KPTRXHST  else @I_vKPTRXHST  end,  @I_vKPDSTHST =  case  when @I_vKPDSTHST is null  then a.KPDSTHST  else @I_vKPDSTHST  end,  @I_vIVIVACTNUMST =  case  when @I_vIVIVACTNUMST is null  then isnull(b.ACTNUMST, '')  else @I_vIVIVACTNUMST  end,  @I_vIVIVOFACTNUMST =  case  when @I_vIVIVOFACTNUMST is null  then isnull(c.ACTNUMST, '')  else @I_vIVIVOFACTNUMST  end,  @I_vIVCOGSACTNUMST =  case  when @I_vIVCOGSACTNUMST is null  then isnull(d.ACTNUMST, '')  else @I_vIVCOGSACTNUMST  end,  @I_vIVSLSACTNUMST =  case  when @I_vIVSLSACTNUMST is null  then isnull(e.ACTNUMST, '')  else @I_vIVSLSACTNUMST  end,  @I_vIVSLDSACTNUMST =  case  when @I_vIVSLDSACTNUMST is null  then isnull(f.ACTNUMST, '')  else @I_vIVSLDSACTNUMST  end,  @I_vIVSLRNACTNUMST =  case  when @I_vIVSLRNACTNUMST is null  then isnull(g.ACTNUMST, '')  else @I_vIVSLRNACTNUMST  end,  @I_vIVINUSACTNUMST =  case  when @I_vIVINUSACTNUMST is null  then isnull(h.ACTNUMST, '')  else @I_vIVINUSACTNUMST  end,  @I_vIVINSVACTNUMST =  case  when @I_vIVINSVACTNUMST is null  then isnull(i.ACTNUMST, '')  else @I_vIVINSVACTNUMST  end,  @I_vIVDMGACTNUMST =  case  when @I_vIVDMGACTNUMST is null  then isnull(j.ACTNUMST, '')  else @I_vIVDMGACTNUMST  end,  @I_vIVVARACTNUMST =  case  when @I_vIVVARACTNUMST is null  then isnull(k.ACTNUMST, '')  else @I_vIVVARACTNUMST  end,  @I_vDPSHPACTNUMST =  case  when @I_vDPSHPACTNUMST is null  then isnull(l.ACTNUMST, '')  else @I_vDPSHPACTNUMST  end,  @I_vPURPVACTNUMST =  case  when @I_vPURPVACTNUMST is null  then isnull(m.ACTNUMST, '')  else @I_vPURPVACTNUMST  end,  @I_vUPPVACTNUMST =  case  when @I_vUPPVACTNUMST is null  then isnull(n.ACTNUMST, '')  else @I_vUPPVACTNUMST  end,  @I_vIVRETACTNUMST =  case  when @I_vIVRETACTNUMST is null  then isnull(o.ACTNUMST, '')  else @I_vIVRETACTNUMST  end,  @I_vASMVRACTNUMST =  case  when @I_vASMVRACTNUMST is null  then isnull(p.ACTNUMST, '')  else @I_vASMVRACTNUMST  end,  @I_vKTACCTSR =  case  when @I_vKTACCTSR is null  then 0  else @I_vKTACCTSR  end,  @I_vPRCHSUOM =  case  when @I_vPRCHSUOM is null  then ''  else @I_vPRCHSUOM  end,  @I_vRevalue_Inventory =  case  when @I_vRevalue_Inventory is null and @I_vVCTNMTHD in(1,2,3)  then a.Revalue_Inventory  when @I_vVCTNMTHD in(0,4,5)  then 0  else @I_vRevalue_Inventory  end,  @I_vTolerance_Percentage =  case  when @I_vTolerance_Percentage is null and @I_vVCTNMTHD in(1,2,3)  then a.Tolerance_Percentage * .001  when @I_vVCTNMTHD in(0,4,5)  then 0.00  else @I_vTolerance_Percentage  end,  @I_vLOCNCODE =  case  when @I_vLOCNCODE is null  then ''  else @I_vLOCNCODE  end,  @I_vPRICMTHD =  case  when @I_vPRICMTHD is null  then a.PRICMTHD  else @I_vPRICMTHD  end,  @I_vPriceGroup =  case  when @I_vPriceGroup is null  then a.PriceGroup  else @I_vPriceGroup  end,  @I_vUseQtyOverageTolerance =   case   when @I_vUseQtyOverageTolerance is null  then a.UseQtyOverageTolerance  else @I_vUseQtyOverageTolerance  end,  @I_vUseQtyShortageTolerance =   case   when @I_vUseQtyShortageTolerance is null  then a.UseQtyShortageTolerance  else @I_vUseQtyShortageTolerance  end,  @I_vQtyOverTolerancePercent =   case   when @I_vQtyOverTolerancePercent is null  then a.QtyOverTolerancePercent  else @I_vQtyOverTolerancePercent  end,  @I_vQtyShortTolerancePercent =   case   when @I_vQtyShortTolerancePercent is null  then a.QtyShortTolerancePercent  else @I_vQtyShortTolerancePercent  end,  @PRCLEVEL = a.PRCLEVEL       from IV40400 a (nolock)  left outer join GL00105 b (nolock) on  a.IVIVINDX = b.ACTINDX  left outer join GL00105 c (nolock) on  a.IVIVOFIX = c.ACTINDX  left outer join GL00105 d (nolock) on  a.IVCOGSIX = d.ACTINDX  left outer join GL00105 e (nolock) on  a.IVSLSIDX = e.ACTINDX  left outer join GL00105 f (nolock) on  a.IVSLDSIX = f.ACTINDX  left outer join GL00105 g (nolock) on  a.IVSLRNIX = g.ACTINDX  left outer join GL00105 h (nolock) on  a.IVINUSIX = h.ACTINDX  left outer join GL00105 i (nolock) on  a.IVINSVIX = i.ACTINDX  left outer join GL00105 j (nolock) on  a.IVDMGIDX = j.ACTINDX  left outer join GL00105 k (nolock) on  a.IVVARIDX = k.ACTINDX  left outer join GL00105 l (nolock) on  a.DPSHPIDX = l.ACTINDX  left outer join GL00105 m (nolock) on  a.PURPVIDX = m.ACTINDX  left outer join GL00105 n (nolock) on  a.UPPVIDX = n.ACTINDX  left outer join GL00105 o (nolock) on  a.IVRETIDX = o.ACTINDX  left outer join GL00105 p (nolock) on  a.ASMVRIDX = p.ACTINDX  where a.ITMCLSCD = @I_vITMCLSCD  end   if (@I_vDECPLCUR is null)  begin  select @I_vDECPLCUR = DECPLCUR from IV40401 (nolock) where ITMCLSCD = @I_vITMCLSCD and ((CURNCYID = '') or (CURNCYID = @FUNLCURR))  end   if (@I_vDECPLCUR is null)  begin  select @I_vDECPLCUR = @DECPLCUR + 1  end  if (exists(select top 1 CUSTITEMNMBR from SOP60300 (nolock) where CUSTITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 7916     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = 1,  @O_mNoteIndex = @nNextNoteIndex output,  @O_iErrorState = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 5368    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end else    begin  if (@I_vUpdateIfExists = 0)  begin  select @O_iErrorState = 7908     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @ITEMTYPE = ITEMTYPE,  @UOMSCHDL = UOMSCHDL,  @DECPLQTY = DECPLQTY,  @DECPLCUR = DECPLCUR,  @VCTNMTHD = VCTNMTHD,  @STNDCOST = STNDCOST,  @ExistingPRCLEVEL = PRCLEVEL  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if ((@I_vUOMSCHDL <> '') and (@I_vUOMSCHDL is not null))  begin  select @UMDPQTYS = UMDPQTYS from IV40201 (nolock) where UOMSCHDL = @I_vUOMSCHDL   if (@UMDPQTYS <> @DECPLQTY)  begin  select @O_iErrorState = 507     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vDECPLQTY is not null)  begin  if (@I_vDECPLQTY + 1 <> @DECPLQTY)  begin  select @O_iErrorState = 8002     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@UOMSCHDL <> @I_vUOMSCHDL)  begin  select @uofmchanged = 1  end   if (((@ITEMTYPE in(1,2)) and (@I_vITEMTYPE not in(1,2)) and (@I_vITEMTYPE is not null)) or  ((@ITEMTYPE not in(1,2)) and (@I_vITEMTYPE <> @ITEMTYPE) and (@I_vITEMTYPE is not null)))  begin  select @O_iErrorState = 7920     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@VCTNMTHD <> @I_vVCTNMTHD) and (@I_vVCTNMTHD is not null))  begin  select @O_iErrorState = 7918     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vSTNDCOST is not null)  begin  if (@STNDCOST <> @I_vSTNDCOST and @VCTNMTHD in (4,5))  begin  select @O_iErrorState = 11845     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end    select @nNextNoteIndex = NOTEINDX from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if (@I_vUseItemClass = 1)  begin  if (@I_vITMCLSCD is null)  begin  select @UseRolldown = 0  end  else  begin  select @UseRolldown = 1  end  end  else  begin  select @UseRolldown = 0  end   if ((@I_vUseItemClass = 0) or (@UseRolldown = 0))  begin  select  @I_vITEMDESC =  case  when @I_vITEMDESC is null  then a.ITEMDESC  else @I_vITEMDESC  end,  @I_vITMSHNAM =  case  when @I_vITMSHNAM is null  then a.ITMSHNAM  else @I_vITMSHNAM  end,  @I_vITMGEDSC =  case  when @I_vITMGEDSC is null  then a.ITMGEDSC  else @I_vITMGEDSC  end,  @I_vITMCLSCD =  case  when @I_vITMCLSCD is null  then a.ITMCLSCD  else @I_vITMCLSCD  end,  @I_vITEMTYPE =  case  when @I_vITEMTYPE is null  then a.ITEMTYPE  else @I_vITEMTYPE  end,  @I_vVCTNMTHD =  case  when @I_vVCTNMTHD is null  then a.VCTNMTHD  else @I_vVCTNMTHD  end,  @I_vTAXOPTNS =  case  when @I_vTAXOPTNS is null  then a.TAXOPTNS  else @I_vTAXOPTNS  end,  @I_vITMTSHID =  case  when @I_vITMTSHID is null  then a.ITMTSHID  else @I_vITMTSHID  end,  @I_vUOMSCHDL =  case  when @I_vUOMSCHDL is null  then a.UOMSCHDL  else @I_vUOMSCHDL  end,  @I_vITEMSHWT =  case  when @I_vITEMSHWT is null  then a.ITEMSHWT *.01  else @I_vITEMSHWT  end,  @I_vTCC =  case  when @I_vTCC is null  then a.TCC  else @I_vTCC  end,  @I_vCNTRYORGN =  case  when @I_vCNTRYORGN is null  then a.CNTRYORGN  else @I_vCNTRYORGN  end,  @I_vDECPLQTY =  case  when @I_vDECPLQTY is null  then a.DECPLQTY  else @I_vDECPLQTY + 1  end,  @I_vDECPLCUR =  case  when @I_vDECPLCUR is null  then a.DECPLCUR  else @I_vDECPLCUR + 1  end,  @I_vPurchase_Tax_Options =  case  when @I_vPurchase_Tax_Options is null  then a.Purchase_Tax_Options  else @I_vPurchase_Tax_Options  end,  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu is null  then a.Purchase_Item_Tax_Schedu  else @I_vPurchase_Item_Tax_Schedu  end,  @I_vSTNDCOST =  case  when @I_vSTNDCOST is null  then a.STNDCOST  else @I_vSTNDCOST  end,  @I_vCURRCOST =  case  when @I_vCURRCOST is null  then a.CURRCOST  else @I_vCURRCOST  end,  @I_vLISTPRCE =  case  when @I_vLISTPRCE is null and @ISMCREG = 0  then q.LISTPRCE  else @I_vLISTPRCE  end,  @I_vALTITEM1 =  case  when @I_vALTITEM1 is null  then a.ALTITEM1  else @I_vALTITEM1  end,  @I_vALTITEM2 =  case  when @I_vALTITEM2 is null  then a.ALTITEM2  else @I_vALTITEM2  end,  @I_vITMTRKOP =  case  when @I_vITMTRKOP is null  then a.ITMTRKOP      else @I_vITMTRKOP  end,  @I_vLOTTYPE =  case  when @I_vLOTTYPE is null  then a.LOTTYPE  else @I_vLOTTYPE  end,  @I_vLOTEXPWARN =  case  when @I_vLOTEXPWARN is null  then a.LOTEXPWARN  else @I_vLOTEXPWARN  end,  @I_vLOTEXPWARNDAYS =   case  when @I_vLOTEXPWARNDAYS is null  then a.LOTEXPWARNDAYS  else @I_vLOTEXPWARNDAYS  end,  @I_vINCLUDEINDP =  case  when @I_vINCLUDEINDP is null  then a.INCLUDEINDP  else @I_vINCLUDEINDP  end,  @I_vMINSHELF1 =  case  when @I_vMINSHELF1 is null  then a.MINSHELF1  else @I_vMINSHELF1  end,  @I_vMINSHELF2 =  case  when @I_vMINSHELF2 is null  then a.MINSHELF2  else @I_vMINSHELF2  end,  @I_vALWBKORD =  case  when @I_vALWBKORD is null  then a.ALWBKORD  else @I_vALWBKORD  end,  @I_vWRNTYDYS =  case  when @I_vWRNTYDYS is null  then a.WRNTYDYS  else @I_vWRNTYDYS  end,  @I_vABCCODE =  case  when @I_vABCCODE is null  then a.ABCCODE  else @I_vABCCODE  end,  @I_vUSCATVLS_1 =  case  when @I_vUSCATVLS_1 is null  then a.USCATVLS_1  else @I_vUSCATVLS_1  end,  @I_vUSCATVLS_2 =  case  when @I_vUSCATVLS_2 is null  then a.USCATVLS_2  else @I_vUSCATVLS_2  end,  @I_vUSCATVLS_3 =  case  when @I_vUSCATVLS_3 is null  then a.USCATVLS_3  else @I_vUSCATVLS_3  end,  @I_vUSCATVLS_4 =  case  when @I_vUSCATVLS_4 is null  then a.USCATVLS_4  else @I_vUSCATVLS_4  end,  @I_vUSCATVLS_5 =  case  when @I_vUSCATVLS_5 is null  then a.USCATVLS_5  else @I_vUSCATVLS_5  end,  @I_vUSCATVLS_6 =  case  when @I_vUSCATVLS_6 is null  then a.USCATVLS_6  else @I_vUSCATVLS_6  end,  @I_vKPCALHST =  case  when @I_vKPCALHST is null  then a.KPCALHST  else @I_vKPCALHST  end,  @I_vKPERHIST =  case  when @I_vKPERHIST is null  then a.KPERHIST  else @I_vKPERHIST  end,  @I_vKPTRXHST =  case  when @I_vKPTRXHST is null  then a.KPTRXHST  else @I_vKPTRXHST  end,  @I_vKPDSTHST =  case  when @I_vKPDSTHST is null  then a.KPDSTHST  else @I_vKPDSTHST  end,  @I_vIVIVACTNUMST =  case  when @I_vIVIVACTNUMST is null  then isnull(b.ACTNUMST, '')  else @I_vIVIVACTNUMST  end,  @I_vIVIVOFACTNUMST =  case  when @I_vIVIVOFACTNUMST is null  then isnull(c.ACTNUMST, '')  else @I_vIVIVOFACTNUMST  end,  @I_vIVCOGSACTNUMST =  case  when @I_vIVCOGSACTNUMST is null  then isnull(d.ACTNUMST, '')  else @I_vIVCOGSACTNUMST  end,  @I_vIVSLSACTNUMST =  case  when @I_vIVSLSACTNUMST is null  then isnull(e.ACTNUMST, '')  else @I_vIVSLSACTNUMST  end,  @I_vIVSLDSACTNUMST =  case  when @I_vIVSLDSACTNUMST is null  then isnull(f.ACTNUMST, '')  else @I_vIVSLDSACTNUMST  end,  @I_vIVSLRNACTNUMST =  case  when @I_vIVSLRNACTNUMST is null  then isnull(g.ACTNUMST, '')  else @I_vIVSLRNACTNUMST  end,  @I_vIVINUSACTNUMST =  case  when @I_vIVINUSACTNUMST is null  then isnull(h.ACTNUMST, '')  else @I_vIVINUSACTNUMST  end,  @I_vIVINSVACTNUMST =  case  when @I_vIVINSVACTNUMST is null  then isnull(i.ACTNUMST, '')  else @I_vIVINSVACTNUMST  end,  @I_vIVDMGACTNUMST =  case  when @I_vIVDMGACTNUMST is null  then isnull(j.ACTNUMST, '')  else @I_vIVDMGACTNUMST  end,  @I_vIVVARACTNUMST =  case  when @I_vIVVARACTNUMST is null  then isnull(k.ACTNUMST, '')  else @I_vIVVARACTNUMST  end,  @I_vDPSHPACTNUMST =  case  when @I_vDPSHPACTNUMST is null  then isnull(l.ACTNUMST, '')  else @I_vDPSHPACTNUMST  end,  @I_vPURPVACTNUMST =  case  when @I_vPURPVACTNUMST is null  then isnull(m.ACTNUMST, '')  else @I_vPURPVACTNUMST  end,  @I_vUPPVACTNUMST =  case  when @I_vUPPVACTNUMST is null  then isnull(n.ACTNUMST, '')  else @I_vUPPVACTNUMST  end,  @I_vIVRETACTNUMST =  case  when @I_vIVRETACTNUMST is null  then isnull(o.ACTNUMST, '')  else @I_vIVRETACTNUMST  end,  @I_vASMVRACTNUMST =  case  when @I_vASMVRACTNUMST is null  then isnull(p.ACTNUMST, '')  else @I_vASMVRACTNUMST  end,  @I_vKTACCTSR =  case  when @I_vKTACCTSR is null  then a.KTACCTSR  else @I_vKTACCTSR  end,  @I_vPRCHSUOM =  case  when @I_vPRCHSUOM is null  then a.PRCHSUOM  else @I_vPRCHSUOM  end,  @I_vRevalue_Inventory =  case  when @I_vRevalue_Inventory is null  then a.Revalue_Inventory  else @I_vRevalue_Inventory  end,  @I_vTolerance_Percentage =  case  when @I_vTolerance_Percentage is null  then a.Tolerance_Percentage * .001  else @I_vTolerance_Percentage  end,  @I_vLOCNCODE =  case  when @I_vLOCNCODE is null  then a.LOCNCODE  else @I_vLOCNCODE  end,  @I_vPRICMTHD =  case  when @I_vPRICMTHD is null  then a.PRICMTHD  else @I_vPRICMTHD  end,  @I_vPriceGroup =  case  when @I_vPriceGroup is null  then a.PriceGroup  else @I_vPriceGroup  end,  @I_vUseQtyOverageTolerance =   case   when @I_vUseQtyOverageTolerance is null  then a.UseQtyOverageTolerance  else @I_vUseQtyOverageTolerance  end,  @I_vUseQtyShortageTolerance =   case   when @I_vUseQtyShortageTolerance is null  then a.UseQtyShortageTolerance  else @I_vUseQtyShortageTolerance  end,  @I_vQtyOverTolerancePercent =   case   when @I_vQtyOverTolerancePercent is null  then a.QtyOverTolerancePercent  else @I_vQtyOverTolerancePercent  end,  @I_vQtyShortTolerancePercent =   case   when @I_vQtyShortTolerancePercent is null  then a.QtyShortTolerancePercent  else @I_vQtyShortTolerancePercent  end,  @PRCLEVEL = a.PRCLEVEL  from IV00101 a (nolock)  inner join IV00105 q (nolock) on  q.ITEMNMBR = @I_vITEMNMBR and (CURNCYID = '' or CURNCYID = @FUNLCURR)  left outer join GL00105 b (nolock) on  a.IVIVINDX = b.ACTINDX  left outer join GL00105 c (nolock) on  a.IVIVOFIX = c.ACTINDX  left outer join GL00105 d (nolock) on  a.IVCOGSIX = d.ACTINDX  left outer join GL00105 e (nolock) on  a.IVSLSIDX = e.ACTINDX  left outer join GL00105 f (nolock) on  a.IVSLDSIX = f.ACTINDX  left outer join GL00105 g (nolock) on  a.IVSLRNIX = g.ACTINDX  left outer join GL00105 h (nolock) on  a.IVINUSIX = h.ACTINDX  left outer join GL00105 i (nolock) on  a.IVINSVIX = i.ACTINDX  left outer join GL00105 j (nolock) on  a.IVDMGIDX = j.ACTINDX  left outer join GL00105 k (nolock) on  a.IVVARIDX = k.ACTINDX  left outer join GL00105 l (nolock) on  a.DPSHPIDX = l.ACTINDX  left outer join GL00105 m (nolock) on  a.PURPVIDX = m.ACTINDX  left outer join GL00105 n (nolock) on  a.UPPVIDX = n.ACTINDX  left outer join GL00105 o (nolock) on  a.IVRETIDX = o.ACTINDX  left outer join GL00105 p (nolock) on  a.ASMVRIDX = p.ACTINDX  where a.ITEMNMBR = @I_vITEMNMBR   if (@I_vNOTETEXT is null)  begin  select @I_vNOTETEXT = TXTFIELD from SY03900 (nolock) where NOTEINDX = @nNextNoteIndex  end  end   if (@UseRolldown = 1)  begin  if (@I_vITMCLSCD = '')  begin  select @O_iErrorState = 7911     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select  @I_vITEMDESC =  case  when @I_vITEMDESC is null  then a.ITEMDESC  else @I_vITEMDESC  end,  @I_vITMSHNAM =  case  when @I_vITMSHNAM is null  then a.ITMSHNAM  else @I_vITMSHNAM  end,  @I_vITMGEDSC =  case  when @I_vITMGEDSC is null  then b.ITMGEDSC  else @I_vITMGEDSC  end,  @I_vITEMTYPE =  case  when @I_vITEMTYPE is null  then b.ITEMTYPE     else @I_vITEMTYPE  end,  @I_vVCTNMTHD = a.VCTNMTHD,     @I_vTAXOPTNS =  case  when @I_vTAXOPTNS is null  then b.TAXOPTNS  else @I_vTAXOPTNS  end,  @I_vITMTSHID =  case  when @I_vITMTSHID is null  then b.ITMTSHID  else @I_vITMTSHID  end,  @I_vUOMSCHDL =  case  when @I_vUOMSCHDL is null  then a.UOMSCHDL     else @I_vUOMSCHDL  end,  @I_vITEMSHWT =  case  when @I_vITEMSHWT is null  then a.ITEMSHWT *.01  else @I_vITEMSHWT  end,  @I_vTCC =  case  when @I_vTCC is null  then b.TCC  else @I_vTCC  end,  @I_vCNTRYORGN =  case  when @I_vCNTRYORGN is null  then b.CNTRYORGN  else @I_vCNTRYORGN  end,  @I_vDECPLQTY =  case  when @I_vDECPLQTY is null  then a.DECPLQTY     else @I_vDECPLQTY + 1  end,  @I_vDECPLCUR =  case  when @I_vDECPLCUR is null  then a.DECPLCUR     else @I_vDECPLCUR + 1  end,  @I_vPurchase_Tax_Options =  case  when @I_vPurchase_Tax_Options is null  then b.Purchase_Tax_Options  else @I_vPurchase_Tax_Options  end,  @I_vPurchase_Item_Tax_Schedu =  case  when @I_vPurchase_Item_Tax_Schedu is null  then b.Purchase_Item_Tax_Schedu  else @I_vPurchase_Item_Tax_Schedu  end,  @I_vSTNDCOST =  case  when @I_vSTNDCOST is null  then a.STNDCOST  else @I_vSTNDCOST  end,  @I_vCURRCOST =  case  when @I_vCURRCOST is null  then a.CURRCOST  else @I_vCURRCOST  end,  @I_vLISTPRCE =  case  when @I_vLISTPRCE is null and @ISMCREG = 0  then r.LISTPRCE  else @I_vLISTPRCE  end,  @I_vALTITEM1 =  case  when @I_vALTITEM1 is null  then a.ALTITEM1  else @I_vALTITEM1  end,  @I_vALTITEM2 =  case  when @I_vALTITEM2 is null  then a.ALTITEM2  else @I_vALTITEM2  end,  @I_vITMTRKOP =  case  when @I_vITMTRKOP is null  then a.ITMTRKOP      else @I_vITMTRKOP  end,  @I_vLOTTYPE =  case  when @I_vLOTTYPE is null  then b.LOTTYPE  else @I_vLOTTYPE  end,  @I_vLOTEXPWARN =  case  when @I_vLOTEXPWARN is null  then b.LOTEXPWARN  else @I_vLOTEXPWARN  end,  @I_vLOTEXPWARNDAYS =   case  when @I_vLOTEXPWARNDAYS is null  then b.LOTEXPWARNDAYS  else @I_vLOTEXPWARNDAYS  end,  @I_vINCLUDEINDP =  case  when @I_vINCLUDEINDP is null  then b.INCLUDEINDP  else @I_vINCLUDEINDP  end,  @I_vMINSHELF1 =  case  when @I_vMINSHELF1 is null  then a.MINSHELF1  else @I_vMINSHELF1  end,  @I_vMINSHELF2 =  case  when @I_vMINSHELF2 is null  then a.MINSHELF2  else @I_vMINSHELF2  end,  @I_vALWBKORD =  case  when @I_vALWBKORD is null  then b.ALWBKORD  else @I_vALWBKORD  end,  @I_vWRNTYDYS =  case  when @I_vWRNTYDYS is null  then a.WRNTYDYS  else @I_vWRNTYDYS  end,  @I_vABCCODE =  case  when @I_vABCCODE is null  then a.ABCCODE  else @I_vABCCODE  end,  @I_vUSCATVLS_1 =  case  when @I_vUSCATVLS_1 is null  then b.USCATVLS_1  else @I_vUSCATVLS_1  end,  @I_vUSCATVLS_2 =  case  when @I_vUSCATVLS_2 is null  then b.USCATVLS_2  else @I_vUSCATVLS_2  end,  @I_vUSCATVLS_3 =  case  when @I_vUSCATVLS_3 is null  then b.USCATVLS_3  else @I_vUSCATVLS_3  end,  @I_vUSCATVLS_4 =  case  when @I_vUSCATVLS_4 is null  then b.USCATVLS_4  else @I_vUSCATVLS_4  end,  @I_vUSCATVLS_5 =  case  when @I_vUSCATVLS_5 is null  then b.USCATVLS_5  else @I_vUSCATVLS_5  end,  @I_vUSCATVLS_6 =  case  when @I_vUSCATVLS_6 is null  then b.USCATVLS_6  else @I_vUSCATVLS_6  end,  @I_vKPCALHST =  case  when @I_vKPCALHST is null  then b.KPCALHST  else @I_vKPCALHST  end,  @I_vKPERHIST =  case  when @I_vKPERHIST is null  then b.KPERHIST  else @I_vKPERHIST  end,  @I_vKPTRXHST =  case  when @I_vKPTRXHST is null  then b.KPTRXHST  else @I_vKPTRXHST  end,  @I_vKPDSTHST =  case  when @I_vKPDSTHST is null  then b.KPDSTHST  else @I_vKPDSTHST  end,  @I_vIVIVACTNUMST =  case  when @I_vIVIVACTNUMST is null  then isnull(c.ACTNUMST, '')  else @I_vIVIVACTNUMST  end,  @I_vIVIVOFACTNUMST =  case  when @I_vIVIVOFACTNUMST is null  then isnull(d.ACTNUMST, '')  else @I_vIVIVOFACTNUMST  end,  @I_vIVCOGSACTNUMST =  case  when @I_vIVCOGSACTNUMST is null  then isnull(e.ACTNUMST, '')  else @I_vIVCOGSACTNUMST  end,  @I_vIVSLSACTNUMST =  case  when @I_vIVSLSACTNUMST is null  then isnull(f.ACTNUMST, '')  else @I_vIVSLSACTNUMST  end,  @I_vIVSLDSACTNUMST =  case  when @I_vIVSLDSACTNUMST is null  then isnull(g.ACTNUMST, '')  else @I_vIVSLDSACTNUMST  end,  @I_vIVSLRNACTNUMST =  case  when @I_vIVSLRNACTNUMST is null  then isnull(h.ACTNUMST, '')  else @I_vIVSLRNACTNUMST  end,  @I_vIVINUSACTNUMST =  case  when @I_vIVINUSACTNUMST is null  then isnull(i.ACTNUMST, '')  else @I_vIVINUSACTNUMST  end,  @I_vIVINSVACTNUMST =  case  when @I_vIVINSVACTNUMST is null  then isnull(j.ACTNUMST, '')  else @I_vIVINSVACTNUMST  end,  @I_vIVDMGACTNUMST =  case  when @I_vIVDMGACTNUMST is null  then isnull(k.ACTNUMST, '')  else @I_vIVDMGACTNUMST  end,  @I_vIVVARACTNUMST =  case  when @I_vIVVARACTNUMST is null  then isnull(l.ACTNUMST, '')  else @I_vIVVARACTNUMST  end,  @I_vDPSHPACTNUMST =  case  when @I_vDPSHPACTNUMST is null  then isnull(m.ACTNUMST, '')  else @I_vDPSHPACTNUMST  end,  @I_vPURPVACTNUMST =  case  when @I_vPURPVACTNUMST is null  then isnull(n.ACTNUMST, '')  else @I_vPURPVACTNUMST  end,  @I_vUPPVACTNUMST =  case  when @I_vUPPVACTNUMST is null  then isnull(o.ACTNUMST, '')  else @I_vUPPVACTNUMST  end,  @I_vIVRETACTNUMST =  case  when @I_vIVRETACTNUMST is null  then isnull(p.ACTNUMST, '')  else @I_vIVRETACTNUMST  end,  @I_vASMVRACTNUMST =  case  when @I_vASMVRACTNUMST is null  then isnull(q.ACTNUMST, '')  else @I_vASMVRACTNUMST  end,  @I_vKTACCTSR =  case  when @I_vKTACCTSR is null  then a.KTACCTSR  else @I_vKTACCTSR  end,  @I_vPRCHSUOM =  case  when @I_vPRCHSUOM is null  then a.PRCHSUOM  else @I_vPRCHSUOM  end,  @I_vRevalue_Inventory =  case  when @I_vRevalue_Inventory is null  and @I_vVCTNMTHD in(1,2,3) and b.VCTNMTHD in(1,2,3)  then b.Revalue_Inventory  when @I_vVCTNMTHD in(0,4,5)  then 0  else @I_vRevalue_Inventory  end,  @I_vTolerance_Percentage =  case  when @I_vTolerance_Percentage is null and @I_vVCTNMTHD in(1,2,3) and b.VCTNMTHD in(1,2,3)  then b.Tolerance_Percentage * .001  when @I_vVCTNMTHD in(0,4,5)  then 0.00  else @I_vTolerance_Percentage  end,  @I_vLOCNCODE =  case  when @I_vLOCNCODE is null  then a.LOCNCODE  else @I_vLOCNCODE  end,  @I_vPRICMTHD =  case  when @I_vPRICMTHD is null  then a.PRICMTHD      else @I_vPRICMTHD  end,  @I_vPriceGroup =  case  when @I_vPriceGroup is null  then b.PriceGroup  else @I_vPriceGroup  end,  @I_vUseQtyOverageTolerance =   case   when @I_vUseQtyOverageTolerance is null  then b.UseQtyOverageTolerance  else @I_vUseQtyOverageTolerance  end,  @I_vUseQtyShortageTolerance =   case   when @I_vUseQtyShortageTolerance is null  then b.UseQtyShortageTolerance  else @I_vUseQtyShortageTolerance  end,  @I_vQtyOverTolerancePercent =   case   when @I_vQtyOverTolerancePercent is null  then b.QtyOverTolerancePercent  else @I_vQtyOverTolerancePercent  end,  @I_vQtyShortTolerancePercent =   case   when @I_vQtyShortTolerancePercent is null  then b.QtyShortTolerancePercent  else @I_vQtyShortTolerancePercent  end,  @PRCLEVEL = a.PRCLEVEL       from IV00101 a (nolock)  inner join IV40400 b (nolock) on  b.ITMCLSCD = @I_vITMCLSCD  inner join IV00105 r (nolock) on  r.ITEMNMBR = @I_vITEMNMBR and (CURNCYID = '' or CURNCYID = @FUNLCURR)  left outer join GL00105 c (nolock) on  b.IVIVINDX = c.ACTINDX  left outer join GL00105 d (nolock) on  b.IVIVOFIX = d.ACTINDX  left outer join GL00105 e (nolock) on  b.IVCOGSIX = e.ACTINDX  left outer join GL00105 f (nolock) on  b.IVSLSIDX = f.ACTINDX  left outer join GL00105 g (nolock) on  b.IVSLDSIX = g.ACTINDX  left outer join GL00105 h (nolock) on  b.IVSLRNIX = h.ACTINDX  left outer join GL00105 i (nolock) on  b.IVINUSIX = i.ACTINDX  left outer join GL00105 j (nolock) on  b.IVINSVIX = j.ACTINDX  left outer join GL00105 k (nolock) on  b.IVDMGIDX = k.ACTINDX  left outer join GL00105 l (nolock) on  b.IVVARIDX = l.ACTINDX  left outer join GL00105 m (nolock) on  b.DPSHPIDX = m.ACTINDX  left outer join GL00105 n (nolock) on  b.PURPVIDX = n.ACTINDX  left outer join GL00105 o (nolock) on  b.UPPVIDX = o.ACTINDX  left outer join GL00105 p (nolock) on  b.IVRETIDX = p.ACTINDX  left outer join GL00105 q (nolock) on  b.ASMVRIDX = q.ACTINDX  where a.ITEMNMBR = @I_vITEMNMBR   if (@I_vNOTETEXT is null)  begin  select @I_vNOTETEXT = TXTFIELD from SY03900 (nolock) where NOTEINDX = @nNextNoteIndex  end  end   if ((@ITEMTYPE in(1,2)) and (@I_vITEMTYPE not in(1,2)))  begin  select @I_vITEMTYPE = @ITEMTYPE   end   if ((@ITEMTYPE not in(1,2)) and (@I_vITEMTYPE <> @ITEMTYPE))  begin  select @I_vITEMTYPE = @ITEMTYPE   end   if ((@VCTNMTHD in(4,5)) and (@STNDCOST <> @I_vSTNDCOST))  begin  if (exists(select 1 from POP10310 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 7045     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@PRCLEVEL <> @ExistingPRCLEVEL)  begin  if (not exists(select top 1 PRCLEVEL from IV00107 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @PRCLEVEL = @ExistingPRCLEVEL  end  end end  if (@I_vITEMDESC = '') begin  select @O_iErrorState = 4622     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITMCLSCD <> '') begin  if (not exists(select 1 from IV40400 (nolock) where ITMCLSCD = @I_vITMCLSCD))  begin  select @O_iErrorState = 2234     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vITEMTYPE not in(1,2,3,4,5,6)) begin  select @O_iErrorState = 499     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITEMTYPE not in(1,2)) begin  select @I_vVCTNMTHD = 0  end  if (@I_vVCTNMTHD not in(0,1,2,3,4,5)) begin  select @O_iErrorState = 504     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTAXOPTNS not in(1,2,3)) begin  select @O_iErrorState = 506     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vTAXOPTNS <> 1) and (@I_vITMTSHID <> '')) begin  select @O_iErrorState = 531     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUOMSCHDL = '' or @I_vUOMSCHDL is null) begin  select @O_iErrorState = 8003     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITEMSHWT > 9999.99) begin  select @O_iErrorState = 8077     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITMTSHID <> '') begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vITMTSHID))  begin  select @O_iErrorState = 530     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUOMSCHDL = '') begin  select @O_iErrorState = 1307     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUOMSCHDL <> '') begin  if (not exists(select top 1 UOMSCHDL from IV40201 (nolock) where UOMSCHDL = @I_vUOMSCHDL))  begin  select @O_iErrorState = 7919     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vITEMTYPE in(4,5,6))  begin  select @I_vITEMSHWT = 0 end  if (@I_vTCC <> '') begin  if (not exists(select top 1 TCC from VAT10000 (nolock) where TCC = @I_vTCC))  begin  select @O_iErrorState = 7996     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCNTRYORGN <> '') begin  if (not exists(select top 1 INTRSTTFLD from VAT10007 (nolock) where INTRSTTFLD = @I_vCNTRYORGN and INTRSTTTYP = 3))  begin  select @O_iErrorState = 7997     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vDECPLQTY not in(1,2,3,4,5,6))  begin  select @O_iErrorState = 505     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITEMTYPE = 3) begin  select @I_vDECPLQTY = 1 end  if @UMDPQTYS is null begin  select @UMDPQTYS = UMDPQTYS from IV40201 (nolock) where UOMSCHDL = @I_vUOMSCHDL  if (@UMDPQTYS <> @I_vDECPLQTY)  begin  select @O_iErrorState = 8004     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vDECPLCUR not in(1,2,3,4,5,6))  begin  select @O_iErrorState = 7912     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( (@I_vSTNDCOST <> round(@I_vSTNDCOST,@I_vDECPLCUR - 1)) or  (@I_vCURRCOST <> round(@I_vCURRCOST,@I_vDECPLCUR - 1)) or  (@I_vLISTPRCE <> round(@I_vLISTPRCE,@I_vDECPLCUR - 1))) begin  select @O_iErrorState = 7915     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_Tax_Options not in(1,2,3)) begin  select @O_iErrorState = 1302     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPurchase_Tax_Options <> 1) and (@I_vPurchase_Item_Tax_Schedu <> '')) begin  select @O_iErrorState = 1303     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_Item_Tax_Schedu <> '') begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Item_Tax_Schedu))  begin  select @O_iErrorState = 1304     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vALTITEM1 <> '') begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vALTITEM1))  begin  select @O_iErrorState = 500     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vALTITEM2 <> '') begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vALTITEM2))  begin  select @O_iErrorState = 501     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vALTITEM1 = @I_vALTITEM2) and (@I_vALTITEM1 <> '' and @I_vALTITEM2 <> '')) begin  select @O_iErrorState = 5456     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vALTITEM1 = '') and (@I_vALTITEM2 <> '')) begin  select @O_iErrorState = 7461     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITMTRKOP not in(1,2,3)) begin  select @O_iErrorState = 7913     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLOTTYPE <> '') begin  if (not exists(select 1 from IV40500 (nolock) where LOTTYPE = @I_vLOTTYPE))  begin  select @O_iErrorState = 7914     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vLOTEXPWARN not in (0,1)) begin  select @O_iErrorState = 9597     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLOTEXPWARNDAYS < 0 or  @I_vLOTEXPWARNDAYS > 999) begin  select @O_iErrorState = 9598     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLOTEXPWARN = 0) begin  select @I_vLOTEXPWARNDAYS = 0 end  if (@I_vITMTRKOP <> 3) begin  select @I_vLOTTYPE = '',    @I_vLOTEXPWARN = 0,  @I_vLOTEXPWARNDAYS = 0 end  if (@I_vINCLUDEINDP not in(0,1)) begin  select @O_iErrorState = 8020     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vMINSHELF1 < 0) or (@I_vMINSHELF1 > 9999)) begin  select @O_iErrorState = 8021     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vMINSHELF1 <> 0) and (@I_vITMTRKOP <> 3)) begin  select @O_iErrorState = 6304     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vMINSHELF2 < 0) or (@I_vMINSHELF2 > 9999)) begin  select @O_iErrorState = 8022     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vMINSHELF2 <> 0) and (@I_vITMTRKOP <> 3)) begin  select @O_iErrorState = 5315     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vALWBKORD not in(0,1)) begin  select @O_iErrorState = 8023     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vWRNTYDYS < 0) or (@I_vWRNTYDYS > 9999)) begin  select @O_iErrorState = 128     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vABCCODE not in(1,2,3,4)) begin  select @O_iErrorState = 503     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUSCATVLS_1 <> '') begin  if (exists(select top 1 SETUPKEY from IV40100 (nolock) where USCATDSC_1 = '' and SETUPKEY = 1))  begin  select @O_iErrorState = 8024     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUSCATVLS_2 <> '') begin  if (exists(select top 1 SETUPKEY from IV40100 (nolock) where USCATDSC_2 = '' and SETUPKEY = 1))  begin  select @O_iErrorState = 8025     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUSCATVLS_3 <> '') begin  if (exists(select top 1 SETUPKEY from IV40100 (nolock) where USCATDSC_3 = '' and SETUPKEY = 1))  begin  select @O_iErrorState = 494     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUSCATVLS_4 <> '') begin  if (exists(select top 1 SETUPKEY from IV40100 (nolock) where USCATDSC_4 = '' and SETUPKEY = 1))  begin  select @O_iErrorState = 8026     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUSCATVLS_5 <> '') begin  if (exists(select top 1 SETUPKEY from IV40100 (nolock) where USCATDSC_5 = '' and SETUPKEY = 1))  begin  select @O_iErrorState = 8027     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUSCATVLS_6 <> '') begin  if (exists(select top 1 SETUPKEY from IV40100 (nolock) where USCATDSC_6 = '' and SETUPKEY = 1))  begin  select @O_iErrorState = 8028     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vKPCALHST not in(0,1)) begin  select @O_iErrorState = 8029     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vKPERHIST not in(0,1)) begin  select @O_iErrorState = 8030     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vKPTRXHST not in(0,1)) begin  select @O_iErrorState = 8031     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vKPDSTHST not in(0,1)) begin  select @O_iErrorState = 8032     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vIVIVACTNUMST <> '') begin  select @IVIVINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVIVACTNUMST   if (@IVIVINDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVIVINDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7963     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7964     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8033     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVIVOFACTNUMST <> '') begin  select @IVIVOFIX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVIVOFACTNUMST   if (@IVIVOFIX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVIVOFIX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7965     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7966     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8034     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVCOGSACTNUMST <> '') begin  select @IVCOGSIX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVCOGSACTNUMST   if (@IVCOGSIX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVCOGSIX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7967     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7968     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8035     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVSLSACTNUMST <> '') begin  select @IVSLSIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVSLSACTNUMST   if (@IVSLSIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVSLSIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7969     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7970     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8036     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVSLDSACTNUMST <> '') begin  select @IVSLDSIX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVSLDSACTNUMST   if (@IVSLDSIX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVSLDSIX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7971     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7972     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8037     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVSLRNACTNUMST <> '') begin  select @IVSLRNIX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVSLRNACTNUMST   if (@IVSLRNIX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVSLRNIX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7973     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7974     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8038     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVINUSACTNUMST <> '') begin  select @IVINUSIX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVINUSACTNUMST   if (@IVINUSIX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVINUSIX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7975     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7976     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8039     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVINSVACTNUMST <> '') begin  select @IVINSVIX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVINSVACTNUMST   if (@IVINSVIX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVINSVIX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7977     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7978     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8040     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVDMGACTNUMST <> '') begin  select @IVDMGIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVDMGACTNUMST   if (@IVDMGIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVDMGIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7979     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7980     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8041     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVVARACTNUMST <> '') begin  select @IVVARIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVVARACTNUMST   if (@IVVARIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVVARIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7981     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7982     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8042     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vDPSHPACTNUMST <> '') begin  select @DPSHPIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vDPSHPACTNUMST   if (@DPSHPIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @DPSHPIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7983     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7984     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8043     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vPURPVACTNUMST <> '') begin  select @PURPVIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vPURPVACTNUMST   if (@PURPVIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @PURPVIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7985     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7986     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8044     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vUPPVACTNUMST <> '') begin  select @UPPVIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vUPPVACTNUMST   if (@UPPVIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @UPPVIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7987     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7988     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8045     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVRETACTNUMST <> '') begin  select @IVRETIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vIVRETACTNUMST   if (@IVRETIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @IVRETIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7989     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7990     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8046     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vASMVRACTNUMST <> '') begin  select @ASMVRIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vASMVRACTNUMST   if (@ASMVRIDX <> 0)  begin  select @ACTIVE = ACTIVE,  @ACCTTYPE = ACCTTYPE  from GL00100 (nolock) where ACTINDX = @ASMVRIDX   if (@ACTIVE = 0)  begin  select @O_iErrorState = 7991     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ACCTTYPE not in(1,3))  begin  select @O_iErrorState = 7992     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTIVE = 0, @ACCTTYPE = 0  end  else  begin  select @O_iErrorState = 8047     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vKTACCTSR not in(0,1)) begin  select @O_iErrorState = 502     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPRCHSUOM <> '') begin  if (not exists(select 1 from IV40202 (nolock) where UOMSCHDL = @I_vUOMSCHDL and UOFM = @I_vPRCHSUOM))  begin  select @O_iErrorState = 89     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vRevalue_Inventory not in(0,1)) begin  select @O_iErrorState = 100     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRevalue_Inventory = 0) and (@I_vTolerance_Percentage > 0)) begin  select @O_iErrorState = 8001     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vTolerance_Percentage > 9999.999) begin  select @O_iErrorState = 528     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vTolerance_Percentage > 0) and (@I_vVCTNMTHD not in(1,2,3))) begin  select @O_iErrorState = 8000     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLOCNCODE <> '') begin  if (not exists(select top 1 LOCNCODE from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE))  begin  select @O_iErrorState = 92     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vPRICMTHD < 1) or (@I_vPRICMTHD > 6)) begin  select @O_iErrorState = 523     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPriceGroup <> '') begin  if (not exists(select top 1 PriceGroup from IV40900 (nolock) where PriceGroup = @I_vPriceGroup))  begin  select @O_iErrorState = 7995     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vUseQtyOverageTolerance > 0 and  @I_vITEMTYPE > 2 )  begin  select @O_iErrorState = 11774     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vUseQtyShortageTolerance > 0 and @I_vITEMTYPE > 2 )  begin  select @O_iErrorState = 11775     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vUseQtyOverageTolerance < 0 or @I_vUseQtyOverageTolerance > 1 )  begin  select @O_iErrorState = 11776     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vUseQtyShortageTolerance < 0 or @I_vUseQtyShortageTolerance > 1 )  begin  select @O_iErrorState = 11777     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vQtyOverTolerancePercent < 0 or @I_vQtyOverTolerancePercent > 99999 )  begin  select @O_iErrorState = 11778     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vQtyShortTolerancePercent < 0 or @I_vQtyShortTolerancePercent > 99999 )  begin  select @O_iErrorState = 11779     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vUseItemClass not in(0,1)) begin  select @O_iErrorState = 8048     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vUpdateIfExists < 0) or (@I_vUpdateIfExists > 1)) begin  select @O_iErrorState = 3711     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 3712     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Item',  @I_vINDEX1 = @I_vITEMNMBR,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 1279    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @I_vTolerance_Percentage = @I_vTolerance_Percentage * 1000,  @I_vITEMSHWT = @I_vITEMSHWT * 100  if (@exists = 0) begin  insert IV00101  (  ITEMNMBR,  ITEMDESC,  NOTEINDX,  ITMSHNAM,  ITEMTYPE,  ITMGEDSC,  STNDCOST,  CURRCOST,  ITEMSHWT,  DECPLQTY,  DECPLCUR,  ITMTSHID,  TAXOPTNS,  IVIVINDX,  IVIVOFIX,  IVCOGSIX,  IVSLSIDX,  IVSLDSIX,  IVSLRNIX,  IVINUSIX,  IVINSVIX,  IVDMGIDX,  IVVARIDX,  DPSHPIDX,  PURPVIDX,  UPPVIDX,  IVRETIDX,  ASMVRIDX,  ITMCLSCD,  ITMTRKOP,  LOTTYPE,  LOTEXPWARN,  LOTEXPWARNDAYS,  KPERHIST,  KPTRXHST,  KPCALHST,  KPDSTHST,  ALWBKORD,  VCTNMTHD,  UOMSCHDL,  ALTITEM1,  ALTITEM2,  USCATVLS_1,  USCATVLS_2,  USCATVLS_3,  USCATVLS_4,  USCATVLS_5,  USCATVLS_6,  MSTRCDTY,  MODIFDT,  CREATDDT,  WRNTYDYS,  PRCLEVEL,  LOCNCODE,  PINFLIDX,  PURMCIDX,  IVINFIDX,  INVMCIDX,  CGSINFLX,  CGSMCIDX,  ITEMCODE,  TCC,  PriceGroup,  PRICMTHD,  PRCHSUOM,  SELNGUOM,  KTACCTSR,  LASTGENSN,  ABCCODE,  Revalue_Inventory,  Tolerance_Percentage,  Purchase_Item_Tax_Schedu,  Purchase_Tax_Options,  ITMPLNNNGTYP,  STTSTCLVLPRCNTG,  CNTRYORGN,  INACTIVE,  MINSHELF1,  MINSHELF2,  INCLUDEINDP,  LASTGENLOT,  Lot_Split_Quantity,  UseQtyOverageTolerance,  UseQtyShortageTolerance,  QtyOverTolerancePercent,  QtyShortTolerancePercent  )  select  @I_vITEMNMBR,    @I_vITEMDESC,    @nNextNoteIndex,   @I_vITMSHNAM,    @I_vITEMTYPE,    @I_vITMGEDSC,    @I_vSTNDCOST,    @I_vCURRCOST,    @I_vITEMSHWT,    @I_vDECPLQTY,    @I_vDECPLCUR,    @I_vITMTSHID,    @I_vTAXOPTNS,    @IVIVINDX,     @IVIVOFIX,     @IVCOGSIX,     @IVSLSIDX,     @IVSLDSIX,     @IVSLRNIX,     @IVINUSIX,     @IVINSVIX,     @IVDMGIDX,     @IVVARIDX,     @DPSHPIDX,     @PURPVIDX,     @UPPVIDX,     @IVRETIDX,     @ASMVRIDX,     @I_vITMCLSCD,    @I_vITMTRKOP,    @I_vLOTTYPE,    @I_vLOTEXPWARN,    @I_vLOTEXPWARNDAYS,   @I_vKPERHIST,    @I_vKPTRXHST,    @I_vKPCALHST,    @I_vKPDSTHST,    @I_vALWBKORD,    @I_vVCTNMTHD,    @I_vUOMSCHDL,    @I_vALTITEM1,    @I_vALTITEM2,    @I_vUSCATVLS_1,    @I_vUSCATVLS_2,    @I_vUSCATVLS_3,    @I_vUSCATVLS_4,    @I_vUSCATVLS_5,    @I_vUSCATVLS_6,    1,       '',       @ActualDate,    @I_vWRNTYDYS,    @PRCLEVEL,     @I_vLOCNCODE,    0,       0,       0,       0,       0,       0,       '',       @I_vTCC,     @I_vPriceGroup,    @I_vPRICMTHD,    @I_vPRCHSUOM,    '',       @I_vKTACCTSR,    '',       @I_vABCCODE,    @I_vRevalue_Inventory,    @I_vTolerance_Percentage,   @I_vPurchase_Item_Tax_Schedu,   @I_vPurchase_Tax_Options,   1,       '',       @I_vCNTRYORGN,    0,       @I_vMINSHELF1,    @I_vMINSHELF2,    @I_vINCLUDEINDP,    '',       0,       @I_vUseQtyOverageTolerance,    @I_vUseQtyShortageTolerance,   @I_vQtyOverTolerancePercent,   @I_vQtyShortTolerancePercent   if (@@error <> 0)  begin  select @O_iErrorState = 780    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  update IV00101 set  ITEMDESC = @I_vITEMDESC,  ITMSHNAM = @I_vITMSHNAM,  ITEMTYPE = @I_vITEMTYPE,  ITMGEDSC = @I_vITMGEDSC,  STNDCOST = @I_vSTNDCOST,  CURRCOST = @I_vCURRCOST,  ITEMSHWT = @I_vITEMSHWT,  DECPLQTY = @I_vDECPLQTY,  ITMTSHID = @I_vITMTSHID,  TAXOPTNS = @I_vTAXOPTNS,  IVIVINDX = @IVIVINDX,  IVIVOFIX = @IVIVOFIX,  IVCOGSIX = @IVCOGSIX,  IVSLSIDX = @IVSLSIDX,  IVSLDSIX = @IVSLDSIX,  IVSLRNIX = @IVSLRNIX,  IVINUSIX = @IVINUSIX,  IVINSVIX = @IVINSVIX,  IVDMGIDX = @IVDMGIDX,  IVVARIDX = @IVVARIDX,  DPSHPIDX = @DPSHPIDX,  PURPVIDX = @PURPVIDX,  UPPVIDX = @UPPVIDX,  IVRETIDX = @IVRETIDX,  ASMVRIDX = @ASMVRIDX,  ITMCLSCD = @I_vITMCLSCD,  ITMTRKOP = @I_vITMTRKOP,  LOTTYPE = @I_vLOTTYPE,  LOTEXPWARN = @I_vLOTEXPWARN,  LOTEXPWARNDAYS = @I_vLOTEXPWARNDAYS,  KPERHIST = @I_vKPERHIST,  KPTRXHST = @I_vKPTRXHST,  KPCALHST = @I_vKPCALHST,  KPDSTHST = @I_vKPDSTHST,  ALWBKORD = @I_vALWBKORD,  VCTNMTHD = @I_vVCTNMTHD,  UOMSCHDL = @I_vUOMSCHDL,  ALTITEM1 = @I_vALTITEM1,  ALTITEM2 = @I_vALTITEM2,  USCATVLS_1 = @I_vUSCATVLS_1,  USCATVLS_2 = @I_vUSCATVLS_2,  USCATVLS_3 = @I_vUSCATVLS_3,  USCATVLS_4 = @I_vUSCATVLS_4,  USCATVLS_5 = @I_vUSCATVLS_5,  USCATVLS_6 = @I_vUSCATVLS_6,  MODIFDT = @ActualDate,  WRNTYDYS = @I_vWRNTYDYS,  PRCLEVEL = @PRCLEVEL,  LOCNCODE = @I_vLOCNCODE,  TCC = @I_vTCC,  PriceGroup = @I_vPriceGroup,  PRICMTHD = @I_vPRICMTHD,  PRCHSUOM = @I_vPRCHSUOM,  KTACCTSR = @I_vKTACCTSR,  ABCCODE = @I_vABCCODE,  Revalue_Inventory = @I_vRevalue_Inventory,  Tolerance_Percentage = @I_vTolerance_Percentage,  Purchase_Item_Tax_Schedu = @I_vPurchase_Item_Tax_Schedu,  Purchase_Tax_Options = @I_vPurchase_Tax_Options,  CNTRYORGN = @I_vCNTRYORGN,  MINSHELF1 = @I_vMINSHELF1,  MINSHELF2 = @I_vMINSHELF2,  INCLUDEINDP = @I_vINCLUDEINDP,  UseQtyOverageTolerance = @I_vUseQtyOverageTolerance,  UseQtyShortageTolerance = @I_vUseQtyShortageTolerance,  QtyOverTolerancePercent = @I_vQtyOverTolerancePercent,  QtyShortTolerancePercent = @I_vQtyShortTolerancePercent  where ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 526    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vUSCATVLS_1 <> '')  begin   if (not exists(select 1 from IV40600 (nolock) where USCATNUM = 1 and USCATVAL = @I_vUSCATVLS_1))  begin  insert IV40600  (  USCATVAL,  USCATNUM,  Image_URL,  UserCatLongDescr  )  select   @I_vUSCATVLS_1,  1,  '',  ''  if (@@error <> 0)  begin  select @O_iErrorState = 525    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUSCATVLS_2 <> '')  begin   if (not exists(select 1 from IV40600 (nolock) where USCATNUM = 2 and USCATVAL = @I_vUSCATVLS_2))  begin  insert IV40600  (  USCATVAL,  USCATNUM,  Image_URL,  UserCatLongDescr  )  select   @I_vUSCATVLS_2,  2,  '',  ''  if (@@error <> 0)  begin  select @O_iErrorState = 524    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUSCATVLS_3 <> '')  begin   if (not exists(select 1 from IV40600 (nolock) where USCATNUM = 3 and USCATVAL = @I_vUSCATVLS_3))  begin  insert IV40600  (  USCATVAL,  USCATNUM,  Image_URL,  UserCatLongDescr  )  select   @I_vUSCATVLS_3,  3,  '',  ''  if (@@error <> 0)  begin  select @O_iErrorState = 7994    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUSCATVLS_4 <> '')  begin   if (not exists(select 1 from IV40600 (nolock) where USCATNUM = 4 and USCATVAL = @I_vUSCATVLS_4))  begin  insert IV40600  (  USCATVAL,  USCATNUM,  Image_URL,  UserCatLongDescr  )  select   @I_vUSCATVLS_4,  4,  '',  ''  if (@@error <> 0)  begin  select @O_iErrorState = 2321    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUSCATVLS_5 <> '')  begin   if (not exists(select 1 from IV40600 (nolock) where USCATNUM = 5 and USCATVAL = @I_vUSCATVLS_5))  begin  insert IV40600  (  USCATVAL,  USCATNUM,  Image_URL,  UserCatLongDescr  )  select   @I_vUSCATVLS_5,  5,  '',  ''  if (@@error <> 0)  begin  select @O_iErrorState = 7034    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUSCATVLS_6 <> '')  begin   if (not exists(select 1 from IV40600 (nolock) where USCATNUM = 6 and USCATVAL = @I_vUSCATVLS_6))  begin  insert IV40600  (  USCATVAL,  USCATNUM,  Image_URL,  UserCatLongDescr  )  select   @I_vUSCATVLS_6,  6,  '',  ''  if (@@error <> 0)  begin  select @O_iErrorState = 74    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@exists = 0) begin  insert IV00102  (  ITEMNMBR,  LOCNCODE,  BINNMBR,  RCRDTYPE,  PRIMVNDR,  ITMFRFLG,  BGNGQTY,  LSORDQTY,  LRCPTQTY,  LSTORDDT,  LSORDVND,  LSRCPTDT,  QTYRQSTN,  QTYONORD,  QTYBKORD,  QTY_Drop_Shipped,  QTYINUSE,  QTYINSVC,  QTYRTRND,  QTYDMGED,  QTYONHND,  ATYALLOC,  QTYCOMTD,  QTYSOLD,  NXTCNTDT,  NXTCNTTM,  LSTCNTDT,  LSTCNTTM,  STCKCNTINTRVL,  Landed_Cost_Group_ID,  BUYERID,  PLANNERID,  ORDERPOLICY,  FXDORDRQTY,  ORDRPNTQTY,  NMBROFDYS,  MNMMORDRQTY,  MXMMORDRQTY,  ORDERMULTIPLE,  REPLENISHMENTMETHOD,  SHRINKAGEFACTOR,  PRCHSNGLDTM,  MNFCTRNGFXDLDTM,  MNFCTRNGVRBLLDTM,  STAGINGLDTME,  PLNNNGTMFNCDYS,  DMNDTMFNCPRDS,  INCLDDINPLNNNG,  CALCULATEATP,  AUTOCHKATP,  PLNFNLPAB,  FRCSTCNSMPTNPRD,  ORDRUPTOLVL,  SFTYSTCKQTY,  REORDERVARIANCE,  PORECEIPTBIN,  PORETRNBIN,  SOFULFILLMENTBIN,  SORETURNBIN,  BOMRCPTBIN,  MATERIALISSUEBIN,  MORECEIPTBIN,  REPAIRISSUESBIN,  ReplenishmentLevel,  POPOrderMethod,  MasterLocationCode,  POPVendorSelection,  POPPricingSelection,  PurchasePrice,  IncludeAllocations,  IncludeBackorders,  IncludeRequisitions,  PICKTICKETITEMOPT,  INCLDMRPMOVEIN,  INCLDMRPMOVEOUT,  INCLDMRPCANCEL  )  select  @I_vITEMNMBR,    '',     '',     1,     '',     0,     0,     0,     0,     '',     '',     '',     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     '',     '',     '',     '',     0,     '',     '',     '',     1,     0,     0,     1,     0,     0,     1,     2,     0,     0,     0,     0,     0,     0,     0,     1,     0,     0,     0,     3,     0,     0,     0,     '',     '',     '',     '',     '',     '',     '',     '',     1,     1,     '',     1,     1,     0,     1,     1,     1,     0,     0,     0,     0     if (@@error <> 0)  begin  select @O_iErrorState = 781    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (not exists(select top 1 LOCNCODE from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)) begin  insert IV00102  (  ITEMNMBR,  LOCNCODE,  BINNMBR,  RCRDTYPE,  PRIMVNDR,  ITMFRFLG,  BGNGQTY,  LSORDQTY,  LRCPTQTY,  LSTORDDT,  LSORDVND,  LSRCPTDT,  QTYRQSTN,  QTYONORD,  QTYBKORD,  QTY_Drop_Shipped,  QTYINUSE,  QTYINSVC,  QTYRTRND,  QTYDMGED,  QTYONHND,  ATYALLOC,  QTYCOMTD,  QTYSOLD,  NXTCNTDT,  NXTCNTTM,  LSTCNTDT,  LSTCNTTM,  STCKCNTINTRVL,  Landed_Cost_Group_ID,  BUYERID,  PLANNERID,  ORDERPOLICY,  FXDORDRQTY,  ORDRPNTQTY,  NMBROFDYS,  MNMMORDRQTY,  MXMMORDRQTY,  ORDERMULTIPLE,  REPLENISHMENTMETHOD,  SHRINKAGEFACTOR,  PRCHSNGLDTM,  MNFCTRNGFXDLDTM,  MNFCTRNGVRBLLDTM,  STAGINGLDTME,  PLNNNGTMFNCDYS,  DMNDTMFNCPRDS,  INCLDDINPLNNNG,  CALCULATEATP,  AUTOCHKATP,  PLNFNLPAB,  FRCSTCNSMPTNPRD,  ORDRUPTOLVL,  SFTYSTCKQTY,  REORDERVARIANCE,  PORECEIPTBIN,  PORETRNBIN,  SOFULFILLMENTBIN,  SORETURNBIN,  BOMRCPTBIN,  MATERIALISSUEBIN,  MORECEIPTBIN,  REPAIRISSUESBIN,  ReplenishmentLevel,  POPOrderMethod,  MasterLocationCode,  POPVendorSelection,  POPPricingSelection,  PurchasePrice,  IncludeAllocations,  IncludeBackorders,  IncludeRequisitions,  PICKTICKETITEMOPT  )  select  @I_vITEMNMBR,    @I_vLOCNCODE,    '',     2,     '',     0,     0,     0,     0,     '',     '',     '',     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     '',     '',     '',     '',     0,     '',     '',     '',     1,     0,     0,     1,     0,     0,     1,     2,     0,     0,     0,     0,     0,     0,     0,     1,     0,     0,     0,     3,     0,     0,     0,     '',     '',     '',     '',     '',     '',     '',     '',     1,     1,     '',     1,     1,     0,     1,     1,     1,     0     if (@@error <> 0)  begin  select @O_iErrorState = 471    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@ISMCREG = 1) begin  if (@I_vUseItemClass = 0)  begin  if (not exists(select top 1 CURNCYID from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and CURNCYID = @FUNLCURR))  begin  insert IV00105  (  ITEMNMBR,  CURNCYID,  CURRNIDX,  DECPLCUR,  LISTPRCE  )  select  @I_vITEMNMBR,  @FUNLCURR,  @FUNCRIDX,  @I_vDECPLCUR,  @I_vLISTPRCE  if (@@error <> 0)  begin  select @O_iErrorState = 449    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  else  begin  insert IV00105  (  ITEMNMBR,  CURNCYID,  CURRNIDX,  DECPLCUR,  LISTPRCE  )  select  @I_vITEMNMBR,  a.CURNCYID,  c.CURRNIDX,  a.DECPLCUR,  0  from IV40401 a (nolock), DYNAMICS..MC40200 c (nolock)  where a.ITMCLSCD = @I_vITMCLSCD and  a.CURNCYID = c.CURNCYID and  a.CURNCYID not in(select CURNCYID from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR) and  a.CURNCYID <> @FUNLCURR  if (@@error <> 0)  begin  select @O_iErrorState = 782    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (not exists(select top 1 CURNCYID from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and ((CURNCYID = '') or (CURNCYID = @FUNLCURR)))) begin  insert IV00105  (  ITEMNMBR,  CURNCYID,  CURRNIDX,  DECPLCUR,  LISTPRCE  )  select  @I_vITEMNMBR,  case  when @ISMCREG = 0  then ''  else @FUNLCURR  end,  case  when @ISMCREG = 0  then 0  else @FUNCRIDX  end,  @I_vDECPLCUR,  @I_vLISTPRCE  if (@@error <> 0)  begin  select @O_iErrorState = 8049    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@ISMCREG = 0) and (@exists = 1)) begin  update IV00105 set  LISTPRCE = @I_vLISTPRCE  where CURNCYID = '' and CURRNIDX = 0 and ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 4603     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@uofmchanged = 1) begin  delete IV00106 where ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 5477    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   delete IV00107 where ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 7998    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   delete IV00108 where ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 7999    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@exists = 0) or (@uofmchanged = 1)) begin  insert IV00106  (  ITEMNMBR,  UOFM,  QTYBSUOM,  UMPUROPT  )  select  @I_vITEMNMBR,  a.UOFM,  a.QTYBSUOM,  case  when (b.UMDPQTYS = 1 or b.UMDPQTYS = 2)  then 2  else 3  end  from IV40202 a (nolock), IV40201 b (nolock)  where b.UOMSCHDL = @I_vUOMSCHDL and  b.UOMSCHDL = a.UOMSCHDL and  a.QTYBSUOM <> 0 and  b.BASEUOFM = a.EQUIVUOM    if (@@error <> 0)  begin  select @O_iErrorState = 783    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vNOTETEXT <> '') begin  if (not exists(select top 1 NOTEINDX from SY03900 (nolock) where NOTEINDX = @nNextNoteIndex))  begin  insert SY03900   (  NOTEINDX,   DATE1,   TIME1,   TXTFIELD  )   select   @nNextNoteIndex,  @ActualDate,  @ActualTime,  @I_vNOTETEXT  if (@@error <> 0)  begin  select @O_iErrorState = 8009    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  update SY03900 set  DATE1 = @ActualDate,  TIME1 = @ActualTime,  TXTFIELD = @I_vNOTETEXT  where NOTEINDX = @nNextNoteIndex  if (@@error <> 0)  begin  select @O_iErrorState = 8010    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  delete SY03900 where NOTEINDX = @nNextNoteIndex  if (@@error <> 0)  begin  select @O_iErrorState = 8011    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taUpdateCreateItemRcdPost  @I_vITEMNMBR,  @I_vITEMDESC,  @I_vITMSHNAM,  @I_vITMGEDSC,  @I_vITMCLSCD,  @I_vITEMTYPE,  @I_vVCTNMTHD,  @I_vTAXOPTNS,  @I_vITMTSHID,  @I_vUOMSCHDL,  @I_vITEMSHWT,  @I_vTCC,  @I_vCNTRYORGN,  @I_vDECPLQTY,  @I_vDECPLCUR,  @I_vPurchase_Tax_Options,  @I_vPurchase_Item_Tax_Schedu,  @I_vSTNDCOST,  @I_vCURRCOST,  @I_vLISTPRCE,  @I_vNOTETEXT,  @I_vALTITEM1,  @I_vALTITEM2,  @I_vITMTRKOP,  @I_vLOTTYPE,  @I_vLOTEXPWARN,  @I_vLOTEXPWARNDAYS,  @I_vINCLUDEINDP,  @I_vMINSHELF1,  @I_vMINSHELF2,  @I_vALWBKORD,  @I_vWRNTYDYS,  @I_vABCCODE,  @I_vUSCATVLS_1,  @I_vUSCATVLS_2,  @I_vUSCATVLS_3,  @I_vUSCATVLS_4,  @I_vUSCATVLS_5,  @I_vUSCATVLS_6,  @I_vKPCALHST,  @I_vKPERHIST,  @I_vKPTRXHST,  @I_vKPDSTHST,  @I_vIVIVACTNUMST,  @I_vIVIVOFACTNUMST,  @I_vIVCOGSACTNUMST,  @I_vIVSLSACTNUMST,  @I_vIVSLDSACTNUMST,  @I_vIVSLRNACTNUMST,  @I_vIVINUSACTNUMST,  @I_vIVINSVACTNUMST,  @I_vIVDMGACTNUMST ,  @I_vIVVARACTNUMST,  @I_vDPSHPACTNUMST,  @I_vPURPVACTNUMST,  @I_vUPPVACTNUMST,  @I_vIVRETACTNUMST,  @I_vASMVRACTNUMST,  @I_vKTACCTSR,  @I_vPRCHSUOM,  @I_vRevalue_Inventory,  @I_vTolerance_Percentage,  @I_vLOCNCODE,  @I_vPRICMTHD,  @I_vPriceGroup,  @I_vUseQtyOverageTolerance,   @I_vUseQtyShortageTolerance,  @I_vQtyOverTolerancePercent,   @I_vQtyShortTolerancePercent,  @I_vUseItemClass,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 30    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Item',  @I_vINDEX1 = @I_vITEMNMBR,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 1280    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taUpdateCreateItemRcd] TO [DYNGRP]
GO

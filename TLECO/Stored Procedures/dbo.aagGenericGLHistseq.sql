SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 CREATE  PROCEDURE [dbo].[aagGenericGLHistseq] @USERID CHAR(15), @TBName varchar(25), @Preview SMALLINT, @O_SQL_Error_State int = NULL  output AS  BEGIN   set nocount on  Declare @execStr varchar(8000),  @JRNENTRY bigint,  @aaGLHdrID   bigint,  @counter int,  @CntGP int,  @CntAA int,  @Cnt int,  @j   int,  @k int,  @l int   Declare @ACTINDX int,  @DEBITAMT numeric(19,5),  @CRDTAMNT numeric(19,5),  @ORDBTAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @SEQNUMBR bigint,  @lJRNENTRY bigint   Declare @cDBName char(5),  @l_nStatus int,  @l_cPROFIT_AND_LOSS varchar(255),  @l_cBalSheet varchar(255),  @O_nSQL_Error_State int,  @l_nError int,  @l_cBBF varchar(255),  @l_cPANDL varchar(255),  @l_RCTRXSEQ numeric(19,5),  @l_YEAR1 smallint,  @l_aaGLTRXSource char(13)  select @cDBName = DB_NAME()   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12030, @cDBName, @l_cBBF output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12125, @cDBName, @l_cPANDL output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)  exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12125, @cDBName, @l_cPROFIT_AND_LOSS output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12030, @cDBName, @l_cBalSheet output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   if exists(select name from tempdb..sysobjects where name = '##AAGLHTemp'  and type = 'U')   Drop table ##AAGLHTemp  Create table ##AAGLHTemp(info varchar(2000))  declare CGLHistseq cursor fast_forward  for   (Select Distinct A.JRNENTRY,A.aaGLHdrID, A.RCTRXSEQ, A.YEAR1, A.aaGLTRXSource from AAG40001 A1 inner join AAG40000 A on A1.aaGLHdrID = A.aaGLHdrID  inner join (select (select case when count(SEQNUMBR) > 1 then 3 else 1 end from GL30000 Der   where Der.JRNENTRY = GL30000.JRNENTRY and Der.SEQNUMBR = GL30000.SEQNUMBR and Der.RCTRXSEQ = GL30000.RCTRXSEQ   and Der.HSTYEAR = GL30000.HSTYEAR and Der.TRXSORCE = GL30000.TRXSORCE) ACCTTYPE, *  from GL30000) B on  A.aaGLTRXSource =B.TRXSORCE and B.SOURCDOC <> @l_cPROFIT_AND_LOSS and B.SOURCDOC <>  @l_cBalSheet   and A.JRNENTRY = B.JRNENTRY AND   A.RCTRXSEQ=B.RCTRXSEQ AND  A.aaGLTRXSource=B.TRXSORCE AND  A.YEAR1=B.HSTYEAR  where (A1.SEQNUMBR = B.SEQNUMBR and (A1.ACTINDX<>B.ACTINDX or  A1.DEBITAMT<>B.DEBITAMT or A1.CRDTAMNT<>B.CRDTAMNT   or A1.ORDBTAMT<>B.ORDBTAMT or A1.ORCRDAMT<> B.ORCRDAMT)) and B.ACCTTYPE<>3)  for read only   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP)   SELECT DISTINCT '+''''+@USERID + ''''+',''aaGLDist'',''Journal Entry=''+LTRIM(STR(A.JRNENTRY))+SPACE(3)+''aaGLHdrID=''+LTRIM(STR(A.aaGLHdrID))+SPACE(3)+''aaGLDistID=''+LTRIM(STR(A1.aaGLDistID)) ,2,1   from AAG40001 A1 inner join AAG40000 A on A1.aaGLHdrID = A.aaGLHdrID and ltrim(rtrim(SOURCDOC)) = ''''  inner join (select (select case when count(SEQNUMBR) > 1 then 3 else 1 end from GL30000 Der   where Der.JRNENTRY = GL30000.JRNENTRY and Der.SEQNUMBR = GL30000.SEQNUMBR and Der.RCTRXSEQ = GL30000.RCTRXSEQ  and Der.HSTYEAR = GL30000.HSTYEAR and Der.TRXSORCE = GL30000.TRXSORCE) ACCTTYPE, *  from GL30000) B on  A.aaGLTRXSource =B.TRXSORCE and B.SOURCDOC not IN(''' + @l_cBBF +''', ''' + @l_cPANDL + ''')   and A.JRNENTRY = B.JRNENTRY AND   A.RCTRXSEQ=B.RCTRXSEQ AND  A.aaGLTRXSource=B.TRXSORCE AND  A.YEAR1=B.HSTYEAR  where (A1.SEQNUMBR = B.SEQNUMBR and (A1.ACTINDX<>B.ACTINDX or  A1.DEBITAMT<>B.DEBITAMT or A1.CRDTAMNT<>B.CRDTAMNT   or A1.ORDBTAMT<>B.ORDBTAMT or A1.ORCRDAMT<> B.ORCRDAMT)) and B.ACCTTYPE<>3')   open CGLHistseq  fetch next from CGLHistseq into @JRNENTRY,@aaGLHdrID, @l_RCTRXSEQ, @l_YEAR1, @l_aaGLTRXSource  while @@fetch_status = 0  Begin   Update AAG40001 SET aaGLDistID=0-aaGLDistID where aaGLHdrID=@aaGLHdrID  Update AAG40002 SET aaGLDistID=0-aaGLDistID where aaGLHdrID=@aaGLHdrID  Update AAG40003 SET aaGLDistID=0-aaGLDistID where aaGLHdrID=@aaGLHdrID  UPDATE AAG40002   SET aaGLDistID = (SELECT COUNT(1) FROM AAG40001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID AND AA.aaGLHdrID = A1.aaGLHdrID) from AAG40001 A1 where AAG40002.aaGLHdrID=A1.aaGLHdrID and AAG40002.aaGLDistID=A1.aaGLDistID and A1.aaGLHdrID=@aaGLHdrID  UPDATE AAG40003  SET aaGLDistID = (SELECT COUNT(1) FROM AAG40001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID AND AA.aaGLHdrID = A1.aaGLHdrID) from AAG40001 A1 where AAG40003.aaGLHdrID=A1.aaGLHdrID and AAG40003.aaGLDistID=A1.aaGLDistID and A1.aaGLHdrID=@aaGLHdrID  UPDATE AAG40001   SET aaGLDistID = (SELECT COUNT(1) FROM AAG40001 AA WHERE AAG40001.DEX_ROW_ID >= AA.DEX_ROW_ID AND AA.aaGLHdrID = AAG40001.aaGLHdrID) where AAG40001.aaGLHdrID=@aaGLHdrID  set @Cnt=0  Select  @CntGP= count(JRNENTRY) from GL30000 where JRNENTRY = @JRNENTRY   AND RCTRXSEQ = @l_RCTRXSEQ   AND HSTYEAR = @l_YEAR1   AND TRXSORCE = @l_aaGLTRXSource   Select  @CntAA= count(aaGLHdrID) from AAG40001 where aaGLHdrID=@aaGLHdrID   if @CntGP>=@CntAA  Begin  SET @l=1  declare lCGLH cursor fast_forward for  select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SEQNUMBR   from GL30000 where  JRNENTRY=@JRNENTRY  AND RCTRXSEQ = @l_RCTRXSEQ   AND HSTYEAR = @l_YEAR1   AND TRXSORCE = @l_aaGLTRXSource   group by SEQNUMBR,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT   for read only  open lCGLH  fetch next from lCGLH into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SEQNUMBR  while @@fetch_status = 0  Begin  Update AAG40001 set SEQNUMBR=@SEQNUMBR  where aaGLHdrID = @aaGLHdrID and aaGLDistID = @l  set @l=@l+1  fetch next from lCGLH into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SEQNUMBR  end   close lCGLH  deallocate lCGLH  End  if exists(select name from tempdb..sysobjects where name = '##AAGLHDistID'  and type = 'U')  Drop table ##AAGLHDistID  Create table ##AAGLHDistID(DistID int,rowID int not null identity)  SET @k=1  While @CntAA>=@k  Begin   if @Cnt=@CntGP Break  SET @l=1  declare lCGLH cursor fast_forward for  select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SEQNUMBR   from GL30000 where  JRNENTRY=@JRNENTRY  AND RCTRXSEQ = @l_RCTRXSEQ   AND HSTYEAR = @l_YEAR1   AND TRXSORCE = @l_aaGLTRXSource   group by SEQNUMBR,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT   for read only  open lCGLH  fetch next from lCGLH into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SEQNUMBR  while @@fetch_status = 0 and  @CntAA >= @l  Begin   set @counter=0  if @k = 1  Begin  select @counter=count(*)  from AAG40001 A1 inner join AAG40000 A on A1.aaGLHdrID =A.aaGLHdrID   inner join GL30000 GL on GL.JRNENTRY=A.JRNENTRY  and GL.TRXSORCE =A.aaGLTRXSource   AND A.RCTRXSEQ = GL.RCTRXSEQ  AND A.YEAR1 = GL.HSTYEAR  and GL.SOURCDOC <> @l_cPROFIT_AND_LOSS and GL.SOURCDOC <>  @l_cBalSheet   where A1.ACTINDX = GL.ACTINDX and A1.CRDTAMNT  = GL.CRDTAMNT and A1.DEBITAMT = GL.DEBITAMT   and A1.ORDBTAMT=GL.ORDBTAMT and   A1.ORCRDAMT= GL.ORCRDAMT and GL.SEQNUMBR=@SEQNUMBR and GL.ACTINDX=@ACTINDX and GL.DEBITAMT=@DEBITAMT and A.aaGLHdrID =@aaGLHdrID   and GL.CRDTAMNT=@CRDTAMNT and GL.ORDBTAMT=@ORDBTAMT and GL.ORCRDAMT=@ORCRDAMT and GL.JRNENTRY=@lJRNENTRY and A1.aaGLDistID = @k  end   else  begin   select @counter=count(*)  from AAG40001 A1 inner join AAG40000 A on A1.aaGLHdrID =A.aaGLHdrID   inner join GL30000 GL on GL.JRNENTRY=A.JRNENTRY  and GL.TRXSORCE =A.aaGLTRXSource   AND A.RCTRXSEQ = GL.RCTRXSEQ  AND A.YEAR1 = GL.HSTYEAR  and GL.SOURCDOC <> @l_cPROFIT_AND_LOSS   and GL.SOURCDOC <>  @l_cBalSheet  where A1.ACTINDX = GL.ACTINDX and A1.CRDTAMNT  = GL.CRDTAMNT and A1.DEBITAMT = GL.DEBITAMT   and A1.ORDBTAMT=GL.ORDBTAMT and  A1.ORCRDAMT= GL.ORCRDAMT and GL.SEQNUMBR=@SEQNUMBR and GL.ACTINDX=@ACTINDX and GL.DEBITAMT=@DEBITAMT and A.aaGLHdrID =@aaGLHdrID   and GL.CRDTAMNT=@CRDTAMNT and GL.ORDBTAMT=@ORDBTAMT and GL.ORCRDAMT=@ORCRDAMT and GL.JRNENTRY=@lJRNENTRY and A1.aaGLDistID = @k  and GL.SEQNUMBR not in   (select SEQNUMBR from AAG40001 where aaGLDistID in (select DistID from ##AAGLHDistID) and aaGLHdrID =@aaGLHdrID and ACCTTYPE<>3)  end   if @counter = 1   Begin  insert into ##AAGLHDistID(DistID) VALUES(@l)  Select @Cnt = @Cnt + 1   Break  end   SET  @l = @l + 1  fetch next from lCGLH into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SEQNUMBR  end   close lCGLH  deallocate lCGLH  SET  @k = @k + 1  End   SET @j=1  Update AAG40001 SET aaGLDistID=0-aaGLDistID  where aaGLHdrID=@aaGLHdrID  Update AAG40002 SET aaGLDistID=0-aaGLDistID  where aaGLHdrID=@aaGLHdrID  Update AAG40003 SET aaGLDistID=0-aaGLDistID  where aaGLHdrID=@aaGLHdrID   Update AAG40001 SET aaGLDistID=@CntGP-aaGLDistID  where aaGLHdrID=@aaGLHdrID and aaGLDistID < 0  Update AAG40002 SET aaGLDistID=@CntGP-aaGLDistID  where aaGLHdrID=@aaGLHdrID and aaGLDistID < 0  Update AAG40003 SET aaGLDistID=@CntGP-aaGLDistID  where aaGLHdrID=@aaGLHdrID and aaGLDistID < 0  UPDATE AAG40002   SET aaGLDistID = @CntGP+(SELECT COUNT(1) FROM AAG40001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID AND AA.aaGLHdrID = A1.aaGLHdrID) from AAG40001 A1 where AAG40002.aaGLHdrID=A1.aaGLHdrID and AAG40002.aaGLDistID=A1.aaGLDistID  and  AAG40002.aaGLHdrID = @aaGLHdrID and AAG40002.aaGLDistID>@CntGP  UPDATE AAG40003  SET aaGLDistID = @CntGP+(SELECT COUNT(1) FROM AAG40001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID  AND AA.aaGLHdrID = A1.aaGLHdrID) from AAG40001 A1 where AAG40003.aaGLHdrID=A1.aaGLHdrID and AAG40003.aaGLDistID=A1.aaGLDistID  and AAG40003.aaGLHdrID = @aaGLHdrID and AAG40003.aaGLDistID>@CntGP  if (select Distinct count(aaGLDistID) from AAG40002 where aaGLHdrID=@aaGLHdrID) = (select count(GL30000.JRNENTRY) from GL30000,AAG40000 where   GL30000.TRXSORCE =AAG40000.aaGLTRXSource and GL30000.SOURCDOC <> @l_cPROFIT_AND_LOSS and GL30000.SOURCDOC <>  @l_cBalSheet  and  AAG40000.JRNENTRY=GL30000.JRNENTRY   and GL30000.JRNENTRY =@JRNENTRY  AND GL30000.RCTRXSEQ = @l_RCTRXSEQ   AND GL30000.HSTYEAR = @l_YEAR1   AND GL30000.TRXSORCE = @l_aaGLTRXSource )  Begin  SET @k=1  SET  @j = 0  Select  @CntAA= count(aaGLHdrID) FROM AAG40002 WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID>@CntGP  While  @CntAA > @k  Begin  if exists(select (aaGLDistID) from AAG40002 where aaGLHdrID=@aaGLHdrID and aaGLDistID=@k+@j)  Begin  SET @j=@j+1  continue   end   else  Begin  UPDATE AAG40002   SET aaGLDistID = @k+@j  WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID=@CntGP+@k  UPDATE AAG40003  SET aaGLDistID = @k+@j  WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID=@CntGP+@k  SET @k=@k+1   end   End  End   insert into ##AAGLHTemp(info) VALUES(@JRNENTRY)    fetch next from CGLHistseq into  @JRNENTRY,@aaGLHdrID, @l_RCTRXSEQ, @l_YEAR1, @l_aaGLTRXSource  End   CLOSE CGLHistseq  DEALLOCATE CGLHistseq  Begin  Delete AAG40001   FROM AAG40001 A1 INNER JOIN AAG40000 A ON A1.aaGLHdrID =A.aaGLHdrID and ltrim(rtrim(SOURCDOC)) = ''   LEFT JOIN (SELECT JRNENTRY,TRXSORCE,SOURCDOC,ACTINDX,CRDTAMNT,DEBITAMT,SEQNUMBR, RCTRXSEQ, HSTYEAR FROM GL30000) GL   ON GL.JRNENTRY=A.JRNENTRY   AND A1.SEQNUMBR=GL.SEQNUMBR  AND GL.TRXSORCE =A.aaGLTRXSource   AND GL.RCTRXSEQ = A.RCTRXSEQ  AND GL.HSTYEAR = A.YEAR1  AND GL.SOURCDOC <> @l_cPROFIT_AND_LOSS   and GL.SOURCDOC <>  @l_cBalSheet   AND A1.ACTINDX = GL.ACTINDX   AND A1.CRDTAMNT  = GL.CRDTAMNT   AND A1.DEBITAMT = GL.DEBITAMT   WHERE A1.aaGLDistID > (SELECT count(JRNENTRY) FROM   (SELECT JRNENTRY,TRXSORCE,SOURCDOC,ACTINDX,CRDTAMNT,DEBITAMT,SEQNUMBR, RCTRXSEQ, HSTYEAR  FROM GL30000) C   WHERE C.JRNENTRY = A.JRNENTRY   AND C.TRXSORCE =A.aaGLTRXSource   AND C.RCTRXSEQ = A.RCTRXSEQ  AND C.HSTYEAR = A.YEAR1  AND C.SOURCDOC <> @l_cPROFIT_AND_LOSS   and C.SOURCDOC <>  @l_cBalSheet)   Delete AAG40002 from AAG40002 A2 where A2.aaGLDistID not in (select A1.aaGLDistID from   AAG40001 A1 where A1.aaGLHdrID=A2.aaGLHdrID)    Delete AAG40003  from AAG40003 A3 where A3.aaGLDistID not in (select A1.aaGLDistID from   AAG40001 A1 where A1.aaGLHdrID=A3.aaGLHdrID)  END   set nocount off END    
GO
GRANT EXECUTE ON  [dbo].[aagGenericGLHistseq] TO [DYNGRP]
GO

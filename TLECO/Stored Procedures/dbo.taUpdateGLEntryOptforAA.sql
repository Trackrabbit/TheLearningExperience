SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taUpdateGLEntryOptforAA]   @aaGLWorkHdrID int,  @JRNENTRY int,  @aaGLWorkDistID int output,  @CURNCYID varchar(15),  @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime ,   @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,  @DECPLACS smallint,   @CopanyID int,  @SqlSessionID int,  @INTERIDg char(5)  as begin   declare @SQNCLINE numeric(19,5),   @ACTINDX int,  @ACCTTYPE smallint,  @FXDORVAR smallint,   @CRDTAMNT numeric(19,5),  @DEBITAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @ORDBTAMT numeric(19,5),   @CorrespondingUnit char(5),   @aaBrowseType smallint,  @ClassID int,  @aaGLWorkAssignID int,  @INTERID Char(5),  @Cnt int,  @Flag smallint,   @FUNLCURR char(15),  @ORMSTRID char(65)   Select  @SQNCLINE = 0,  @ACTINDX = 0,  @ACCTTYPE = 0,  @FXDORVAR = 0,   @CRDTAMNT = 0,  @DEBITAMT = 0,  @ORCRDAMT = 0,  @ORDBTAMT = 0,  @aaBrowseType = 0,  @ClassID = 0,  @aaGLWorkAssignID =0,   @Cnt = 0,  @Flag = 0  select @FUNLCURR = FUNLCURR from MC40000  if  (@FUNLCURR = @CURNCYID) or len(rtrim(ltrim(@CURNCYID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID > 0  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID > 0  and aaGLWorkAssignID > 0  end ;  DELETE FROM AAG10001 WHERE aaGLWorkDistID NOT IN (SELECT DISTINCT  A1.aaGLWorkDistID   FROM AAG10001 A1 INNER JOIN AAG10000  on AAG10000.aaGLWorkHdrID = A1.aaGLWorkHdrID   INNER JOIN GL10001 GL on AAG10000.JRNENTRY = GL.JRNENTRY AND A1.ACTINDX = GL.ACTINDX  AND A1.SQNCLINE = GL.SQNCLINE AND A1.DEBITAMT = GL.DEBITAMT AND A1.CRDTAMNT = GL.CRDTAMNT  AND A1.ORDBTAMT = GL.ORDBTAMT AND A1.ORCRDAMT = GL.ORCRDAMT AND aaGLWorkDistID > 0  WHERE A1.aaGLWorkHdrID = @aaGLWorkHdrID)  AND aaGLWorkHdrID = @aaGLWorkHdrID  DELETE FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID  DELETE FROM AAG10003 WHERE aaGLWorkHdrID = @aaGLWorkHdrID   Select @Cnt = count(*)  from AAG10001 where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID > 0 and SQNCLINE = @SQNCLINE and  ACTINDX = @ACTINDX and  DEBITAMT = @DEBITAMT and CRDTAMNT = @CRDTAMNT and  ORDBTAMT = @ORDBTAMT and ORCRDAMT = @ORCRDAMT   if @Cnt = 0 or @Cnt > 1  Begin   insert into AAG10001  (aaGLWorkHdrID , aaGLWorkDistID,  INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,  aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus, aaWinWasOpen, aaOFFSETAcct, aaDistErrors,  aaChangeDate, aaChangeTime )  SELECT @aaGLWorkHdrID, rank() over (PARTITION BY 1 ORDER BY A.JRNENTRY,A.SQNCLINE) ,A.INTERID ,A.CorrespondingUnit,A.ACTINDX, A.ACCTTYPE,  case when @INTERIDg = A.INTERID  then   isnull(dbo.taGetBrowseType(A.ACTINDX),0)  else 0   end,  @DECPLACS, A.FXDORVAR ,A.DEBITAMT, A.CRDTAMNT, A.ORDBTAMT,A.ORCRDAMT,  B.CURNCYID,   case when A.ACCTTYPE = 2  then 3  else B.CURRNIDX  end,   A.RATETPID,  A.EXGTBLID, @XCHGRATE, A.EXCHDATE, A.TIME1,  A.RTCLCMTD, A.DENXRATE, A.MCTRXSTT, A.SQNCLINE,  isnull(dbo.aagGetMstrID(2,A.ORMSTRID,0),''),isnull(dbo.aagGetMstrID(6,A.ORMSTRID,0),''), '', '', 8, 0, 0, 0,  convert(char(12), getdate(), 102), convert(char(12), getdate(), 108) from GL10001 A , GL10000 B WHERE A.JRNENTRY =  @JRNENTRY and B.JRNENTRY = @JRNENTRY   declare AAGLWORK cursor fast_forward for Select AAG10001.ACTINDX, AAG10001.aaGLWorkDistID,   AAG00200.aaAcctClassID  from AAG10001   INNER Join AAG00200 On AAG10001.ACTINDX = AAG00200.ACTINDX  Where aaGLWorkHdrID = @aaGLWorkHdrID and SQNCLINE > 0   order by aaGLWorkHdrID , SQNCLINE  open AAGLWORK  fetch next from AAGLWORK into  @ACTINDX, @aaGLWorkDistID, @ClassID  while @@fetch_status = 0  begin   exec taGLAssignUpdate @aaGLWorkHdrID, @aaGLWorkDistID,@aaGLWorkAssignID, @CopanyID,@ClassID, @SqlSessionID,@Flag  fetch next from AAGLWORK into  @ACTINDX, @aaGLWorkDistID, @ClassID   end  set @ClassID = 0  set @aaBrowseType = 0  close AAGLWORK  deallocate AAGLWORK    end end    
GO
GRANT EXECUTE ON  [dbo].[taUpdateGLEntryOptforAA] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE Procedure [dbo].[SVC_Contract_Renew]  (@CONSTS smallint,  @CONTNBR char(11),  @FromMoveRoutine tinyint,  @FromHistory tinyint,    @CancelLineOption smallint,   @UserID char(11),  @UserDate datetime,  @NewCONTNBR char(11) output,  @Include_Meter_Settings tinyint,  @ExpireLineOption smallint   ) AS declare @TransferType smallint declare @RenewType smallint declare @ContractStartDate Datetime declare @ContractEndDate Datetime declare @ContractLineEndDate Datetime declare @BillStartDate Datetime declare @BillEndDate Datetime declare @Customer char(15) declare @old_Customer char(15) declare @Address char(15) declare @MinDate datetime, @MinDateD datetime, @MinDateT datetime declare @UseSameNumber tinyint declare @NEWNOTEINDEX numeric(19,5) declare @NOTEINDEX numeric(19,5) declare @Line numeric (19,5) declare @LineSeq int declare @DistType smallint declare @Schedule char(9) declare @OPTTYPE char(11) declare @Version smallint declare @LineStatus char(1) declare @salesid char(15) declare @taxid char(15) declare @tax1 char(25) declare @tax2 char(25) declare @country char(21) declare @PONumber char(21) declare @NewPO tinyint declare @BillToAddress char(15),@tempBillToAddress char(15) declare @BillToCustomer char(15),@tempBillToCustomer char(15) declare @EquipID int, @Serial char(21), @Config char(21) declare @NewPriceBook char(11), @PriceBook char(11), @DefPriceBook char(11), @LinePriceBook char(11) declare @ExchTableID   char(15),  @CurrencyID    char(15),  @I_nExchangeRate  numeric(15,7),   @EXPNDATE datetime,  @ExchangeDate datetime,   @ExchangeTime datetime declare @ORIGTOTAL numeric(19,2), @TOTAL numeric(19,2), @OrigDiscount numeric(19,2), @Discount numeric(19,2) declare @MaxIncPct numeric (7,2), @DefMaxIncPct numeric(7,2) declare @I_sRateCalcMethod  smallint ,   @I_sViewMode   smallint,   @I_nDenomExchangeRate numeric(15,7),   @I_sMCTrxState   smallint,   @I_sDecimalPlaces  smallint,   @O_iErrorState  int declare @TransferDate datetime declare @SourceUser char(11) declare @CTRContact char(31) declare @RecordType char(10), @AuditDesc varchar(100) declare @CustomerChanged  tinyint declare @bskip int declare @contractMovedStatus smallint declare @CNTPRCOVR tinyint declare @StatusOfPrice char(1)  exec smGetMinDate @MinDate output EXEC SVC_util_split_datetime @MinDate, @MinDateD output, @MinDateT output set @UserDate = isnull(@UserDate,@MinDate)   select @RenewType=1, @StatusOfPrice = ''  SELECT @DefPriceBook = RENPRCSCHD, @DefMaxIncPct = MXINCPCT FROM SVC00998  IF @FromMoveRoutine = 1 BEGIN  SELECT @RenewType=RENCNTTYP,@ContractStartDate=STTDOCDT,@BillStartDate =STTDOCDT,  @Customer =CUSTNMBR, @Address= ADRSCODE  from SVC00670 WITH (NOLOCK)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR  SET @TransferType = 2   SET @SourceUser = @UserID END  ELSE BEGIN  IF @FromHistory = 1  select @RenewType=RENCNTTYP, @ContractStartDate=DATEADD(dd,1,ENDDATE),   @BillStartDate = DATEADD(dd,1,BILEND), @Customer =CUSTNMBR, @Address= ADRSCODE  from SVC30600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR  ELSE  select @RenewType=RENCNTTYP, @ContractStartDate=DATEADD(dd,1,ENDDATE),   @BillStartDate = DATEADD(dd,1,BILEND), @Customer =CUSTNMBR, @Address= ADRSCODE  from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   SET @TransferType = 0   SET @SourceUser = ''  IF @RenewType = 0 SET @RenewType = 2   END  IF (@TransferType = 0 AND @FromMoveRoutine = 1) SELECT @TransferType = 2 IF @FromMoveRoutine = 1  SET @TransferDate = CONVERT(varchar(10),@UserDate,102) + ' 00:00:00' ELSE  SET @TransferDate = @MinDate  if @FromHistory = 1  BEGIN  select @Version = Max(SVC_Contract_Version) from SVC30600 WITH (NOLOCK)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR  if @Version is null or @Version = 0 select @Version = 1  select @BillEndDate =  CASE   WHEN BILPRD = 1 THEN DATEADD(dd,BILLNGTH,@BillStartDate) - 1  WHEN BILPRD = 2 THEN DATEADD(mm,BILLNGTH ,@BillStartDate) -1  WHEN BILPRD = 3 THEN DATEADD(mm,(BILLNGTH * 12), @BillStartDate) -1  END,  @ContractEndDate =  CASE   WHEN Contract_Period = 1 THEN DATEADD(dd,Contract_Length,@ContractStartDate) -1  WHEN Contract_Period = 2 THEN DATEADD(mm,Contract_Length ,@ContractStartDate)-1  WHEN Contract_Period = 3 THEN DATEADD(mm,(Contract_Length * 12),@ContractStartDate)-1  END,  @old_Customer = CUSTNMBR ,@taxid = TAXSCHID, @tax1 = TAXEXMT1, @tax2 = TAXEXMT2, @salesid = SLPRSNID,  @country = COUNTRY, @NewPO = New_PO_Required, @PONumber = PORDNMBR,@UseSameNumber = SVC_Use_Same_Number,  @BillToCustomer = Bill_To_Customer, @BillToAddress = SVC_Bill_To_Address_Code,  @NewPriceBook = RENPRCSCHD, @PriceBook = PRICSHED, @MaxIncPct = MXINCPCT,  @ExchTableID = EXGTBLID, @CurrencyID = CURNCYID,  @I_sRateCalcMethod = RATECALC,@I_sDecimalPlaces = DECPLACS,  @I_nDenomExchangeRate = DENXRATE, @I_sMCTrxState = MCTRXSTT  FROM SVC30600 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version  if @UseSameNumber = 1 and exists(select * from SVC00600 where CONSTS = @RenewType and CONTNBR = @CONTNBR)  goto baderror   if @UseSameNumber = 1   select @NewCONTNBR = @CONTNBR  else  exec SVC_New_Contract_Number  @NewCONTNBR  OUTPUT   select @CustomerChanged = 0  if @Customer <> @old_Customer  begin  select  @taxid = TAXSCHID, @tax1 = TAXEXMT1, @tax2 = TAXEXMT2, @salesid = SLPRSNID, @country = COUNTRY, @CustomerChanged = 1  from RM00101 where CUSTNMBR = @Customer   select @tempBillToCustomer = Bill_To_Customer, @tempBillToAddress = RM00101.PRBTADCD   from SVC00950 INNER JOIN RM00101 ON (SVC00950.Bill_To_Customer = RM00101.CUSTNMBR)   WHERE SVC00950.CUSTNMBR = @Customer AND SVC00950.ADRSCODE = @Address   if @tempBillToCustomer > '' select @BillToCustomer = @tempBillToCustomer  if @tempBillToAddress > '' select @BillToAddress = @tempBillToAddress  end  if @NewPO = 1 select @PONumber = '.'  if @NewPriceBook ='' or @NewPriceBook is null   begin  if @DefPriceBook <> '' and not (@DefPriceBook is null)  select @NewPriceBook = @DefPriceBook  else  select @NewPriceBook = @PriceBook   end  if @MaxIncPct is null  select @MaxIncPct = 0.00  select @NOTEINDEX = NOTEINDX from SVC30600 WITH (NOLOCK) where @CONSTS = CONSTS and CONTNBR = @CONTNBR   exec SVC_Copy_Note @NOTEINDEX ,@NEWNOTEINDEX output  if @ExchTableID > ''  Begin  if exists(select CURNCYID, EXGTBLID, EXCHDATE, TIME1 from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and (EXCHDATE <= @ContractStartDate and (EXPNDATE >= @ContractStartDate or EXPNDATE = @MinDate) ))  select @ExchangeDate = EXCHDATE, @ExchangeTime = TIME1, @I_nExchangeRate = XCHGRATE from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and  (EXCHDATE <= @ContractStartDate and (EXPNDATE >= @ContractStartDate or EXPNDATE = @MinDate) )  else  begin  select @EXPNDATE = max(EXPNDATE) from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and EXPNDATE < @ContractStartDate  select @ExchangeDate = EXCHDATE, @ExchangeTime = TIME1, @I_nExchangeRate = XCHGRATE from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and EXPNDATE = @EXPNDATE   end   End  else  select @ExchTableID = isnull(@ExchTableID,''), @CurrencyID =  isnull(@CurrencyID,''), @ExchangeDate = @MinDate,   @ExchangeTime = @MinDate, @I_nExchangeRate = 0   if @FromMoveRoutine = 0   select @CTRContact = isnull(Contract_Renewal_Contact,'') from SVC30600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version   if @CTRContact = '' or @CTRContact is null  select @CTRContact = isnull(CONTACT,'') from SVC30600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version   INSERT INTO SVC00600 with (ROWLOCK) select  @RenewType, @NewCONTNBR, @TransferType, @TransferDate, isnull(@taxid,''), priorityLevel,  @Address, @NEWNOTEINDEX, TIMEZONE, CONTPRC, RENCNTTYP, RENPRCSCHD, PCTCRYFWD, @MinDate, @MinDate,  @MaxIncPct, 0,0, DSCPCTAM, COMDLRAM, isnull(@country,''), PRCSTAT, @PONumber, DSCRIPTN, PARTPCT,  LABPCT, MISCPCT, PMMSCPCT, PMPRTPCT, PMLABPCT, VENDORID, RETNAGAM, 0, isnull(@salesid,''),  COMMCODE, COMPRCNT, @BillStartDate,@BillEndDate, BILLNGTH, BILPRD, 0, @MinDate, 0,  @MinDate, NBRCAL, 0,0, @CTRContact, CURNCYID, @MinDate, CNTTYPE, @NewPriceBook, @Customer,  @UserDate, MINBIL, MAXBIL, MAXBILL, AUTOREN, MSTCNTRCT, SRVTYPE, BILFRRET, 0, PREPAID,  BILONDY, BILCYC, UOFM, 0, @MinDateD + CONVERT(varchar(10), getdate(), 108),   @ContractStartDate,@ContractEndDate,  CNTCOVPD_1, CNTCOVPD_2, CNTCOVPD_3,  CNTCOVPD_4, CNTCOVPD_5, CNTCOVPD_6, CNTCOVPD_7, Contract_Coverage_Period_1, Contract_Coverage_Period_2,  Contract_Coverage_Period_3, Contract_Coverage_Period_4, Contract_Coverage_Period_5, Contract_Coverage_Period_6,  Contract_Coverage_Period_7, USECVPD_1, USECVPD_2, USECVPD_3, USECVPD_4, USECVPD_5, USECVPD_6, USECVPD_7,  Contract_Length, Contract_Period, 0, Liabiltiy_Reduction, 0, 0,  0, 0, Quote_Status, QUOEXPDA, Credit_Hold, isnull(@tax1,''), isnull(@tax2,''), New_PO_Required,  Contract_Renewal_Contact, @CONTNBR, @CONSTS, Contract_Response_Time, 0,  @MinDate, @MinDate, 0, 0, @UserID, @SourceUser,   SVC_Contract_Signed, SVC_Liability_Type, RETTYPE, Location_Segment, @BillToCustomer, SVC_Invoice_Detail,  USERDEF1, USERDEF2, USRDEF03, USRDEF04, USRDEF05, @BillToAddress, 0, SVC_Paid_Contract,  0,0,0,  CURRNIDX,RATETPID,EXGTBLID,@I_nExchangeRate, @ExchangeDate,DECPLACS,@ExchangeTime,RATECALC, VIEWMODE, ISMCTRX,  EXPNDATE,DENXRATE,MCTRXSTT,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  SmoothInvoiceCalc,SmoothRevenueCalc,@UseSameNumber,'',0,0, SVC_Evergreen_Contract, SVC_Evergreen_RenewLimit, SVC_Evergreen_Renewals,'','',  2,9, svcBillingFrequency, svcFrequencyQty  FROM SVC30600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version  if @@error <> 0 goto baderror   declare cursor_601 cursor for select LNSEQNBR, PRICSHED from SVC30601 WITH (NOLOCK)   where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version  open cursor_601  FETCH NEXT FROM cursor_601 INTO @Line, @LinePriceBook  while @@FETCH_STATUS = 0  BEGIN  select @LineStatus = Contract_Line_Status,@EquipID=EQUIPID,@Serial=SERLNMBR,@Config=CONFGREF,   @contractMovedStatus = Contract_Transfer_Status, @ORIGTOTAL = OrigOriginalTotal from SVC30601  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version   if @Customer <> @old_Customer  select @EquipID = 0, @Serial = '',@Config = ''  select @bskip = 0 , @ContractLineEndDate = @ContractEndDate  if (@LineStatus ='C' and @CancelLineOption = 1)  set @bskip = 1  if (@LineStatus ='E' and @ExpireLineOption = 1)  set @bskip = 1  if @LineStatus = 'M' or @LineStatus = 'I'  set @bskip = 1  if @bskip = 0   begin   if @LineStatus = 'C' and @CancelLineOption = 3    select @LineStatus = 'C', @ContractLineEndDate = @ContractStartDate, @StatusOfPrice = '1'  else if @LineStatus = 'E' and @ExpireLineOption = 3    set @LineStatus = 'E'  else  begin  if @Customer <> @old_Customer  set @LineStatus = 'N'  else  set @LineStatus = 'R'  end   if @contractMovedStatus = 4 and @ORIGTOTAL > 0   select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = OrigOriginalTotal , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = 1  from SVC30601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  else if @contractMovedStatus = 4 and @ORIGTOTAL = 0   select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = ORIGTOTAL , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = 0  from SVC30601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  else if @contractMovedStatus = 4 and @ORIGTOTAL = -1   select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = ORIGTOTAL , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = 1  from SVC30601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  else  select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = ORIGTOTAL , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = CNTPRCOVR   from SVC30601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version   if @LineStatus = 'C' and @CancelLineOption = 3    select @ORIGTOTAL = 0   exec SVC_Copy_Note @NOTEINDEX ,@NEWNOTEINDEX output  exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @ORIGTOTAL,@TOTAL OUTPUT, @O_iErrorState OUTPUT  exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @OrigDiscount,@Discount OUTPUT, @O_iErrorState OUTPUT   if @FromMoveRoutine = 1  set @LinePriceBook = @NewPriceBook   INSERT INTO SVC00601 with (ROWLOCK) select  @RenewType, @NewCONTNBR, LNSEQNBR, @TransferType, @TransferDate, @CNTPRCOVR,   @NEWNOTEINDEX, ADRSCODE, QUANTITY, ITEMNMBR, @Config, @EquipID, @Serial, @MinDate,@MinDate,  BLKTIM, 0, DSCPCTAM, COMDLRAM, COUNTRY, @StatusOfPrice, @PONumber, DSCRIPTN, PARTPCT, LABPCT,  @MaxIncPct, PMMSCPCT, PMPRTPCT, PMLABPCT, VENDORID, RETNAGAM, 0, isnull(@salesid,''), COMMCODE,  COMPRCNT,  @BillStartDate, @BillEndDate, BILLNGTH, BILPRD,@MinDate,0, @MinDate,  NBRCAL, @TOTAL, 0, 0, @CTRContact, CURNCYID, NXTBLDTE, CNTTYPE, @LinePriceBook, @Customer,  @UserDate, MINBIL, MAXBIL, MAXBILL, AUTOREN, priorityLevel, MSTCNTRCT, SRVTYPE, BILFRRET,  0, PREPAID, BILONDY, BILCYC, UOFM, 0, @MinDateD + CONVERT(varchar(10), getdate(), 108),   @ContractStartDate,@ContractLineEndDate, CNTCOVPD_1,  CNTCOVPD_2, CNTCOVPD_3, CNTCOVPD_4, CNTCOVPD_5, CNTCOVPD_6, CNTCOVPD_7, Contract_Coverage_Period_1,  Contract_Coverage_Period_2, Contract_Coverage_Period_3, Contract_Coverage_Period_4,  Contract_Coverage_Period_5, Contract_Coverage_Period_6, Contract_Coverage_Period_7,  USECVPD_1, USECVPD_2, USECVPD_3, USECVPD_4, USECVPD_5, USECVPD_6, USECVPD_7,   case when @CustomerChanged = 1 then isnull(@taxid,'') else TAXSCHID end,   CNFGLVL, CNFGSEQ, Contract_Length, Contract_Period, 0, Amount_To_Invoice, 0,  0, 0, 0, New_Invoice_Amount, @LineStatus,  Contract_Renewal_Contact, Contract_Response_Time,0, @MinDate,  @MinDate, 0, isnull(@tax1,''), isnull(@tax2,''), Total_Unit, UNITCOST,  Unit_Cost_Total, SVC_Liability_Type, @MinDate, RETTYPE, SVC_Monthly_Price,  Location_Segment, @BillToCustomer, case when @CustomerChanged = 1 then @BillToAddress else SVC_Bill_To_Address_Code end, @Discount, SVC_Invoiced_Discount,  0,0,0, SVC_PM_Date, SVC_PM_Day,CURRNIDX,  RATETPID, EXGTBLID, @I_nExchangeRate, @ExchangeDate,DECPLACS,@ExchangeTime, RATECALC, VIEWMODE, ISMCTRX, EXPNDATE,  DENXRATE, MCTRXSTT, 0, 0, 0, 0, 0,  @ORIGTOTAL, 0, ORIGMINBIL, ORIGMAXBIL, Originating_Max_Billable, 0,  0, Orig_Amount_To_Invoice, 0, 0,  0, Originating_Total_Unit, ORUNTCST, ORDDLRAT, OrigDiscountReceived,  0, 0, ORIGUNITCOSTTOTAL, ORIGMONTHPRICE, ORIGINVOICEDDISC,  OrigNewInvoiceAmount,0,0,'',0,0,0,0, 0, ITEMDESC  from SVC30601 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  if exists(select 1 from SVC30652 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version)  INSERT INTO SVC00652 with (ROWLOCK)  select  @RenewType, @NewCONTNBR, LNSEQNBR,OPTTYPE,STRTDATE,ENDDATE,UNITPRCE,UNITCOST , ORUNTCST,ORUNTPRC  from SVC30652 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  if @Include_Meter_Settings = 1 and exists(select 1 from SVC30607 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version)  INSERT INTO SVC00607 with (ROWLOCK) select  @RenewType, @NewCONTNBR, @Line, Meter_Bases_1, Meter_Bases_2,Meter_Bases_3,  Meter_Bases_4, Meter_Bases_5, Meter_Overages_1, Meter_Overages_2, Meter_Overages_3, Meter_Overages_4, Meter_Overages_5,   Meter_Overages_6, Meter_Overages_7,Meter_Overages_8, Meter_Overages_9,Meter_Overages_10, Meter_Overages_11,   Meter_Overages_12, Meter_Overages_13, Meter_Overages_14, Meter_Overages_15, Meter_Overages_16, Meter_Overages_17,  Meter_Overages_18, Meter_Overages_19, Meter_Overages_20, Meter_Charges_1, Meter_Charges_2, Meter_Charges_3, Meter_Charges_4,  Meter_Charges_5, Meter_Charges_6,Meter_Charges_7, Meter_Charges_8, Meter_Charges_9,Meter_Charges_10, Meter_Charges_11,   Meter_Charges_12, Meter_Charges_13, Meter_Charges_14, Meter_Charges_15, Meter_Charges_16, Meter_Charges_17, Meter_Charges_18,  Meter_Charges_19, Meter_Charges_20,  Meter_Expires_1,Meter_Expires_2,Meter_Expires_3,Meter_Expires_4,Meter_Expires_5,  0,0,0,0,0,0,0,0,0,0,Meter_Startings_1, Meter_Startings_2, Meter_Startings_3,   Meter_Startings_4, Meter_Startings_5,0.0,0.0,0.0,@MinDate,0.0,0.0,0.0,Originating_Meter_Charge_1,  Originating_Meter_Charge_2,Originating_Meter_Charge_3,Originating_Meter_Charge_4,Originating_Meter_Charge_5,  Originating_Meter_Charge_6,Originating_Meter_Charge_7,Originating_Meter_Charge_8,Originating_Meter_Charge_9,  Originating_Meter_Charge_10,Originating_Meter_Charge_11,Originating_Meter_Charge_12,Originating_Meter_Charge_13,  Originating_Meter_Charge_14,Originating_Meter_Charge_15,Originating_Meter_Charge_16,Originating_Meter_Charge_17,  Originating_Meter_Charge_18,Originating_Meter_Charge_19,Originating_Meter_Charge_20  from SVC30607 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  if exists(select 1 from SVC30610 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version)  INSERT INTO SVC00610 with (ROWLOCK)  select @RenewType, @NewCONTNBR, LNSEQNBR,EQUIPID, ACTIVE, SCHEDID  from SVC30610 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version   end  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_601 INTO @Line, @LinePriceBook  END deallocate cursor_601  declare cursor_606 cursor for select LNSEQNBR from SVC30606 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version open cursor_606  FETCH NEXT FROM cursor_606 INTO @Line  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC00606 with (ROWLOCK)  select  @RenewType, @NewCONTNBR, LNSEQNBR,ITEMNMBR  from SVC30606 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_606 INTO @Line  END deallocate cursor_606   declare cursor_608 cursor for select LNSEQNBR from SVC30608 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version  open cursor_608  FETCH NEXT FROM cursor_608 INTO @Line  while @@FETCH_STATUS = 0  BEGIN  select @NOTEINDEX = NOTEINDX from SVC00608 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line    exec SVC_Copy_Note @NOTEINDEX ,@NEWNOTEINDEX output   INSERT INTO SVC00608 with (ROWLOCK) select  @RenewType, @NewCONTNBR, LNSEQNBR, @TransferType, @TransferDate,case when @CustomerChanged = 1 then isnull(@taxid,'') else TAXSCHID end,priorityLevel,  ADRSCODE, @NEWNOTEINDEX, TIMEZONE, CONTPRC, RENCNTTYP, RENPRCSCHD, PCTCRYFWD, @MinDate, @MinDate,  MXINCPCT, 0,0, DSCPCTAM, COMDLRAM, isnull(@country,''), PRCSTAT,@PONumber, DSCRIPTN, PARTPCT,  LABPCT, MISCPCT, PMMSCPCT, PMPRTPCT, PMLABPCT, VENDORID, RETNAGAM, 0, isnull(@salesid,''),  COMMCODE, COMPRCNT, @BillStartDate,@BillEndDate, BILLNGTH, BILPRD, TOTAL, @MinDate, 0,  @MinDate, NBRCAL, 0,0, @CTRContact, CURNCYID, @MinDate, CNTTYPE, @NewPriceBook, @Customer,  @UserDate, MINBIL, MAXBIL, MAXBILL, AUTOREN, MSTCNTRCT, SRVTYPE, BILFRRET, 0, PREPAID,  BILONDY, BILCYC, UOFM, 0, @MinDateD + CONVERT(varchar(10), getdate(), 108),   @ContractStartDate,@ContractEndDate,  CNTCOVPD_1, CNTCOVPD_2, CNTCOVPD_3,  CNTCOVPD_4, CNTCOVPD_5, CNTCOVPD_6, CNTCOVPD_7, Contract_Coverage_Period_1, Contract_Coverage_Period_2,  Contract_Coverage_Period_3, Contract_Coverage_Period_4, Contract_Coverage_Period_5, Contract_Coverage_Period_6,  Contract_Coverage_Period_7, USECVPD_1, USECVPD_2, USECVPD_3, USECVPD_4, USECVPD_5, USECVPD_6, USECVPD_7,  Contract_Length, Contract_Period, 0, 0, 0, 0,  0, 0, Quote_Status, QUOEXPDA, Credit_Hold, isnull(@tax1,''), isnull(@tax2,''), New_PO_Required,  Contract_Renewal_Contact, @CONTNBR, @CONSTS, Contract_Response_Time, 0,  @MinDate, @MinDate, 0, 0, @UserID, '',   @MinDate, SVC_Liability_Type, RETTYPE, Location_Segment, @BillToCustomer,   Cover_All, case when @CancelLineOption = 3 then canceled  else 0 end,  CURRNIDX, RATETPID,EXGTBLID,XCHGRATE, EXCHDATE,DECPLACS, TIME1,RATECALC, VIEWMODE,  ISMCTRX, EXPNDATE,DENXRATE,MCTRXSTT, 0,0,0,0,0,  0,0,0,0,0,0, 0,0,0, 0,0,0, case when @CustomerChanged = 1 then @BillToAddress else SVC_Bill_To_Address_Code end,0  from SVC30608 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_608 INTO @Line  END  deallocate cursor_608  declare cursor_655 cursor for select LNSEQNBR,OPTTYPE from SVC30655 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version open cursor_655  FETCH NEXT FROM cursor_655 INTO @Line,@OPTTYPE  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC00655 with (ROWLOCK)  select  @RenewType, @NewCONTNBR, LNSEQNBR,OPTTYPE,STRTDATE,ENDDATE,UNITPRCE,UNITCOST , ORUNTCST,ORUNTPRC  from SVC30655 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and OPTTYPE = @OPTTYPE and SVC_Contract_Version = @Version  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_655 INTO @Line,@OPTTYPE  END deallocate cursor_655  INSERT INTO SVC00609 with (ROWLOCK)  select @RenewType, @NewCONTNBR, LNSEQNBR, SEQNUMBR, SVC_Distribution_Type, DistRef, ACTINDX  from SVC30609 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and SVC_Contract_Version = @Version  if @@error <> 0 goto baderror  END   else  BEGIN   select @BillEndDate =  CASE   WHEN BILPRD = 1 THEN DATEADD(dd,BILLNGTH,@ContractStartDate)-1  WHEN BILPRD = 2 THEN DATEADD(mm,BILLNGTH ,@ContractStartDate)-1  WHEN BILPRD = 3 THEN DATEADD(mm,(BILLNGTH * 12), @ContractStartDate)-1  END,  @ContractEndDate =  CASE   WHEN Contract_Period = 1 THEN DATEADD(dd,Contract_Length,@ContractStartDate)-1  WHEN Contract_Period = 2 THEN DATEADD(mm,Contract_Length ,@ContractStartDate)-1  WHEN Contract_Period = 3 THEN DATEADD(mm,(Contract_Length * 12),@ContractStartDate)-1  END,  @old_Customer = CUSTNMBR ,@taxid = TAXSCHID, @tax1 = TAXEXMT1, @tax2 = TAXEXMT2, @salesid = SLPRSNID,  @country = COUNTRY, @NewPO = New_PO_Required, @PONumber = PORDNMBR,@UseSameNumber = SVC_Use_Same_Number,  @BillToCustomer = Bill_To_Customer, @BillToAddress = SVC_Bill_To_Address_Code,   @NewPriceBook = RENPRCSCHD, @PriceBook = PRICSHED, @ExchTableID = EXGTBLID, @CurrencyID = CURNCYID, @MaxIncPct = MXINCPCT,  @I_sRateCalcMethod = RATECALC,@I_sDecimalPlaces = DECPLACS,  @I_nDenomExchangeRate = DENXRATE, @I_sMCTrxState = MCTRXSTT  from SVC00600 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR  if @UseSameNumber = 1 and exists(select * from SVC00600 where CONSTS = @RenewType and CONTNBR = @CONTNBR)  goto baderror   if @UseSameNumber = 1   select @NewCONTNBR = @CONTNBR  else  exec SVC_New_Contract_Number  @NewCONTNBR  OUTPUT   select @BillStartDate = @ContractStartDate,  @CustomerChanged = 0  if @Customer <> @old_Customer  begin  select  @taxid = TAXSCHID, @tax1 = TAXEXMT1, @tax2 = TAXEXMT2, @salesid = SLPRSNID, @country = COUNTRY,  @CustomerChanged = 1  from RM00101 where CUSTNMBR = @Customer  select @tempBillToCustomer = Bill_To_Customer,  @tempBillToAddress = RM00101.PRBTADCD   from SVC00950 INNER JOIN   RM00101 ON (SVC00950.Bill_To_Customer = RM00101.CUSTNMBR)   WHERE SVC00950.CUSTNMBR = @Customer AND SVC00950.ADRSCODE = @Address  if @tempBillToCustomer > '' select @BillToCustomer = @tempBillToCustomer  if @tempBillToAddress > '' select @BillToAddress = @tempBillToAddress  end  if @NewPO = 1 select @PONumber = '.'  if @NewPriceBook ='' or @NewPriceBook is null   begin  if @DefPriceBook <> '' and not (@DefPriceBook is null)  select @NewPriceBook = @DefPriceBook  else  select @NewPriceBook = @PriceBook  end  if @MaxIncPct is null  select @MaxIncPct = 0.00  select @NOTEINDEX = NOTEINDX from SVC00600 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR     exec SVC_Copy_Note @NOTEINDEX ,@NEWNOTEINDEX output  if @ExchTableID > ''  Begin  if exists(select CURNCYID, EXGTBLID, EXCHDATE, TIME1 from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and (EXCHDATE <= @ContractStartDate and (EXPNDATE >= @ContractStartDate or EXPNDATE = @MinDate) ))  select @ExchangeDate = EXCHDATE, @ExchangeTime = TIME1, @I_nExchangeRate = XCHGRATE from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and  (EXCHDATE <= @ContractStartDate and (EXPNDATE >= @ContractStartDate or EXPNDATE = @MinDate) )  else  begin  select @EXPNDATE = max(EXPNDATE) from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and EXPNDATE < @ContractStartDate  select @ExchangeDate = EXCHDATE, @ExchangeTime = TIME1, @I_nExchangeRate = XCHGRATE from  DYNAMICS..MC00100 where   EXGTBLID =@ExchTableID and CURNCYID =@CurrencyID and EXPNDATE = @EXPNDATE   end  End  else  select @ExchTableID = isnull(@ExchTableID,''), @CurrencyID =  isnull(@CurrencyID,''), @ExchangeDate = @MinDate,   @ExchangeTime = @MinDate, @I_nExchangeRate = 0   if @FromMoveRoutine = 0   select @CTRContact = isnull(Contract_Renewal_Contact,'') from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   if @CTRContact = '' or @CTRContact is null  select @CTRContact = isnull(CONTACT,'') from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   INSERT INTO SVC00600 with (ROWLOCK) select  @RenewType, @NewCONTNBR, @TransferType, @TransferDate, isnull(@taxid,''), priorityLevel,  @Address, @NEWNOTEINDEX, TIMEZONE, CONTPRC, RENCNTTYP, RENPRCSCHD, PCTCRYFWD, @MinDate, @MinDate,  @MaxIncPct, 0,0, DSCPCTAM, COMDLRAM, isnull(@country,''), PRCSTAT, @PONumber, DSCRIPTN, PARTPCT,  LABPCT, MISCPCT, PMMSCPCT, PMPRTPCT, PMLABPCT, VENDORID, RETNAGAM, 0, isnull(@salesid,''),  COMMCODE, COMPRCNT, @BillStartDate,@BillEndDate, BILLNGTH, BILPRD, 0, @MinDate, 0,  @MinDate, NBRCAL, 0,0, @CTRContact, CURNCYID, @MinDate, CNTTYPE, @NewPriceBook, @Customer,  @UserDate, MINBIL, MAXBIL, MAXBILL, AUTOREN, MSTCNTRCT, SRVTYPE, BILFRRET, 0, PREPAID,  BILONDY, BILCYC, UOFM, 0, @MinDateD + CONVERT(varchar(10), getdate(), 108),   @ContractStartDate, @ContractEndDate,  CNTCOVPD_1, CNTCOVPD_2, CNTCOVPD_3,CNTCOVPD_4, CNTCOVPD_5, CNTCOVPD_6, CNTCOVPD_7,  Contract_Coverage_Period_1, Contract_Coverage_Period_2,Contract_Coverage_Period_3, Contract_Coverage_Period_4,  Contract_Coverage_Period_5, Contract_Coverage_Period_6, Contract_Coverage_Period_7,  USECVPD_1, USECVPD_2, USECVPD_3, USECVPD_4, USECVPD_5, USECVPD_6, USECVPD_7,  Contract_Length, Contract_Period, 0, Liabiltiy_Reduction, 0, 0,  0, 0, Quote_Status, QUOEXPDA, Credit_Hold, isnull(@tax1,''), isnull(@tax2,''), New_PO_Required,  Contract_Renewal_Contact, @CONTNBR, @CONSTS, Contract_Response_Time, 0,  @MinDate, @MinDate, 0, 0, @UserID, @SourceUser,   @MinDate, SVC_Liability_Type, RETTYPE, Location_Segment, @BillToCustomer, SVC_Invoice_Detail,  USERDEF1, USERDEF2, USRDEF03, USRDEF04, USRDEF05, @BillToAddress, 0, 0,  0,0,0,  CURRNIDX,RATETPID,EXGTBLID,@I_nExchangeRate, @ExchangeDate,DECPLACS,@ExchangeTime,RATECALC, VIEWMODE, ISMCTRX,  EXPNDATE,DENXRATE,MCTRXSTT,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  SmoothInvoiceCalc,SmoothRevenueCalc,@UseSameNumber,'',0,0, SVC_Evergreen_Contract, SVC_Evergreen_RenewLimit,  SVC_Evergreen_Renewals,'','',2,9,svcBillingFrequency, svcFrequencyQty  FROM SVC00600 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR   if @@error <> 0 goto baderror   declare cursor_601 cursor for select LNSEQNBR, PRICSHED from SVC00601 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR  open cursor_601  FETCH NEXT FROM cursor_601 INTO @Line, @LinePriceBook  while @@FETCH_STATUS = 0  BEGIN  select @LineStatus = Contract_Line_Status,@EquipID=EQUIPID,@Serial=SERLNMBR,@Config=CONFGREF,   @contractMovedStatus = Contract_Transfer_Status, @ORIGTOTAL = OrigOriginalTotal  from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  select  @bskip = 0 , @ContractLineEndDate = @ContractEndDate  if (@LineStatus ='C' and @CancelLineOption = 1)  set @bskip = 1  if (@LineStatus ='E' and @ExpireLineOption = 1)  set @bskip = 1  if @LineStatus = 'M' or @LineStatus = 'I'  set @bskip = 1  if @bskip = 0   begin  if @Customer <> @old_Customer  select @EquipID = 0, @Serial = '',@Config = ''  if @LineStatus ='C' and @CancelLineOption = 3  select @LineStatus = 'C',@ContractLineEndDate = @ContractStartDate, @StatusOfPrice = '1'  else if @LineStatus = 'E' and @ExpireLineOption = 3    set @LineStatus = 'E'  else  begin  if @Customer <> @old_Customer  select @LineStatus = 'N'  else  select @LineStatus = 'R'  end   if @contractMovedStatus = 4 and @ORIGTOTAL > 0   select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = OrigOriginalTotal , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = 1  from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   else if @contractMovedStatus = 4 and @ORIGTOTAL = 0   select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = ORIGTOTAL , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = 0  from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   else if @contractMovedStatus = 4 and @ORIGTOTAL = -1   select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = ORIGTOTAL , @OrigDiscount = ORDDLRAT, @CNTPRCOVR = 1  from SVC30601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and SVC_Contract_Version = @Version  else  select @NOTEINDEX = NOTEINDX, @ORIGTOTAL = ORIGTOTAL, @OrigDiscount = ORDDLRAT, @CNTPRCOVR = CNTPRCOVR   from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   if @LineStatus = 'C' and @CancelLineOption = 3    select @ORIGTOTAL = 0   exec SVC_Copy_Note @NOTEINDEX ,@NEWNOTEINDEX output   exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @ORIGTOTAL,@TOTAL OUTPUT, @O_iErrorState OUTPUT  exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @OrigDiscount,@Discount OUTPUT, @O_iErrorState OUTPUT   if @FromMoveRoutine = 1  set @LinePriceBook = @NewPriceBook   INSERT INTO SVC00601 with (ROWLOCK) select  @RenewType, @NewCONTNBR, LNSEQNBR, @TransferType, @TransferDate, @CNTPRCOVR,   @NEWNOTEINDEX, ADRSCODE, QUANTITY, ITEMNMBR, @Config, @EquipID, @Serial, @MinDate,@MinDate,  BLKTIM, 0, DSCPCTAM, COMDLRAM, COUNTRY, @StatusOfPrice, @PONumber, DSCRIPTN, PARTPCT, LABPCT,  @MaxIncPct, PMMSCPCT, PMPRTPCT, PMLABPCT, VENDORID, RETNAGAM, 0, isnull(@salesid,''), COMMCODE,  COMPRCNT,  @BillStartDate, @BillEndDate, BILLNGTH, BILPRD,@MinDate,0, @MinDate,  NBRCAL, @TOTAL, 0, 0, @CTRContact, CURNCYID, NXTBLDTE, CNTTYPE, @LinePriceBook, @Customer,  @UserDate, MINBIL, MAXBIL, MAXBILL, AUTOREN, priorityLevel, MSTCNTRCT, SRVTYPE, BILFRRET,  0, PREPAID, BILONDY, BILCYC, UOFM, 0, @MinDateD + CONVERT(varchar(10), getdate(), 108),   @ContractStartDate, @ContractLineEndDate, CNTCOVPD_1,  CNTCOVPD_2, CNTCOVPD_3, CNTCOVPD_4, CNTCOVPD_5, CNTCOVPD_6, CNTCOVPD_7, Contract_Coverage_Period_1,  Contract_Coverage_Period_2, Contract_Coverage_Period_3, Contract_Coverage_Period_4,  Contract_Coverage_Period_5, Contract_Coverage_Period_6, Contract_Coverage_Period_7,  USECVPD_1, USECVPD_2, USECVPD_3, USECVPD_4, USECVPD_5, USECVPD_6, USECVPD_7,   case when @CustomerChanged = 1 then isnull(@taxid,'') else TAXSCHID end, CNFGLVL,  CNFGSEQ, Contract_Length, Contract_Period, 0, Amount_To_Invoice, 0,  0, 0, 0, New_Invoice_Amount, @LineStatus,  Contract_Renewal_Contact, Contract_Response_Time,0, @MinDate,  @MinDate, 0, isnull(@tax1,''), isnull(@tax2,''), Total_Unit, UNITCOST,  Unit_Cost_Total, SVC_Liability_Type, @MinDate, RETTYPE, SVC_Monthly_Price,  Location_Segment, @BillToCustomer, case when @CustomerChanged = 1 then @BillToAddress else SVC_Bill_To_Address_Code end,  @Discount, SVC_Invoiced_Discount,  0,0,0, SVC_PM_Date, SVC_PM_Day,CURRNIDX,  RATETPID, EXGTBLID, @I_nExchangeRate, @ExchangeDate,DECPLACS,@ExchangeTime, RATECALC, VIEWMODE, ISMCTRX, EXPNDATE,  DENXRATE, MCTRXSTT, 0, 0, 0, 0, 0,  @ORIGTOTAL, 0, ORIGMINBIL, ORIGMAXBIL, Originating_Max_Billable, 0,  0, Orig_Amount_To_Invoice, 0, 0,  0, Originating_Total_Unit, ORUNTCST, ORDDLRAT, OrigDiscountReceived,  0, 0, ORIGUNITCOSTTOTAL, ORIGMONTHPRICE, ORIGINVOICEDDISC,  OrigNewInvoiceAmount,0,0,'',0,0,0,0, 0, ITEMDESC  from SVC00601 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   if exists(select 1 from SVC00652 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line)  INSERT INTO SVC00652 with (ROWLOCK)  select  @RenewType, @NewCONTNBR, LNSEQNBR,OPTTYPE,STRTDATE,ENDDATE,UNITPRCE,UNITCOST , ORUNTCST,ORUNTPRC  from SVC00652 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   if @Include_Meter_Settings = 1 and exists(select 1 from SVC00607 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line)  INSERT INTO SVC00607 with (ROWLOCK) select  @RenewType, @NewCONTNBR, @Line, Meter_Bases_1, Meter_Bases_2,Meter_Bases_3,  Meter_Bases_4, Meter_Bases_5, Meter_Overages_1, Meter_Overages_2, Meter_Overages_3, Meter_Overages_4, Meter_Overages_5,   Meter_Overages_6, Meter_Overages_7,Meter_Overages_8, Meter_Overages_9,Meter_Overages_10, Meter_Overages_11,   Meter_Overages_12, Meter_Overages_13, Meter_Overages_14, Meter_Overages_15, Meter_Overages_16, Meter_Overages_17,  Meter_Overages_18, Meter_Overages_19, Meter_Overages_20, Meter_Charges_1, Meter_Charges_2, Meter_Charges_3, Meter_Charges_4,  Meter_Charges_5, Meter_Charges_6,Meter_Charges_7, Meter_Charges_8, Meter_Charges_9,Meter_Charges_10, Meter_Charges_11,   Meter_Charges_12, Meter_Charges_13, Meter_Charges_14, Meter_Charges_15, Meter_Charges_16, Meter_Charges_17, Meter_Charges_18,  Meter_Charges_19, Meter_Charges_20,  Meter_Expires_1,Meter_Expires_2,Meter_Expires_3,Meter_Expires_4,Meter_Expires_5,  0,0,0,0,0,0,0,0,0,0,Meter_Startings_1, Meter_Startings_2, Meter_Startings_3,   Meter_Startings_4, Meter_Startings_5,0.0,0.0,0.0,@MinDate,0.0,0.0,0.0,Originating_Meter_Charge_1,  Originating_Meter_Charge_2,Originating_Meter_Charge_3,Originating_Meter_Charge_4,Originating_Meter_Charge_5,  Originating_Meter_Charge_6,Originating_Meter_Charge_7,Originating_Meter_Charge_8,Originating_Meter_Charge_9,  Originating_Meter_Charge_10,Originating_Meter_Charge_11,Originating_Meter_Charge_12,Originating_Meter_Charge_13,  Originating_Meter_Charge_14,Originating_Meter_Charge_15,Originating_Meter_Charge_16,Originating_Meter_Charge_17,  Originating_Meter_Charge_18,Originating_Meter_Charge_19,Originating_Meter_Charge_20  from SVC00607 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  if exists(select 1 from SVC00610 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line)  INSERT INTO SVC00610 with (ROWLOCK)  select @RenewType, @NewCONTNBR, LNSEQNBR,EQUIPID, ACTIVE, SCHEDID  from SVC00610 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   end  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_601 INTO @Line, @LinePriceBook  END  deallocate cursor_601   declare cursor_606 cursor for select LNSEQNBR from SVC00606 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR  open cursor_606  FETCH NEXT FROM cursor_606 INTO @Line  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC00606 with (ROWLOCK)  select  @RenewType, @NewCONTNBR, LNSEQNBR,ITEMNMBR  from SVC00606 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_606 INTO @Line  END  deallocate cursor_606   declare cursor_608 cursor for select LNSEQNBR from SVC00608 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR  open cursor_608  FETCH NEXT FROM cursor_608 INTO @Line  while @@FETCH_STATUS = 0  BEGIN  select @NOTEINDEX = NOTEINDX from SVC00608 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   exec SVC_Copy_Note @NOTEINDEX ,@NEWNOTEINDEX output   INSERT INTO SVC00608 with (ROWLOCK) select  @RenewType, @NewCONTNBR, @Line,@TransferType,@TransferDate,   case when @CustomerChanged = 1 then isnull(@taxid,'') else TAXSCHID end, priorityLevel,  ADRSCODE, @NEWNOTEINDEX, TIMEZONE, CONTPRC, RENCNTTYP, RENPRCSCHD, PCTCRYFWD, @MinDate, @MinDate,  MXINCPCT, 0,0, DSCPCTAM, COMDLRAM, isnull(@country,''), PRCSTAT, @PONumber, DSCRIPTN, PARTPCT,  LABPCT, MISCPCT, PMMSCPCT, PMPRTPCT, PMLABPCT, VENDORID, RETNAGAM, 0, isnull(@salesid,''),  COMMCODE, COMPRCNT, @BillStartDate,@BillEndDate, BILLNGTH, BILPRD, TOTAL, @MinDate, 0,  @MinDate, NBRCAL, 0,0, @CTRContact, CURNCYID, @MinDate, CNTTYPE, @NewPriceBook, @Customer,  @UserDate, MINBIL, MAXBIL, MAXBILL, AUTOREN, MSTCNTRCT, SRVTYPE, BILFRRET, 0, PREPAID,  BILONDY, BILCYC, UOFM, 0, @MinDateD + CONVERT(varchar(10), getdate(), 108),   @ContractStartDate,@ContractEndDate,  CNTCOVPD_1, CNTCOVPD_2, CNTCOVPD_3,  CNTCOVPD_4, CNTCOVPD_5, CNTCOVPD_6, CNTCOVPD_7, Contract_Coverage_Period_1, Contract_Coverage_Period_2,  Contract_Coverage_Period_3, Contract_Coverage_Period_4, Contract_Coverage_Period_5, Contract_Coverage_Period_6,  Contract_Coverage_Period_7, USECVPD_1, USECVPD_2, USECVPD_3, USECVPD_4, USECVPD_5, USECVPD_6, USECVPD_7,  Contract_Length, Contract_Period, 0, 0, 0, 0,  0, 0, Quote_Status, QUOEXPDA, Credit_Hold, isnull(@tax1,''), isnull(@tax2,''), New_PO_Required,  Contract_Renewal_Contact, @CONTNBR, @CONSTS, Contract_Response_Time, 0,  @MinDate, @MinDate, 0, 0, @UserID, '',   @MinDate, SVC_Liability_Type, RETTYPE, Location_Segment, @BillToCustomer,   Cover_All, case when @CancelLineOption = 3 then canceled  else 0 end,   CURRNIDX, RATETPID,EXGTBLID,XCHGRATE, EXCHDATE,DECPLACS, TIME1,RATECALC, VIEWMODE,  ISMCTRX, EXPNDATE,DENXRATE,MCTRXSTT, 0,0,0,0,0,  0,0,0,0,0,0, 0,0,0, 0,0,0, case when @CustomerChanged = 1 then @BillToAddress else SVC_Bill_To_Address_Code end,0  from SVC00608 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_608 INTO @Line  END  deallocate cursor_608  declare cursor_655 cursor for select LNSEQNBR,OPTTYPE from SVC00655 where CONSTS = @CONSTS and CONTNBR = @CONTNBR open cursor_655  FETCH NEXT FROM cursor_655 INTO @Line,@OPTTYPE  while @@FETCH_STATUS = 0  BEGIN  INSERT INTO SVC00655 with (ROWLOCK)  select  @RenewType, @NewCONTNBR, LNSEQNBR,OPTTYPE,STRTDATE,ENDDATE,UNITPRCE,UNITCOST , ORUNTCST,ORUNTPRC  from SVC00655 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and OPTTYPE = @OPTTYPE  if @@error <> 0 goto baderror  FETCH NEXT FROM cursor_655 INTO @Line,@OPTTYPE  END deallocate cursor_655  INSERT INTO SVC00609 with (ROWLOCK)  select @RenewType, @NewCONTNBR, LNSEQNBR, SEQNUMBR, SVC_Distribution_Type, DistRef, ACTINDX  from SVC00609 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR   END  exec svcTransferCoveragePeriods @CONSTS, @CONTNBR, 0, @RenewType, @NewCONTNBR, 0, @FromHistory, @Version  select @RecordType =   case @CONSTS  when 1 then 'Quote'  when 2 then 'Contract'  when 3 then 'Template'  when 4 then 'History'  end  IF @FromMoveRoutine = 1  IF @FromHistory = 1   set @AuditDesc = 'Renewed From History ' + rtrim(@RecordType) + ', ' + rtrim(@CONTNBR) + ' via Move Routine'   ELSE  set @AuditDesc = 'Renewed From ' + rtrim(@RecordType) + ', ' + rtrim(@CONTNBR) + ' via Move Routine'  else  set @AuditDesc = 'Created - Auto Renewal Routine' exec SVC_Create_Contract_Audit @RenewType, @NewCONTNBR,0,'','',@Address,@UserID,@AuditDesc  return(0) baderror:   return (99)    
GO
GRANT EXECUTE ON  [dbo].[SVC_Contract_Renew] TO [DYNGRP]
GO

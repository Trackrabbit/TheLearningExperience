SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glMatchPMTransactions]  @iGLTempTable varchar(50),  @iPMTempTable varchar(50),  @iPMMatchTable varchar(50),  @iGLMatchTable varchar(50)  AS  DECLARE  @lSQLError int,  @Total numeric(19,5)  EXEC(  'SELECT  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  ' + @iPMTempTable + '.HISTRX  INTO  ##PMDetailTemp  FROM ' +  @iPMTempTable + ' JOIN ' + @iGLTempTable + '  ON  PSTGDATE = TRXDATE  AND  TRXSORCE = ORTRXSRC  AND  VCHRNMBR = ORCTRNUM   GROUP BY  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,   DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  ' + @iPMTempTable + '.HISTRX ')  EXEC(  'SELECT  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ' + @iGLTempTable + '.HISTRX,  ' + @iGLTempTable + '.YEAR1,  ' + @iGLTempTable + '.RCTRXSEQ  INTO  ##GLDetailTemp  FROM ' +  @iGLTempTable + ' JOIN ' + @iPMTempTable + '  ON  TRXDATE = PSTGDATE  AND  ORTRXSRC = TRXSORCE   AND  ORCTRNUM = VCHRNMBR  GROUP BY  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  ' + @iGLTempTable + '.HISTRX,  ' + @iGLTempTable + '.YEAR1,  ' + @iGLTempTable + '.RCTRXSEQ ')  EXEC(  'INSERT INTO  ##PMDetailTemp  SELECT  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  ' + @iPMTempTable + '.HISTRX  FROM ' +  @iPMTempTable + ' JOIN ' + @iGLTempTable + '  ON  PSTGDATE = TRXDATE  AND  TRXSORCE = ORTRXSRC  AND  ORCTRNUM = ''''  GROUP BY  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  ' + @iPMTempTable + '.HISTRX ')  EXEC(  'INSERT INTO  ##GLDetailTemp  SELECT  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ' + @iGLTempTable + '.HISTRX,  ' + @iGLTempTable + '.YEAR1,  ' + @iGLTempTable + '.RCTRXSEQ  FROM ' +  @iGLTempTable + ' JOIN ' + @iPMTempTable + '  ON  TRXDATE = PSTGDATE  AND  ORTRXSRC = TRXSORCE   AND  ORCTRNUM = ''''  GROUP BY  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  ' + @iGLTempTable + '.HISTRX,  ' + @iGLTempTable + '.YEAR1,  ' + @iGLTempTable + '.RCTRXSEQ ')  EXEC(  'INSERT INTO   ##PMDetailTemp  SELECT  A.PSTGDATE,  A.VENDORID,  A.TRXSORCE,  A.VCHRNMBR,  A.DOCNUMBR,  A.DOCTYPE,  A.STRVAL,  A.TRX_ID,  A.ACCTAMNT,  A.CNTRLTYP,  A.HISTRX  FROM ' +  @iPMTempTable + ' AS A JOIN ##PMDetailTemp AS B  ON   A.TRXSORCE = B.TRXSORCE  AND  A.VCHRNMBR <> B.VCHRNMBR  WHERE  A.CNTRLTYP = 1  AND  A.TRXSORCE LIKE ''PMTRX%''  GROUP BY  A.PSTGDATE,  A.VENDORID,  A.TRXSORCE,  A.VCHRNMBR,  A.DOCNUMBR,  A.DOCTYPE,  A.STRVAL,  A.TRX_ID,  A.ACCTAMNT,  A.CNTRLTYP,  A.HISTRX ')  EXEC(  'INSERT INTO  ##PMDetailTemp  SELECT  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  ' + @iPMTempTable + '.HISTRX  FROM ' +  @iPMTempTable + ' JOIN ' + @iGLTempTable + '  ON  PSTGDATE = TRXDATE  AND  TRXSORCE = ORTRXSRC  WHERE  TRXSORCE LIKE ''RECVG%''  GROUP BY  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  ' + @iPMTempTable + '.HISTRX ')  EXEC(  'INSERT INTO  ##GLDetailTemp  SELECT  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ' + @iGLTempTable + '.HISTRX,  ' + @iGLTempTable + '.YEAR1,  ' + @iGLTempTable + '.RCTRXSEQ  FROM ' +  @iGLTempTable + ' JOIN ' + @iPMTempTable + '  ON  TRXDATE = PSTGDATE  AND  ORTRXSRC = TRXSORCE   WHERE  ORTRXSRC LIKE ''RECVG%''  GROUP BY  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  ' + @iGLTempTable + '.HISTRX,  ' + @iGLTempTable + '.YEAR1,  ' + @iGLTempTable + '.RCTRXSEQ ')  SELECT  TRXSORCE,  SUM(ACCTAMNT) AS ACCTAMNT INTO  #PMSumTemp FROM  ##PMDetailTemp GROUP BY  TRXSORCE   SELECT  ORTRXSRC,  (SUM(CRDTAMNT) - SUM(DEBITAMT)) AS GLAMNT INTO  #GLSumTemp FROM  ##GLDetailTemp GROUP BY  ORTRXSRC  SELECT  TRXSORCE INTO  #TRXRemoveTemp FROM  #PMSumTemp JOIN #GLSumTemp  ON  TRXSORCE = ORTRXSRC  AND  ACCTAMNT <> GLAMNT  DELETE  #PMSumTemp FROM  #PMSumTemp JOIN #GLSumTemp  ON  TRXSORCE = ORTRXSRC  AND  ACCTAMNT <> GLAMNT  DELETE  #GLSumTemp FROM  #GLSumTemp JOIN #TRXRemoveTemp  ON  ORTRXSRC = TRXSORCE  EXEC(  'INSERT INTO ' +  @iPMMatchTable +  ' (PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  VendorIDDrillback,  DocumentNumberDrillback)  SELECT  PSTGDATE,  VENDORID,  ##PMDetailTemp.TRXSORCE,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ##PMDetailTemp.ACCTAMNT,  CNTRLTYP,   DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppVendorID(1,VENDORID),  case HISTRX  when 1 then  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppPayablesTransactionNumber(1, DOCTYPE,VCHRNMBR,3,1,-1,'''','''')  else  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppPayablesTransactionNumber(1, DOCTYPE,VCHRNMBR,2,1,-1,'''','''')  end  FROM  ##PMDetailTemp JOIN #PMSumTemp   ON  ##PMDetailTemp.TRXSORCE  = #PMSumTemp.TRXSORCE ')  EXEC(  'INSERT INTO ' +  @iGLMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT  TRXDATE,  JRNENTRY,  ##GLDetailTemp.ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,   DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,ACTINDX),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,RCTRXSEQ,YEAR1,TRXDATE)   FROM  ##GLDetailTemp JOIN #GLSumTemp  ON  ##GLDetailTemp.ORTRXSRC = #GLSumTemp.ORTRXSRC ')  EXEC( 'DELETE   FROM ' + @iPMTempTable + '  WHERE EXISTS (select 1 from ' + @iPMMatchTable +   ' where TRXSORCE = ' + @iPMTempTable + '.TRXSORCE ' +  ' AND VCHRNMBR = ' + @iPMTempTable + '.VCHRNMBR ' +  ' AND CNTRLTYP = ' + @iPMTempTable + '.CNTRLTYP)')  EXEC( 'DELETE   FROM ' + @iGLTempTable + '  WHERE EXISTS (select 1 from ' + @iGLMatchTable +   ' where ORTRXSRC = ' + @iGLTempTable + '.ORTRXSRC ' +  ' AND ORCTRNUM = ' + @iGLTempTable + '.ORCTRNUM)')   DROP TABLE   ##PMDetailTemp,   ##GLDetailTemp  RETURN (@lSQLError)    
GO
GRANT EXECUTE ON  [dbo].[glMatchPMTransactions] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateBank] @I_vBANKID char(15),   @I_vBANKNAME char(30),       @I_vADDRESS1 char(60) = '',      @I_vADDRESS2 char(60) = '',      @I_vADDRESS3 char(60) = '',      @I_vCITY char(35) = '',   @I_vSTATE char(29) = '',   @I_vZIPCODE char(10) = '',   @I_vCOUNTRY char(60) = '',   @I_vPHNUMBR1 char(21) = '',   @I_vPHNUMBR2 char(21) = '',   @I_vPHONE3 char(21) = '',   @I_vFAXNUMBR  char(21) = '',   @I_vTRNSTNBR char(9) = '',   @I_vBNKBRNCH char(20) = '',   @I_vDDTRANUM char(9) = '',   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output, @oErrString  varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @NOTEINDX numeric(19,5),    @CMPANYID smallint,     @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,     @iStatus int,       @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @iError int      select  @CMPANYID = 0,      @iStatus = 0,  @iAddCodeErrState =0,  @iCustomState = 0,  @O_oErrorState = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateBankPre  @I_vBANKID output,  @I_vBANKNAME output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIPCODE output,  @I_vCOUNTRY output,  @I_vPHNUMBR1 output,  @I_vPHNUMBR2 output,  @I_vPHONE3 output,  @I_vFAXNUMBR  output,  @I_vTRNSTNBR output,  @I_vBNKBRNCH output,  @I_vDDTRANUM output,  @I_vRequesterTrx output,  @I_vUSRDEFND1  output,  @I_vUSRDEFND2  output,  @I_vUSRDEFND3  output,  @I_vUSRDEFND4  output,  @I_vUSRDEFND5  output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2255    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vBANKID is null or  @I_vBANKNAME is null or  @I_vADDRESS1 is null or  @I_vADDRESS2 is null or  @I_vADDRESS3 is null or  @I_vCITY is null or  @I_vSTATE is null or  @I_vZIPCODE is null or  @I_vCOUNTRY is null or  @I_vPHNUMBR1 is null or  @I_vPHNUMBR2 is null or  @I_vPHONE3 is null or  @I_vFAXNUMBR  is null or  @I_vTRNSTNBR is null or  @I_vBNKBRNCH is null or  @I_vDDTRANUM is null or   @I_vRequesterTrx is null   ) begin  select @O_iErrorState = 2256    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vBANKID = UPPER(@I_vBANKID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 1507   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vBANKID = '' ) begin  select @O_iErrorState = 2257    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vBANKNAME = '' ) begin  select @O_iErrorState = 2258    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vTRNSTNBR <> '' and @I_vDDTRANUM = '' ) begin  select @I_vDDTRANUM = @I_vTRNSTNBR end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3694     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (not exists (select 1 from SY04100 (nolock) where BANKID = @I_vBANKID))  begin  insert into SY04100  (  BANKID,  BANKNAME,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  COUNTRY,  PHNUMBR1,  PHNUMBR2,  PHONE3,  FAXNUMBR,  TRNSTNBR,  BNKBRNCH,  NOTEINDX,  DDTRANUM  )  select  @I_vBANKID,     @I_vBANKNAME,     @I_vADDRESS1,     @I_vADDRESS2,     @I_vADDRESS3,     @I_vCITY,     @I_vSTATE,     @I_vZIPCODE,     @I_vCOUNTRY,     @I_vPHNUMBR1,     @I_vPHNUMBR2,     @I_vPHONE3,     @I_vFAXNUMBR,     @I_vTRNSTNBR,     @I_vBNKBRNCH,     @NOTEINDX,     @I_vDDTRANUM     if (@@error <> 0)  begin  select @O_iErrorState = 2259    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 2260    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateBankPost  @I_vBANKID,  @I_vBANKNAME,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCOUNTRY,  @I_vPHNUMBR1,  @I_vPHNUMBR2,  @I_vPHONE3,  @I_vFAXNUMBR,  @I_vTRNSTNBR,  @I_vBNKBRNCH,  @I_vDDTRANUM,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2261    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateBank] TO [DYNGRP]
GO

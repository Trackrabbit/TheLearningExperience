SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagCreateSubLedgerCodes_Void]  @aaSubLedgerHdrID INT,  @aaSubLedgerDistID INT  AS BEGIN  DECLARE  @aaSubLedgerAssignID int,@aaAssignedPercent int,@DistType int,  @ACTINDX INT, @aaBrowseTypeNew INT, @ClassID INT, @oRequiredFieldEmpty INT, @OldaaSubLedgerDistID INT,  @DEBITAMT NUMERIC(19,5),@ORDBTAMT NUMERIC(19,5),@CRDTAMNT NUMERIC(19,5), @ORCRDAMT NUMERIC(19,5)   SELECT @ACTINDX = ACTINDX,@DistType= DISTTYPE, @DEBITAMT = DEBITAMT, @CRDTAMNT = CRDTAMNT FROM AAG20001 WHERE AAG20001.aaSubLedgerHdrID = @aaSubLedgerHdrID   AND AAG20001.aaSubLedgerDistID = @aaSubLedgerDistID  SELECT @OldaaSubLedgerDistID = 0  EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID output,   @aaBrowseTypeNew output   IF EXISTS (SELECT TOP 1 1 FROM AAG20001 WHERE AAG20001.aaSubLedgerHdrID = @aaSubLedgerHdrID AND ACTINDX = @ACTINDX AND ROUND(DEBITAMT,1) = ROUND(@CRDTAMNT,1) AND ROUND(CRDTAMNT,1) = ROUND(@DEBITAMT,1) AND aaSubLedgerDistID <> @aaSubLedgerDistID)  SELECT TOP 1 @OldaaSubLedgerDistID = aaSubLedgerDistID FROM AAG20001 WHERE AAG20001.aaSubLedgerHdrID = @aaSubLedgerHdrID AND ACTINDX = @ACTINDX AND ROUND(DEBITAMT,1) = ROUND(@CRDTAMNT,1) AND ROUND(CRDTAMNT,1) = ROUND(@DEBITAMT,1) AND aaSubLedgerDistID <> @aaSubLedgerDistID  IF @OldaaSubLedgerDistID = 0  SELECT TOP 1 @OldaaSubLedgerDistID = aaSubLedgerDistID FROM AAG20001 WHERE AAG20001.aaSubLedgerHdrID = @aaSubLedgerHdrID AND ACTINDX = @ACTINDX AND DISTTYPE = @DistType AND aaSubLedgerDistID <> @aaSubLedgerDistID  IF @OldaaSubLedgerDistID = 0  SELECT TOP 1 @OldaaSubLedgerDistID = AAG20003.aaSubLedgerDistID FROM AAG20001   INNER JOIN AAG20000 ON AAG20000.aaSubLedgerHdrID = AAG20001.aaSubLedgerHdrID  INNER JOIN AAG20003 ON AAG20003.aaSubLedgerHdrID = AAG20001.aaSubLedgerHdrID  AND AAG20003.aaSubLedgerDistID = AAG20001.aaSubLedgerDistID  AND AAG20001.aaSubLedgerHdrID = @aaSubLedgerHdrID AND AAG20003.aaSubLedgerDistID <> @aaSubLedgerDistID  AND ((SERIES IN (12,4) AND DISTTYPE in (7, 2)) OR (SERIES IN (11, 3) AND DISTTYPE in (2,3)))   IF @OldaaSubLedgerDistID = 0  SELECT TOP 1 @OldaaSubLedgerDistID = AAG20003.aaSubLedgerDistID FROM AAG20001   INNER JOIN AAG20000 ON AAG20000.aaSubLedgerHdrID = AAG20001.aaSubLedgerHdrID  INNER JOIN AAG20003 ON AAG20003.aaSubLedgerHdrID = AAG20001.aaSubLedgerHdrID  AND AAG20003.aaSubLedgerDistID = AAG20001.aaSubLedgerDistID  AND AAG20001.aaSubLedgerHdrID = @aaSubLedgerHdrID AND AAG20003.aaSubLedgerDistID <> @aaSubLedgerDistID  AND SERIES IN (12,4) AND DISTTYPE in (6)    DECLARE aaSubLedger_Void CURSOR FAST_FORWARD  FOR  SELECT aaSubLedgerAssignID, aaAssignedPercent  FROM AAG20002   WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID   AND aaSubLedgerDistID = @OldaaSubLedgerDistID  ORDER BY aaSubLedgerAssignID  OPEN aaSubLedger_Void   FETCH NEXT FROM aaSubLedger_Void  INTO  @aaSubLedgerAssignID, @aaAssignedPercent  IF NOT EXISTS (SELECT @aaSubLedgerAssignID, @aaAssignedPercent)  BEGIN  INSERT INTO AAG20002 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [DEBITAMT], [CRDTAMNT], [ORDBTAMT], [ORCRDAMT], [aaAssignedPercent], [DistRef], [NOTEINDX], [aaAssignErrors], [aaAliasID])  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, 1,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   10000, ' ',0,0,0  FROM AAG20001  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID   IF @aaBrowseTypeNew <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG20003  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID   AND aaSubLedgerAssignID = 1)  BEGIN   EXEC aagSubWorkCodeUpdate   @aaSubLedgerHdrID,   @aaSubLedgerDistID,   1,   @ClassID,   @oRequiredFieldEmpty OUTPUT    UPDATE AAG20003 SET AAG20003.aaTrxCodeID = A3.aaTrxCodeID FROM AAG20003   INNER JOIN (SELECT aaSubLedgerHdrID,aaSubLedgerAssignID,aaTrxDimID,aaTrxCodeID FROM AAG20003 WHERE   aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID = @OldaaSubLedgerDistID AND aaSubLedgerAssignID=1) A3 on   AAG20003.aaTrxDimID=A3.aaTrxDimID AND   AAG20003.aaSubLedgerHdrID=@aaSubLedgerHdrID AND AAG20003.aaSubLedgerDistID = @aaSubLedgerDistID AND   AAG20003.aaSubLedgerAssignID=1  END   END  ELSE  BEGIN  WHILE @@FETCH_STATUS = 0  BEGIN   INSERT INTO AAG20002 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [DEBITAMT], [CRDTAMNT], [ORDBTAMT], [ORCRDAMT], [aaAssignedPercent], [DistRef], [NOTEINDX], [aaAssignErrors], [aaAliasID])  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,   CASE DEBITAMT WHEN 0 THEN DEBITAMT ELSE ROUND((DEBITAMT * @aaAssignedPercent)/10000,2) END,   CASE CRDTAMNT WHEN 0 THEN CRDTAMNT ELSE ROUND((CRDTAMNT * @aaAssignedPercent)/10000,2) END,   CASE ORDBTAMT WHEN 0 THEN ORDBTAMT ELSE ROUND((ORDBTAMT * @aaAssignedPercent)/10000,2) END,   CASE ORCRDAMT WHEN 0 THEN ORCRDAMT ELSE ROUND((ORCRDAMT * @aaAssignedPercent)/10000,2) END,   @aaAssignedPercent, ' ',0,0,0  FROM AAG20001  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID   IF @aaBrowseTypeNew <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG20003  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID   AND aaSubLedgerAssignID = @aaSubLedgerAssignID)  BEGIN   EXEC aagSubWorkCodeUpdate   @aaSubLedgerHdrID,   @aaSubLedgerDistID,   @aaSubLedgerAssignID,   @ClassID,   @oRequiredFieldEmpty OUTPUT    UPDATE AAG20003 SET AAG20003.aaTrxCodeID = A3.aaTrxCodeID FROM AAG20003   INNER JOIN (SELECT aaSubLedgerHdrID,aaSubLedgerAssignID,aaTrxDimID,aaTrxCodeID FROM AAG20003 WHERE   aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID = @OldaaSubLedgerDistID AND aaSubLedgerAssignID=@aaSubLedgerAssignID) A3 on   AAG20003.aaTrxDimID=A3.aaTrxDimID AND   AAG20003.aaSubLedgerHdrID=@aaSubLedgerHdrID AND AAG20003.aaSubLedgerDistID = @aaSubLedgerDistID AND   AAG20003.aaSubLedgerAssignID=@aaSubLedgerAssignID  END    FETCH NEXT   FROM   aaSubLedger_Void  INTO  @aaSubLedgerAssignID, @aaAssignedPercent  END  END  CLOSE aaSubLedger_Void  DEALLOCATE aaSubLedger_Void   IF (SELECT SUM(aaAssignedPercent) FROM AAG20002 WHERE aaSubLedgerHdrID=@aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID) >9900  BEGIN   IF (SELECT DEBITAMT+ORDBTAMT FROM AAG20001 WHERE aaSubLedgerHdrID=@aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID)>0   BEGIN  SELECT  @DEBITAMT =SUM(A2.DEBITAMT) - (SELECT DEBITAMT FROM AAG20001 WHERE aaSubLedgerHdrID=A2.aaSubLedgerHdrID AND aaSubLedgerDistID = A2.aaSubLedgerDistID) ,  @ORDBTAMT =SUM(A2.ORDBTAMT) - (SELECT ORDBTAMT FROM AAG20001 WHERE aaSubLedgerHdrID=A2.aaSubLedgerHdrID AND aaSubLedgerDistID = A2.aaSubLedgerDistID)   FROM AAG20002 A2 WHERE A2.aaSubLedgerHdrID=@aaSubLedgerHdrID AND A2.aaSubLedgerDistID = @aaSubLedgerDistID  GROUP BY A2.aaSubLedgerHdrID,A2.aaSubLedgerDistID  UPDATE AAG20002 SET DEBITAMT = DEBITAMT - @DEBITAMT,ORDBTAMT = ORDBTAMT - @ORDBTAMT FROM AAG20002   WHERE   aaSubLedgerHdrID=@aaSubLedgerHdrID   AND aaSubLedgerDistID = @aaSubLedgerDistID  AND aaSubLedgerAssignID = @aaSubLedgerAssignID  END  ELSE  BEGIN  SELECT  @CRDTAMNT =SUM(A2.CRDTAMNT) - (SELECT CRDTAMNT FROM AAG20001 WHERE aaSubLedgerHdrID=A2.aaSubLedgerHdrID AND aaSubLedgerDistID = A2.aaSubLedgerDistID) ,  @ORCRDAMT =SUM(A2.ORCRDAMT) - (SELECT ORCRDAMT FROM AAG20001 WHERE aaSubLedgerHdrID=A2.aaSubLedgerHdrID AND aaSubLedgerDistID = A2.aaSubLedgerDistID)   FROM AAG20002 A2 WHERE A2.aaSubLedgerHdrID=@aaSubLedgerHdrID AND A2.aaSubLedgerDistID = @aaSubLedgerDistID  GROUP BY A2.aaSubLedgerHdrID,A2.aaSubLedgerDistID  UPDATE AAG20002 SET CRDTAMNT = CRDTAMNT - @CRDTAMNT,ORCRDAMT = ORCRDAMT - @ORCRDAMT FROM AAG20002   WHERE   aaSubLedgerHdrID=@aaSubLedgerHdrID   AND aaSubLedgerDistID = @aaSubLedgerDistID  AND aaSubLedgerAssignID = @aaSubLedgerAssignID  END  END  SET NOCOUNT OFF END     
GO
GRANT EXECUTE ON  [dbo].[aagCreateSubLedgerCodes_Void] TO [DYNGRP]
GO

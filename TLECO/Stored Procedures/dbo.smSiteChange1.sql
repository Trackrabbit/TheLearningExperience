SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smSiteChange1]  @I_charStartSite 	char(30),  @I_charEndSite 		char(30),  @O_iErrorState 		int = NULL  output with encryption as set transaction isolation level read uncommitted set nocount on declare @LOCNCODE  	char(255), @tTransaction	tinyint, @tLoop		tinyint, @iStatus	int, @cStartSite	char(50), @cEndSite	char(50) exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charStartSite, @O_cOutputString = @cStartSite output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 90 return end exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charEndSite, @O_cOutputString = @cEndSite output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 91 return end select @O_iErrorState 	 = 0 if @@trancount = 0    begin select @tTransaction = 1 begin transaction end while ( @tLoop is NULL ) begin select @tLoop = 1 exec @iStatus = taItemSiteModifierPre @I_charStartSite 	output, @I_charEndSite 		output, @cStartSite		output, @cEndSite		output, @O_iErrorState 		output if @O_iErrorState <> 0  begin break end if	@I_charStartSite	is NULL or @I_charEndSite		is NULL or @cStartSite		is NULL or @cEndSite		is NULL begin select @O_iErrorState = 1  break end  if exists (select * from sysobjects where id = object_id('dbo.mfg_update_location_update')) alter table IV00101 disable trigger mfg_update_location_update if @@error <> 0  begin select @O_iErrorState = 2  break end  if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_Item_Site_Ext_U')) alter table IV00102 disable trigger tr_SVC_Item_Site_Ext_U if @@error <> 0  begin select @O_iErrorState = 3  break end  if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_IV00102_D')) alter table IV00102 disable trigger tr_SVC_IV00102_D if @@error <> 0  begin select @O_iErrorState = 4  break end  if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_IV00102_U')) alter table IV00102 disable trigger tr_SVC_IV00102_U if @@error <> 0  begin select @O_iErrorState = 5  break end  declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set LOCNCODE =' + rtrim(@cEndSite) +  ' where LOCNCODE = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'LOCNCODE'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 6  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set STTLOCCD =' + rtrim(@cEndSite) +  ' where STTLOCCD = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'STTLOCCD'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 7  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set ENLOCNCD =' + rtrim(@cEndSite) +  ' where ENLOCNCD = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ENLOCNCD'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 8  break end FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set TRXLOCTN =' + rtrim(@cEndSite) +  ' where TRXLOCTN = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'TRXLOCTN'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 8  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISCCursor CURSOR for select 'update '+o.name+' set TRNSTLOC ='+rtrim(@cEndSite)+ ' where TRNSTLOC='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='TRNSTLOC' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState = 37  break end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 break update IV40100 set MAINLOCN = @I_charEndSite where MAINLOCN = @I_charStartSite if @@error <> 0  begin select @O_iErrorState = 10  break end	 if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set STTLOCID =' + rtrim(@cEndSite) +  ' where STTLOCID = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'STTLOCID'  and o.name = 'UPR70500' order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 11  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set ENDLOCID =' + rtrim(@cEndSite) +  ' where ENDLOCID = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ENDLOCID'  and o.name = 'UPR70500'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 12  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set DLC =' + rtrim(@cEndSite) +  ' where DLC = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'DLC'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 16  break end FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set BLC =' + rtrim(@cEndSite) +  ' where BLC = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'BLC'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 17  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set DRAWFROMSITE_I =' + rtrim(@cEndSite) +  ' where DRAWFROMSITE_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'DRAWFROMSITE_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 18  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set POSTTOSITE_I =' + rtrim(@cEndSite) +  ' where POSTTOSITE_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'POSTTOSITE_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 19  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set WCID_I =' + rtrim(@cEndSite) +  ' where WCID_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'WCID_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 20  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set WCID2_I =' + rtrim(@cEndSite) +  ' where WCID2_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'WCID2_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 21  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set BACKFLUSHSITEID =' + rtrim(@cEndSite) +  ' where BACKFLUSHSITEID = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'BACKFLUSHSITEID'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 32  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set BYPRODUCTSITEID =' + rtrim(@cEndSite) +  ' where BYPRODUCTSITEID = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'BYPRODUCTSITEID'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 33  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set TO_SITE_I =' + rtrim(@cEndSite) +  ' where TO_SITE_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'TO_SITE_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 34  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set FROM_SITE_I =' + rtrim(@cEndSite) +  ' where FROM_SITE_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'FROM_SITE_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 35  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set LOCATIONCODE2_I =' + rtrim(@cEndSite) +  ' where LOCATIONCODE2_I = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'LOCATIONCODE2_I'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 36  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set TRNSFLOC =' + rtrim(@cEndSite) +  ' where TRNSFLOC = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'TRNSFLOC'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 22  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISCCursor insensitive CURSOR for select 'update '+o.name+' set Return_Location_Code ='+rtrim(@cEndSite)+ ' where Return_Location_Code='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='Return_Location_Code' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=100  break end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 break declare ta_ISCCursor insensitive CURSOR for select 'update '+o.name+' set Location_Code_Replacemen ='+rtrim(@cEndSite)+ ' where Location_Code_Replacemen='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='Location_Code_Replacemen' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=101  break end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set ITLOCN =' + rtrim(@cEndSite) +  ' where ITLOCN = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ITLOCN'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 23  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set LOCCODEB =' + rtrim(@cEndSite) +  ' where LOCCODEB = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'LOCCODEB'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 24  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set Vendor_Location_Code =' + rtrim(@cEndSite) +  ' where Vendor_Location_Code = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'Vendor_Location_Code'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 25  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set MSTRSITE =' + rtrim(@cEndSite) +  ' where MSTRSITE = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'MSTRSITE'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 26  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISMCursor insensitive CURSOR for select 'update '+o.name+' set MasterLocationCode =' + rtrim(@cEndSite) +  ' where MasterLocationCode = ' + rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'MasterLocationCode'  order by o.name set nocount on OPEN ta_ISMCursor FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS <> -1) begin exec (@LOCNCODE) if @@error <> 0  begin select @O_iErrorState = 27  break end  FETCH NEXT FROM ta_ISMCursor INTO @LOCNCODE end DEALLOCATE ta_ISMCursor if @O_iErrorState <> 0 break declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set aaSiteID ='+rtrim(@cEndSite)+ ' where aaSiteID='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='aaSiteID' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=99  break end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 break end  if exists (select * from sysobjects where id = object_id('dbo.mfg_update_location_update')) alter table IV00101 enable trigger mfg_update_location_update if @@error <> 0  begin select @O_iErrorState = 28  end  if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_Item_Site_Ext_U')) alter table IV00102 enable trigger tr_SVC_Item_Site_Ext_U if @@error <> 0  begin select @O_iErrorState = 29  end  if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_IV00102_D')) alter table IV00102 enable trigger tr_SVC_IV00102_D if @@error <> 0  begin select @O_iErrorState = 30  end  if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_IV00102_U')) alter table IV00102 enable trigger tr_SVC_IV00102_U if @@error <> 0  begin select @O_iErrorState = 31  end  exec @iStatus = taItemSiteModifierPost @I_charStartSite, @I_charEndSite, @cStartSite, @cEndSite, @O_iErrorState if @O_iErrorState <> 0 begin if @tTransaction = 1 rollback transaction end else if @tTransaction = 1 begin commit transaction end return  
GO
GRANT EXECUTE ON  [dbo].[smSiteChange1] TO [DYNGRP]
GO

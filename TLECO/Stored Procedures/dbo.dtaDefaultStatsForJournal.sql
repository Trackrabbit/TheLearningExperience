SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 create procedure [dbo].[dtaDefaultStatsForJournal]   @I_iJournalEntry int  = NULL,   @I_dTransactionDate datetime = NULL,  @I_sDecimalPlaces smallint = NULL,  @I_tIsMC tinyint  = NULL,  @I_nDTAIndex numeric(19,5) = NULL,  @I_tReversing tinyint  = NULL,  @I_nRecurringTrxSeq numeric(19,5) = NULL,  @O_iErrorState int  = NULL  output as   declare  @tTransaction tinyint,  @tLoop tinyint,  @iError int,  @iStatus int,  @TRUE tinyint,  @FALSE tinyint,  @DTA_STATUS_NONE smallint,  @cReferenceNumber char(25),   @cDocumentNumber char(21),   @sDocType   smallint,  @sFINANCIAL smallint,  @nRateInfo numeric(19,5),  @sWORK smallint  select  @O_iErrorState = 0  select  @TRUE   = 1,  @FALSE   = 0,  @iStatus  = 0,  @sFINANCIAL  = 2,  @sWORK  = 1   if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if @I_iJournalEntry is NULL or  @I_dTransactionDate is NULL or  @I_sDecimalPlaces is NULL or  @I_nDTAIndex is NULL or  @I_tReversing is NULL or  @I_nRecurringTrxSeq  is NULL or  @I_tIsMC is NULL   begin  select @O_iErrorState = 21001   break   end    exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'DTA_STATUS_NONE',  @DTA_STATUS_NONE output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus =  dtaGetFinancialRef  @I_nDTAIndex,  @I_tReversing,   @I_nRecurringTrxSeq,  @cReferenceNumber  output,  @O_iErrorState   output    select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @cDocumentNumber = ''  select @sDocType = 0   if @I_tIsMC = @TRUE  select @nRateInfo = 0.0  else  select @nRateInfo = -1.0    insert into DTA10100  (DTAREF,   DTASERIES,  JRNENTRY,   DOCNUMBR,   RMDTYPAL,  ACTINDX,   SEQNUMBR,  GROUPID,   GROUPAMT,  PSTGSTUS,  TRXDATE,  DTA_GL_Reference)   select   @cReferenceNumber,   @sFINANCIAL,   @I_iJournalEntry,   @cDocumentNumber,   @sDocType,   DTA00300.ACTINDX,   GL10001.SQNCLINE,   GROUPID,   DEBITAMT-CRDTAMNT,   @sWORK,   @I_dTransactionDate,  ''  from   DTA00300, GL10001  where   DTA00300.ACTINDX = GL10001.ACTINDX   and  DTA00300.ACCTSTAT  <> @DTA_STATUS_NONE   and  GL10001.JRNENTRY  = @I_iJournalEntry  and  GL10001.XCHGRATE  <> @nRateInfo       if @@rowcount = 0  break   insert into DTA10200  (DTAREF,   DTASERIES,  DOCNUMBR,   RMDTYPAL,  ACTINDX,   SEQNUMBR,  GROUPID,   CODEID,   POSTDESC,   DTAQNTY,   CODEAMT,   TRXDATE)   select   @cReferenceNumber,   @sFINANCIAL,   @cDocumentNumber,   @sDocType,   DTA00301.ACTINDX,   GL10001.SQNCLINE,   DTA00301.GROUPID,   DTA00301.CODEID,   DTA00301.POSTDESC,  0,  (round(((DEBITAMT-CRDTAMNT) * DTA00301.PERCENTAMOUNT / 10000), @I_sDecimalPlaces)),   @I_dTransactionDate  from   DTA00301, DTA10100, GL10001  where   DTA00301.ACTINDX = GL10001.ACTINDX   and  DTA00301.GROUPID = DTA10100.GROUPID  and  DTA00301.ACTINDX = DTA10100.ACTINDX   and  DTA10100.DTAREF  = @cReferenceNumber  and   GL10001.JRNENTRY  = @I_iJournalEntry  and  GL10001.SQNCLINE = DTA10100.SEQNUMBR   if @@rowcount = 0  break   delete #DTATempWork   insert into   #DTATempWork  select   DTA10200.GROUPID,  ((GL10001.DEBITAMT-GL10001.CRDTAMNT) - isnull(sum(DTA10200.CODEAMT),0.00)),  isnull(sum(DTA10200.CODEAMT),0.00),   max(DTA10200.CODEID),  DTA10200.SEQNUMBR,  sum(DTA00301.PERCENTAMOUNT)  from   DTA10200, DTA00301, GL10001  where   DTA10200.DTAREF  = @cReferenceNumber   and DTA10200.DTASERIES = @sFINANCIAL   and DTA10200.ACTINDX = GL10001.ACTINDX  and DTA10200.SEQNUMBR = GL10001.SQNCLINE  and GL10001.JRNENTRY = @I_iJournalEntry   and  DTA00301.ACTINDX  = GL10001.ACTINDX  and DTA00301.GROUPID  = DTA10200.GROUPID  and DTA00301.CODEID  = DTA10200.CODEID  group by   DTA10200.GROUPID, GL10001.DEBITAMT,GL10001.CRDTAMNT,DTA10200.SEQNUMBR  update   #DTATempWork   set   ROUNDAMT = 0.0   where   PERCENTAMOUNT <> 10000    update   DTA10200  set  CODEAMT = CODEAMT + ROUNDAMT  from  GL10001,   DTA10200 join #DTATempWork  on DTA10200.GROUPID = #DTATempWork.GROUPID  where   DTA10200.DTAREF  = @cReferenceNumber  and DTA10200.DTASERIES = @sFINANCIAL  and DTA10200.ACTINDX = GL10001.ACTINDX  and DTA10200.SEQNUMBR = GL10001.SQNCLINE  and GL10001.JRNENTRY = @I_iJournalEntry   and DTA10200.CODEID  = #DTATempWork.CODEID  and  #DTATempWork.ROUNDAMT  <> 0.0  and  DTA10200.SEQNUMBR = #DTATempWork.SEQNUMBR  and #DTATempWork.PERCENTAMOUNT = 10000   update  DTA10100  set  GROUPAMT = (select  (isnull(#DTATempWork.GROUPAMT,0.00) + #DTATempWork.ROUNDAMT)  from  #DTATempWork, GL10001  where  DTAREF      = @cReferenceNumber  and DTASERIES   = @sFINANCIAL  and DTA10100.ACTINDX    = GL10001.ACTINDX   and DTA10100.SEQNUMBR   = GL10001.SQNCLINE  and #DTATempWork.SEQNUMBR  = DTA10100.SEQNUMBR  and DTA10100.GROUPID  = #DTATempWork.GROUPID  group by   #DTATempWork.GROUPAMT, #DTATempWork.ROUNDAMT)  from  GL10001  where  DTAREF    = @cReferenceNumber  and DTASERIES = @sFINANCIAL  and DTA10100.ACTINDX   = GL10001.ACTINDX   and DTA10100.SEQNUMBR  = GL10001.SQNCLINE   delete #DTATempWork end   if (@O_iErrorState <> 0) or (@iStatus <> 0) begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[dtaDefaultStatsForJournal] TO [DYNGRP]
GO

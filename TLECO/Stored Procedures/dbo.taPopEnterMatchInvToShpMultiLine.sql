SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopEnterMatchInvToShpMultiLine]  @I_vPOPRCTNM char(17),     @I_vPOPMtchShpRcpt char(17),    @I_vPONUMBER char(17) = '',    @I_vQTYINVCD numeric(19,5),    @I_vRevalue_Inventory smallint = null,   @I_vITEMNMBR char(30) = '',    @I_vShipRCPTLNNM int = 0,    @I_vVENDORID char(15),     @I_vVNDITNUM char(30) = '',    @I_vVarianceAccount varchar(75) = '',   @I_vIVCLINNO int = 0,     @I_vLandedCost smallint = 0,    @I_vNONINVEN smallint = 0,    @I_vUSRDEFND1 char(50) = '',    @I_vUSRDEFND2 char(50) = '',    @I_vUSRDEFND3 char(50) = '',    @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output, @oErrString varchar(255) output  with encryption as   set transaction isolation level read uncommitted set nocount on  declare @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @CURNCYID char(15),  @CURRNIDX int,  @RCPTCOST numeric(19,5),  @ORUNTCST numeric(19,5),  @ORCPTCOST numeric(19,5),  @INVINDX int,  @TRXLOCTN char(10),  @XCHGRATE numeric(19,5),  @RATECALC smallint,  @PURPVIDX int,  @MAXSEG int,  @Location_Segment char(67),  @ACSGFLOC smallint,  @ACTINDX int,  @ACCNT_STRING char(100),  @NEW_ACCNT_STRING varchar(100),  @LOFSGMNT int,  @LOFSGMNTEND int,  @LOFSGMNTALL int,  @ShipRCPTLNNMcount int,  @IVCLINNOcount int,  @QTYINVCD10600Sum numeric(19,5),  @DECPLCUR smallint,  @Tolerance_Percentage int,  @Revalue_Inventory smallint,  @upperlimit numeric(19,5),  @lowerlimit numeric(19,5),  @EDITDECPLCUR int,  @PPV numeric(19,5),  @OrigORUNTCST numeric(19,5),  @OrigORCPTCOST numeric(19,5),  @POLNENUM int,  @ITEMTYPE int,  @VCTNMTHD smallint,  @RUPPVAMT numeric(19,5),  @UPPVTOTL numeric(19,5),  @ISMCTRX smallint,  @FUNLCURR char(15),  @UNITCOST numeric(19,5),  @QTYSHPPDRem numeric(19,5),  @ORUNTCSTPO numeric(19,5),  @UNITCOSTPO numeric(19,5),  @count int,  @ORCPTEXTCST numeric(19,5),  @OREXTCST numeric(19,5),  @itemNumber char(30),  @QTYINVCD numeric(19,5),  @LandedCostCalcMethod int  select @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @CURNCYID = '',  @CURRNIDX = 0,  @RCPTCOST = 0,  @ORUNTCST = 0,  @ORCPTCOST = 0,  @INVINDX = 0,  @TRXLOCTN = '',  @XCHGRATE = 0,  @RATECALC = 0,  @PURPVIDX = 0,  @MAXSEG = 0,  @Location_Segment = '',  @ACSGFLOC = 0,  @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = '',  @LOFSGMNT = 0,  @LOFSGMNTEND = 0,  @LOFSGMNTALL = 0,  @ShipRCPTLNNMcount = 0,  @IVCLINNOcount = 0,  @QTYINVCD10600Sum = 0,  @DECPLCUR = 0,  @Tolerance_Percentage = 0,  @Revalue_Inventory = 0,  @upperlimit = 0,  @lowerlimit = 0,  @EDITDECPLCUR = 0,  @PPV = 0,  @OrigORUNTCST = 0,  @OrigORCPTCOST = 0,  @POLNENUM = 0,  @ITEMTYPE = 0,  @VCTNMTHD = 0,  @RUPPVAMT = 0,  @UPPVTOTL = 0,  @ISMCTRX = 0,  @FUNLCURR = '',  @UNITCOST = 0,  @QTYSHPPDRem = 0,  @ORUNTCSTPO = 0,  @UNITCOSTPO = 0,  @count = 0,  @ORCPTEXTCST = 0,  @OREXTCST = 0,  @itemNumber = '',  @O_iErrorState = 0,  @QTYINVCD = 0,  @LandedCostCalcMethod = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopEnterMatchInvToShpMultiLinePre  @I_vPOPRCTNM output,  @I_vPOPMtchShpRcpt output,  @I_vPONUMBER output,  @I_vQTYINVCD output,  @I_vRevalue_Inventory output,  @I_vITEMNMBR output,  @I_vShipRCPTLNNM output,  @I_vVENDORID output,  @I_vVNDITNUM output,  @I_vVarianceAccount output,  @I_vIVCLINNO output,  @I_vLandedCost output,  @I_vNONINVEN output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4872    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM is null or  @I_vPOPMtchShpRcpt is null or  @I_vIVCLINNO is null or  @I_vQTYINVCD is null or  @I_vITEMNMBR is null or  @I_vShipRCPTLNNM is null or  @I_vVENDORID is null or  @I_vVNDITNUM is null or  @I_vVarianceAccount is null or  @I_vIVCLINNO is null or  @I_vLandedCost is null or  @I_vNONINVEN is null) begin  select @O_iErrorState = 4873    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM = '' or  @I_vPOPMtchShpRcpt = '' or  @I_vQTYINVCD = 0 or  @I_vVENDORID = '') begin  select @O_iErrorState = 4874     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vPOPRCTNM = UPPER(@I_vPOPRCTNM),  @I_vPOPMtchShpRcpt = UPPER(@I_vPOPMtchShpRcpt),  @I_vPONUMBER = UPPER(@I_vPONUMBER),  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vVENDORID = UPPER(@I_vVENDORID)  if ( (@I_vQTYINVCD < 0) or  (@I_vShipRCPTLNNM < 0) or  (@I_vIVCLINNO < 0)) begin  select @O_iErrorState = 4875     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRevalue_Inventory not in(0,1)) and (@I_vRevalue_Inventory is not null)) begin  select @O_iErrorState = 4876     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLandedCost not in(0,1)) begin  select @O_iErrorState = 7040     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vNONINVEN not in(0,1)) begin  select @O_iErrorState = 1520     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (not exists(select 1 from POP10500 (nolock) where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and POPTYPE in (1,3))) begin  select @O_iErrorState = 4877     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists (select 1 from POP10170 (nolock) where PONUMBER = @I_vPONUMBER) begin  select @O_iErrorState = 11973    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vITEMNMBR = '') and (@I_vVNDITNUM = '')) begin  select @O_iErrorState = 4878     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vVNDITNUM = '') begin  select @I_vVNDITNUM = VNDITNUM from IV00103 (nolock) where ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID end  if (@I_vITEMNMBR = '') begin  select @count = count(ITEMNMBR) from IV00103 (nolock) where VNDITNUM = @I_vVNDITNUM and VENDORID = @I_vVENDORID   if (@count > 1)  begin  select @O_iErrorState = 8158     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  select @I_vITEMNMBR = ITEMNMBR from IV00103 (nolock) where VNDITNUM = @I_vVNDITNUM and VENDORID = @I_vVENDORID  end end  if (not exists(select 1 from IV00103 (nolock) where VNDITNUM = @I_vVNDITNUM and VENDORID = @I_vVENDORID)) begin  if (@I_vPONUMBER <> '')  begin  select top 1 @itemNumber = IsNull(ITEMNMBR,'') from POP10110 (nolock)  where PONUMBER = @I_vPONUMBER and VENDORID = @I_vVENDORID and VNDITNUM = @I_vVNDITNUM and ORD = @I_vShipRCPTLNNM   if (@itemNumber <> '')  begin  if (@I_vITEMNMBR = '')  begin  select @I_vITEMNMBR = @itemNumber  end  if (@itemNumber <> @I_vITEMNMBR)  begin  select @O_iErrorState = 8296     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end end  if ((@I_vNONINVEN = 1) and (@I_vLandedCost = 0)) begin  if (exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 6230     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vNONINVEN = 0) and (@I_vLandedCost = 0)) begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 2584     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ITEMTYPE = ITEMTYPE,  @VCTNMTHD = VCTNMTHD  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR end  if (@I_vLandedCost = 1) begin  select @I_vNONINVEN = 1 end  if (@I_vShipRCPTLNNM = 0) begin  select @ShipRCPTLNNMcount = count(*) from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in(1,3) and Status = 1   if (@ShipRCPTLNNMcount > 1)  begin  select @O_iErrorState = 4879     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @I_vShipRCPTLNNM = RCPTLNNM from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  end end  if (@I_vIVCLINNO = 0) begin  select @IVCLINNOcount = count(*) from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE = 2   if (@IVCLINNOcount > 1)  begin  select @O_iErrorState = 4880     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @I_vIVCLINNO = RCPTLNNM from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  end end  if (exists(select 1 from POP10600 (nolock)  where POPIVCNO = @I_vPOPRCTNM and IVCLINNO = @I_vIVCLINNO and POPRCTNM = @I_vPOPMtchShpRcpt and RCPTLNNM = @I_vShipRCPTLNNM and @POLNENUM = 0)) begin  select @O_iErrorState = 4881     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @RCPTCOST = ORCPTCOST, @ORCPTCOST = ORCPTCOST, @INVINDX = INVINDX, @RATECALC = RATECALC, @XCHGRATE = XCHGRATE, @POLNENUM = POLNENUM, @ORCPTEXTCST = OREXTCST  from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and RCPTLNNM = @I_vShipRCPTLNNM and POPTYPE in(1,3) and ITEMNMBR = @I_vITEMNMBR   select @ORUNTCST = ORCPTCOST, @TRXLOCTN = TRXLOCTN, @CURNCYID = CURNCYID, @CURRNIDX = CURRNIDX, @RUPPVAMT = RUPPVAMT, @OREXTCST = OREXTCST, @QTYINVCD = QTYINVCD  from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vIVCLINNO and POPTYPE = 2  if (@CURNCYID = '') begin  select @CURNCYID = FUNLCURR, @CURRNIDX = FUNCRIDX from MC40000 (nolock) end  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  if ((@CURNCYID <> '') and (@CURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1 end  if (@ISMCTRX = 1) begin  if (@RATECALC = 0)  begin  select @RCPTCOST = round(@RCPTCOST * @XCHGRATE,2)  end  else  begin  if (@RATECALC = 1)  begin  select @RCPTCOST = round(@RCPTCOST / @XCHGRATE,2)  end  end end  select @EDITDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock)  where CURNCYID = @CURNCYID  select @OrigORCPTCOST = round(@ORCPTCOST * @I_vQTYINVCD, @EDITDECPLCUR) select @OrigORUNTCST = round(@ORUNTCST * @I_vQTYINVCD, @EDITDECPLCUR)  select @PPV = round((@OREXTCST / (@QTYINVCD / @I_vQTYINVCD)), @DECPLCUR) - (@OrigORCPTCOST)  if ((@VCTNMTHD in (4,5)) and (@ISMCTRX = 0)) begin  select @UPPVTOTL = @RUPPVAMT - @PPV end  if (@I_vLandedCost = 1) begin   select @LandedCostCalcMethod = CALCMTHD from IV41100 (nolock) where Landed_Cost_ID = @I_vITEMNMBR  end  if ((@I_vLandedCost = 0) and (@ITEMTYPE in(1,2)) and (@I_vNONINVEN = 0)) begin  select @Tolerance_Percentage = Tolerance_Percentage, @Revalue_Inventory = Revalue_Inventory  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   select @upperlimit = round(((@Tolerance_Percentage * .00001) + 1) * @OrigORCPTCOST, @EDITDECPLCUR),  @lowerlimit = round((1 - (@Tolerance_Percentage * .00001)) * @OrigORCPTCOST, @EDITDECPLCUR)   if (@I_vRevalue_Inventory is null)  begin  if (((@OrigORUNTCST > @upperlimit) or (@OrigORUNTCST < @lowerlimit)) and (@Revalue_Inventory = 1) and (@PPV <> 0) and (@VCTNMTHD in(1,2,3)))  begin  select @I_vRevalue_Inventory = 1  end  else  begin  select @I_vRevalue_Inventory = 0  end  end   if (@VCTNMTHD in(4,5))  begin  if (@PPV <> 0)  begin  select @I_vRevalue_Inventory = 1  end  else  begin  select @I_vRevalue_Inventory = 0  end  end   if (@I_vRevalue_Inventory is null)  begin  select @I_vRevalue_Inventory = 0  end end else begin  if (@I_vLandedCost = 1)  begin  select @Tolerance_Percentage = Tolerance_Percentage, @Revalue_Inventory = Revalue_Inventory  from IV41100 (nolock) where Landed_Cost_ID = @I_vITEMNMBR and VENDORID = @I_vVENDORID and CURNCYID = @CURNCYID   select @upperlimit = round(((@Tolerance_Percentage * .00001) + 1) * @OrigORCPTCOST, @EDITDECPLCUR),  @lowerlimit = round((1 - (@Tolerance_Percentage * .00001)) * @OrigORCPTCOST, @EDITDECPLCUR)   if (@I_vRevalue_Inventory is null)  begin  if (((@OrigORUNTCST > @upperlimit) or (@OrigORUNTCST < @lowerlimit)) and (@Revalue_Inventory = 1) and (@PPV > 0))  begin  select @I_vRevalue_Inventory = 1  end  else  begin  select @I_vRevalue_Inventory = 0  end  end  end  else  begin  select @I_vRevalue_Inventory = 0  end end  if (@I_vVarianceAccount <> '') begin  select @PURPVIDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vVarianceAccount   if (@PURPVIDX = 0)  begin  select @O_iErrorState = 4883     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vLandedCost = 0)  begin  if (((@I_vRevalue_Inventory = 0) or (@VCTNMTHD in (4,5))) and @I_vNONINVEN = 0)  begin  select @PURPVIDX = isnull(PURPVIDX, 0) from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if (@PURPVIDX = 0)  begin  select @PURPVIDX = ACTINDX from SY01100 (nolock) where SERIES = 5 and SEQNUMBR = 1200  end  end  else  begin  select @PURPVIDX = @INVINDX  end  end  else  begin  select @PURPVIDX = PURPVIDX from IV41100 (nolock) where Landed_Cost_ID = @I_vITEMNMBR and VENDORID = @I_vVENDORID  end end  select @MAXSEG = max(SGMTNUMB) from SY00300 (nolock) select @Location_Segment = isnull(Location_Segment, '') from IV40700 (nolock) where LOCNCODE = @TRXLOCTN select @ACSGFLOC = ACSGFLOC from IV40100 (nolock) where SETUPKEY = 1  if ((@PURPVIDX <> 0) and (@Location_Segment <> '') and (@ACSGFLOC <> 0)) begin  select @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = ''   select @ACCNT_STRING = ACTNUMST from GL00105 (nolock) where ACTINDX = @PURPVIDX   if (@ACSGFLOC < @MAXSEG)  begin  select @LOFSGMNT = sum(LOFSGMNT) + (@MAXSEG - @ACSGFLOC) from SY00300 (nolock) where SGMTNUMB >= @ACSGFLOC  select @LOFSGMNTEND = sum(LOFSGMNT) + (@MAXSEG - @ACSGFLOC) from SY00300 (nolock) where SGMTNUMB > @ACSGFLOC  end  else  begin  select @LOFSGMNT = sum(LOFSGMNT) from SY00300 (nolock) where SGMTNUMB = @ACSGFLOC  end   select @LOFSGMNTALL = sum(LOFSGMNT) + (@MAXSEG - 1) from SY00300 (nolock)    if (@ACSGFLOC = @MAXSEG)  begin  select @NEW_ACCNT_STRING = substring(@ACCNT_STRING, 1, @LOFSGMNTALL - @LOFSGMNT) + rtrim(ltrim(@Location_Segment))  end  else  begin  select @NEW_ACCNT_STRING = substring(@ACCNT_STRING, 1, @LOFSGMNTALL - @LOFSGMNT ) + rtrim(ltrim(@Location_Segment)) +  substring(@ACCNT_STRING, @LOFSGMNTALL - @LOFSGMNTEND + 1, @LOFSGMNTALL )  end   select @ACTINDX = isnull(ACTINDX, 0) from GL00105 (nolock) where ACTNUMST = @NEW_ACCNT_STRING   if (@ACTINDX <> 0)  begin  select @PURPVIDX = @ACTINDX  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@I_vLandedCost = 0) begin  select @QTYSHPPDRem = QTYSHPPD - QTYMATCH from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and RCPTLNNM = @I_vShipRCPTLNNM and  ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in(1,3)and Status = 1   if (@I_vQTYINVCD > @QTYSHPPDRem)  begin  select @O_iErrorState = 4882     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10500 set   QTYMATCH = QTYMATCH + @I_vQTYINVCD,  OREXTCST = OREXTCST - round((@ORCPTCOST * @I_vQTYINVCD), @EDITDECPLCUR)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  and POPTYPE in(1,3) and Status = 1 and RCPTLNNM = @I_vShipRCPTLNNM  end else if (@LandedCostCalcMethod = 3)   begin  update POP10500 set   QTYMATCH = round(@ORCPTCOST * @I_vQTYINVCD, @DECPLCUR)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  and POPTYPE in(1,3) and Status = 1 and RCPTLNNM = @I_vShipRCPTLNNM  end else  begin  update POP10500 set   QTYMATCH = QTYMATCH + @ORCPTCOST   where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  and POPTYPE in(1,3) and Status = 1 and RCPTLNNM = @I_vShipRCPTLNNM  end  if @@error <> 0 begin  select @O_iErrorState = 4866    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@ISMCTRX = 0) begin  if (@RUPPVAMT <> 0)  begin  update POP10500 set  RUPPVAMT = RUPPVAMT - @UPPVTOTL  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in(1,3) and Status = 1  end end  insert POP10600  (  POPIVCNO,  IVCLINNO,  POPRCTNM,  RCPTLNNM,  LCLINENUMBER,  Status,  QTYINVCD,  QTYINVRESERVE,  ORUNTCST,  RCPTCOST,  ORCPTCOST,  ACPURTOT,  UPPVTOTL,  PURPVIDX,  PCHRPTCT,  SPRCPTCT,  CURNCYID,  CURRNIDX,  XCHGRATE,  RATECALC,  DENXRATE,  Revalue_Inventory,  PPVTotal  )  select  @I_vPOPRCTNM,       @I_vIVCLINNO,       @I_vPOPMtchShpRcpt,      @I_vShipRCPTLNNM,      case        when @I_vLandedCost = 1  then @POLNENUM  else 0  end,  0,        case        when (@I_vLandedCost = 0)  then @I_vQTYINVCD  when @I_vLandedCost = 1 and @LandedCostCalcMethod = 3  then round(@ORCPTCOST * @I_vQTYINVCD, @DECPLCUR)  else @ORCPTCOST  end,  0,        @ORUNTCST,       @RCPTCOST,       @ORCPTCOST,       round(@ORCPTCOST * @I_vQTYINVCD, @DECPLCUR),   @UPPVTOTL,       @PURPVIDX,       0,        0,        @CURNCYID,       @CURRNIDX,       @XCHGRATE,       @RATECALC,       0,        @I_vRevalue_Inventory,      @PPV       if @@error <> 0 begin  select @O_iErrorState = 4884    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vLandedCost = 0) and (@I_vPONUMBER <> '')) begin  select @UNITCOSTPO = UNITCOST,  @ORUNTCSTPO = ORUNTCST  from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and VENDORID = @I_vVENDORID and ORD = @POLNENUM   select @QTYINVCD10600Sum = isnull(sum(QTYINVCD), 0) from POP10600 (nolock)  where POPIVCNO = @I_vPOPRCTNM and POPRCTNM = @I_vPOPMtchShpRcpt and IVCLINNO = @I_vIVCLINNO   update POP10100 set   REMSUBTO = REMSUBTO - round((@UNITCOSTPO * @QTYINVCD10600Sum), @EDITDECPLCUR),  OREMSUBT = OREMSUBT - round((@ORUNTCSTPO * @QTYINVCD10600Sum), @EDITDECPLCUR)  where PONUMBER = @I_vPONUMBER  if @@error <> 0  begin  select @O_iErrorState = 4865    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10310 set Remaining_AP_Amount =  case  when Remaining_AP_Amount = 0  then round(((@QTYINVCD - @I_vQTYINVCD) * @ORUNTCST), @EDITDECPLCUR)  else Remaining_AP_Amount - (round((@I_vQTYINVCD * @ORUNTCST), @EDITDECPLCUR))  end  where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vIVCLINNO  if @@error <> 0  begin  select @O_iErrorState = 8302     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taPopEnterMatchInvToShpMultiLinePost  @I_vPOPRCTNM,  @I_vPOPMtchShpRcpt,  @I_vPONUMBER,  @I_vQTYINVCD,  @I_vRevalue_Inventory,  @I_vITEMNMBR,  @I_vShipRCPTLNNM,  @I_vVENDORID,  @I_vVNDITNUM,  @I_vVarianceAccount,  @I_vIVCLINNO,  @I_vLandedCost,  @I_vNONINVEN,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4885    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopEnterMatchInvToShpMultiLine] TO [DYNGRP]
GO

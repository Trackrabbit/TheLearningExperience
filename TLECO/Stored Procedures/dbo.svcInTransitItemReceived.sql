SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 Create Procedure [dbo].[svcInTransitItemReceived]  (@PONumber char(21),  @POLineSeq numeric(19,5),  @ItemNumber char(31),  @Qty numeric(19,5),  @UoM char(9),  @Location char(11),  @RCVNumber char(21),  @RCVLineSeq numeric(19,5),  @VendorID char(15),  @Tracking smallint,  @UserDate datetime,  @Bin char(15),  @QtyInBaseUOM numeric(19,5),  @DECPLCUR smallint,  @DECPLQTY smallint  ) As declare @CallNumber char(15),  @SrvRecType smallint,  @EquipLine integer,  @LineItemType char(3),  @LineItemSeq integer,        @ToLocation char(11),  @Status char(3),  @QtyBO numeric(19,5),  @QtyUpdated numeric(19,5),  @QtyAll numeric(19,5),  @Description char(51),  @TransferNumber char(15),  @RTVNumber char(15),  @RTVLine numeric(19,5),  @RTVType char(11), @RMAType char(11),  @RecStat char(3), @PartialRcvStat char(3),  @NowDate datetime,  @NowTime datetime,  @NowDateTime datetime,  @MinDate datetime,  @TransferLine int,  @SerialNumber char(21),@OldSerialNumber char(21),@OldItemNumber char(31),  @WONumber char(15),  @WORecType smallint,  @AddressOption smallint,  @AddressCode char(15),  @Customer char(15),@ReturnCustomer char(15),  @MiscAddressCode char(15),  @Auditdesc char(100) declare  @CreateSerial tinyint,  @UsePOP smallint,  @EquipID int,  @UserID char(21),  @POfound smallint declare @IVNum char(17),@OriginalUoM char(9),@QtyInBase numeric(19,5) declare @Line int declare @ItemType smallint declare @ProcessLine Numeric(19,5), @RMA char(15), @RMALine numeric(19,5) declare @InStockStatus char (10) declare @ToBin char(15) declare @EnableBin tinyint declare @SerialSEQ int, @RTVSerialSEQ int declare @SupersseionEnabled tinyint declare @RTVStatus smallint, @RTVStatus_Current smallint declare @PrevStatus char(3), @ReceivedStatus char(3) declare @Return_Path smallint declare @SERLTQTY numeric(19,5),  @rcv_date datetime,  @date_seq numeric(19,5),  @item_cost numeric(19,5),  @ExpDate datetime,  @MfgDate datetime,  @CMPNTSEQ int  if not exists(select * from SVC00998) return select @Bin = BIN from POP30340 where POPRCTNM = @RCVNumber and RCPTLNNM = @RCVLineSeq select @Bin = isnull(@Bin,'') select @UsePOP = Use_POP,@CreateSerial = SVC_Create_POP_Serial, @Customer = SVC_InStock_Customer, @ReturnCustomer = RETCSTNR,  @InStockStatus = SVC_InStock_Status, @SupersseionEnabled = SVC_Supersession_Enabled from SVC00998 select @ItemType = ITEMTYPE from IV00101 where ITEMNMBR = @ItemNumber select @UserID = SYSTEM_USER select @POfound = 0 select @NowDateTime = getdate() exec SVC_util_split_datetime @NowDateTime, @NowDate output, @NowTime output exec smGetMinDate @MinDate output select @EnableBin = ENABLEMULTIBIN from IV40100  if @PONumber > ''  BEGIN  if exists(select * from SVC00701 where ORDDOCID = @PONumber and LNITMSEQ = @POLineSeq)  select @CallNumber = CALLNBR, @RMA = RETDOCID, @RTVNumber = RTV_Number, @WONumber = WORKORDNUM   from SVC00701 where ORDDOCID = @PONumber and LNITMSEQ = @POLineSeq  else  select @CallNumber = CALLNBR, @RMA = RETDOCID, @RTVNumber = RTV_Number, @WONumber = WORKORDNUM   from SVC30701 where ORDDOCID = @PONumber and LNITMSEQ = @POLineSeq  if @RMA > ''  BEGIN  select @POfound = 2  select @RMA = RETDOCID, @RMALine = LNSEQNBR, @PrevStatus = SVC05200.RETSTAT , @ReceivedStatus = SVC05501.Received_Status   from SVC05200 left join SVC05501 on  SVC05200.RETTYPE = SVC05501.RETTYPE   where SVC05200.ORDDOCID = @PONumber and SVC05200.TRANSLINESEQ = @POLineSeq  update SVC05200 set RMA_Status = 5, RETSTAT = @ReceivedStatus, Received = 1,  RETUDATE = @UserDate, Return_Time = @NowTime,Return_QTY = Return_QTY + @Qty,  Return_Location_Code = @Location ,  SVC_Extended_Return_Pric = SVC_Return_Price * (Return_QTY + @Qty), SVC_Orig_Ext_Return_Pric = Originating_Return_Price * (Return_QTY + @Qty)  where RETDOCID = @RMA and LNSEQNBR = @RMALine  if exists(select * from SVC05001 where RETDOCID = @RMA and LNSEQNBR = @RMALine)  update SVC05001 set Shipped = 1, Received = 1 where RETDOCID = @RMA and LNSEQNBR = @RMALine  exec SVC_RMA_Set_HDR_Status @RMA   select @Auditdesc ='IN-TRAN Receiving: Rcv. Number/Line Number : '+ rtrim(@RCVNumber)+ '/' + rtrim(cast(@RCVLineSeq as char(20)))  exec SVC_Create_RMA_Audit  @RMA,@RMALine, @PrevStatus,@ReceivedStatus, @Auditdesc,@UserID  END  else if @RTVNumber > ''  BEGIN  select @RTVNumber = RTV_Number, @RTVLine = RTV_Line, @RTVType = RTV_Type, @AddressCode = LOCNCODE, @RTVStatus_Current = RTV_Status,  @RMA = RETDOCID, @RMALine = LNSEQNBR, @ProcessLine = SVC_Process_SEQ_Number, @PrevStatus = RTV_Return_Status  from SVC05601 where Transfer_Reference = @PONumber and TRANSLINESEQ = @POLineSeq   select @RecStat = RTV_Received_Status, @PartialRcvStat = isnull(SVC_Partial_Received_Sta, RTV_Received_Status), @Return_Path = RTV_Routing from SVC05003 where RTV_Type = @RTVType  select @RTVStatus = 5, @POfound = 1  if (select (QUANTITY - QTYRECVD) from SVC05601 where RTV_Number = @RTVNumber and RTV_Line = @RTVLine) > @Qty  select @RecStat = isnull(@PartialRcvStat,@RecStat), @RTVStatus = 4  if @RTVStatus_Current < 3 and @Return_Path = 2   select @RecStat = @PrevStatus, @RTVStatus = @RTVStatus_Current   update SVC05601 set RTV_Status = @RTVStatus, receiptdate = @UserDate, Receipt_Time = @NowTime,   POPRCTNM = @RCVNumber, RCPTLNNM = @RCVLineSeq, QTY_To_Receive = QTY_To_Receive - @Qty, QTYRECVD = QTYRECVD + @Qty,  Return_Item_Number = @ItemNumber, LOCNCODE = @Location, RTV_Return_Status = @RecStat   where RTV_Number = @RTVNumber and RTV_Line = @RTVLine  exec SVC_RTV_Set_HDR_Values @RTVNumber  if @Tracking = 1 and @EnableBin = 1  update SVC05612 set LOCNCODE = @Location, TOBIN = @Bin, POSTED = 1 where RTV_Number = @RTVNumber and RTV_Line = @RTVLine  if @RMA > ''  exec SVC_RTV_Update_RMAProcessStatus @RTVNumber, @RTVLine, @RecStat,1  select @POfound =1  select @Auditdesc ='IN-TRAN Receiving: Rcv. Number/Line Number : '+ rtrim(@RCVNumber)+ '/' + rtrim(cast(@RCVLineSeq as char(20)))  exec SVC_Create_RTV_Audit  @RTVNumber,@RTVLine, @PrevStatus,@RecStat, @Auditdesc,@UserID,@NowDateTime,@NowDateTime  END  else if @CallNumber > ''  BEGIN  select @CallNumber = CALLNBR,   @SrvRecType = SRVRECTYPE,  @EquipLine = EQPLINE,  @LineItemType = LINITMTYP,  @LineItemSeq = LNITMSEQ,  @CMPNTSEQ = CMPNTSEQ,  @ToLocation = LOCNCODE,  @QtyBO = QTYBACKO,  @AddressOption = SVC_Address_Option,  @MiscAddressCode = SVC_Misc_Address_Code,  @Description = ITEMDESC,  @OriginalUoM = UOFM  from SVC00203  where ORDDOCID = @PONumber and TRANSLINESEQ = @POLineSeq   select @Status = Parts_Available_Status from SVC00998  if @LineItemType = 'P'  BEGIN  select @POfound = 3  if @Qty > @QtyBO   select @QtyUpdated = @QtyBO  else  select @QtyUpdated = @Qty  exec SVC_Get_QtyInBase @ItemNumber,@OriginalUoM,2,@QtyInBase OUTPUT    update SVC00203 set QTYBACKO = QTYBACKO - @QtyUpdated ,  ATYALLOC = ATYALLOC + @QtyUpdated,  SRVSTAT = @Status  where  @CallNumber = CALLNBR and   @SrvRecType = SRVRECTYPE and  @EquipLine = EQPLINE and  @LineItemType = LINITMTYP and  @LineItemSeq = LNITMSEQ and  CMPNTSEQ = @CMPNTSEQ  if @Tracking = 1 and @EnableBin = 1  exec SVC_Bin_CreateBinWork 1, @SrvRecType, @CallNumber, @LineItemSeq,  @ItemNumber, @Location, @Location, @Bin, @Bin, @QtyUpdated   if @CMPNTSEQ > 0   exec svcUpdateKitBOQty @SrvRecType, @CallNumber, @EquipLine, @LineItemSeq  select @QtyAll = @QtyUpdated * @QtyInBase   exec SVC_Allocate_Quantity @ItemNumber, @Location, @QtyAll  exec SVC_Set_SC_HDR_Status @SrvRecType, @CallNumber  select @AddressCode = ADRSCODE, @Customer = CUSTNMBR from SVC00200 where  CALLNBR = @CallNumber and SRVRECTYPE = @SrvRecType  END  END  else if @WONumber > ''  BEGIN  select @WONumber = WORKORDNUM,   @WORecType = WORECTYPE,  @LineItemType = LINITMTYP,  @LineItemSeq = LNITMSEQ,  @ToLocation = LOCNCODE,  @QtyBO = QTYBACKO,  @Description = ITEMDESC,  @OriginalUoM = UOFM  from SVC06101 where ORDDOCID = @PONumber and TRANSLINESEQ = @POLineSeq  if @Qty > @QtyBO   select @QtyUpdated = @QtyBO  else  select @QtyUpdated = @Qty   select @Status = WOENTSTA from SVC00998  exec SVC_Get_QtyInBase @ItemNumber,@OriginalUoM,2,@QtyInBase OUTPUT    exec SVC_Bin_CreateBinWork 5, @WORecType, @WONumber, @LineItemSeq,  @ItemNumber, @Location, @Location, @Bin, @Bin, @QtyUpdated   update SVC06101 set QTYBACKO = QTYBACKO - @QtyUpdated,  ATYALLOC = ATYALLOC + @QtyUpdated,  WOSTAT = @Status  where  @WONumber = WORKORDNUM and   @WORecType = WORECTYPE and  @LineItemType = LINITMTYP and  @LineItemSeq = LNITMSEQ  select @QtyAll = @QtyUpdated * @QtyInBase , @POfound = 4  exec SVC_Allocate_Quantity @ItemNumber, @Location, @QtyAll  exec SVC_Calc_WO_Status @WONumber   END  if @Tracking >= 2   BEGIN  declare pop_Cursor cursor for select ITEMNMBR,SERLTNUM, SLTSQNUM, BIN, SERLTQTY, UNITCOST, DATERECD, DTSEQNUM,MFGDATE, EXPNDATE  from POP30330 where POPRCTNM = @RCVNumber and RCPTLNNM = @RCVLineSeq  open pop_Cursor   fetch next from pop_Cursor into @ItemNumber, @SerialNumber, @SerialSEQ, @Bin, @SERLTQTY, @item_cost, @rcv_date,@date_seq ,@ExpDate,@MfgDate  while @@FETCH_STATUS = 0  BEGIN  if @POfound = 1   begin  select top 1 @RTVSerialSEQ = SLTSQNUM, @EquipID = EQUIPID, @OldSerialNumber = SERLNMBR, @OldItemNumber = ITEMNMBR from SVC05602  where RTV_Number = @RTVNumber and RTV_Line = @RTVLine and POSTED = 0  if @EquipID > 0 and @SupersseionEnabled = 1   begin  exec SVC_RTV_UpdateSupersession @EquipID output, @SerialNumber, @ItemNumber, '', @UserID  exec SVC_Create_Serial_Audit @EquipID,'',@OldSerialNumber,'','Updated Serial via IN-TRAN Rcv.',@UserID  if @EquipID = 0 or @EquipID is null  exec SVC_Create_Serial_MSTR @SerialNumber,@ItemNumber,@Customer,@AddressCode,@UserID,@VendorID,@EquipID output  end  else  begin  if @Tracking = 2  exec SVC_Create_Serial_MSTR @SerialNumber,@ItemNumber,@Customer,@AddressCode,@UserID,@VendorID,@EquipID output  end  update SVC05602 set SVC_Return_Serial_ID = @SerialNumber, Return_Serial_Number = @SerialNumber, Return_Item_Number = @ItemNumber,  Return_Equipment_ID = @EquipID, MARKED = 1, POSTED = 1, TOBIN = @Bin, TRXSORCE = 'IN-TRAN RCV'  where RTV_Number = @RTVNumber and RTV_Line = @RTVLine and SLTSQNUM = @RTVSerialSEQ  end   else if @POfound = 2   begin  select top 1 @RTVSerialSEQ = SLTSQNUM, @EquipID = Return_Equipment_ID  from SVC05255 where RETDOCID = @RMA and Return_Record_Type = 2 and LNSEQNBR = @RMALine  and Return_Item_Number = @ItemNumber and Return_Serial_Number = @SerialNumber and POSTED = 0   update SVC05255 set MARKED = 1, POSTED = 1  where RETDOCID = @RMA and Return_Record_Type = 1 and LNSEQNBR = @RMALine and SLTSQNUM = @RTVSerialSEQ  select @AddressCode = ADRSCODE from RM00101 where CUSTNMBR = @ReturnCustomer  exec SVC_Update_Equip_Customer @SerialNumber, @ItemNumber, @ReturnCustomer, @AddressCode, @EquipID  end   else if @POfound = 3    begin  exec SVC_Service_Call_Create_Lot @SrvRecType, @CallNumber,   @EquipLine ,@LineItemSeq ,'I',@SerialNumber,@ItemNumber,@Location,  @item_cost ,@rcv_date,@date_seq ,@SERLTQTY,@Bin ,@ExpDate,@MfgDate, @CMPNTSEQ  if not exists(select * from SVC00300 where SERLNMBR = @SerialNumber and ITEMNMBR = @ItemNumber )  exec SVC_Create_Serial_MSTR @SerialNumber,@ItemNumber,@Customer,@AddressCode,@UserID,@VendorID,@EquipID output   end   fetch next from pop_Cursor into @ItemNumber, @SerialNumber, @SerialSEQ, @Bin, @SERLTQTY, @item_cost, @rcv_date,@date_seq ,@ExpDate,@MfgDate  END  deallocate  pop_Cursor    END END return     
GO
GRANT EXECUTE ON  [dbo].[svcInTransitItemReceived] TO [DYNGRP]
GO

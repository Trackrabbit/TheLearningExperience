SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMApply]  @I_vAPTODCNM char(21),    @I_vAPFRDCNM char(21),    @I_vAPPTOAMT numeric(19,5),   @I_vAPFRDCTY integer,    @I_vAPTODCTY integer,    @I_vDISTKNAM numeric(19,5) = null,  @I_vWROFAMNT numeric(19,5) = 0,   @I_vAPPLYDATE datetime = null,   @I_vGLPOSTDT datetime = null,   @I_vUSRDEFND1 char(50) = null,       @I_vUSRDEFND2 char(50) = null,       @I_vUSRDEFND3 char(50) = null,       @I_vUSRDEFND4 varchar(8000) = null,  @I_vUSRDEFND5 varchar(8000) = null,  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iTempValuesErrState int,  @iTempValuesErrString varchar(255),  @CMPANYID smallint,  @INTERID char(5),  @iAddCodeErrState int,     @iStatus int,      @OpenWork tinyint,     @InvoiceRemaining numeric(19,5),   @InvoiceOrigAmt numeric(19,5),    @PaymentRemaining numeric(19,5),   @PaymentOrigAmt numeric(19,5),    @ApplyErrString varchar(255),    @ApplyFromCUSTNMBR char(15),    @ApplyFromGLPostDate datetime,    @ApplyFromDOCDATE datetime,    @TOCURNCYID char(15),     @TOCURRNIDX smallint,     @FROMCURNCYID char(15),     @FROMCURRNIDX smallint,     @FUNCRIDX smallint,     @CPRCSTNM char(15) ,     @POSTED tinyint,     @PPSAMDED numeric(19,5),    @GSTDSAMT numeric(19,5),    @ApplyToGLPostDate datetime,    @ApplyToDOCDATE datetime,    @InvoiceCUSTNMBR char(15),    @PaymentCUSTNMBR char(15),    @AGNGBUKT smallint,     @iCustomState int,  @iCustomErrString varchar(255),  @Tbl char(18),  @DexRowID int,  @oExists int,  @OInsStatus int,  @DexLockErrorState int,  @iError int,  @O_oErrorState int,  @AmntRem numeric(19,5),  @iUpdDistErrState int,  @TRXSORCE char(13),  @iTrxSorceErrState int,  @DINVPDOF datetime,  @DISAVAMT numeric(19,5),  @Apply smallint,  @DISTKNNA numeric(19,5),  @DOCAMNT numeric(19,5),  @DISCDATE datetime,  @autocalc smallint,  @DISAVTKN numeric(19,5),  @FsclPeriod smallint,  @YEAR1 smallint,  @JRNENTRY int,  @O_tOUTOK smallint,  @iJrnlEntryErrState int,  @SQNCLINE numeric (19,5),  @iGLTrxLineInsertErrState int,  @iGLTrxLineInsertErrString varchar(255),  @iGLTrxHdrInsertErrState int,  @iGLTrxHdrInsertErrString varchar(255),  @O_iErrorStateAASub int,  @O_iErrorStringAASub varchar(255),  @ORMSTRNM char(64),  @CurrDate char(12),  @ActIdx int,  @DSCRIPTN char(30),  @iCursorError int,  @cSEQNUMBR int,  @cDISTTYPE smallint,  @cDOCNUMBR char(30),  @DEBITAMT numeric (19,5),  @CRDTAMNT numeric (19,5),  @FUNLCURR char(15),  @DECPLCUR smallint,  @RMTRKDAV tinyint,        @PTDUSRID char(10)  select  @iTempValuesErrState = 0,  @iTempValuesErrString = '',  @INTERID = '',  @O_iErrorState = 0,    @OpenWork = 1,     @oErrString = '',    @Tbl = '',  @DexRowID = 0,  @oExists = 0,  @OInsStatus = 0,  @DexLockErrorState = 0,  @CPRCSTNM = '',     @AmntRem = 0,  @iUpdDistErrState = 0,  @TRXSORCE = '',  @iTrxSorceErrState = 0,  @DINVPDOF = '',  @DISAVAMT = 0,  @DISTKNNA = 0,  @DOCAMNT = 0,  @TOCURNCYID = '',  @TOCURRNIDX = 0,  @FROMCURNCYID = '',  @FROMCURRNIDX = 0,  @DISCDATE = '',  @autocalc = 0,  @DISAVTKN = 0,  @FsclPeriod = 0,  @YEAR1 = 0,  @JRNENTRY = 0,  @O_tOUTOK = 0,  @iJrnlEntryErrState = 0,  @SQNCLINE = 0,  @iGLTrxLineInsertErrState = 0,  @iGLTrxLineInsertErrString = '',  @iGLTrxHdrInsertErrState = 0,  @iGLTrxHdrInsertErrString = '',  @ORMSTRNM = '',  @CurrDate = '',  @ActIdx = 0,  @DSCRIPTN = '',  @iCursorError = 0,  @cSEQNUMBR = 0,  @cDISTTYPE = 0,  @cDOCNUMBR = '',  @DEBITAMT = 0,  @CRDTAMNT = 0,  @FUNLCURR = '',  @DECPLCUR = 0,  @RMTRKDAV = 0,         @PTDUSRID = ''  exec @iStatus = taRMApplyPre  @I_vAPTODCNM output,  @I_vAPFRDCNM output,  @I_vAPPTOAMT output,  @I_vAPFRDCTY output,  @I_vAPTODCTY output,  @I_vDISTKNAM output,  @I_vWROFAMNT output,  @I_vAPPLYDATE output,    @I_vGLPOSTDT output,    @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 1798    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vAPTODCNM is null or  @I_vAPFRDCNM is null or  @I_vAPPTOAMT is null or  @I_vAPFRDCTY is null or  @I_vAPTODCTY is null) begin  select @O_iErrorState = 562    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @INTERID = INTERID, @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select @RMTRKDAV = RMTRKDAV from RM40101 (nolock)  select @FUNLCURR = FUNLCURR from MC40000 (nolock) select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@I_vAPTODCNM = '') begin  select @O_iErrorState = 563    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @CurrDate = convert(varchar(12),getdate())  if (@I_vAPFRDCNM = '') begin  select @O_iErrorState = 564    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAPPTOAMT < 0) begin  select @O_iErrorState = 565     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vAPFRDCTY <> 7) and (@I_vAPFRDCTY <> 8)and (@I_vAPFRDCTY <> 9)) begin  select @O_iErrorState = 184     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vAPTODCTY <> 1) and (@I_vAPTODCTY <> 3)and (@I_vAPTODCTY <> 4) and (@I_vAPTODCTY <> 5)) begin  select @O_iErrorState = 1660     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (not exists (select 1 from RM20101 (nolock) where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM)) begin  select @O_iErrorState = 568     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDISTKNAM is null) begin  select @autocalc = 1 end  if (exists(select 1 from RM00401 (nolock) where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM and DCSTATUS = 1)) begin  select @OpenWork = 1 end else begin  if (exists(select 1 from RM00401 (nolock) where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM and DCSTATUS = 2))  begin  select @OpenWork = 2  end  else  begin  select @O_iErrorState = 569    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @FUNCRIDX = FUNCRIDX from MC40000 (nolock)  if (@OpenWork = 1) begin  if (@I_vAPFRDCTY = 9)  begin  select @FROMCURNCYID = CURNCYID  from RM10201 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  end  else  begin  select @FROMCURNCYID = CURNCYID  from RM10301 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  end   select @TOCURNCYID = CURNCYID  from RM20101 (nolock)  where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM end else begin  select @FROMCURNCYID = CURNCYID  from RM20101 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM   select @TOCURNCYID = CURNCYID  from RM20101 (nolock)  where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM end  select @TOCURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @TOCURNCYID select @FROMCURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @FROMCURNCYID  if ((@TOCURRNIDX <> 0) or (@FROMCURRNIDX <> 0)) begin  if ((@TOCURRNIDX <> @FUNCRIDX and @TOCURRNIDX <> 0) or (@FROMCURRNIDX <> @FUNCRIDX and @FROMCURRNIDX <> 0))  begin  select @O_iErrorState = 4694     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @InvoiceOrigAmt = ORTRXAMT, @InvoiceRemaining = CURTRXAM, @InvoiceCUSTNMBR = CUSTNMBR  from RM20101 (nolock)  where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM  if (@I_vAPPTOAMT > @InvoiceOrigAmt) begin  select @O_iErrorState = 570    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vAPPTOAMT + isnull(@I_vDISTKNAM,0) + @I_vWROFAMNT) > @InvoiceRemaining) begin  select @O_iErrorState = 574     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@OpenWork = 2) begin    select @PaymentOrigAmt = ORTRXAMT, @PaymentRemaining = CURTRXAM, @PaymentCUSTNMBR = CUSTNMBR, @DexRowID = DEX_ROW_ID  from RM20101 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM end else begin    select @PaymentOrigAmt = ORTRXAMT, @PaymentRemaining = CURTRXAM, @PaymentCUSTNMBR = CUSTNMBR, @DexRowID = DEX_ROW_ID  from RM10201 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM end  if (@I_vAPPTOAMT > @PaymentRemaining) begin  select @O_iErrorState = 664    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@InvoiceCUSTNMBR <> @PaymentCUSTNMBR) begin  select @CPRCSTNM = CPRCSTNM from RM00101 (nolock) where CUSTNMBR = @InvoiceCUSTNMBR   if (@CPRCSTNM <> @PaymentCUSTNMBR)  begin  select @O_iErrorState = 165    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@OpenWork = 1) begin  select @Tbl = rtrim(db_name()) + '.dbo.RM10201'  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @Tbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 3386    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vAPFRDCTY = 9  begin  select  @ApplyFromCUSTNMBR = CUSTNMBR,  @ApplyFromDOCDATE = DOCDATE,  @ApplyFromGLPostDate = GLPOSTDT,  @POSTED = POSTED,  @PPSAMDED = PPSAMDED,  @GSTDSAMT = GSTDSAMT,  @FROMCURNCYID = CURNCYID  from RM10201 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  end  else  begin  select  @ApplyFromCUSTNMBR = CUSTNMBR,  @ApplyFromDOCDATE = DOCDATE,  @ApplyFromGLPostDate = GLPOSTDT,  @POSTED = POSTED,  @PPSAMDED = PPSAMDED,  @GSTDSAMT = GSTDSAMT,  @FROMCURNCYID = CURNCYID  from RM10301 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  end   select @DISCDATE = DISCDATE,  @ApplyToDOCDATE = DOCDATE,  @ApplyToGLPostDate = GLPOSTDT,  @AGNGBUKT = AGNGBUKT,  @DISAVAMT = DISAVAMT,  @I_vDISTKNAM =     case  when (@I_vDISTKNAM is null) and (@ApplyFromDOCDATE <= @DISCDATE)   then DISAVAMT  when (@I_vDISTKNAM is null) and (@ApplyFromDOCDATE > @DISCDATE)  then 0  else @I_vDISTKNAM  end,  @TOCURNCYID = CURNCYID  from RM20101 (nolock) where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM   select @TOCURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @TOCURNCYID  select @FROMCURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @FROMCURNCYID   if (@autocalc = 1)  begin  select @I_vAPPTOAMT =  case  when @ApplyFromDOCDATE <= @DISCDATE  then @I_vAPPTOAMT - @DISAVAMT  else @I_vAPPTOAMT  end  end   select @AmntRem = CURTRXAM - @I_vDISTKNAM - @I_vAPPTOAMT from RM20101 (nolock) where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM   if ((@AmntRem > 0) and (@autocalc = 1))  begin  select @I_vDISTKNAM = 0,  @I_vAPPTOAMT = @I_vAPPTOAMT + @DISAVAMT,  @DISAVAMT = 0       end   if ((@AmntRem = 0) and (@autocalc = 1))  begin  select @DISAVTKN = @DISAVAMT  end   if ((@AmntRem = 0) and (@autocalc = 1))  begin  select @DISAVTKN = @DISAVAMT  end   if (@autocalc = 0)  begin  if (@I_vDISTKNAM > @DISAVAMT)  begin  select @DISAVTKN = @DISAVAMT  select @DISAVAMT = @I_vDISTKNAM       end  else  begin  select @DISAVTKN = @I_vDISTKNAM  select @DISAVAMT = @I_vDISTKNAM       end  end   if (@AmntRem < 0)  begin  select @O_iErrorState = 4695    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@AmntRem = 0)  begin  select @DINVPDOF = convert(varchar(12),getdate())  end   if @I_vAPFRDCTY = 9  begin  update RM10201 set  CURTRXAM = CURTRXAM - @I_vAPPTOAMT,  DISTKNAM = DISTKNAM + @I_vDISTKNAM,  DISAVTKN = DISAVTKN + @DISAVTKN,  WROFAMNT = WROFAMNT + @I_vWROFAMNT  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  end  else  begin  update RM10301 set  APPLDAMT = APPLDAMT + @I_vAPPTOAMT,  ACCTAMNT = ACCTAMNT - @I_vAPPTOAMT  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  end   if (@@error <> 0)  begin  select @O_iErrorState = 668    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update RM20101 set  CURTRXAM = CURTRXAM - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT,  DINVPDOF = @DINVPDOF,  DISTKNAM = DISTKNAM + @I_vDISTKNAM,  DISAVTKN = DISAVTKN + @DISAVTKN,  WROFAMNT = WROFAMNT + @I_vWROFAMNT  where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM  if (@@error <> 0)  begin  select @O_iErrorState = 164    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update RM00103 set  AGPERAMT_1 = case  when @AGNGBUKT = 1  then AGPERAMT_1 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_1  end,  AGPERAMT_2 = case  when @AGNGBUKT = 2  then AGPERAMT_2 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_2  end,  AGPERAMT_3 = case  when @AGNGBUKT = 3  then AGPERAMT_3 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_3  end,  AGPERAMT_4 = case  when @AGNGBUKT = 4  then AGPERAMT_4 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_4  end,  AGPERAMT_5 = case  when @AGNGBUKT = 5  then AGPERAMT_5 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_5  end,  AGPERAMT_6 = case  when @AGNGBUKT = 6  then AGPERAMT_6 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_6  end,  AGPERAMT_7 = case  when @AGNGBUKT = 7  then AGPERAMT_7 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_7  end,  CUSTBLNC = CUSTBLNC - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT,  NUMADTPL =  case  when @AmntRem = 0  then NUMADTPL + 1  else NUMADTPL  end,  NUMADTPY =  case  when @AmntRem = 0  then NUMADTPY + 1  else NUMADTPY  end  where CUSTNMBR = @InvoiceCUSTNMBR   if (@@error <> 0)  begin  select @O_iErrorState = 207    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @Tbl = rtrim(db_name()) + '.dbo.RM20101'  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @Tbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 1645    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select  @ApplyFromCUSTNMBR = CUSTNMBR,  @ApplyFromDOCDATE = DOCDATE,  @ApplyFromGLPostDate = GLPOSTDT,  @POSTED = 1,  @PPSAMDED = PPSAMDED,  @GSTDSAMT = GSTDSAMT,  @FROMCURNCYID = CURNCYID  from RM20101 (nolock)  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM   select @DISCDATE = DISCDATE,  @ApplyToDOCDATE = DOCDATE,  @ApplyToGLPostDate = GLPOSTDT,  @AGNGBUKT = AGNGBUKT,  @DISAVAMT = DISAVAMT,  @I_vDISTKNAM =     case  when (@I_vDISTKNAM is null) and (@ApplyFromDOCDATE <= @DISCDATE)   then DISAVAMT  when (@I_vDISTKNAM is null) and (@ApplyFromDOCDATE > @DISCDATE)  then 0  else @I_vDISTKNAM  end,  @TOCURNCYID = CURNCYID  from RM20101 (nolock)  where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM   select @TOCURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @TOCURNCYID  select @FROMCURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @FROMCURNCYID   if (@autocalc = 1)  begin  select @I_vAPPTOAMT =  case  when (@ApplyFromDOCDATE <= @DISCDATE)   then @I_vAPPTOAMT - @DISAVAMT  else @I_vAPPTOAMT  end  end   select @AmntRem = CURTRXAM - @I_vDISTKNAM - @I_vAPPTOAMT - @I_vWROFAMNT from RM20101 (nolock) where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM   if ((@AmntRem > 0) and (@autocalc = 1))  begin  select @I_vDISTKNAM = 0,  @I_vAPPTOAMT = @I_vAPPTOAMT + @DISAVAMT,  @DISAVAMT = 0       end   if ((@AmntRem = 0) and (@autocalc = 1))  begin  select @DISAVTKN = @DISAVAMT  end   if (@autocalc = 0)  begin  if (@I_vDISTKNAM > @DISAVAMT)  begin  select @DISAVTKN = @DISAVAMT  end  else  begin  select @DISAVTKN = @I_vDISTKNAM  end  end   if (@AmntRem < 0)  begin  select @O_iErrorState = 676    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@AmntRem = 0)  begin  select @DINVPDOF = convert(varchar(12),getdate())  end   select @FsclPeriod = PERIODID,  @YEAR1 = YEAR1  from SY40100 (nolock)  where FORIGIN = 0 and @ApplyFromDOCDATE >= PERIODDT and @ApplyFromDOCDATE <= PERDENDT and SERIES = 3 and ODESCTN = 'Receivables Apply Doc.'   update RM20101 set  CURTRXAM = CURTRXAM - @I_vAPPTOAMT,  DINVPDOF =       case  WHEN @I_vAPPLYDATE is null  THEN @DINVPDOF  ELSE @I_vAPPLYDATE  end,  DISTKNAM = DISTKNAM + @I_vDISTKNAM,  DISAVTKN = @DISAVAMT,  WROFAMNT = WROFAMNT + @I_vWROFAMNT  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  if (@@error <> 0)  begin  select @O_iErrorState = 669    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update RM20101 set  CURTRXAM = CURTRXAM - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT,  DINVPDOF = @DINVPDOF,  DISTKNAM = DISTKNAM + @I_vDISTKNAM,  DISAVTKN = @DISAVAMT,  WROFAMNT = WROFAMNT + @I_vWROFAMNT  where RMDTYPAL = @I_vAPTODCTY and DOCNUMBR = @I_vAPTODCNM  if (@@error <> 0)  begin  select @O_iErrorState = 163    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update RM00103 set  CUSTBLNC =  case  when @I_vWROFAMNT > 0 or @I_vDISTKNAM > 0  then CUSTBLNC - @I_vWROFAMNT - @I_vDISTKNAM  else CUSTBLNC  end,  AGPERAMT_1 = case  when @AGNGBUKT = 1  then AGPERAMT_1 - @I_vDISTKNAM - @I_vWROFAMNT   else AGPERAMT_1 + @I_vAPPTOAMT     end,  AGPERAMT_2 = case  when @AGNGBUKT = 2  then AGPERAMT_2 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_2  end,  AGPERAMT_3 = case  when @AGNGBUKT = 3  then AGPERAMT_3 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_3  end,  AGPERAMT_4 = case  when @AGNGBUKT = 4  then AGPERAMT_4 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_4  end,  AGPERAMT_5 = case  when @AGNGBUKT = 5  then AGPERAMT_5 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_5  end,  AGPERAMT_6 = case  when @AGNGBUKT = 6  then AGPERAMT_6 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_6  end,  AGPERAMT_7 = case  when @AGNGBUKT = 7  then AGPERAMT_7 - @I_vAPPTOAMT - @I_vDISTKNAM - @I_vWROFAMNT  else AGPERAMT_7  end,  TDTKNYTD = case  when @I_vDISTKNAM > 0  then TDTKNYTD + @I_vDISTKNAM  else TDTKNYTD  end,  TDTKNLTD =  case  when @I_vDISTKNAM > 0  then TDTKNLTD + @I_vDISTKNAM  else TDTKNLTD  end,  TDISAYTD =  case  when @DISAVTKN > 0  then TDISAYTD - @DISAVTKN  else TDISAYTD  end,  TWROFYTD =  case  when @I_vWROFAMNT > 0  then TWROFYTD + @I_vWROFAMNT  else TWROFYTD  end,  TWROFLTD =  case  when @I_vWROFAMNT > 0  then TWROFLTD + @I_vWROFAMNT  else TWROFLTD  end,  NUMADTPL = case  when @AmntRem = 0  then NUMADTPL + 1  else NUMADTPL  end,  NUMADTPY = case  when @AmntRem = 0  then NUMADTPY + 1  else NUMADTPY  end  where CUSTNMBR = @InvoiceCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 211    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  update RM00104 set  SMRYWROF = SMRYWROF + @I_vWROFAMNT,  SMRYDISC = SMRYDISC + @I_vDISTKNAM  where YEAR1 = @YEAR1 and PERIODID = @FsclPeriod and HISTTYPE = 1 and CUSTNMBR = @InvoiceCUSTNMBR if (@@error <> 0) begin  select @O_iErrorState = 6611    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  update RM00104 set  SMRYWROF = SMRYWROF + @I_vWROFAMNT,  SMRYDISC = SMRYDISC + @I_vDISTKNAM  where YEAR1 = @YEAR1 and PERIODID = @AGNGBUKT and HISTTYPE = 0 and CUSTNMBR = @InvoiceCUSTNMBR if (@@error <> 0) begin  select @O_iErrorState = 6612    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (((@DISAVTKN > 0) or ((@DISAVAMT = 0) and (@I_vDISTKNAM > 0)) or (@I_vWROFAMNT > 0) or ((@DISAVAMT > 0) and (@AmntRem = 0))) and @OpenWork = 2)  begin  exec @iStatus = taGetTrxSourceNumber  3,  'RMAPY',  1,  @TRXSORCE output,  @iTrxSorceErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iTrxSorceErrState <> 0 or @TRXSORCE  = ''))  begin  if (@iTrxSorceErrState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iTrxSorceErrState  end  select @O_iErrorState = 4658   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vDISTKNAM is not null)  begin  select @DISTKNNA = @I_vDISTKNAM - @DISAVAMT end  if (@DISTKNNA < 0) begin  select @DISTKNNA = 0 end  if (@O_iErrorState = 0) begin  if (exists(select 1 from RM20201 (nolock) where APFRDCTY = @I_vAPFRDCTY and APFRDCNM = @I_vAPFRDCNM  and APTODCTY = @I_vAPTODCTY and APTODCNM = @I_vAPTODCNM))  begin  select @O_iErrorState = 670   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  insert RM20201  (  CUSTNMBR,  APTODCNM,  APTODCTY,  APTODCDT,  ApplyToGLPostDate,  APPTOAMT,  APFRDCNM,  APFRDCTY,  APFRDCDT,  ApplyFromGLPostDate,  FROMCURR,  TRXSORCE,  DISTKNAM,  DISAVTKN,  WROFAMNT,  DATE1,  GLPOSTDT,  POSTED,  GSTDSAMT,  PPSAMDED,  TAXDTLID,  CURNCYID,  CURRNIDX,  ORAPTOAM,  ORDISTKN,  ORDATKN,  ORWROFAM,  RLGANLOS,  APYFRMRNDAMT,  APYTORNDAMT,  APYTORNDDISC,  OAPYFRMRNDAMT,  OAPYTORNDAMT,  OAPYTORNDDISC,  ActualApplyToAmount,  ActualDiscTakenAmount,  ActualDiscAvailTaken,  ActualWriteOffAmount,  CPRCSTNM,  APFRMAPLYAMT,  APFRMDISCTAKEN,  APFRMDISCAVAIL,  APFRMWROFAMT  )  select  @InvoiceCUSTNMBR,    @I_vAPTODCNM,     @I_vAPTODCTY,     @ApplyToDOCDATE,    @ApplyToGLPostDate,    @I_vAPPTOAMT,     @I_vAPFRDCNM,     @I_vAPFRDCTY,     @ApplyFromDOCDATE,    @ApplyFromGLPostDate,    @FROMCURNCYID,     @TRXSORCE,     @I_vDISTKNAM,     @DISAVAMT,      @I_vWROFAMNT,     case      WHEN @I_vAPPLYDATE is null   THEN convert(varchar(12),getdate())   ELSE @I_vAPPLYDATE  end,  case       WHEN @I_vGLPOSTDT is null  THEN @ApplyFromGLPostDate  ELSE @I_vGLPOSTDT  end,  @POSTED,     @GSTDSAMT,     @PPSAMDED,     '',      @TOCURNCYID,     case      when @TOCURRNIDX = 0  then @FUNCRIDX  else @TOCURRNIDX  end,  @I_vAPPTOAMT,     @I_vDISTKNAM,     @DISAVAMT,      @I_vWROFAMNT,     0,      0,      0,      0,      0,      0,      0,      @I_vAPPTOAMT,      @I_vDISTKNAM,     @DISAVAMT,      @I_vWROFAMNT,     @CPRCSTNM,     @I_vAPPTOAMT,     @I_vDISTKNAM,     @DISAVAMT,      @I_vWROFAMNT     if (@@error <> 0)  begin  select @O_iErrorState = 677    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  select @Apply =  case  when @OpenWork = 1  then 2  else 1  end  select @DOCAMNT = @DISTKNNA + @I_vWROFAMNT  create table #records (SEQNUMBR int, DISTTYPE smallint, DOCNUMBR char(20))  create table #TempValues (  KEYVALUE varchar(255),  STRVALUE01 varchar(255),    STRVALUE02 varchar(255),    STRVALUE03 varchar(255),    STRVALUE04 varchar(255),    STRVALUE05 varchar(255),    STRVALUE06 varchar(255),    STRVALUE07 varchar(255),    STRVALUE08 varchar(255),    STRVALUE09 varchar(255),    STRVALUE10 varchar(255),    INTVALUE01 int,      INTVALUE02 int,      INTVALUE03 int,      INTVALUE04 int,      INTVALUE05 int,      INTVALUE06 int,      INTVALUE07 int,      INTVALUE08 int,      INTVALUE09 int,      INTVALUE10 int,      NUMVALUE01 numeric(19,5),    NUMVALUE02 numeric(19,5),    NUMVALUE03 numeric(19,5),    NUMVALUE04 numeric(19,5),    NUMVALUE05 numeric(19,5),    NUMVALUE06 numeric(19,5),    NUMVALUE07 numeric(19,5),    NUMVALUE08 numeric(19,5),    NUMVALUE09 numeric(19,5),    NUMVALUE10 numeric(19,5),    DATEVLUE01 datetime,     DATEVLUE02 datetime,     DATEVLUE03 datetime,     DATEVLUE04 datetime,     DATEVLUE05 datetime )     if ((@I_vDISTKNAM > 0) or (@I_vWROFAMNT > 0) or ((@DISAVAMT > 0) and (@AmntRem = 0))) begin  if ((@I_vAPPTOAMT + isnull(@I_vDISTKNAM,0) + @I_vWROFAMNT) = @InvoiceRemaining)  begin  select @PTDUSRID = 'PAID'  end  else  begin  select @PTDUSRID = ''  end   exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL    = @I_vAPFRDCTY,  @I_vDOCNUMBR    = @I_vAPFRDCNM,  @I_vCUSTNMBR    = @ApplyFromCUSTNMBR,  @I_vCURRNIDX    = @TOCURRNIDX,  @I_vCURNCYID    = @TOCURNCYID,  @I_vPTDUSRID    = @PTDUSRID,    @I_vTRADEAMT     = 0,  @I_vFREIGHTAMT    = 0,  @I_vMISCAMNT    = 0,  @I_vCASHAMT    = 0,  @I_vCashCHEKBKID  = 0,  @I_vCHECKAMT    = 0,  @I_vCheckCHEKBKID = 0,  @I_vCRCRDAMT    = 0,  @I_vTDISTKAMT    = @I_vDISTKNAM,  @I_vDISAVAMT    = @DISAVAMT,  @I_vCRCRDNAM    = '',  @I_vDISCRTND    = 0,     @I_vDOCAMNT    = @DOCAMNT,  @I_vSLSAMNT    = 0,  @I_vCOSTAMNT    = 0,  @I_vCOMDLRAM    = 0,  @I_vRATETPID    = '',     @I_vXCHGRATE    = 0,     @I_vEXCHDATE    = '',     @I_vEXPNDATE    = '',     @I_vEXGTBLID    = '',     @I_vTIME1    = '',     @I_vORCTRXAM    = 0,     @I_vORSLSAMT    = 0,     @I_vORCSTAMT    = 0,     @I_vORFRTAMT    = 0,     @I_vORMISCAMT   = 0,     @I_vORTAXAMT    = 0,     @I_vORCASAMT    = 0,     @I_vORCHKAMT    = 0,     @I_vORCCDAMT    = 0,     @I_vORAPPAMT    = 0,     @I_vORDISTKN    = @I_vDISTKNAM,   @I_vORDAVAMT    = @DISAVAMT,    @I_vORDATKN    = 0,     @I_vORDISRTD    = 0,     @I_vORDDLRAT    = 0,     @I_vORTDISAM    = 0,     @I_vORORGTRX    = @DOCAMNT,    @I_vORWROFAM    = @I_vWROFAMNT,   @I_vORCOMAMT    = 0,     @I_vORBKTSLS    = 0,     @I_vORBKTFRT    = 0,     @I_vORBKTMSC    = 0,     @I_vApply   = @Apply,  @I_vTRXSORCE   = @TRXSORCE,  @I_vWROFAMNT   = @I_vWROFAMNT,  @I_vDistRef   = '',  @I_vPOSTEDDT   = '',  @I_vCMPANYID   = @CMPANYID,  @I_vINTERID    = @INTERID,   @I_vRTCLCMTD   = -1,     @I_vDECPLCUR   = @DECPLCUR,  @I_vCREATEDIST   = 1,  @O_iErrorState    = @iUpdDistErrState output,  @oErrString     = @oErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iUpdDistErrState  select @O_iErrorState = 4657   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update RM10101 set  ORCRDAMT = 0,  ORDBTAMT = 0  where RMDTYPAL = @I_vAPFRDCTY and DOCNUMBR = @I_vAPFRDCNM  if (@@error <> 0)  begin  select @O_iErrorState = 8327    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (((@I_vDISTKNAM > 0) or (@I_vWROFAMNT > 0) or ((@DISAVAMT > 0) and (@AmntRem = 0))) and @OpenWork = 2) begin  exec @iStatus = glGetNextJournalEntry  1,  0,  @JRNENTRY output,  @O_tOUTOK output,  @iJrnlEntryErrState output  select @iError = @@error   if ((@iStatus <> 0) or (@iJrnlEntryErrState <> 0) or (@O_tOUTOK <> 1) or (@iError <> 0))  begin  select @O_iErrorState = 5467    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   declare PostGL INSENSITIVE cursor for select  SEQNUMBR,  DISTTYPE,  DOCNUMBR  from #records (nolock) where DOCNUMBR = @I_vAPFRDCNM  order by DISTTYPE   open PostGL  select @iCursorError = @@cursor_rows   if (@iCursorError > 0)  begin  fetch next from PostGL into  @cSEQNUMBR,  @cDISTTYPE,  @cDOCNUMBR  while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 5468    break  end   select @SQNCLINE = @SQNCLINE + 16384   select @ActIdx = DSTINDX,  @DEBITAMT = DEBITAMT,  @CRDTAMNT = CRDTAMNT,  @DSCRIPTN =  case  when DISTTYPE = 2  then 'Term Discounts Taken'  when DISTTYPE = 3  then 'Accounts Receivable'  when DISTTYPE = 4  then 'Write Offs'  when DISTTYPE = 5  then 'Term Discounts Available'  end  from RM10101 (nolock) where SEQNUMBR = @cSEQNUMBR and DOCNUMBR = @cDOCNUMBR and DISTTYPE = @cDISTTYPE   select @ORMSTRNM = CUSTNAME  from RM00101 (nolock) where CUSTNMBR = @InvoiceCUSTNMBR  exec @iStatus = taTempValues  @I_vSETORGET = 1,  @I_vINTVALUE01 = 40,   @O_iErrorState = @iTempValuesErrState output,  @oErrString = @iTempValuesErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iTempValuesErrState <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 5473    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = taGLTransactionLineInsert  @I_vBACHNUMB = @TRXSORCE,  @I_vJRNENTRY = @JRNENTRY,  @I_vSQNCLINE = @SQNCLINE,  @I_vACTINDX = @ActIdx,  @I_vCRDTAMNT = @CRDTAMNT,  @I_vDEBITAMT = @DEBITAMT,  @I_vDSCRIPTN = @DSCRIPTN,  @I_vORCTRNUM = @I_vAPFRDCNM,  @I_vORDOCNUM = @I_vAPFRDCNM,  @I_vORMSTRID = @InvoiceCUSTNMBR,  @I_vORMSTRNM = @ORMSTRNM,  @I_vOrigSeqNum = @cSEQNUMBR,  @I_vORTRXTYP = 9,  @O_iErrorState = @iGLTrxLineInsertErrState output,  @oErrString = @iGLTrxLineInsertErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iGLTrxLineInsertErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGLTrxLineInsertErrString  select @O_iErrorState = 5470    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  deallocate PostGL  return (@O_iErrorState)  end   fetch next from PostGL into  @cSEQNUMBR,  @cDISTTYPE,  @cDOCNUMBR  end  end  deallocate PostGL   if (@I_vGLPOSTDT is null)  begin  select @I_vGLPOSTDT = @ApplyFromGLPostDate  end   exec @iStatus = taTempValues  @I_vSETORGET = 1,  @I_vSTRVALUE01 = @TRXSORCE,    @I_vSTRVALUE02 = @I_vAPFRDCNM,    @I_vDATEVLUE01 = @CurrDate,    @I_vINTVALUE01 = 9,     @I_vINTVALUE02 = 0,      @I_vINTVALUE03 = 0,      @I_vINTVALUE04 = 0,     @O_iErrorState = @iTempValuesErrState output,  @oErrString = @iTempValuesErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iTempValuesErrState <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 5474    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  exec @iStatus = taGLTransactionHeaderInsert  @I_vBACHNUMB = @TRXSORCE,  @I_vJRNENTRY = @JRNENTRY,  @I_vREFRENCE = 'Receivables Apply Doc.',  @I_vTRXDATE = @I_vGLPOSTDT,  @I_vTRXTYPE = 0,  @I_vSQNCLINE = 16384,  @I_vSOURCDOC = 'APL',  @I_vSERIES = 3,  @O_iErrorState = @iGLTrxHdrInsertErrState output,  @oErrString = @iGLTrxHdrInsertErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iGLTrxHdrInsertErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGLTrxHdrInsertErrString  select @O_iErrorState = 5472    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  EXEC @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,  @I_vtable_path_name = @Tbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output if ((@DexLockErrorState <> 0) or (@@error <> 0) or (@iStatus <> 0)) begin  select @O_iErrorState = 1644   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taRMApplyPost  @I_vAPTODCNM,  @I_vAPFRDCNM,  @I_vAPPTOAMT,  @I_vAPFRDCTY,  @I_vAPTODCTY,  @I_vDISTKNAM,  @I_vWROFAMNT,  @I_vAPPLYDATE,     @I_vGLPOSTDT,    @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1799    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMApply] TO [DYNGRP]
GO

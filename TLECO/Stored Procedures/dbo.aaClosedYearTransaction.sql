SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create    procedure [dbo].[aaClosedYearTransaction]  @I_nYearClosed     smallint,  @I_nNextYear     smallint,  @I_nPERCENT_FACTOR    int = 0,  @I_nDECPLfunCUR     int = 0,  @I_nCMPID      int,  @I_caaAuditTrailPrefix   char(5),  @O_nRun_Reconcile_Flag   int  = NULL output,  @O_nSQL_Error_State    int   = NULL output,  @O_nHdrID      int output,  @I_nOpenYear     int,   @I_nForUtility     int = 0,  @I_nAAFromOpen     bit,  @I_nCalledFromUtility   bit,  @I_nMCRegistered    tinyint,  @I_nHdrID      int,  @I_nInsertHistYearTable   int = 0,  @I_StartingJournalEntry   int = 0  as  begin   Declare   @l_dYearEndDate    datetime,   @l_dYearStartDate   datetime,   @l_nTRUE     int,   @l_nStatus     int,   @l_nError     int,   @l_cmdExec     varchar(8000),   @l_cmdExecReDesign   varchar(8000),   @l_cmdNExec     nvarchar(1000),   @l_ParmDefinition   nvarchar(500),      @l_nACTINDX     int,   @l_nACCTTYPE    smallint,   @l_nDEBITAMT    numeric(19,5),   @l_nCRDTAMNT    numeric(19,5),   @l_nORDBTAMT    numeric(19,5),   @l_nORCRDAMT    numeric(19,5),   @l_cCURNCYID    char(15),   @l_nCURRNIDX    smallint,   @l_cRATETPID    char(15),   @l_cEXGTBLID    char(15),   @l_nXCHGRATE    numeric(19,7),   @l_dEXCHDATE    datetime,   @l_dTIME1     datetime,   @l_nRTCLCMTD    smallint,   @l_nDENXRATE    numeric(19,7),   @l_nMCTRXSTT    smallint,   @l_naaGLDistIDcnt   int,   @l_cINTERID     char(5),   @l_nSEQNUMBR    int,   @l_daaChangeDate   datetime,   @laaChangeTime    datetime,      @l_cBBF      varchar(255),   @l_nBAL_SHEET    int,   @l_naaTrxDimID    int,   @l_naaTrxCodeID    int,   @l_naaGLHdrID    int,   @l_naaGLDistID    int,   @l_naaGLAssignID   int,   @l_cpreCURNCYID    char(15),   @l_npreACTINDX    int,   @l_nDEX_ROW_ID    int,   @l_caaAuditTrailCode  char(13),   @l_nSuccess     smallint,   @l_cSOURCDOC    char(11),   @l_iTRERCLSG    int,   @l_iDIVACTSG    int,   @l_nPOST_ACCT    int,   @l_nPROFIT_AND_LOSS   int,   @l_nUNIT_ACCT    int,   @l_cDIVACTSG    varchar(9),   @l_nDSTINDX     int,   @l_nsumDEBITAMT    numeric(19,5),   @l_nsumCRDTAMNT    numeric(19,5),   @l_nsumORDBTAMT    numeric(19,5),   @l_nsumORCRDAMT    numeric(19,5),   @l_nsplitDEBITAMT   numeric(19,5),   @l_nsplitCRDTAMNT   numeric(19,5),   @l_nsplitORDBTAMT   numeric(19,5),   @l_nsplitORCRDAMT   numeric(19,5),   @l_nPRCNTAGE    numeric(19,5),   @l_nCntACTINDX    int,   @l_dPostDate    datetime,   @l_cTrxSource    char(13),   @l_nRecTrxSeq    numeric(19,5),   @l_nDECPLCUR    int,   @l_cFunc_Currency   char(15),   @l_naaBrowseType   int,   @l_nHISTORYR    int,   @tBeforeSegmentLength  tinyint,   @tDivisionalSegmentLength tinyint,   @tAfterSegmentLength  tinyint,   @cAccountNumberString  char(128) ,      @l_TRXSORCE     char(13),   @l_TRXDATE     datetime,   @l_RCTRXSEQ     numeric(19,5),   @l_OPENYEAR     int,   @l_cPANDL     varchar(255),   @l_REFRENCE     char(31),   @l_LASTUSER     char(15),   @l_LSTDTEDT     datetime,   @l_USWHPSTD     char(15),   @l_ORGNTSRC     char(15),   @l_ORGNATYP     smallint,   @l_QKOFSET     smallint,   @l_SERIES     smallint,   @l_ORTRXSRC     char(13),      @l_cTrxDimFields   varchar(8000),   @l_cTrxDimFieldsWithPrefix varchar(8000),   @l_nStart_Journal_Entry  int,   @l_nAllow_Reporting_Ledgers tinyint,   @l_nDROWID     int,   @l_cDiv_Close_Table   char(25),   @l_nRE_Account_Index  int,   @l_Ledger_ID    tinyint,   @l_nSGMTNUMB    int,   @l_aaTrxDimTempTable  varchar(50),   @l_PrimaryKey    varchar(50),   @l_aBBFGetDataTempTable  varchar(50),   @l_aaGLHdrBBFTempTable  varchar(50),   @l_aaGLDistBBFTempTable  varchar(50),   @l_aaGLAssingBBFTempTable varchar(50),   @l_aaGLCodeBBFTempTable  varchar(50),   @l_aaGLDistBBFDispTempTable varchar(50),   @l_aaBalShAccTempTable  varchar(50),   @l_aaPLAccTempTable   varchar(50),   @l_InsertTable    varchar(10),  @RCTRXSEQ numeric(19,5),  @TRXSORCE char(13)  set @l_cDiv_Close_Table = null    if @I_StartingJournalEntry = 0   begin   IF @I_nHdrID <> 0   BEGIN   IF @I_nOpenYear = 1   BEGIN   SELECT @l_nStart_Journal_Entry = JRNENTRY FROM AAG30000   WHERE aaGLHdrID = @I_nHdrID   END   ELSE   BEGIN   SELECT @l_nStart_Journal_Entry = JRNENTRY FROM AAG40000   WHERE aaGLHdrID = @I_nHdrID   END   END   end   else   begin   set @l_nStart_Journal_Entry = @I_StartingJournalEntry   end    if @I_nForUtility = 0   begin      INSERT INTO AAG40000 SELECT aaGLHdrID, JRNENTRY, RCTRXSEQ, YEAR1, aaTRXType, aaGLTRXSource, aaTRXSource, GLPOSTDT, Ledger_ID   FROM AAG30000 WHERE aaGLHdrID = @I_nHdrID    DELETE FROM AAG30000 WHERE aaGLHdrID = @I_nHdrID    INSERT INTO AAG40001 SELECT aaGLHdrID,aaGLDistID, INTERID, CorrespondingUnit, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT, CRDTAMNT,   ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX, RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD, DENXRATE,MCTRXSTT, SEQNUMBR,   aaCustID,aaVendID,aaSiteID,aaItemID, EMPLOYID,aaAssetID,aaBookID,aaCopyStatus, SOURCDOC, aaChangeDate,aaChangeTime,AA_CL_Status, getutcdate()  FROM AAG30001 WHERE aaGLHdrID = @I_nHdrID    DELETE FROM AAG30001 WHERE aaGLHdrID = @I_nHdrID    INSERT INTO AAG40002 SELECT aaGLHdrID,aaGLDistID,aaGLAssignID, DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent, DistRef,NOTEINDX, getutcdate()  FROM AAG30002 WHERE aaGLHdrID = @I_nHdrID    DELETE FROM AAG30002 WHERE aaGLHdrID = @I_nHdrID    INSERT INTO AAG40003 SELECT aaGLHdrID, aaGLDistID, aaGLAssignID, aaTrxDimID, aaTrxCodeID, getutcdate()  FROM AAG30003 WHERE aaGLHdrID = @I_nHdrID    DELETE FROM AAG30003 WHERE aaGLHdrID = @I_nHdrID   end    SELECT @l_aaTrxDimTempTable = replace('##aaTrxDimTemp' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaGLHdrBBFTempTable = replace('##aaGLHdrBBFTemp' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaGLDistBBFTempTable = replace('##aaGLDistBBFTemp' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaGLAssingBBFTempTable = replace('##aaGLAssingBBFTemp' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaGLCodeBBFTempTable = replace('##aaGLCodeBBFTemp' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaGLDistBBFDispTempTable = replace('##aaGLDistBBFDispTemp' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaBalShAccTempTable = replace('##aaBalShAcc' + REPLACE(system_user,'''','') + db_name(),' ','')   SELECT @l_aaPLAccTempTable = replace('##aaPLAcc' + REPLACE(system_user,'''','') + db_name(),' ','')    select @l_nSGMTNUMB = DIVACTSG, @l_nRE_Account_Index = RERINDX from GL40000    select @l_naaGLDistIDcnt = 1,   @l_cINTERID = db_name(),   @l_nSEQNUMBR = 0,   @l_daaChangeDate = convert(char(10), getdate(), 111),   @laaChangeTime = convert(char(8), getdate(), 108),   @l_nDECPLCUR = 0,   @l_nHISTORYR = 0,   @l_nAllow_Reporting_Ledgers = 0    select @l_cFunc_Currency = FUNLCURR from MC40000    if @I_nOpenYear = 0   begin   select @l_nHISTORYR = HISTORYR from SY40101 where YEAR1 = @I_nYearClosed + 1   if @l_nHISTORYR = 0   select @I_nOpenYear = 1   end    exec @l_nStatus = DYNAMICS.dbo.smGetConstantInt 'TRUE',@l_nTRUE output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    exec @l_nStatus = DYNAMICS.dbo.smGetConstantInt 'UNIT_ACCT', @l_nUNIT_ACCT output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    exec @l_nStatus = DYNAMICS.dbo.smGetConstantInt 'BAL_SHEET', @l_nBAL_SHEET output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12030, @l_cINTERID, @l_cBBF output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12125, @l_cINTERID, @l_cPANDL output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    exec @l_nStatus = DYNAMICS.dbo.smGetConstantInt 'POST_ACCT', @l_nPOST_ACCT output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    exec @l_nStatus = DYNAMICS.dbo.smGetConstantInt 'PROFIT_AND_LOSS', @l_nPROFIT_AND_LOSS output, @O_nSQL_Error_State output   select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )   return (@l_nStatus)    select @l_caaAuditTrailCode = '',   @l_naaGLHdrID = 0,   @l_iTRERCLSG = 0,   @l_iDIVACTSG = 0    create table #Period_Table (   fiscal_year smallint NULL,   fiscal_period smallint NULL,   period_start_date datetime NULL,   period_end_date datetime NULL,   period_closed tinyint NULL   )   exec sm_Build_Period_Table    select   @l_dYearEndDate  = LSTFSCDY,   @l_dYearStartDate = FSTFSCDY   from   SY40101   where   YEAR1 = @I_nYearClosed    update   AAG30000   set   YEAR1  = fiscal_year   from   #Period_Table   where   AAG30000.YEAR1 = @I_nYearClosed   and AAG30000.GLPOSTDT  > @l_dYearEndDate   and AAG30000.GLPOSTDT  >= period_start_date   and AAG30000.GLPOSTDT  <= period_end_date    if @@rowcount > 0   select @O_nRun_Reconcile_Flag = @l_nTRUE    update   AAG30000   set   YEAR1  = @I_nNextYear   where   AAG30000.YEAR1 = @I_nYearClosed   and AAG30000.GLPOSTDT  > @l_dYearEndDate    if @@rowcount > 0   select @O_nRun_Reconcile_Flag = @l_nTRUE    SELECT @l_PrimaryKey = 'select ''PK'' + right(' + @l_aaGLHdrBBFTempTable + ',len(' + @l_aaGLHdrBBFTempTable + ')-2)'    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLHdrBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLHdrBBFTempTable + ']   CREATE TABLE [' + @l_aaGLHdrBBFTempTable + '] (   [aaGLHdrID] [int] NOT NULL default(0) ,   [JRNENTRY] [int] NOT NULL default(0) ,   [RCTRXSEQ] [numeric](19, 5) NOT NULL default(0) ,   [YEAR1] [smallint] NOT NULL default(0) ,   [aaTRXType] [smallint] NOT NULL default(0) ,   [aaGLTRXSource] [char] (13) NOT NULL default('''') ,   [aaTRXSource] [char] (13) NOT NULL default('''') ,   [GLPOSTDT] [datetime] NOT NULL default(''1/1/1900'') ,   [Ledger_ID] [smallint] NOT NULL ,   [DEX_ROW_ID] [int] IDENTITY (1, 1) NOT NULL ,   CONSTRAINT [' + @l_PrimaryKey + '] PRIMARY KEY  CLUSTERED   (   [aaGLHdrID]   )  ON [PRIMARY] ,   CHECK (datepart(hour,[GLPOSTDT]) = 0 and datepart(minute,[GLPOSTDT]) = 0 and datepart(second,[GLPOSTDT]) = 0 and datepart(millisecond,[GLPOSTDT]) = 0)   ) ON [PRIMARY]')    SELECT @l_PrimaryKey = 'PK' + right(@l_aaGLDistBBFTempTable, len(@l_aaGLDistBBFTempTable) - 2)   exec('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLDistBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLDistBBFTempTable + ']   CREATE TABLE [' + @l_aaGLDistBBFTempTable + '] (   [aaGLHdrID] [int] NOT NULL default(0) ,   [aaGLDistID] [int] NOT NULL default(0) ,   [INTERID] [char] (5) NOT NULL default('''') ,   [CorrespondingUnit] [char] (5) NOT NULL default('''') ,   [ACTINDX] [int] NOT NULL default(0) ,   [ACCTTYPE] [smallint] NOT NULL default(0) ,   [aaBrowseType] [smallint] NOT NULL default(0) ,   [DECPLACS] [smallint] NOT NULL default(0) ,   [DEBITAMT] [numeric](19, 5) NOT NULL default(0) ,   [CRDTAMNT] [numeric](19, 5) NOT NULL default(0) ,   [ORDBTAMT] [numeric](19, 5) NOT NULL default(0) ,   [ORCRDAMT] [numeric](19, 5) NOT NULL default(0) ,   [CURNCYID] [char] (15) NOT NULL default('''') ,   [CURRNIDX] [smallint] NOT NULL default(0) ,   [RATETPID] [char] (15) NOT NULL default('''') ,   [EXGTBLID] [char] (15) NOT NULL default('''') ,   [XCHGRATE] [numeric](19, 7) NOT NULL default(0) ,   [EXCHDATE] [datetime] NOT NULL default(''1/1/1900'') ,   [TIME1] [datetime] NOT NULL default(''1/1/1900'') ,   [RTCLCMTD] [smallint] NOT NULL default(0) ,   [DENXRATE] [numeric](19, 7) NOT NULL default(0) ,   [MCTRXSTT] [smallint] NOT NULL default(0) ,   [SEQNUMBR] [int] NOT NULL default(0) ,   [aaCustID] [char] (15) NOT NULL default('''') ,   [aaVendID] [char] (15) NOT NULL default('''') ,   [aaSiteID] [char] (11) NOT NULL default('''') ,   [aaItemID] [char] (31) NOT NULL default('''') ,   [EMPLOYID] [char] (15) NOT NULL default('''') ,   [aaCopyStatus] [smallint] NOT NULL default(0) ,   [aaChangeDate] [datetime] NOT NULL default(''1/1/1900'') ,   [aaChangeTime] [datetime] NOT NULL default(''1/1/1900'') ,   SOURCDOC char(11) not null default (''''),   [DEX_ROW_ID] [int] IDENTITY (1, 1) NOT NULL ,   CONSTRAINT [' + @l_PrimaryKey + '] PRIMARY KEY  CLUSTERED   (   [aaGLHdrID],   [aaGLDistID]   )  ON [PRIMARY] ,   CHECK (datepart(hour,[EXCHDATE])=(0) AND datepart(minute,[EXCHDATE])=(0) AND datepart(second,[EXCHDATE])=(0) AND datepart(millisecond,[EXCHDATE])=(0)),   CHECK (datepart(day,[TIME1])=(1) AND datepart(month,[TIME1])=(1) AND datepart(year,[TIME1])=(1900)),   CHECK (datepart(hour,[aaChangeDate])=(0) AND datepart(minute,[aaChangeDate])=(0) AND datepart(second,[aaChangeDate])=(0) AND datepart(millisecond,[aaChangeDate])=(0)),   CHECK (datepart(day,[aaChangeTime])=(1) AND datepart(month,[aaChangeTime])=(1) AND datepart(year,[aaChangeTime])=(1900))   ) ON [PRIMARY]')    SELECT @l_PrimaryKey = 'PK' + right(@l_aaGLAssingBBFTempTable, len( @l_aaGLAssingBBFTempTable) - 2)    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLAssingBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLAssingBBFTempTable + ']   CREATE TABLE [' + @l_aaGLAssingBBFTempTable + '] (   [aaGLHdrID] [int] NOT NULL default(0) ,   [aaGLDistID] [int] NOT NULL default(0) ,   [aaGLAssignID] [int] NOT NULL default(0) ,   [DEBITAMT] [numeric](19, 5) NOT NULL default(0) ,   [CRDTAMNT] [numeric](19, 5) NOT NULL default(0) ,   [ORDBTAMT] [numeric](19, 5) NOT NULL default(0) ,   [ORCRDAMT] [numeric](19, 5) NOT NULL default(0) ,   [aaAssignedPercent] [int] NOT NULL default(0) ,   [DistRef] [char] (31) NOT NULL  default(''''),   [NOTEINDX] [numeric](19, 5) NOT NULL default(0) ,   [aaAliasID] [int] NOT NULL default(0) ,   [DEX_ROW_ID] [int] IDENTITY (1, 1) NOT NULL ,   CONSTRAINT [' + @l_PrimaryKey + '] PRIMARY KEY  CLUSTERED   (   [aaGLHdrID],   [aaGLDistID],   [aaGLAssignID]   )  ON [PRIMARY]   ) ON [PRIMARY]')    SELECT @l_PrimaryKey = 'PK' + right(@l_aaGLCodeBBFTempTable, len(@l_aaGLCodeBBFTempTable) - 2)    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLCodeBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLCodeBBFTempTable + ']   CREATE TABLE [' + @l_aaGLCodeBBFTempTable + '] (   [aaGLHdrID] [int] NOT NULL default(0) ,   [aaGLDistID] [int] NOT NULL default(0) ,   [aaGLAssignID] [int] NOT NULL default(0) ,   [aaTrxDimID] [int] NOT NULL default(0) ,   [aaTrxCodeID] [int] NOT NULL default(0) ,   [DEX_ROW_ID] [int] IDENTITY (1, 1) NOT NULL ,   CONSTRAINT [' + @l_PrimaryKey + '] PRIMARY KEY  CLUSTERED   (   [aaGLHdrID],   [aaGLDistID],   [aaGLAssignID],   [aaTrxDimID]   )  ON [PRIMARY]   ) ON [PRIMARY]')    SELECT @l_PrimaryKey = 'PK' + right(@l_aaGLDistBBFDispTempTable, len(@l_aaGLDistBBFDispTempTable) - 2)   exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLDistBBFDispTempTable + '''    and type = ''U'') drop table [' + @l_aaGLDistBBFDispTempTable + ']   CREATE TABLE [' + @l_aaGLDistBBFDispTempTable + '] (   [aaGLHdrID] [int] NOT NULL default(0) ,   [aaGLDistID] [int] NOT NULL default(0) ,   [INTERID] [char] (5) NOT NULL default('''') ,   [CorrespondingUnit] [char] (5) NOT NULL default('''') ,   [ACTINDX] [int] NOT NULL default(0) ,   [ACCTTYPE] [smallint] NOT NULL default(0) ,   [aaBrowseType] [smallint] NOT NULL default(0) ,   [DECPLACS] [smallint] NOT NULL default(0) ,   [DEBITAMT] [numeric](19, 5) NOT NULL default(0) ,   [CRDTAMNT] [numeric](19, 5) NOT NULL default(0) ,   [ORDBTAMT] [numeric](19, 5) NOT NULL default(0) ,   [ORCRDAMT] [numeric](19, 5) NOT NULL default(0) ,   [CURNCYID] [char] (15) NOT NULL default('''') ,   [CURRNIDX] [smallint] NOT NULL default(0) ,   [RATETPID] [char] (15) NOT NULL default('''') ,   [EXGTBLID] [char] (15) NOT NULL default('''') ,   [XCHGRATE] [numeric](19, 7) NOT NULL default(0) ,   [EXCHDATE] [datetime] NOT NULL default(''1/1/1900'') ,   [TIME1] [datetime] NOT NULL default(''1/1/1900'') ,   [RTCLCMTD] [smallint] NOT NULL default(0) ,   [DENXRATE] [numeric](19, 7) NOT NULL default(0) ,   [MCTRXSTT] [smallint] NOT NULL default(0) ,   [SEQNUMBR] [int] NOT NULL default(0) ,   [aaCustID] [char] (15) NOT NULL default('''') ,   [aaVendID] [char] (15) NOT NULL default('''') ,   [aaSiteID] [char] (11) NOT NULL default('''') ,   [aaItemID] [char] (31) NOT NULL default('''') ,   [aaCopyStatus] [smallint] NOT NULL default(0) ,   [aaChangeDate] [datetime] NOT NULL default(''1/1/1900'') ,   [aaChangeTime] [datetime] NOT NULL default(''1/1/1900'') ,   SOURCDOC char(11) not null default (''''),   [aaDisplayDistID] [int] NOT NULL default(0) ,   [DEX_ROW_ID] [int] IDENTITY (1, 1) NOT NULL ,   CONSTRAINT [' + @l_PrimaryKey + '] PRIMARY KEY  CLUSTERED   (   [aaGLHdrID],   [aaDisplayDistID]   )  ON [PRIMARY] ,   CHECK (datepart(hour,[EXCHDATE])=(0) AND datepart(minute,[EXCHDATE])=(0) AND datepart(second,[EXCHDATE])=(0) AND datepart(millisecond,[EXCHDATE])=(0)),   CHECK (datepart(day,[TIME1])=(1) AND datepart(month,[TIME1])=(1) AND datepart(year,[TIME1])=(1900)),   CHECK (datepart(hour,[aaChangeDate])=(0) AND datepart(minute,[aaChangeDate])=(0) AND datepart(second,[aaChangeDate])=(0) AND datepart(millisecond,[aaChangeDate])=(0)),   CHECK (datepart(day,[aaChangeTime])=(1) AND datepart(month,[aaChangeTime])=(1) AND datepart(year,[aaChangeTime])=(1900))   ) ON [PRIMARY]')    SELECT @l_PrimaryKey = 'PK' + right(@l_aaTrxDimTempTable, len(@l_aaTrxDimTempTable) - 2)    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaTrxDimTempTable + '''    and type = ''U'') drop table [' + @l_aaTrxDimTempTable + ']   CREATE TABLE [' + @l_aaTrxDimTempTable + '] (   [aaTrxDimID] [int] NOT NULL ,   [aaOrder] [int] NOT NULL default(0) ,   CONSTRAINT [' + @l_PrimaryKey + '] PRIMARY KEY  CLUSTERED   (   [aaTrxDimID]   )  ON [PRIMARY]   ) ON [PRIMARY]')    IF @I_nAAFromOpen = 1    BEGIN   INSERT INTO AAG30002 (aaGLHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent)   SELECT aaGLHdrID,aaGLDistID,nCount + 1 as nCount,(DEBITAMT - aaAssignDbtSum) as DBTAMT,   (CRDTAMNT - aaAssignCrdSum) as CRDAMT,(ORDBTAMT - aaAssignOrgDbtSum) AS ORGDBTAMT,(ORCRDAMT - aaAssignOrgCrdSum) AS ORGCRDAMT,   (10000 - aaAssignmentSum) AS aaCreatePerc FROM (SELECT Assign.aaGLHdrID,Assign.aaGLDistID,dist.DEBITAMT,dist.CRDTAMNT,dist.ORDBTAMT,dist.ORCRDAMT,   Assign.aaAssignDbtSum,Assign.aaAssignCrdSum,Assign.aaAssignOrgDbtSum,Assign.aaAssignOrgCrdSum,Assign.aaAssignmentSum,Assign.nCount   FROM (SELECT aaGLHdrID,aaGLDistID,SUM(aaAssignedPercent) AS aaAssignmentSum,SUM(DEBITAMT) AS aaAssignDbtSum,SUM(CRDTAMNT) AS aaAssignCrdSum,   SUM(ORDBTAMT) AS aaAssignOrgDbtSum,SUM(ORCRDAMT) AS aaAssignOrgCrdSum,   Max(aaGLAssignID) as nCount FROM AAG30002   GROUP BY aaGLHdrID,aaGLDistID HAVING SUM(aaAssignedPercent)< 10000) Assign   INNER JOIN   AAG30000 Hdr on Hdr.aaGLHdrID = Assign.aaGLHdrID and Hdr.YEAR1 = @I_nYearClosed   INNER JOIN AAG30001 dist on dist.aaGLHdrID = Assign.aaGLHdrID and dist.aaGLDistID = Assign.aaGLDistID  AND LTRIM(RTRIM(dist.SOURCDOC)) = '' ) PartialData   END   ELSE    BEGIN   INSERT INTO AAG40002 (aaGLHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent)   SELECT aaGLHdrID,aaGLDistID,nCount + 1 as nCount,(DEBITAMT - aaAssignDbtSum) as DBTAMT,   (CRDTAMNT - aaAssignCrdSum) as CRDAMT,(ORDBTAMT - aaAssignOrgDbtSum) AS ORGDBTAMT,(ORCRDAMT - aaAssignOrgCrdSum) AS ORGCRDAMT,   (10000 - aaAssignmentSum) AS aaCreatePerc FROM (SELECT Assign.aaGLHdrID,Assign.aaGLDistID,dist.DEBITAMT,dist.CRDTAMNT,dist.ORDBTAMT,dist.ORCRDAMT,   Assign.aaAssignDbtSum,Assign.aaAssignCrdSum,Assign.aaAssignOrgDbtSum,Assign.aaAssignOrgCrdSum,Assign.aaAssignmentSum,Assign.nCount   FROM (SELECT aaGLHdrID,aaGLDistID,SUM(aaAssignedPercent) AS aaAssignmentSum,SUM(DEBITAMT) AS aaAssignDbtSum,SUM(CRDTAMNT) AS aaAssignCrdSum,   SUM(ORDBTAMT) AS aaAssignOrgDbtSum,SUM(ORCRDAMT) AS aaAssignOrgCrdSum,   COUNT(*) as nCount FROM AAG40002   GROUP BY aaGLHdrID,aaGLDistID HAVING SUM(aaAssignedPercent)< 10000) Assign   INNER JOIN   AAG40000 Hdr on Hdr.aaGLHdrID = Assign.aaGLHdrID and Hdr.YEAR1 = @I_nYearClosed   INNER JOIN AAG40001 dist on dist.aaGLHdrID = Assign.aaGLHdrID and dist.aaGLDistID = Assign.aaGLDistID  AND LTRIM(RTRIM(dist.SOURCDOC)) = '' ) PartialData   END    set @l_aBBFGetDataTempTable = ''    exec aagClosedYearTrxGetData   @I_nYearClosed,   @I_nNextYear,   @l_cTrxDimFields output,   @l_cTrxDimFieldsWithPrefix output,   @I_nAAFromOpen,   @I_nCalledFromUtility,   @l_cBBF,   @l_cPANDL,   @I_nHdrID,   @l_aaTrxDimTempTable,   @l_aBBFGetDataTempTable output    if ltrim(rtrim(@l_cTrxDimFields)) <> ''   begin   select @l_cTrxDimFields = ', ' + @l_cTrxDimFields   select @l_cTrxDimFieldsWithPrefix = ', ' + @l_cTrxDimFieldsWithPrefix   end    select @l_caaAuditTrailCode = aaTRXSource from AAG40000 where aaGLHdrID = @I_nHdrID   exec DYNAMICS.dbo.aagGetNextID 30000, @I_nCMPID, @l_naaGLHdrID out    if @I_nOpenYear = 1   begin   exec ('insert into [' + @l_aaGLHdrBBFTempTable + ']   (JRNENTRY,   aaGLHdrID,   RCTRXSEQ,   YEAR1,   aaTRXType,   aaGLTRXSource,   aaTRXSource,   GLPOSTDT,   Ledger_ID)   Select top 1 JRNENTRY,   ' + @l_naaGLHdrID + ',   RCTRXSEQ,   OPENYEAR,   1,   TRXSORCE,   + replace(''' + @l_caaAuditTrailCode + ''','''''''',''''''''''''),   TRXDATE,   Ledger_ID   from GL20000 where JRNENTRY = ' + @l_nStart_Journal_Entry + ' and OPENYEAR = ' + @I_nNextYear + '')   end   else   begin   exec ('insert into [' + @l_aaGLHdrBBFTempTable + ']   (JRNENTRY,   aaGLHdrID,   RCTRXSEQ,   YEAR1,   aaTRXType,   aaGLTRXSource,   aaTRXSource,   GLPOSTDT,   Ledger_ID)   Select top 1 JRNENTRY,   ' + @l_naaGLHdrID + ',   RCTRXSEQ,   HSTYEAR,   1,   TRXSORCE,   + replace(''' + @l_caaAuditTrailCode + ''','''''''',''''''''''''),   TRXDATE,   Ledger_ID   from GL30000 where JRNENTRY = ' + @l_nStart_Journal_Entry + ' and HSTYEAR = ' + @I_nNextYear + '')   end    IF EXISTS(SELECT TOP 1 1 FROM AAG40000 WHERE aaGLHdrID = @I_nHdrID)  BEGIN  SELECT @RCTRXSEQ = RCTRXSEQ, @TRXSORCE = aaGLTRXSource FROM AAG40000   WHERE aaGLHdrID = @I_nHdrID   END  ELSE  BEGIN  SELECT @RCTRXSEQ = 0, @TRXSORCE = ''   END    if @I_nOpenYear = 1   declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.DEBITAMT, GL20000.CRDTAMNT,   GL20000.ORDBTAMT, GL20000.ORCRDAMT, GL20000.CURNCYID, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL20000.JRNENTRY = @l_nStart_Journal_Entry  and OPENYEAR = @I_nNextYear   and RCTRXSEQ = @RCTRXSEQ and TRXSORCE = @TRXSORCE   order by GL20000.DEX_ROW_ID   else   declare glOpen cursor fast_forward for   Select GL30000.ACTINDX, GL00100.ACCTTYPE, GL30000.DEBITAMT, GL30000.CRDTAMNT,   GL30000.ORDBTAMT, GL30000.ORCRDAMT, GL30000.CURNCYID, GL30000.CURRNIDX,   GL30000.RATETPID, GL30000.EXGTBLID, GL30000.XCHGRATE, GL30000.EXCHDATE,   GL30000.TIME1, GL30000.RTCLCMTD, GL30000.DENXRATE, GL30000.MCTRXSTT,   GL30000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL30000.SEQNUMBR   from GL30000 Inner join GL00100 on GL30000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX AND PSTNGTYP = 0   where GL30000.JRNENTRY = @l_nStart_Journal_Entry and HSTYEAR = @I_nNextYear   and RCTRXSEQ = @RCTRXSEQ and TRXSORCE = @TRXSORCE   order by GL30000.DEX_ROW_ID    open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT,   @l_nORCRDAMT, @l_cCURNCYID, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   ' + @l_nDEBITAMT + ',   ' + @l_nCRDTAMNT + ',   ' + @l_nORDBTAMT + ',   ' + @l_nORCRDAMT + ',   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',   ''' + @l_cBBF + '''')    select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1  fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT,   @l_nORCRDAMT,@l_cCURNCYID, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaBalShAccTempTable + '''    and type = ''U'') drop table [' + @l_aaBalShAccTempTable + ']')    set @l_cmdExecReDesign = ''   select @l_cmdExecReDesign = 'select CURNCYID,   assin.ACTINDX,   case   when SUM(assin.DEBITAMT) > SUM(assin.CRDTAMNT) then   SUM(assin.DEBITAMT) - SUM(assin.CRDTAMNT)   else   0.0   end as DEBITAMT,   case   when SUM(assin.DEBITAMT) <= SUM(assin.CRDTAMNT) then   -1 * (SUM(assin.DEBITAMT) - SUM(assin.CRDTAMNT))   else   0.0   end as CRDTAMNT,   case   when SUM(assin.ORDBTAMT) > SUM(assin.ORCRDAMT) then   SUM(assin.ORDBTAMT) - SUM(assin.ORCRDAMT)   else   0.0   end as ORDBTAMT,   case   when SUM(assin.ORDBTAMT) <= SUM(assin.ORCRDAMT) then   -1 * (SUM(assin.ORDBTAMT) - SUM(assin.ORCRDAMT))   else   0.0   end as ORCRDAMT ' +   ltrim(rtrim(@l_cTrxDimFieldsWithPrefix)) +   ', IDENTITY(int, 1,1) AS DROWID, SEQNUMBR   into [' + @l_aaBalShAccTempTable + '] from [' + @l_aBBFGetDataTempTable + '] assin   inner join GL00100 acc on (assin.ACTINDX = acc.ACTINDX)   where (acc.ACCTTYPE = ' + ltrim(rtrim(@l_nUNIT_ACCT)) +   'or acc.PSTNGTYP = ' + ltrim(rtrim(@l_nBAL_SHEET)) + ')   group by  SEQNUMBR, assin.ACTINDX, assin.CURNCYID' +   ltrim(rtrim(@l_cTrxDimFieldsWithPrefix)) +   ' having SUM(assin.DEBITAMT)> 0 or SUM(assin.CRDTAMNT) > 0 or SUM(assin.ORDBTAMT) > 0 or SUM(assin.ORCRDAMT) > 0   order by assin.ACTINDX, assin.CURNCYID'    exec (@l_cmdExecReDesign)    exec ('DELETE FROM [' + @l_aaBalShAccTempTable + '] WHERE DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0')    exec ('declare aaBBFBSAcc cursor fast_forward for   select CURNCYID, ACTINDX, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, DROWID, SEQNUMBR from [' + @l_aaBalShAccTempTable + ']')   open aaBBFBSAcc    select @l_cpreCURNCYID = null, @l_npreACTINDX = null, @l_naaGLAssignID = 1    fetch next from aaBBFBSAcc into   @l_cCURNCYID, @l_nACTINDX, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT,   @l_nORCRDAMT, @l_nDROWID, @l_nSEQNUMBR    while @@fetch_status = 0   begin   select @l_naaGLDistID = ''   select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + ' and SOURCDOC = ''' + @l_cBBF + '''' + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + ' and SOURCDOC = ''' + @l_cBBF + ''''  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR)) 
  set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output    if @l_naaGLDistID = '' or @l_naaGLDistID = 0   begin    select @l_cSOURCDOC = @l_cBBF   if @I_nOpenYear = 1   begin   select @l_OPENYEAR = OPENYEAR, @l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL20000 where JRNENTRY = @l_nStart_Journal_Entry    select @l_nCURRNIDX = CURRNIDX from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID    insert into GL20000(OPENYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC)   values(@l_OPENYEAR,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nACTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC)    declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL20000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL20000.ACTINDX = @l_nACTINDX and GL20000.CURNCYID = @l_cCURNCYID and GL20000.SOURCDOC = @l_cSOURCDOC   order by GL20000.DEX_ROW_ID   end   else   begin   select @l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL30000 where JRNENTRY = @l_nStart_Journal_Entry   AND HSTYEAR = @I_nNextYear    insert into GL30000(HSTYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC)   values(@I_nNextYear,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nACTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC)    declare glOpen cursor fast_forward for   Select GL30000.ACTINDX, GL00100.ACCTTYPE, GL30000.CURRNIDX,   GL30000.RATETPID, GL30000.EXGTBLID, GL30000.XCHGRATE, GL30000.EXCHDATE,   GL30000.TIME1, GL30000.RTCLCMTD, GL30000.DENXRATE, GL30000.MCTRXSTT,   GL30000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL30000.SEQNUMBR   from GL30000 Inner join GL00100 on GL30000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL30000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL30000.ACTINDX = @l_nACTINDX and GL30000.CURNCYID = @l_cCURNCYID and GL30000.SOURCDOC = @l_cSOURCDOC   order by GL30000.DEX_ROW_ID   end   open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   0,   0,   0,   0,   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',        ''' + @l_cSOURCDOC + '''')    select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + ' and SOURCDOC = ''' + @l_cBBF + ''''  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))  else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + ' and SOURCDOC = ''' + @l_cBBF + ''''  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR)) 
   set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output   end    select @l_cmdNExec = N''   select @l_cmdNExec = N'Select @l_aaGLAssignIDOut = isnull(max(aaGLAssignID),0) + 1 from [' + @l_aaGLAssingBBFTempTable + '] where   aaGLDistID = ' + convert(varchar,@l_naaGLDistID) + ' and aaGLHdrID = ' + convert(varchar,@l_naaGLHdrID)   set @l_ParmDefinition = N'@l_aaGLAssignIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLAssignIDOut = @l_naaGLAssignID output    exec ('Insert into [' + @l_aaGLAssingBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   DEBITAMT,   CRDTAMNT,   ORDBTAMT,   ORCRDAMT )   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_nDEBITAMT + ',   ' + @l_nCRDTAMNT + ',   ' + @l_nORDBTAMT + ',   ' + @l_nORCRDAMT + '')    exec('declare AssignDim cursor fast_forward for   select aaTrxDimID from [' + @l_aaTrxDimTempTable + ']   order by aaOrder')   open AssignDim   fetch next from AssignDim into @l_naaTrxDimID   while @@fetch_status = 0   begin   select @l_cmdNExec = N''    select @l_cmdNExec = N'Select @l_naaTrxCodeIDOut = isnull([' + ltrim(rtrim(@l_naaTrxDimID)) + '], 0) from   [' + @l_aaBalShAccTempTable + '] where DROWID = ' + ltrim(rtrim(@l_nDROWID))    set @l_ParmDefinition = N'@l_naaTrxCodeIDOut int output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_naaTrxCodeIDOut = @l_naaTrxCodeID output    if @l_naaTrxCodeID <> 0   begin   exec ('Insert into [' + @l_aaGLCodeBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   aaTrxDimID,   aaTrxCodeID)   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_naaTrxDimID + ',   ' + @l_naaTrxCodeID + '')   end   fetch next from AssignDim into @l_naaTrxDimID   end   close AssignDim   deallocate AssignDim    select @l_naaGLAssignID = @l_naaGLAssignID + 1    fetch next from aaBBFBSAcc into   @l_cCURNCYID, @l_nACTINDX, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT,   @l_nORCRDAMT, @l_nDROWID, @l_nSEQNUMBR    end   close aaBBFBSAcc   deallocate aaBBFBSAcc   exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaBalShAccTempTable + '''    and type = ''U'') drop table [' + @l_aaBalShAccTempTable + ']')    exec ('declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.DEBITAMT, GL20000.CRDTAMNT,   GL20000.ORDBTAMT, GL20000.ORCRDAMT, GL20000.CURNCYID, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX and GL20000.ACTINDX not in(select ACTINDX from [' + @l_aaGLDistBBFTempTable + '])   where GL20000.JRNENTRY = ' + @l_nStart_Journal_Entry + ' and OPENYEAR = ' + @I_nNextYear  + '   and GL20000.RCTRXSEQ = ''' + @RCTRXSEQ + ''' and GL20000.TRXSORCE = ''' + @TRXSORCE + '''   order by GL20000.DEX_ROW_ID')    open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT,   @l_nORCRDAMT, @l_cCURNCYID, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   ' + @l_nDEBITAMT + ',   ' + @l_nCRDTAMNT + ',   ' + @l_nORDBTAMT + ',   ' + @l_nORCRDAMT + ',   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',   ''' + @l_cSOURCDOC + '''')   select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1    fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT,   @l_nORCRDAMT,@l_cCURNCYID, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    select @l_iTRERCLSG = TRERCLSG, @l_iDIVACTSG = DIVACTSG from GL40000    if @l_iTRERCLSG = 1   begin     set @l_cDiv_Close_Table = '##Divisional_Close'    if exists(select name from tempdb..sysobjects where name = '##Divisional_Close'    and type = 'U') drop table ##Divisional_Close   create table ##Divisional_Close(   SGMNTID char(67)  NOT NULL,   CURNCYID char(15)  NOT NULL,   CURRNIDX smallint  NOT NULL,   RTCLCMTD smallint  NOT NULL,   RATETPID char(15)  NOT NULL,   EXGTBLID char(15)  NOT NULL,   REARNAMT numeric(19,5)  NOT NULL,   ORIGAMT numeric(19,5)  NOT NULL,   RERINDX    int   NOT NULL)    exec @l_nStatus = glCalculateSegment   @l_nSGMTNUMB,   @tBeforeSegmentLength output,   @tDivisionalSegmentLength output,   @tAfterSegmentLength output,   @O_nSQL_Error_State output   if @O_nSQL_Error_State <> 0 return    select @tBeforeSegmentLength = @tBeforeSegmentLength + 1    if @I_nMCRegistered = @l_nTRUE   begin   insert into   ##Divisional_Close   (SGMNTID,   CURNCYID,   CURRNIDX,   RTCLCMTD,   RATETPID,   EXGTBLID,   REARNAMT,   ORIGAMT,   RERINDX)   select   distinct substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength),   CURNCYID,   max(CURRNIDX),   0,   '',   '',   SUM(DEBITAMT)-SUM(CRDTAMNT),   SUM(ORDBTAMT)-SUM(ORCRDAMT),   0   from   GL00105,   GL30000,   GL00100   where   GL00105.ACTINDX = GL30000.ACTINDX   and GL00100.ACTINDX = GL00105.ACTINDX   and GL00100.ACCTTYPE = @l_nPOST_ACCT   and GL00100.PSTNGTYP = @l_nPROFIT_AND_LOSS   and GL30000.HSTYEAR = @I_nYearClosed   group by substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength),CURNCYID   end   else   begin   insert into   ##Divisional_Close   (SGMNTID,   CURNCYID,   CURRNIDX,   RTCLCMTD,   RATETPID,   EXGTBLID,   REARNAMT,   ORIGAMT,   RERINDX)   select   distinct substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength),   '',   0,   0,   '',   '',   SUM(DEBITAMT)-SUM(CRDTAMNT),   0.00,   0   from   GL00105,   GL30000,   GL00100   where   GL00105.ACTINDX  = GL30000.ACTINDX   and GL00105.ACTINDX  = GL00100.ACTINDX   and GL00100.ACCTTYPE = @l_nPOST_ACCT   and GL00100.PSTNGTYP = @l_nPROFIT_AND_LOSS   and GL30000.HSTYEAR  = @I_nYearClosed   group by substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength)   end    select   @cAccountNumberString = ACTNUMST   from   GL00105   where   ACTINDX = @l_nRE_Account_Index    update   ##Divisional_Close   set   RERINDX =  GL00105.ACTINDX   from   GL00105   where   ACTNUMST = stuff(@cAccountNumberString,@tBeforeSegmentLength,   @tDivisionalSegmentLength,rtrim(SGMNTID))    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaPLAccTempTable + '''    and type = ''U'') drop table [' + @l_aaPLAccTempTable + ']')    select @l_cmdExec = ''   select @l_cmdExec = 'select CURNCYID, ' +   ' ACTNUMBR_' + ltrim(rtrim(@l_iDIVACTSG)) + ' DIVACTSG, ' +   ' case   when SUM(assin.DEBITAMT) > SUM(assin.CRDTAMNT) then   SUM(assin.DEBITAMT) - SUM(assin.CRDTAMNT)   else   0.0   end as DEBITAMT,   case   when SUM(assin.DEBITAMT) <= SUM(assin.CRDTAMNT) then   -1 * (SUM(assin.DEBITAMT) - SUM(assin.CRDTAMNT))   else   0.0   end as CRDTAMNT,   case   when SUM(assin.ORDBTAMT) > SUM(assin.ORCRDAMT) then   SUM(assin.ORDBTAMT) - SUM(assin.ORCRDAMT)   else   0.0   end as ORDBTAMT,   case   when SUM(assin.ORDBTAMT) <= SUM(assin.ORCRDAMT) then   -1 * (SUM(assin.ORDBTAMT) - SUM(assin.ORCRDAMT))   else   0.0   end as ORCRDAMT ' +   ltrim(rtrim(@l_cTrxDimFieldsWithPrefix)) +   ', IDENTITY(int, 1,1) AS DROWID, SEQNUMBR   into [' + @l_aaPLAccTempTable + ']   from [' + @l_aBBFGetDataTempTable + '] assin   inner join GL00100 acc on (assin.ACTINDX = acc.ACTINDX and acc.PSTNGTYP = ' +   ltrim(rtrim(@l_nPROFIT_AND_LOSS)) + ' and acc.ACCTTYPE = ' + ltrim(rtrim(@l_nPOST_ACCT)) + ')   group by  SEQNUMBR,ACTNUMBR_' + ltrim(rtrim(@l_iDIVACTSG)) +' ' +   ltrim(rtrim(@l_cTrxDimFieldsWithPrefix)) +   ', assin.CURNCYID   having SUM(assin.DEBITAMT)> 0 or SUM(assin.CRDTAMNT) > 0 or SUM(assin.ORDBTAMT) > 0 or SUM(assin.ORCRDAMT) > 0   order by DIVACTSG, assin.CURNCYID'   exec (@l_cmdExec)    exec ('DELETE FROM [' + @l_aaPLAccTempTable + '] WHERE DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0')    exec('declare aaBBFPLAcc cursor fast_forward for   select CURNCYID, DIVACTSG, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, DROWID, SEQNUMBR   from [' + @l_aaPLAccTempTable + ']')   open aaBBFPLAcc    fetch next from aaBBFPLAcc into @l_cCURNCYID, @l_cDIVACTSG, @l_nDEBITAMT,   @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT,   @l_nDROWID, @l_nSEQNUMBR   exec @l_nStatus = glCalculateSegment   @l_iDIVACTSG,   @tBeforeSegmentLength output,   @tDivisionalSegmentLength output,   @tAfterSegmentLength output,   @O_nSQL_Error_State output    select @l_nError = @@error   if @l_nStatus = 0 and @l_nError <> 0   begin   select @l_nStatus = @l_nError   return(@l_nStatus)   end    select @tBeforeSegmentLength = @tBeforeSegmentLength + 1    if  @I_nMCRegistered <> @l_nTRUE and @l_iTRERCLSG = @l_nTRUE   begin   select   @cAccountNumberString = ACTNUMST   from   GL00105   where   ACTINDX = @l_nRE_Account_Index    set @l_cmdNExec  =''   set @l_cmdNExec = ('update ' + @l_cDiv_Close_Table + ' set RERINDX = GL00105.ACTINDX from GL00105 where ACTNUMST =   stuff(''' + rtrim(ltrim(@cAccountNumberString)) + ''' , ' + rtrim(ltrim(@tBeforeSegmentLength)) + ', ' + rtrim(ltrim(@tDivisionalSegmentLength)) + ', rtrim(SGMNTID))')   exec (@l_cmdNExec)    end    while @@fetch_status = 0   begin   select @l_cmdNExec = N''    select @l_cmdNExec = N'Select @l_nACTINDXout = divcls.RERINDX, @l_nACCTTYPEout = ACCTTYPE from   GL00100 Inner join ' + ltrim(rtrim(@l_cDiv_Close_Table)) + ' divcls on   GL00100.ACTINDX = divcls.RERINDX where divcls.SGMNTID = ''' + ltrim(rtrim(@l_cDIVACTSG)) + ''''    set @l_ParmDefinition = N'@l_nACTINDXout int output, @l_nACCTTYPEout smallint output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_nACTINDXout = @l_nACTINDX output ,   @l_nACCTTYPEout = @l_nACCTTYPE output    if @l_nACCTTYPE <> @l_nPOST_ACCT    begin   select @l_cpreCURNCYID = null, @l_npreACTINDX = null, @l_naaGLAssignID = 1,   @l_nsumDEBITAMT = @l_nDEBITAMT,   @l_nsumCRDTAMNT = @l_nCRDTAMNT,   @l_nsumORDBTAMT = @l_nORDBTAMT,   @l_nsumORCRDAMT = @l_nORCRDAMT    select @l_nCntACTINDX = 0   select @l_nCntACTINDX = count(DSTINDX) from GL00103 where ACTINDX = @l_nACTINDX    declare allocation cursor fast_forward for   select DSTINDX, PRCNTAGE from GL00103 where ACTINDX = @l_nACTINDX   open allocation   fetch next from allocation into @l_nDSTINDX, @l_nPRCNTAGE   while @@fetch_status = 0    begin   select @l_nCntACTINDX = @l_nCntACTINDX - 1    select @l_naaGLDistID = 0   select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nDSTINDX) + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nDSTINDX)   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output    SELECT @l_cpreCURNCYID = @l_cCURNCYID, @l_npreACTINDX = @l_nACTINDX   select @l_nDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID   select @l_nsplitDEBITAMT = round((@l_nDEBITAMT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @I_nDECPLfunCUR),   @l_nsplitCRDTAMNT = round((@l_nCRDTAMNT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @I_nDECPLfunCUR),   @l_nsplitORDBTAMT = round((@l_nORDBTAMT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @l_nDECPLCUR),   @l_nsplitORCRDAMT = round((@l_nORCRDAMT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @l_nDECPLCUR)   if @l_nCntACTINDX > 0   begin   select @l_nsumDEBITAMT = @l_nsumDEBITAMT - @l_nsplitDEBITAMT,   @l_nsumCRDTAMNT = @l_nsumCRDTAMNT - @l_nsplitCRDTAMNT,   @l_nsumORDBTAMT = @l_nsumORDBTAMT - @l_nsplitORDBTAMT,   @l_nsumORCRDAMT = @l_nsumORCRDAMT - @l_nsplitORCRDAMT   end   else   begin   select @l_nsplitDEBITAMT = @l_nsumDEBITAMT,   @l_nsplitCRDTAMNT = @l_nsumCRDTAMNT,   @l_nsplitORDBTAMT = @l_nsumORDBTAMT,   @l_nsplitORCRDAMT = @l_nsumORCRDAMT   end    if @l_naaGLDistID = '' or @l_naaGLDistID = 0   begin   select @l_cSOURCDOC = @l_cPANDL   if @I_nOpenYear = 1   begin   select @l_OPENYEAR = OPENYEAR,@l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL20000 where JRNENTRY = @l_nStart_Journal_Entry   select @l_nCURRNIDX = CURRNIDX from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID    insert into GL20000(OPENYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@l_OPENYEAR,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nACTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL20000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL20000.ACTINDX = @l_nACTINDX and GL20000.CURNCYID = @l_cCURNCYID and GL20000.SOURCDOC = @l_cSOURCDOC   order by GL20000.DEX_ROW_ID   end   else   begin   select @l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL30000 where JRNENTRY = @l_nStart_Journal_Entry   AND HSTYEAR = @I_nNextYear    insert into GL30000(HSTYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@I_nNextYear,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nACTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL30000.ACTINDX, GL00100.ACCTTYPE, GL30000.CURRNIDX,   GL30000.RATETPID, GL30000.EXGTBLID, GL30000.XCHGRATE, GL30000.EXCHDATE,   GL30000.TIME1, GL30000.RTCLCMTD, GL30000.DENXRATE, GL30000.MCTRXSTT,   GL30000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL30000.SEQNUMBR   from GL30000 Inner join GL00100 on GL30000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL30000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL30000.ACTINDX = @l_nACTINDX and GL30000.CURNCYID = @l_cCURNCYID and GL30000.SOURCDOC = @l_cSOURCDOC   order by GL30000.DEX_ROW_ID   end   open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   0,   0,   0,   0,   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',   ''' + @l_cSOURCDOC + '''')    select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1    fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + ' and SOURCDOC <> ''' + @l_cBBF + ''''   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + ' and SOURCDOC <> ''' + @l_cBBF + ''''   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output   end   select @l_cmdNExec = N''   select @l_cmdNExec = N'Select @l_aaGLAssignIDOut = isnull(max(aaGLAssignID),0) + 1 from [' + @l_aaGLAssingBBFTempTable + '] where   aaGLDistID = ' + convert(varchar,@l_naaGLDistID) + ' and aaGLHdrID = ' + convert(varchar,@l_naaGLHdrID)   set @l_ParmDefinition = N'@l_aaGLAssignIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLAssignIDOut = @l_naaGLAssignID output   exec ('Insert into [' + @l_aaGLAssingBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   DEBITAMT,   CRDTAMNT,   ORDBTAMT,   ORCRDAMT )   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_nsplitDEBITAMT + ',   ' + @l_nsplitCRDTAMNT + ',   ' + @l_nsplitORDBTAMT + ',   ' + @l_nsplitORCRDAMT + '')    exec('declare AssignDim cursor fast_forward for   select aaTrxDimID from [' + @l_aaTrxDimTempTable + ']   order by aaOrder')   open AssignDim   fetch next from AssignDim into @l_naaTrxDimID   while @@fetch_status = 0   begin   select @l_cmdNExec = N''    select @l_cmdNExec = N'Select @l_naaTrxCodeIDOut = isnull([' + ltrim(rtrim(@l_naaTrxDimID)) + '], 0) from   [' + @l_aaPLAccTempTable + '] where DROWID = ' + ltrim(rtrim(@l_nDROWID))    set @l_ParmDefinition = N'@l_naaTrxCodeIDOut int output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_naaTrxCodeIDOut = @l_naaTrxCodeID output    if @l_naaTrxCodeID <> 0   begin   exec ('Insert into [' + @l_aaGLCodeBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   aaTrxDimID,   aaTrxCodeID)   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_naaTrxDimID + ',   ' + @l_naaTrxCodeID + '')   end   fetch next from AssignDim into @l_naaTrxDimID   end   close AssignDim   deallocate AssignDim    select @l_naaGLAssignID = @l_naaGLAssignID + 1    fetch next from allocation into @l_nDSTINDX, @l_nPRCNTAGE   end    close allocation   deallocate allocation   end    else   begin    select @l_naaGLDistID = 0   select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nACTINDX)   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))    else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nACTINDX)   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))    set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output   if @l_naaGLDistID = '' or @l_naaGLDistID = 0   begin   select @l_cSOURCDOC = @l_cPANDL   if @I_nOpenYear = 1   begin   select @l_OPENYEAR = OPENYEAR,@l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL20000 where JRNENTRY = @l_nStart_Journal_Entry   select @l_nCURRNIDX = CURRNIDX from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID    insert into GL20000(OPENYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@l_OPENYEAR,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nACTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL20000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL20000.ACTINDX = @l_nACTINDX and GL20000.CURNCYID = @l_cCURNCYID and GL20000.SOURCDOC = @l_cSOURCDOC   order by GL20000.DEX_ROW_ID   end   else   begin   select @l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL30000 where JRNENTRY = @l_nStart_Journal_Entry   AND HSTYEAR = @I_nNextYear    insert into GL30000(HSTYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@I_nNextYear,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nACTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL30000.ACTINDX, GL00100.ACCTTYPE, GL30000.CURRNIDX,   GL30000.RATETPID, GL30000.EXGTBLID, GL30000.XCHGRATE, GL30000.EXCHDATE,   GL30000.TIME1, GL30000.RTCLCMTD, GL30000.DENXRATE, GL30000.MCTRXSTT,   GL30000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL30000.SEQNUMBR   from GL30000 Inner join GL00100 on GL30000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL30000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL30000.ACTINDX = @l_nACTINDX and GL30000.CURNCYID = @l_cCURNCYID and GL30000.SOURCDOC = @l_cSOURCDOC   order by GL30000.DEX_ROW_ID   end   open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE,  @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   0,   0,   0,   0,   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',   ''' + @l_cSOURCDOC + '''')    select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1    fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE,  @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + 'and SOURCDOC <> ''' + @l_cBBF + ''''   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))    else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nACTINDX) + 'and SOURCDOC <> ''' + @l_cBBF + ''''   + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))  set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output   end   select @l_cmdNExec = N''   select @l_cmdNExec = N'Select @l_aaGLAssignIDOut = isnull(max(aaGLAssignID),0) + 1 from [' + @l_aaGLAssingBBFTempTable + '] where   aaGLDistID = ' + convert(varchar,@l_naaGLDistID) + ' and aaGLHdrID = ' + convert(varchar,@l_naaGLHdrID)    set @l_ParmDefinition = N'@l_aaGLAssignIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLAssignIDOut = @l_naaGLAssignID output   exec ('Insert into [' + @l_aaGLAssingBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   DEBITAMT,   CRDTAMNT,   ORDBTAMT,   ORCRDAMT )   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_nDEBITAMT + ',   ' + @l_nCRDTAMNT + ',   ' + @l_nORDBTAMT + ',   ' + @l_nORCRDAMT + '')    exec ('declare AssignDim cursor fast_forward for   select aaTrxDimID from [' + @l_aaTrxDimTempTable + ']   order by aaOrder')   open AssignDim   fetch next from AssignDim into @l_naaTrxDimID   while @@fetch_status = 0   begin   select @l_cmdNExec = N''    select @l_cmdNExec = N'Select @l_naaTrxCodeIDOut = isnull([' + ltrim(rtrim(@l_naaTrxDimID)) + '], 0) from   [' + @l_aaPLAccTempTable + '] where DROWID = ' + ltrim(rtrim(@l_nDROWID))    set @l_ParmDefinition = N'@l_naaTrxCodeIDOut int output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_naaTrxCodeIDOut = @l_naaTrxCodeID output    if @l_naaTrxCodeID <> 0   begin   exec ('Insert into [' + @l_aaGLCodeBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   aaTrxDimID,   aaTrxCodeID)   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_naaTrxDimID + ',   ' + @l_naaTrxCodeID + '')   end   fetch next from AssignDim into @l_naaTrxDimID   end   close AssignDim   deallocate AssignDim    end     fetch next from aaBBFPLAcc into @l_cCURNCYID, @l_cDIVACTSG, @l_nDEBITAMT,   @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT, @l_nDROWID, @l_nSEQNUMBR   end   close aaBBFPLAcc   deallocate aaBBFPLAcc   end    else   begin      exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaPLAccTempTable + '''    and type = ''U'') drop table [' + @l_aaPLAccTempTable + ']')    select @l_cmdExec = ''   select @l_cmdExec = 'select CURNCYID,   case   when SUM(assin.DEBITAMT) > SUM(assin.CRDTAMNT) then   SUM(assin.DEBITAMT) - SUM(assin.CRDTAMNT)   else   0.0   end as DEBITAMT,   case   when SUM(assin.DEBITAMT) <= SUM(assin.CRDTAMNT) then   -1 * (SUM(assin.DEBITAMT) - SUM(assin.CRDTAMNT))   else   0.0   end as CRDTAMNT,   case   when SUM(assin.ORDBTAMT) > SUM(assin.ORCRDAMT) then   SUM(assin.ORDBTAMT) - SUM(assin.ORCRDAMT)   else   0.0   end as ORDBTAMT,   case   when SUM(assin.ORDBTAMT) <= SUM(assin.ORCRDAMT) then   -1 * (SUM(assin.ORDBTAMT) - SUM(assin.ORCRDAMT))   else   0.0   end as ORCRDAMT ' +   ltrim(rtrim(@l_cTrxDimFieldsWithPrefix)) +   ', IDENTITY(int, 1,1) AS DROWID, SEQNUMBR   into [' + @l_aaPLAccTempTable + ']   from [' + @l_aBBFGetDataTempTable + '] assin   inner join GL00100 acc on (assin.ACTINDX = acc.ACTINDX and acc.PSTNGTYP = ' +   ltrim(rtrim(@l_nPROFIT_AND_LOSS)) + ' and acc.ACCTTYPE = ' + ltrim(rtrim(@l_nPOST_ACCT)) + ')   inner join GL00105 on acc.ACTINDX = GL00105.ACTINDX   group by  SEQNUMBR,assin.CURNCYID ' +   ltrim(rtrim(@l_cTrxDimFieldsWithPrefix)) +   ' having SUM(assin.DEBITAMT)> 0 or SUM(assin.CRDTAMNT) > 0 or SUM(assin.ORDBTAMT) > 0 or SUM(assin.ORCRDAMT) > 0'    exec (@l_cmdExec)    exec ('DELETE FROM [' + @l_aaPLAccTempTable + '] WHERE DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0 ')    exec ( 'declare aaBBFPLAcc cursor fast_forward for   select CURNCYID, DEBITAMT, CRDTAMNT,   ORDBTAMT, ORCRDAMT, DROWID, SEQNUMBR   From [' + @l_aaPLAccTempTable + ']')    open aaBBFPLAcc   fetch next from aaBBFPLAcc into @l_cCURNCYID, @l_nDEBITAMT,   @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT, @l_nDROWID,@l_nSEQNUMBR    select @l_nACCTTYPE = ACCTTYPE from GL00100 where ACTINDX = @l_nRE_Account_Index   if @l_nACCTTYPE <> @l_nPOST_ACCT    begin   while @@fetch_status = 0   begin   select @l_naaGLAssignID = 1,   @l_nsumDEBITAMT = @l_nDEBITAMT,   @l_nsumCRDTAMNT = @l_nCRDTAMNT,   @l_nsumORDBTAMT = @l_nORDBTAMT,   @l_nsumORCRDAMT = @l_nORCRDAMT    select @l_nCntACTINDX = 0   select @l_nCntACTINDX = count(DSTINDX) from GL00103 where ACTINDX = @l_nRE_Account_Index    declare allocation cursor fast_forward for   select DSTINDX, PRCNTAGE from GL00103 where ACTINDX = @l_nRE_Account_Index   open allocation   fetch next from allocation into @l_nDSTINDX, @l_nPRCNTAGE   while @@fetch_status = 0    begin   select @l_nCntACTINDX = @l_nCntACTINDX - 1   select @l_naaGLDistID = 0   select @l_cmdNExec = N''    if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   begin   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nDSTINDX)  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   select @l_nDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID   end   else   begin   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nDSTINDX)  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   select @l_nDECPLCUR = @I_nDECPLfunCUR   end   set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output    select @l_nsplitDEBITAMT = round((@l_nDEBITAMT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @I_nDECPLfunCUR),   @l_nsplitCRDTAMNT = round((@l_nCRDTAMNT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @I_nDECPLfunCUR),   @l_nsplitORDBTAMT = round((@l_nORDBTAMT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @l_nDECPLCUR),   @l_nsplitORCRDAMT = round((@l_nORCRDAMT * @l_nPRCNTAGE)/@I_nPERCENT_FACTOR, @l_nDECPLCUR)    if @l_nCntACTINDX > 0   begin   select @l_nsumDEBITAMT = @l_nsumDEBITAMT - @l_nsplitDEBITAMT,   @l_nsumCRDTAMNT = @l_nsumCRDTAMNT - @l_nsplitCRDTAMNT,   @l_nsumORDBTAMT = @l_nsumORDBTAMT - @l_nsplitORDBTAMT,   @l_nsumORCRDAMT = @l_nsumORCRDAMT - @l_nsplitORCRDAMT   end   else   begin   select @l_nsplitDEBITAMT = @l_nsumDEBITAMT,   @l_nsplitCRDTAMNT = @l_nsumCRDTAMNT,   @l_nsplitORDBTAMT = @l_nsumORDBTAMT,   @l_nsplitORCRDAMT = @l_nsumORCRDAMT   end    if @l_naaGLDistID = '' or @l_naaGLDistID = 0   begin   select @l_cSOURCDOC = @l_cPANDL   if @I_nOpenYear = 1   begin   select @l_OPENYEAR = OPENYEAR,@l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL20000 where JRNENTRY = @l_nStart_Journal_Entry   select @l_nCURRNIDX = CURRNIDX from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID    insert into GL20000(OPENYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@l_OPENYEAR,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nDSTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL20000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL20000.ACTINDX = @l_nDSTINDX and GL20000.CURNCYID = @l_cCURNCYID and GL20000.SOURCDOC = @l_cSOURCDOC   order by GL20000.DEX_ROW_ID   end   else   begin   select @l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL30000 where JRNENTRY = @l_nStart_Journal_Entry   AND HSTYEAR = @I_nNextYear    insert into GL30000(HSTYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@I_nNextYear,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nDSTINDX,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL30000.ACTINDX, GL00100.ACCTTYPE, GL30000.CURRNIDX,   GL30000.RATETPID, GL30000.EXGTBLID, GL30000.XCHGRATE, GL30000.EXCHDATE,   GL30000.TIME1, GL30000.RTCLCMTD, GL30000.DENXRATE, GL30000.MCTRXSTT,   GL30000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL30000.SEQNUMBR   from GL30000 Inner join GL00100 on GL30000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL30000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL30000.ACTINDX = @l_nDSTINDX and GL30000.CURNCYID = @l_cCURNCYID and GL30000.SOURCDOC = @l_cSOURCDOC   order by GL30000.DEX_ROW_ID   end   open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   0,   0,   0,   0,   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',   ''' + @l_cSOURCDOC + '''')    select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   begin   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nDSTINDX) + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   select @l_nDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID   end   else   begin   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nDSTINDX)  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))    select @l_nDECPLCUR = @I_nDECPLfunCUR   end   set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output   end    select @l_cmdNExec = N''   select @l_cmdNExec = N'Select @l_aaGLAssignIDOut = isnull(max(aaGLAssignID),0) + 1 from [' + @l_aaGLAssingBBFTempTable + '] where   aaGLDistID = ' + convert(varchar,@l_naaGLDistID) + ' and aaGLHdrID = ' + convert(varchar,@l_naaGLHdrID)    set @l_ParmDefinition = N'@l_aaGLAssignIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLAssignIDOut = @l_naaGLAssignID output    exec ('Insert into [' + @l_aaGLAssingBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   DEBITAMT,   CRDTAMNT,   ORDBTAMT,   ORCRDAMT )   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_nsplitDEBITAMT + ',   ' + @l_nsplitCRDTAMNT + ',   ' + @l_nsplitORDBTAMT + ',   ' + @l_nsplitORCRDAMT + '')    exec ('declare AssignDim cursor fast_forward for   select aaTrxDimID from [' + @l_aaTrxDimTempTable + ']   order by aaOrder')   open AssignDim   fetch next from AssignDim into @l_naaTrxDimID   while @@fetch_status = 0   begin   select @l_cmdNExec = N''    select @l_cmdNExec = N'Select @l_naaTrxCodeIDOut = isnull([' + ltrim(rtrim(@l_naaTrxDimID)) + '], 0) from   [' + @l_aaPLAccTempTable + '] where DROWID = ' + ltrim(rtrim(@l_nDROWID))    set @l_ParmDefinition = N'@l_naaTrxCodeIDOut int output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_naaTrxCodeIDOut = @l_naaTrxCodeID output    if @l_naaTrxCodeID <> 0   begin   exec ('Insert into [' + @l_aaGLCodeBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   aaTrxDimID,   aaTrxCodeID)   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_naaTrxDimID + ',   ' + @l_naaTrxCodeID + '')   end   fetch next from AssignDim into @l_naaTrxDimID   end   close AssignDim   deallocate AssignDim    select @l_naaGLAssignID = @l_naaGLAssignID + 1   fetch next from allocation into @l_nDSTINDX, @l_nPRCNTAGE   end    close allocation   deallocate allocation   fetch next from aaBBFPLAcc into @l_cCURNCYID, @l_nDEBITAMT,   @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT,   @l_nDROWID, @l_nSEQNUMBR    end    end   else   begin    while @@fetch_status = 0   begin   select @l_naaGLDistID = 0   select @l_cmdNExec = N''    if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nRE_Account_Index)  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nRE_Account_Index) + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))    set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output    if @l_naaGLDistID = '' or @l_naaGLDistID = 0   begin   select @l_cSOURCDOC = @l_cPANDL   if @I_nOpenYear = 1   begin   select @l_OPENYEAR = OPENYEAR,@l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL20000 where JRNENTRY = @l_nStart_Journal_Entry   select @l_nCURRNIDX = CURRNIDX from DYNAMICS..MC40200 where CURNCYID = @l_cCURNCYID    insert into GL20000(OPENYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@l_OPENYEAR,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nRE_Account_Index,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL20000.ACTINDX, GL00100.ACCTTYPE, GL20000.CURRNIDX,   GL20000.RATETPID, GL20000.EXGTBLID, GL20000.XCHGRATE, GL20000.EXCHDATE,   GL20000.TIME1, GL20000.RTCLCMTD, GL20000.DENXRATE, GL20000.MCTRXSTT,   GL20000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL20000.SEQNUMBR   from GL20000 Inner join GL00100 on GL20000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL20000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL20000.ACTINDX = @l_nRE_Account_Index and GL20000.CURNCYID = @l_cCURNCYID and GL20000.SOURCDOC = @l_cSOURCDOC   order by GL20000.DEX_ROW_ID   end   else   begin   select @l_TRXSORCE = TRXSORCE, @l_TRXDATE = TRXDATE, @l_RCTRXSEQ = RCTRXSEQ,   @l_REFRENCE = REFRENCE, @l_LASTUSER = LASTUSER, @l_LSTDTEDT = LSTDTEDT, @l_USWHPSTD = USWHPSTD,   @l_ORGNTSRC = ORGNTSRC, @l_ORGNATYP = ORGNATYP, @l_QKOFSET = QKOFSET, @l_SERIES = SERIES,   @l_ORTRXSRC = ORTRXSRC, @l_Ledger_ID = Ledger_ID from GL30000 where JRNENTRY = @l_nStart_Journal_Entry   AND HSTYEAR = @I_nNextYear    insert into GL30000(HSTYEAR,JRNENTRY,SOURCDOC,ACTINDX,DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID,CURRNIDX,TRXSORCE,TRXDATE,RCTRXSEQ,   REFRENCE, LASTUSER, LSTDTEDT, USWHPSTD, ORGNTSRC, ORGNATYP, QKOFSET, SERIES, ORTRXSRC, Ledger_ID)   values(@I_nNextYear,@l_nStart_Journal_Entry,@l_cSOURCDOC,@l_nRE_Account_Index,0,0,0,0,@l_cCURNCYID,@l_nCURRNIDX,@l_TRXSORCE,@l_TRXDATE,@l_RCTRXSEQ,   @l_REFRENCE, @l_LASTUSER, @l_LSTDTEDT, @l_USWHPSTD, @l_ORGNTSRC, @l_ORGNATYP, @l_QKOFSET, @l_SERIES, @l_ORTRXSRC, @l_Ledger_ID)    declare glOpen cursor fast_forward for   Select GL30000.ACTINDX, GL00100.ACCTTYPE, GL30000.CURRNIDX,   GL30000.RATETPID, GL30000.EXGTBLID, GL30000.XCHGRATE, GL30000.EXCHDATE,   GL30000.TIME1, GL30000.RTCLCMTD, GL30000.DENXRATE, GL30000.MCTRXSTT,   GL30000.SOURCDOC, case when AAG00200.aaAcctClassID <> 0 then 1 else 0 end as aaBrowseType, GL30000.SEQNUMBR   from GL30000 Inner join GL00100 on GL30000.ACTINDX  = GL00100.ACTINDX   inner join AAG00200 on AAG00200.ACTINDX = GL00100.ACTINDX   where GL30000.JRNENTRY = @l_nStart_Journal_Entry and DEBITAMT = 0 and CRDTAMNT = 0 and ORDBTAMT = 0 and ORCRDAMT = 0   and GL30000.ACTINDX = @l_nRE_Account_Index and GL30000.CURNCYID = @l_cCURNCYID and GL30000.SOURCDOC = @l_cSOURCDOC   order by GL30000.DEX_ROW_ID   end   open glOpen   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE, @l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR    While (@@fetch_status = 0)   Begin   exec ('Insert into [' + @l_aaGLDistBBFTempTable + ']   ( aaGLHdrID, aaGLDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD, DENXRATE, MCTRXSTT,   SEQNUMBR, aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,   aaChangeDate, aaChangeTime, SOURCDOC )   Select ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistIDcnt + ',   ''' + @l_cINTERID + ''',   ' + @l_nACTINDX + ',   ' + @l_nACCTTYPE + ',   ' + @l_naaBrowseType + ',   0,   0,   0,   0,   0,   ''' + @l_cCURNCYID + ''',   ' + @l_nCURRNIDX + ',   ''' + @l_cRATETPID + ''',   ''' + @l_cEXGTBLID + ''',   ' + @l_nXCHGRATE + ',   ''' + @l_dEXCHDATE + ''',   ''' + @l_dTIME1 + ''',   ' + @l_nRTCLCMTD + ',   ' + @l_nDENXRATE + ',   ' + @l_nMCTRXSTT + ',   ' + @l_nSEQNUMBR + ',   '''',   '''',   '''',   '''',   8,   ''' + @l_daaChangeDate + ''',   ''' + @laaChangeTime + ''',   ''' + @l_cSOURCDOC + '''')    select @l_naaGLDistIDcnt = @l_naaGLDistIDcnt + 1   fetch next from glOpen into   @l_nACTINDX, @l_nACCTTYPE, @l_nCURRNIDX, @l_cRATETPID, @l_cEXGTBLID,   @l_nXCHGRATE, @l_dEXCHDATE,@l_dTIME1, @l_nRTCLCMTD, @l_nDENXRATE,   @l_nMCTRXSTT, @l_cSOURCDOC, @l_naaBrowseType, @l_nSEQNUMBR   End   close glOpen   deallocate glOpen    select @l_cmdNExec = N''   if ltrim(rtrim(@l_cCURNCYID))<>'' and ltrim(rtrim(@l_cFunc_Currency)) <> ltrim(rtrim(@l_cCURNCYID))   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where CURNCYID = ''' + @l_cCURNCYID +''' and ACTINDX =  ' + convert(varchar,@l_nRE_Account_Index) + 'and SOURCDOC <>''' + @l_cBBF + ''''  + ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))   else   select @l_cmdNExec = N'Select @l_aaGLDistIDOut = aaGLDistID from   [' + @l_aaGLDistBBFTempTable + '] where (CURNCYID = ''' + @l_cFunc_Currency + '''or rtrim(ltrim(CURNCYID)) = '''') and ACTINDX =  ' + convert(varchar,@l_nRE_Account_Index) + 'and SOURCDOC <>''' + @l_cBBF + ''''+ ' and SEQNUMBR = ' + ltrim(rtrim(@l_nSEQNUMBR))    set @l_ParmDefinition = N'@l_aaGLDistIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLDistIDOut = @l_naaGLDistID output   end    select @l_cmdNExec = N''   select @l_cmdNExec = N'Select @l_aaGLAssignIDOut = isnull(max(aaGLAssignID),0) + 1 from [' + @l_aaGLAssingBBFTempTable + '] where   aaGLDistID = ' + convert(varchar,@l_naaGLDistID) + ' and aaGLHdrID = ' + convert(varchar,@l_naaGLHdrID)    set @l_ParmDefinition = N'@l_aaGLAssignIDOut int output'   execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_aaGLAssignIDOut = @l_naaGLAssignID output    exec ('Insert into [' + @l_aaGLAssingBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   DEBITAMT,   CRDTAMNT,   ORDBTAMT,   ORCRDAMT )   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_nDEBITAMT + ',   ' + @l_nCRDTAMNT + ',   ' + @l_nORDBTAMT + ',   ' + @l_nORCRDAMT + '')    exec ('declare AssignDim cursor fast_forward for   select aaTrxDimID from [' + @l_aaTrxDimTempTable + ']   order by aaOrder')   open AssignDim   fetch next from AssignDim into @l_naaTrxDimID   while @@fetch_status = 0   begin   select @l_cmdNExec = N''    select @l_cmdNExec = N'Select @l_naaTrxCodeIDOut = isnull([' + ltrim(rtrim(@l_naaTrxDimID)) + '], 0) from   [' + @l_aaPLAccTempTable + '] where DROWID = ' + ltrim(rtrim(@l_nDROWID))    set @l_ParmDefinition = N'@l_naaTrxCodeIDOut int output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_naaTrxCodeIDOut = @l_naaTrxCodeID output    if @l_naaTrxCodeID <> 0   begin   exec ('Insert into [' + @l_aaGLCodeBBFTempTable + '] (   aaGLHdrID,   aaGLDistID,   aaGLAssignID,   aaTrxDimID,   aaTrxCodeID)   select   ' + @l_naaGLHdrID + ',   ' + @l_naaGLDistID + ',   ' + @l_naaGLAssignID + ',   ' + @l_naaTrxDimID + ',   ' + @l_naaTrxCodeID + '')   end   fetch next from AssignDim into @l_naaTrxDimID   end   close AssignDim   deallocate AssignDim    fetch next from aaBBFPLAcc into @l_cCURNCYID, @l_nDEBITAMT,   @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT,   @l_nDROWID, @l_nSEQNUMBR  end    end   close aaBBFPLAcc   deallocate aaBBFPLAcc      end    exec ('declare distMiss cursor fast_forward for   select aaGLDistID, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT from [' + @l_aaGLDistBBFTempTable + '] dist where   not exists (select 1 from [' + @l_aaGLAssingBBFTempTable + '] asign   where dist.aaGLDistID = asign.aaGLDistID)')   open distMiss   fetch next from distMiss into   @l_naaGLDistID, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT   while @@fetch_status = 0   begin   exec ('insert into [' + @l_aaGLAssingBBFTempTable + '] (aaGLHdrID, aaGLDistID, aaGLAssignID,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT)   values(' + @l_naaGLHdrID + ', ' + @l_naaGLDistID + ', 1,   ' + @l_nDEBITAMT + ', ' + @l_nCRDTAMNT + ', ' + @l_nORDBTAMT + ', ' + @l_nORCRDAMT + ')')   fetch next from distMiss into   @l_naaGLDistID, @l_nDEBITAMT, @l_nCRDTAMNT, @l_nORDBTAMT, @l_nORCRDAMT   end   close distMiss   deallocate distMiss    exec ('update [' + @l_aaGLDistBBFTempTable + '] set aaBrowseType = 1 where exists (   select 1 from [' + @l_aaGLCodeBBFTempTable + '] where [' + @l_aaGLCodeBBFTempTable + '].aaGLHdrID = [' + @l_aaGLDistBBFTempTable + '].aaGLHdrID and   [' + @l_aaGLCodeBBFTempTable + '].aaGLDistID = [' + @l_aaGLDistBBFTempTable + '].aaGLDistID)')    exec ('insert into [' + @l_aaGLDistBBFDispTempTable + '] (   aaGLHdrID, aaGLDistID, INTERID, CorrespondingUnit, ACTINDX,   ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT, CRDTAMNT,   ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD,   DENXRATE, MCTRXSTT, SEQNUMBR, aaCustID, aaVendID,   aaSiteID, aaItemID, aaCopyStatus, SOURCDOC, aaDisplayDistID)   select  aaGLHdrID, 0 as aaGLDistID, INTERID, CorrespondingUnit, ACTINDX,   ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT, CRDTAMNT,   ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID,   EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RTCLCMTD,   DENXRATE, MCTRXSTT, SEQNUMBR, aaCustID, aaVendID,   aaSiteID, aaItemID, aaCopyStatus, SOURCDOC, aaGLDistID as aaDisplayDistID   from [' + @l_aaGLDistBBFTempTable + '] where aaBrowseType = 1   order by aaGLDistID')   exec ('update [' + @l_aaGLDistBBFDispTempTable + '] set aaGLDistID = DEX_ROW_ID')    if @I_nInsertHistYearTable = 0   begin   set @l_InsertTable = 'AAG3000'   end   else   begin   set @l_InsertTable = 'AAG4000'   end    select @l_cmdExec = 'INSERT INTO ' + @l_InsertTable + '0   SELECT aaGLHdrID, JRNENTRY, RCTRXSEQ, YEAR1, aaTRXType, aaGLTRXSource, aaTRXSource, GLPOSTDT, Ledger_ID   FROM [' + @l_aaGLHdrBBFTempTable + ']'   exec (@l_cmdExec)    select @l_cmdNExec = N''   select @l_cmdNExec = N'Select @l_naaGLHdrIDOut = isnull(aaGLHdrID, 0) from   [' + @l_aaGLHdrBBFTempTable + '] '    set @l_ParmDefinition = N'@l_naaGLHdrIDOut int output'    execute sp_executesql @l_cmdNExec,   @l_ParmDefinition,   @l_naaGLHdrIDOut = @l_naaGLHdrID output    select @l_cmdExec = 'INSERT INTO ' + @l_InsertTable + '1   SELECT aaGLHdrID,aaGLDistID, INTERID, CorrespondingUnit, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT, CRDTAMNT,   ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX, RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD, DENXRATE,MCTRXSTT, SEQNUMBR,   aaCustID,aaVendID,aaSiteID,aaItemID,'''','''', EMPLOYID, aaCopyStatus, SOURCDOC, aaChangeDate,aaChangeTime, 0, getutcdate()  FROM [' + @l_aaGLDistBBFTempTable + ']'   exec (@l_cmdExec)    if @I_nInsertHistYearTable = 0   begin   select @l_cmdExec = 'INSERT INTO ' + @l_InsertTable + '2   SELECT aaGLHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,aaAliasID  , getutcdate()   FROM [' + @l_aaGLAssingBBFTempTable + ']'   exec (@l_cmdExec)   end   else   begin   select @l_cmdExec = 'INSERT INTO ' + @l_InsertTable + '2   SELECT aaGLHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX, getutcdate()  FROM [' + @l_aaGLAssingBBFTempTable + ']'   exec (@l_cmdExec)   end    select @l_cmdExec = 'INSERT INTO ' + @l_InsertTable + '3   SELECT aaGLHdrID,aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID, getutcdate()  FROM [' + @l_aaGLCodeBBFTempTable + ']'   exec (@l_cmdExec)    exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLHdrBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLHdrBBFTempTable + ']')   exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLDistBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLDistBBFTempTable + ']')   exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLAssingBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLAssingBBFTempTable + ']')   exec ('if exists(select name from tempdb..sysobjects where name = ''' + @l_aaGLCodeBBFTempTable + '''    and type = ''U'') drop table [' + @l_aaGLCodeBBFTempTable + ']')    select @O_nHdrID = @l_naaGLHdrID  end     
GO
GRANT EXECUTE ON  [dbo].[aaClosedYearTransaction] TO [DYNGRP]
GO

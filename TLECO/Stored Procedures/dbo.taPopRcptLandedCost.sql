SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopRcptLandedCost]  @I_vPOPRCTNM char(17),         @I_vLanded_Cost_ID char(15),     @I_vRCPTLNNM int = 0,       @I_vVENDORID char(15) = '',     @I_vLCLINENUMBER int = 0,     @I_vLCHDRNUMBER int = 0,     @I_vQTYSHPPD numeric(19,5) = null,    @I_vEXTDCOST numeric(19,5) = null,    @I_vreceiptdate datetime = null,    @I_vDistRef char(30) = '',     @I_vCalculation_Percentage int = null,    @I_vTotal_Landed_Cost_Amount numeric(19,5) = null,  @I_vOrig_TotalLandedCostAmt numeric(19,5) = null,  @I_vOrig_UnapportionedAmount numeric(19,5) = 0,   @I_vOrig_Landed_Cost_Amount numeric(19,5) = null,  @I_vApplied smallint = 0,     @I_vLanded_Cost_Warnings smallint = 0,    @I_vApportion_By smallint = 4,     @I_vInvoice_Match tinyint = null,    @I_vINVINDX int = null,      @I_vACPURIDX int = null,     @I_vPURPVIDX int = null,     @I_vRATECALC smallint = -1,     @I_vCURNCYID char(15) = null,     @I_vEXGTBLID char(15) = '',     @I_vRATETPID char(15) = null,     @I_vEXCHDATE datetime = '',     @I_vTIME1 datetime = '',     @I_vXCHGRATE numeric(19,7) = 0,     @I_vEXGTBDSC char(30) = '',     @I_vEXTBLSRC char(50) = '',     @I_vRATEEXPR smallint = -1,       @I_vDYSTINCR smallint = -1,     @I_vRATEVARC numeric(19,7)=0,     @I_vTRXDTDEF smallint = -1,     @I_vPRVDSLMT smallint = 0,     @I_vDATELMTS smallint = 0,     @I_vEXPNDATE datetime = '',     @I_vRequesterTrx smallint = 0,     @I_vUSRDEFND1 char(50) = '',     @I_vUSRDEFND2 char(50) = '',     @I_vUSRDEFND3 char(50) = '',     @I_vUSRDEFND4 varchar(8000) = '',    @I_vUSRDEFND5 varchar(8000) = '',    @O_iErrorState int output,     @oErrString varchar(255) output      with encryption  as  set transaction isolation level read uncommitted set nocount on  declare @exists smallint,  @Currency_Note_Index int,  @DECPLCUR int,  @ODECPLCU int,  @ISMCTRX tinyint,  @FUNLCURR char(15),  @DECPLCURItem smallint,  @EDITDECPLCUR smallint,  @FUNDECPLCUR smallint,  @MCINSTALLED smallint,  @RCPTLNNM_DETAIL int,  @SEQNUMBR int,  @Long_Description char(51),  @Vendor_Note_Index int,  @NOTEINDX int,  @CURRNIDX smallint,  @CALCMTHD smallint,  @iStatus smallint,  @iCustomState smallint,  @iError smallint,  @iCustomErrString varchar(255),  @O_oErrorState smallint,  @ORDECPLCUR smallint,  @LCFUNCTDEC smallint,  @uCURNCYID char(15),  @uEXCHDATE datetime,  @uEXGTBDSC char(30),  @uEXTBLSRC char(50),  @uRATEEXPR smallint,  @uDYSTINCR smallint,  @uTIME1 datetime,  @uXCHGRATE numeric(19,7),  @uEXPNDATE datetime,  @uRATETPID char(15),  @uRATECALC smallint,  @uEXGTBLID char(15)  select  @exists = 0,  @DECPLCUR = 0,  @ODECPLCU = 0,  @ISMCTRX = 0,  @FUNLCURR = 0,  @DECPLCURItem = 0,  @EDITDECPLCUR = 0,  @FUNDECPLCUR = 0,  @MCINSTALLED = 1,  @SEQNUMBR = 16384,  @Long_Description = '',  @Vendor_Note_Index = 0,  @NOTEINDX = 0,  @Currency_Note_Index = 0,  @CALCMTHD = 0,  @CURRNIDX = 0,  @CALCMTHD = 0,  @iStatus = 0,  @iCustomState = 0,  @iError = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @ORDECPLCUR = 0,  @LCFUNCTDEC = 0,  @uCURNCYID = '',  @uEXCHDATE = '',  @uEXGTBDSC = '',  @uEXTBLSRC = '',  @uRATEEXPR = -1,  @uDYSTINCR = -1,  @uTIME1 = '',  @uXCHGRATE = 0,  @uEXPNDATE = '',  @uRATETPID = '',  @uRATECALC = 0,  @uEXGTBLID = ''  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopRcptLandedCostPre  @I_vPOPRCTNM output,   @I_vLanded_Cost_ID output,   @I_vRCPTLNNM output,   @I_vVENDORID output,   @I_vLCLINENUMBER output,   @I_vLCHDRNUMBER output,   @I_vQTYSHPPD output,  @I_vEXTDCOST output,  @I_vreceiptdate output,   @I_vDistRef output,   @I_vCalculation_Percentage output,   @I_vTotal_Landed_Cost_Amount output,   @I_vOrig_TotalLandedCostAmt output,   @I_vOrig_UnapportionedAmount output,   @I_vOrig_Landed_Cost_Amount output,   @I_vApplied output,   @I_vLanded_Cost_Warnings output,   @I_vApportion_By output,   @I_vInvoice_Match output,   @I_vINVINDX output,   @I_vACPURIDX output,   @I_vPURPVIDX output,   @I_vRATECALC output,   @I_vCURNCYID output,   @I_vEXGTBLID output,   @I_vRATETPID output,   @I_vEXCHDATE output,   @I_vTIME1 output,   @I_vXCHGRATE output,   @I_vEXGTBDSC output,   @I_vEXTBLSRC output,   @I_vRATEEXPR output,   @I_vDYSTINCR output,   @I_vRATEVARC output,   @I_vTRXDTDEF output,   @I_vPRVDSLMT output,   @I_vDATELMTS output,   @I_vEXPNDATE output,   @I_vRequesterTrx output,   @I_vUSRDEFND1 output,   @I_vUSRDEFND2 output,   @I_vUSRDEFND3 output,   @I_vUSRDEFND4 output,   @I_vUSRDEFND5 output,   @O_iErrorState = @iCustomState output,  @oErrString = @oErrString output   select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8056    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (   @I_vPOPRCTNM is NULL or   @I_vRCPTLNNM is NULL or   @I_vLCLINENUMBER is NULL or   @I_vLCHDRNUMBER is NULL or   @I_vLanded_Cost_ID is NULL or   @I_vVENDORID is NULL or   @I_vEXGTBLID is NULL or   @I_vXCHGRATE is NULL or   @I_vEXCHDATE is NULL or   @I_vTIME1 is NULL or   @I_vRATECALC is NULL or   @I_vDistRef is NULL or   @I_vLanded_Cost_Warnings is NULL or   @I_vApportion_By is NULL or   @I_vOrig_UnapportionedAmount is NULL or   @I_vApplied is NULL  ) begin  select @O_iErrorState = 8057    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM = '' or  @I_vLanded_Cost_ID = '' ) begin  select @O_iErrorState = 8058     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vreceiptdate is null select @I_vreceiptdate = substring(convert(varchar(25),getdate()),12,12)  select  @I_vPOPRCTNM = UPPER(@I_vPOPRCTNM),  @I_vLanded_Cost_ID = UPPER(@I_vLanded_Cost_ID),  @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  if exists(select 1 from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM) or  exists(select 1 from POP30300 (nolock) where POPRCTNM = @I_vPOPRCTNM)  begin  select @O_iErrorState = 8059     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState) end  select @FUNLCURR = FUNLCURR from MC40000 (nolock) select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR) begin  select @uCURNCYID = @I_vCURNCYID  select @I_vCURNCYID = ''   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vVENDORID,  @I_vDOCDATE = @I_vreceiptdate,  @I_vCURNCYID = @uCURNCYID,  @I_vEXCHDATE = @uEXCHDATE output,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @uRATEEXPR output,  @I_vDYSTINCR = @uDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @uTIME1 output,  @I_vXCHGRATE = @uXCHGRATE output,  @I_vEXPNDATE = @uEXPNDATE output,  @I_vRATETPID = @uRATETPID output,  @I_vRTCLCMTD = @uRATECALC output,  @I_vEXGTBLID = @uEXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 8304   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@@error <> 0)  begin  select @O_iErrorState = 8305   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select  @I_vInvoice_Match =  case  when @I_vInvoice_Match is null  then Invoice_Match  else  @I_vInvoice_Match  end,  @I_vCURNCYID =  case  when @I_vCURNCYID is null  then CURNCYID  else  @I_vCURNCYID  end,  @ODECPLCU = ODECPLCU - 1,  @I_vPURPVIDX =  case  when @I_vPURPVIDX is null  then PURPVIDX  else  @I_vPURPVIDX  end,  @I_vACPURIDX =  case  when @I_vACPURIDX is null  then ACPURIDX  else  @I_vACPURIDX  end,  @I_vVENDORID =   case  when @I_vVENDORID = ''  then VENDORID  else  @I_vVENDORID  end,  @CALCMTHD = CALCMTHD,  @Long_Description = Long_Description,  @NOTEINDX = NOTEINDX,  @Vendor_Note_Index = Vendor_Note_Index,  @Currency_Note_Index = Currency_Note_Index,  @I_vCalculation_Percentage =  case  when @I_vCalculation_Percentage is null  then Calculation_Percentage  else  @I_vCalculation_Percentage  end,  @I_vOrig_Landed_Cost_Amount =  case  when @I_vOrig_Landed_Cost_Amount is null  then Orig_Landed_Cost_Amount  else  @I_vOrig_Landed_Cost_Amount  end,  @LCFUNCTDEC = DECPLCUR - 1,  @I_vRATETPID =   case  when @I_vRATETPID is null  then RATETPID  else  @I_vRATETPID  end,   @exists = 1  from IV41100 (nolock) where Landed_Cost_ID = @I_vLanded_Cost_ID   if @I_vINVINDX is null select @I_vINVINDX = 0  if @I_vVENDORID <> '' and not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID) begin  select @O_iErrorState = 8060     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @exists = 0 begin  select @O_iErrorState = 8061     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vLCLINENUMBER = 0 begin  select @I_vLCLINENUMBER = @SEQNUMBR + isnull(max(LCLINENUMBER),0) from POP10700 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vRCPTLNNM  end  if exists( select 1 from POP10700 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vRCPTLNNM and LCLINENUMBER = @I_vLCLINENUMBER ) begin  select @O_iErrorState = 8062     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@CALCMTHD = 1 and (@I_vCalculation_Percentage > 999999 or @I_vCalculation_Percentage < 0)) or  (@CALCMTHD in (2,3) and (@I_vOrig_Landed_Cost_Amount < 0)) begin  select @O_iErrorState = 8063     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @I_vApportion_By < 1 or @I_vApportion_By > 4 begin  select @O_iErrorState = 8064     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @I_vApportion_By <> 4 and @CALCMTHD in (1,3) begin  select @O_iErrorState = 8065     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(CURNCYID,'') from PM00200 (nolock) where VENDORID = @I_vVENDORID   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock)  end end  if (@CURRNIDX = 0) begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if ((@CURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 8066     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @CALCMTHD < 1 or @CALCMTHD > 3 begin  select @O_iErrorState = 8067     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select top 1 @FUNDECPLCUR = DECPLCUR - 1 from MC40000 a (nolock), DYNAMICS..MC40200 b (nolock)  where a.FUNCRIDX = b.CURRNIDX and a.FUNLCURR = b.CURNCYID   if (@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR) begin  select @ISMCTRX = 1  exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vVENDORID,  @I_vDOCDATE = @I_vreceiptdate,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRATECALC output,  @I_vEXGTBLID = @I_vEXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 8068   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@@error <> 0)  begin  select @O_iErrorState = 8069   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @ISMCTRX = 0, @I_vRATEEXPR=0, @I_vDYSTINCR=0, @I_vRATECALC=0, @I_vRATETPID = '', @I_vEXGTBLID = '' end  if (@ISMCTRX = 0) begin  if ((not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> '')))  begin  select @MCINSTALLED = 0  end end  if (@ISMCTRX = 1) or (@uCURNCYID <> '') begin  select @EDITDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock)  where CURNCYID = case when @uCURNCYID = '' then @I_vCURNCYID else @uCURNCYID end end else begin  select @EDITDECPLCUR = @FUNDECPLCUR end  select @ORDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if @I_vTotal_Landed_Cost_Amount is null begin  select @I_vTotal_Landed_Cost_Amount =  case  when @CALCMTHD = 1  then round((@I_vCalculation_Percentage*.00001)*@I_vEXTDCOST,@EDITDECPLCUR)  when @CALCMTHD = 2  then round(@I_vOrig_Landed_Cost_Amount,@EDITDECPLCUR)  when @CALCMTHD = 3  then round(@I_vQTYSHPPD * @I_vOrig_Landed_Cost_Amount,@EDITDECPLCUR)  end end  if @ISMCTRX = 1 or @uCURNCYID <> '' begin  select @I_vOrig_TotalLandedCostAmt =  case  when @uCURNCYID <> '' and @I_vRATECALC = 1  then round(@I_vTotal_Landed_Cost_Amount / @uXCHGRATE, @EDITDECPLCUR)  when @uCURNCYID <> '' and @I_vRATECALC = 0  then round(@I_vTotal_Landed_Cost_Amount * @uXCHGRATE, @EDITDECPLCUR)  when (@I_vRATECALC = 0)  then round(@I_vTotal_Landed_Cost_Amount / @I_vXCHGRATE, @EDITDECPLCUR)  when (@I_vRATECALC = 1)  then round(@I_vTotal_Landed_Cost_Amount * @I_vXCHGRATE, @EDITDECPLCUR)  else 0  end  if (@uCURNCYID <> '' and @I_vRATECALC = 1) or (@uCURNCYID <> '' and @I_vRATECALC = 0)  select @I_vTotal_Landed_Cost_Amount = @I_vOrig_TotalLandedCostAmt end else begin  select @I_vOrig_TotalLandedCostAmt = @I_vTotal_Landed_Cost_Amount end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1=@I_vPOPRCTNM,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 8070    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  while (1=1) begin  insert POP10700  (  ACPURIDX,  Applied,  Apportion_By,  CALCMTHD,  Calculation_Percentage,  CURNCYID,  Currency_Note_Index,  CURRNIDX,  DECPLCUR,  DENXRATE,  DistRef,  EXCHDATE,  EXGTBLID,  INVINDX,  Invoice_Match,  Landed_Cost_ID,  Landed_Cost_Type,  Landed_Cost_Warnings,  LCHDRNUMBER,  LCLINENUMBER,  Long_Description,  MCTRXSTT,  NOTEINDX,  ODECPLCU,  Orig_Landed_Cost_Amount,  Orig_TotalLandedCostAmt,  Orig_UnapportionedAmount,  POPRCTNM,  PURPVIDX,  RATECALC,  RATETPID,  RCPTLNNM,  TIME1,  Total_Landed_Cost_Amount,  Vendor_Note_Index,  VENDORID,  XCHGRATE  )  select  @I_vACPURIDX,     @I_vApplied,     @I_vApportion_By,    @CALCMTHD,     @I_vCalculation_Percentage,   case       when @MCINSTALLED = 0   then ''  else @I_vCURNCYID  end,   @Currency_Note_Index,    case       when @MCINSTALLED = 0   then 0  else @CURRNIDX  end,   @LCFUNCTDEC + 7,    0,      @I_vDistRef,     @I_vEXCHDATE,     @I_vEXGTBLID,     @I_vINVINDX,     @I_vInvoice_Match,    @I_vLanded_Cost_ID,    case      when @I_vRCPTLNNM = 0  then 2  else 1  end,  @I_vLanded_Cost_Warnings,   @I_vLCHDRNUMBER,    @I_vLCLINENUMBER,    @Long_Description,    0,      @NOTEINDX,     case      when @uCURNCYID <> '' or @ISMCTRX = 1  then @ODECPLCU + 7  else @ODECPLCU + 6  end,  case      when @CALCMTHD = 1  then 0  else @I_vOrig_Landed_Cost_Amount  end,  @I_vOrig_TotalLandedCostAmt,   @I_vOrig_UnapportionedAmount,   @I_vPOPRCTNM,     @I_vPURPVIDX,     @I_vRATECALC,     @I_vRATETPID,     @I_vRCPTLNNM,     @I_vTIME1,     @I_vTotal_Landed_Cost_Amount,   @Vendor_Note_Index,    @I_vVENDORID,     @I_vXCHGRATE      if (@@error <> 0)  begin  select @O_iErrorState = 8071    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  break end  exec @iStatus = taPopRcptLandedCostPost  @I_vPOPRCTNM,   @I_vLanded_Cost_ID,   @I_vRCPTLNNM,   @I_vVENDORID,   @I_vLCLINENUMBER,   @I_vLCHDRNUMBER,   @I_vQTYSHPPD,  @I_vEXTDCOST,  @I_vreceiptdate ,   @I_vDistRef,   @I_vCalculation_Percentage,   @I_vTotal_Landed_Cost_Amount,   @I_vOrig_TotalLandedCostAmt,   @I_vOrig_UnapportionedAmount,   @I_vOrig_Landed_Cost_Amount,   @I_vApplied,   @I_vLanded_Cost_Warnings,   @I_vApportion_By,   @I_vInvoice_Match,   @I_vINVINDX,   @I_vACPURIDX,   @I_vPURPVIDX,   @I_vRATECALC,   @I_vCURNCYID,   @I_vEXGTBLID,   @I_vRATETPID,   @I_vEXCHDATE,   @I_vTIME1,   @I_vXCHGRATE,   @I_vEXGTBDSC,   @I_vEXTBLSRC,   @I_vRATEEXPR,   @I_vDYSTINCR,   @I_vRATEVARC,   @I_vTRXDTDEF,   @I_vPRVDSLMT,   @I_vDATELMTS,   @I_vEXPNDATE,   @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8072    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,   @O_oErrorState output end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1=@I_vPOPRCTNM,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 8073    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopRcptLandedCost] TO [DYNGRP]
GO

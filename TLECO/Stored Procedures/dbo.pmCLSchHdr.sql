SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLSchHdr]   @I_cUserID char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,   @iStatus int,   @tLoop tinyint,  @PM_POSTED smallint,  @PM_DOC_SCHEDULE smallint,  @PM_UNPOSTED smallint  select  @O_iErrorState = 0,  @iStatus  = 0  while (@tLoop is NULL) begin  select @tLoop = 1   if   @I_cUserID is NULL  or @I_cFileName1 is NULL  or @I_cSearchString1 is NULL  begin  select @O_iErrorState = 20846  break  end   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'PM_POSTED',   @PM_POSTED output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'PM_UNPOSTED',   @PM_UNPOSTED output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'PM_DOC_SCHEDULE',   @PM_DOC_SCHEDULE output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID  from   PM20400  where   Status = @PM_POSTED  and not exists  (select   1  from   PM20401  where   PM20400.SCHEDULE_NUMBER = PM20401.SCHEDULE_NUMBER)  if @@rowcount <> 0  begin  delete  PM20400  where   Status = @PM_POSTED  and not exists  (select   1  from   PM20401  where   PM20400.SCHEDULE_NUMBER = PM20401.SCHEDULE_NUMBER)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  4455,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID  from   PM20400  where   Status = @PM_POSTED  and  (not exists  (select   1  from   PM20000  where   PM20400.SCHEDULE_NUMBER = PM20000.VCHRNMBR  and  PM20000.DOCTYPE = @PM_DOC_SCHEDULE)  and  not exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  )    if @@rowcount <> 0  begin  delete  PM20400  where   Status = @PM_POSTED  and  (not exists  (select   1  from   PM20000  where   PM20400.SCHEDULE_NUMBER = PM20000.VCHRNMBR  and  PM20000.DOCTYPE = @PM_DOC_SCHEDULE)  and  not exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  )    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  4909,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID  from   PM20400  where   Status = @PM_POSTED  and  (exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  and  not exists  (select   1  from   PM30401  where   PM20400.SCHEDULE_NUMBER = PM30401.SCHEDULE_NUMBER)  )    if @@rowcount <> 0  begin  insert into  PM30401( SCHEDULE_NUMBER,  SCHEDULE_DESC,  ORIG_DOC_NUMBER,  ORIG_DOC_TYPE,  ORIG_VOUCHER_NUM,  VENDORID,  SCH_DOC_DATE,  SCHEDULE_AMOUNT,  FuncSchAmnt,  CURNCYID,  SCHEDULE_INT_TYPE1,  SCHEDULE_INT_RATE,  NUM_PAYMENTS,  PYMNT_FREQUENCY,  PAYMENT_AMOUNT,  FIRST_INV_DOC_DATE,  FIRST_INV_DUE_DATE,  PAY_ACCT_IDX,  PAY_OFFSET_ACCT_IDX,  INT_EXP_ACCT_IDX,  NOTEINDX,  Status,  CREDIT_MEMO_DOC_NUM)  select  SCHEDULE_NUMBER,  SCHEDULE_DESC,  ORIG_DOC_NUMBER,  ORIG_DOC_TYPE,  ORIG_VOUCHER_NUM,  VENDORID,  SCH_DOC_DATE,  SCHEDULE_AMOUNT,  FuncSchAmnt,  CURNCYID,  SCHEDULE_INT_TYPE1,  SCHEDULE_INT_RATE,  NUM_PAYMENTS,  PYMNT_FREQUENCY,  PAYMENT_AMOUNT,  FIRST_INV_DOC_DATE,  FIRST_INV_DUE_DATE,  PAY_ACCT_IDX,  PAY_OFFSET_ACCT_IDX,  INT_EXP_ACCT_IDX,  NOTEINDX,  Status,  CREDIT_MEMO_DOC_NUM  from  PM20400  where   Status = @PM_POSTED  and  (exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  and  not exists  (select   1  from   PM30401  where   PM20400.SCHEDULE_NUMBER = PM30401.SCHEDULE_NUMBER)  )   delete  PM20400  where   Status = @PM_POSTED  and  (exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  and  not exists  (select   1  from   PM30401  where   PM20400.SCHEDULE_NUMBER = PM30401.SCHEDULE_NUMBER)  )    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  4917,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID  from   PM20400  where   Status = @PM_POSTED  and  (exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  and  exists  (select   1  from   PM30401  where   PM20400.SCHEDULE_NUMBER = PM30401.SCHEDULE_NUMBER)  )    if @@rowcount <> 0  begin  delete  PM20400  where   Status = @PM_POSTED  and  (exists  (select   1  from   PM30200  where   PM20400.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)  and  exists  (select   1  from   PM30401  where   PM20400.SCHEDULE_NUMBER = PM30401.SCHEDULE_NUMBER)  )    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  4917,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID  from   PM20400  where   Status = @PM_UNPOSTED  and not exists  (select   1  from   PM00400  where   PM20400.SCHEDULE_NUMBER = PM00400.CNTRLNUM  and  PM00400.DOCTYPE = @PM_DOC_SCHEDULE)  if @@rowcount <> 0  begin  insert into  PM00400(CNTRLNUM,  DOCTYPE,  BCHSOURC  )  select  SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  'XXPM_Schent'  from  PM20400  where   Status = @PM_UNPOSTED  and   not exists  (select   1  from   PM00400  where   PM20400.SCHEDULE_NUMBER = PM00400.CNTRLNUM   and  PM00400.DOCTYPE = @PM_DOC_SCHEDULE)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10364,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[pmCLSchHdr] TO [DYNGRP]
GO

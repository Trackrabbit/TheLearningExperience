SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taIVTransactionSerialInsert] @I_vIVDOCNBR  char(17),    @I_vIVDOCTYP  smallint,   @I_vITEMNMBR  char(30),   @I_vSERLNMBR  char(20)= '' ,   @I_vADJTYPE  smallint = 0,   @I_vBIN char(15) = '',   @I_vCreateBin tinyint = 0,   @I_vLNSEQNBR  numeric(19,5) = 0,  @I_vLOCNCODE  char(10) = '',   @I_vAUTOCREATESERIAL int = 0,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set deadlock_priority low  set transaction isolation level read uncommitted set nocount on  declare  @SLTSQNUM int,     @OVRSERLT smallint,    @DATERECD datetime,    @ITMTRKOP smallint,    @UNITCOST numeric(19,5),   @DTSEQNUM numeric(19,5),   @QTYTYPE  smallint,    @FGDITMNM char(20),    @FGSERNBR char(30),    @VNDRNMBR char (25),    @CMPFINGD int,     @RCTSEQNM int,  @SERLNSLD int,     @ENABLEMULTIBIN tinyint,  @QtyAvailBin numeric(19,5),  @sCompanyID int,  @NOTEINDX numeric(19,5),  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @iGetNextNoteIdxErrState int,  @O_oErrorState int,  @iError int,     @USEEXISTINGSNLOTS tinyint,  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint  select  @SLTSQNUM = 0,  @OVRSERLT = 0,  @DATERECD = convert(varchar(12),getdate()),  @ITMTRKOP = 0,  @UNITCOST = 0,  @DTSEQNUM = 0,  @QTYTYPE  = 1,  @FGDITMNM = '',  @FGSERNBR = '',  @VNDRNMBR = '',  @CMPFINGD = 0,  @RCTSEQNM = 0,  @SERLNSLD = 1,  @iStatus = 0,  @O_iErrorState = 0,  @iGetNextNoteIdxErrState = 0,  @QtyAvailBin = 0,  @ENABLEMULTIBIN = 0,  @sCompanyID = 0,  @NOTEINDX = 0,  @USEEXISTINGSNLOTS = 0,  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taIVTransactionSerialInsertPre  @I_vIVDOCNBR output,  @I_vIVDOCTYP output,  @I_vITEMNMBR output,  @I_vSERLNMBR output,  @I_vADJTYPE output,  @I_vBIN output,  @I_vCreateBin output,  @I_vLNSEQNBR output,  @I_vLOCNCODE output,  @I_vAUTOCREATESERIAL output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3375    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vIVDOCNBR is null or  @I_vIVDOCTYP is null or  @I_vITEMNMBR is null or  @I_vLNSEQNBR is null or  @I_vSERLNMBR is null or  @I_vLOCNCODE is null or  @I_vAUTOCREATESERIAL is null or  @I_vBIN is null or  @I_vCreateBin is null or  @I_vRequesterTrx is null or  @I_vUSRDEFND1 is null or  @I_vUSRDEFND2 is null or  @I_vUSRDEFND3 is null or  @I_vUSRDEFND4 is null or  @I_vUSRDEFND5 is null) begin  select @O_iErrorState = 3376    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vIVDOCNBR = '' or  @I_vITEMNMBR = '' or  @I_vSERLNMBR = '') begin  select @O_iErrorState = 3377   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vIVDOCNBR = upper(@I_vIVDOCNBR),  @I_vITEMNMBR = upper(@I_vITEMNMBR),  @I_vSERLNMBR = upper(@I_vSERLNMBR),  @I_vBIN = upper(@I_vBIN)  select @ENABLEMULTIBIN = ENABLEMULTIBIN,  @USEEXISTINGSNLOTS = USEEXISTINGSNLOTS  from IV40100 (nolock)  if ((@ENABLEMULTIBIN = 0) and (@I_vBIN <> '')) begin  select @I_vBIN = '' end  if (@ENABLEMULTIBIN = 1) begin  select @I_vBIN = BIN, @I_vLOCNCODE = LOCNCODE from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and  SERLNMBR = @I_vSERLNMBR and  QTYTYPE = 1 and  SERLNSLD = 0   if (@I_vBIN = '')  begin  select @I_vBIN = 'AUTOCREATE'  end   if (@I_vCreateBin not in (0,1))  begin  select @O_iErrorState = 5901    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if not exists(select 1 from IV40701 (nolock) where LOCNCODE = @I_vLOCNCODE and BIN = @I_vBIN)  begin  if (@I_vCreateBin = 0)  begin  select @O_iErrorState = 5915     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCreateBin = 1)  begin  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 a (nolock) where a.INTERID = db_name()   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 5916   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert IV40701 (LOCNCODE, BIN, NOTEINDX)  select @I_vLOCNCODE, @I_vBIN, @NOTEINDX  if (@@error <> 0)  begin  select @O_iErrorState = 5917     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   if (not exists(select 1 from IV00112 (nolock)   where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE and BIN = @I_vBIN and QTYTYPE = 1) and  (@I_vADJTYPE = 1))  begin  if (@I_vCreateBin = 1)  begin  insert IV00112 (ITEMNMBR, LOCNCODE, BIN, QTYTYPE, QUANTITY, ATYALLOC)  select @I_vITEMNMBR, @I_vLOCNCODE, @I_vBIN, 1,0,0  if (@@error <> 0)  begin  select @O_iErrorState = 5918     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vCreateBin = 0)  begin  select @O_iErrorState = 5919     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vITEMNMBR <> '') begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 2268    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vADJTYPE not in (0,1)) begin  select @O_iErrorState = 1585     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vADJTYPE = 0) begin  select @I_vAUTOCREATESERIAL = 1   if (exists(select 1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR))  begin  select @O_iErrorState = 5912    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vIVDOCTYP not in (1,2)) begin  select @O_iErrorState = 1586    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vADJTYPE = 0) and (@I_vSERLNMBR <> '')) begin   if exists(  select 1 from IV00200  (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR union  select 1 from BM10400  (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 1 from POP10330 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 1 from IV10002  (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 1 from IVC10102 (nolock) where POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR union  select 1 from SOP10201 (nolock) where POSTED = 0 and ITEMNMBR = @I_vITEMNMBR and SERLTNUM = @I_vSERLNMBR)  begin  select @O_iErrorState = 1587    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@I_vADJTYPE = 1) and (@I_vSERLNMBR <> '') and (@I_vAUTOCREATESERIAL = 0)) begin   if not exists (select 1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR and SERLNSLD = 0)  begin  select @O_iErrorState = 1590    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vRequesterTrx not in(0,1)) begin  select @O_iErrorState = 3702     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @ITMTRKOP = ITMTRKOP from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@ITMTRKOP <> 2) begin  select @O_iErrorState = 1591    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @SITEINACTIVE = INACTIVE from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE select @ITEMSITEINACTIVE = INACTIVE from IV00102 (nolock) where (ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)  if (@I_vLOCNCODE <> '' and @SITEINACTIVE = 1) begin  select @O_iErrorState = 11829     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end if (@I_vLOCNCODE <> '' and @I_vITEMNMBR <> '' and @ITEMSITEINACTIVE = 1) begin  select @O_iErrorState = 11830     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@UNITCOST = 0) begin  select @UNITCOST =  case  when VCTNMTHD in (4,5) then STNDCOST  else CURRCOST  end  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR end  select @DTSEQNUM = isnull(max(DTSEQNUM),0) + 1 from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and DATERECD = @DATERECD and LOCNCODE = @I_vLOCNCODE and QTYTYPE = 1  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'IV_Transaction',  @I_vINDEX1 = @I_vIVDOCNBR,  @I_vINDEX2 = @I_vIVDOCTYP,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 2759   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@I_vAUTOCREATESERIAL = 1) and (@I_vSERLNMBR <> '') and  (@I_vADJTYPE = 1)) begin  if not exists(select 1 from IV00200 (nolock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR = @I_vSERLNMBR)  begin  if (@I_vLOCNCODE = '')  begin  select @O_iErrorState = 1592     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@USEEXISTINGSNLOTS = 1)  begin  select @O_iErrorState = 8675    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @OVRSERLT = 1   insert IV00200  (  ITEMNMBR,  LOCNCODE,  DATERECD,  DTSEQNUM,  SERLNMBR,  FGDITMNM,  FGSERNBR,  UNITCOST,  RCTSEQNM,  VNDRNMBR,  CMPFINGD,  SERLNSLD,  QTYTYPE,  BIN  )  select  @I_vITEMNMBR,      @I_vLOCNCODE,      convert(varchar(12),getdate()),    @DTSEQNUM,      @I_vSERLNMBR,      @FGDITMNM,      @FGSERNBR,      @UNITCOST,      @RCTSEQNM,      @VNDRNMBR,      @CMPFINGD,      @SERLNSLD,      @QTYTYPE,      @I_vBIN       if (@@error <> 0)  begin  select @O_iErrorState = 1593    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  update IV00102 set QTYONHND = QTYONHND + 1 where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 1594    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update IV00102 set QTYONHND = QTYONHND + 1 where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = ''   if (@@error <> 0)  begin  select @O_iErrorState = 1595    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@ENABLEMULTIBIN = 1)  begin  if (exists(select 1 from IV00112 (nolock)  where  ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @I_vLOCNCODE and  BIN = @I_vBIN and  QTYTYPE = 1))  begin  update IV00112 set QUANTITY = QUANTITY + 1   where  ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @I_vLOCNCODE and  BIN = @I_vBIN and  QTYTYPE = 1  end  else  begin  insert IV00112 (ITEMNMBR, LOCNCODE, BIN, QTYTYPE, QUANTITY, ATYALLOC)  select @I_vITEMNMBR, @I_vLOCNCODE, @I_vBIN, 1,1,0  end  if (@@error <> 0)  begin  select @O_iErrorState = 5913    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end end  select  @DATERECD = DATERECD,  @DTSEQNUM = DTSEQNUM,  @QTYTYPE = QTYTYPE,  @I_vLOCNCODE = LOCNCODE,  @I_vBIN = BIN  from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and  SERLNMBR = @I_vSERLNMBR and  SERLNSLD = 0  if (@I_vLOCNCODE = '') begin  select @O_iErrorState = 1627     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@QTYTYPE <> 1) begin  select @O_iErrorState = 1628    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vLNSEQNBR = 0) begin  select @I_vLNSEQNBR = LNSEQNBR from IV10002 (nolock)  where IVDOCTYP = @I_vIVDOCTYP and  IVDOCNBR = @I_vIVDOCNBR and  ITEMNMBR = @I_vITEMNMBR  if (@I_vLNSEQNBR = 0)  begin  select @I_vLNSEQNBR = isnull(max(LNSEQNBR),0) + 16384 from IV10002 (nolock)  where IVDOCTYP = @I_vIVDOCTYP and  IVDOCNBR = @I_vIVDOCNBR  end end  if (@SLTSQNUM = 0) begin  select @SLTSQNUM = isnull(max(SLTSQNUM),0) + 16384 from IV10002 (nolock)  where IVDOCTYP = @I_vIVDOCTYP and  IVDOCNBR = @I_vIVDOCNBR and  LNSEQNBR = @I_vLNSEQNBR end  if not exists(select 1 from IV10002 (nolock)   where   IVDOCTYP = @I_vIVDOCTYP and  IVDOCNBR = @I_vIVDOCNBR and  LNSEQNBR = @I_vLNSEQNBR and  SLTSQNUM = @SLTSQNUM) begin  insert IV10002  (  IVDOCNBR,  IVDOCTYP,  ITEMNMBR,  SERLTNUM,  SERLTQTY,  LNSEQNBR,  SLTSQNUM,  DATERECD,  DTSEQNUM,  OVRSERLT,  QTYSCRAPPED,  FROMBIN,  TOBIN,  MFGDATE,    EXPNDATE    )  select  @I_vIVDOCNBR,    @I_vIVDOCTYP,    @I_vITEMNMBR,    @I_vSERLNMBR,    1,     @I_vLNSEQNBR,    @SLTSQNUM,    case     when (@I_vADJTYPE = 0)   then ''  else @DATERECD  end,  case     when (@I_vADJTYPE = 0)   then 0  else @DTSEQNUM  end,  @OVRSERLT,    0,     @I_vBIN,    '',     '',     ''     if (@@error <> 0)  begin  select @O_iErrorState = 1596    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update IV00200 set SERLNSLD = 1  where ITEMNMBR = @I_vITEMNMBR and   LOCNCODE = @I_vLOCNCODE and   DATERECD = @DATERECD and  DTSEQNUM = @DTSEQNUM  if (@@error <> 0)  begin  select @O_iErrorState = 1597    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@I_vADJTYPE = 1) and (@ENABLEMULTIBIN = 1)) begin  update IV00112 set ATYALLOC = ATYALLOC + 1  where  ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @I_vLOCNCODE and  BIN = @I_vBIN and  QTYTYPE = 1  if (@@error <> 0)  begin  select @O_iErrorState = 5914    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taIVTransactionSerialInsertPost  @I_vIVDOCNBR,  @I_vIVDOCTYP,  @I_vITEMNMBR,  @I_vSERLNMBR,  @I_vADJTYPE,  @I_vBIN,  @I_vCreateBin,  @I_vLNSEQNBR,  @I_vLOCNCODE,  @I_vAUTOCREATESERIAL,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3378    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'IV_Transaction',  @I_vINDEX1 = @I_vIVDOCNBR,  @I_vINDEX2 = @I_vIVDOCTYP,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 2924   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taIVTransactionSerialInsert] TO [DYNGRP]
GO

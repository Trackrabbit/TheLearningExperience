SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create          procedure [dbo].[aagCreateAADistinSubLedgerforWriteOff]  @GLPOSTDT  datetime,  @CompanyID smallint,  @InterID char(5),  @SqlSessionID int,  @USERID char(15) as begin  set nocount on  declare @DOCNUMBR   char(21),  @RMDTYPAL   int,  @aaSubLedgerHdrID   int,  @DISTTYPE   smallint,  @SEQNUMBR   int,  @CUSTNMBR   char(15),  @DSTINDX   int,  @DEBITAMT numeric(19,5),  @CRDTAMNT   numeric(19,5),  @CURNCYID   char(15),  @CURRNIDX   smallint,  @ORCRDAMT   numeric(19,5),  @ORDBTAMT   numeric(19,5),  @ClassID   int,  @aaSubLedgerDistID   int,  @aaCustID   int,  @aaBrowseType   int,  @RATETPID   char(15),  @EXGTBLID   char(15),  @XCHGRATE   numeric(19,5),  @EXCHDATE   datetime,  @TIME1    datetime,   @RTCLCMTD   smallint,  @DENXRATE   numeric(19,7),  @MCTRXSTT   smallint,  @NOTEINDX   numeric(19,5),  @BCHSOURC   char(21),  @ReptFlag   smallint,  @TRXSORCE char(13),  @JRNENTRY int  select  @RMDTYPAL    = 0,  @aaSubLedgerHdrID  = 0,  @DISTTYPE   = 0,  @SEQNUMBR   = 0,  @DSTINDX   = 0,  @DEBITAMT   = 0,  @CRDTAMNT  = 0,  @CURRNIDX   = 0,  @ORCRDAMT   = 0,  @ORDBTAMT   = 0,  @ClassID   = 0,  @aaSubLedgerDistID  = 0,  @aaCustID   = 0,  @aaBrowseType   = 0,  @XCHGRATE   = 0,  @EXCHDATE   = 0,  @TIME1    = 0,   @RTCLCMTD   = 0,  @DENXRATE   = 0,  @MCTRXSTT   = 0,  @NOTEINDX   = 0,  @ReptFlag   = 0,  @JRNENTRY  = 0  declare RMOPEN cursor fast_forward  for  Select DOCNUMBR, RMDTYPAL, BCHSOURC, TRXSORCE  from RM20101  where  TRXSORCE <> '' and  RMDTYPAL in(3,7) and  DOCNUMBR <> '' and  GLPOSTDT = @GLPOSTDT   order by TRXSORCE,RMDTYPAL, DOCNUMBR  open RMOPEN  fetch next from  RMOPEN into @DOCNUMBR, @RMDTYPAL, @BCHSOURC, @TRXSORCE  while @@fetch_status = 0  begin  Select @aaSubLedgerHdrID =  isnull(aaSubLedgerHdrID,0) from AAG20000  where SERIES  = 3  and   DOCTYPE = @RMDTYPAL and  DOCNUMBR = @DOCNUMBR   if  @aaSubLedgerHdrID = 0  begin  exec DYNAMICS.dbo.aagGetNextID 20000, @CompanyID, @aaSubLedgerHdrID output   insert into AAG20000  (aaSubLedgerHdrID, SERIES, DOCTYPE, DOCNUMBR, Master_ID, aaHdrErrors)  values (@aaSubLedgerHdrID, 3, @RMDTYPAL,@DOCNUMBR,'',0)  select @ReptFlag = 1  end   declare RMDIST cursor fast_forward for  Select  DISTTYPE,  SEQNUMBR, CUSTNMBR, DSTINDX, DEBITAMT, CRDTAMNT,  CURNCYID, CURRNIDX, ORCRDAMT, ORDBTAMT  from  RM10101  where  RMDTYPAL =  @RMDTYPAL and  DOCNUMBR = @DOCNUMBR and  SEQNUMBR >=0  order by DOCNUMBR, SEQNUMBR  open RMDIST  fetch next from RMDIST into @DISTTYPE,  @SEQNUMBR, @CUSTNMBR, @DSTINDX, @DEBITAMT,  @CRDTAMNT, @CURNCYID, @CURRNIDX,@ORCRDAMT, @ORDBTAMT  while @@fetch_status = 0  begin  Select @aaSubLedgerDistID = isnull(aaSubLedgerDistID,0)  from AAG20001  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID >= 0 and   SEQNUMBR = @SEQNUMBR and  ACTINDX  = @DSTINDX  and  DEBITAMT = @DEBITAMT and  CRDTAMNT = @CRDTAMNT and  ORDBTAMT = @ORDBTAMT and  ORCRDAMT = @ORCRDAMT  if @aaSubLedgerDistID  = 0  begin  Select @aaSubLedgerDistID = isnull(max(aaSubLedgerDistID),0) + 1  from AAG20001  where  aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID >= 0   set @aaBrowseType = 0  set @ClassID = 0  exec aagGetClassIDBrowseType @DSTINDX, @ClassID output, @aaBrowseType output    Select  @RATETPID = RATETPID, @EXGTBLID = EXGTBLID,  @XCHGRATE = XCHGRATE, @EXCHDATE = EXCHDATE,  @TIME1 = TIME1, @RTCLCMTD= RTCLCMTD, @DENXRATE = @DENXRATE,  @MCTRXSTT = MCTRXSTT  from MC020102  where RMDTYPAL = @RMDTYPAL and  DOCNUMBR = @DOCNUMBR   insert into AAG20001  (aaSubLedgerHdrID, aaSubLedgerDistID, INTERID, ACTINDX, DISTTYPE, aaBrowseType,  DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, SEQNUMBR,  GLPOSTDT, aaCustID, POSTED ,RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT,aaChangeDate,aaChangeTime)   values  (@aaSubLedgerHdrID, @aaSubLedgerDistID, @InterID, @DSTINDX, @DISTTYPE, @aaBrowseType,  @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT, isnull(@CURNCYID,' '), @CURRNIDX, @SEQNUMBR,  @GLPOSTDT, @CUSTNMBR, 1, isnull(@RATETPID,' '), isnull(@EXGTBLID,' '), @XCHGRATE, @EXCHDATE, @TIME1,  @RTCLCMTD, @DENXRATE, @MCTRXSTT,convert(char(12), getdate(), 102),convert(char(12), getdate(), 108))   select @ReptFlag = 1   exec DYNAMICS.dbo.smGetNextNoteIndex @CompanyID, @SqlSessionID, @NOTEINDX output  insert into  AAG20002  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT,  ORCRDAMT, aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors)  values (@aaSubLedgerHdrID, @aaSubLedgerDistID,1, @DEBITAMT, @CRDTAMNT, @ORDBTAMT,  @ORCRDAMT,10000, ' ', @NOTEINDX,0)  if @aaBrowseType <> 0  begin  insert into AAG20003  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID,   aaTrxDimID, aaTrxCodeID, aaCodeErrors)  Select @aaSubLedgerHdrID, @aaSubLedgerDistID, 1 , aaTrxDimID, aaTrxDimCodeIDDflt , 0  from AAG00202 where aaAcctClassID = @ClassID and aaTrxDimID >=0  end   end   select @aaSubLedgerDistID = 0  fetch next from RMDIST into @DISTTYPE,  @SEQNUMBR, @CUSTNMBR, @DSTINDX, @DEBITAMT,  @CRDTAMNT, @CURNCYID, @CURRNIDX,@ORCRDAMT, @ORDBTAMT   end   close RMDIST  deallocate RMDIST   if @ReptFlag = 1   begin  exec aagUpdateReprortTableforDDR @USERID,'XRM_Sales',@aaSubLedgerHdrID,  @RMDTYPAL,@DOCNUMBR,@GLPOSTDT  select @ReptFlag = 0  end  fetch next from  RMOPEN into @DOCNUMBR, @RMDTYPAL, @BCHSOURC, @TRXSORCE  select @aaSubLedgerHdrID = 0   end  close RMOPEN  deallocate RMOPEN  declare cgl cursor fast_forward for  Select JRNENTRY from GL10000  where SERIES = 3  and  DTATRXType in (3,1) and  TRXDATE =  @GLPOSTDT  open cgl  fetch next from cgl into @JRNENTRY  while @@fetch_status = 0  begin  exec aagCreateDefaultAAForGLWork  @JRNENTRY,  @InterID,  @SqlSessionID,  @USERID  fetch next from cgl into @JRNENTRY  end   close cgl  deallocate cgl   set nocount off end    
GO
GRANT EXECUTE ON  [dbo].[aagCreateAADistinSubLedgerforWriteOff] TO [DYNGRP]
GO

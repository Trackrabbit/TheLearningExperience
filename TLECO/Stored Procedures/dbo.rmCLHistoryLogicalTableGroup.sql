SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[rmCLHistoryLogicalTableGroup]   @I_cUserID char(15) = NULL,  @I_cFunctionalCurrency char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cFileName2 varchar(40) = NULL,  @I_cFileName3 varchar(40) = NULL,  @I_cFileName4 varchar(40) = NULL,  @I_cFileName5 varchar(40) = NULL,  @I_cFileName6 varchar(40) = NULL,  @I_cFileName7 varchar(40) = NULL,  @I_cFileName8 varchar(40) = NULL,  @I_cFileName9 varchar(40) = NULL,  @I_cFileName10 varchar(40) = NULL,  @I_tMCRegistered tinyint  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,   @iStatus int,   @tLoop tinyint,  @cMessage1 char(255),  @cDBName char(5),  @cSearchString1 char(2),  @CHECK smallint,  @RMDOCCRMEMO smallint,  @HISTORY   smallint,  @TRUE tinyint,  @RM_DOC_SCH_PYMNT smallint  select  @O_iErrorState = 0,  @iStatus  = 0,  @cSearchString1 = '%1',  @TRUE  = 1  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL  or @I_cFunctionalCurrency is NULL  or @I_cFileName1 is NULL  or @I_cFileName2 is NULL  or @I_cFileName3 is NULL  or @I_cFileName4 is NULL  or @I_cFileName5 is NULL  or @I_cFileName6 is NULL  or @I_cFileName7 is NULL  or @I_cFileName8 is NULL  or @I_cFileName9 is NULL  or @I_cFileName10 is NULL  or @I_tMCRegistered is NULL  begin  select @O_iErrorState = 20846  break  end   create table #CNTRLNUMTEMP(  CNTRLNUM varchar(21) not null,  DOCTYPE smallint not null,  VENDORID varchar(15) not null )   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'CHECK',   @CHECK output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'RM_DOC_SCH_PYMNT',   @RM_DOC_SCH_PYMNT output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @cDBName = db_name()  exec @iStatus = DYNAMICS.dbo.smGetMsgString  871,   @cDBName,  @cMessage1 output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'HIST',   @HISTORY output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'RM_DOC_CRMEMO',   @RMDOCCRMEMO output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM30101  where RM30101.CURNCYID <> ''  and RM30101.CURNCYID <> @I_cFunctionalCurrency  and NOT EXISTS  (select 1  from MC020102  where RM30101.DOCNUMBR = MC020102.DOCNUMBR  and RM30101.RMDTYPAL = MC020102.RMDTYPAL )   if @@rowcount <> 0  begin  if @I_tMCRegistered = @TRUE   begin  delete  RM30101  from  RM30101  where RM30101.CURNCYID <> ''  and RM30101.CURNCYID <> @I_cFunctionalCurrency  and NOT EXISTS  (select 1  from MC020102  where RM30101.DOCNUMBR = MC020102.DOCNUMBR  and RM30101.RMDTYPAL = MC020102.RMDTYPAL )   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  17638,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end  else   begin  update  RM30101  set   CURNCYID = ''  from  RM30101  where RM30101.CURNCYID <> ''  and RM30101.CURNCYID <> @I_cFunctionalCurrency  and NOT EXISTS  (select 1  from MC020102  where RM30101.DOCNUMBR = MC020102.DOCNUMBR  and RM30101.RMDTYPAL = MC020102.RMDTYPAL )  end   end    update RM00401   set  DCSTATUS = 3,  BCHSOURC = RM30101.BCHSOURC,  CUSTNMBR = RM30101.CUSTNMBR,  CHEKNMBR =  case CSHRCTYP  when 0 then RM30101.CHEKNMBR  else ''  end,  DOCDATE = RM30101.DOCDATE  from  RM30101,  RM00401  where RM30101.DOCNUMBR = RM00401.DOCNUMBR  and RM30101.RMDTYPAL = RM00401.RMDTYPAL   and  (RM00401.DCSTATUS <> 3  or  RM00401.BCHSOURC <> RM30101.BCHSOURC  or RM00401.CUSTNMBR = RM30101.CUSTNMBR  or RM00401.DOCDATE = RM30101.DOCDATE)   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM30101  where NOT EXISTS  (select 1  from RM00401  where RM00401.DOCNUMBR = RM30101.DOCNUMBR  and RM00401.RMDTYPAL = RM30101.RMDTYPAL)   if @@rowcount <> 0  begin  insert into   RM00401(  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  CHEKNMBR,  DOCDATE)  select  DOCNUMBR,  RMDTYPAL,  3,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  CHEKNMBR =  case CSHRCTYP  when @CHECK then CHEKNMBR  else ''  end,  DOCDATE  from  RM30101  where NOT EXISTS  (select 1  from RM00401    where RM00401.DOCNUMBR = RM30101.DOCNUMBR  and RM00401.RMDTYPAL = RM30101.RMDTYPAL)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10324,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID)  select  APFRDCNM,  APFRDCTY,  CUSTNMBR  from  RM30201  where not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30201.APFRDCNM  and  RM30101.RMDTYPAL = RM30201.APFRDCTY)  and not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30201.APTODCNM  and  RM30101.RMDTYPAL = RM30201.APTODCTY)   if @@rowcount <> 0  begin   delete  RM30201  from  RM30201  where not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30201.APFRDCNM  and  RM30101.RMDTYPAL = RM30201.APFRDCTY)  and not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30201.APTODCNM  and  RM30101.RMDTYPAL = RM30201.APTODCTY)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName2,  NULL,  10327,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID)  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM30501  where not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30501.DOCNUMBR  and  RM30101.RMDTYPAL = RM30501.RMDTYPAL)   if @@rowcount <> 0  begin   delete  RM30501  from  RM30501  where not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30501.DOCNUMBR  and  RM30101.RMDTYPAL = RM30501.RMDTYPAL)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName3,  NULL,  10326,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID)  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM30601  where not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30601.DOCNUMBR  and  RM30101.RMDTYPAL = RM30601.RMDTYPAL)   if @@rowcount <> 0  begin   delete  RM30601  from  RM30601  where not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM30601.DOCNUMBR  and  RM30101.RMDTYPAL = RM30601.RMDTYPAL)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName4,  NULL,  10328,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  MC020102  where   MC020102.DCSTATUS = @HISTORY  and not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = MC020102.DOCNUMBR  and  RM30101.RMDTYPAL = MC020102.RMDTYPAL)   if @@rowcount <> 0  begin   delete  MC020102  from  MC020102  where   MC020102.DCSTATUS = @HISTORY  and not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = MC020102.DOCNUMBR  and  RM30101.RMDTYPAL = MC020102.RMDTYPAL)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName5,  NULL,  17638,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID)  select  DOCNUMBR,  RMDTYPAL,  CUSTNMBR  from  RM00401  where  DCSTATUS = @HISTORY  and not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM00401.DOCNUMBR  and  RM30101.RMDTYPAL = RM00401.RMDTYPAL)  and not exists  (select 1  from  RM30301  where  RM30301.DOCNUMBR = RM00401.DOCNUMBR  and  RM30301.RMDTYPAL = RM00401.RMDTYPAL)  and ((RM00401.RMDTYPAL < @RMDOCCRMEMO  and  not exists  (select 1  from  RM20201  where  RM20201.APTODCNM = RM00401.DOCNUMBR  and  RM20201.APTODCTY = RM00401.RMDTYPAL))  or  (RM00401.RMDTYPAL >= @RMDOCCRMEMO  and not exists  (select 1  from  RM20201  where  RM20201.APFRDCNM = RM00401.DOCNUMBR  and  RM20201.APFRDCTY = RM00401.RMDTYPAL)))   if @@rowcount <> 0  begin   delete  RM00401  from  RM00401  where  DCSTATUS = @HISTORY  and not exists  (select 1  from  RM30101  where  RM30101.DOCNUMBR = RM00401.DOCNUMBR  and  RM30101.RMDTYPAL = RM00401.RMDTYPAL)  and not exists  (select 1  from  RM30301  where  RM30301.DOCNUMBR = RM00401.DOCNUMBR  and  RM30301.RMDTYPAL = RM00401.RMDTYPAL)  and ((RM00401.RMDTYPAL < @RMDOCCRMEMO  and  not exists  (select 1  from  RM20201  where  RM20201.APTODCNM = RM00401.DOCNUMBR  and  RM20201.APTODCTY = RM00401.RMDTYPAL))  or  (RM00401.RMDTYPAL >= @RMDOCCRMEMO  and not exists  (select 1  from  RM20201  where  RM20201.APFRDCNM = RM00401.DOCNUMBR  and  RM20201.APFRDCTY = RM00401.RMDTYPAL)))  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName6,  NULL,  10345,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID)  select  STR(RNNMBR),  0,  CUSTNMBR  from  RM30702  where not exists  (select 1  from  RM30701  where  RM30701.RNNMBR = RM30702.RNNMBR  and  RM30701.CUSTNMBR = RM30702.CUSTNMBR  and RM30701.CURNCYID = RM30702.CURNCYID)   if @@rowcount <> 0  begin   delete  RM30702  from  RM30702  where not exists  (select 1  from RM30701  where RM30701.RNNMBR = RM30702.RNNMBR  and RM30701.CUSTNMBR = RM30702.CUSTNMBR  and RM30701.CURNCYID = RM30702.CURNCYID)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName7,  NULL,  4035,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @RM_DOC_SCH_PYMNT,  CUSTNMBR  from   RM30401  where   not exists  (select   1  from   RM20401  where   RM30401.SCHEDULE_NUMBER = RM20401.SCHEDULE_NUMBER)  if @@rowcount <> 0  begin  delete  RM30401  where   not exists  (select   1  from   RM20401  where   RM30401.SCHEDULE_NUMBER = RM20401.SCHEDULE_NUMBER)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName8,  NULL,  4918,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDULE_NUMBER,  @RM_DOC_SCH_PYMNT,  CUSTNMBR  from   RM30401  where   not exists  (select   1  from   RM30101  where   RM30401.SCHEDULE_NUMBER = RM30101.DOCNUMBR  and  RM30101.RMDTYPAL = @RM_DOC_SCH_PYMNT)    if @@rowcount <> 0  begin  delete  RM30401  where   not exists  (select   1  from   RM30101  where   RM30401.SCHEDULE_NUMBER = RM30101.DOCNUMBR  and  RM30101.RMDTYPAL = @RM_DOC_SCH_PYMNT)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName8,  NULL,  4909,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    exec @iStatus = rmCLEmailDetails  @I_cUserID,  @I_cFileName9,  @cSearchString1,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLEmailHistory  @I_cUserID,  @I_cFileName10,  @cSearchString1,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[rmCLHistoryLogicalTableGroup] TO [DYNGRP]
GO

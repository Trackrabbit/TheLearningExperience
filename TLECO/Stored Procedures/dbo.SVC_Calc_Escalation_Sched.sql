SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[SVC_Calc_Escalation_Sched](  @CallNumber char(11),  @WaitTime int,  @TIMEZONEDIFF smallint,  @WhenToSchedule datetime output  ) as declare @TempDate datetime,  @TempTime datetime,  @ContractNumber char(11),  @ContractLine numeric(19,5),  @Day int,  @Now datetime,  @MinutesToCarryOver int,  @TodayContractStart datetime,  @TodayContractEnd datetime,  @NowTime datetime,  @NowDate datetime,  @ContractStart datetime,  @ContractEnd datetime,  @SunStart datetime,  @SunEnd datetime,  @MonStart datetime,  @MonEnd datetime,  @TueStart datetime,  @TueEnd datetime,  @WedStart datetime,  @WedEnd datetime,  @ThuStart datetime,  @ThuEnd datetime,  @FriStart datetime,  @FriEnd datetime,  @SatStart datetime,  @SatEnd datetime,  @MinutesAvailableToday int,  @MinutesLeftToSpreadAtStart int,  @StartTime datetime,  @EndTime datetime,  @CustNumber char(15),  @Iteration int,  @OfficeID char(11),  @TechID char(11),  @CONTRACTTESTDATE datetime,  @OFFICETIMEZONEDIFF smallint,  @OFFICEDIFF smallint  select @Now = DATEADD(hh,@TIMEZONEDIFF,GETDATE()) select @ContractNumber = CONTNBR,   @ContractLine = SVC_Contract_Line_SEQ,   @CustNumber = CUSTNMBR,  @OfficeID = OFFID,  @TechID = TECHID  from SVC00200  where CALLNBR = @CallNumber select @WhenToSchedule = @Now select @MinutesToCarryOver = @WaitTime select @Day = datepart(weekday,@Now) select @MonStart = case  when USECVPD_1 = 1 then CNTCOVPD_1  else '00:00:00 1/1/1990'  end,  @MonEnd = case  when USECVPD_1 = 1 then Contract_Coverage_Period_1  else '00:00:00 1/1/1990'  end,  @TueStart = case  when USECVPD_2 = 1 then CNTCOVPD_2  else '00:00:00 1/1/1990'  end,  @TueEnd = case  when USECVPD_2 = 1 then Contract_Coverage_Period_2  else '00:00:00 1/1/1990'  end,  @WedStart = case  when USECVPD_3 = 1 then CNTCOVPD_3  else '00:00:00 1/1/1990'  end,  @WedEnd = case  when USECVPD_3 = 1 then Contract_Coverage_Period_3  else '00:00:00 1/1/1990'  end,  @ThuStart = case  when USECVPD_4 = 1 then CNTCOVPD_4  else '00:00:00 1/1/1990'  end,  @ThuEnd = case  when USECVPD_4 = 1 then Contract_Coverage_Period_4  else '00:00:00 1/1/1990'  end,  @FriStart = case  when USECVPD_5 = 1 then CNTCOVPD_5  else '00:00:00 1/1/1990'  end,  @FriEnd = case  when USECVPD_5 = 1 then Contract_Coverage_Period_5  else '00:00:00 1/1/1990'  end,  @SatStart = case  when USECVPD_6 = 1 then CNTCOVPD_6  else '00:00:00 1/1/1990'  end,  @SatEnd = case  when USECVPD_6 = 1 then Contract_Coverage_Period_6  else '00:00:00 1/1/1990'  end,  @SunStart = case  when USECVPD_7 = 1 then CNTCOVPD_7  else '00:00:00 1/1/1990'  end,  @SunEnd = case  when USECVPD_7 = 1 then Contract_Coverage_Period_7  else '00:00:00 1/1/1990'  end,  @ContractStart = STRTDATE,  @ContractEnd = ENDDATE  from SVC00601  where @ContractNumber = CONTNBR and @ContractLine = LNSEQNBR  select @CONTRACTTESTDATE = DATEADD(hh,@TIMEZONEDIFF,GETDATE())  If @ContractLine > 0 and @ContractStart < getdate() and getdate() < @ContractEnd  begin   select @Iteration = 0 ReProcess:  select @Iteration = @Iteration +1  select @MinutesLeftToSpreadAtStart = @MinutesToCarryOver   If (@Day%7) = 1 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SunStart  begin  select @NowTime = @SunStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SunEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 2 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @MonStart  begin  select @NowTime = @MonStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @MonEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 3 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @TueStart  begin  select @NowTime = @TueStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @TueEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 4 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @WedStart  begin  select @NowTime = @WedStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @WedEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 5 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @ThuStart  begin  select @NowTime = @ThuStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @ThuEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 6 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @FriStart  begin  select @NowTime = @FriStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @FriEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 0 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SatStart  begin  select @NowTime = @SatStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SatEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@MinutesLeftToSpreadAtStart > @MinutesToCarryOver or @Iteration < 2) and @MinutesToCarryOver > 0 goto ReProcess  end  if @MinutesToCarryOver > 0 begin  select @Now = DATEADD(hh,@TIMEZONEDIFF,GETDATE())  select @WhenToSchedule = @Now  select @MinutesToCarryOver = @WaitTime  select @Day = datepart(weekday,@Now)  select @MonStart = case  when WORKDYS_1 = 1 then WORKSTRT_1  else '00:00:00 1/1/1990'  end,  @MonEnd = case  when WORKDYS_1 = 1 then WORKEND_1  else '00:00:00 1/1/1990'  end,  @TueStart = case  when WORKDYS_2 = 1 then WORKSTRT_2  else '00:00:00 1/1/1990'  end,  @TueEnd = case  when WORKDYS_2 = 1 then WORKEND_2  else '00:00:00 1/1/1990'  end,  @WedStart = case  when WORKDYS_3 = 1 then WORKSTRT_3  else '00:00:00 1/1/1990'  end,  @WedEnd = case  when WORKDYS_3 = 1 then WORKEND_3  else '00:00:00 1/1/1990'  end,  @ThuStart = case  when WORKDYS_4 = 1 then WORKSTRT_4  else '00:00:00 1/1/1990'  end,  @ThuEnd = case  when WORKDYS_4 = 1 then WORKEND_4  else '00:00:00 1/1/1990'  end,  @FriStart = case  when WORKDYS_5 = 1 then WORKSTRT_5  else '00:00:00 1/1/1990'  end,  @FriEnd = case  when WORKDYS_5 = 1 then WORKEND_5  else '00:00:00 1/1/1990' end,  @SatStart = case  when WORKDYS_6 = 1 then WORKSTRT_6  else '00:00:00 1/1/1990'  end,  @SatEnd = case  when WORKDYS_6 = 1 then WORKEND_6  else '00:00:00 1/1/1990'  end,  @SunStart = case  when WORKDYS_7 = 1 then WORKSTRT_7  else '00:00:00 1/1/1990'  end,  @SunEnd = case  when WORKDYS_7 = 1 then WORKEND_7  else '00:00:00 1/1/1990'  end   from SVC00950  where CUSTNMBR = @CustNumber  If @MinutesToCarryOver > 0   begin  select @Iteration = 0 ReProcess2:   select @Iteration = @Iteration +1  select @MinutesLeftToSpreadAtStart = @MinutesToCarryOver   If (@Day%7) = 1 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SunStart  begin  select @NowTime = @SunStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SunEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 2 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @MonStart  begin  select @NowTime = @MonStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @MonEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 3 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @TueStart  begin  select @NowTime = @TueStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @TueEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 4 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @WedStart  begin  select @NowTime = @WedStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @WedEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin            select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end    If (@Day%7) = 5 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @ThuStart  begin  select @NowTime = @ThuStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @ThuEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 6 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @FriStart  begin  select @NowTime = @FriStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @FriEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 0 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SatStart  begin  select @NowTime = @SatStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SatEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@MinutesLeftToSpreadAtStart > @MinutesToCarryOver or @Iteration < 2) and @MinutesToCarryOver > 0 goto ReProcess2  end end if @MinutesToCarryOver > 0  begin  select @OFFICETIMEZONEDIFF = SVC00900.TIMEZONEVALUE from  SVC00900 INNER JOIN  SVC00902 ON (SVC00900.TIMEZONE = SVC00902.TIMEZONE)  where SVC00902.OFFID = @OfficeID  IF @OFFICETIMEZONEDIFF is null  select @OFFICETIMEZONEDIFF = 0  select @OFFICEDIFF = ABS(@TIMEZONEDIFF) - ABS(@OFFICETIMEZONEDIFF)  select @Now = DATEADD(hh,(@TIMEZONEDIFF + @OFFICEDIFF),GETDATE())  select @WhenToSchedule = @Now  select @MinutesToCarryOver = @WaitTime  select @Day = datepart(weekday,@Now)  select @MonStart = case  when WORKDYS_1 = 1 then WORKSTRT_1  else '00:00:00 1/1/1990'  end,  @MonEnd = case  when WORKDYS_1 = 1 then WORKEND_1  else '00:00:00 1/1/1990'  end,  @TueStart = case  when WORKDYS_2 = 1 then WORKSTRT_2  else '00:00:00 1/1/1990'  end,  @TueEnd = case  when WORKDYS_2 = 1 then WORKEND_2  else '00:00:00 1/1/1990'  end,  @WedStart = case  when WORKDYS_3 = 1 then WORKSTRT_3  else '00:00:00 1/1/1990'  end,  @WedEnd = case  when WORKDYS_3 = 1 then WORKEND_3  else '00:00:00 1/1/1990'  end,  @ThuStart = case  when WORKDYS_4 = 1 then WORKSTRT_4  else '00:00:00 1/1/1990'  end,  @ThuEnd = case  when WORKDYS_4 = 1 then WORKEND_4  else '00:00:00 1/1/1990'  end,  @FriStart = case  when WORKDYS_5 = 1 then WORKSTRT_5  else '00:00:00 1/1/1990'  end,  @FriEnd = case  when WORKDYS_5 = 1 then WORKEND_5  else '00:00:00 1/1/1990'  end,  @SatStart = case  when WORKDYS_6 = 1 then WORKSTRT_6  else '00:00:00 1/1/1990'  end,  @SatEnd = case  when WORKDYS_6 = 1 then WORKEND_6  else '00:00:00 1/1/1990'  end,  @SunStart = case  when WORKDYS_7 = 1 then WORKSTRT_7  else '00:00:00 1/1/1990'  end,  @SunEnd = case  when WORKDYS_7 = 1 then WORKEND_7  else '00:00:00 1/1/1990'  end  from SVC00902  where OFFID = @OfficeID  If @MinutesToCarryOver > 0   begin  select @Iteration = 0 ReProcess3:   select @Iteration = @Iteration +1  select @MinutesLeftToSpreadAtStart = @MinutesToCarryOver   If (@Day%7) = 1 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SunStart  begin  select @NowTime = @SunStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SunEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 2 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @MonStart  begin  select @NowTime = @MonStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @MonEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end      end  If (@Day%7) = 3 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @TueStart  begin  select @NowTime = @TueStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @TueEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 4 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @WedStart  begin  select @NowTime = @WedStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @WedEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 5 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @ThuStart  begin  select @NowTime = @ThuStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @ThuEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 6 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @FriStart  begin  select @NowTime = @FriStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @FriEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 0 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SatStart  begin  select @NowTime = @SatStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SatEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@MinutesLeftToSpreadAtStart > @MinutesToCarryOver or @Iteration < 2) and @MinutesToCarryOver > 0 goto ReProcess3  end end if @MinutesToCarryOver > 0 begin  select @Now = DATEADD(hh,@TIMEZONEDIFF,GETDATE())  select @WhenToSchedule = @Now  select @MinutesToCarryOver = @WaitTime  select @Day = datepart(weekday,@Now)  select @MonStart = case  when WORKDYS_1 = 1 then WORKSTRT_1  else '00:00:00 1/1/1990'  end,  @MonEnd = case                     when WORKDYS_1 = 1 then WORKEND_1  else '00:00:00 1/1/1990'  end,  @TueStart = case  when WORKDYS_2 = 1 then WORKSTRT_2  else '00:00:00 1/1/1990'  end,  @TueEnd = case  when WORKDYS_2 = 1 then WORKEND_2  else '00:00:00 1/1/1990'  end,  @WedStart = case  when WORKDYS_3 = 1 then WORKSTRT_3  else '00:00:00 1/1/1990'  end,  @WedEnd = case  when WORKDYS_3 = 1 then WORKEND_3  else '00:00:00 1/1/1990'  end,  @ThuStart = case  when WORKDYS_4 = 1 then WORKSTRT_4  else '00:00:00 1/1/1990'  end,  @ThuEnd = case  when WORKDYS_4 = 1 then WORKEND_4  else '00:00:00 1/1/1990'  end,  @FriStart = case  when WORKDYS_5 = 1 then WORKSTRT_5  else '00:00:00 1/1/1990'  end,  @FriEnd = case  when WORKDYS_5 = 1 then WORKEND_5  else '00:00:00 1/1/1990'  end,  @SatStart = case  when WORKDYS_6 = 1 then WORKSTRT_6  else '00:00:00 1/1/1990'  end,  @SatEnd = case  when WORKDYS_6 = 1 then WORKEND_6  else '00:00:00 1/1/1990'  end,  @SunStart = case  when WORKDYS_7 = 1 then WORKSTRT_7  else '00:00:00 1/1/1990'  end,  @SunEnd = case  when WORKDYS_7 = 1 then WORKEND_7  else '00:00:00 1/1/1990'  end  from SVC00100  where @TechID = TECHID  select @Iteration = 0 ReProcess4:  select @Iteration = @Iteration +1  select @MinutesLeftToSpreadAtStart = @MinutesToCarryOver   If (@Day%7) = 1 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SunStart  begin  select @NowTime = @SunStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SunEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 2 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @MonStart  begin  select @NowTime = @MonStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @MonEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 3 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @TueStart  begin  select @NowTime = @TueStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @TueEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 4 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @WedStart  begin  select @NowTime = @WedStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @WedEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 5 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @ThuStart  begin  select @NowTime = @ThuStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @ThuEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 6 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @FriStart  begin  select @NowTime = @FriStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @FriEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin  select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)  select @Day = @Day +1  end  end  If (@Day%7) = 0 and @MinutesToCarryOver > 0   begin  exec SVC_util_split_datetime @Now, @NowDate output, @NowTime output  if @NowTime < @SatStart  begin  select @NowTime = @SatStart  exec SVC_util_combine_date_time @NowDate, @NowTime, @Now output   end  select @MinutesAvailableToday = datediff(minute, @NowTime, @SatEnd)   if @MinutesAvailableToday < 0 select @MinutesAvailableToday = 0  if @MinutesAvailableToday >= @MinutesToCarryOver  begin  select @WhenToSchedule = dateadd(minute,@MinutesToCarryOver,@Now)  select @MinutesToCarryOver = 0  end  else  begin select @MinutesToCarryOver = @MinutesToCarryOver - @MinutesAvailableToday  select @Now = dateadd(day,1,@NowDate)            select @Day = @Day +1  end  end  If (@MinutesLeftToSpreadAtStart > @MinutesToCarryOver or @Iteration < 2) and @MinutesToCarryOver > 0 goto ReProcess4 end  If @MinutesToCarryOver > 0  select @WhenToSchedule = dateadd(minute,@WaitTime,getdate())  else  select @WhenToSchedule = DATEADD(hh,-1 * (@TIMEZONEDIFF + @OFFICEDIFF),@WhenToSchedule)    
GO
GRANT EXECUTE ON  [dbo].[SVC_Calc_Escalation_Sched] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[glpUpdateAllocationRegister]  @I_sTransactionType     smallint        = NULL,  @I_iJournalEntry        int             = NULL,  @I_cBatchSource         char(15)        = NULL,  @I_cBatchNumber         char(15)        = NULL,  @I_cUserID              char(15)        = NULL,  @I_tRealTimeQuick       tinyint  = NULL,  @I_iAccountIndex        int             = NULL,  @I_sAccountType         smallint        = NULL,  @I_mDebit               numeric(19,5) = NULL,  @I_mCredit              numeric(19,5) = NULL,  @I_dTransactionDate     datetime        = NULL,  @I_mSequenceLine        numeric(19,5) = NULL,  @I_cDescription         char(30)        = NULL,  @I_tOffsetAccount       tinyint  = NULL,   @I_tHistory             tinyint  = NULL,  @I_tReversing tinyint  = NULL,  @I_bLineMessages        binary(4)       = NULL,  @I_cFuncCurrencyID char(15)        = NULL,  @I_sFuncCurrencyIndex   smallint        = NULL,  @I_bLineMessages2       binary(4)       = NULL,  @I_mOrigDebit           numeric(19,5) = NULL,  @I_mOrigCredit          numeric(19,5) = NULL,  @I_cOrigCurrencyID      char(15)        = NULL,  @I_sOrigCurrencyIndex   smallint        = NULL,  @I_cIntercompanyID char(5)  = NULL,  @I_tICTransaction tinyint  = NULL,  @I_cOriginatingDocNumber  char(21) = NULL,  @I_cOriginatingControlNumber  char(21) = NULL,  @I_cOriginatingMasterID char(31) = NULL,  @I_cOriginatingMasterName char(65) = NULL,  @I_sOriginatingTrxType   smallint = NULL,  @I_sMCTrxState smallint  = NULL ,  @I_nExchangeRate  numeric(19, 7)  = NULL,  @I_nDenomExchangeRate  numeric(19, 7)  = NULL,  @O_iErrorState          int             = NULL  output as  declare  @TRUE                   tinyint,   @FALSE tinyint,   @AUTO_REV_TRX    smallint,  @BUSINESS_FORM   smallint,  @CLEARING_TRX    smallint,  @NORMAL_TRX             smallint,  @DEFAULT_DATE    datetime,  @UNIT_ACCT smallint,  @UNIT_ALLOC_ACCT smallint,  @iAccountIndex          int,  @iOffsetAccountIndex    int,  @cBatchSource           char(15),  @cBatchNumber           char(15),  @dTransactionDate       datetime,  @sFuncCurrencyIndex     smallint,  @mOrigDebit             numeric(19,5),  @mOrigCredit            numeric(19,5),  @tTransaction           tinyint,  @tLoop                  tinyint,  @iError                 int,  @iStatus int,  @dMinDate datetime  select  @O_iErrorState = 0,  @iStatus = 0  exec @iStatus = smGetMinDate @dMinDate output  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin   select @tLoop = 1   if      @I_sTransactionType     is NULL or  @I_iJournalEntry        is NULL or  @I_cBatchSource         is NULL or  @I_cBatchNumber         is NULL or  @I_cUserID              is NULL or   @I_tRealTimeQuick       is NULL or  @I_iAccountIndex        is NULL or  @I_sAccountType         is NULL or  @I_mDebit               is NULL or  @I_mCredit              is NULL or  @I_dTransactionDate     is NULL or  @I_mSequenceLine        is NULL or  @I_cDescription         is NULL or  @I_tOffsetAccount       is NULL or   @I_tHistory             is NULL or  @I_tReversing is NULL or  @I_bLineMessages        is NULL or  @I_cFuncCurrencyID      is NULL or  @I_sFuncCurrencyIndex   is NULL or  @I_bLineMessages2       is NULL or  @I_mOrigDebit           is NULL or  @I_mOrigCredit          is NULL or  @I_cOrigCurrencyID      is NULL or  @I_sOrigCurrencyIndex   is NULL or  @I_cIntercompanyID is NULL or  @I_tICTransaction is NULL or  @I_sMCTrxState is NULL or  @I_nExchangeRate  is NULL or  @I_nDenomExchangeRate is NULL   begin  select @O_iErrorState = 20028  break  end    select  @TRUE           = 1,  @FALSE  = 0,  @AUTO_REV_TRX   = 4,  @BUSINESS_FORM  = 5,  @CLEARING_TRX   = 2,  @NORMAL_TRX     = 1,  @DEFAULT_DATE = @dMinDate,  @UNIT_ACCT      = 2,  @UNIT_ALLOC_ACCT = 4   select  @cBatchSource   = @I_cBatchSource,  @cBatchNumber   = @I_cBatchNumber   if (@I_cFuncCurrencyID = @I_cOrigCurrencyID) and  @I_sTransactionType <> @CLEARING_TRX and  @I_tICTransaction = @FALSE     select @I_mOrigDebit = 0.0,   @I_mOrigCredit = 0.0   else if @I_sAccountType = @UNIT_ACCT or  @I_sAccountType  = @UNIT_ALLOC_ACCT     select @I_mOrigDebit = 0.0,   @I_mOrigCredit = 0.0    if      @I_tHistory = @TRUE or   @I_sTransactionType = @AUTO_REV_TRX or  @I_tReversing = @TRUE   select @dTransactionDate = @I_dTransactionDate   else  select @dTransactionDate = @DEFAULT_DATE   if @I_sAccountType = @UNIT_ACCT or  @I_sAccountType  = @UNIT_ALLOC_ACCT or  @I_tICTransaction = @TRUE  begin  select @sFuncCurrencyIndex = @I_sFuncCurrencyIndex  end  else   begin  select @sFuncCurrencyIndex = 0  end    if @I_sTransactionType = @NORMAL_TRX    or  @I_sTransactionType = @AUTO_REV_TRX  or  @I_sTransactionType = @CLEARING_TRX   begin  if @I_tOffsetAccount = @TRUE  select  @iAccountIndex = 0,  @iOffsetAccountIndex = @I_iAccountIndex  else  select  @iAccountIndex = @I_iAccountIndex,  @iOffsetAccountIndex = 0  end  else if @I_sTransactionType = @BUSINESS_FORM  begin  if @I_tRealTimeQuick = @TRUE  begin  exec @iStatus = DYNAMICS..smGetConstantString  'XGL_BUSINESS_STR',   @cBatchSource           output,  @O_iErrorState          output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end  else  begin  exec @iStatus = DYNAMICS..smGetConstantString  'GL_BUSINESS_STR',   @cBatchSource           output,  @O_iErrorState          output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end   select   @iAccountIndex          = @I_iAccountIndex,   @iOffsetAccountIndex    = 0  end   insert  into   PJOURNAL (  USERID,  BCHSOURC,  BACHNUMB,  JRNENTRY,  SQNCLINE,  ACTINDX,  OFFINDX,  DEBITAMT,  CRDTAMNT,  GLLINMSG,  GLLINMS2,  TRXDATE,  ACCTTYPE,  DSCRIPTN,  CURNCYID,  CURRNIDX,  FUNCRIDX,  ORDBTAMT,  ORCRDAMT,  INTERID,  ORCTRNUM,  ORDOCNUM,  ORMSTRID,  ORMSTRNM,  ORTRXTYP,  MCTRXSTT,  XCHGRATE,  DENXRATE )  values (  @I_cUserID,  @cBatchSource,   @cBatchNumber,  @I_iJournalEntry,  @I_mSequenceLine,  @iAccountIndex,  @iOffsetAccountIndex,  @I_mDebit,  @I_mCredit,  @I_bLineMessages,  @I_bLineMessages2,  @dTransactionDate,   @I_sAccountType,  @I_cDescription,  @I_cOrigCurrencyID,  @I_sOrigCurrencyIndex,  @sFuncCurrencyIndex,  @I_mOrigDebit,  @I_mOrigCredit,  @I_cIntercompanyID,  @I_cOriginatingControlNumber,  @I_cOriginatingDocNumber,  @I_cOriginatingMasterID,  @I_cOriginatingMasterName,  @I_sOriginatingTrxType,  @I_sMCTrxState,  @I_nExchangeRate,  @I_nDenomExchangeRate)   if @@rowcount <> 1  begin  select @O_iErrorState = 20029  break  end   end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[glpUpdateAllocationRegister] TO [DYNGRP]
GO

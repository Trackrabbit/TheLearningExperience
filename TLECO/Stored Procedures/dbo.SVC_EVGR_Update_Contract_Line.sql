SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_EVGR_Update_Contract_Line]  @RecordType smallint,  @Contract char(10),  @Line numeric(19,5) ,  @State smallint  AS  declare @Customer char(15), @BillOnDay smallint, @TempBillOnDay smallint, @BillDays smallint, @EvergreenDays smallint, @BillFrequency smallint, @BILSTAT smallint, @ContractType char(10), @PriceSchedule char(10), @BasePrice numeric(19,2), @OrigBasePrice numeric(19,2), @MonthlyPrice numeric(19,2), @OrigMonthlyPrice numeric(19,2), @InvoiceAmount numeric(19,2),@OrigInvoiceAmount numeric(19,2), @Sequence int, @BillStartDate datetime, @BillEndDate datetime, @BillLength smallint, @BillPeriod smallint, @StartDate datetime, @HDRStartDate datetime, @EndDate datetime, @PendingEndDate datetime, @UserDate datetime, @InvoiceDate datetime, @CoverageStart datetime, @CoverageEnd datetime, @CurrentCoverageEnd datetime, @NEXTBILLDATE datetime, @Overriden tinyint, @MinDate datetime, @MaxDate datetime, @ItemDescription char(31), @Hold tinyint, @LineStatus char(1), @Total numeric(19,2),@OrigTotal numeric(19,2),@SVC_Monthly_Price numeric(19,2), @TotalBilled numeric(19,2),@OrigTotalBilled numeric(19,2), @DiscountPercent smallint, @Discount Numeric(19,5), @DiscountAmount numeric(19,2),@OrigDiscountAmount numeric(19,2), @TotalDiscountAmount numeric(19,2), @OrigTotalDiscountAmount numeric(19,2) declare @ITEMNMBR char(31) declare @ITMCLSCD char(11) declare @CUSTNMBR char(15) declare @CUSTCLAS char(15) declare @PRICSHED char(11) declare @BaseCost numeric(19,2) declare @OrigBaseCost numeric(19,2) declare @PriceType integer declare @SourceDocument varchar(51) declare @TransactionDate datetime,@ErrorCondition integer,@UserID char(30) declare @NumOfInvoice smallint declare @BillingStatus smallint declare @Qty numeric(19,5) declare @AnnualTotal numeric(19,2),@OrigAnnualTotal numeric(19,2)  declare @AtEvery smallint, @FrequencyQty numeric(19,2), @BillType smallint, @1stInvoiceDays int declare @Contract_Length smallint, @Contract_Period smallint DECLARE @RenewStartDate datetime, @CurrentInvoice numeric(19,2), @OrigCurrentInvoice numeric(19,2) declare @SmoothRevenue tinyint declare @NewLineOnBilled tinyint  if @RecordType =4 return if @State = 3   Begin  exec SVC_EVGR_Update_Contract_Header @RecordType, @Contract  return  End  exec smGetMinDate @MinDate output select @MaxDate = DATEADD(yy, 1000, @MinDate) select @UserID = SYSTEM_USER  select @AtEvery = svcBillingFrequency, @FrequencyQty = isnull(svcFrequencyQty,1), @BillType = BILCYC, @HDRStartDate = STRTDATE,  @Contract_Length = Contract_Length, @Contract_Period = Contract_Period, @SmoothRevenue = SmoothRevenueCalc  from SVC00600 WITH (NOLOCK) where CONSTS = @RecordType and CONTNBR = @Contract   select @BillingStatus = BILSTAT, @SVC_Monthly_Price = SVC_Monthly_Price from SVC00601 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line if @State = 2 and @SVC_Monthly_Price = 0 and @BillingStatus = 0  Begin  delete from SVC00603 with (rowlock) where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  delete from SVC00604 with (rowlock) where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  exec SVC_EVGR_Update_Contract_Header @RecordType, @Contract  return  End  if @BillingStatus < 2 or @BillingStatus = 4  BEGIN  exec SVC_EVGR_Calc_Cont_Line @RecordType, @Contract, @Line   END  select   @BillOnDay = BILONDY, @BillLength =BILLNGTH, @BillPeriod = BILPRD,  @BillStartDate = BILSTRT, @BillEndDate = BILEND,   @OrigMonthlyPrice = ORIGMONTHPRICE, @MonthlyPrice = SVC_Monthly_Price,   @StartDate = STRTDATE, @PendingEndDate = ENDDATE,  @ITEMNMBR = ITEMNMBR, @CUSTNMBR = CUSTNMBR,   @BILSTAT = BILSTAT,  @BasePrice = Total_Unit, @OrigBasePrice = Originating_Total_Unit,  @DiscountPercent = DSCPCTAM,  @Overriden = CNTPRCOVR,   @LineStatus = Contract_Line_Status,   @TotalBilled = TOTBIL, @PRICSHED= PRICSHED,   @EndDate= FRZEND , @RenewStartDate = FRXSTRT,  @Qty = QUANTITY ,  @OrigAnnualTotal = ORIGTOTAL, @AnnualTotal = TOTAL,  @CurrentInvoice =OriginalTotal, @OrigCurrentInvoice = OrigOriginalTotal  from SVC00601 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  if @EndDate = @MinDate select @EndDate = @PendingEndDate if @LineStatus = 'C' and ( @State = 1 or  (select sum(SVC_Invoice_Credit_Amoun) from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line and POSTED = 0) <> 0 )  begin  return  end  delete from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line and POSTED = 0   and svcReverseType = 0   if not exists(select 1 from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line)   and exists(select 1 from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and POSTED = 1)  select @NewLineOnBilled = 1 else  select @NewLineOnBilled = 0  select @CurrentCoverageEnd = max(SVC_Coverage_End_Date) from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line if @CurrentCoverageEnd > @MinDate  delete from SVC00604 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line and Status = 0 and SVC_Coverage_Start_Date > @CurrentCoverageEnd   select @Sequence = isnull(max(SVC_Invoice_SEQ_Number),0) + 1 from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line exec SVC_EVGR_Line_Invoice_Date @RecordType,@Contract, @Line, @InvoiceDate  output, @CoverageStart  output, @CoverageEnd  output if @CoverageEnd = @MinDate and @BILSTAT = 0  Begin  update SVC00601 with (rowlock) set  TOTAL = 0, ORIGTOTAL = 0, DSCDLRAM = 0, ORDDLRAT =0 , NXTBLDTE = @InvoiceDate  where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line   return(9)  End  if @CoverageStart > @EndDate   begin  update SVC00601 with (ROWLOCK)  set NXTBLDTE = @MaxDate where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  exec SVC_EVGR_Update_Contract_Header @RecordType, @Contract  return  end if @LineStatus = 'P' and @CoverageStart > @PendingEndDate and @State <> 5  Begin  update SVC00601 with (ROWLOCK) set Contract_Line_Status = 'C', BILSTAT = 2 , NXTBLDTE = @MaxDate  where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  exec SVC_EVGR_Update_Contract_Header @RecordType, @Contract  return  End else if @LineStatus = 'M' and @CoverageStart > @PendingEndDate and @State <> 1  Begin  update SVC00601 with (ROWLOCK) set  BILSTAT = 5 , NXTBLDTE = @MaxDate  where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  exec SVC_EVGR_Update_Contract_Header @RecordType, @Contract  return  End  if @AtEvery = 1   select @NumOfInvoice = 1 else  Begin  exec SVC_EVGR_Get_Number_Of_Inivoice  @BillType ,  @RenewStartDate ,  @BillEndDate ,  @FrequencyQty ,  1 ,  @NumOfInvoice output   End  select  @BillDays =  datediff(dd, @CoverageStart, @CoverageEnd) + 1 if @Overriden = 0 and @AnnualTotal = 0  select @AnnualTotal = @BasePrice, @OrigAnnualTotal = @OrigBasePrice if @CurrentInvoice = 0   select @CurrentInvoice = @BasePrice, @OrigCurrentInvoice = @OrigBasePrice  if @AtEvery = 1 or (@NumOfInvoice = 1 AND (@AnnualTotal > 0 or @CurrentInvoice > 0))  begin  if @Overriden = 1 and @FrequencyQty > 1 and @BillType < 4  select @AnnualTotal = ROUND(@MonthlyPrice * @FrequencyQty ,2),  @OrigAnnualTotal = ROUND(@OrigMonthlyPrice * @FrequencyQty,2)   if @BillingStatus = 0 or(@Overriden = 1 and @FrequencyQty > 1 and @BillType < 4)  select @InvoiceAmount = @AnnualTotal , @OrigInvoiceAmount = @OrigAnnualTotal  else  select @InvoiceAmount = @CurrentInvoice, @OrigInvoiceAmount = @OrigCurrentInvoice  end  else  Begin  if @BillType =4  select @InvoiceAmount = ROUND(12* @MonthlyPrice * @FrequencyQty,2),  @OrigInvoiceAmount = ROUND(12* @OrigMonthlyPrice * @FrequencyQty,2)  else  select @InvoiceAmount = ROUND(@MonthlyPrice * @FrequencyQty ,2),  @OrigInvoiceAmount = ROUND(@OrigMonthlyPrice * @FrequencyQty,2)   End  if  (@AtEvery = 2 and @FrequencyQty = 1) or @LineStatus = 'P' or @LineStatus = 'M'  or (@NewLineOnBilled = 1 and @Overriden =1)   begin  if (@BillType = 4 and (dateadd(dd,-1,dateadd(yy,@FrequencyQty,@CoverageStart)) <> @CoverageEnd))  or (@BillType = 3 and (dateadd(dd,-1,dateadd(mm,@FrequencyQty,@CoverageStart)) <> @CoverageEnd))  or (@BillType = 2 and (dateadd(dd,-1,dateadd(ww,@FrequencyQty,@CoverageStart)) <> @CoverageEnd))  or (@BillType = 1 and (dateadd(dd,-1,dateadd(dd,@FrequencyQty,@CoverageStart)) <> @CoverageEnd))  begin  select @EvergreenDays = CASE @BillType  when 1 then @FrequencyQty  when 2 then @FrequencyQty * 7  when 3 then datediff(dd, @CoverageStart, dateadd(mm,@FrequencyQty,@CoverageStart)) + 1  when 4 then datediff(dd, @CoverageStart, dateadd(yy,@FrequencyQty,@CoverageStart)) + 1  end  if (@Overriden=1 and @BillType = 3 and DATEPART(dd, @CoverageStart)>=28 and DATEPART(mm,@CoverageStart)=2)  select @EvergreenDays = @BillDays  if @AtEvery = 1  select @EvergreenDays = datediff(dd,@RenewStartDate, @EndDate) + 1  select @InvoiceAmount = (@InvoiceAmount * @BillDays) / @EvergreenDays ,  @OrigInvoiceAmount = (@OrigInvoiceAmount * @BillDays) / @EvergreenDays   end  end  if @CoverageEnd = @BillEndDate and @Overriden = 0 and not(@LineStatus = 'P' or @LineStatus = 'M') and @StartDate = @HDRStartDate  Begin  select @Total = sum(DOCAMNT), @OrigTotal = sum(ORDOCAMT)  from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line and POSTED = 1  and SVC_Coverage_Start_Date >=@RenewStartDate and SVC_Coverage_End_Date <= @EndDate and svcReverseType = 0  if (@InvoiceAmount + @Total) <> @BasePrice  select @InvoiceAmount = @BasePrice - @Total,  @OrigInvoiceAmount = @OrigBasePrice - @OrigTotal  End   if @InvoiceDate > @BillEndDate   select @InvoiceDate = @BillEndDate  select @NEXTBILLDATE = @InvoiceDate   if @DiscountPercent > 0 and @InvoiceAmount <> 0   select @DiscountAmount = @InvoiceAmount * @DiscountPercent / 10000,  @OrigDiscountAmount = @OrigInvoiceAmount * @DiscountPercent / 10000  if @BillDays > 0 and @InvoiceAmount <> 0   insert into SVC00603 with (ROWLOCK)  VALUES  (@RecordType,  @Contract,  @Line,  @Sequence,  @InvoiceDate,  @InvoiceAmount,  @CoverageStart,  @CoverageEnd,  0,  @MinDate,  0,  0, @InvoiceAmount / @BillDays,   isnull(@DiscountAmount,0),  isnull(@OrigInvoiceAmount,0),  0,  0,  isnull(@OrigDiscountAmount,0)  ,0,'',0)   select @Total = sum(DOCAMNT), @TotalDiscountAmount = sum(isnull(DSCDLRAM,0)),  @OrigTotal = sum(ORDOCAMT), @OrigTotalDiscountAmount = sum(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  if @State = 1  update SVC00601 with (ROWLOCK)  set TOTAL = isnull(@Total,0), ORIGTOTAL =  isnull(@OrigTotal,0),   NXTBLDTE = @NEXTBILLDATE, Orig_Amount_To_Invoice = isnull(@OrigInvoiceAmount,0) - isnull(@OrigDiscountAmount,0),  Amount_To_Invoice = isnull(@InvoiceAmount,0) - isnull(@DiscountAmount,0),  SVC_Liability_Type = 1,  DSCPCTAM = isnull(@DiscountPercent,0), DSCDLRAM =  isnull(@TotalDiscountAmount,0), ORDDLRAT = isnull(@OrigTotalDiscountAmount,0),  NUMOFINV = 1,   FRZEND =  @EndDate, FRXSTRT = @StartDate  where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  else  update SVC00601 with (ROWLOCK)  set TOTAL = isnull(@Total,0), ORIGTOTAL =  isnull(@OrigTotal,0), NUMOFINV = 1,  NXTBLDTE = @NEXTBILLDATE, Orig_Amount_To_Invoice = isnull(@OrigInvoiceAmount,0) - isnull(@OrigDiscountAmount,0),  Amount_To_Invoice = isnull(@InvoiceAmount,0) - isnull(@DiscountAmount,0),  DSCDLRAM =  isnull(@TotalDiscountAmount,0), ORDDLRAT = isnull(@OrigTotalDiscountAmount,0)  where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  if exists(select 1 from SVC00600 where CONSTS= @RecordType and CONTNBR = @Contract and (BILCYC = 4 or (BILCYC = 3 and (svcFrequencyQty > 1 or Liabiltiy_Reduction = 1))))  Begin  if @BILSTAT = 0  delete from SVC00604 where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line   if @SmoothRevenue = 1  Begin  select @CoverageStart = MAX(SVC_Coverage_End_Date) from SVC00604 WITH (NOLOCK)  where CONSTS = @RecordType and CONTNBR = @Contract and LNSEQNBR = @Line  select @CoverageStart = DateAdd(d,1,@CoverageStart)  End   select @CoverageStart = IsNull(@CoverageStart,@StartDate)   select @SourceDocument = '2-' + RTRIM(@Contract) + '-' + CONVERT(varchar(20),@Line),  @TransactionDate = convert(char(12),getdate(),102), @Discount = @DiscountPercent / 10000.0  exec SVC_RET_Create_Revenue_Recognition_Lines  -1,   -1,  @RecordType,  @Contract,  @Line ,  0 ,  @MinDate,  'EGR',  @SourceDocument ,  @TransactionDate,  @InvoiceAmount,  @UserID ,  @CoverageStart,  @CoverageEnd,  @Discount,  @ErrorCondition OUTPUT   End  exec SVC_EVGR_Update_Contract_Header @RecordType, @Contract  return   
GO
GRANT EXECUTE ON  [dbo].[SVC_EVGR_Update_Contract_Line] TO [DYNGRP]
GO

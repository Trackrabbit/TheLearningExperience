SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[svcCreateRMAKitComponents]   (@RecType smallint,  @RETDOCID char(15),  @Line as numeric(19,5),   @RMACompSeq int,   @CompItem char(31),  @CompLineQty numeric(19,5),  @CompQTY numeric(19,5),  @CompUOM char(10),  @USERID char(15),  @UserDate datetime  ) AS  declare @entdte datetime declare @enttme datetime declare @ITEMDESC char(100), @ITEMTYPE smallint declare @Status int declare @l_UOM char(10), @DecPlcQty smallint, @DecPlcCur smallint declare @UnitCost numeric(19,5),@UnitPrice numeric(19,5) , @ReturnCost numeric(19,5) declare @OrigUnitCost numeric(19,5),@OrigUnitPrice numeric(19,5), @CurrentCost numeric(19,5) declare @ExUnitCost numeric(19,5),@ExUnitPrice numeric(19,5)  declare @ExOrigUnitCost numeric(19,5),@ExOrigUnitPrice numeric(19,5) declare @MinDate datetime declare @NewNoteIndex int declare @QtyInBase numeric(19,5) declare   @CURRNIDX  smallint,  @I_sRateCalcMethod  smallint ,   @I_sViewMode  smallint,   @I_nExchangeRate  numeric(15,7),   @I_nDenomExchangeRate numeric(15,7),   @I_sMCTrxState  smallint,   @I_sDecimalPlaces  smallint,   @RateType  char(15),  @ExchangeTableType char(15),  @ExchangeDate datetime,  @ExchangeTime datetime,  @ISMCTRX smallint,  @EXPNDATE datetime,  @O_iErrorState int  exec smGetMinDate @MinDate output  select @entdte = CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00',  @enttme = @MinDate + CONVERT(varchar(10),GETDATE(),108),  @ReturnCost = 0, @OrigUnitCost = 0  if exists(select * from IV00101  where ITEMNMBR = @CompItem)   begin  select @ITEMDESC = ITEMDESC, @DecPlcQty = DECPLQTY, @DecPlcCur = DECPLCUR, @UnitCost = CURRCOST,  @CurrentCost = CURRCOST, @ITEMTYPE = ITEMTYPE from IV00101  where ITEMNMBR = @CompItem  if exists(select * from SVC00951 where ITEMNMBR = @CompItem) and (select SVC_Use_CurrentCost from SVC00951 where ITEMNMBR = @CompItem) = 0  select @UnitCost = RETCOST from SVC00951 where ITEMNMBR = @CompItem  else  select @UnitCost = @CurrentCost  end else  select @DecPlcQty = DECPLQTY, @DecPlcCur = DECPLCUR, @CurrentCost = 0, @UnitCost = 0 from SOP40100   select @CURRNIDX = CURRNIDX,  @I_sRateCalcMethod = RATECALC,  @I_sViewMode  = VIEWMODE,  @I_nExchangeRate = XCHGRATE,  @I_nDenomExchangeRate = DENXRATE,  @I_sMCTrxState = MCTRXSTT,  @I_sDecimalPlaces = DECPLACS,  @RateType = RATETPID,  @ExchangeTableType = EXGTBLID,  @ExchangeDate = EXCHDATE,  @ExchangeTime = TIME1,  @ISMCTRX = ISMCTRX,   @EXPNDATE = EXPNDATE  from SVC05000 where RETDOCID = @RETDOCID and Return_Record_Type = @RecType exec SVC_Get_QtyInBase @CompItem,@CompUOM,1,@QtyInBase OUTPUT if @QtyInBase <> 1   select @UnitCost = @UnitCost * @QtyInBase, @OrigUnitCost = @OrigUnitCost * @QtyInBase select @ITEMDESC = IsNull(@ITEMDESC,'') select @CompItem = IsNull(@CompItem,'')  if @CURRNIDX > 0   exec SVC_Convert_Amount @I_sRateCalcMethod, 3,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @UnitCost, @OrigUnitCost OUTPUT, @O_iErrorState OUTPUT else  select @OrigUnitCost = @UnitCost, @OrigUnitPrice = @UnitPrice  select  @ExUnitCost = @UnitCost * @CompLineQty , @ExOrigUnitCost = @OrigUnitCost * @CompLineQty exec SVC_Get_Next_Note_Index @NewNoteIndex output  INSERT SVC05200  (RETDOCID, Return_Record_Type, LNSEQNBR, RETTYPE, RMA_Status, RETSTAT, Received, SVC_RMA_Reason_Code, SVC_RMA_Reason_Code_Desc, NOTEINDX, RETORIG, RETREF, SRVRECTYPE, CALLNBR, EQPLINE, LNITMSEQ, SVC_RMA_From_Service, SOPTYPE, SOPNUMBE, CMPNTSEQ, SOP_Line_Item_Sequence, ENTDTE, ENTTME, ETADTE, ETATME, Commit_Date, Commit_Time, PRMDATE, REFRENCE, USERID, OFFID, LOCNCODE, RTRNNAME, RETADDR1, RETADDR2, RETADDR3, RTRNCITY, SVC_Return_State, RTRNZIP, Return_Country, CUSTNMBR, CUSTNAME, ADRSCODE, CONTACT, ADDRESS1, ADDRESS2, ADDRESS3, CITY, STATE, ZIPCODE, COUNTRY, Bill_To_Customer, SVC_Bill_To_Address_Code, CSTPONBR, QUANTITY, DECPLQTY, UOFM, ITEMNMBR, ITEMDESC, UNITCOST, ORUNTCST, EXTDCOST, OREXTCST, CUSTOWN, FACTSEAL, ORDDOCID, TRANSLINESEQ, STATUS, Bill_of_Lading, SHIPMTHD, Location_Code_Replacemen, Replace_Item_Number, Replace_U_Of_M, Replace_Price_Level, Replace_QTY, Replace_Cost, Originating_Replace_Cost, Item_Number_Invoice, CURRNIDX, DECPLCUR, ODECPLCU, Return_Item_Number, Return_Item_Description, Return_Location_Code, Return_U_Of_M, RETCOST, Originating_Return_Cost, SVC_Return_Price_Level, SVC_SCM_Complete, svcRMAKitComponentFrom, svcRMAComponentSeq, CMPITQTY, QTYONHND,QTYRTRND,QTYINUSE,QTYINSVC,QTYDMGED) select RETDOCID, Return_Record_Type, LNSEQNBR, RETTYPE, RMA_Status, RETSTAT, case when @ITEMTYPE > 3 then 1 else 0 end, SVC_RMA_Reason_Code, SVC_RMA_Reason_Code_Desc, @NewNoteIndex, RETORIG, RETREF, SRVRECTYPE, CALLNBR, EQPLINE, LNITMSEQ, SVC_RMA_From_Service, SOPTYPE, SOPNUMBE, CMPNTSEQ, SOP_Line_Item_Sequence, @entdte, @enttme, ETADTE, ETATME, Commit_Date, Commit_Time, PRMDATE, REFRENCE, USERID, OFFID, LOCNCODE, RTRNNAME, RETADDR1, RETADDR2, RETADDR3, RTRNCITY, SVC_Return_State, RTRNZIP, Return_Country, CUSTNMBR, CUSTNAME, ADRSCODE, CONTACT, ADDRESS1, ADDRESS2, ADDRESS3, CITY, STATE, ZIPCODE, COUNTRY, Bill_To_Customer, SVC_Bill_To_Address_Code, CSTPONBR, @CompLineQty, @DecPlcQty, @CompUOM, @CompItem, isnull(@ITEMDESC,''), isnull(@UnitCost,0), isnull(@OrigUnitCost,0), isnull(@ExUnitCost,0), isnull(@ExOrigUnitCost,0), CUSTOWN, FACTSEAL, ORDDOCID, TRANSLINESEQ, STATUS, Bill_of_Lading, SHIPMTHD, Location_Code_Replacemen, @CompItem, @CompUOM, Replace_Price_Level, @CompLineQty, isnull(@UnitCost,0), isnull(@OrigUnitCost,0), Item_Number_Invoice, CURRNIDX, DECPLCUR, ODECPLCU, @CompItem, @ITEMDESC, Return_Location_Code, @CompUOM, isnull(@ReturnCost,0), isnull(@ReturnCost,0), SVC_Return_Price_Level, SVC_SCM_Complete, 1,@RMACompSeq, @CompQTY, QTYONHND * @CompQTY,QTYRTRND * @CompQTY,QTYINUSE * @CompQTY,QTYINSVC * @CompQTY,QTYDMGED * @CompQTY  FROM SVC05200 where RETDOCID = @RETDOCID and Return_Record_Type = @RecType and LNSEQNBR = @Line and svcRMAComponentSeq = 0 return   
GO
GRANT EXECUTE ON  [dbo].[svcCreateRMAKitComponents] TO [DYNGRP]
GO

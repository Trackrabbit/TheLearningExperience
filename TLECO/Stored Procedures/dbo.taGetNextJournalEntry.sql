SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taGetNextJournalEntry]  @I_vInc_Dec tinyint = 1, @O_vJournalEntryNumber char(13) = NULL output, @O_iErrorState int = NULL output  with encryption as   set transaction isolation level read uncommitted set nocount on  declare   @JournalEntryNumber char(13),  @Loop int,  @DocExists tinyint,   @iStatus int,  @iError int  select @O_vJournalEntryNumber = '',  @JournalEntryNumber = '',  @O_iErrorState  = 0,  @Loop = 0,  @DocExists = 1,  @iStatus = 0,  @iError = 0  select @O_vJournalEntryNumber = NJRNLENT from GL40000 WITH (TABLOCKX HOLDLOCK) where UNIQKEY = 1 if (@@rowcount <> 1) begin  select @O_iErrorState = 8286   return (@O_iErrorState) end  select @JournalEntryNumber = @O_vJournalEntryNumber  while (@Loop < 1000) begin  select @Loop = @Loop + 1  select @DocExists = 0   if @I_vInc_Dec = 1  begin  select @JournalEntryNumber = @JournalEntryNumber + 1  end  else  begin  select @JournalEntryNumber = @JournalEntryNumber - 1  end   if (exists(select 1 from GL10000 (nolock) where JRNENTRY = @JournalEntryNumber))  begin  select @DocExists = 1  end  else  begin  if (exists(select 1 from GL20000 (nolock) where JRNENTRY = @JournalEntryNumber))  begin  select @DocExists = 1  end  else  begin  if (exists(select 1 from GL10100 (nolock) where JRNENTRY = @JournalEntryNumber))  begin  select @DocExists = 1  end  else  begin  select @DocExists = 0  end  break  end  end end  if (@DocExists = 1) begin  select @O_iErrorState = 8288  end  if (@O_iErrorState = 0) begin  update GL40000 set NJRNLENT = @JournalEntryNumber where UNIQKEY = 1  if (@@error <> 0)  begin  select @O_iErrorState = 8289   end end else begin  select @O_vJournalEntryNumber = '' end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taGetNextJournalEntry] TO [DYNGRP]
GO

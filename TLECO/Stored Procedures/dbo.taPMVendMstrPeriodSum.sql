SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[taPMVendMstrPeriodSum] @I_cVENDORID	char(15) = '', @O_iErrorState	int = NULL output	 with encryption as set nocount on declare @iCalcDetailErrState	int, @iExecStatus		int, @iStatus		int select @iStatus = 0, @O_iErrorState = 0 if (exists (select 1 from tempdb..sysobjects where id = (select object_id('tempdb..#Holding')))) begin drop table #Holding end create table #Holding ( VENDORID		char(15), DOCTYPE			smallint, VCHRNMBR		char(21), DOCDATE			datetime, YEAR1			smallint, PERIODID		smallint, AMBLDLIF		numeric(19,5), AMTPDLIF		numeric(19,5), TEN99ALIF		numeric(19,5), DISAVLIF		numeric(19,5), DISTKNLF		numeric(19,5), DISLSTLF		numeric(19,5), FINCHLIF		numeric(19,5), WROFSLIF		numeric(19,5), RTRNSLIF		numeric(19,5), TRDTKLIF		numeric(19,5), NFNCHLIF		int, NOINVLIF		int, Withholding_LIFE	numeric(19,5), VOIDED			tinyint ) create index AK1#Holding on #Holding (VCHRNMBR, DOCTYPE) create index AK2#Holding on #Holding (DOCTYPE, VCHRNMBR) create index AK3#Holding on #Holding (VENDORID,DOCTYPE, VCHRNMBR) create index AK4#Holding on #Holding (YEAR1, PERIODID) create index AK5#Holding on #Holding (VENDORID, YEAR1, PERIODID) create index AK6#Holding on #Holding (DOCTYPE, VOIDED) create index AK7#Holding on #Holding (VOIDED, DOCTYPE) if (exists (select 1 from tempdb..sysobjects where id = (select object_id('tempdb..#CalendarPeriods')))) begin drop table #CalendarPeriods end create table #CalendarPeriods ( PERIODID	smallint ) insert #CalendarPeriods values(1) insert #CalendarPeriods values(2) insert #CalendarPeriods values(3) insert #CalendarPeriods values(4) insert #CalendarPeriods values(5) insert #CalendarPeriods values(6) insert #CalendarPeriods values(7) insert #CalendarPeriods values(8) insert #CalendarPeriods values(9) insert #CalendarPeriods values(10) insert #CalendarPeriods values(11) insert #CalendarPeriods values(12) if (exists (select 1 from tempdb..sysobjects where id = (select object_id('tempdb..#Period')))) begin drop table #Period end create table #Period ( YEAR1		smallint, PERIODID	smallint, StartDate	datetime, EndDate		datetime, ) create index AK1#Period on #Period (YEAR1, PERIODID) create index AK2#Period on #Period (StartDate) create index AK3#Period on #Period (EndDate) insert #Holding	( VENDORID, PERIODID, YEAR1, DOCTYPE, VCHRNMBR, DOCDATE, AMBLDLIF, AMTPDLIF, TEN99ALIF, DISAVLIF, DISTKNLF, DISLSTLF, FINCHLIF, WROFSLIF, RTRNSLIF, TRDTKLIF, NFNCHLIF, NOINVLIF, Withholding_LIFE, VOIDED ) select	o.VENDORID, 0, 0, o.DOCTYPE, o.VCHRNMBR, o.DOCDATE, o.DOCAMNT, case when o.DOCTYPE = 1 then o.TTLPYMTS when o.DOCTYPE = 6 then o.DOCAMNT else	0 end, case when o.PPSAMDED > 0 and m.TEN99TYPE = 5 then o.PPSAMDED when o.TEN99AMNT > o.TTLPYMTS and m.TEN99TYPE <> 1 then o.TTLPYMTS when m.TEN99TYPE <> 1 then o.TEN99AMNT else	0 end, o.DISAMTAV, o.DISTKNAM,  0, o.DOCAMNT, o.WROFAMNT, o.DOCAMNT, o.TRDISAMT, 0, 0, 0, o.VOIDED from PM20000 o, PM00400 k, PM00200 m where o.CNTRLTYP = k.CNTRLTYP and	o.VCHRNMBR = k.CNTRLNUM and	k.DCSTATUS = 2 and	o.VOIDED = 0 and	((@I_cVENDORID='') or ((@I_cVENDORID <> '')and (o.VENDORID = @I_cVENDORID))) and	o.VENDORID = m.VENDORID insert #Holding	( VENDORID, PERIODID, YEAR1, DOCTYPE, VCHRNMBR, DOCDATE, AMBLDLIF, AMTPDLIF, TEN99ALIF, DISAVLIF, DISTKNLF, DISLSTLF, FINCHLIF, WROFSLIF, RTRNSLIF, TRDTKLIF, NFNCHLIF, NOINVLIF, Withholding_LIFE, VOIDED ) select	o.VENDORID, 0, 0, o.DOCTYPE, o.VCHRNMBR, o.DOCDATE, o.DOCAMNT, case when o.DOCTYPE = 1 then o.TTLPYMTS when o.DOCTYPE = 6 then o.DOCAMNT else	0 end, case when o.PPSAMDED > 0 and m.TEN99TYPE = 5 then o.PPSAMDED when o.TEN99AMNT > o.TTLPYMTS and m.TEN99TYPE <> 1 then o.TTLPYMTS when m.TEN99TYPE <> 1 then o.TEN99AMNT else	0 end, o.DISAMTAV, o.DISTKNAM,  case when o.DISAMTAV-o.DISTKNAM > 0 then o.DISAMTAV-o.DISTKNAM else 0 end, o.DOCAMNT, o.WROFAMNT, o.DOCAMNT, o.TRDISAMT, 0, 0, 0, o.VOIDED from PM30200 o, PM00400 k, PM00200 m where o.CNTRLTYP = k.CNTRLTYP and	o.VCHRNMBR = k.CNTRLNUM and	k.DCSTATUS = 3 and	o.VOIDED = 0 and	((@I_cVENDORID='') or ((@I_cVENDORID <> '')and (o.VENDORID = @I_cVENDORID))) and	o.VENDORID = m.VENDORID insert #Period (YEAR1, PERIODID, StartDate, EndDate) select YEAR1, PERIODID, PERIODDT, '' from SY40100 where FORIGIN = 1 and PERIODID <> 0 order by YEAR1, PERIODID update f1 set f1.EndDate = f2.StartDate - 1 from #Period f1, #Period f2 where f1.YEAR1 = f2.YEAR1 and	f1.PERIODID + 1 = f2.PERIODID update t set t.EndDate = f.LSTFSCDY from #Period t, SY40101 f where t.YEAR1 = f.YEAR1 and	t.EndDate = '' update h set h.YEAR1 = f.YEAR1, h.PERIODID = f.PERIODID from #Holding h, #Period f where h.DOCDATE >= f.StartDate and	h.DOCDATE <= f.EndDate delete #Holding where YEAR1 = 0  delete o from PM00202 o where o.HISTTYPE = 1 and ((@I_cVENDORID='') or ((@I_cVENDORID <> '')and (o.VENDORID = @I_cVENDORID))) insert PM00202 (VENDORID,PERIODID,YEAR1,HISTTYPE,AMBLDLIF,AMTPDLIF,TEN99ALIF,DISAVLIF,DISTKNLF,DISLSTLF,FINCHLIF,WROFSLIF,RTRNSLIF,TRDTKLIF,NFNCHLIF,NOINVLIF,Withholding_LIFE) select h.VENDORID, h.PERIODID, h.YEAR1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 from #Holding h, PM00200 c where h.VENDORID = c.VENDORID and	c.KPERHIST = 1 group by h.VENDORID, h.YEAR1, h.PERIODID exec @iExecStatus = taPMVendMstrPeriodSumDetail @I_sHISTTYPE	= 1, @O_iErrorState	= @iCalcDetailErrState output if (@iCalcDetailErrState <> 0) begin select @iStatus = @iCalcDetailErrState end else begin if (@iExecStatus <> 0) begin select @iStatus = @iExecStatus end end if (@iStatus <> 0) begin select @O_iErrorState = 200  return @iStatus end truncate table #Period insert #Period (YEAR1, PERIODID, StartDate, EndDate) select year(y.PERIODDT), c.PERIODID, cast(str(c.PERIODID) +'/1/'+str(year(y.PERIODDT)) as datetime) BeginDate, '' from SY40100 y, #CalendarPeriods c where y.FORIGIN = 1 and y.PERIODID = 1 update f1 set f1.EndDate = f2.StartDate - 1 from #Period f1, #Period f2 where f1.YEAR1 = f2.YEAR1 and	f1.PERIODID + 1 = f2.PERIODID update t set t.EndDate = cast(str(t.PERIODID) +'/31/'+str(YEAR1) as datetime) from #Period t where t.EndDate = '' update h set h.YEAR1 = f.YEAR1, h.PERIODID = f.PERIODID from #Holding h, #Period f where h.DOCDATE >= f.StartDate and	h.DOCDATE <= f.EndDate delete o from PM00202 o where o.HISTTYPE = 0 and ((@I_cVENDORID='') or ((@I_cVENDORID <> '')and (o.VENDORID = @I_cVENDORID))) insert PM00202 (VENDORID,PERIODID,YEAR1,HISTTYPE,AMBLDLIF,AMTPDLIF,TEN99ALIF,DISAVLIF,DISTKNLF,DISLSTLF,FINCHLIF,WROFSLIF,RTRNSLIF,TRDTKLIF,NFNCHLIF,NOINVLIF,Withholding_LIFE)   select h.VENDORID, h.PERIODID, h.YEAR1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 from #Holding h, PM00200 c where h.VENDORID = c.VENDORID and	c.KPCALHST = 1 group by h.VENDORID, h.YEAR1, h.PERIODID exec @iExecStatus = taPMVendMstrPeriodSumDetail @I_sHISTTYPE	= 0, @O_iErrorState	= @iCalcDetailErrState output if (@iCalcDetailErrState <> 0) begin select @iStatus = @iCalcDetailErrState end else begin if (@iExecStatus <> 0) begin select @iStatus = @iExecStatus end end if (@iStatus <> 0) begin select @O_iErrorState = 201  return @iStatus end set nocount off return(@iStatus) 
GO
GRANT EXECUTE ON  [dbo].[taPMVendMstrPeriodSum] TO [DYNGRP]
GO

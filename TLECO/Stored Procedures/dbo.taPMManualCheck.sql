SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPMManualCheck] @I_vBACHNUMB char(15),    @I_vPMNTNMBR char(20),    @I_vVENDORID char(15),    @I_vDOCNUMBR char(20),    @I_vDOCAMNT numeric(19,5),   @I_vDOCDATE datetime,    @I_vPSTGDATE datetime = '',   @I_vPYENTTYP smallint,    @I_vCARDNAME char(15)='',   @I_vCURNCYID char(15)='',   @I_vCHEKBKID char(15)='',   @I_vTRXDSCRN char(30)='',   @I_vXCHGRATE numeric(19,7) = 0,   @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,   @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7) = 0,   @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vMDFUSRID char(15)='',   @I_vPTDUSRID char(15)='',   @I_vBatchCHEKBKID char(15) = '',  @I_vCREATEDIST smallint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',   @I_vUSRDEFND2  char(50) = '',   @I_vUSRDEFND3  char(50) = '',   @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @INTERID char(5),     @sCompanyID smallint,     @FUNLCURR char(15),     @EXGTBLID char(15),     @ISMCTRX int,      @ORCASHAMNT numeric(19,5),    @ORCHEKAMNT numeric(19,5),    @ORCHKTTL numeric(19,5),    @ORCRCRDAMT numeric(19,5),    @ORDISTKNAM numeric(19,5),    @ORTRDISAMT numeric(19,5),    @ORMSCCHAMT numeric(19,5),    @ORFRTAMNT numeric(19,5),    @ORTAXAMNT numeric(19,5),    @ORPRCHAMNT numeric(19,5),    @ORDOCAMNT numeric(19,5),    @ORDISAMTAV numeric(19,5),    @ORAPPAMT numeric(19,5),    @ORDATKN numeric(19,5),     @ORDDLRAT numeric(19,5),    @ORWROFAM numeric(19,5),    @OBKPURAMT numeric(19,5),    @ORBKTFRT numeric(19,5),    @ORBKTMSC numeric(19,5),     @OCHGAMT numeric(19,5),     @UNGANLOS numeric(19,5),    @ODISAMTAV numeric(19,5),    @ORGAPDISCTKN numeric(19,5),     @OTOTPAY numeric(19,5),  @OR1099AM numeric(19,5),    @ORCTRXAM numeric(19,5),    @CASHAMNT numeric(19,5),    @CRCRDAMT numeric(19,5),    @DECPLCUR smallint,     @CURTRXAM numeric(19,5),    @CHEKAMNT numeric(19,5),    @DCSTATUS tinyint,     @CNTRLTYP tinyint,     @BCHSOURC char(15),     @ADUPINNM int,      @DOCTYPE smallint,     @iCustomState int,  @iCustomErrString varchar(255),  @iStatement int,     @iStatus int,      @iAddBatchErrState int,     @iCreateBatchErrString varchar(255),   @CURRNIDX smallint,     @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,     @iError int,      @iUpdDistErrState int,     @O_oErrorState int,  @O_iInitErrorState int,     @oInitErrString varchar(255)    select  @CHEKAMNT = 0,  @CURTRXAM = @I_vDOCAMNT,  @INTERID = '',  @sCompanyID = 0,  @FUNLCURR = '',  @EXGTBLID = '',  @ISMCTRX = 0,  @ORCASHAMNT = 0,  @ORCHEKAMNT = 0,  @ORCRCRDAMT = 0,  @ORDISTKNAM = 0,  @ORTRDISAMT = 0,  @ORMSCCHAMT = 0,  @ORFRTAMNT = 0,  @ORTAXAMNT = 0,  @ORPRCHAMNT = 0,  @ORDOCAMNT = 0,  @ORDISAMTAV = 0,  @DECPLCUR = 0,  @ORCHKTTL = 0,  @ORAPPAMT = 0,  @ORDATKN = 0,  @ORDDLRAT = 0,  @ORWROFAM = 0,  @OBKPURAMT = 0,  @ORBKTFRT = 0,  @ORBKTMSC = 0,  @OCHGAMT = 0,  @UNGANLOS = 0,  @ODISAMTAV = 0,  @ORGAPDISCTKN = 0,  @OTOTPAY = 0,  @OR1099AM = 0,  @ORCTRXAM = 0,  @CASHAMNT = 0,  @CRCRDAMT = 0,  @DCSTATUS = 1,  @CNTRLTYP = 1,  @ADUPINNM = 0,  @CURRNIDX = 0,  @BCHSOURC = 'PM_Payment',  @DOCTYPE = 6,  @iError = 0,  @iAddBatchErrState = 0,  @iAddCodeErrState = 0,  @iUpdDistErrState = 0,  @iStatus = 0,  @oErrString = '',  @O_oErrorState = 0,  @iStatement = 0,  @O_iErrorState = 0  exec @iStatus = taPMManualCheckPre  @I_vBACHNUMB output,  @I_vPMNTNMBR output,  @I_vVENDORID output,  @I_vDOCNUMBR output,  @I_vDOCAMNT output,  @I_vDOCDATE output,  @I_vPSTGDATE output,  @I_vPYENTTYP output,  @I_vCARDNAME output,  @I_vCURNCYID output,  @I_vCHEKBKID output,  @I_vTRXDSCRN output,  @I_vXCHGRATE output,   @I_vRATETPID output,   @I_vEXPNDATE output,   @I_vEXCHDATE output,   @I_vEXGTBDSC output,   @I_vEXTBLSRC output,   @I_vRATEEXPR output,   @I_vDYSTINCR output,   @I_vRATEVARC output,   @I_vTRXDTDEF output,   @I_vRTCLCMTD output,   @I_vPRVDSLMT output,   @I_vDATELMTS output,   @I_vTIME1 output,   @I_vMDFUSRID output,  @I_vPTDUSRID output,  @I_vBatchCHEKBKID output,  @I_vCREATEDIST output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4660    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  while (@iStatement = 0) begin   if( @I_vBACHNUMB is NULL or  @I_vPMNTNMBR is NULL or   @I_vVENDORID is NULL or  @I_vDOCNUMBR is NULL or  @I_vDOCAMNT is NULL or  @I_vDOCDATE is NULL or  @I_vPSTGDATE is NULL or  @I_vPYENTTYP is NULL or   @I_vCARDNAME is NULL or   @I_vCURNCYID is NULL or   @I_vCHEKBKID is NULL or  @I_vTRXDSCRN is NULL or  @I_vXCHGRATE is NULL or  @I_vRATETPID is NULL or  @I_vEXPNDATE is NULL or  @I_vEXCHDATE is NULL or  @I_vEXGTBDSC is NULL or  @I_vEXTBLSRC is NULL or  @I_vRATEEXPR is NULL or  @I_vDYSTINCR is NULL or  @I_vRATEVARC is NULL or  @I_vTRXDTDEF is NULL or  @I_vRTCLCMTD is NULL or  @I_vPRVDSLMT is NULL or  @I_vDATELMTS is NULL or  @I_vTIME1 is NULL or  @I_vMDFUSRID is NULL or   @I_vPTDUSRID is NULL or  @I_vBatchCHEKBKID is NULL or  @I_vCREATEDIST is NULL or  @I_vRequesterTrx is NULL )  begin  select @O_iErrorState = 4661    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   select @FUNLCURR = FUNLCURR from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   select @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vPMNTNMBR = UPPER(@I_vPMNTNMBR),  @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR),  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vBatchCHEKBKID = UPPER(@I_vBatchCHEKBKID)   select  @ORDOCAMNT = @I_vDOCAMNT,  @ORCTRXAM = @I_vDOCAMNT   select @INTERID = db_name()  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = @INTERID   select @ADUPINNM = isnull(ADUPINNM,0) from PM40100 (nolock) where UNIQKEY = '1'   if (@I_vPSTGDATE = '')  select @I_vPSTGDATE = @I_vDOCDATE   if ( @I_vPMNTNMBR = '' )  begin  select @O_iErrorState = 4662    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if exists(select 1 from PM00400 (nolock) where CNTRLTYP = @CNTRLTYP and CNTRLNUM = @I_vPMNTNMBR)   begin  select @O_iErrorState = 4663    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if exists(select 1 from PM00400 (nolock) where VENDORID = @I_vVENDORID and DOCTYPE = @DOCTYPE and CNTRLNUM = @I_vPMNTNMBR) or   exists(select 1 from PM20000 (nolock) where VENDORID = @I_vVENDORID and DOCTYPE = @DOCTYPE and VCHRNMBR = @I_vPMNTNMBR) or   exists(select 1 from PM10400 (nolock) where VENDORID = @I_vVENDORID and DOCTYPE = @DOCTYPE and PMNTNMBR = @I_vPMNTNMBR) or   exists(select 1 from PM30200 (nolock) where VENDORID = @I_vVENDORID and DOCTYPE = @DOCTYPE and VCHRNMBR = @I_vPMNTNMBR) or   exists(select 1 from MC020103 (nolock) where DOCTYPE = @DOCTYPE and VCHRNMBR = @I_vPMNTNMBR)       begin  select @O_iErrorState = 4664    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vVENDORID = '')  begin  select @O_iErrorState = 4665    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID)  begin  select @O_iErrorState = 4666    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vDOCNUMBR = '')  begin  select @O_iErrorState = 4667    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vDOCAMNT < 0)  begin  select @O_iErrorState = 4669      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vRATEVARC < 0)   begin  select @O_iErrorState = 5632      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vBACHNUMB = '')  begin  select @O_iErrorState = 4670    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (exists(select 1 from SY00500 (nolock) where BACHNUMB = @I_vBACHNUMB and MKDTOPST <> 0 and BCHSOURC = @BCHSOURC))  begin  select @O_iErrorState = 4671    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if ( @I_vBACHNUMB <> '' )   begin  if exists(select 1 from SY00500 a (nolock) where a.BACHNUMB = @I_vBACHNUMB and APPROVL = 1)  begin  select @O_iErrorState = 5628     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vDOCDATE = '')  begin  select @O_iErrorState = 4672    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vBatchCHEKBKID <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID))  begin  select @O_iErrorState = 4673     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end   if ( @I_vBatchCHEKBKID = '' )  begin  select @I_vBatchCHEKBKID = @I_vCHEKBKID  end   if (@I_vCHEKBKID <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID))  begin  select @O_iErrorState = 4674     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9514     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   end   if ( @I_vPYENTTYP < 0 or @I_vPYENTTYP > 2 )   begin  select @O_iErrorState = 4696     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if ( @I_vPYENTTYP = 0 )  begin  select @CHEKAMNT = @I_vDOCAMNT  end    if ( @I_vPYENTTYP = 1 )  begin  select @CASHAMNT = @I_vDOCAMNT  end    if ( @I_vPYENTTYP = 2 )  begin  select @CRCRDAMT = @I_vDOCAMNT  end    if ((@I_vPYENTTYP = 0 or @I_vPYENTTYP = 1 ) and (@I_vCHEKBKID = ''))  begin  select @O_iErrorState = 4675     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@CHEKAMNT > 0)  begin  if (exists(select 1 from PM00400 (nolock) where CNTRLTYP = 1 and CNTRLNUM = @I_vPMNTNMBR))  begin  select @O_iErrorState = 4676     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  if (exists (select 1 from CM00100 (nolock) where DUPCHNUM = 0 and CHEKBKID = @I_vCHEKBKID))  begin  if (exists(select 1 from PM00400 (nolock) where DOCTYPE = 6 and VENDORID = @I_vVENDORID and DOCNUMBR = @I_vDOCNUMBR))   begin  select @O_iErrorState = 4677    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  end   if (@I_vCARDNAME <> '')  begin  if (not exists(select 1 from SY03100 (nolock) where CARDNAME = @I_vCARDNAME))  begin  select @O_iErrorState = 4678     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end   if ( @I_vCARDNAME <> '' ) and ( @I_vPYENTTYP <> 2 )  begin  select @O_iErrorState = 4679     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if ( @I_vCHEKBKID <> '' ) and ( @I_vPYENTTYP = 2 )  begin  select @O_iErrorState = 4680     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@I_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vRATETPID))  begin  select @O_iErrorState = 4681     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end   if (@I_vRequesterTrx not in (0,1))  begin  select @O_iErrorState = 4682     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end   if (@O_iErrorState <> 0)  begin  break  end    exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4683   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @O_iErrorState <> 0  break   insert PM00400  (  CNTRLNUM,  CNTRLTYP,  DCSTATUS,  DOCTYPE,  VENDORID,  DOCNUMBR,  TRXSORCE,   CHEKBKID,  DUEDATE,  DISCDATE,  BCHSOURC,  DOCDATE,   USERID  )  select  @I_vPMNTNMBR,    @CNTRLTYP,    @DCSTATUS,    @DOCTYPE,    @I_vVENDORID,    @I_vDOCNUMBR,    '',     @I_vCHEKBKID,    '',     '',     @BCHSOURC,    @I_vDOCDATE,    ''     if (@@error <> 0)  begin  select @O_iErrorState = 4684     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   select @FUNLCURR = FUNLCURR from MC40000 (nolock)   select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(CURNCYID,'') from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@I_vCURNCYID = '')  select @I_vCURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock)  end   select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID   if ((@CURRNIDX = 0) or (@I_vCURNCYID = ''))  begin  select @O_iErrorState = 4685      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   if (@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR)  begin  select @ISMCTRX = 1   if ( @I_vPYENTTYP = 0 )  begin  select @ORCHEKAMNT = @I_vDOCAMNT  end   if ( @I_vPYENTTYP = 1 )  begin  select @ORCASHAMNT = @I_vDOCAMNT  select @ORCHEKAMNT = @I_vDOCAMNT      end   if ( @I_vPYENTTYP = 2 )  begin   select @ORCRCRDAMT = @I_vDOCAMNT  end   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vVENDORID,  @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 0,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @iUpdDistErrState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  select @O_iErrorState = 4686   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  if (@@error <> 0)  begin  select @O_iErrorState = 4687   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  end  else  begin  select @ISMCTRX = 0,@I_vRATEEXPR=0,@I_vDYSTINCR=0,@I_vXCHGRATE = 1   end   if (@I_vRequesterTrx=0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Payables_Transaction',  @I_vINDEX1=@I_vPMNTNMBR,  @I_vINDEX2=@I_vBACHNUMB,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 4688   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  if (@ISMCTRX = 1)  begin  insert into MC020103  (  DCSTATUS,  DOCTYPE,  VCHRNMBR,  PMNTNMBR,  DOCDATE,  VENDORID,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  ORCTRXAM,  OPURAMT,  ORFRTAMT,  OMISCAMT,  ORTAXAMT,  ORCASAMT,  ORCHKAMT,  ORCHKTTL,  ORCCDAMT,  ORAPPAMT,  ORDISTKN,  ORDATKN,  ORDDLRAT,  ORTDISAM,  ORWROFAM,  OBKPURAMT,  ORBKTFRT,  ORBKTMSC,  UNGANLOS,  OCHGAMT,  ORDOCAMT,  ODISAMTAV,  ORGAPDISCTKN,  OTOTPAY,  OR1099AM,  DENXRATE,  MCTRXSTT,  OrigBackoutTradeDisc  )  select  @DCSTATUS,      @DOCTYPE,      @I_vPMNTNMBR,       @I_vPMNTNMBR,      @I_vDOCDATE,      @I_vVENDORID,      @I_vCURNCYID,      @CURRNIDX,      @I_vRATETPID,      @EXGTBLID,      @I_vXCHGRATE,      @I_vEXCHDATE,      @I_vTIME1,      @I_vRTCLCMTD,      @ORCTRXAM,       @ORPRCHAMNT,      @ORFRTAMNT,      @ORMSCCHAMT,      @ORTAXAMNT,      @ORCASHAMNT,      @ORCHEKAMNT,      @ORCHKTTL,      @ORCRCRDAMT,      @ORAPPAMT,      @ORDISTKNAM,      @ORDATKN,      @ORDDLRAT,      @ORTRDISAMT,       @ORWROFAM,      @OBKPURAMT,      @ORBKTFRT,      @ORBKTMSC,       @UNGANLOS,      @OCHGAMT,       @ORDOCAMNT ,      @ODISAMTAV,      @ORGAPDISCTKN,      @OTOTPAY,      @OR1099AM,      0,       0,       0       if (@@error <> 0)  begin  select @O_iErrorState = 4689    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   if (@I_vXCHGRATE <= 0)  begin  select @O_iErrorState = 4690     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   if ((@ISMCTRX = 1) and (@I_vRTCLCMTD = 0))     begin  select  @I_vDOCAMNT = round(@I_vDOCAMNT * @I_vXCHGRATE, @DECPLCUR),   @CURTRXAM = round(@CURTRXAM * @I_vXCHGRATE, @DECPLCUR),    @CHEKAMNT =  case   when ( @I_vPYENTTYP = 0 )   then @I_vDOCAMNT  else 0   end,  @CASHAMNT =   case   when ( @I_vPYENTTYP = 1 )   then @I_vDOCAMNT  else 0   end,  @CRCRDAMT =   case   when ( @I_vPYENTTYP = 2 )   then @I_vDOCAMNT  else 0   end   update PM10100 set  DEBITAMT = round(DEBITAMT * @I_vXCHGRATE, @DECPLCUR),  ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT * @I_vXCHGRATE, @DECPLCUR),  ORCRDAMT = CRDTAMNT,  RATETPID = @I_vRATETPID,  EXGTBLID = @EXGTBLID,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  TIME1 = @I_vTIME1,  RTCLCMTD = @I_vRTCLCMTD,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where VCHRNMBR = @I_vPMNTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 8137    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   end  else  if ((@ISMCTRX = 1) and (@I_vRTCLCMTD = 1))     begin  select @I_vDOCAMNT = round(@I_vDOCAMNT / @I_vXCHGRATE, @DECPLCUR),   @CURTRXAM = round(@CURTRXAM / @I_vXCHGRATE, @DECPLCUR),   @CHEKAMNT =   case   when ( @I_vPYENTTYP = 0 )   then @I_vDOCAMNT  else 0   end,  @CASHAMNT =   case   when ( @I_vPYENTTYP = 1 )   then @I_vDOCAMNT  else 0   end,  @CRCRDAMT =   case   when ( @I_vPYENTTYP = 2 )   then @I_vDOCAMNT  else 0   end    update PM10100 set  DEBITAMT = round(DEBITAMT / @I_vXCHGRATE, @DECPLCUR),  ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT / @I_vXCHGRATE, @DECPLCUR),  ORCRDAMT = CRDTAMNT,  RATETPID = @I_vRATETPID,  EXGTBLID = @EXGTBLID,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  TIME1 = @I_vTIME1,  RTCLCMTD = @I_vRTCLCMTD,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where VCHRNMBR = @I_vPMNTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 8138    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  end  end   exec @iStatus = taPMDistributionCreate  @I_vDOCTYPE = @DOCTYPE,  @I_vVCHNUMWK = @I_vPMNTNMBR,   @I_vVENDORID = @I_vVENDORID,  @I_vCURRNIDX = @CURRNIDX,  @I_vCURNCYID = @I_vCURNCYID,   @I_vDECPLCUR = @DECPLCUR,     @I_vPTDUSRID = @I_vPTDUSRID,  @I_vPRCHAMNT = 0,      @I_vTRDISAMT = 0,      @I_vFRTAMNT = 0,      @I_vMSCCHAMT = 0,      @I_vDISTKNAM = 0,      @I_vCASHAMNT = @CASHAMNT,      @I_vCHEKAMNT = @CHEKAMNT,   @I_vCRCRDAMT = @CRCRDAMT,     @I_vDOCAMNT = @I_vDOCAMNT,  @I_vDISAMTAV = 0,      @I_vGSTDSAMT = 0,  @I_vCAMCBKID = @I_vCHEKBKID ,   @I_vCHAMCBID = '',      @I_vCARDNAME = @I_vCARDNAME,  @I_vRATETPID = @I_vRATETPID,  @I_vXCHGRATE = @I_vXCHGRATE,  @I_vEXCHDATE = @I_vEXCHDATE,  @I_vEXPNDATE = @I_vEXPNDATE,  @I_vEXGTBLID = @EXGTBLID,  @I_vTIME1 = @I_vTIME1,  @I_vORCASHAMNT = @ORCASHAMNT,  @I_vORCHEKAMNT = @ORCHEKAMNT,  @I_vORCRCRDAMT = @ORCRCRDAMT,  @I_vORDISTKNAM = @ORDISTKNAM,  @I_vORTRDISAMT = @ORTRDISAMT,  @I_vORMSCCHAMT = @ORMSCCHAMT,  @I_vORFRTAMNT = @ORFRTAMNT,  @I_vORTAXAMNT = @ORTAXAMNT,  @I_vORPRCHAMNT = @ORPRCHAMNT,  @I_vORDOCAMNT = @ORDOCAMNT,  @I_vORDISAMTAV = @ORDISAMTAV,  @I_vRTCLCMTD = @I_vRTCLCMTD,  @I_vCMPANYID = @sCompanyID,     @I_vINTERID = @INTERID,      @I_vCREATEDIST = @I_vCREATEDIST,  @O_iErrorState = @iUpdDistErrState output,  @oErrString = @oErrString output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  if (@iUpdDistErrState <> 0)  begin  exec @iStatus = taUpdateString  @iUpdDistErrState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  end  select @O_iErrorState = 4691   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  if (@@error <> 0)  begin  select @O_iErrorState = 2219   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   insert PM10400  (  BACHNUMB,  BCHSOURC,  PMNTNMBR,  VENDORID,  DOCNUMBR,  DOCTYPE,  DOCAMNT,  DOCDATE,  PSTGDATE,  PYENTTYP,  CHEKAMNT,  CARDNAME,  CURNCYID,  CHEKBKID,  TRXDSCRN,  DISAMTAV,  DISTKNAM,  WROFAMNT,  CURTRXAM,  APPLDAMT,  GSTDSAMT,  PPSAMDED,  PPSTAXRT,  PGRAMSBJ,  NOTEINDX,  VCHRNMBR,  CNTRLTYP,  MODIFDT,  MDFUSRID,  POSTEDDT,  PTDUSRID,  RETNAGAM,  Electronic  )  select  @I_vBACHNUMB,      @BCHSOURC,      @I_vPMNTNMBR,      @I_vVENDORID,      @I_vDOCNUMBR,      @DOCTYPE,      @I_vDOCAMNT,      @I_vDOCDATE,      @I_vPSTGDATE,      @I_vPYENTTYP,      @CHEKAMNT,      @I_vCARDNAME,      @I_vCURNCYID,      @I_vCHEKBKID,      @I_vTRXDSCRN,      0,       0,       0,       @CURTRXAM,      0,       0,       0,       0,       0,       @nNextNoteIndex,     @I_vPMNTNMBR,      @CNTRLTYP,      convert(varchar(12),getdate()),    @I_vMDFUSRID,      '',       @I_vPTDUSRID,      0,       0       if (@@error <> 0)  begin  select @O_iErrorState = 4692    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end   exec @iStatus = taCreateUpdateBatchHeaderRcd  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vSERIES = 4,  @I_vGLPOSTDT = @I_vDOCDATE,  @I_vBCHSOURC = 'PM_Payment',  @I_vDOCAMT = @I_vDOCAMNT,  @I_vORIGIN = 3,  @I_vNUMOFTRX = 1,  @I_vCHEKBKID = @I_vBatchCHEKBKID,  @O_iErrorState = @iAddBatchErrState output,  @oErrString = @iCreateBatchErrString output  if ((@iAddBatchErrState <> 0) or (@iStatus <> 0))  begin  if (@iAddBatchErrState = 12012)   begin  exec @iStatus = taUpdateString  @iAddBatchErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @O_iErrorState = 4693   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  break  end  select @iStatement = 1  break end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPMManualCheckPost  @I_vBACHNUMB,  @I_vPMNTNMBR,  @I_vVENDORID,  @I_vDOCNUMBR,  @I_vDOCAMNT,  @I_vDOCDATE,  @I_vPSTGDATE,  @I_vPYENTTYP,  @I_vCARDNAME,  @I_vCURNCYID,  @I_vCHEKBKID,  @I_vTRXDSCRN,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vMDFUSRID,  @I_vPTDUSRID,  @I_vBatchCHEKBKID,  @I_vCREATEDIST,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2299    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Payables_Transaction',  @I_vINDEX1 = @I_vPMNTNMBR,  @I_vINDEX2 = @I_vBACHNUMB,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1293   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPMManualCheck] TO [DYNGRP]
GO

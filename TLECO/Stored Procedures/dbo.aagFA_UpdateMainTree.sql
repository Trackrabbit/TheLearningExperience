SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagFA_UpdateMainTree] @oStatus SMALLINT = NULL OUT AS BEGIN  SET NOCOUNT ON  SET TRANSACTION ISOLATION LEVEL READ COMMITTED  BEGIN TRANSACTION  IF NOT EXISTS(SELECT 1 FROM AAG00600 WHERE aaTreeID = 7 AND aaTree = 'MT_ASSET' AND aaTreeDescr = 'Asset' AND aaDimID = 0 AND aaTreeMain = 1 AND aaTreeInclAllRec = 1 )  BEGIN  DECLARE @aaTreeID INTEGER,  @retCode INT,  @dbName CHAR(32),  @companyID SMALLINT,  @companyStatus SMALLINT,  @noteIndex NUMERIC(19,5)   SELECT  @retCode  = 0,  @dbName   = '',  @companyID  = 0,  @companyStatus = 0,  @noteIndex  = 0.00,  @oStatus  = 0  DECLARE MAINTREE CURSOR FAST_FORWARD FOR  SELECT aaTreeID FROM AAG00600 WHERE aaTreeID >= 7 ORDER BY aaTreeID DESC  FOR READ ONLY   OPEN MAINTREE  FETCH NEXT FROM MAINTREE INTO @aaTreeID  WHILE @@FETCH_STATUS =0  BEGIN  UPDATE AAG00602 SET aaTreeID = aaTreeID + 2 WHERE aaTreeID = @aaTreeID  UPDATE AAG00601 SET aaTreeID = aaTreeID + 2 WHERE aaTreeID = @aaTreeID  UPDATE AAG00600 SET aaTreeID = aaTreeID + 2, aaLinkType = aaLinkType + 2 WHERE aaTreeID = @aaTreeID  UPDATE AAG00314 SET aaTreeID = aaTreeID + 2 WHERE aaTreeID = @aaTreeID   FETCH NEXT FROM MAINTREE INTO @aaTreeID  END   CLOSE MAINTREE  DEALLOCATE MAINTREE   SELECT @dbName = DB_NAME()   EXEC @retCode = DYNAMICS.dbo.aagGetCompanyStatus @dbName, @companyID OUT, @companyStatus OUT, @oStatus OUT  IF ((@retCode <> 0) OR (@oStatus <> 0)) RETURN @retCode   EXEC @retCode = DYNAMICS.dbo.smGetNextNoteIndex @companyID, 1, @noteIndex OUT, @oStatus OUT   IF ((@retCode <> 0) OR (@oStatus <> 0)) RETURN @retCode  INSERT INTO AAG00600 (aaTreeID,aaTree,aaLinkType,aaDimID,aaTreeDescr,aaTreeMain,aaTreeInclAllRec,NOTEINDX) VALUES (7,'MT_ASSET',7,0,'Asset',1,1,@noteIndex)   EXEC @retCode = DYNAMICS.dbo.smGetNextNoteIndex @companyID, 1, @noteIndex OUT, @oStatus OUT   IF ((@retCode <> 0) OR (@oStatus <> 0)) RETURN @retCode  INSERT INTO AAG00600 (aaTreeID,aaTree,aaLinkType,aaDimID,aaTreeDescr,aaTreeMain,aaTreeInclAllRec,NOTEINDX) VALUES (8,'MT_BOOK',8,0,'Book',1,1,@noteIndex)   EXEC @retCode = DYNAMICS.dbo.smGetNextNoteIndex @companyID, 1, @noteIndex OUT, @oStatus OUT   IF ((@retCode <> 0) OR (@oStatus <> 0)) RETURN @retCode  INSERT INTO AAG00601 (aaTreeID,aaNodeID,aaNode,aaLevel,aaParentNodeID,aaOrder,NOTEINDX) VALUES (7,1,'Asset',0,0,1,@noteIndex)   EXEC @retCode = DYNAMICS.dbo.smGetNextNoteIndex @companyID, 1, @noteIndex OUT, @oStatus OUT   IF ((@retCode <> 0) OR (@oStatus <> 0)) RETURN @retCode  INSERT INTO AAG00601 (aaTreeID,aaNodeID,aaNode,aaLevel,aaParentNodeID,aaOrder,NOTEINDX) VALUES (8,1,'Book',0,0,1,@noteIndex)   INSERT AAG00602(aaTreeID, aaNodeID, aaMstrID)  SELECT 7, 1, aaMstrID FROM AAG00800V WHERE  aaLinkType = 7 and aaDimID = 0    INSERT AAG00602(aaTreeID, aaNodeID, aaMstrID)  SELECT 8, 1, aaMstrID FROM AAG00800V WHERE  aaLinkType = 8 and aaDimID = 0    UPDATE DYNAMICS..AAG00102 SET aaRowID = aaRowID + 2 WHERE aaTableID = 600 AND CMPANYID = @companyID  END  IF @@ERROR <> 0  BEGIN  ROLLBACK TRANSACTION  END  ELSE  BEGIN  COMMIT TRANSACTION  END  SET NOCOUNT OFF END    
GO
GRANT EXECUTE ON  [dbo].[aagFA_UpdateMainTree] TO [DYNGRP]
GO

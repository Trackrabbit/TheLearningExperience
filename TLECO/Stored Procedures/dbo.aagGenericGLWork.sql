SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 CREATE  PROCEDURE [dbo].[aagGenericGLWork] @USERID CHAR(15), @TBName varchar(25), @Preview SMALLINT, @O_SQL_Error_State int = NULL  output AS  Begin  set nocount on  Begin    DECLARE @JRNENTRY bigint, @SQNCLINE INT,  @RCTRXSEQ numeric(19,5),   @TRXSORCE char(13),   @CRDTAMNT numeric(19,5),   @DEBITAMT numeric(19,5),  @TRXDATE datetime,  @CURNCYID CHAR(16),  @CURRNIDX SMALLINT,   @Ledger_ID INT,   @ACTINDX INT,  @SEQ1 INT   DECLARE C1 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, GL.RCTRXSEQ, GL1.CRDTAMNT, GL1.DEBITAMT,  GL.TRXDATE,GL.CURNCYID,GL.CURRNIDX, GL.Ledger_ID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY,GL.RCTRXSEQ ORDER BY GL1.SQNCLINE ASC) FROM GL10001 GL1 INNER JOIN GL10000 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C1  FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE, @RCTRXSEQ,  @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@CURRNIDX, @Ledger_ID, @ACTINDX,@SEQ1  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AA_CL_Status = 1   FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY AND A.RCTRXSEQ = @RCTRXSEQ   AND A1.ACTINDX = @ACTINDX AND A1.CRDTAMNT  = @CRDTAMNT AND A1.DEBITAMT = @DEBITAMT   AND A.GLPOSTDT = @TRXDATE AND A1.CURNCYID = @CURNCYID AND A1.CURRNIDX = @CURRNIDX AND A.Ledger_ID = @Ledger_ID  AND A1.SQNCLINE=@SQNCLINE AND A1.aaGLWorkDistID = @SEQ1   FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE, @RCTRXSEQ, @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@CURRNIDX, @Ledger_ID, @ACTINDX,@SEQ1  END   close C1  deallocate C1   DECLARE C1 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE,   case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C1  FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE,  @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@ACTINDX,@SEQ1  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AA_CL_Status = 1   FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY   AND A1.ACTINDX = @ACTINDX AND A1.CRDTAMNT  = @CRDTAMNT AND A1.DEBITAMT = @DEBITAMT   AND A.GLPOSTDT = @TRXDATE AND A1.CURNCYID = @CURNCYID   AND A1.SQNCLINE=@SQNCLINE AND A1.aaGLWorkDistID = @SEQ1   FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE,  @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID, @ACTINDX,@SEQ1  END   close C1  deallocate C1   DECLARE @JRNENTRY2 bigint, @SQNCLINE2 INT,  @TRXSORCE2 char(13),   @CRDTAMNT2 numeric(19,5),   @DEBITAMT2 numeric(19,5),  @TRXDATE2 datetime,  @CURNCYID2 CHAR(16),  @ACTINDX2 INT,  @SEQ2 INT   DECLARE C2 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C2  FETCH NEXT FROM C2 INTO @JRNENTRY2, @SQNCLINE2, @CRDTAMNT2, @DEBITAMT2,  @TRXDATE2,@CURNCYID2,@ACTINDX2, @SEQ2  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AA_CL_Status = 1  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY2   AND A1.ACTINDX = @ACTINDX2 AND A1.CRDTAMNT  = @CRDTAMNT2 AND A1.DEBITAMT = @DEBITAMT2  AND A.GLPOSTDT = @TRXDATE2 AND A1.CURNCYID = @CURNCYID2 AND A1.aaGLWorkDistID = @SEQ2   FETCH NEXT FROM C2 INTO @JRNENTRY2, @SQNCLINE2, @CRDTAMNT2, @DEBITAMT2,  @TRXDATE2,@CURNCYID2,@ACTINDX2,@SEQ2  END   close C2  deallocate C2   IF @Preview = 1   BEGIN   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID)) ,6,1 , LTRIM(STR(ISNULL(A.JRNENTRY,-9999)))  FROM AAG10000 A LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY FROM GL10000 UNION ALL   SELECT DISTINCT JRNENTRY FROM GL10100) B ON A.JRNENTRY=B.JRNENTRY LEFT OUTER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID and A1.AA_CL_Status = 0 WHERE B.JRNENTRY IS NULL')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID)) ,6,1, LTRIM(STR(ISNULL(A.JRNENTRY,-9999)))  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY FROM GL10000 UNION ALL   SELECT DISTINCT JRNENTRY FROM GL10100) B ON A.JRNENTRY=B.JRNENTRY WHERE B.JRNENTRY IS NULL and A1.AA_CL_Status = 0')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10001.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10001.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10001.aaGLWorkHdrID)) ),-9999)  FROM AAG10001 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10001.aaGLWorkHdrID)')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(3)+''Posting Date=''+ convert(char(12),B.TRXDATE,102),17,1 , LTRIM(STR(A.JRNENTRY))  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND A1.CURNCYID = B.CURNCYID AND A1.CURRNIDX = B.CURRNIDX AND A.GLPOSTDT <> B.TRXDATE ')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(3)+''Ledger ID=''+(SELECT Ledger_Name FROM GL40001 WHERE GL40001.Ledger_ID = B.Ledger_ID),11,1 , LTRIM(STR(A.JRNENTRY))  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ AND A.Ledger_ID <> B.Ledger_ID INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND A.GLPOSTDT = B.TRXDATE AND A1.CURNCYID = B.CURNCYID AND A1.CURRNIDX = B.CURRNIDX')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(1)+''Currency ID=''+ RTRIM(CONVERT(CHAR(12),B.CURNCYID))+ '' Currency Index='' + LTRIM(RTRIM(STR(B.CURRNIDX))),21,1 , LTRIM(STR(A.JRNENTRY))  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ   INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND (A1.CURNCYID <> B.CURNCYID OR A1.CURRNIDX <> B.CURRNIDX) AND A.GLPOSTDT = B.TRXDATE AND A.Ledger_ID = B.Ledger_ID')   EXEC ('DECLARE @JRNENTRY1 bigint, @SQNCLINE1 INT,  @RCTRXSEQ1 numeric(19,5),   @TRXSORCE1 char(13),   @CRDTAMNT1 numeric(19,5),   @DEBITAMT1 numeric(19,5),  @TRXDATE1 datetime,  @CURNCYID1 CHAR(16),  @CURRNIDX1 SMALLINT,   @Ledger_ID1 INT,   @ACTINDX1 INT,  @SEQ11 INT   DECLARE C11 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, GL.RCTRXSEQ, GL1.CRDTAMNT, GL1.DEBITAMT,  GL.TRXDATE,GL.CURNCYID,GL.CURRNIDX, GL.Ledger_ID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10001 GL1 INNER JOIN GL10000 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C11  FETCH NEXT FROM C11 INTO @JRNENTRY1, @SQNCLINE1, @RCTRXSEQ1,  @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ11  while @@fetch_status = 0  Begin   INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + LTRIM(STR(A1.aaGLWorkHdrID))  ,15,1 , LTRIM(STR(@JRNENTRY1))  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY1 AND A.RCTRXSEQ = @RCTRXSEQ1   AND A1.ACTINDX = @ACTINDX1 AND A1.CRDTAMNT  = @CRDTAMNT1 AND A1.DEBITAMT = @DEBITAMT1  AND A.GLPOSTDT = @TRXDATE1 AND A1.CURNCYID = @CURNCYID1 AND A1.CURRNIDX = @CURRNIDX1 AND A.Ledger_ID = @Ledger_ID1  AND A1.aaGLWorkDistID = @SEQ11 AND A1.AA_CL_Status = 0 AND A1.SQNCLINE <> @SQNCLINE1   FETCH NEXT FROM C11 INTO @JRNENTRY1, @SQNCLINE1, @RCTRXSEQ1, @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ11  END   close C11  deallocate C11    DECLARE @JRNENTRY22 bigint, @SQNCLINE22 INT,  @TRXSORCE22 char(13),   @CRDTAMNT22 numeric(19,5),   @DEBITAMT22 numeric(19,5),  @TRXDATE22 datetime,  @CURNCYID22 CHAR(16),  @ACTINDX22 INT,  @SEQ22 INT   DECLARE C22 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C22  FETCH NEXT FROM C22 INTO @JRNENTRY22, @SQNCLINE22, @CRDTAMNT22, @DEBITAMT22,  @TRXDATE22,@CURNCYID22,@ACTINDX22, @SEQ22  while @@fetch_status = 0  Begin  INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + LTRIM(STR(A1.aaGLWorkHdrID))  ,15,1 , LTRIM(STR(@JRNENTRY22))  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY22   AND A1.ACTINDX = @ACTINDX22 AND A1.CRDTAMNT  = @CRDTAMNT22 AND A1.DEBITAMT = @DEBITAMT22  AND A.GLPOSTDT = @TRXDATE22 AND A1.CURNCYID = @CURNCYID22 AND A1.aaGLWorkDistID = @SEQ22 AND A1.AA_CL_Status = 0 AND A1.SQNCLINE <> @SQNCLINE1   FETCH NEXT FROM C22 INTO @JRNENTRY22, @SQNCLINE22, @CRDTAMNT22, @DEBITAMT22,  @TRXDATE22,@CURNCYID22,@ACTINDX22,@SEQ22  END   close C22  deallocate C22')   IF EXISTS(SELECT TOP 1 1 FROM AAG10001 A1 INNER JOIN AAG10000 A on A1.aaGLWorkHdrID =A.aaGLWorkHdrID inner join   (SELECT GL10000.JRNENTRY,GL10001.SQNCLINE GL_SQNCLINE,ACTINDX,TRXDATE,CURNCYID,GL10000.CURRNIDX,DEBITAMT,CRDTAMNT from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY and   (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and  (GL10001.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY))))  ) GL on GL.JRNENTRY=A.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND A.GLPOSTDT = GL.TRXDATE AND A1.CURNCYID = GL.CURNCYID AND A1.CURRNIDX = GL.CURRNIDX AND A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT   UNION  SELECT TOP 1 1 FROM AAG10001 A1 INNER JOIN AAG10000 A on A1.aaGLWorkHdrID =A.aaGLWorkHdrID inner join   (SELECT GL10100.JRNENTRY,GL10101.SQNCLINE GL_SQNCLINE,ACTINDX,TRXDATE,CURNCYID,  case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY and   (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and (GL10101.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY))))  ) GL on GL.JRNENTRY=A.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND A.GLPOSTDT = GL.TRXDATE AND A1.CURNCYID = GL.CURNCYID AND A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT )   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'', ''AA GL Work Header ID='' + CONVERT(VARCHAR(10),(select TOP 1 aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY)),15,1 , LTRIM(STR(GL10000.JRNENTRY))  from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY and   (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and  (GL10001.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY))))  union all   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + CONVERT(VARCHAR(10),(select TOP 1 aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY)) ,15,1 , LTRIM(STR(GL10101.JRNENTRY))  from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY and   (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and (GL10101.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY))))')   END  ELSE  BEGIN   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID)) ,6,1 , LTRIM(STR(ISNULL(A.JRNENTRY,-9999)))  FROM AAG10000 A LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY FROM GL10000 UNION ALL   SELECT DISTINCT JRNENTRY FROM GL10100) B ON A.JRNENTRY=B.JRNENTRY LEFT OUTER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID and A1.AA_CL_Status = 0 WHERE B.JRNENTRY IS NULL')   DELETE AAG10000 FROM AAG10000 A LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY FROM GL10000 UNION ALL   SELECT DISTINCT JRNENTRY FROM GL10100) B ON A.JRNENTRY=B.JRNENTRY LEFT OUTER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID and A1.AA_CL_Status = 0 WHERE B.JRNENTRY IS NULL  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID)) ,6,1 , LTRIM(STR(ISNULL(A.JRNENTRY,-9999)))  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY FROM GL10000 UNION ALL   SELECT DISTINCT JRNENTRY FROM GL10100) B ON A.JRNENTRY=B.JRNENTRY WHERE A1.AA_CL_Status = 0 and B.JRNENTRY IS NULL')   DELETE AAG10001  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  LEFT OUTER JOIN (SELECT DISTINCT JRNENTRY FROM GL10000 UNION ALL   SELECT DISTINCT JRNENTRY FROM GL10100) B ON A.JRNENTRY=B.JRNENTRY WHERE A1.AA_CL_Status = 0 and B.JRNENTRY IS NULL    EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10001.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10001.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10001.aaGLWorkHdrID)) ),-9999)  FROM AAG10001 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10001.aaGLWorkHdrID)')   DELETE AAG10001 FROM AAG10001 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10001.aaGLWorkHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)')   DELETE AAG10002 FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)')   DELETE AAG10002 FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10002.aaGLWorkDistID)')   DELETE AAG10002 FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10002.aaGLWorkDistID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10003.aaGLWorkDistID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10003.aaGLWorkDistID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10002.aaGLWorkDistID=AAG10003.aaGLWorkDistID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10002.aaGLWorkDistID=AAG10003.aaGLWorkDistID)  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10002.aaGLWorkDistID=AAG10003.aaGLWorkDistID AND AAG10002.aaGLWorkAssignID=AAG10003.aaGLWorkAssignID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10002 WHERE AAG10002.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10002.aaGLWorkDistID=AAG10003.aaGLWorkDistID AND AAG10002.aaGLWorkAssignID=AAG10003.aaGLWorkAssignID)  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(3)+''Posting Date=''+ convert(char(12),B.TRXDATE,102),16,1 , LTRIM(STR(A.JRNENTRY))  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND A1.CURNCYID = B.CURNCYID AND A1.CURRNIDX = B.CURRNIDX AND A.GLPOSTDT <> B.TRXDATE ')   UPDATE AAG10000 set AAG10000.GLPOSTDT = B.TRXDATE  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND A1.CURNCYID = B.CURNCYID AND A1.CURRNIDX = B.CURRNIDX AND A.GLPOSTDT <> B.TRXDATE    EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(3)+''Ledger ID=''+(SELECT Ledger_Name FROM GL40001 WHERE GL40001.Ledger_ID = B.Ledger_ID),8,1 , LTRIM(STR(A.JRNENTRY))  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ AND A.Ledger_ID <> B.Ledger_ID INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND A.GLPOSTDT = B.TRXDATE AND A1.CURNCYID = B.CURNCYID AND A1.CURRNIDX = B.CURRNIDX')   UPDATE AAG10000 set AAG10000.Ledger_ID = B.Ledger_ID  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ AND A.Ledger_ID <> B.Ledger_ID INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND A.GLPOSTDT = B.TRXDATE AND A1.CURNCYID = B.CURNCYID AND A1.CURRNIDX = B.CURRNIDX   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(1)+''Currency ID=''+ RTRIM(CONVERT(CHAR(12),B.CURNCYID))+ '' Currency Index='' + LTRIM(RTRIM(STR(B.CURRNIDX))),20,1 , LTRIM(STR(A.JRNENTRY))  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ   INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND (A1.CURNCYID <> B.CURNCYID OR A1.CURRNIDX <> B.CURRNIDX) AND A.GLPOSTDT = B.TRXDATE AND A.Ledger_ID = B.Ledger_ID')   UPDATE AAG10001 set AAG10001.CURNCYID = B.CURNCYID, AAG10001.CURRNIDX = B.CURRNIDX  FROM AAG10000 A INNER JOIN GL10000 B ON A.JRNENTRY=B.JRNENTRY AND A.RCTRXSEQ = B.RCTRXSEQ   INNER JOIN AAG10001 A1 ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A1.AA_CL_Status = 0 AND (A1.CURNCYID <> B.CURNCYID OR A1.CURRNIDX <> B.CURRNIDX) AND A.GLPOSTDT = B.TRXDATE AND A.Ledger_ID = B.Ledger_ID   EXEC ('DECLARE @JRNENTRY1 bigint, @SQNCLINE1 INT,  @RCTRXSEQ1 numeric(19,5),   @TRXSORCE1 char(13),   @CRDTAMNT1 numeric(19,5),   @DEBITAMT1 numeric(19,5),  @TRXDATE1 datetime,  @CURNCYID1 CHAR(16),  @CURRNIDX1 SMALLINT,   @Ledger_ID1 INT,   @ACTINDX1 INT,  @SEQ11 INT   DECLARE C11 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, GL.RCTRXSEQ, GL1.CRDTAMNT, GL1.DEBITAMT,  GL.TRXDATE,GL.CURNCYID,GL.CURRNIDX, GL.Ledger_ID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10001 GL1 INNER JOIN GL10000 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C11  FETCH NEXT FROM C11 INTO @JRNENTRY1, @SQNCLINE1, @RCTRXSEQ1,  @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ11  while @@fetch_status = 0  Begin   INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + LTRIM(STR(A1.aaGLWorkHdrID))  ,14,1 , LTRIM(STR(@JRNENTRY1))  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY1 AND A.RCTRXSEQ = @RCTRXSEQ1   AND A1.ACTINDX = @ACTINDX1 AND A1.CRDTAMNT  = @CRDTAMNT1 AND A1.DEBITAMT = @DEBITAMT1  AND A.GLPOSTDT = @TRXDATE1 AND A1.CURNCYID = @CURNCYID1 AND A1.CURRNIDX = @CURRNIDX1 AND A.Ledger_ID = @Ledger_ID1  AND A1.aaGLWorkDistID = @SEQ11  AND A1.AA_CL_Status = 0 AND A1.SQNCLINE <> @SQNCLINE1   FETCH NEXT FROM C11 INTO @JRNENTRY1, @SQNCLINE1, @RCTRXSEQ1, @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ11  END   close C11  deallocate C11    DECLARE @JRNENTRY22 bigint, @SQNCLINE22 INT,  @TRXSORCE22 char(13),   @CRDTAMNT22 numeric(19,5),   @DEBITAMT22 numeric(19,5),  @TRXDATE22 datetime,  @CURNCYID22 CHAR(16),  @ACTINDX22 INT,  @SEQ22 INT   DECLARE C22 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C22  FETCH NEXT FROM C22 INTO @JRNENTRY22, @SQNCLINE22, @CRDTAMNT22, @DEBITAMT22,  @TRXDATE22,@CURNCYID22,@ACTINDX22, @SEQ22  while @@fetch_status = 0  Begin  INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + LTRIM(STR(A1.aaGLWorkHdrID))  ,14,1 , LTRIM(STR(@JRNENTRY22))  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY22   AND A1.ACTINDX = @ACTINDX22 AND A1.CRDTAMNT  = @CRDTAMNT22 AND A1.DEBITAMT = @DEBITAMT22  AND A.GLPOSTDT = @TRXDATE22 AND A1.CURNCYID = @CURNCYID22 AND A1.aaGLWorkDistID = @SEQ22  AND A1.AA_CL_Status = 0  AND A1.SQNCLINE <> @SQNCLINE1   FETCH NEXT FROM C22 INTO @JRNENTRY22, @SQNCLINE22, @CRDTAMNT22, @DEBITAMT22,  @TRXDATE22,@CURNCYID22,@ACTINDX22,@SEQ22  END   close C22  deallocate C22')   DECLARE @JRNENTRY1 bigint, @SQNCLINE1 INT,  @RCTRXSEQ1 numeric(19,5),   @TRXSORCE1 char(13),   @CRDTAMNT1 numeric(19,5),   @DEBITAMT1 numeric(19,5),  @TRXDATE1 datetime,  @CURNCYID1 CHAR(16),  @CURRNIDX1 SMALLINT,   @Ledger_ID1 INT,   @ACTINDX1 INT,  @SEQ11 INT   DECLARE C11 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, GL.RCTRXSEQ, GL1.CRDTAMNT, GL1.DEBITAMT,  GL.TRXDATE,GL.CURNCYID,GL.CURRNIDX, GL.Ledger_ID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY,GL.RCTRXSEQ ORDER BY GL1.SQNCLINE ASC)FROM GL10001 GL1 INNER JOIN GL10000 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C11  FETCH NEXT FROM C11 INTO @JRNENTRY1, @SQNCLINE1, @RCTRXSEQ1,  @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ11  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AAG10001.SQNCLINE=@SQNCLINE1  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY1 AND A.RCTRXSEQ = @RCTRXSEQ1   AND A1.ACTINDX = @ACTINDX1 AND A1.CRDTAMNT  = @CRDTAMNT1 AND A1.DEBITAMT = @DEBITAMT1  AND A.GLPOSTDT = @TRXDATE1 AND A1.CURNCYID = @CURNCYID1 AND A1.CURRNIDX = @CURRNIDX1   AND A.Ledger_ID = @Ledger_ID1 AND A1.aaGLWorkDistID = @SEQ11 AND A1.AA_CL_Status = 0   FETCH NEXT FROM C11 INTO @JRNENTRY1, @SQNCLINE1, @RCTRXSEQ1, @CRDTAMNT1, @DEBITAMT1,  @TRXDATE1,@CURNCYID1,@CURRNIDX1, @Ledger_ID1, @ACTINDX1,@SEQ11  END   close C11  deallocate C11   DECLARE @JRNENTRY22 bigint, @SQNCLINE22 INT,  @TRXSORCE22 char(13),   @CRDTAMNT22 numeric(19,5),   @DEBITAMT22 numeric(19,5),  @TRXDATE22 datetime,  @CURNCYID22 CHAR(16),  @ACTINDX22 INT,  @SEQ22 INT   DECLARE C22 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C22  FETCH NEXT FROM C22 INTO @JRNENTRY22, @SQNCLINE22, @CRDTAMNT22, @DEBITAMT22,  @TRXDATE22,@CURNCYID22,@ACTINDX22, @SEQ22  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AAG10001.SQNCLINE=@SQNCLINE22  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY22   AND A1.ACTINDX = @ACTINDX22 AND A1.CRDTAMNT  = @CRDTAMNT22 AND A1.DEBITAMT = @DEBITAMT22  AND A.GLPOSTDT = @TRXDATE22 AND A1.CURNCYID = @CURNCYID22 AND A1.aaGLWorkDistID = @SEQ22  AND A1.AA_CL_Status = 0   FETCH NEXT FROM C22 INTO @JRNENTRY22, @SQNCLINE22, @CRDTAMNT22, @DEBITAMT22,  @TRXDATE22,@CURNCYID22,@ACTINDX22,@SEQ22  END   close C22  deallocate C22  END END set nocount off End     
GO
GRANT EXECUTE ON  [dbo].[aagGenericGLWork] TO [DYNGRP]
GO

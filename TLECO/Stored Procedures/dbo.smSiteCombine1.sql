SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smSiteCombine1]  @I_charStartSite char(30), @I_charEndSite char(30), @O_iErrorState int=NULL output with encryption as declare @LOCNCODE char(255), @counter int, @DBNAME char(25), @DBID smallint, @tTransaction tinyint, @iStatus int, @cStartSite char(50), @cEndSite char(50), @QUANTITY numeric(19,5), @ATYALLOC numeric(19,5), @x int exec @iStatus=smFormatStringsForExecs @I_vInputString=@I_charStartSite, @O_cOutputString=@cStartSite output, @O_iErrorState=@O_iErrorState output if @iStatus<>0 or @O_iErrorState<>0 begin set @O_iErrorState=90 return end exec @iStatus=smFormatStringsForExecs @I_vInputString=@I_charEndSite, @O_cOutputString=@cEndSite output, @O_iErrorState=@O_iErrorState output if @iStatus<>0 or @O_iErrorState<>0 begin set @O_iErrorState=91 return end select @DBNAME=DB_NAME() select @DBID=CMPANYID from DYNAMICS..SY01500 where INTERID=@DBNAME select @O_iErrorState=0 exec @iStatus=taItemSiteCombinerPre @I_charStartSite output, @I_charEndSite output, @cStartSite output, @cEndSite output, @O_iErrorState output if @O_iErrorState<>0  begin return end if	@I_charStartSite is NULL or @I_charEndSite is NULL or @cStartSite is NULL or @cEndSite is NULL begin select @O_iErrorState=1  return end declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set LOCNCODE ='+rtrim(@cEndSite)+ ' where LOCNCODE='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='LOCNCODE' and o.name<>'IV00102' and o.name<>'IV00117' and o.name<>'IV00200' and o.name<>'IV00300' and o.name<>'IV10301' and o.name<>'IV10303' and o.name<>'IV30102' and o.name<>'IV30701' and o.name<>'IV30702' and o.name<>'IV40700' and o.name<>'SVC00952' and o.name<>'SVC00502' and o.name<>'VTX_IV40700' and o.name not like 'MP%' and o.name<>'QI04070' and o.name<>'QI04080' and o.name<>'IV00111' and o.name<>'IV00112' and o.name<>'IV40702' and o.name<>'IV40701' and o.name<>'MOP1400' and o.name<>'MOP1410' and o.name not like 'MRP%' and o.name<>'POP40800' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=17  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return update b set b.QTYRQSTN=a.QTYRQSTN+b.QTYRQSTN, b.QTYONORD=a.QTYONORD+b.QTYONORD, b.QTYBKORD=a.QTYBKORD+b.QTYBKORD, b.QTY_Drop_Shipped=a.QTY_Drop_Shipped+b.QTY_Drop_Shipped, b.QTYINUSE=a.QTYINUSE+b.QTYINUSE, b.QTYINSVC=a.QTYINSVC+b.QTYINSVC, b.QTYRTRND=a.QTYRTRND+b.QTYRTRND, b.QTYDMGED=a.QTYDMGED+b.QTYDMGED, b.QTYONHND=a.QTYONHND+b.QTYONHND, b.ATYALLOC=a.ATYALLOC+b.ATYALLOC, b.QTYCOMTD=a.QTYCOMTD+b.QTYCOMTD, b.QTYSOLD=a.QTYSOLD+b.QTYSOLD from IV00102 a, IV00102 b where a.LOCNCODE=@I_charStartSite and b.LOCNCODE=@I_charEndSite and a.RCRDTYPE=b.RCRDTYPE and a.ITEMNMBR=b.ITEMNMBR if (@@error<>0) begin select @O_iErrorState=6  return end delete a from IV00102 a, IV00102 b where a.LOCNCODE=@I_charStartSite and b.LOCNCODE=@I_charEndSite and a.RCRDTYPE=b.RCRDTYPE and a.ITEMNMBR=b.ITEMNMBR if (@@error<>0) begin select @O_iErrorState=7  return end update IV00102 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite if (@@error<>0) begin select @O_iErrorState=8  return end declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set STTLOCCD ='+rtrim(@cEndSite)+ ' where STTLOCCD='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='STTLOCCD' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=18  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set ENLOCNCD ='+rtrim(@cEndSite)+ ' where ENLOCNCD='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ENLOCNCD' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=19  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set TRXLOCTN ='+rtrim(@cEndSite)+ ' where TRXLOCTN='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='TRXLOCTN' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=20  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return update IV30102 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+cast(SMRYTYPE as varchar)+cast(YEAR1 as varchar)+cast(SMRYPMTH as varchar) not in(select ITEMNMBR+cast(SMRYTYPE as varchar)+cast(YEAR1 as varchar)+cast(SMRYPMTH as varchar) from IV30102 where LOCNCODE=@I_charEndSite) if (@@error<>0) begin select @O_iErrorState=28  return end update a set a.SMRYQTYS=a.SMRYQTYS+b.SMRYQTYS, a.SMRYCOST=+a.SMRYCOST+b.SMRYCOST, a.SMRYSALS=a.SMRYSALS+b.SMRYSALS, a.SMMRYDPNDNTUSGQTY=a.SMMRYDPNDNTUSGQTY+b.SMMRYDPNDNTUSGQTY, a.SMMRYPRJCTDUSGQTY=a.SMMRYPRJCTDUSGQTY+b.SMMRYPRJCTDUSGQTY, a.SMMRYDPNDNTUSGCST=a.SMMRYDPNDNTUSGCST+b.SMMRYDPNDNTUSGCST from IV30102 a, IV30102 b where	a.ITEMNMBR=b.ITEMNMBR and a.SMRYTYPE=b.SMRYTYPE and a.YEAR1=b.YEAR1 and a.SMRYPMTH=b.SMRYPMTH and a.LOCNCODE=@I_charEndSite and b.LOCNCODE=@I_charStartSite if @@error<>0 begin select @O_iErrorState=26  return end update IV40100 set MAINLOCN=@I_charEndSite where MAINLOCN=@I_charStartSite if @@error<>0 begin select @O_iErrorState=31  return end declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set STTLOCID ='+rtrim(@cEndSite)+ ' where STTLOCID='+rtrim(@cStartSite) from sysobjects o, syscolumns c where o.id=c.id and o.type='U' and c.name='STTLOCID' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=32  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set ENDLOCID ='+rtrim(@cEndSite)+ ' where ENDLOCID='+rtrim(@cStartSite) from sysobjects o, syscolumns c where o.id=c.id and o.type='U' and c.name='ENDLOCID' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=33  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set MasterLocationCode ='+rtrim(@cEndSite)+ ' where MasterLocationCode='+rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='MasterLocationCode'  order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=36  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set DLC ='+rtrim(@cEndSite)+ ' where DLC='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='DLC' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=37  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set BLC ='+rtrim(@cEndSite)+ ' where BLC='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='BLC'  order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=38  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set DRAWFROMSITE_I ='+rtrim(@cEndSite)+ ' where DRAWFROMSITE_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='DRAWFROMSITE_I' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=39  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set POSTTOSITE_I ='+rtrim(@cEndSite)+ ' where POSTTOSITE_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='POSTTOSITE_I'  order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=40  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set WCID_I ='+rtrim(@cEndSite)+ ' where WCID_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='WCID_I' and o.name<>'WC010931' and o.name<>'WC010015' and o.name<>'CP010030' and o.name<>'CP010230' and o.name<>'CP010330' and o.name<>'CP010400' and o.name<>'CP010100' and o.name<>'RT010130' and o.name<>'WC010100' and o.name<>'WC010200' and o.name<>'WC010400' and o.name<>'WC010500' and o.name<>'WC010600' and o.name<>'WC010714' and o.name<>'WC010800' and o.name<>'WC010931' and o.name<>'WC01100' and o.name<>'WR010130' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=41  return end	 FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set WCID2_I ='+rtrim(@cEndSite)+ ' where WCID2_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='WCID2_I'  order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=42  return end	 FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set TRNSTLOC ='+rtrim(@cEndSite)+ ' where TRNSTLOC='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='TRNSTLOC' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=43  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set BACKFLUSHSITEID ='+rtrim(@cEndSite)+ ' where BACKFLUSHSITEID='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='BACKFLUSHSITEID' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=66  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set BYPRODUCTSITEID ='+rtrim(@cEndSite)+ ' where BYPRODUCTSITEID='+rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='BYPRODUCTSITEID'  order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=67  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set TO_SITE_I ='+rtrim(@cEndSite)+ ' where TO_SITE_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='TO_SITE_I' and o.name<>'MOP1000' and o.name<>'MOP1027' and o.name<>'WO01050' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=68  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set FROM_SITE_I ='+rtrim(@cEndSite)+ ' where FROM_SITE_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='FROM_SITE_I' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=69  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set LOCATIONCODE2_I ='+rtrim(@cEndSite)+ ' where LOCATIONCODE2_I='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='LOCATIONCODE2_I' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=70	 return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set aaSiteID ='+rtrim(@cEndSite)+ ' where aaSiteID='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='aaSiteID' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=99  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return if exists (select * from sysobjects where id=object_id('dbo.SVC00952')  and sysstat & 0xf=3) begin update SVC00952 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR not in (select ITEMNMBR from SVC00952 where LOCNCODE=@I_charEndSite) end if exists (select * from sysobjects where id=object_id('dbo.SVC00502')  and sysstat & 0xf=3) begin CREATE TABLE dbo.#tmpSVC00502 ( ITEMNMBR char(31) NOT NULL, QTYONHND numeric(19,5) NOT NULL, ATYALLOC numeric(19,5) NOT NULL, MODIFDT datetime NOT NULL) if @@error<>0 begin select @O_iErrorState=44  return end create index AK1#tmpSVC00502 on #tmpSVC00502 (ITEMNMBR, MODIFDT) if @@error<>0 begin select @O_iErrorState=45  return end insert #tmpSVC00502 select ITEMNMBR,sum(QTYONHND),sum(ATYALLOC),MODIFDT from SVC00502 where LOCNCODE=@I_charStartSite or LOCNCODE=@I_charEndSite group by MODIFDT,ITEMNMBR if @@error<>0 begin select @O_iErrorState=46  return end update #tmpSVC00502 set QTYONHND=isnull(QTYONHND,0), ATYALLOC=isnull(ATYALLOC,0) if @@error<>0 begin select @O_iErrorState=47  return end insert into SVC00502 (ITEMNMBR,LOCNCODE,RCRDTYPE,QTYONHND,ATYALLOC,SVC_Delta_Type,MODIFDT) select ITEMNMBR,@I_charEndSite,RCRDTYPE,QTYONHND,ATYALLOC,SVC_Delta_Type,MODIFDT from SVC00502 where LOCNCODE=@I_charStartSite and rtrim(ITEMNMBR)+cast(MODIFDT AS varchar) not in (select rtrim(ITEMNMBR)+cast(MODIFDT AS varchar) from SVC00502 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=48  return end update a set  a.QTYONHND=b.QTYONHND, a.ATYALLOC=b.ATYALLOC from SVC00502 a, #tmpSVC00502 b where a.ITEMNMBR=b.ITEMNMBR and a.MODIFDT=b.MODIFDT and a.LOCNCODE=@I_charEndSite if @@error<>0 begin select @O_iErrorState=49  return end drop table #tmpSVC00502 if @@error<>0 begin select @O_iErrorState=50  return end end declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set Return_Location_Code ='+rtrim(@cEndSite)+ ' where Return_Location_Code='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='Return_Location_Code' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=110  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set Location_Code_Replacemen ='+rtrim(@cEndSite)+ ' where Location_Code_Replacemen='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='Location_Code_Replacemen' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=101  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set TRNSFLOC ='+rtrim(@cEndSite)+ ' where TRNSFLOC='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='TRNSFLOC' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=51  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set ITLOCN ='+rtrim(@cEndSite)+ ' where ITLOCN='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='ITLOCN' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=52  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set LOCCODEB ='+rtrim(@cEndSite)+ ' where LOCCODEB='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='LOCCODEB' order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=53  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end	 DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return declare ta_ISCCursor insensitive CURSOR for select 'update ['+o.name+'] set Vendor_Location_Code ='+rtrim(@cEndSite)+ ' where Vendor_Location_Code='+rtrim(@cStartSite)   from sysobjects o, syscolumns c where	o.id=c.id and o.type='U' and c.name='Vendor_Location_Code'  order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=54  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return if exists (select * from sysobjects where id=object_id('dbo.QI04090') and sysstat & 0xf=3) begin update QI04090 set MSTRSITE=@I_charEndSite where MSTRSITE=@I_charStartSite if @@error<>0 begin select @O_iErrorState=55  return end update QI04080 set MSTRSITE=@I_charEndSite where MSTRSITE=@I_charStartSite and ITEMNMBR+LOCNCODE not in (select ITEMNMBR+LOCNCODE from QI04080 where MSTRSITE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=56  return end delete QI04080 where MSTRSITE=@I_charStartSite if @@error<>0 begin select @O_iErrorState=57  return end update QI04070 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and not exists (select LOCNCODE from QI04070 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=58  return end update QI04080 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR not in (select ITEMNMBR from QI04080 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=59  return end end update IV00112 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+BIN+cast(QTYTYPE as varchar) not in (select ITEMNMBR+BIN+cast(QTYTYPE as varchar) from IV00112 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=61  return end update  i2 set QUANTITY=(i.QUANTITY+i2.QUANTITY), ATYALLOC=(i.ATYALLOC+i2.ATYALLOC) from IV00112 i, IV00112 i2 where i.ITEMNMBR=i2.ITEMNMBR and i.BIN =i2.BIN and i.QTYTYPE =i2.QTYTYPE and i.LOCNCODE =@I_charStartSite and i2.LOCNCODE=@I_charEndSite if @@error<>0 begin select @O_iErrorState=62  return end update IV40702 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and not exists (select LOCNCODE from IV40702 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=64  return end update IV40701 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and BIN	not in (select BIN from IV40701 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=65  return end update IV10301 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and STCKCNTID+ITEMNMBR+BINNMBR not in (select STCKCNTID+ITEMNMBR+BINNMBR from IV10301 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=71  return end update b set b.CAPTUREDQTY=a.CAPTUREDQTY+b.CAPTUREDQTY, b.COUNTEDQTY=a.COUNTEDQTY+b.COUNTEDQTY, b.Stock_Serial_Lot_Count=a.Stock_Serial_Lot_Count+b.Stock_Serial_Lot_Count, b.STCKSRLLTVRNC=a.STCKSRLLTVRNC+b.STCKSRLLTVRNC, b.VARIANCEQTY=a.VARIANCEQTY+b.VARIANCEQTY, b.Temp_Allocated_Quantity=a.Temp_Allocated_Quantity+b.Temp_Allocated_Quantity from IV10301 a, IV10301 b where 	a.LOCNCODE=@I_charStartSite and b.LOCNCODE=@I_charEndSite and a.STCKCNTID=b.STCKCNTID and a.ITEMNMBR=b.ITEMNMBR and a.BINNMBR=b.BINNMBR if @@error<>0 begin select @O_iErrorState=74  return end update IV10303 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and STCKCNTID+ITEMNMBR+BINNMBR+UOFM not in (select STCKCNTID+ITEMNMBR+BINNMBR+UOFM from IV10303 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=72  return end update b set b.COUNTEDQTY=a.COUNTEDQTY+b.COUNTEDQTY from IV10303 a, IV10303 b where 	a.LOCNCODE=@I_charStartSite and b.LOCNCODE=@I_charEndSite and a.STCKCNTID=b.STCKCNTID and a.ITEMNMBR=b.ITEMNMBR and a.BINNMBR=b.BINNMBR and a.UOFM=b.UOFM if @@error<>0 begin select @O_iErrorState=75  return end update IV30701 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and STCKCNTID+cast(SEQNUMBR as varchar)+ITEMNMBR+BINNMBR not in (select STCKCNTID+cast(SEQNUMBR as varchar)+ITEMNMBR+BINNMBR from IV30701 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=73  return end update b set b.COUNTEDQTY=a.COUNTEDQTY+b.COUNTEDQTY, b.CAPTUREDQTY=a.CAPTUREDQTY+b.CAPTUREDQTY, b.VARIANCEQTY=a.VARIANCEQTY+b.VARIANCEQTY from IV30701 a, IV30701 b where 	a.LOCNCODE=@I_charStartSite and b.LOCNCODE=@I_charEndSite and a.STCKCNTID=b.STCKCNTID and a.SEQNUMBR=b.SEQNUMBR and a.ITEMNMBR=b.ITEMNMBR and a.BINNMBR=b.BINNMBR if @@error<>0 begin select @O_iErrorState=76  return end update IV30702 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and STCKCNTID+cast(SEQNUMBR as varchar)+ITEMNMBR+BINNMBR+cast(SLTSQNUM as varchar) not in (select STCKCNTID+cast(SEQNUMBR as varchar)+ITEMNMBR+BINNMBR+cast(SLTSQNUM as varchar) from IV30702 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=77  return end update b set b.COUNTEDQTY=a.COUNTEDQTY+b.COUNTEDQTY, b.CAPTUREDQTY=a.CAPTUREDQTY+b.CAPTUREDQTY, b.VARIANCEQTY=a.VARIANCEQTY+b.VARIANCEQTY from IV30702 a, IV30702 b where 	a.LOCNCODE=@I_charStartSite and b.LOCNCODE=@I_charEndSite and a.STCKCNTID=b.STCKCNTID and a.SEQNUMBR=b.SEQNUMBR and a.ITEMNMBR=b.ITEMNMBR and a.BINNMBR=b.BINNMBR and a.SLTSQNUM=b.SLTSQNUM if @@error<>0 begin select @O_iErrorState=78  return end update IV00117 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+cast(Priority as varchar)+BIN not in (select ITEMNMBR+cast(Priority as varchar)+BIN from IV00117 where LOCNCODE=@I_charEndSite) if (@@error<>0) begin select @O_iErrorState=130  return end delete IV00117 where LOCNCODE=@I_charStartSite if (@@error<>0) begin select @O_iErrorState=131  return end update IV00200 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) not in (select ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV00200 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=81  return end select @x=isnull(max(DTSEQNUM)+1, 1) from IV00200 where LOCNCODE=@I_charEndSite and ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) in (select ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV00200 where LOCNCODE=@I_charEndSite) update IV00200 set DTSEQNUM=@x, @x=@x+1, LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) in (select ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV00200 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=82  return end update IV00300 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) not in (select ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV00300 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=79  return end select @x=isnull(max(DTSEQNUM)+1, 1) from IV00300 where LOCNCODE=@I_charEndSite and ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) in (select ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV00300 where LOCNCODE=@I_charEndSite) update IV00300 set DTSEQNUM=@x, @x=@x+1, LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) in (select ITEMNMBR+cast(QTYTYPE as varchar)+cast(DATERECD as varchar)+cast(DTSEQNUM as varchar) from IV00300 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=80  return end update POP40800 set LOCNCODE=@I_charEndSite where LOCNCODE=@I_charStartSite and not exists(select LOCNCODE from POP40800 where LOCNCODE=@I_charEndSite) if @@error<>0 begin select @O_iErrorState=88  return end if (exists (select * from sysobjects where id=object_id('dbo.WO010032') and sysstat & 0xf=3)) begin exec ItemSiteCombinerMfg @I_charStartSite, @I_charEndSite, @cStartSite, @cEndSite, @O_iErrorState output if (@O_iErrorState<>0) begin select @O_iErrorState=100  return end end declare ta_ISCCursor insensitive CURSOR for select 'delete ['+o.name+'] where LOCNCODE='+rtrim(@cStartSite) from sysobjects o, syscolumns c where	(o.id=c.id and o.type='U' and c.name='LOCNCODE') and (o.name='IV00102' or o.name='IV10301' or o.name='IV10303' or o.name='IV30102' or o.name='IV30701' or o.name='IV30702' or o.name='IV40700' or o.name='SVC00952' or o.name='SVC00502' or o.name='VTX_IV40700' or o.name='QI04070' or o.name='QI04080' or o.name='IV00111' or o.name='IV00112' or o.name='IV40702' or o.name='IV40701' or o.name='MP030000'  or o.name='MRP0100'   or o.name='MRP0101'   or o.name='POP40800') order by o.name set nocount on OPEN ta_ISCCursor FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE WHILE (@@FETCH_STATUS<>-1) begin exec (@LOCNCODE) if @@error<>0 begin select @O_iErrorState=60  return end FETCH NEXT FROM ta_ISCCursor INTO @LOCNCODE end DEALLOCATE ta_ISCCursor if @O_iErrorState<>0 return begin exec @iStatus=taItemSiteCombinerPost @I_charStartSite, @I_charEndSite, @cStartSite, @cEndSite, @O_iErrorState if @O_iErrorState<>0 or @@error<>0 begin select @O_iErrorState = 77 return end end return  
GO
GRANT EXECUTE ON  [dbo].[smSiteCombine1] TO [DYNGRP]
GO

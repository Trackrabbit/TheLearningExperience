SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[slp_FA_FUNC_Averaging_Convention] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlaccessstring varchar(1000),  @I_iDictID int, @I_sFunctionName varchar(100), @I_iFunctionEnum int, @Half_Year varchar(255),  @Modified_Half_Year varchar(255),  @Mid_Month_LB1stRB varchar(255),  @Mid_Month_LB15thRB varchar(255),  @Mid_Quarter varchar(255),  @Next_Month varchar(255),  @Full_Month varchar(255),  @Next_Year varchar(255),  @Full_Year varchar(255),  @Full_Year_All_Year varchar(255),  @None varchar(255),  @Next_Period varchar(255),  @Full_Period varchar(255)  select @I_iDictID = 309 select @I_sFunctionName = 'FA_FUNC_Averaging_Convention' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Half_Year output  select @I_iFunctionEnum = 2 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Modified_Half_Year output  select @I_iFunctionEnum = 3 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Mid_Month_LB1stRB output  select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Mid_Month_LB15thRB output  select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Mid_Quarter output  select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Next_Month output  select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Full_Month output  select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Next_Year output  select @I_iFunctionEnum = 9 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Full_Year output  select @I_iFunctionEnum = 10 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Full_Year_All_Year output  select @I_iFunctionEnum = 11 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @None output  select @I_iFunctionEnum = 12 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Next_Period output  select @I_iFunctionEnum = 13 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Full_Period output  select @sqldropstring =  'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[FA_FUNC_Averaging_Convention]'') and xtype in (N''FN'',N''IF'',N''TF'')) ' +  'drop function [dbo].[FA_FUNC_Averaging_Convention] '  select @sqlstring1 =  'create function [dbo].[FA_FUNC_Averaging_Convention] (@iIntEnum integer) returns varchar(100) ' +  'as  '+ 'begin  '+ 'declare @oVarcharValuestring varchar(100) ' + 'set @oVarcharValuestring = ' + 'case ' +  ' when @iIntEnum = 1 then ''' + @Half_Year + '''' +  ' when @iIntEnum = 2 then ''' + @Modified_Half_Year + '''' +  ' when @iIntEnum = 3 then ''' + @Mid_Month_LB1stRB + '''' +  ' when @iIntEnum = 4 then ''' + @Mid_Month_LB15thRB + '''' +  ' when @iIntEnum = 5 then ''' + @Mid_Quarter + '''' +  ' when @iIntEnum = 6 then ''' + @Next_Month + '''' +  ' when @iIntEnum = 7 then ''' + @Full_Month + '''' +  ' when @iIntEnum = 8 then ''' + @Next_Year + '''' +  ' when @iIntEnum = 9 then ''' + @Full_Year + '''' +  ' when @iIntEnum = 10 then ''' + @Full_Year_All_Year + '''' +  ' when @iIntEnum = 11 then ''' + @None + '''' +  ' when @iIntEnum = 12 then ''' + @Next_Period + '''' +  ' when @iIntEnum = 13 then ''' + @Full_Period + '''' +  ' else '''' ' +  ' end ' +  ' RETURN(@oVarcharValuestring) ' +  ' END '  exec (@sqldropstring)  exec (@sqlstring1+' '+@sqlstring2)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[slp_FA_FUNC_Averaging_Convention] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smPMSummaryNOINVYTD] @l_start datetime, @l_end datetime, @O_SQL_Error_State int = null  output with encryption as truncate table taPMRECALC  declare @x numeric(19,5) declare @x2 numeric(19,5) declare @x3 numeric(19,5) declare @x4 numeric(19,5) declare @x5 numeric(19,5) declare @VENDORID  char (15) declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = count(PM20000.DOCTYPE) from PM20000 where PM20000.VENDORID = @VENDORID  and DOCTYPE = 1 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = count(PM30200.DOCTYPE) from PM30200 where PM30200.VENDORID = @VENDORID  and DOCTYPE = 1 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set NOINVYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.DOCAMNT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and (DOCTYPE = 1 or DOCTYPE = 3) and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end select @x4 = isnull(sum(PM20000.DOCAMNT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and (DOCTYPE = 5) and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end select @x = @x - @x4 insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.DOCAMNT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and (DOCTYPE = 1 or DOCTYPE = 3) and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end select @x5 = isnull(sum(PM30200.DOCAMNT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and (DOCTYPE = 5) and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end select @x2 = @x2 - @x5 if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2  FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set AMBLDTYD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.DOCAMNT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and DOCTYPE = 6 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.DOCAMNT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and DOCTYPE = 6 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set AMTPDYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = count(PM20000.DOCTYPE) from PM20000 where PM20000.VENDORID = @VENDORID  and DOCTYPE = 2 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = count(PM30200.DOCTYPE) from PM30200 where PM30200.VENDORID = @VENDORID  and DOCTYPE = 2 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID  else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set NFNCHYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.DOCAMNT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and DOCTYPE = 2 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.DOCAMNT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and DOCTYPE = 2 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set FINCHYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.DOCAMNT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and DOCTYPE = 4 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.DOCAMNT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and DOCTYPE = 4 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set RTRNSYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.DISAMTAV),0) from PM20000 where PM20000.VENDORID = @VENDORID  and DISAMTAV > 0.00000 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.DISAMTAV),0) from PM30200 where PM30200.VENDORID = @VENDORID  and DISAMTAV > 0.00000 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set DISAVYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM10000.VENDORID from PM10000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM10000.DISTKNAM),0) from PM10000 where PM10000.VENDORID = @VENDORID  and DISTKNAM > 0.00000 and (DOCTYPE = 1 or DOCTYPE = 3) and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM20000.DISTKNAM),0) from PM20000 where PM20000.VENDORID = @VENDORID  and DISTKNAM > 0.00000 and (DOCTYPE = 1 or DOCTYPE = 3) and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x3 = isnull(sum(PM30200.DISTKNAM),0) from PM30200 where PM30200.VENDORID = @VENDORID  and DISTKNAM > 0.00000 and (DOCTYPE = 1 or DOCTYPE = 3) and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x3 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x3 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set DISTKYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.WROFAMNT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and WROFAMNT > 0.00000 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.WROFAMNT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and WROFAMNT > 0.00000 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set WROFSYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM20000.TRDISAMT),0) from PM20000 where PM20000.VENDORID = @VENDORID  and TRDISAMT > 0.00000 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM30200.TRDISAMT),0) from PM30200 where PM30200.VENDORID = @VENDORID  and TRDISAMT > 0.00000 and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update  PM00201 set TRDTYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID truncate table taPMRECALC  declare T_cursor CURSOR for select distinct PM30200.VENDORID from PM30200 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x = isnull(sum(PM30200.DISAMTAV - PM30200.DISTKNAM),0) from PM30200 where PM30200.VENDORID = @VENDORID  and DISAMTAV >= DISTKNAM and VOIDED = 0 and DOCDATE >= @l_start and DOCDATE <= @l_end insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null declare T_cursor CURSOR for select distinct PM20000.VENDORID from PM20000 set nocount on OPEN T_cursor FETCH NEXT FROM T_cursor INTO @VENDORID WHILE (@@FETCH_STATUS <> -1) begin select @x2 = isnull(sum(PM20000.DISAMTAV - PM20000.DISTKNAM),0) from PM20000 where PM20000.VENDORID = @VENDORID  and DISTKNAM > 0.00000 and DISAMTAV >= DISTKNAM and VOIDED = 0 and  DOCDATE >= @l_start and DOCDATE <= @l_end if exists (select VENDORID from taPMRECALC  where VENDORID = @VENDORID) update taPMRECALC  set THECOUNT = THECOUNT + @x2 where taPMRECALC .VENDORID = @VENDORID else insert into taPMRECALC  (VENDORID, THECOUNT) select @VENDORID, @x2 FETCH NEXT FROM T_cursor INTO @VENDORID end DEALLOCATE T_cursor delete taPMRECALC  where THECOUNT is null update PM00201 set DISLSYTD = THECOUNT from taPMRECALC , PM00201 where PM00201.VENDORID = taPMRECALC .VENDORID 
GO
GRANT EXECUTE ON  [dbo].[smPMSummaryNOINVYTD] TO [DYNGRP]
GO

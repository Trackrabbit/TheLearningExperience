SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[smItemChange1] @I_charStartItem char(30), @I_charEndItem char(30),  @O_iErrorState int = NULL output with encryption as set transaction isolation level read uncommitted set nocount on declare @DBNAME char(25), @DBID char(25), @tTransaction tinyint, @tLoop tinyint, @ITEMNMBR char(255), @iStatus int, @cStartItem char(50), @cEndItem char(50), @ITEMNMBR1 as char(31), @CURNCYID as char(15), @PRCLEVEL as char(11), @UOFM as char(9), @TOQTY as numeric(19,5), @FROMQTY as numeric(19,5), @UOMPRICE as numeric(19,5), @QTYBSUOM as numeric(19,5) select @DBNAME = DB_NAME() select @DBID = CMPANYID from DYNAMICS..SY01500 where INTERID = @DBNAME exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charStartItem, @O_cOutputString = @cStartItem output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 1 return end exec @iStatus = smFormatStringsForExecs @I_vInputString  = @I_charEndItem, @O_cOutputString = @cEndItem output, @O_iErrorState	 = @O_iErrorState output if @iStatus <> 0 or @O_iErrorState <> 0 begin set @O_iErrorState = 2 return end select @O_iErrorState 	 = 0 if @@trancount = 0 begin select @tTransaction = 1 begin transaction end while ( @tLoop is NULL ) begin select @tLoop = 1 exec @iStatus = taItemNumberModifierPre @I_charStartItem output, @I_charEndItem output,  @cStartItem output, @cEndItem output, @O_iErrorState output if @O_iErrorState <> 0  begin break end if	@I_charStartItem is NULL or @I_charEndItem is NULL or @cStartItem is NULL or @cEndItem is NULL begin select @O_iErrorState = 3  break end  if exists (select * from sysobjects where id = object_id('dbo.mfg_update_location_update')) alter table IV00101 disable trigger mfg_update_location_update if @@error <> 0 begin select @O_iErrorState = 4  break end if exists (select * from sysobjects where id = object_id('dbo.mfg_remove_orphaned_records')) alter table IV00101 disable trigger mfg_remove_orphaned_records if @@error <> 0 begin select @O_iErrorState = 5  break end if exists (select * from sysobjects where id = object_id('dbo.mfg_add_matching_item_records')) alter table IV00101 disable trigger mfg_add_matching_item_records if @@error <> 0 begin select @O_iErrorState = 93  break end if exists (select * from sysobjects where id = object_id('dbo.mfg_update_IV00102')) alter table IV00102 disable trigger mfg_update_IV00102 if @@error <> 0 begin select @O_iErrorState = 52  break end if exists (select * from sysobjects where id = object_id('dbo.mfg_insert_IV00102_location')) alter table IV00102 disable trigger mfg_insert_IV00102_location if @@error <> 0 begin select @O_iErrorState = 94  break end if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_Item_Ext_U')) alter table IV00101 disable trigger tr_SVC_Item_Ext_U if @@error <> 0  begin select @O_iErrorState = 97  break end if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_IV00102_U')) alter table IV00102 disable trigger tr_SVC_IV00102_U if @@error <> 0  begin select @O_iErrorState = 99  break end insert into IV00101 (ITEMNMBR,ITEMDESC,NOTEINDX,ITMSHNAM,ITEMTYPE,ITMGEDSC, STNDCOST,CURRCOST,ITEMSHWT,DECPLQTY,DECPLCUR,ITMTSHID, TAXOPTNS,IVIVINDX,IVIVOFIX,IVCOGSIX,IVSLSIDX,IVSLDSIX, IVSLRNIX,IVINUSIX,IVINSVIX,IVDMGIDX,IVVARIDX,DPSHPIDX, PURPVIDX,UPPVIDX,IVRETIDX,ASMVRIDX,ITMCLSCD,ITMTRKOP, LOTTYPE,KPERHIST,KPTRXHST,KPCALHST,KPDSTHST,ALWBKORD, VCTNMTHD,UOMSCHDL,ALTITEM1,ALTITEM2,USCATVLS_1,USCATVLS_2, USCATVLS_3,USCATVLS_4,USCATVLS_5,USCATVLS_6,MSTRCDTY,MODIFDT, CREATDDT,WRNTYDYS,PRCLEVEL,LOCNCODE,PINFLIDX,PURMCIDX, IVINFIDX,INVMCIDX,CGSINFLX,CGSMCIDX,ITEMCODE,TCC, PriceGroup,PRICMTHD,PRCHSUOM,SELNGUOM,KTACCTSR,LASTGENSN, ABCCODE,Revalue_Inventory,Tolerance_Percentage,Purchase_Item_Tax_Schedu,Purchase_Tax_Options,ITMPLNNNGTYP, STTSTCLVLPRCNTG,CNTRYORGN) select @I_charEndItem,ITEMDESC,NOTEINDX,ITMSHNAM,ITEMTYPE,ITMGEDSC, STNDCOST,CURRCOST,ITEMSHWT,DECPLQTY,DECPLCUR,ITMTSHID, TAXOPTNS,IVIVINDX,IVIVOFIX,IVCOGSIX,IVSLSIDX,IVSLDSIX, IVSLRNIX,IVINUSIX,IVINSVIX,IVDMGIDX,IVVARIDX,DPSHPIDX, PURPVIDX,UPPVIDX,IVRETIDX,ASMVRIDX,ITMCLSCD,ITMTRKOP, LOTTYPE,KPERHIST,KPTRXHST,KPCALHST,KPDSTHST,ALWBKORD, VCTNMTHD,UOMSCHDL,ALTITEM1,ALTITEM2,USCATVLS_1,USCATVLS_2, USCATVLS_3,USCATVLS_4,USCATVLS_5,USCATVLS_6,MSTRCDTY,MODIFDT, CREATDDT,WRNTYDYS,PRCLEVEL,LOCNCODE,PINFLIDX,PURMCIDX, IVINFIDX,INVMCIDX,CGSINFLX,CGSMCIDX,ITEMCODE,TCC, PriceGroup,PRICMTHD,PRCHSUOM,SELNGUOM,KTACCTSR,LASTGENSN, ABCCODE,Revalue_Inventory,Tolerance_Percentage,Purchase_Item_Tax_Schedu,Purchase_Tax_Options,ITMPLNNNGTYP, STTSTCLVLPRCNTG,CNTRYORGN from IV00101 where ITEMNMBR = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 60  break end delete IV00101 where ITEMNMBR = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 61  break end declare ta_INMCursor insensitive CURSOR for select ITEMNMBR, CURNCYID, PRCLEVEL, UOFM, TOQTY, FROMQTY, UOMPRICE, QTYBSUOM  from IV00108 where ITEMNMBR = @I_charStartItem set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR1, @CURNCYID, @PRCLEVEL, @UOFM, @TOQTY, @FROMQTY, @UOMPRICE, @QTYBSUOM WHILE (@@FETCH_STATUS <> -1) begin insert into IV00108 (ITEMNMBR, CURNCYID, PRCLEVEL, UOFM, TOQTY, FROMQTY, UOMPRICE, QTYBSUOM) select @I_charEndItem, @CURNCYID, @PRCLEVEL, @UOFM, @TOQTY, @FROMQTY, @UOMPRICE, @QTYBSUOM   if @@error <> 0 begin select @O_iErrorState = 90  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR1, @CURNCYID, @PRCLEVEL, @UOFM, @TOQTY, @FROMQTY, @UOMPRICE, @QTYBSUOM end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break delete IV00108 where ITEMNMBR = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 91  break end declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ITEMNMBR =' + rtrim(@cEndItem) +  ' where ITEMNMBR = ' + rtrim(@cStartItem)  from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ITEMNMBR' and o.name <> 'IV00101' and o.name <> 'IV00108' and o.name <> 'IntIvPriceList' and o.name <> 'IntSubstituteItems' and o.name <> 'DXPublish_IntInventoryPriceList' and o.name <> 'DXPublish_IntInventoryPriceList_Work' and o.name <> 'DXPublish_InventoryKit' and o.name <> 'DXPublish_InventoryKit_Work' and o.name <> 'DXPublish_InventoryMaster' and o.name <> 'DXPublish_InventoryMaster_Work' and o.name <> 'DXPublish_InventoryPriceLevel' and o.name <> 'DXPublish_InventoryPriceLevel_Work' and o.name <> 'DXPublish_InventoryPriceList' and o.name <> 'DXPublish_InventoryPriceList_Work' and o.name <> 'DXPublish_InventorySubstituteItem' and o.name <> 'DXPublish_InventorySubstituteItem_Work' and o.name <> 'DXPublish_InventoryUofMScheduleSetup' and o.name <> 'DXPublish_InventoryUofMScheduleSetup_Work' and o.name <> 'DXPublish_InventoryUofMScheduleSetupDetail' and o.name <> 'DXPublish_InventoryUofMScheduleSetupDetail_Work' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 6  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break update a set ORMSTRID = @I_charEndItem from GL10001 a, GL10000 b where 	a.ORMSTRID = @I_charStartItem and a.JRNENTRY = b.JRNENTRY and b.SERIES = 5 if @@error <> 0 begin select @O_iErrorState = 7  break end update GL20000 set ORMSTRID = @I_charEndItem where ORMSTRID = @I_charStartItem and SERIES = 5 if @@error <> 0 begin select @O_iErrorState = 8  break end update GL30000 set ORMSTRID = @I_charEndItem where ORMSTRID = @I_charStartItem and SERIES = 5 if @@error <> 0 begin select @O_iErrorState = 9  break end update PJOURNAL set ORMSTRID = @I_charEndItem where ORMSTRID = @I_charStartItem if @@error <> 0 begin select @O_iErrorState = 10  break end declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ITMNUM =' + rtrim(@cEndItem) + ' where ITMNUM = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ITMNUM' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 11  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set STTITNUM =' + rtrim(@cEndItem) + ' where STTITNUM = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'STTITNUM' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 12  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ENITMNBR =' + rtrim(@cEndItem) +  ' where ENITMNBR = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ENITMNBR' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 13  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set EC_ItemNumber =' + rtrim(@cEndItem) +  ' where EC_ItemNumber = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'EC_ItemNumber'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 113  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set CMPTITNM =' + rtrim(@cEndItem) +  ' where CMPTITNM = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'CMPTITNM' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 14  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set FGDITMNM =' + rtrim(@cEndItem) + ' where FGDITMNM = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'FGDITMNM'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 15  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ALTITEM1 =' + rtrim(@cEndItem) +  ' where ALTITEM1 = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ALTITEM1'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 16  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ALTITEM2 =' + rtrim(@cEndItem) + ' where ALTITEM2 = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ALTITEM2'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 17  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ITEMNBR =' + rtrim(@cEndItem) + ' where ITEMNBR = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ITEMNBR' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 18  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set PPN_I =' + rtrim(@cEndItem) +  ' where PPN_I = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'PPN_I' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 19  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set CPN_I =' + rtrim(@cEndItem) +  ' where CPN_I = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'CPN_I'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 20  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set STARTITEMNUM_I =' + rtrim(@cEndItem) +  ' where STARTITEMNUM_I = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'STARTITEMNUM_I'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 21  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set ENDITEMNUM_I =' + rtrim(@cEndItem) +  ' where ENDITEMNUM_I = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'ENDITEMNUM_I'  order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 22  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break if exists (select * from sysobjects where id = object_id('dbo.EC050031') and sysstat & 0xf = 3) begin update EC050031 set ECM_Item_Number = @I_charEndItem where ECM_Item_Number = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 23  break end end if exists (select * from sysobjects where id = object_id('dbo.IVR10100') and sysstat & 0xf = 3) begin update IVR10100 set ALTPART_I = @I_charEndItem where ALTPART_I = @I_charStartItem and ITEMNMBR not in (select ITEMNMBR from IVR10100 where ALTPART_I = @I_charEndItem) if @@error <> 0  begin select @O_iErrorState = 24  break end end update SY01200 set Master_ID = @I_charEndItem where Master_ID = @I_charStartItem and Master_Type = 'ITM' if @@error <> 0  begin select @O_iErrorState = 55  break end declare ta_INMCursor insensitive CURSOR for select 'update DYNAMICS..'+o.name+' set Item = ' + rtrim(@cEndItem) +  ' where Item = ' + rtrim(@cStartItem) + ' and CompanyID = ' + str(@DBID)   from DYNAMICS..sysobjects o, DYNAMICS..syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'Item' and (o.name = 'POWarehouse' or   o.name = 'ReqItemList' or   o.name = 'ReqItemListHist') order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 25  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break if exists (select * from sysobjects where id = object_id('dbo.SVC00998') and sysstat & 0xf = 3) begin update SVC00310 set From_Item_Number = @I_charEndItem where From_Item_Number = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 27  break end update SVC00920 set Hotline_Labor_Item = @I_charEndItem	where Hotline_Labor_Item = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 28  break end update SVC06100 set IBITEMNUM = @I_charEndItem where IBITEMNUM = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 29  break end update SVC00920 set LABITMDB = @I_charEndItem where LABITMDB = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 30  break end update SVC00920 set LABITMOV = @I_charEndItem where LABITMOV = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 30  break end update SVC00920 set LABITMST = @I_charEndItem where LABITMST = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 30  break end update SVC06100 set OBITEMNUM = @I_charEndItem where OBITEMNUM = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 31  break end update SVC00302 set OLDITEMNBR = @I_charEndItem	where OLDITEMNBR = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 32  break end declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set Replace_Item_Number =' + rtrim(@cEndItem) +  ' where Replace_Item_Number = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'Replace_Item_Number'  and (o.name = 'SVC35200' or o.name = 'SVC35256' or o.name = 'SVC05200'  or o.name = 'SVC05256') order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 33  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set Return_Item_Number =' + rtrim(@cEndItem) +  ' where Return_Item_Number = ' + rtrim(@cStartItem)   from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'Return_Item_Number'  and (o.name = 'SVC35200' or o.name = 'SVC35255' or o.name = 'SVC35601' or o.name = 'SVC35602' or o.name = 'SVC05015'  or o.name = 'SVC05115' or o.name = 'SVC05200' or o.name = 'SVC05255' or o.name = 'SVC05601' or o.name = 'SVC05602'  or o.name = 'SVC05625') order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0  begin select @O_iErrorState = 34  break end  FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor if @O_iErrorState <> 0 break update SVC00310 set To_Item_Number = @I_charEndItem where To_Item_Number = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 35  break end update SVC00920 set Travel_Labor_Item = @I_charEndItem where Travel_Labor_Item = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 36  break end end if exists (select * from sysobjects where id = object_id('dbo.PA01901') and sysstat & 0xf = 3) begin update PA01901 set PACOSTOWNER = @I_charEndItem where PACOSTOWNER = @I_charStartItem and PATranType = 6 if @@error <> 0  begin select @O_iErrorState = 39  break end end if exists (select * from sysobjects where id = object_id('dbo.PA11800') and sysstat & 0xf = 3) begin update PA11800 set PACOSTOWNER = @I_charEndItem where PACOSTOWNER = @I_charStartItem and PATU = 6 if @@error <> 0 begin select @O_iErrorState = 40  break end end if exists (select * from sysobjects where id = object_id('dbo.PA11801') and sysstat & 0xf = 3) begin update PA11801 set PACOSTOWNER = @I_charEndItem where PACOSTOWNER = @I_charStartItem and PATU = 6 if @@error <> 0 begin select @O_iErrorState = 41  break end end if exists (select * from sysobjects where id = object_id('dbo.PA13202') and sysstat & 0xf = 3) begin update PA13202 set PACOSTOWNER = @I_charEndItem where PACOSTOWNER = @I_charStartItem and PATU = 6  if @@error <> 0 begin select @O_iErrorState = 42  break end end if exists (select * from sysobjects where id = object_id('dbo.PA23203') and sysstat & 0xf = 3) begin update PA23203 set PACOSTOWNER = @I_charEndItem where PACOSTOWNER = @I_charStartItem and PATU = 6  if @@error <> 0 begin select @O_iErrorState = 43  break end end if exists (select * from sysobjects where id = object_id('dbo.PA33203') and sysstat & 0xf = 3) begin update PA33203 set PACOSTOWNER = @I_charEndItem where PACOSTOWNER = @I_charStartItem and PATU = 6  if @@error <> 0 begin select @O_iErrorState = 44  break end end update IV00103 set MNFCTRITMNMBR = @I_charEndItem where MNFCTRITMNMBR = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 45  break end declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set FREEITEM =' + rtrim(@cEndItem) +  ' where FREEITEM = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'FREEITEM' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 46  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor declare ta_INMCursor insensitive CURSOR for select 'update '+o.name+' set CONTITEMNBR =' + rtrim(@cEndItem) +  ' where CONTITEMNBR = ' + rtrim(@cStartItem) from sysobjects o, syscolumns c where	o.id = c.id and o.type = 'U' and c.name = 'CONTITEMNBR' order by o.name set nocount on OPEN ta_INMCursor FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR WHILE (@@FETCH_STATUS <> -1) begin exec (@ITEMNMBR) if @@error <> 0 begin select @O_iErrorState = 47  break end FETCH NEXT FROM ta_INMCursor INTO @ITEMNMBR end DEALLOCATE ta_INMCursor update IV70500 set End_Component_Item_Numbe = @I_charEndItem where End_Component_Item_Numbe = @I_charStartItem if @@error <> 0  begin select @O_iErrorState = 48  break end update IV70500 set Start_Component_Item_Num = @I_charEndItem where Start_Component_Item_Num = @I_charStartItem if @@error <> 0 begin select @O_iErrorState = 49  break end end  if exists (select * from sysobjects where id = object_id('dbo.mfg_update_location_update')) alter table IV00101 enable trigger mfg_update_location_update if @@error <> 0  begin select @O_iErrorState = 50  end if exists (select * from sysobjects where id = object_id('dbo.mfg_remove_orphaned_records')) alter table IV00101 enable trigger mfg_remove_orphaned_records if @@error <> 0 begin select @O_iErrorState = 51  end if exists (select * from sysobjects where id = object_id('dbo.mfg_add_matching_item_records')) alter table IV00101 enable trigger mfg_add_matching_item_records if @@error <> 0 begin select @O_iErrorState = 95  end if exists (select * from sysobjects where id = object_id('dbo.mfg_update_IV00102')) alter table IV00102 enable trigger mfg_update_IV00102 if @@error <> 0 begin select @O_iErrorState = 53  end if exists (select * from sysobjects where id = object_id('dbo.mfg_insert_IV00102_location')) alter table IV00102 enable trigger mfg_insert_IV00102_location if @@error <> 0 begin select @O_iErrorState = 96  end if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_Item_Ext_U')) alter table IV00101 enable trigger tr_SVC_Item_Ext_U if @@error <> 0  begin select @O_iErrorState = 98  end if exists (select * from sysobjects where id = object_id('dbo.tr_SVC_IV00102_U')) alter table IV00102 enable trigger tr_SVC_IV00102_U if @@error <> 0  begin select @O_iErrorState = 100  end exec @iStatus = taItemNumberModifierPost @I_charStartItem, @I_charEndItem, @cStartItem, @cEndItem, @O_iErrorState if @O_iErrorState <> 0 begin if @tTransaction = 1 rollback transaction end else if @tTransaction = 1 begin commit transaction end return 
GO
GRANT EXECUTE ON  [dbo].[smItemChange1] TO [DYNGRP]
GO

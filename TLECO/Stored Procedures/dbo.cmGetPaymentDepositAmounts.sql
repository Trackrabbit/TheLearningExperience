SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[cmGetPaymentDepositAmounts]  @iCMTrxType  smallint  = NULL,  @iClrdAmt numeric(19,5)  = NULL,  @iTrxAmnt numeric(19,5) = NULL,  @iReconciled tinyint  = NULL,  @iVoided tinyint  = NULL,  @iRecNum numeric(19,5) = NULL,  @iXfrRecordNum numeric(19,5) = NULL,  @oPaymentAmt numeric(19,5) = NULL output,  @oDepositAmt numeric(19,5) = NULL output,  @oAppError int  = NULL output as  declare   @lControlLoop tinyint,  @lSqlError int,  @FrmXfrRecordNum numeric(19,5),  @ToXfrRecordNum numeric(19,5),  @CMCHECKDOC int,  @CMWITHDRAWDOC int,  @CMDECREASEADJDOC  int,  @CMOTHEREXPENSEDOC  int,  @CMSERVICECHGDOC int,  @CMINCREASEADJDOC int,  @CMDEPOSITDOC int,   @CMINTINCOMEDOC int,  @CMOTHINCOMEDOC int,  @CMTRANSFERDOC int  while (@lControlLoop is NULL) begin  select @lControlLoop = 1   if @iCMTrxType = NULL or  @iClrdAmt = NULL or  @iTrxAmnt = NULL or  @iReconciled = NULL or  @iRecNum = NULL or  @iXfrRecordNum = NULL   begin  select @oAppError = 1  break  end   select @oPaymentAmt = 0   select @oDepositAmt = 0   select @lSqlError = 0  select @oAppError = 0    exec @lSqlError = DYNAMICS..smGetConstantString  'CMCHECKDOC',   @CMCHECKDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMWITHDRAWALDOC',   @CMWITHDRAWDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break  exec @lSqlError = DYNAMICS..smGetConstantString  'CMDECREASEADJDOC',   @CMDECREASEADJDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMOTHEXPENSEDOC',   @CMOTHEREXPENSEDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMSERVICECHGDOC',   @CMSERVICECHGDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMINCREASEADJDOC',   @CMINCREASEADJDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMDEPOSITDOC',   @CMDEPOSITDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMINTINCOMEDOC',   @CMINTINCOMEDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMOTHINCOMEDOC',   @CMOTHINCOMEDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   exec @lSqlError = DYNAMICS..smGetConstantString  'CMTRANSFERDOC',   @CMTRANSFERDOC output,  @oAppError output   if @lSqlError = 0 and @@error <> 0   select @lSqlError = @@error  if @lSqlError <> 0 or @oAppError <> 0  break   if @iCMTrxType = @CMCHECKDOC or  @iCMTrxType = @CMWITHDRAWDOC or  @iCMTrxType = @CMDECREASEADJDOC or  @iCMTrxType = @CMOTHEREXPENSEDOC or  @iCMTrxType = @CMSERVICECHGDOC   begin  if @iReconciled = 1 and @iVoided = 0  select @oPaymentAmt = @iClrdAmt  else  select @oPaymentAmt = @iTrxAmnt  end   if @iCMTrxType = @CMINCREASEADJDOC or  @iCMTrxType = @CMDEPOSITDOC or  @iCMTrxType = @CMINTINCOMEDOC or  @iCMTrxType = @CMOTHINCOMEDOC  begin  if @iReconciled = 1 and @iVoided = 0  select @oDepositAmt = @iClrdAmt  else  select @oDepositAmt = @iTrxAmnt  end   if @iCMTrxType = @CMTRANSFERDOC  begin  select  @FrmXfrRecordNum = CMFRMRECNUM,  @ToXfrRecordNum = CMTORECNUM  from  CM20600  where  Xfr_Record_Number = @iXfrRecordNum   if @iRecNum = @FrmXfrRecordNum  begin  if @iReconciled = 1 and @iVoided = 0  select @oPaymentAmt = @iClrdAmt  else  select @oPaymentAmt = @iTrxAmnt   end   if @iRecNum = @ToXfrRecordNum  begin  if @iReconciled = 1 and @iVoided = 0   select @oDepositAmt = @iClrdAmt  else  select @oDepositAmt = @iTrxAmnt  end  end  end  return(@lSqlError)    
GO
GRANT EXECUTE ON  [dbo].[cmGetPaymentDepositAmounts] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glDeleteBatch]  @I_iSQLSessionID int   = NULL,  @I_cBatchSource char(15) = NULL,  @I_cBatchNumber char(15) = NULL,  @I_cProductName char(30) = NULL,  @I_tCalculateGLTaxes tinyint  = NULL,  @O_tNotesDeleted tinyint  = NULL output,  @O_iErrorState int   = NULL  output as  declare  @tTransaction tinyint,  @iStatus int,  @GL_Normal char(15),  @GL_Clearing char(15),  @GL_Budget char(15),   @BATCH_WINDOW smallint,  @cUserID char(15),  @cCompanyName char(64),  @mNoteIndex numeric(19,5),  @cDBName char(5),  @TRUE tinyint,  @FALSE tinyint,  @tNotesDeleted tinyint,  @iError int  if @I_iSQLSessionID is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_cProductName is NULL or  @I_tCalculateGLTaxes is NULL begin  select @O_iErrorState = 20667  return end  select @O_iErrorState  = 0,  @O_tNotesDeleted = 0  exec @iStatus = DYNAMICS.dbo.smGetConstantString  'GL_NORMAL_STR',  @GL_Normal output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus  exec @iStatus = DYNAMICS.dbo.smGetConstantString  'GL_CLEARING_STR',  @GL_Clearing output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus  exec @iStatus = DYNAMICS.dbo.smGetConstantString  'GL_BUDGET_STR',  @GL_Budget output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'BATCH_WINDOW',  @BATCH_WINDOW output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'FALSE',  @FALSE output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'TRUE',  @TRUE output,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end  if @I_cBatchSource = @GL_Normal begin   exec @iStatus = dtaRemoveRecordsForBatch  @I_cBatchNumber,  @I_cBatchSource,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @O_iErrorState <> 0 or @iStatus <> 0  return(@iStatus)   if @I_tCalculateGLTaxes = @TRUE  begin  delete   GL10300  from  GL10300 GLTAX,  GL10000 HDR  where   GLTAX.JRNENTRY = HDR.JRNENTRY  and HDR.BACHNUMB = @I_cBatchNumber  and HDR.BCHSOURC = @I_cBatchSource  and  GLTAX.RCTRXSEQ = 0   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 21067  return(@iError)  end  end    delete  GL10001  from  GL10001 LINE,  GL10000 HDR  where  HDR.JRNENTRY  = LINE.JRNENTRY  and HDR.BACHNUMB = @I_cBatchNumber  and HDR.BCHSOURC = @I_cBatchSource   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20681  return(@iError)  end end    else if @I_cBatchSource = @GL_Budget begin   delete  GL12001  from  GL12001 LINE,  GL12000 HDR  where  HDR.JRNENTRY  = LINE.JRNENTRY  and HDR.BACHNUMB = @I_cBatchNumber  and HDR.BCHSOURC = @I_cBatchSource   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 21112      return(@iError)  end   delete  SY03900  from  GL12000 HDR,  SY03900 NOTE  where  HDR.BACHNUMB = @I_cBatchNumber  and HDR.BCHSOURC = @I_cBatchSource  and HDR.NOTEINDX  = NOTE.NOTEINDX   if @@rowcount > 0  select  @tNotesDeleted = @TRUE   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20683     return(@iError)  end   delete  GL12000  where  BACHNUMB = @I_cBatchNumber  and BCHSOURC = @I_cBatchSource   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 21113     return(@iError)  end end    else  begin  delete  GL10002  from  GL10002 CLEARING,  GL10000 HDR  where  HDR.JRNENTRY   = CLEARING.JRNENTRY  and HDR.BACHNUMB  = @I_cBatchNumber  and HDR.BCHSOURC  = @I_cBatchSource   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20682  return(@iError)  end end  if @I_cBatchSource <> @GL_Budget  begin   delete  SY03900  from  GL10000 HDR,  SY03900 NOTE  where  HDR.BACHNUMB = @I_cBatchNumber  and HDR.BCHSOURC = @I_cBatchSource  and HDR.NOTEINDX  = NOTE.NOTEINDX   if @@rowcount > 0  select  @tNotesDeleted = @TRUE   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20683  return(@iError)  end   delete  GL10000  where  BACHNUMB = @I_cBatchNumber  and BCHSOURC = @I_cBatchSource   select @iError = @@error  if @iError <> 0  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20684  return(@iError)  end end    select  @mNoteIndex = BATCH.NOTEINDX from   SY00500 BATCH,  SY03900 NOTE where  BATCH.BACHNUMB = @I_cBatchNumber and BATCH.BCHSOURC = @I_cBatchSource and BATCH.NOTEINDX = NOTE.NOTEINDX  if @mNoteIndex > 0 begin  delete  SY03900  where  NOTEINDX  = @mNoteIndex   if @@rowcount <> 1  begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20683  return  end  select  @tNotesDeleted = @TRUE end  delete  SY00500 where  BACHNUMB = @I_cBatchNumber and BCHSOURC = @I_cBatchSource  select @iError = @@error if @iError <> 0 begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20685  return(@iError) end  select @cDBName = db_name()  exec @iStatus = DYNAMICS..smAddRecordDeletedRecord  @I_iSQLSessionID,  'SY00500',  @I_cBatchNumber,  2,   @I_cProductName,  @cDBName,  0,  @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction   return(@iStatus) end  select  @cCompanyName   = ACT.CMPNYNAM,  @cUserID  = ACT.USERID from  DYNAMICS.dbo.ACTIVITY   ACT,  DYNAMICS.dbo.SY01500    COMP where  ACT.SQLSESID    =       @I_iSQLSessionID and COMP.CMPNYNAM   =       ACT.CMPNYNAM  delete  DYNAMICS.dbo.SY00800 where  WINTYPE   = @BATCH_WINDOW and USERID  = @cUserID and CMPNYNAM = @cCompanyName and BCHSOURC   = @I_cBatchSource and BACHNUMB  = @I_cBatchNumber  select @iError = @@error if @iError <> 0 begin  if @tTransaction = 1  rollback transaction  select @O_iErrorState = 20687  return(@iError) end  select @O_tNotesDeleted = @tNotesDeleted  if @tTransaction = 1  commit transaction  return   
GO
GRANT EXECUTE ON  [dbo].[glDeleteBatch] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 create procedure [dbo].[dtaGetGLReference]   @I_tReversing tinyint  = NULL,  @I_nDTAIndex numeric(19,5) = NULL,  @I_nRecurringTrxSeq numeric(19,5) = NULL,  @O_cDTAReference char(25)  = NULL output,  @O_iErrorState int  = NULL output as   declare   @cDTA_Reversing char(2),  @cDTA_Normal char(2),  @iError int,  @iStatus int,  @sDecimalPosition smallint,  @cdta_index varchar(20),  @cDTAIndex char(20),  @tTransaction tinyint,  @tLoop tinyint,  @TRUE tinyint  select  @O_iErrorState = 0  select  @TRUE   = 1,  @iStatus  = 0,  @iError  = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if @I_tReversing is NULL or  @I_nDTAIndex is NULL   begin  select @O_iErrorState = 21027  break   end    if (@I_tReversing = @TRUE)    begin   exec @iStatus = DYNAMICS.dbo.smGetConstantString  'DTA_GLREFDELIMITER_REVERSING',   @cDTA_Reversing output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   select @sDecimalPosition = charindex('.',convert(char,@I_nDTAIndex))  select @cdta_index = convert(char,@I_nDTAIndex)  select @cDTAIndex =  substring(@cdta_index,1, @sDecimalPosition - 1) +   substring(@cdta_index, @sDecimalPosition + 1, len(@cdta_index))   select @O_cDTAReference = substring(@cDTA_Reversing,1,1) + @cDTAIndex  end  else  begin  exec @iStatus = DYNAMICS.dbo.smGetConstantString  'DTA_GLREFDELIMITER_NORMAL',   @cDTA_Normal  output,  @O_iErrorState  output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   select @sDecimalPosition = charindex('.',convert(char,@I_nDTAIndex))  select @cdta_index = convert(char,@I_nDTAIndex)  select @cDTAIndex =  substring(@cdta_index,1, @sDecimalPosition - 1) +   substring(@cdta_index, @sDecimalPosition + 1, len(@cdta_index))   select @O_cDTAReference = substring(@cDTA_Normal,1,1) + @cDTAIndex  end  end    if (@O_iErrorState <> 0) or (@iStatus <> 0) begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[dtaGetGLReference] TO [DYNGRP]
GO

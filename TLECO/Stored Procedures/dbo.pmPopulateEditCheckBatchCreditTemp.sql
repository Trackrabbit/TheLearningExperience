SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[pmPopulateEditCheckBatchCreditTemp]  @I_cCreditTemp char(40) = NULL,  @I_cBatchSource char(15) = NULL,  @I_cBatchNumber char(15) = NULL,  @I_tFuncBatch tinyint=NULL,  @I_cFuncCurrencyID char(15) = NULL,  @I_cVendorID char(15) = NULL,  @I_cVoucherNumber char(32) = NULL,  @I_iDocumentType int = NULL,  @O_iErrorState int          = NULL output as  declare  @cBatchNumber char(32),  @cBatchSource char(32),  @cVendorID char(32),  @cVoucherNumber char(32),  @cFuncCurrencyID char(32),  @cRemittance char(32),  @TRUE                           tinyint,  @FALSE                          tinyint,  @iError int,  @iStatus int  select  @O_iErrorState   = 0,  @iStatus         = 0   if @I_cCreditTemp is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_cVendorID is NULL or  @I_cVoucherNumber is NULL or  @I_iDocumentType is NULL or  @I_tFuncBatch is NULL or  @I_cFuncCurrencyID is NULL  begin  select @O_iErrorState = 21097  return  end    exec @iStatus = DYNAMICS..smGetConstantInt 'TRUE', @TRUE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'FALSE', @FALSE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantString 'KEYSOURCE_PM', @cRemittance output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchNumber,  @cBatchNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchSource,  @cBatchSource output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cVendorID,  @cVendorID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cVoucherNumber,  @cVoucherNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cFuncCurrencyID,  @cFuncCurrencyID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @cRemittance,  @cRemittance output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   exec ('delete ' + @I_cCreditTemp)   exec('insert into ' + @I_cCreditTemp + '  select  T.VENDORID,  T.VCHRNMBR,  T.DOCTYPE,  T.DOCNUMBR,  (select sum(distinct  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + ' then   A.APFRMAPLYAMT  else  A.ActualApplyToAmount  end  ) from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = ' + @cVoucherNumber + '   and A.APTODCTY = ' + @I_iDocumentType + '   and A.VCHRNMBR = T.VCHRNMBR  and A.DOCTYPE = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  ),  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + ' then  T.CHEKTOTL  else  M.ORCHKTTL  end,  case when T.CURNCYID = '''' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end,  case when exists (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID = T.CURNCYID) then  (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID = T.CURNCYID)  else  0  end  from  PM10300 T left outer join MC020103 M  on M.VCHRNMBR = T.VCHRNMBR  and M.DOCTYPE = T.DOCTYPE  where  exists (select 1 from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = ' + @cVoucherNumber + '   and A.APTODCTY = ' + @I_iDocumentType + '   and A.VCHRNMBR = T.VCHRNMBR  and A.DOCTYPE = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  )  ')   exec('insert into ' + @I_cCreditTemp + '  select  T.VENDORID,  T.VCHRNMBR,  T.DOCTYPE,  T.DOCNUMBR,  (select sum(distinct  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T2.CURNCYID = ''''  or T2.CURNCYID = ' + @cFuncCurrencyID + ' then   A.APFRMAPLYAMT  else  A.ActualApplyToAmount  end  ) from PM20100 A, PM20000 T2  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = ' + @cVoucherNumber + '   and A.APTODCTY = ' + @I_iDocumentType + '   and A.VCHRNMBR = T.VCHRNMBR  and A.DOCTYPE = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  and T2.VCHRNMBR = T.VCHRNMBR  and T2.DOCTYPE = T.DOCTYPE  ),  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DOCAMNT  else  M.ORDOCAMT  end,  case when T.CURNCYID = '''' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end,  case when exists (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end)) then  (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))   else  0  end  from  PM20000 T left outer join MC020103 M  on M.VCHRNMBR = T.VCHRNMBR  and M.DOCTYPE = T.DOCTYPE  where  exists (select 1 from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = ' + @cVoucherNumber + '   and A.APTODCTY = ' + @I_iDocumentType + '   and A.VCHRNMBR = T.VCHRNMBR  and A.DOCTYPE = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  )  ')   exec('insert into ' + @I_cCreditTemp + '  select  T.VENDORID,  T.VCHRNMBR,  T.DOCTYPE,  T.DOCNUMBR,  (select sum(distinct  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T2.CURNCYID = ''''  or T2.CURNCYID = ' + @cFuncCurrencyID + ' then   A.APFRMAPLYAMT  else  A.ActualApplyToAmount  end  ) from PM20100 A, PM30200 T2  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = ' + @cVoucherNumber + '   and A.APTODCTY = ' + @I_iDocumentType + '   and A.VCHRNMBR = T.VCHRNMBR  and A.DOCTYPE = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  and T2.VCHRNMBR = T.VCHRNMBR  and T2.DOCTYPE = T.DOCTYPE  ),  case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  T.DOCAMNT  else  M.ORDOCAMT  end,  case when T.CURNCYID = '''' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end,  case when exists (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end)) then  (select CURRNIDX from DYNAMICS..MC40200 where DYNAMICS..MC40200.CURNCYID =   (case when ' + @I_tFuncBatch + '  =  ' + @TRUE + '   or T.CURNCYID = ''''  or T.CURNCYID = ' + @cFuncCurrencyID + ' then  ' + @cFuncCurrencyID + '   else  T.CURNCYID  end))  else  0  end  from  PM30200 T left outer join MC020103 M  on M.VCHRNMBR = T.VCHRNMBR  and M.DOCTYPE = T.DOCTYPE  where  exists (select 1 from PM20100 A  where  A.VENDORID = ' + @cVendorID + '   and A.APTVCHNM = ' + @cVoucherNumber + '   and A.APTODCTY = ' + @I_iDocumentType + '   and A.VCHRNMBR = T.VCHRNMBR  and A.DOCTYPE = T.DOCTYPE  and (  exists(select 1 from PM10300 P where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and P.VENDORID = ' + @cVendorID + '   and (P.PMNTNMBR = left(A.KEYSOURC, len(A.KEYSOURC) - 1)  or  P.PMNTNMBR = A.Payment_To_Print_On_Stub)  )  or  (  A.KEYSOURC = ' + @cRemittance + '  and rtrim(A.Payment_To_Print_On_Stub) = ''''  )  )  )  ')   exec('delete ' + @I_cCreditTemp + '  where APPLDAMT = 0  ')  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmPopulateEditCheckBatchCreditTemp] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taIVTransferMultiBinInsert] @I_vIVDOCNBR char(17),    @I_vITEMNMBR  char(30),   @I_vLNSEQNBR numeric(19,5) = 0,  @I_vBIN  char(15),   @I_vTOBIN char(15),   @I_vQUANTITY  numeric(19,5),   @I_vSERLTNUM char(20) = '',   @I_vSLTSQNUM int = 0,   @I_vCreateBin  tinyint = 0,   @I_vOverrideBin tinyint = 0,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @IVDOCTYP smallint,  @LNSEQNBR int,  @SEQNUMBR int,  @SLTSQNUM int,  @LineQty numeric(19,5),  @LOCNCODE char(10),  @TOLOCNCODE char(10),  @SERIALOT int,  @QtyAvailBin numeric(19,5),  @DECPLQTY smallint,  @QTYTYPE smallint,  @ITEMTYPE tinyint,  @count smallint,  @countLot smallint,  @QtyDone numeric(19,5),  @QtyLeft numeric(19,5),  @sCompanyID int,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState int,  @iStatus int,  @iError int,  @O_oErrorState int,  @iCustomState int,  @iCustomErrString varchar(255)  select  @IVDOCTYP = 3,     @LNSEQNBR = 0,  @SEQNUMBR = 0,  @SLTSQNUM = 0,  @LineQty = 0,  @LOCNCODE = '',  @TOLOCNCODE = '',  @SERIALOT = 0,  @QtyAvailBin = 0,  @DECPLQTY = 0,  @QTYTYPE = 0,  @ITEMTYPE = 0,  @count = 0,  @countLot = 0,  @QtyDone = 0,  @QtyLeft = 0,  @sCompanyID = 0,  @NOTEINDX = 0,  @iGetNextNoteIdxErrState = 0,  @iStatus = 0,  @O_oErrorState = 0,  @O_iErrorState = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taIVTransferMultiBinInsertPre  @I_vIVDOCNBR output,  @I_vITEMNMBR  output,  @I_vLNSEQNBR output,  @I_vBIN  output,  @I_vTOBIN output,  @I_vQUANTITY  output,  @I_vSERLTNUM output,  @I_vSLTSQNUM output,  @I_vCreateBin  output,  @I_vOverrideBin output,  @I_vRequesterTrx output,  @I_vUSRDEFND1  output,  @I_vUSRDEFND2  output,  @I_vUSRDEFND3  output,  @I_vUSRDEFND4  output,  @I_vUSRDEFND5  output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + rtrim(@iCustomErrString)  select @O_iErrorState = 5201    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((select ENABLEMULTIBIN from IV40100 (nolock)) <> 1) begin  select @O_iErrorState = 5202   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState) end  if ( @I_vIVDOCNBR is null or  @I_vITEMNMBR is null or  @I_vLNSEQNBR is null or  @I_vBIN is null or  @I_vTOBIN is null or  @I_vQUANTITY is null or  @I_vCreateBin is null or  @I_vOverrideBin is null or  @I_vSERLTNUM is null or  @I_vRequesterTrx is null) begin  select @O_iErrorState = 5203    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vIVDOCNBR = upper(@I_vIVDOCNBR),  @I_vITEMNMBR = upper(@I_vITEMNMBR),  @I_vBIN      = upper(@I_vBIN),  @I_vTOBIN    = upper(@I_vTOBIN),  @I_vSERLTNUM = upper(@I_vSERLTNUM)  select @SERIALOT = ITMTRKOP,  @ITEMTYPE = ITEMTYPE,  @DECPLQTY = DECPLQTY  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@I_vIVDOCNBR = '') begin  select @O_iErrorState = 5204    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists(select 1 from IV10001 (nolock) where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP) begin  select @O_iErrorState = 5205    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vITEMNMBR = '') begin  select @O_iErrorState = 5206    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if (@ITEMTYPE = 0) begin  select @O_iErrorState = 5207    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@ITEMTYPE not in (1,2)) begin  select @O_iErrorState = 5208    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @count = count(*) from IV10001 (nolock)  where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP and ITEMNMBR = @I_vITEMNMBR  if (@count = 0) begin  select @O_iErrorState = 5209    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@count > 1) and (@I_vLNSEQNBR = 0)) begin  select @O_iErrorState = 5210     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@count = 1) begin  select @LNSEQNBR = LNSEQNBR from IV10001 (nolock)  where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP and ITEMNMBR = @I_vITEMNMBR end  if ((@I_vLNSEQNBR <> 0) and (@count > 1)) begin  if (not exists(select 1 from IV10001 (nolock)  where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP and LNSEQNBR = @I_vLNSEQNBR and ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 5211     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @LNSEQNBR = @I_vLNSEQNBR  end end  if (@SERIALOT = 3) begin  select @countLot = count(*) from IV10002 (nolock)  where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP and LNSEQNBR = @LNSEQNBR   if (@countLot = 0)  begin  select @O_iErrorState = 5212    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@countLot > 1) and (@I_vSLTSQNUM = 0))  begin  select @O_iErrorState = 5213     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@countLot = 1)  begin  select @I_vSLTSQNUM = SLTSQNUM from IV10002 (nolock)  where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP and LNSEQNBR = @LNSEQNBR  end   if ((@I_vSLTSQNUM <> 0) and (@countLot > 1))  begin  if (not exists(select 1 from IV10002 (nolock)  where IVDOCNBR = @I_vIVDOCNBR and IVDOCTYP = @IVDOCTYP and LNSEQNBR = @LNSEQNBR and SLTSQNUM = @I_vSLTSQNUM))  begin  select @O_iErrorState = 5214     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  select @LOCNCODE = TRXLOCTN,  @TOLOCNCODE = TRNSTLOC,  @QTYTYPE = TRFQTYTY,  @LineQty = QTYBSUOM * TRXQTY  from IV10001 (nolock) where IVDOCTYP = @IVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and LNSEQNBR = @LNSEQNBR  if (@SERIALOT = 2) begin  select @I_vBIN = BIN from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @LOCNCODE and QTYTYPE = @QTYTYPE and SERLNMBR = @I_vSERLTNUM end  if (@I_vCreateBin not in (0,1)) begin  select @O_iErrorState = 5215    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 a (nolock) where a.INTERID = db_name()  if not exists(select 1 from IV40701 (nolock) where LOCNCODE = @LOCNCODE and BIN = @I_vBIN) begin  if (@I_vCreateBin = 0)  begin  select @O_iErrorState = 5216    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCreateBin = 1)  begin  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 5217   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert IV40701 (LOCNCODE, BIN, NOTEINDX)  select @LOCNCODE, @I_vBIN, @NOTEINDX  if (@@error <> 0)  begin  select @O_iErrorState = 5218    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if not exists(select 1 from IV00112 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @LOCNCODE and  BIN = @I_vBIN and QTYTYPE = @QTYTYPE) begin  if (@I_vCreateBin = 1)  begin  insert IV00112 (ITEMNMBR, LOCNCODE, BIN, QTYTYPE, QUANTITY, ATYALLOC)  select @I_vITEMNMBR, @LOCNCODE, @I_vBIN, @QTYTYPE,0,0  if (@@error <> 0)  begin  select @O_iErrorState = 5219     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vCreateBin = 0)  begin  select @O_iErrorState = 5220    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if not exists(select 1 from IV40701 (nolock) where LOCNCODE = @TOLOCNCODE and BIN = @I_vTOBIN) begin  if (@I_vCreateBin = 0)  begin  select @O_iErrorState = 5221    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCreateBin = 1)  begin  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 5222   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert IV40701 (LOCNCODE, BIN, NOTEINDX)  select @TOLOCNCODE, @I_vTOBIN, @NOTEINDX  if (@@error <> 0)  begin  select @O_iErrorState = 5223    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@SERIALOT in (2,3)) begin  if (@I_vSERLTNUM = '')  begin  select @O_iErrorState = 5224     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select 1 from IV10002 (nolock)  where IVDOCTYP = @IVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and LNSEQNBR = @LNSEQNBR and SERLTNUM = @I_vSERLTNUM))  begin  select @O_iErrorState = 5225     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@SERIALOT = 2)  begin  if not exists (select 1 from IV00200 (nolock)  where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @LOCNCODE and QTYTYPE = @QTYTYPE and SERLNMBR = @I_vSERLTNUM and BIN = @I_vBIN)  begin  select @O_iErrorState = 5226    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@SERIALOT = 3)  begin  if not exists (select 1 from IV00300 (nolock)  where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @LOCNCODE and QTYTYPE = @QTYTYPE and LOTNUMBR = @I_vSERLTNUM and BIN = @I_vBIN)  begin  select @O_iErrorState = 5227    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vOverrideBin not in (0,1)) begin  select @O_iErrorState = 5228    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vQUANTITY <= 0) begin  select @O_iErrorState = 5229    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @QtyAvailBin = (QUANTITY - ATYALLOC) from IV00112 (nolock)  where ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @LOCNCODE and  BIN = @I_vBIN and  QTYTYPE = @QTYTYPE  if (@SERIALOT in (1,3)) begin  if ((@I_vQUANTITY > @QtyAvailBin) and (@I_vOverrideBin = 0))  begin  select @O_iErrorState = 5230    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@SERIALOT = 2) begin  if (@QtyAvailBin < 1)  begin  select @O_iErrorState = 5231    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vQUANTITY <> 1)  begin  select @O_iErrorState = 5232    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vQUANTITY <> round(@I_vQUANTITY,@DECPLQTY - 1)) begin  select @O_iErrorState = 5233    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@SERIALOT = 1) begin  select @QtyDone = isnull(sum(QUANTITY),0) from IV10003 (nolock) where IVDOCTYP = @IVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and LNSEQNBR = @LNSEQNBR  select @QtyLeft = (@LineQty - @QtyDone) end  if (@SERIALOT in (2,3)) begin  select @QtyDone = isnull(sum(SERLTQTY),0) from IV10002 (nolock) where IVDOCTYP = @IVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and LNSEQNBR = @LNSEQNBR and FROMBIN <> ''  select @QtyLeft = (@LineQty - @QtyDone) end  if (@QtyLeft < @I_vQUANTITY) begin  select @O_iErrorState = 5234    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRequesterTrx not in (0,1)) begin  select @O_iErrorState = 5235     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@SERIALOT = 1) begin  select @SEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from IV10003 (nolock)   where IVDOCTYP = @IVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and LNSEQNBR = @LNSEQNBR   insert IV10003  (  IVDOCNBR,  IVDOCTYP,  LNSEQNBR,  SEQNUMBR,  ITEMNMBR,  LOCNCODE,  BIN,  TOBIN,  QTYTYPE,  QUANTITY,  QTYSCRAPPED  )  select  @I_vIVDOCNBR,    @IVDOCTYP,    @LNSEQNBR,    @SEQNUMBR,    @I_vITEMNMBR,    @LOCNCODE,    @I_vBIN,    @I_vTOBIN,    @QTYTYPE,    @I_vQUANTITY,    0     if (@@error <> 0)  begin  select @O_iErrorState = 5236    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@SERIALOT in (2,3)) begin  update IV10002 set FROMBIN = @I_vBIN, TOBIN = @I_vTOBIN  where IVDOCTYP = @IVDOCTYP and  IVDOCNBR = @I_vIVDOCNBR and  ITEMNMBR = @I_vITEMNMBR and  SERLTNUM = @I_vSERLTNUM and  LNSEQNBR = @LNSEQNBR and  SLTSQNUM = @I_vSLTSQNUM and  FROMBIN = '' and  TOBIN = ''  if (@@error <> 0)  begin  select @O_iErrorState = 5237    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'IV_Transaction',  @I_vINDEX1 = @I_vIVDOCNBR,  @I_vINDEX2 = @IVDOCTYP,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 5238   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@QTYTYPE = 1)  update IV00112 set ATYALLOC = ATYALLOC + @I_vQUANTITY    where  ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @LOCNCODE and  BIN = @I_vBIN and  QTYTYPE = @QTYTYPE if (@@error <> 0) begin  select @O_iErrorState = 5239   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taIVTransferMultiBinInsertPost  @I_vIVDOCNBR,  @I_vITEMNMBR,  @I_vLNSEQNBR,  @I_vBIN,  @I_vTOBIN,  @I_vQUANTITY,  @I_vSERLTNUM,  @I_vSLTSQNUM,  @I_vCreateBin,  @I_vOverrideBin,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 5240    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='IV_Transaction',  @I_vINDEX1=@I_vIVDOCNBR,  @I_vINDEX2=@IVDOCTYP,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 5241   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taIVTransferMultiBinInsert] TO [DYNGRP]
GO

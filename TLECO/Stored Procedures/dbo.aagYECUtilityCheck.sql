SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create    procedure [dbo].[aagYECUtilityCheck] @I_nYearClosed smallint, @I_nCMPID int, @I_tMCRegistered tinyint  = NULL, @I_nStarting_Journal_Entry int  = NULL output, @I_nRE_Account_Index int  = NULL output, @O_nRun_Utility_Flag int  = NULL output, @O_cDivisional_Close char(18) = NULL output, @I_nUtilityForBefore10SP2 int  as Begin  declare  @l_nStatus int,  @l_cPROFIT_AND_LOSS varchar(255),  @l_cBBF varchar(255),  @O_nSQL_Error_State int,  @l_nError int,  @l_nCntActINDX int,  @l_nHISTORYR int,  @cDBName char(5),  @l_nCntFAActIndx int,  @l_nFAActIndx int,  @l_nSGMTNUMB int,  @l_cExecCmd varchar(1000),  @tBeforeSegmentLength tinyint,  @tDivisionalSegmentLength tinyint,  @tAfterSegmentLength tinyint,  @l_SQL_Error_State int,  @iStatus int,  @TRUE int,  @POST_ACCT int,  @PROFIT_AND_LOSS int,  @cAccountNumberString char(128),  @l_nDelHdrID int,  @l_nNextYear smallint,  @l_dLSTFSCDY datetime,  @l_nTempJRNENTRY int   set @l_nCntActINDX = 0  set @O_nRun_Utility_Flag = 0  set @l_nHISTORYR = 0  set @cDBName = ''  select @cDBName = INTERID from DYNAMICS..SY01500 where CMPANYID = @I_nCMPID  exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12125, @cDBName, @l_cPROFIT_AND_LOSS output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 12030, @cDBName, @l_cBBF output, @O_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@O_nSQL_Error_State <> 0) )  return (@l_nStatus)   select TOP 1 @l_nHISTORYR = HISTORYR, @l_nNextYear = YEAR1 from SY40101   where YEAR1 > @I_nYearClosed  order by YEAR1 asc   select @l_dLSTFSCDY = LSTFSCDY from SY40101   where YEAR1 = @I_nYearClosed   if @l_nHISTORYR = 1  begin  select @l_nCntActINDX = ACTINDX from (   select count(distinct ACTINDX) as ACTINDX from GL30000  where HSTYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  end  else  begin  select @l_nCntActINDX = ACTINDX from (   select count(distinct ACTINDX) as ACTINDX from GL20000  where OPENYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  end  if @l_nCntActINDX = 1 or @l_nCntActINDX = 0  begin   if @l_nHISTORYR = 1  begin  if @l_nCntActINDX = 1   begin  select @I_nRE_Account_Index = ACTINDX from (   select distinct ACTINDX as ACTINDX from GL30000  where HSTYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  end   select @I_nStarting_Journal_Entry = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL30000  where HSTYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a   if @I_nUtilityForBefore10SP2 = 2   begin  select @l_nTempJRNENTRY = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL30000  where HSTYEAR = @l_nNextYear and   (SOURCDOC = @l_cPROFIT_AND_LOSS or SOURCDOC = @l_cBBF) and   SEQNUMBR = 0 ) a   select @l_nDelHdrID = 0  select  top 1 @l_nDelHdrID = hdr.aaGLHdrID from AAG40000 hdr inner join AAG40001 dist   on hdr.aaGLHdrID = dist.aaGLHdrID and dist.aaCopyStatus = 20  where JRNENTRY = @l_nTempJRNENTRY and YEAR1 = @l_nNextYear  if @l_nDelHdrID <> 0  begin  delete from AAG40003 where aaGLHdrID = @l_nDelHdrID  delete from AAG40002 where aaGLHdrID = @l_nDelHdrID  delete from AAG40001 where aaGLHdrID = @l_nDelHdrID  delete from AAG40000 where aaGLHdrID = @l_nDelHdrID  end  end  if exists(select top 1 1 from AAG30000 hdr inner join AAG30001 dist on hdr.aaGLHdrID = dist.aaGLHdrID and dist.aaCopyStatus <> 20  where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear)  begin  set @O_nRun_Utility_Flag = 0  return 50    end   set @O_nRun_Utility_Flag = 1  if exists(select name from tempdb..sysobjects where name = '##AAGL40000'    and type = 'U') drop table ##AAGL40000  select @l_cExecCmd = 'select 0 as TRERCLSG, 0 as DIVACTSG into ##AAGL40000'  exec (@l_cExecCmd)  return 0  end  else  begin  if @l_nCntActINDX = 1   begin  select @I_nRE_Account_Index = ACTINDX from (   select distinct ACTINDX as ACTINDX from GL20000  where OPENYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  end   select @I_nStarting_Journal_Entry = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL20000  where OPENYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  if @I_nUtilityForBefore10SP2 = 2   begin  select @l_nTempJRNENTRY = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL20000  where OPENYEAR = @l_nNextYear and   (SOURCDOC = @l_cPROFIT_AND_LOSS or SOURCDOC = @l_cBBF) and   SEQNUMBR = 0 ) a   if exists(select top 1 1 from  AAG40001 inner join AAG40000 on AAG40001.aaGLHdrID = AAG40000.aaGLHdrID where YEAR1 = @I_nYearClosed and aaCopyStatus = 20)  begin  update AAG30001 set aaCopyStatus = 20   from AAG30001 inner join AAG30000 on AAG30001.aaGLHdrID = AAG30000.aaGLHdrID   where YEAR1 = @l_nNextYear and GLPOSTDT = @l_dLSTFSCDY  end  select @l_nDelHdrID = 0  select  top 1 @l_nDelHdrID = hdr.aaGLHdrID from AAG30000 hdr inner join AAG30001 dist   on hdr.aaGLHdrID = dist.aaGLHdrID  where JRNENTRY = @l_nTempJRNENTRY and YEAR1 = @l_nNextYear  if @l_nDelHdrID <> 0  begin  delete from AAG30003 where aaGLHdrID = @l_nDelHdrID  delete from AAG30002 where aaGLHdrID = @l_nDelHdrID  delete from AAG30001 where aaGLHdrID = @l_nDelHdrID  delete from AAG30000 where aaGLHdrID = @l_nDelHdrID  end  end  if exists(select 1 from AAG30000 where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear)  begin  set @O_nRun_Utility_Flag = 0  return 50    end   set @O_nRun_Utility_Flag = 1   if exists(select name from tempdb..sysobjects where name = '##AAGL40000'    and type = 'U') drop table ##AAGL40000  select @l_cExecCmd = 'select 0 as TRERCLSG, 0 as DIVACTSG into ##AAGL40000'  exec (@l_cExecCmd)   return 0  end  end   else  begin  if exists(select name from tempdb..sysobjects where name = '##FAAccount'    and type = 'U') drop table ##FAAccount  if exists(select name from tempdb..sysobjects where name = '##FACnt'    and type = 'U') drop table ##FACnt  if @l_nHISTORYR = 1  begin  select @l_cExecCmd = 'select distinct ACTINDX into ##FAAccount from GL30000  where HSTYEAR = ' + ltrim(rtrim(@l_nNextYear)) + ' and   SOURCDOC = ''' + @l_cPROFIT_AND_LOSS + ''' and   SEQNUMBR = 0 '  exec (@l_cExecCmd)  end  else  begin  select @l_cExecCmd = 'select distinct ACTINDX into ##FAAccount from GL20000  where OPENYEAR = ' + ltrim(rtrim(@l_nNextYear)) + ' and   SOURCDOC = ''' + @l_cPROFIT_AND_LOSS + ''' and   SEQNUMBR = 0 '  exec (@l_cExecCmd)  end  select @l_nCntFAActIndx = count(*) from ##FAAccount   select @l_nFAActIndx = 0   select ACTINDX,  count(ACTINDX) cntACTINDX into ##FACnt from (   select gl.ACTINDX from GL00103 gl Inner join ##FAAccount tmp on gl.DSTINDX = tmp.ACTINDX) Der  Group by ACTINDX   select @l_nFAActIndx = a.ACTINDX from (  select top 1 ##FACnt.ACTINDX  from ##FACnt  inner join (select ACTINDX,  count(ACTINDX) cntACTINDXcnt from GL00103 group by ACTINDX) gl   on ##FACnt.ACTINDX = gl.ACTINDX and ##FACnt.cntACTINDX = gl.cntACTINDXcnt  where ##FACnt.cntACTINDX = @l_nCntActINDX) a   if @l_nFAActIndx > 0   begin  if @l_nHISTORYR = 1  begin  select @I_nStarting_Journal_Entry = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL30000  where HSTYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a   if @I_nUtilityForBefore10SP2 = 2 and @I_nStarting_Journal_Entry <> 0  begin  if exists(select top 1 1 from  AAG40001 inner join AAG40000 on AAG40001.aaGLHdrID = AAG40000.aaGLHdrID where YEAR1 = @I_nYearClosed and aaCopyStatus = 20)  begin  update AAG30001 set aaCopyStatus = 20   from AAG30001 inner join AAG30000 on AAG30001.aaGLHdrID = AAG30000.aaGLHdrID   where YEAR1 = @l_nNextYear and GLPOSTDT = @l_dLSTFSCDY  end  select @l_nDelHdrID = 0  select  top 1 @l_nDelHdrID = hdr.aaGLHdrID from AAG40000 hdr inner join AAG40001 dist   on hdr.aaGLHdrID = dist.aaGLHdrID and dist.aaCopyStatus = 20  where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear  if @l_nDelHdrID <> 0  begin  delete from AAG40003 where aaGLHdrID = @l_nDelHdrID  delete from AAG40002 where aaGLHdrID = @l_nDelHdrID  delete from AAG40001 where aaGLHdrID = @l_nDelHdrID  delete from AAG40000 where aaGLHdrID = @l_nDelHdrID  end  end   end  else  begin  select @I_nStarting_Journal_Entry = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL20000  where OPENYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  if @I_nUtilityForBefore10SP2 = 2 and @I_nStarting_Journal_Entry <> 0  begin  if exists(select top 1 1 from  AAG40001 inner join AAG40000 on AAG40001.aaGLHdrID = AAG40000.aaGLHdrID where YEAR1 = @I_nYearClosed and aaCopyStatus = 20)  begin  update AAG30001 set aaCopyStatus = 20   from AAG30001 inner join AAG30000 on AAG30001.aaGLHdrID = AAG30000.aaGLHdrID   where YEAR1 = @l_nNextYear and GLPOSTDT = @l_dLSTFSCDY  end  select @l_nDelHdrID = 0  select  top 1 @l_nDelHdrID = hdr.aaGLHdrID from AAG30000 hdr inner join AAG30001 dist   on hdr.aaGLHdrID = dist.aaGLHdrID and dist.aaCopyStatus = 20  where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear  if @l_nDelHdrID <> 0  begin  delete from AAG30003 where aaGLHdrID = @l_nDelHdrID  delete from AAG30002 where aaGLHdrID = @l_nDelHdrID  delete from AAG30001 where aaGLHdrID = @l_nDelHdrID  delete from AAG30000 where aaGLHdrID = @l_nDelHdrID  end  end  end  if exists(select 1 from AAG30000 where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear)  begin  set @O_nRun_Utility_Flag = 0  return 50    end    select @I_nRE_Account_Index = @l_nFAActIndx  set @O_nRun_Utility_Flag = 1   if exists(select name from tempdb..sysobjects where name = '##AAGL40000'    and type = 'U') drop table ##AAGL40000  select @l_cExecCmd = 'select 0 as TRERCLSG, 0 as DIVACTSG into ##AAGL40000'  exec (@l_cExecCmd)  return 0  end   if exists(select name from tempdb..sysobjects where name = '##DivSegment'    and type = 'U') drop table ##DivSegment  select SGMTNUMB, 0 as cnt into ##DivSegment from SY00300  declare DivSeg cursor fast_forward for   select SGMTNUMB from ##DivSegment  open DivSeg  fetch next from DivSeg into @l_nSGMTNUMB  set @l_cExecCmd = ''  while @@fetch_status = 0  begin  select @l_cExecCmd = 'declare @cnt int '   select @l_cExecCmd = @l_cExecCmd + ' SELECT @cnt = count(distinct ACTNUMBR_' + ltrim(rtrim(@l_nSGMTNUMB)) + ') from ##FAAccount temp Inner join GL00105 gl on temp.ACTINDX = gl.ACTINDX '  select @l_cExecCmd = @l_cExecCmd + ' update ##DivSegment set cnt = @cnt where SGMTNUMB = ' + ltrim(rtrim(@l_nSGMTNUMB))  exec (@l_cExecCmd)  fetch next from DivSeg into @l_nSGMTNUMB  end   close DivSeg  deallocate DivSeg  select @l_nSGMTNUMB = 0  select @l_nSGMTNUMB = count(cnt) from ##DivSegment where cnt > 1  if @l_nSGMTNUMB > 1  begin  return 100   end   select @l_nSGMTNUMB = SGMTNUMB from ##DivSegment where cnt > 1  if exists(select name from tempdb..sysobjects where name = '##AAGL40000'    and type = 'U') drop table ##AAGL40000  select 1 as TRERCLSG, @l_nSGMTNUMB as DIVACTSG into ##AAGL40000   set @O_cDivisional_Close = '##Divisional_Close'  exec @iStatus = DYNAMICS.dbo.smGetConstantInt 'TRUE',@TRUE output, @l_SQL_Error_State output  if @l_SQL_Error_State <> 0 return   exec @iStatus = DYNAMICS.dbo.smGetConstantInt 'POST_ACCT', @POST_ACCT output, @l_SQL_Error_State output  if @l_SQL_Error_State <> 0 return   exec @iStatus = DYNAMICS.dbo.smGetConstantInt 'PROFIT_AND_LOSS', @PROFIT_AND_LOSS output, @l_SQL_Error_State output  if @l_SQL_Error_State <> 0 return   exec @iStatus = glCalculateSegment  @l_nSGMTNUMB,  @tBeforeSegmentLength output,  @tDivisionalSegmentLength output,  @tAfterSegmentLength output,  @l_SQL_Error_State output  if @l_SQL_Error_State <> 0 return   select @tBeforeSegmentLength = @tBeforeSegmentLength + 1  set @O_nRun_Utility_Flag = 1  select @I_nRE_Account_Index =  min(ACTINDX) from ##FAAccount   if exists(select name from tempdb..sysobjects where name = '##Divisional_Close'    and type = 'U') drop table ##Divisional_Close  create table ##Divisional_Close(  SGMNTID char(67)  NOT NULL,   CURNCYID char(15)  NOT NULL,   CURRNIDX smallint  NOT NULL,   RTCLCMTD smallint  NOT NULL,   RATETPID char(15)  NOT NULL,   EXGTBLID char(15)  NOT NULL,   REARNAMT numeric(19,5)  NOT NULL,   ORIGAMT numeric(19,5)  NOT NULL,  RERINDX    int   NOT NULL)   if @l_nHISTORYR = 1  begin  select @I_nStarting_Journal_Entry = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL30000  where HSTYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a   if @I_nUtilityForBefore10SP2 = 2 and @I_nStarting_Journal_Entry <> 0  begin  if exists(select top 1 1 from  AAG40001 inner join AAG40000 on AAG40001.aaGLHdrID = AAG40000.aaGLHdrID where YEAR1 = @I_nYearClosed and aaCopyStatus = 20)  begin  update AAG30001 set aaCopyStatus = 20   from AAG30001 inner join AAG30000 on AAG30001.aaGLHdrID = AAG30000.aaGLHdrID   where YEAR1 = @l_nNextYear and GLPOSTDT = @l_dLSTFSCDY  end  select @l_nDelHdrID = 0  select  top 1 @l_nDelHdrID = hdr.aaGLHdrID from AAG40000 hdr inner join AAG40001 dist   on hdr.aaGLHdrID = dist.aaGLHdrID and dist.aaCopyStatus = 20  where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear  if @l_nDelHdrID <> 0  begin  delete from AAG40003 where aaGLHdrID = @l_nDelHdrID  delete from AAG40002 where aaGLHdrID = @l_nDelHdrID  delete from AAG40001 where aaGLHdrID = @l_nDelHdrID  delete from AAG40000 where aaGLHdrID = @l_nDelHdrID  end  end  end  else  begin  select @I_nStarting_Journal_Entry = JRNENTRY from (   select distinct(JRNENTRY) as JRNENTRY from GL20000  where OPENYEAR = @l_nNextYear and   SOURCDOC = @l_cPROFIT_AND_LOSS and   SEQNUMBR = 0 ) a  if @I_nUtilityForBefore10SP2 = 2 and @I_nStarting_Journal_Entry <> 0  begin  if exists(select top 1 1 from  AAG40001 inner join AAG40000 on AAG40001.aaGLHdrID = AAG40000.aaGLHdrID where YEAR1 = @I_nYearClosed and aaCopyStatus = 20)  begin  update AAG30001 set aaCopyStatus = 20   from AAG30001 inner join AAG30000 on AAG30001.aaGLHdrID = AAG30000.aaGLHdrID   where YEAR1 = @l_nNextYear and GLPOSTDT = @l_dLSTFSCDY  end  select @l_nDelHdrID = 0  select  top 1 @l_nDelHdrID = hdr.aaGLHdrID from AAG30000 hdr inner join AAG30001 dist   on hdr.aaGLHdrID = dist.aaGLHdrID and dist.aaCopyStatus = 20  where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear  if @l_nDelHdrID <> 0  begin  delete from AAG30003 where aaGLHdrID = @l_nDelHdrID  delete from AAG30002 where aaGLHdrID = @l_nDelHdrID  delete from AAG30001 where aaGLHdrID = @l_nDelHdrID  delete from AAG30000 where aaGLHdrID = @l_nDelHdrID  end  end  end  if exists(select 1 from AAG30000 where JRNENTRY = @I_nStarting_Journal_Entry and YEAR1 = @l_nNextYear)  begin  set @O_nRun_Utility_Flag = 0  return 50    end    if @I_tMCRegistered = @TRUE  begin  insert into  ##Divisional_Close  (SGMNTID,   CURNCYID,   CURRNIDX,   RTCLCMTD,   RATETPID,   EXGTBLID,   REARNAMT,   ORIGAMT,  RERINDX)  select  distinct substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength),  CURNCYID,  max(CURRNIDX),  0,  '',  '',  SUM(DEBITAMT)-SUM(CRDTAMNT),  SUM(ORDBTAMT)-SUM(ORCRDAMT),  0  from  GL00105,  GL30000,  GL00100  where  GL00105.ACTINDX = GL30000.ACTINDX   and GL00100.ACTINDX = GL00105.ACTINDX  and GL00100.ACCTTYPE = @POST_ACCT  and GL00100.PSTNGTYP = @PROFIT_AND_LOSS  and GL30000.HSTYEAR = @I_nYearClosed  group by substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength), CURNCYID  end  else   begin  insert into  ##Divisional_Close  (SGMNTID,   CURNCYID,   CURRNIDX,   RTCLCMTD,   RATETPID,   EXGTBLID,   REARNAMT,   ORIGAMT,  RERINDX)  select  distinct substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength),  '',  0,  0,  '',  '',  SUM(DEBITAMT)-SUM(CRDTAMNT),  0.00,  0   from  GL00105,  GL30000,  GL00100  where  GL00105.ACTINDX  = GL30000.ACTINDX  and GL00105.ACTINDX  = GL00100.ACTINDX  and GL00100.ACCTTYPE = @POST_ACCT  and GL00100.PSTNGTYP = @PROFIT_AND_LOSS  and GL30000.HSTYEAR  = @I_nYearClosed  group by substring(ACTNUMST,@tBeforeSegmentLength,@tDivisionalSegmentLength)  end   select  @cAccountNumberString = ACTNUMST  from  GL00105  where  ACTINDX = @I_nRE_Account_Index   update  ##Divisional_Close  set   RERINDX =  GL00105.ACTINDX  from  GL00105  where  ACTNUMST = stuff(@cAccountNumberString,@tBeforeSegmentLength,  @tDivisionalSegmentLength,rtrim(SGMNTID))  end End    
GO
GRANT EXECUTE ON  [dbo].[aagYECUtilityCheck] TO [DYNGRP]
GO

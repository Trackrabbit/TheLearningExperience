SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[seeRMSalesPerMonthMetric]  @I_dUserDate datetime = NULL,  @I_iPeriodMonths int   = NULL,  @I_vCustomerNumber varchar(max),  @I_vSalesPersonID varchar(max) as  declare  @iterator int,    @startDate datetime,   @endDate datetime   select  @I_dUserDate = DATEADD(HOUR, -DATEPART(HOUR, @I_dUserDate), @I_dUserDate) select  @I_dUserDate = DATEADD(MINUTE, -DATEPART(MINUTE, @I_dUserDate), @I_dUserDate) select  @I_dUserDate = DATEADD(SECOND, -DATEPART(SECOND, @I_dUserDate), @I_dUserDate) select  @I_dUserDate = DATEADD(MILLISECOND, -DATEPART(MILLISECOND, @I_dUserDate), @I_dUserDate)  select  @endDate = DATEADD(day, -DAY(@I_dUserDate), @I_dUserDate) select  @startDate = DATEADD(month, -@I_iPeriodMonths, DATEADD(day, -DAY(@I_dUserDate)+1, @I_dUserDate))  create table #SalesCountsTemp (SalesAmount int not null,  MonthDate datetime not null,  Filter varchar(15) not null)  if (@I_vCustomerNumber <> '') begin   declare @Customers table (CUSTNMBR nvarchar(500))  insert into @Customers select * from dbo.seeSplitString(@I_vCustomerNumber, ',')   select  @iterator = @I_iPeriodMonths  while (@iterator >= 1)  begin  insert #SalesCountsTemp   select   0,  DATEADD(month, -@iterator, DATEADD(day, -day(@I_dUserDate)+1, @I_dUserDate)),   CustomerList.CUSTNMBR  from @Customers CustomerList  select @iterator = @iterator - 1  end    insert #SalesCountsTemp  (SalesAmount,  MonthDate,  Filter)  select  sum (case RMDTYPAL   when 1 then SLSAMNT   when 8 then - SLSAMNT   end ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  RM20101.CUSTNMBR as Filter  from  RM20101 with (NOLOCK)  INNER JOIN @Customers a ON RM20101.CUSTNMBR = a.CUSTNMBR  where  (RMDTYPAL = 1 or RMDTYPAL = 8) and VOIDSTTS = 0  and DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE),  RM20101.CUSTNMBR  union all  select  sum (case RMDTYPAL   when 1 then SLSAMNT   when 8 then - SLSAMNT   end ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  RM30101.CUSTNMBR as Filter  from  RM30101 with (NOLOCK)  INNER JOIN @Customers a ON RM30101.CUSTNMBR = a.CUSTNMBR  where  (RMDTYPAL = 1 or RMDTYPAL = 8) and VOIDSTTS = 0  and DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE),  RM30101.CUSTNMBR  order by  MonthDate end else begin  if (@I_vSalesPersonID <> '')  begin  declare @SalesPersons table (SLPRSNID nvarchar(500))  insert into @SalesPersons select * from dbo.seeSplitString(@I_vSalesPersonID, ',')   select  @iterator = @I_iPeriodMonths  while (@iterator >= 1)  begin  insert #SalesCountsTemp   select   0,  DATEADD(month, -@iterator, DATEADD(day, -day(@I_dUserDate)+1, @I_dUserDate)),   SalesPersonList.SLPRSNID  from @SalesPersons SalesPersonList  select @iterator = @iterator - 1  end    insert #SalesCountsTemp  (SalesAmount,  MonthDate,  Filter)  select  sum (case RMDTYPAL   when 1 then SLSAMNT   when 8 then - SLSAMNT   end ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  RM20101.SLPRSNID as Filter  from  RM20101 with (NOLOCK)  INNER JOIN @SalesPersons a ON RM20101.SLPRSNID = a.SLPRSNID  where  (RMDTYPAL = 1 or RMDTYPAL = 8) and VOIDSTTS = 0  and DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE),  RM20101.SLPRSNID  union all  select  sum (case RMDTYPAL   when 1 then SLSAMNT   when 8 then - SLSAMNT   end ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  RM30101.SLPRSNID as Filter  from  RM30101 with (NOLOCK)  INNER JOIN @SalesPersons a ON RM30101.SLPRSNID = a.SLPRSNID  where  (RMDTYPAL = 1 or RMDTYPAL = 8) and VOIDSTTS = 0  and DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE),  RM30101.SLPRSNID  order by  MonthDate  end   else  begin  select  @iterator = @I_iPeriodMonths  while (@iterator >= 1)  begin  insert #SalesCountsTemp values(0, DATEADD(month, -@iterator, DATEADD(day, -day(@I_dUserDate)+1,   @I_dUserDate)), '')  select @iterator = @iterator - 1  end   insert #SalesCountsTemp  (SalesAmount,  MonthDate,  Filter)  select  sum (case RMDTYPAL   when 1 then SLSAMNT   when 8 then - SLSAMNT   end ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  '' as Filter  from  RM20101 with (NOLOCK)  where  (RMDTYPAL = 1 or RMDTYPAL = 8) and VOIDSTTS = 0  and DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE)  union all  select  sum (case RMDTYPAL   when 1 then SLSAMNT   when 8 then - SLSAMNT   end ) as SalesAmount,  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE) as MonthDate,  '' as Filter  from  RM30101 with (NOLOCK)  where  (RMDTYPAL = 1 or RMDTYPAL = 8) and VOIDSTTS = 0  and DOCDATE >= @startDate and DOCDATE <= @endDate  group by  DATEADD(DAY, -DAY(DOCDATE)+1, DOCDATE)  order by  MonthDate  end end  update #SalesCountsTemp set Filter = rtrim(ltrim(upper(Filter)))  select SUM(SalesAmount) as SalesAmount, MonthDate, Filter from  #SalesCountsTemp group by   MonthDate, Filter order by  MonthDate  drop table #SalesCountsTemp    
GO
GRANT EXECUTE ON  [dbo].[seeRMSalesPerMonthMetric] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seeRMSalesPerMonthMetric] TO [rpt_accounts receivable coordinator]
GO
GRANT EXECUTE ON  [dbo].[seeRMSalesPerMonthMetric] TO [rpt_executive]
GO

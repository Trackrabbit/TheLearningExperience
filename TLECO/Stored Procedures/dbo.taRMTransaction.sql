SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMTransaction] @I_vRMDTYPAL smallint,   @I_vDOCNUMBR char(20),   @I_vDOCDATE datetime,   @I_vBACHNUMB char(15),   @I_vCUSTNMBR char(15),   @I_vDOCAMNT numeric(19,5),   @I_vSLSAMNT  numeric(19,5),   @I_vDOCDESCR char(30) = '',   @I_vADRSCODE char(15) = '',   @I_vSLPRSNID char(15) = null,  @I_vSALSTERR char(15) = null,  @I_vSHIPMTHD char(15) = '',    @I_vTAXSCHID char(15) = null,  @I_vCSTPONBR char(20) = '',   @I_vCOSTAMNT numeric(19,5) = 0,  @I_vTRDISAMT  numeric(19,5) = 0,  @I_vTRDDISCT smallint = 0,   @I_vFRTAMNT  numeric(19,5) = 0,  @I_vMISCAMNT  numeric(19,5) = 0,  @I_vTAXAMNT  numeric(19,5) = 0,  @I_vBKTSLSAM  numeric(19,5) = 0,  @I_vBKTFRTAM numeric(19,5) = 0,  @I_vBKTMSCAM  numeric(19,5) = 0,  @I_vCASHAMNT  numeric(19,5) = 0,  @I_vCBKIDCSH  char(15) = '',   @I_vCASHDATE  datetime = '',   @I_vDCNUMCSH  char(20) = '',   @I_vCHEKAMNT  numeric(19,5) = 0,  @I_vCBKIDCHK  char(15) = '',   @I_vCBKIDCRD  char(15) = '',    @I_vCHEKNMBR  char(20) = '',    @I_vCHEKDATE  datetime = '',    @I_vDCNUMCHK  char(20) = '',    @I_vCRCRDAMT  numeric(19,5) = 0,  @I_vCRCRDNAM  char(15) = '',    @I_vRCTNCCRD  char(20) = '',    @I_vCRCARDDT datetime = '',   @I_vDCNUMCRD char(20)= '',   @I_vDISCRTND  numeric(19,5) = 0,  @I_vDISTKNAM  numeric(19,5) = 0,  @I_vWROFAMNT  numeric(19,5) = 0,  @I_vPPSAMDED numeric(19,5) = 0,  @I_vGSTDSAMT numeric(19,5) = 0,  @I_vPYMTRMID char(20) = null,   @I_vDISAVAMT numeric(19,5) = null,  @I_vDSCDLRAM numeric(19,5) = null,  @I_vDSCPCTAM numeric(19,2) = null,  @I_vLSTUSRED char(15) = '',   @I_vPTDUSRID char(15) = '',   @I_vDistRef char(30) = '',   @I_vBatchCHEKBKID char(15) = '',  @I_vDUEDATE datetime='',   @I_vDISCDATE datetime='',   @I_vCURNCYID char(15) = '',   @I_vXCHGRATE numeric(19,7)=0,  @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7)=0,  @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vCOMDLRAM  numeric(19,2)=null,  @I_vCOMAPPTO smallint = null,  @I_vRequesterTrx smallint = 0,   @I_vCREATEDIST smallint=1,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @INTERID char(5),  @FUNLCURR char(15),    @EXGTBLID char(15),    @ISMCTRX int,     @ORCTRXAM numeric(19,5),  @ORSLSAMT numeric(19,5),  @ORCSTAMT numeric(19,5),  @ORFRTAMT numeric(19,5),  @ORMISCAMT numeric(19,5),  @ORTAXAMT numeric(19,5),  @ORCASAMT numeric(19,5),  @ORCHKAMT numeric(19,5),  @ORCCDAMT numeric(19,5),  @ORAPPAMT numeric(19,5),  @ORDISTKN numeric(19,5),  @ORDAVAMT numeric(19,5),  @ORDATKN numeric(19,5),  @ORDISRTD numeric(19,5),  @ORDDLRAT numeric(19,5),  @ORTDISAM numeric(19,5),  @ORORGTRX numeric(19,5),  @ORWROFAM numeric(19,5),  @ORCOMAMT numeric(19,5),  @ORBKTSLS numeric(19,5),  @ORBKTFRT numeric(19,5),  @ORBKTMSC numeric(19,5),  @DECPLCUR smallint,    @ORDECPLCUR smallint,  @MCINSTALLED smallint,    @DOCTYPE smallint,     @iStatus int,     @iAddBatchErrState int,    @CURRNIDX smallint,    @O_oErrState int,    @iCustomState int,  @iCustomErrString varchar(255),  @iCreateBatchErrString varchar(255),   @O_oErrorState int,  @iError int,      @DOCPRFIX char (3),    @I_TXENGCLD tinyint,    @POSTED tinyint,    @iUpdDistErrState int,    @SLSCHDID char(15),    @FRTSCHID char(15),    @MSCSCHID char(15),    @dDISCDATE datetime,    @dDUEDATE datetime,    @iCalcDueDateErrState int,  @iCalcDueDateErrString varchar(255),  @NCOMAMNT numeric(19,5),   @COMDLRAM numeric(19,5),   @TaxTotal numeric(19,5),   @APLYWITH tinyint,    @CORRCTN tinyint,    @SIMPLIFD tinyint,    @CORRNXST tinyint,    @DocPrinted tinyint,    @DOCNCORR char(20),    @Electronic tinyint,    @ECTRX tinyint,     @O_iInitErrorState int,    @oInitErrString varchar(255),   @DSCLCTYP smallint,  @DSCDLRAM numeric(19,5),  @DSCPCTAM numeric(19,5),  @SALPURCH smallint,  @DISCNTCB smallint,  @FREIGHT smallint,  @MISC smallint,  @TAX smallint,  @PymtTermAmnt numeric(19,5),  @NOTEINDX numeric(19,5),  @CMPANYID smallint,  @iGetNextNoteIdxErrState int,  @round numeric(19,5),  @SEQNUMB int,  @ROUNDACCT int,  @FUNLCURRINDEX int,  @ROUNDAMT numeric(19,5),  @BACKOUTAMT numeric(19,5)  select  @INTERID = '',  @FUNLCURR = '',  @EXGTBLID = '',  @ISMCTRX = 0,  @ORCTRXAM = 0,  @ORSLSAMT = 0,  @ORCSTAMT = 0,  @ORFRTAMT = 0,  @ORMISCAMT= 0,  @ORTAXAMT = 0,  @ORCASAMT = 0,  @ORCHKAMT = 0,  @ORCCDAMT = 0,  @ORAPPAMT = 0,  @ORDISTKN = 0,  @ORDAVAMT = 0,  @ORDATKN = 0,  @ORDISRTD = 0,  @ORDDLRAT = 0,  @ORTDISAM = 0,  @ORORGTRX = 0,  @ORWROFAM = 0,  @ORCOMAMT = 0,  @ORBKTSLS = 0,  @ORBKTFRT = 0,  @ORBKTMSC = 0,  @DECPLCUR = 0,  @ORDECPLCUR = 0,  @MCINSTALLED = 1,    @O_iErrorState = 0,  @DOCPRFIX = '',  @I_TXENGCLD = 1,    @POSTED = 0 ,    @APLYWITH = 0,     @CORRCTN = 0,     @SIMPLIFD = 0,     @CORRNXST = 0,     @DocPrinted = 0,    @Electronic = 0,    @NCOMAMNT = 0,     @COMDLRAM = 0,      @ECTRX = 0,     @TaxTotal = 0,  @DOCNCORR = '',  @CURRNIDX = 0,  @SLSCHDID = '',  @FRTSCHID = '',  @MSCSCHID = '',  @DSCLCTYP = 0,  @DSCDLRAM = 0,  @DSCPCTAM = 0,  @dDISCDATE = '',  @dDUEDATE = '',  @SALPURCH = 1,  @DISCNTCB = 1,  @FREIGHT = 1,  @MISC = 1,  @TAX = 1,  @PymtTermAmnt = 0,  @round = 0,  @SEQNUMB = 0,  @ROUNDACCT = 0,  @FUNLCURRINDEX = 0,  @ROUNDAMT = 0,  @iCustomErrString = '',  @iCustomState = 0,  @O_oErrState = 0,  @iCalcDueDateErrString = '',  @iCreateBatchErrString = '',  @iUpdDistErrState = 0,  @BACKOUTAMT = 0   select @DOCTYPE =  case @I_vRMDTYPAL  when 1 then 1   when 3 then 2   when 4 then 3   when 5 then 4   when 6 then 5   when 7 then 6   when 8 then 7   else 0  end  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taRMTransactionPre  @I_vRMDTYPAL output,  @I_vDOCNUMBR output,  @I_vDOCDATE output,  @I_vBACHNUMB output,  @I_vCUSTNMBR output,  @I_vDOCAMNT output,  @I_vSLSAMNT output,  @I_vDOCDESCR output,  @I_vADRSCODE output,  @I_vSLPRSNID output,  @I_vSALSTERR output,  @I_vSHIPMTHD output,  @I_vTAXSCHID output,   @I_vCSTPONBR output,  @I_vCOSTAMNT output,  @I_vTRDISAMT output,  @I_vTRDDISCT output,  @I_vFRTAMNT output,  @I_vMISCAMNT output,  @I_vTAXAMNT output,  @I_vBKTSLSAM output,  @I_vBKTFRTAM output,  @I_vBKTMSCAM output,  @I_vCASHAMNT output,  @I_vCBKIDCSH output,  @I_vCASHDATE output,  @I_vDCNUMCSH output,  @I_vCHEKAMNT output,  @I_vCBKIDCHK output,  @I_vCBKIDCRD output,  @I_vCHEKNMBR output,  @I_vCHEKDATE output,  @I_vDCNUMCHK output,  @I_vCRCRDAMT output,  @I_vCRCRDNAM output,  @I_vRCTNCCRD output,  @I_vCRCARDDT output,  @I_vDCNUMCRD output,  @I_vDISCRTND output,  @I_vDISTKNAM output,  @I_vWROFAMNT output,  @I_vPPSAMDED output,  @I_vGSTDSAMT output,  @I_vPYMTRMID output,  @I_vDISAVAMT output,  @I_vDSCDLRAM output,  @I_vDSCPCTAM output,  @I_vLSTUSRED output,  @I_vPTDUSRID output,  @I_vDistRef output,  @I_vBatchCHEKBKID output,  @I_vDUEDATE output,  @I_vDISCDATE output,  @I_vCURNCYID output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vCOMDLRAM output,   @I_vCOMAPPTO output,  @I_vRequesterTrx output,  @I_vCREATEDIST output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 161    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  while 1=1 begin  if ( @I_vRMDTYPAL is null or  @I_vDOCNUMBR is null or  @I_vDOCDATE is null or  @I_vBACHNUMB is null or  @I_vCUSTNMBR is null or  @I_vDOCAMNT is null or  @I_vDOCDESCR is null or  @I_vADRSCODE is null or  @I_vSHIPMTHD is null or  @I_vCSTPONBR is null or  @I_vCOSTAMNT is null or  @I_vSLSAMNT is null or  @I_vTRDISAMT is null or  @I_vTRDDISCT is null or  @I_vFRTAMNT is null or  @I_vMISCAMNT is null or  @I_vTAXAMNT is null or  @I_vBKTSLSAM is null or  @I_vBKTFRTAM is null or  @I_vBKTMSCAM is null or  @I_vCASHAMNT is null or  @I_vCBKIDCSH is null or  @I_vCASHDATE is null or  @I_vDCNUMCSH is null or  @I_vCHEKAMNT is null or  @I_vCBKIDCHK is null or  @I_vCBKIDCRD is null or  @I_vCHEKNMBR is null or  @I_vCHEKDATE is null or  @I_vDCNUMCHK is null or  @I_vCRCRDAMT is null or  @I_vCRCRDNAM is null or  @I_vRCTNCCRD is null or  @I_vCRCARDDT is null or  @I_vDCNUMCRD is null or  @I_vDISCRTND is null or  @I_vDISTKNAM is null or  @I_vWROFAMNT is null or  @I_vPPSAMDED is null or  @I_vGSTDSAMT is null or  @I_vLSTUSRED is null or  @I_vPTDUSRID is null or  @I_vDUEDATE is NULL or  @I_vDISCDATE is NULL or  @I_vDistRef is null or  @I_vCURNCYID is NULL or  @I_vXCHGRATE is NULL or  @I_vRATETPID is NULL or  @I_vEXPNDATE is NULL or  @I_vEXCHDATE is NULL or  @I_vEXGTBDSC is NULL or  @I_vEXTBLSRC is NULL or  @I_vRATEEXPR is NULL or  @I_vDYSTINCR is NULL or  @I_vRATEVARC is NULL or  @I_vTRXDTDEF is NULL or  @I_vRTCLCMTD is NULL or  @I_vPRVDSLMT is NULL or  @I_vDATELMTS is NULL or  @I_vTIME1 is NULL or  @I_vRequesterTrx is NULL or  @I_vCREATEDIST is NULL)  begin  select @O_iErrorState = 185    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   select @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR),  @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vSLPRSNID = UPPER(@I_vSLPRSNID),  @I_vSALSTERR = UPPER(@I_vSALSTERR),  @I_vTAXSCHID = UPPER(@I_vTAXSCHID),   @I_vSHIPMTHD = UPPER(@I_vSHIPMTHD),  @I_vCBKIDCHK = UPPER(@I_vCBKIDCHK),  @I_vCBKIDCSH = UPPER(@I_vCBKIDCSH),  @I_vBatchCHEKBKID = UPPER(@I_vBatchCHEKBKID),  @I_vADRSCODE = UPPER(@I_vADRSCODE),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vRATETPID = UPPER(@I_vRATETPID)   if ( (not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> '')))  begin  select @MCINSTALLED = 0  end   select @INTERID = INTERID, @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 5445   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vRATETPID))  begin  select @O_iErrorState = 535     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vDOCDATE = '')  begin  select @O_iErrorState = 216    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vADRSCODE <> '')  begin  if (not exists (select 1 from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE))  begin  select @O_iErrorState = 217     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if (@I_vCUSTNMBR = '')  begin  select @O_iErrorState = 186    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vDOCNUMBR = '')  begin  select @O_iErrorState = 187    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (LEN(@I_vDOCNUMBR) > 17)  begin  select @O_iErrorState = 12003    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ( exists(select 1 from RM00401 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR) or  exists(select 1 from RM10301 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR) or  exists(select 1 from RM20101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR) or  exists(select 1 from RM30101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR))  begin  select @O_iErrorState = 190    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vDOCAMNT < 0)  begin  select @O_iErrorState = 188    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   select @TaxTotal = isnull(sum(TAXAMNT),0) from RM10601 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and BKOUTTAX = 0   if (@I_vTAXAMNT <> @TaxTotal)  begin  select @O_iErrorState = 712     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   select @BACKOUTAMT = isnull(sum(TAXAMNT),0.00) from RM10601 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and BKOUTTAX = 1    if (@I_vBACHNUMB = '')  begin  select @O_iErrorState = 189    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vBACHNUMB <> '')  begin  if (exists(select 1 from SY00500 (nolock) where BACHNUMB = @I_vBACHNUMB and MKDTOPST <> 0 and BCHSOURC = 'RM_Sales'))  begin  select @O_iErrorState = 202     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if ( @I_vBACHNUMB <> '' )   begin  if exists(select 1 from SY00500 a (nolock) where a.BACHNUMB = @I_vBACHNUMB and APPROVL = 1)  begin  select @O_iErrorState = 5625     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vRMDTYPAL not in (1,3,4,5,6,7,8))  begin  select @O_iErrorState = 627    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vXCHGRATE < 0)   begin  select @O_iErrorState = 5598     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vBatchCHEKBKID <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID))  begin  select @O_iErrorState = 363     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9522     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if (@I_vCBKIDCHK <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCBKIDCHK))  begin  select @O_iErrorState = 632     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCBKIDCHK and INACTIVE = 1))  begin  select @O_iErrorState = 9523     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if (@I_vCBKIDCSH <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCBKIDCSH))  begin  select @O_iErrorState = 620     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCBKIDCSH and INACTIVE = 1))  begin  select @O_iErrorState = 9524     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if (@I_vCRCRDNAM <> '')  begin  if (not exists(select 1 from SY03100 (nolock) where CARDNAME = @I_vCRCRDNAM and CBRCVBLE = 1))  begin  select @O_iErrorState = 608     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   end   if (@I_vSLPRSNID <> '') and (@I_vSLPRSNID is not null)  begin  if (not exists(select 1 from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID))  begin  select @O_iErrorState = 7149     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (exists(select 1 from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID and INACTIVE = 1))  begin  select @O_iErrorState = 9537     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   end   if (@I_vTAXSCHID is null) and (@I_vRMDTYPAL in (1,5,8))    begin  select @I_vTAXSCHID = TAXSCHID from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  select @I_vTAXSCHID = isnull(@I_vTAXSCHID, '')  end   if (@I_vTAXSCHID is null) and (@I_vRMDTYPAL in (2,3,4,6,7))  begin  select @I_vTAXSCHID = isnull(@I_vTAXSCHID, '')  end   if (@I_vTAXSCHID <> '')  begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vTAXSCHID))  begin  select @O_iErrorState = 7023     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   end    if (@I_vSALSTERR <> '') and (@I_vSALSTERR is not null)   begin  if (not exists(select 1 from RM00303 (nolock) where SALSTERR = @I_vSALSTERR))  begin  select @O_iErrorState = 7024     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   end   if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 3723     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vSHIPMTHD <> '')  begin  if (not exists(select 1 from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD))  begin  select @O_iErrorState = 1320     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   end   if (@I_vDISAVAMT > @I_vSLSAMNT - @I_vTRDISAMT + @I_vFRTAMNT + @I_vMISCAMNT + @I_vTAXAMNT)  begin  select @O_iErrorState = 586     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(CURNCYID,'') from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if (@I_vCURNCYID <> '')  begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end  else  begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock)  end  end  else  begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end   if ((@CURRNIDX = 0) or (@I_vCURNCYID = ''))   begin  select @O_iErrorState = 536      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ( @I_vCOMDLRAM < 0 )   begin  select @O_iErrorState = 7443      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ( @I_vCOMAPPTO < 0 or @I_vCOMAPPTO > 1 )   begin  select @O_iErrorState = 7449       exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ( @I_vSLPRSNID is null )   begin  if ( @I_vRMDTYPAL in (1,5,8))  begin  select @I_vSLPRSNID = SLPRSNID from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  end  else   begin  select @I_vSLPRSNID = ''  end  end   if (@I_vSALSTERR is null)  begin  if (@I_vRMDTYPAL in (1,5,8))  begin  select @I_vSALSTERR = SALSTERR from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  end  else  begin  select @I_vSALSTERR = ''  end  end   if ( @I_vCOMAPPTO is null )  begin  select @I_vCOMAPPTO = COMAPPTO from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID  end    if ( @I_vCOMAPPTO is null )  begin  select @I_vCOMAPPTO = 0   end   select @NCOMAMNT = isnull(sum(NCOMAMNT),0),   @COMDLRAM = isnull(sum(COMDLRAM),0)  from RM10501 (nolock) where CUSTNMBR = @I_vCUSTNMBR   and RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR    if (@I_vCOMDLRAM is null)   begin  select @I_vCOMDLRAM = isnull(sum(COMDLRAM),0) from RM10501 where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR   end   if ( @I_vCOMDLRAM <> @COMDLRAM )  begin  select @O_iErrorState = 7450       exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   select @FUNLCURR = FUNLCURR from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  select @ORDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID   if (@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR)  begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCUSTNMBR,  @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 1,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @iUpdDistErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  select @O_iErrorState = 537   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  return (@O_iErrorState)  end  if (@@error <> 0)  begin  select @O_iErrorState = 538   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   else  begin  select @ISMCTRX = 0,@I_vRATEEXPR=0,@I_vDYSTINCR=0,@I_vXCHGRATE = 1    if ( (@I_vDOCAMNT <> round(@I_vDOCAMNT, @DECPLCUR,1)) or  (@I_vSLSAMNT <> round(@I_vSLSAMNT, @DECPLCUR,1)) or  (@I_vCOSTAMNT <> round(@I_vCOSTAMNT, @DECPLCUR,1)) or  (@I_vTRDISAMT <> round(@I_vTRDISAMT, @DECPLCUR,1)) or  (@I_vFRTAMNT <> round(@I_vFRTAMNT, @DECPLCUR,1)) or  (@I_vMISCAMNT <> round(@I_vMISCAMNT, @DECPLCUR,1)) or  (@I_vTAXAMNT <> round(@I_vTAXAMNT, @DECPLCUR,1)) or  (@I_vBKTSLSAM <> round(@I_vBKTSLSAM, @DECPLCUR,1)) or  (@I_vBKTFRTAM <> round(@I_vBKTFRTAM, @DECPLCUR,1)) or  (@I_vBKTMSCAM <> round(@I_vBKTMSCAM, @DECPLCUR,1)) or  (@I_vCASHAMNT <> round(@I_vCASHAMNT, @DECPLCUR,1)) or  (@I_vCHEKAMNT <> round(@I_vCHEKAMNT, @DECPLCUR,1)) or  (@I_vCRCRDAMT <> round(@I_vCRCRDAMT, @DECPLCUR,1)) or  (@I_vDISCRTND <> round(@I_vDISCRTND, @DECPLCUR,1)) or  (@I_vDISTKNAM <> round(@I_vDISTKNAM, @DECPLCUR,1)) or  (@I_vWROFAMNT <> round(@I_vWROFAMNT, @DECPLCUR,1)) or  (@I_vPPSAMDED <> round(@I_vPPSAMDED, @DECPLCUR,1)) or  (@I_vGSTDSAMT <> round(@I_vGSTDSAMT, @DECPLCUR,1)) or  (@I_vDISAVAMT <> round(@I_vDISAVAMT, @DECPLCUR,1)) or  (@I_vDSCDLRAM <> round(@I_vDSCDLRAM, @DECPLCUR,1)))  begin  select @O_iErrorState = 7020    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vDISAVAMT is not null) and (@ISMCTRX = 1)   begin  if (@I_vDISAVAMT <> round(@I_vDISAVAMT, @ORDECPLCUR,1))   begin  select @O_iErrorState = 8147   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vRMDTYPAL in (1,3,4,5))  begin  if (@I_vPYMTRMID is NULL)  begin  select @I_vPYMTRMID = PYMTRMID from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  select @I_vPYMTRMID = isnull(@I_vPYMTRMID, '')  end   select @SALPURCH = SALPURCH,  @DISCNTCB = DISCNTCB,  @FREIGHT = FREIGHT,  @MISC = MISC,  @TAX = TAX  from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID   select @PymtTermAmnt = @PymtTermAmnt + (@I_vSLSAMNT * @SALPURCH),  @PymtTermAmnt = @PymtTermAmnt - (@I_vTRDISAMT * @DISCNTCB),  @PymtTermAmnt = @PymtTermAmnt + (@I_vFRTAMNT * @FREIGHT),  @PymtTermAmnt = @PymtTermAmnt + (@I_vMISCAMNT * @MISC),  @PymtTermAmnt = @PymtTermAmnt + (@I_vTAXAMNT * @TAX)   if ((@I_vPYMTRMID = '') and (@I_vDISAVAMT is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null))  select @I_vDISAVAMT = 0, @I_vDSCDLRAM = 0, @I_vDSCPCTAM = 0   if ((@I_vDISAVAMT is not null) and (@I_vDSCDLRAM is null))   select @I_vDSCDLRAM = 0   if ((@I_vDISAVAMT is not null) and (@I_vDSCPCTAM is null or round((@I_vDSCPCTAM / 100) * @PymtTermAmnt, @ORDECPLCUR) <> @I_vDISAVAMT))   select @I_vDSCPCTAM = 0   if ((@I_vDSCDLRAM is not null and @I_vDSCDLRAM <> 0) and (@I_vDSCPCTAM is not null and @I_vDSCPCTAM <> 0))  begin  select @O_iErrorState = 7126     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vDSCDLRAM is not null) and (@I_vDISAVAMT is null))  begin  select @I_vDISAVAMT = @I_vDSCDLRAM,  @I_vDSCPCTAM = 0  end   if ((@I_vDSCPCTAM is not null) and (@I_vDISAVAMT is null))  begin  select @I_vDISAVAMT = ((@I_vDSCPCTAM / 100) * @PymtTermAmnt),  @I_vDSCDLRAM = 0  end   if ((@I_vPYMTRMID <> '') and (@I_vDISAVAMT is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null))  begin  select @DSCLCTYP = DSCLCTYP, @DSCDLRAM = DSCDLRAM, @DSCPCTAM = DSCPCTAM from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID   if (@DSCLCTYP = 1)   begin  select @I_vDSCPCTAM = @DSCPCTAM / 100.0,  @I_vDSCDLRAM = 0   if (@ISMCTRX = 1)   begin  select @ORDAVAMT = round((@I_vDSCPCTAM / 100.0) * @PymtTermAmnt, @ORDECPLCUR)  select @ORDDLRAT = 0  select @I_vDISAVAMT =  case  when (@I_vRTCLCMTD = 0)  then round(@ORDAVAMT * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ORDAVAMT / @I_vXCHGRATE, @DECPLCUR)  else 0  end  end  else  begin  select @I_vDISAVAMT = round((@I_vDSCPCTAM / 100.0) * @PymtTermAmnt, @DECPLCUR)  select @ORDAVAMT = @I_vDISAVAMT    end  end  else  if (@DSCLCTYP = 2)     begin  select @I_vDSCPCTAM = 0   if (@ISMCTRX = 1)   begin  select @I_vDISAVAMT = @DSCDLRAM,  @I_vDSCDLRAM = @DSCDLRAM   select @ORDAVAMT =  case  when (@I_vRTCLCMTD = 0)  then round(@I_vDISAVAMT / @I_vXCHGRATE, @ORDECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@I_vDISAVAMT * @I_vXCHGRATE, @ORDECPLCUR)  else 0  end   select @ORDDLRAT = @ORDAVAMT  end  else  begin  select @I_vDSCDLRAM = @DSCDLRAM,  @I_vDISAVAMT = @DSCDLRAM   select @ORDDLRAT = 0,  @ORDAVAMT = @I_vDISAVAMT   end  end  end  else  if (@ISMCTRX = 1)    begin  select @ORDAVAMT = @I_vDISAVAMT  select @I_vDISAVAMT =   case   when (@I_vRTCLCMTD = 0)  then round(@ORDAVAMT * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ORDAVAMT / @I_vXCHGRATE, @DECPLCUR)  else 0  end    select @ORDAVAMT = round(@ORDAVAMT,@ORDECPLCUR)   if ((@I_vDSCPCTAM = 0) and (@I_vDSCDLRAM <> 0))  begin  select @ORDDLRAT = @ORDAVAMT  select @I_vDSCDLRAM = @I_vDISAVAMT  end  end  else  begin  select @I_vDISAVAMT = round(@I_vDISAVAMT,@DECPLCUR)  end  end  else  begin   select @I_vPYMTRMID = '', @I_vDISAVAMT = 0, @I_vDSCDLRAM = 0, @I_vDSCPCTAM = 0  end   if (@I_vPYMTRMID <> '')  begin  if (not exists(select 1 from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID))  begin  select @O_iErrorState = 626     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if (@I_vPYMTRMID = '')  and (@I_vDUEDATE = '') and (@I_vDISCDATE = '')  begin  select @I_vDUEDATE = @I_vDOCDATE, @I_vDISCDATE = @I_vDOCDATE  end   if ((@I_vCASHAMNT > 0) and (@I_vCBKIDCSH = ''))  begin  select @O_iErrorState = 203     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCASHAMNT > 0) and (@I_vCASHDATE = ''))  begin  select @O_iErrorState = 204     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCASHAMNT > 0) and (@I_vDCNUMCSH = ''))  begin  select @O_iErrorState = 205     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCASHAMNT > 0) and (@I_vDCNUMCSH <> ''))  begin  if (exists(select 1 from RM00401 (nolock) where RMDTYPAL = 9 and DOCNUMBR = @I_vDCNUMCSH))  begin  select @O_iErrorState = 241     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if ((@I_vCASHAMNT = 0) and (@I_vCBKIDCSH <> '' or @I_vDCNUMCSH <> '' or @I_vCASHDATE <> ''))  begin  select @O_iErrorState = 642     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCHEKAMNT > 0) and (@I_vCBKIDCHK = ''))  begin  select @O_iErrorState = 206     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCHEKAMNT > 0) and (@I_vCHEKDATE = ''))  begin  select @O_iErrorState = 808     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCHEKAMNT > 0) and (@I_vDCNUMCHK = ''))  begin  select @O_iErrorState = 644     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end    if ((@I_vCHEKAMNT > 0) and (@I_vDCNUMCHK <> ''))  begin  if (exists(select 1 from RM00401 (nolock) where RMDTYPAL = 9 and DOCNUMBR = @I_vDCNUMCHK))  begin  select @O_iErrorState = 645     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end    if ((@I_vCHEKAMNT = 0) and (@I_vCBKIDCHK <> '' or @I_vCHEKNMBR <> '' or @I_vCHEKDATE <> '' or @I_vDCNUMCHK <> ''))  begin  select @O_iErrorState = 643     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCRCRDAMT > 0) and (@I_vCRCRDNAM = ''))  begin  select @O_iErrorState = 809     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCRCRDAMT > 0) and (@I_vCRCARDDT = ''))  begin  select @O_iErrorState = 615      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCRCRDAMT > 0) and (@I_vDCNUMCRD = '') and (@I_vRMDTYPAL <> 8))  begin  select @O_iErrorState = 616      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vCRCRDAMT > 0) and (@I_vDCNUMCRD <> ''))  begin  if (exists(select 1 from RM00401 (nolock) where RMDTYPAL = 9 and DOCNUMBR = @I_vDCNUMCRD))  begin  select @O_iErrorState = 646     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end  end   if (@I_vPPSAMDED > @I_vDOCAMNT)   begin  select @O_iErrorState = 617      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vPPSAMDED > @I_vWROFAMNT)   begin  select @O_iErrorState = 618     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vGSTDSAMT > @I_vDISTKNAM)   begin  select @O_iErrorState = 619     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vDOCAMNT <> @I_vSLSAMNT - @I_vTRDISAMT + @I_vFRTAMNT + @I_vMISCAMNT + @I_vTAXAMNT)   begin  select @O_iErrorState = 621      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vRMDTYPAL = 7 or @I_vRMDTYPAL = 6) and (@I_vCASHAMNT <> 0))  begin  select @O_iErrorState = 622     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vRMDTYPAL = 7 or @I_vRMDTYPAL = 6) and (@I_vCHEKAMNT <> 0))  begin  select @O_iErrorState = 623     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vRMDTYPAL = 7 or @I_vRMDTYPAL = 6) and (@I_vCRCRDAMT <> 0))  begin  select @O_iErrorState = 624     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vRMDTYPAL = 6 and @I_vDISTKNAM <> 0)  begin  select @O_iErrorState = 472     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vRMDTYPAL = 6 and @I_vPYMTRMID <> '')  begin  select @O_iErrorState = 473     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vRMDTYPAL = 7) and (@I_vPYMTRMID <> ''))  begin  select @O_iErrorState = 625     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if ((@I_vRMDTYPAL = 8) and (@I_vPYMTRMID <> ''))  begin  select @O_iErrorState = 474     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vRMDTYPAL not in (7,8) and (@I_vDISCRTND <> 0))  begin  select @O_iErrorState = 585     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vRMDTYPAL in (7,8) and (@I_vDISTKNAM <> 0))  begin  select @O_iErrorState = 475     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vDSCDLRAM > 0 and @I_vDSCPCTAM > 0)  begin  select @O_iErrorState = 476     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  end   if (@I_vRMDTYPAL in (6,7,8))   begin  select @I_vDUEDATE = @I_vDOCDATE  select @I_vDISCDATE = @I_vDOCDATE  end  else  begin  exec @iStatus = taCalcDueDateRM  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vPYMTRMID = @I_vPYMTRMID,  @I_vDOCDATE = @I_vDOCDATE,  @O_dDISCDATE = @dDISCDATE output,  @O_dDUEDATE = @dDUEDATE output,  @O_iErrorState = @iCalcDueDateErrState output,  @oErrString = @iCalcDueDateErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCalcDueDateErrState <> 0 or @dDISCDATE = NULL or @dDUEDATE = NULL)  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCalcDueDateErrString))  select @O_iErrorState = 482   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vDUEDATE = '')  select @I_vDUEDATE = @dDUEDATE  if (@I_vDISCDATE = '')  select @I_vDISCDATE = @dDISCDATE  end   if (@O_iErrorState <> 0)  begin  break  end   select @ORCTRXAM =  case @I_vRMDTYPAL  when 6 then 0  when 7 then (@I_vDOCAMNT - @I_vDISCRTND)  else (@I_vDOCAMNT - @I_vCASHAMNT - @I_vCHEKAMNT - @I_vCRCRDAMT - @I_vDISTKNAM)  end,  @ORSLSAMT = @I_vSLSAMNT,  @ORCSTAMT = @I_vCOSTAMNT,  @ORFRTAMT = @I_vFRTAMNT,  @ORMISCAMT = @I_vMISCAMNT,  @ORTAXAMT = @I_vTAXAMNT,  @ORCASAMT = @I_vCASHAMNT,  @ORCHKAMT = @I_vCHEKAMNT,  @ORCCDAMT = @I_vCRCRDAMT,  @ORDISTKN = @I_vDISTKNAM,  @ORDISRTD = @I_vDISCRTND,  @ORTDISAM = @I_vTRDISAMT,  @ORORGTRX = @I_vDOCAMNT,  @ORWROFAM = @I_vWROFAMNT,  @ORCOMAMT = @I_vCOMDLRAM,  @ORBKTSLS = @I_vBKTSLSAM,  @ORBKTFRT = @I_vBKTFRTAM,  @ORBKTMSC = @I_vBKTMSCAM   if (@ISMCTRX = 1)  begin  if ( (@I_vDOCAMNT <> round(@I_vDOCAMNT, @ORDECPLCUR,1)) or  (@I_vSLSAMNT <> round(@I_vSLSAMNT, @ORDECPLCUR,1)) or  (@I_vCOSTAMNT <> round(@I_vCOSTAMNT, @ORDECPLCUR,1)) or  (@I_vTRDISAMT <> round(@I_vTRDISAMT, @ORDECPLCUR,1)) or  (@I_vFRTAMNT <> round(@I_vFRTAMNT, @ORDECPLCUR,1)) or  (@I_vMISCAMNT <> round(@I_vMISCAMNT, @ORDECPLCUR,1)) or  (@I_vTAXAMNT <> round(@I_vTAXAMNT, @ORDECPLCUR,1)) or  (@I_vBKTSLSAM <> round(@I_vBKTSLSAM, @ORDECPLCUR,1)) or  (@I_vBKTFRTAM <> round(@I_vBKTFRTAM, @ORDECPLCUR,1)) or  (@I_vBKTMSCAM <> round(@I_vBKTMSCAM, @ORDECPLCUR,1)) or  (@I_vCASHAMNT <> round(@I_vCASHAMNT, @ORDECPLCUR,1)) or  (@I_vCHEKAMNT <> round(@I_vCHEKAMNT, @ORDECPLCUR,1)) or  (@I_vCRCRDAMT <> round(@I_vCRCRDAMT, @ORDECPLCUR,1)) or  (@I_vDISCRTND <> round(@I_vDISCRTND, @ORDECPLCUR,1)) or  (@I_vDISTKNAM <> round(@I_vDISTKNAM, @ORDECPLCUR,1)) or  (@I_vWROFAMNT <> round(@I_vWROFAMNT, @ORDECPLCUR,1)) or  (@I_vPPSAMDED <> round(@I_vPPSAMDED, @ORDECPLCUR,1)) or  (@I_vGSTDSAMT <> round(@I_vGSTDSAMT, @ORDECPLCUR,1)) or  (@I_vDSCDLRAM <> round(@I_vDSCDLRAM, @ORDECPLCUR,1)))  begin  select @O_iErrorState = 4643   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ( (@I_vCASHDATE <> '' and @I_vCASHDATE <> @I_vDOCDATE) or  (@I_vCRCARDDT <> '' and @I_vCRCARDDT <> @I_vDOCDATE) or  (@I_vCHEKDATE <> '' and @I_vCHEKDATE <> @I_vDOCDATE))  begin  select @O_iErrorState = 1322    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert MC020102  (  DCSTATUS,  RMDTYPAL,  DOCNUMBR,  DOCDATE,  CUSTNMBR,  CURNCYID,  TRXSORCE,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  ORCTRXAM,  ORSLSAMT,  ORCSTAMT,  ORFRTAMT,  ORMISCAMT,  ORTAXAMT,  ORCASAMT,  ORCHKAMT,  ORCCDAMT,  ORAPPAMT,  ORDISTKN,  ORDAVAMT,  ORDATKN,  ORDISRTD,  ORDDLRAT,  ORTDISAM,  ORORGTRX,  ORWROFAM,  ORCOMAMT,  ORBKTSLS,  ORBKTFRT,  ORBKTMSC,  UNGANLOS,  RMMCERRS,  DENXRATE,  MCTRXSTT,  OrigBackoutTradeDisc  )  select  1,    @I_vRMDTYPAL,   @I_vDOCNUMBR,   @I_vDOCDATE,   @I_vCUSTNMBR,   @I_vCURNCYID,   '',    @CURRNIDX,   @I_vRATETPID,   @EXGTBLID,   @I_vXCHGRATE,   @I_vEXCHDATE,   @I_vTIME1,   @I_vRTCLCMTD,   @ORCTRXAM,   @ORSLSAMT,   @ORCSTAMT,   @ORFRTAMT,   @ORMISCAMT,   @ORTAXAMT,   @ORCASAMT,   @ORCHKAMT,   @ORCCDAMT,   0,    @ORDISTKN,   @ORDAVAMT,   @ORDATKN,   @ORDISRTD,   @ORDDLRAT,   @ORTDISAM,   @ORORGTRX,   @ORWROFAM,   @ORCOMAMT,   @ORBKTSLS,   @ORBKTFRT,   @ORBKTMSC,   0,    0,    0,    0,    0    if (@@error <> 0)  begin  select @O_iErrorState = 539    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 551     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  if @I_vRTCLCMTD = 0    begin  select   @I_vSLSAMNT = round(@I_vSLSAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vCOSTAMNT = round(@I_vCOSTAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vTRDISAMT = round(@I_vTRDISAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vFRTAMNT = round(@I_vFRTAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vMISCAMNT = round(@I_vMISCAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vTAXAMNT = round(@I_vTAXAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vBKTSLSAM = round(@I_vBKTSLSAM * @I_vXCHGRATE, @DECPLCUR),  @I_vBKTFRTAM = round(@I_vBKTFRTAM * @I_vXCHGRATE, @DECPLCUR),  @I_vBKTMSCAM = round(@I_vBKTMSCAM * @I_vXCHGRATE, @DECPLCUR),  @I_vCASHAMNT = round(@I_vCASHAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vCHEKAMNT = round(@I_vCHEKAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vCRCRDAMT = round(@I_vCRCRDAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vDISCRTND = round(@I_vDISCRTND * @I_vXCHGRATE, @DECPLCUR),  @I_vDISTKNAM = round(@I_vDISTKNAM * @I_vXCHGRATE, @DECPLCUR),  @I_vWROFAMNT = round(@I_vWROFAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vPPSAMDED = round(@I_vPPSAMDED * @I_vXCHGRATE, @DECPLCUR),  @I_vGSTDSAMT = round(@I_vGSTDSAMT * @I_vXCHGRATE, @DECPLCUR)  end  else if @I_vRTCLCMTD = 1   begin  select  @I_vSLSAMNT = round(@I_vSLSAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vCOSTAMNT = round(@I_vCOSTAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vTRDISAMT = round(@I_vTRDISAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vFRTAMNT = round(@I_vFRTAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vMISCAMNT = round(@I_vMISCAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vTAXAMNT = round(@I_vTAXAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vBKTSLSAM = round(@I_vBKTSLSAM / @I_vXCHGRATE, @DECPLCUR),  @I_vBKTFRTAM = round(@I_vBKTFRTAM / @I_vXCHGRATE, @DECPLCUR),  @I_vBKTMSCAM = round(@I_vBKTMSCAM / @I_vXCHGRATE, @DECPLCUR),  @I_vCASHAMNT = round(@I_vCASHAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vCHEKAMNT = round(@I_vCHEKAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vCRCRDAMT = round(@I_vCRCRDAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vDISCRTND = round(@I_vDISCRTND / @I_vXCHGRATE, @DECPLCUR),  @I_vDISTKNAM = round(@I_vDISTKNAM / @I_vXCHGRATE, @DECPLCUR),  @I_vWROFAMNT = round(@I_vWROFAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vPPSAMDED = round(@I_vPPSAMDED / @I_vXCHGRATE, @DECPLCUR),  @I_vGSTDSAMT = round(@I_vGSTDSAMT / @I_vXCHGRATE, @DECPLCUR)  end   if ((@ISMCTRX = 1) and (@I_vRTCLCMTD = 0))     begin  update RM10601 set  TAXAMNT = round(TAXAMNT * @I_vXCHGRATE, @DECPLCUR), ORTAXAMT = TAXAMNT,  STAXAMNT = round(STAXAMNT * @I_vXCHGRATE, @DECPLCUR), ORSLSTAX = STAXAMNT,  FRTTXAMT = round(FRTTXAMT * @I_vXCHGRATE, @DECPLCUR), ORFRTTAX = FRTTXAMT,  MSCTXAMT = round(MSCTXAMT * @I_vXCHGRATE, @DECPLCUR), ORMSCTAX = MSCTXAMT,  TAXDTSLS = round(TAXDTSLS * @I_vXCHGRATE, @DECPLCUR), ORTOTSLS = TAXDTSLS,  TDTTXSLS = round(TDTTXSLS * @I_vXCHGRATE, @DECPLCUR), ORTXSLS = TDTTXSLS,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 540    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   update RM10101 set  DEBITAMT = round(DEBITAMT * @I_vXCHGRATE, @DECPLCUR), ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT * @I_vXCHGRATE, @DECPLCUR), ORCRDAMT = CRDTAMNT,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  and DISTTYPE <> 25   if (@@error <> 0)  begin  select @O_iErrorState = 1505    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end    update RM10501 set  NCOMAMNT = round(NCOMAMNT * @I_vXCHGRATE, @DECPLCUR),   SLSAMNT = round(SLSAMNT * @I_vXCHGRATE, @DECPLCUR),   COMDLRAM = round(COMDLRAM * @I_vXCHGRATE, @DECPLCUR),   CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 7451    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   end  else  if ((@ISMCTRX = 1) and (@I_vRTCLCMTD = 1))   begin  update RM10601 set  TAXAMNT = round(TAXAMNT / @I_vXCHGRATE, @DECPLCUR), ORTAXAMT = TAXAMNT,  STAXAMNT = round(STAXAMNT / @I_vXCHGRATE, @DECPLCUR), ORSLSTAX = STAXAMNT,  FRTTXAMT = round(FRTTXAMT / @I_vXCHGRATE, @DECPLCUR), ORFRTTAX = FRTTXAMT,  MSCTXAMT = round(MSCTXAMT / @I_vXCHGRATE, @DECPLCUR), ORMSCTAX = MSCTXAMT,  TAXDTSLS = round(TAXDTSLS / @I_vXCHGRATE, @DECPLCUR), ORTOTSLS = TAXDTSLS,  TDTTXSLS = round(TDTTXSLS / @I_vXCHGRATE, @DECPLCUR), ORTXSLS = TDTTXSLS,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 541    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   update RM10101 set  DEBITAMT = round(DEBITAMT / @I_vXCHGRATE, @DECPLCUR), ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT / @I_vXCHGRATE, @DECPLCUR), ORCRDAMT = CRDTAMNT,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  and DISTTYPE <> 25   if (@@error <> 0)  begin  select @O_iErrorState = 1389    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   update RM10501 set  NCOMAMNT = round(NCOMAMNT / @I_vXCHGRATE, @DECPLCUR),   SLSAMNT = round(SLSAMNT / @I_vXCHGRATE, @DECPLCUR),   COMDLRAM = round(COMDLRAM / @I_vXCHGRATE, @DECPLCUR),   CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 7452    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   end   select @I_vTAXAMNT = isnull(sum(TAXAMNT),0) from RM10601 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  select @I_vDOCAMNT = @I_vSLSAMNT - @I_vTRDISAMT + @I_vFRTAMNT + @I_vMISCAMNT + @I_vTAXAMNT + @ROUNDAMT  end  else  begin   if (not exists(select 1 from RM00101 (nolock) where CUSTNMBR=@I_vCUSTNMBR and (CURNCYID = @I_vCURNCYID or CURNCYID = '')))  begin  update RM10101 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 4016    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   update RM10601 set  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 4017    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   update RM10501 set  CURRNIDX = @CURRNIDX  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 7453    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end  end   insert RM00401  (  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,   TRXSORCE,  CUSTNMBR,  DOCDATE,  NEGQTYSOPINV  )  select  @I_vDOCNUMBR,    @I_vRMDTYPAL,    1,       'RM_Sales',     '',       @I_vCUSTNMBR,    @I_vDOCDATE,    0       if (@@error <> 0)  begin  select @O_iErrorState = 609     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   if (@I_vDCNUMCSH <> '')  begin  insert RM00401  (  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  DOCDATE,  NEGQTYSOPINV  )  select  @I_vDCNUMCSH,   9,      0,      'RM_Sales',    '',      @I_vCUSTNMBR,   @I_vCASHDATE,   0      if (@@error <> 0)  begin  select @O_iErrorState = 641     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   if (@I_vDCNUMCHK <> '')  begin  insert RM00401  (  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  CHEKNMBR,  DOCDATE,  NEGQTYSOPINV  )  select  @I_vDCNUMCHK,   9,      0,      'RM_Sales',    '',      @I_vCUSTNMBR,   @I_vCHEKNMBR,   @I_vCHEKDATE,   0      if (@@error <> 0)  begin  select @O_iErrorState = 647     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   if (@I_vDCNUMCRD <> '')  begin  insert RM00401  (  DOCNUMBR,  RMDTYPAL,  DCSTATUS,   BCHSOURC,  TRXSORCE,  CUSTNMBR,  DOCDATE,  NEGQTYSOPINV  )  select  @I_vDCNUMCRD,   9,      0,      'RM_Sales',    '',      @I_vCUSTNMBR,   @I_vCRCARDDT,   0      if (@@error <> 0)  begin  select @O_iErrorState = 648     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   if (@ORBKTSLS > 0)  begin  select @BACKOUTAMT = @I_vSLSAMNT - @ORBKTSLS  end   exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX,  @I_vCURNCYID = @I_vCURNCYID,  @I_vPTDUSRID = @I_vPTDUSRID,   @I_vTRADEAMT = @I_vTRDISAMT,  @I_vFREIGHTAMT = @I_vFRTAMNT,  @I_vMISCAMNT = @I_vMISCAMNT,  @I_vCASHAMT = @I_vCASHAMNT,  @I_vCashCHEKBKID= @I_vCBKIDCSH,  @I_vCHECKAMT = @I_vCHEKAMNT,  @I_vCheckCHEKBKID = @I_vCBKIDCHK,  @I_vCRCRDAMT = @I_vCRCRDAMT,  @I_vTDISTKAMT = @I_vDISTKNAM,  @I_vDISAVAMT = @I_vDISAVAMT,  @I_vCRCRDNAM = @I_vCRCRDNAM,  @I_vDISCRTND = @I_vDISCRTND,  @I_vDOCAMNT = @I_vDOCAMNT,  @I_vSLSAMNT = @I_vSLSAMNT,  @I_vCOSTAMNT = @I_vCOSTAMNT,  @I_vCOMDLRAM = @I_vCOMDLRAM,  @I_vRATETPID = @I_vRATETPID,  @I_vXCHGRATE = @I_vXCHGRATE,  @I_vEXCHDATE = @I_vEXCHDATE,  @I_vEXPNDATE = @I_vEXPNDATE,  @I_vEXGTBLID = @EXGTBLID,  @I_vTIME1 = @I_vTIME1,  @I_vFNDECPLCUR = @DECPLCUR,  @I_vORCTRXAM = @ORCTRXAM,  @I_vORSLSAMT = @ORSLSAMT,  @I_vORCSTAMT = @ORCSTAMT,  @I_vORFRTAMT = @ORFRTAMT,  @I_vORMISCAMT = @ORMISCAMT,  @I_vORTAXAMT = @ORTAXAMT,  @I_vORCASAMT = @ORCASAMT,  @I_vORCHKAMT = @ORCHKAMT,  @I_vORCCDAMT = @ORCCDAMT,  @I_vORAPPAMT = @ORAPPAMT,  @I_vORDISTKN = @ORDISTKN,  @I_vORDAVAMT = @ORDAVAMT,  @I_vORDATKN = @ORDATKN,  @I_vORDISRTD = @ORDISRTD,  @I_vORDDLRAT = @ORDDLRAT,  @I_vORTDISAM = @ORTDISAM,  @I_vORORGTRX = @ORORGTRX,  @I_vORWROFAM = @ORWROFAM,  @I_vORCOMAMT = @ORCOMAMT,  @I_vORBKTSLS = @BACKOUTAMT,  @I_vORBKTFRT = @ORBKTFRT,  @I_vORBKTMSC = @ORBKTMSC,  @I_vApply = 0,  @I_vTRXSORCE = '',  @I_vWROFAMNT = 0,  @I_vDistRef = '',  @I_vPOSTEDDT = '',  @I_vCMPANYID = @CMPANYID,  @I_vINTERID  = @INTERID,  @I_vRTCLCMTD = @I_vRTCLCMTD,  @I_vDECPLCUR = @ORDECPLCUR,  @I_vCREATEDIST = @I_vCREATEDIST,  @O_iErrorState = @iUpdDistErrState output,  @oErrString = @oErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  if (@iUpdDistErrState <> 0)  begin  exec @iStatus = taUpdateString  @iUpdDistErrState,   @oErrString,  @oErrString output,  @O_oErrState output  end  select @O_iErrorState = 628   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  if (@iError <> 0)  begin  select @O_iErrorState = 611   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   if (@ISMCTRX = 1)  begin  select @ROUNDAMT = DEBITAMT from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL and DISTTYPE = 26   if (@ROUNDAMT = 0)  begin  select @ROUNDAMT = CRDTAMNT * -1 from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL and DISTTYPE = 26  end   select @I_vDOCAMNT = @I_vSLSAMNT - @I_vTRDISAMT + @I_vFRTAMNT + @I_vMISCAMNT + @I_vTAXAMNT + @ROUNDAMT  end   if (@I_vRequesterTrx=0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Receivables_Transaction',  @I_vINDEX1 = @I_vRMDTYPAL,  @I_vINDEX2 = @I_vDOCNUMBR,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1298   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @SLSCHDID = SLSCHDID, @FRTSCHID = FRTSCHID, @MSCSCHID = MSCSCHID  from RM40101 (nolock) where SETUPKEY = 1   insert RM10301  (  DOCTYPE,  RMDTYPAL,  RMDNUMWK,  DOCNUMBR,  DOCPRFIX,  DOCDESCR,  DOCDATE,  BACHNUMB,  BCHSOURC,  NOTEINDX,  CUSTNMBR,  CUSTNAME,  ADRSCODE,  SLPRSNID,  SALSTERR,  COMAPPTO,  COMDLRAM,  NCOMAMNT,  SHIPMTHD,  CSTPONBR,  TAXSCHID,  SLSCHDID,  FRTSCHID,  MSCSCHID,  COSTAMNT,  SLSAMNT,  TRDISAMT,  TRDDISCT,  FRTAMNT,  MISCAMNT,  TAXAMNT,  BKTSLSAM,  BKTFRTAM,  BKTMSCAM,  TXENGCLD,  DOCAMNT,  APPLDAMT,  CASHAMNT,  CBKIDCSH,  CASHDATE,  DCNUMCSH,  CHEKAMNT,  CBKIDCHK,  CBKIDCRD,  CHEKNMBR,  CHEKDATE,  DCNUMCHK,  CRCRDAMT,  CRCRDNAM,  RCTNCCRD,  CRCARDDT,  DCNUMCRD,  DISCRTND,  DISTKNAM,  DISAVTKN,  WROFAMNT,  PPSAMDED,  GSTDSAMT,  ACCTAMNT,  PYMTRMID,  DISAVAMT,  DISCDATE,  DUEDATE,  DSCDLRAM,  DSCPCTAM,  CURNCYID,  POSTED,  LSTEDTDT,  LSTUSRED,  RMTREMSG,  RMDPEMSG,  GLPOSTDT,  POSTEDDT,  PTDUSRID,  Tax_Date,  APLYWITH,  SALEDATE,  CORRCTN,  SIMPLIFD,  CORRNXST,  DOCNCORR,  RMTREMSG2,  DocPrinted,  DISGRPER,  DUEGRPER,  Electronic,  ECTRX,  PSTGSTUS,  BackoutTradeDisc,  DIRECTDEBIT,  EFTFLAG  )  select  @DOCTYPE,     @I_vRMDTYPAL,     @I_vDOCNUMBR,     @I_vDOCNUMBR,     @DOCPRFIX,     @I_vDOCDESCR,     @I_vDOCDATE,     @I_vBACHNUMB,     'RM_Sales',     @NOTEINDX,     @I_vCUSTNMBR,     CUSTNAME,     case      when (@I_vADRSCODE = '')  then ADRSCODE  else @I_vADRSCODE  end,  @I_vSLPRSNID,  @I_vSALSTERR,  @I_vCOMAPPTO,     @I_vCOMDLRAM,     @NCOMAMNT,     case      when (@I_vSHIPMTHD = '') and (@I_vRMDTYPAL in (1,5,8))    then SHIPMTHD  else @I_vSHIPMTHD  end,  @I_vCSTPONBR,     case      when (@I_vTAXSCHID = '') and ( @I_vRMDTYPAL in (1,5,8))    then TAXSCHID  else @I_vTAXSCHID  end,  @SLSCHDID,     @FRTSCHID,     @MSCSCHID,     @I_vCOSTAMNT,     @I_vSLSAMNT,     @I_vTRDISAMT,     @I_vTRDDISCT,     @I_vFRTAMNT,     @I_vMISCAMNT,     @I_vTAXAMNT,     case      when @I_vBKTSLSAM = 0 and @BACKOUTAMT > 0  then @I_vSLSAMNT - @BACKOUTAMT  else @I_vBKTSLSAM  end,   @I_vBKTFRTAM,     @I_vBKTMSCAM,     @I_TXENGCLD,     @I_vDOCAMNT,     0,      @I_vCASHAMNT,     @I_vCBKIDCSH,     @I_vCASHDATE,      @I_vDCNUMCSH,     @I_vCHEKAMNT,     case      when (@I_vRMDTYPAL in (1,3,4,5,8))  then @I_vCBKIDCHK  else ''  end,  @I_vCBKIDCRD,     @I_vCHEKNMBR,     @I_vCHEKDATE,      @I_vDCNUMCHK,     @I_vCRCRDAMT,     @I_vCRCRDNAM,     case      when ((@I_vRCTNCCRD = '') and (@I_vCRCRDNAM <> ''))   then CRCRDNUM  else @I_vRCTNCCRD  end,  @I_vCRCARDDT,      @I_vDCNUMCRD,     @I_vDISCRTND,     @I_vDISTKNAM,     0,      @I_vWROFAMNT,     @I_vPPSAMDED,     @I_vGSTDSAMT,     case      when (@I_vRMDTYPAL = 6)  then 0  when @I_vRMDTYPAL = 7   then (@I_vDOCAMNT - @I_vDISCRTND)  when @I_vRMDTYPAL = 8 and (@I_vCASHAMNT = 0) and (@I_vCHEKAMNT = 0) and (@I_vCRCRDAMT = 0)  then (@I_vDOCAMNT - @I_vDISCRTND)  else (@I_vDOCAMNT - @I_vCASHAMNT - @I_vCHEKAMNT - @I_vCRCRDAMT - @I_vDISTKNAM)  end,  @I_vPYMTRMID,     @I_vDISAVAMT,     @I_vDISCDATE,     @I_vDUEDATE,     @I_vDSCDLRAM,     @I_vDSCPCTAM * 100,    case       when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  @POSTED,     convert(varchar(12),getdate()),   @I_vLSTUSRED,     0,      0,      @I_vDOCDATE,     '',      @I_vPTDUSRID,     @I_vDOCDATE,     @APLYWITH,     '',      @CORRCTN,     @SIMPLIFD,     @CORRNXST,     @DOCNCORR,     0,      @DocPrinted,     DISGRPER,     DUEGRPER,     @Electronic,     @ECTRX,      20,      0,      0,      0      from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 201    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   if (@I_vRMDTYPAL in (1,3,4,5))  begin  update RM00103 set  UNPSTDCA = UNPSTDCA + @I_vCASHAMNT + @I_vCHEKAMNT + @I_vCRCRDAMT,  UNPSTDSA = UNPSTDSA + @I_vSLSAMNT - @I_vTRDISAMT + @I_vFRTAMNT + @I_vMISCAMNT + @I_vTAXAMNT  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 610    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   if (@I_vRMDTYPAL = 7)  begin  update RM00103 set UNPSTDCA = UNPSTDCA + @I_vDOCAMNT     where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 469    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   if (@I_vRMDTYPAL = 8)  begin  update RM00103 set  UNPSTDCA = UNPSTDCA -@I_vCASHAMNT - @I_vCHEKAMNT - @I_vCRCRDAMT,  UNPSTDSA = UNPSTDSA -@I_vSLSAMNT + @I_vTRDISAMT - @I_vFRTAMNT - @I_vMISCAMNT - @I_vTAXAMNT  where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 468    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end   exec @iStatus = taCreateUpdateBatchHeaderRcd  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vSERIES = 3,  @I_vGLPOSTDT = @I_vDOCDATE,  @I_vBCHSOURC = 'RM_Sales',   @I_vDOCAMT = @I_vDOCAMNT,  @I_vORIGIN = 1,  @I_vNUMOFTRX = 1,    @I_vCHEKBKID = @I_vBatchCHEKBKID,  @I_vUSERID = @I_vLSTUSRED,   @O_iErrorState = @iAddBatchErrState output,  @oErrString = @iCreateBatchErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ((@iAddBatchErrState <> 0) or (@iStatus <> 0))  begin  if (@iAddBatchErrState = 12012)   begin  exec @iStatus = taUpdateString  @iAddBatchErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @oErrString = rtrim(isnull(@oErrString, '')) + ' ' + @iCreateBatchErrString  select @O_iErrorState = 633   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end   if (@ISMCTRX = 0) or ( (not exists(select distinct 1 from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select distinct 1 from CM00100 (nolock) where CURNCYID <> '')))  begin  update RM10101 set  ORCRDAMT = 0,   ORDBTAMT = 0  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 5469    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  if exists(select 1 from sysobjects (nolock) where name  = 'AAG20001')  begin  update AAG20001 set  ORDBTAMT = 0,  ORCRDAMT = 0  where aaSubLedgerHdrID = (select aaSubLedgerHdrID from AAG20000 (nolock) where DOCNUMBR = @I_vDOCNUMBR and DOCTYPE = @I_vRMDTYPAL)  if (@@error <> 0)  begin  select @O_iErrorState = 8697    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrState output  break  end  end  end  break end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taRMTransactionPost  @I_vRMDTYPAL,  @I_vDOCNUMBR,  @I_vDOCDATE,  @I_vBACHNUMB,  @I_vCUSTNMBR,  @I_vDOCAMNT,  @I_vSLSAMNT,  @I_vDOCDESCR,  @I_vADRSCODE,  @I_vSLPRSNID,  @I_vSALSTERR,  @I_vSHIPMTHD,  @I_vTAXSCHID,  @I_vCSTPONBR,  @I_vCOSTAMNT,  @I_vTRDISAMT,  @I_vTRDDISCT,  @I_vFRTAMNT,  @I_vMISCAMNT,  @I_vTAXAMNT,  @I_vBKTSLSAM,  @I_vBKTFRTAM,  @I_vBKTMSCAM,  @I_vCASHAMNT,  @I_vCBKIDCSH,  @I_vCASHDATE,  @I_vDCNUMCSH,  @I_vCHEKAMNT,  @I_vCBKIDCHK,  @I_vCBKIDCRD,  @I_vCHEKNMBR,  @I_vCHEKDATE,  @I_vDCNUMCHK,  @I_vCRCRDAMT,  @I_vCRCRDNAM,  @I_vRCTNCCRD,  @I_vCRCARDDT,  @I_vDCNUMCRD,  @I_vDISCRTND,  @I_vDISTKNAM,  @I_vWROFAMNT,  @I_vPPSAMDED,  @I_vGSTDSAMT,  @I_vPYMTRMID,  @I_vDISAVAMT,  @I_vDSCDLRAM,  @I_vDSCPCTAM,  @I_vLSTUSRED,  @I_vPTDUSRID,  @I_vDistRef,  @I_vBatchCHEKBKID,  @I_vDUEDATE,  @I_vDISCDATE,  @I_vCURNCYID,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vCOMDLRAM,  @I_vCOMAPPTO,  @I_vRequesterTrx,  @I_vCREATEDIST,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 162    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Receivables_Transaction',  @I_vINDEX1 = @I_vRMDTYPAL,  @I_vINDEX2 = @I_vDOCNUMBR,  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1299   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMTransaction] TO [DYNGRP]
GO

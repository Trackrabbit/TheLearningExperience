SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taSopDistributionInsert]  @I_vSOPTYPE smallint,   @I_vSOPNUMBE char(21),    @I_vACTINDX int, @I_vDEBITAMT numeric(19,5), @I_vCRDTAMNT numeric(19,5), @I_vORDEBITAMT numeric(19,5), @I_vORCRDTAMNT numeric(19,5), @I_vDISTTYPE smallint, @I_vCURRNIDX smallint, @I_vTRXSORCE char(13), @I_vDistRef char(30), @O_iErrorState int = NULL output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @DECPLCUR tinyint,  @DOCDATE datetime,  @SEQNUMBR int,  @iStatus int,  @iError int,  @O_oErrorState int  select   @DECPLCUR = 2,  @DOCDATE = '',  @SEQNUMBR = 0,  @iStatus = 0,  @iError = 0,  @O_iErrorState = 0  if (  @I_vSOPTYPE is NULL or  @I_vSOPNUMBE is NULL or  @I_vACTINDX is NULL or  @I_vDEBITAMT is NULL or  @I_vORCRDTAMNT is NULL or  @I_vORDEBITAMT is NULL or  @I_vCRDTAMNT is NULL or  @I_vDISTTYPE is NULL or  @I_vCURRNIDX is NULL or  @I_vTRXSORCE is NULL) begin  select @O_iErrorState = 1101    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end if (  @I_vSOPTYPE = 0 or  @I_vSOPNUMBE = '' or  @I_vDISTTYPE = 0) begin  select @O_iErrorState = 1102     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE)  select @SEQNUMBR = isnull(max(SEQNUMBR),0)+16384 from SOP10102 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  insert SOP10102  (  SOPTYPE,  SOPNUMBE,  SEQNUMBR,  DISTTYPE,  DistRef,  ACTINDX,  DEBITAMT,  ORDBTAMT,  CRDTAMNT,  ORCRDAMT,  CURRNIDX,  TRXSORCE  )  select  @I_vSOPTYPE,    @I_vSOPNUMBE,    @SEQNUMBR,    @I_vDISTTYPE,    @I_vDistRef,    @I_vACTINDX,    @I_vDEBITAMT,    @I_vORDEBITAMT,    @I_vCRDTAMNT,    @I_vORCRDTAMNT,    @I_vCURRNIDX,    @I_vTRXSORCE   if @@error <> 0 begin  select @O_iErrorState = 1103    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists (select 1 from DTA00300 (nolock) where ACTINDX = @I_vACTINDX) begin  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURRNIDX = @I_vCURRNIDX  select @DOCDATE = DOCDATE from SOP10100 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE  exec @iStatus = taMdaInsert  @I_vDOCNUMBR = @I_vSOPNUMBE,  @I_vRMDTYPAL = @I_vSOPTYPE,  @I_vDTASERIES = 11,  @I_vACTINDX = @I_vACTINDX,  @I_vSEQNUMBR = @SEQNUMBR,  @I_vDEBITAMT = @I_vDEBITAMT,  @I_vCRDTAMNT = @I_vCRDTAMNT,  @I_vTRXDATE = @DOCDATE,  @I_vDECPLCUR = @DECPLCUR,  @I_vUpdated = 0,  @O_iErrorState  = @O_iErrorState output,  @oErrString  = @oErrString output  if @O_iErrorState <> 0 or @@error <> 0 or @iStatus <> 0  begin  select @O_iErrorState = 1200    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taSopDistributionInsert] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taUpdateCreateItemCurrencyRcd] @I_vITEMNMBR char(30),    @I_vCURNCYID char(15),    @I_vDECPLCUR smallint=0,   @I_vLISTPRCE numeric(19,5)=0,   @I_vUpdateIfExists tinyint=1,   @I_vRequesterTrx smallint=0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @CURRNIDX smallint,     @CMPANYID smallint,  @iAddCodeErrState int,     @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int  select  @CURRNIDX = 0,      @CMPANYID = 0,  @oErrString = isnull(@oErrString, ''),  @O_iErrorState = 0,  @iStatus = 0  exec @iStatus = taUpdateCreateItemCurrencyRcdPre  @I_vITEMNMBR output,  @I_vCURNCYID output,  @I_vDECPLCUR output,  @I_vLISTPRCE output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2906    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (  @I_vITEMNMBR is NULL or  @I_vCURNCYID is NULL or  @I_vDECPLCUR is NULL or  @I_vLISTPRCE is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL  ) begin  select @O_iErrorState = 2907    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  if ( @I_vITEMNMBR = '' ) begin  select @O_iErrorState = 2908    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vITEMNMBR <> '' ) begin  if (not exists (select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR ))  begin  select @O_iErrorState = 2909    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vCURNCYID = '' ) begin  select @O_iErrorState = 2910    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vCURNCYID <> '' ) begin  if (not exists (select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID ))  begin  select @O_iErrorState = 2911    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vCURNCYID <> '' ) begin  if (not exists (select 1 from DYNAMICS..MC60100 (nolock) where CURNCYID = @I_vCURNCYID and CMPANYID = @CMPANYID ))  begin  select @O_iErrorState = 2912    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vDECPLCUR <> 0 )  begin  select @I_vDECPLCUR = @I_vDECPLCUR + 1  end  if ( @I_vDECPLCUR = 0 )  begin  select  @I_vDECPLCUR = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end   select @CURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if ( @I_vDECPLCUR < 1 or @I_vDECPLCUR > 6 ) begin  select @O_iErrorState = 2913     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if not exists( select 1 from IV00105 a (nolock) where a.ITEMNMBR = @I_vITEMNMBR and CURNCYID = @I_vCURNCYID )  begin  insert into IV00105 ( ITEMNMBR,  CURNCYID,  CURRNIDX,  DECPLCUR,  LISTPRCE  )  select    @I_vITEMNMBR,   @I_vCURNCYID,   @CURRNIDX,   @I_vDECPLCUR,   @I_vLISTPRCE   if @@error <> 0  begin  select @O_iErrorState = 2914    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if (@I_vUpdateIfExists = 1)  begin  update IV00105 set  LISTPRCE = @I_vLISTPRCE  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and CURNCYID = @I_vCURNCYID  if (@@error <> 0)  begin  select @O_iErrorState = 2915    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taUpdateCreateItemCurrencyRcdPost  @I_vITEMNMBR ,  @I_vCURNCYID ,  @I_vDECPLCUR ,  @I_vLISTPRCE ,  @I_vUpdateIfExists ,  @I_vRequesterTrx ,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error  if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3986    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taUpdateCreateItemCurrencyRcd] TO [DYNGRP]
GO

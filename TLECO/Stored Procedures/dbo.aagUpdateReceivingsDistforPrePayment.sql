SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagUpdateReceivingsDistforPrePayment]  @aaSubLedgerHdrID INT,  @CompanyID SMALLINT,  @SqlSessionID INT AS  BEGIN   DECLARE @POPRCTNM CHAR(17),  @ACTINDX INT,  @aaSubLedgerDistID INT,  @aaSubLedgerAssignID INT,  @PONUMBER VARCHAR(100),   @PMNTNMBR VARCHAR(100),  @NOTEINDX NUMERIC(19,5),  @APPLDAMT NUMERIC(19,5),  @ORAPPAMT NUMERIC(19,5),  @CRDTAMNT NUMERIC(19,5),   @ORCRDAMT NUMERIC(19,5),  @OLDaaSubLedgerHdrID INT,  @OLDaaSubLedgerDistID INT,  @OLDaaSubLedgerAssignID INT,  @OLDaaAssignedPercent INT,  @AssignPercent INT,  @TotalORCRDTAMT   NUMERIC(19,5),  @TotalCRDTAMT    NUMERIC(19,5),  @TotalPrec INT,  @aaBrowseTypeNew SMALLINT,  @ClassID INT,  @IsUpdated TINYINT,  @oRequiredFieldEmpty TINYINT  SELECT @IsUpdated =0 , @POPRCTNM = DOCNUMBR FROM AAG20000 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID   DECLARE Cursor1 CURSOR LOCAL FAST_FORWARD FOR   SELECT aaSubLedgerDistID, ACTINDX, CRDTAMNT, ORCRDAMT FROM AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID and DISTTYPE = 7 and (CRDTAMNT <> 0 OR ORCRDAMT <> 0)  OPEN Cursor1  FETCH NEXT FROM Cursor1 INTO @aaSubLedgerDistID, @ACTINDX, @CRDTAMNT, @ORCRDAMT  WHILE @@FETCH_STATUS = 0  BEGIN  EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID OUTPUT,   @aaBrowseTypeNew OUTPUT    DELETE FROM AAG20002 where aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID = @aaSubLedgerDistID AND EXISTS (SELECT PONUMBER, PMNTNMBR, APPLDAMT, ORAPPAMT FROM POP10800 WHERE POPRCTNM = @POPRCTNM AND PrepaymentAccountIndex = @ACTINDX)  DELETE FROM AAG20003 where aaSubLedgerHdrID = @aaSubLedgerHdrID and aaSubLedgerDistID = @aaSubLedgerDistID AND EXISTS (SELECT PONUMBER, PMNTNMBR, APPLDAMT, ORAPPAMT FROM POP10800 WHERE POPRCTNM = @POPRCTNM AND PrepaymentAccountIndex = @ACTINDX)   DECLARE Cursor2 CURSOR LOCAL FAST_FORWARD FOR   SELECT PONUMBER, PMNTNMBR, APPLDAMT, ORAPPAMT FROM POP10800 WHERE POPRCTNM = @POPRCTNM AND PrepaymentAccountIndex = @ACTINDX  OPEN Cursor2  FETCH NEXT FROM Cursor2 INTO @PONUMBER, @PMNTNMBR, @APPLDAMT, @ORAPPAMT  WHILE @@FETCH_STATUS = 0  BEGIN  SET @IsUpdated = 1   SELECT @OLDaaSubLedgerHdrID = aaSubLedgerHdrID, @OLDaaSubLedgerDistID = aaSubLedgerDistID FROM AAG20001   WHERE aaSubLedgerHdrID = (SELECT aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 4 and DOCTYPE = 1 AND DOCNUMBR = @PMNTNMBR) AND   DISTTYPE = 2 AND ACTINDX = @ACTINDX   DECLARE Assign CURSOR LOCAL FOR   SELECT aaSubLedgerAssignID,aaAssignedPercent FROM AAG20002   WHERE AAG20002.aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND AAG20002.aaSubLedgerDistID = @OLDaaSubLedgerDistID  OPEN Assign  FETCH NEXT FROM Assign INTO @OLDaaSubLedgerAssignID,@OLDaaAssignedPercent  WHILE @@FETCH_STATUS = 0   BEGIN   SELECT @aaSubLedgerAssignID = ISNULL(MAX(A22.aaSubLedgerAssignID),0) + 1 FROM AAG20002 A22  WHERE A22.aaSubLedgerHdrID = @aaSubLedgerHdrID AND A22.aaSubLedgerDistID = @aaSubLedgerDistID   INSERT INTO AAG20002  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT,  ORCRDAMT, aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, 0, ROUND((@APPLDAMT* @OLDaaAssignedPercent)/10000,2), 0,  ROUND((@ORAPPAMT* @OLDaaAssignedPercent)/10000,2),0, DistRef, NOTEINDX, aaAssignErrors, aaAliasID   FROM AAG20002   WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID=@OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID    INSERT INTO AAG20003 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [aaTrxDimID], [aaTrxCodeID], [aaCodeErrors])  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, [aaTrxDimID], [aaTrxCodeID], [aaCodeErrors]  FROM AAG20003  WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID=@OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID    FETCH NEXT FROM Assign INTO @OLDaaSubLedgerAssignID,@OLDaaAssignedPercent  END  CLOSE Assign  DEALLOCATE Assign   FETCH NEXT FROM Cursor2 INTO @PONUMBER, @PMNTNMBR, @APPLDAMT, @ORAPPAMT  END  CLOSE Cursor2  DEALLOCATE Cursor2   IF @IsUpdated = 1  BEGIN  UPDATE AAG20002 SET aaAssignedPercent = ROUND(((ORCRDAMT)* 10000)/(@ORCRDAMT),2)  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   SET @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID)  IF @AssignPercent <> 0 AND @AssignPercent > 9900   UPDATE AAG20002 SET aaAssignedPercent = aaAssignedPercent + (10000 - @AssignPercent),  CRDTAMNT= CRDTAMNT+(SELECT a1.CRDTAMNT - SUM(a2.CRDTAMNT) FROM AAG20002 a2 Inner JOIN AAG20001 a1 ON a2.aaSubLedgerHdrID = a1.aaSubLedgerHdrID AND a2.aaSubLedgerDistID = a1.aaSubLedgerDistID AND a2.aaSubLedgerHdrID = @aaSubLedgerHdrID AND a2.aaSubLedgerDistID=@aaSubLedgerDistID GROUP BY a1.CRDTAMNT),  ORCRDAMT = ORCRDAMT+(SELECT a1.ORCRDAMT - SUM(a2.ORCRDAMT) FROM AAG20002 a2 Inner JOIN AAG20001 a1 ON a2.aaSubLedgerHdrID = a1.aaSubLedgerHdrID AND a2.aaSubLedgerDistID = a1.aaSubLedgerDistID AND a2.aaSubLedgerHdrID = @aaSubLedgerHdrID AND a2.aaSubLedgerDistID=@aaSubLedgerDistID GROUP BY a1.ORCRDAMT)  FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND   aaSubLedgerDistID = @aaSubLedgerDistID AND aaSubLedgerAssignID = @aaSubLedgerAssignID    ELSE IF (@AssignPercent > 0 AND @AssignPercent < 9900) or @AssignPercent is null  BEGIN  SELECT @aaSubLedgerAssignID = ISNULL(MAX(A22.aaSubLedgerAssignID),0) + 1 FROM AAG20002 A22  WHERE A22.aaSubLedgerHdrID = @aaSubLedgerHdrID AND A22.aaSubLedgerDistID = @aaSubLedgerDistID   SELECT @TotalORCRDTAMT = ISNULL(SUM(ORCRDAMT),0), @TotalCRDTAMT = ISNULL(SUM(CRDTAMNT),0), @TotalPrec = ISNULL(SUM(aaAssignedPercent),0) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID=@aaSubLedgerDistID   EXEC DYNAMICS.dbo.smGetNextNoteIndex @CompanyID, @SqlSessionID, @NOTEINDX output  INSERT INTO AAG20002 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [DEBITAMT], [CRDTAMNT],   [ORDBTAMT], [ORCRDAMT], [aaAssignedPercent], [DistRef], [NOTEINDX], [aaAssignErrors])  VALUES(@aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, 0, @CRDTAMNT- @TotalCRDTAMT,   0, @ORCRDAMT- @TotalORCRDTAMT, 10000 - @TotalPrec, '', @NOTEINDX, 0)   IF @aaBrowseTypeNew <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG20003  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID  AND aaSubLedgerAssignID = @aaSubLedgerAssignID)  BEGIN   EXEC aagSubWorkCodeUpdate   @aaSubLedgerHdrID,   @aaSubLedgerDistID,   @aaSubLedgerAssignID,   @ClassID,   @oRequiredFieldEmpty OUTPUT   END  END  END   FETCH NEXT FROM Cursor1 INTO @aaSubLedgerDistID, @ACTINDX, @CRDTAMNT, @ORCRDAMT  END  CLOSE Cursor1  DEALLOCATE Cursor1 END   
GO
GRANT EXECUTE ON  [dbo].[aagUpdateReceivingsDistforPrePayment] TO [DYNGRP]
GO

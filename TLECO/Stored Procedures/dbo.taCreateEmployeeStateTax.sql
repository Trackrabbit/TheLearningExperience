SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateEmployeeStateTax] @I_vEMPLOYID char(15),    @I_vSTATECD char(2),    @I_vTXFLGSTS char(6)='',   @I_vEXMFBLND tinyint=0,    @I_vEXFBLSPS tinyint=0,    @I_vEXFORO65 tinyint=0,    @I_vEXMFRSLF tinyint=0,    @I_vEXMFSPAL tinyint=0,    @I_vEXMFRSPS tinyint=0,    @I_vEXFSPO65 tinyint=0,    @I_vPRSNEXPT smallint=0,   @I_vDEPNDNTS smallint=0,   @I_vADNLALOW smallint=0,   @I_vESTDEDAL smallint=0,   @I_vEXMTAMNT numeric(19,5)=0,   @I_vADSTWHDG numeric(19,5)=0,   @I_vESTSTWHD numeric(19,5)=0,   @I_vINACTIVE tinyint=0,    @I_vUpdateIfExists tinyint=1,   @I_vRequesterTrx smallint=0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @iCustomState int,  @iStatus int,  @O_oErrorState int,  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iError int,      @DBName char(50),     @iAddCodeErrState int  select  @O_iErrorState = 0,     @O_oErrorState = 0,  @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateEmployeeStateTaxPre  @I_vEMPLOYID output,  @I_vSTATECD output,  @I_vTXFLGSTS output,  @I_vEXMFBLND output,  @I_vEXFBLSPS output,  @I_vEXFORO65 output,  @I_vEXMFRSLF output,  @I_vEXMFSPAL output,  @I_vEXMFRSPS output,  @I_vEXFSPO65 output,  @I_vPRSNEXPT output,  @I_vDEPNDNTS output,  @I_vADNLALOW output,  @I_vESTDEDAL output,  @I_vEXMTAMNT output,  @I_vADSTWHDG output,  @I_vESTSTWHD output,  @I_vINACTIVE output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString  output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 4097    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vEMPLOYID is NULL or  @I_vSTATECD is NULL or  @I_vTXFLGSTS is NULL or  @I_vEXMFBLND is NULL or  @I_vEXFBLSPS is NULL or  @I_vEXFORO65 is NULL or  @I_vEXMFRSLF is NULL or  @I_vEXMFSPAL is NULL or  @I_vEXMFRSPS is NULL or  @I_vEXFSPO65 is NULL or  @I_vPRSNEXPT is NULL or  @I_vDEPNDNTS is NULL or  @I_vADNLALOW is NULL or  @I_vESTDEDAL is NULL or  @I_vEXMTAMNT is NULL or  @I_vADSTWHDG is NULL or  @I_vESTSTWHD is NULL or  @I_vINACTIVE is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 4098    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vEMPLOYID =UPPER(@I_vEMPLOYID),  @I_vSTATECD = UPPER(@I_vSTATECD),  @I_vTXFLGSTS = UPPER(@I_vTXFLGSTS)  if ( @I_vEMPLOYID = '' ) begin  select @O_iErrorState = 4099    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID <> '' ) begin  if (not exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID ))  begin  select @O_iErrorState = 4100    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vEMPLOYID <> '') and (@I_vINACTIVE = 0) begin  if (exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID and INACTIVE = 1))  begin  select @I_vINACTIVE = 1  end  end   if ( @I_vSTATECD = '' ) begin  select @O_iErrorState = 4101    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD <> '' )  begin  if (not exists (select 1 from UPR41100 (nolock) where STATECD = @I_vSTATECD ))  begin  select @O_iErrorState = 4102    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEXMFBLND < 0 or @I_vEXMFBLND > 1 ) begin  select @O_iErrorState = 4103     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXFBLSPS < 0 or @I_vEXFBLSPS > 1 ) begin  select @O_iErrorState = 4104     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXFORO65 < 0 or @I_vEXFORO65 > 1 ) begin  select @O_iErrorState = 4105     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXMFRSLF < 0 or @I_vEXMFRSLF > 1 ) begin  select @O_iErrorState = 4106     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXMFSPAL < 0 or @I_vEXMFSPAL > 1 ) begin  select @O_iErrorState = 4107     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXMFRSPS < 0 or @I_vEXMFRSPS > 1 ) begin  select @O_iErrorState = 4371     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXFSPO65 < 0 or @I_vEXFSPO65 > 1 ) begin  select @O_iErrorState = 4372     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vPRSNEXPT < 0 ) begin  select @O_iErrorState = 4373     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vDEPNDNTS < 0 ) begin  select @O_iErrorState = 4374     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vADNLALOW < 0 ) begin  select @O_iErrorState = 4375     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vESTDEDAL < 0 ) begin  select @O_iErrorState = 4376     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEXMTAMNT < 0 ) begin  select @O_iErrorState = 4377     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vESTSTWHD < 0 ) begin  select @O_iErrorState = 4378     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vINACTIVE < 0 or @I_vINACTIVE > 1 ) begin  select @O_iErrorState = 4379     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vTXFLGSTS = '' ) and ( @I_vSTATECD in ('AK','AR','FL','IL','IN','KY','MI','NH','NV','OH','PA','SD','TN','TX','VA','WA','WY')) begin  select @I_vTXFLGSTS = 'NA' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'AL' ) begin  select @I_vTXFLGSTS = 'HOF' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'AZ' ) begin  select @I_vTXFLGSTS = 'FS01' end  if ( @I_vTXFLGSTS = '' ) and ( @I_vSTATECD = 'CA' or @I_vSTATECD = 'MO' or @I_vSTATECD = 'MS' or @I_vSTATECD = 'GA' or @I_vSTATECD = 'MA' or @I_vSTATECD = 'NC' ) begin  select @I_vTXFLGSTS = 'HOH' end  if ( @I_vTXFLGSTS = '' ) and ( @I_vSTATECD in ('CO','ID','KS','MN','MT','ND','NE','NM','NY','RI','UT','VT','WI','HI','ME')) begin  select @I_vTXFLGSTS = 'MAR' end  if ( @I_vTXFLGSTS = '' ) and ( @I_vSTATECD = 'CT' or @I_vSTATECD = 'NJ' ) begin  select @I_vTXFLGSTS = 'A' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'DC' ) begin  select @I_vTXFLGSTS = 'MFS' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'DE' ) begin  select @I_vTXFLGSTS = 'MFJ' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'IA' ) begin  select @I_vTXFLGSTS = 'EXP1' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'LA' ) begin  select @I_vTXFLGSTS = 'EXEMPT' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'MD' ) begin  select @I_vTXFLGSTS = 'AAMAR' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'OK' ) begin  select @I_vTXFLGSTS = 'MAR2' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'OR' ) begin  select @I_vTXFLGSTS = 'MS3' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'PR' ) begin  select @I_vTXFLGSTS = 'MFS' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'SC' ) begin  select @I_vTXFLGSTS = 'ONE' end  if ( @I_vTXFLGSTS = '' and @I_vSTATECD = 'WV' ) begin  select @I_vTXFLGSTS = 'PM' end  if not exists (select 1 from DYNAMICS..UPR41301 where (TAXCODE = @I_vSTATECD and TXFLGSTS = @I_vTXFLGSTS )) begin  select @O_iErrorState = 4380     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'IL' and @I_vEXMFRSLF <> 0 ) begin  select @O_iErrorState = 4401     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'IL' and @I_vEXMFSPAL <> 0 ) begin  select @O_iErrorState = 4402     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'IL' and @I_vEXMFRSPS <> 0 ) begin  select @O_iErrorState = 4403     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXMFBLND <> 0 ) begin  select @O_iErrorState = 4404     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXFBLSPS <> 0 ) begin  select @O_iErrorState = 4405     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXFORO65 <> 0 ) begin  select @O_iErrorState = 4406     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXMFRSLF <> 0 ) begin  select @O_iErrorState = 4407     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXMFSPAL <> 0 ) begin  select @O_iErrorState = 4409     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXMFRSPS <> 0 ) begin  select @O_iErrorState = 4410     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'LA' and @I_vEXFSPO65 <> 0 ) begin  select @O_iErrorState = 4411     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'MS' and @I_vEXMFSPAL <> 0 ) begin  select @O_iErrorState = 4412     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD = 'MS' and @I_vEXMFRSPS <> 0 ) begin  select @O_iErrorState = 4413     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 3688     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 3689     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4414   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists(select 1 from UPR00700 where EMPLOYID = @I_vEMPLOYID and STATECD = @I_vSTATECD ) begin  insert UPR00700(  EMPLOYID,  STATECD,  TXFLGSTS,  EXMFBLND,  EXFBLSPS,  EXFORO65,  EXMFRSLF,  EXMFSPAL,  EXMFRSPS,  EXFSPO65,  PRSNEXPT,  DEPNDNTS,  ADNLALOW,  ESTDEDAL,  EXMTAMNT,  ADSTWHDG,  ESTSTWHD,  INACTIVE,  NOTEINDX  )  select  @I_vEMPLOYID,    @I_vSTATECD,    @I_vTXFLGSTS,    @I_vEXMFBLND,    @I_vEXFBLSPS,    @I_vEXFORO65,    @I_vEXMFRSLF,    @I_vEXMFSPAL,    @I_vEXMFRSPS,    @I_vEXFSPO65,    @I_vPRSNEXPT,    @I_vDEPNDNTS,    @I_vADNLALOW,    @I_vESTDEDAL,    @I_vEXMTAMNT,    @I_vADSTWHDG,    @I_vESTSTWHD,    @I_vINACTIVE,    @nNextNoteIndex    if (@@error <> 0)  begin  select @O_iErrorState = 4415     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end else if ( @I_vUpdateIfExists = 1 ) begin  update UPR00700 set  TXFLGSTS = @I_vTXFLGSTS,  EXMFBLND = @I_vEXMFBLND,  EXFBLSPS = @I_vEXFBLSPS,  EXFORO65 = @I_vEXFORO65,  EXMFRSLF = @I_vEXMFRSLF,  EXMFSPAL = @I_vEXMFSPAL,  EXMFRSPS = @I_vEXMFRSPS,  EXFSPO65 = @I_vEXFSPO65,  PRSNEXPT = @I_vPRSNEXPT,  DEPNDNTS = @I_vDEPNDNTS,  ADNLALOW = @I_vADNLALOW,  ESTDEDAL = @I_vESTDEDAL,  EXMTAMNT = @I_vEXMTAMNT,  ADSTWHDG = @I_vADSTWHDG,  ESTSTWHD = @I_vESTSTWHD,  INACTIVE = @I_vINACTIVE  where EMPLOYID = @I_vEMPLOYID and STATECD = @I_vSTATECD  if (@@error <> 0)  begin  select @O_iErrorState = 4416     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  exec @iStatus = taCreateEmployeeStateTaxPost  @I_vEMPLOYID,  @I_vSTATECD,  @I_vTXFLGSTS,  @I_vEXMFBLND,  @I_vEXFBLSPS,  @I_vEXFORO65,  @I_vEXMFRSLF,  @I_vEXMFSPAL,  @I_vEXMFRSPS,  @I_vEXFSPO65,  @I_vPRSNEXPT,  @I_vDEPNDNTS,  @I_vADNLALOW,  @I_vESTDEDAL,  @I_vEXMTAMNT,  @I_vADSTWHDG,  @I_vESTSTWHD,  @I_vINACTIVE,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString  output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 4417    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateEmployeeStateTax] TO [DYNGRP]
GO

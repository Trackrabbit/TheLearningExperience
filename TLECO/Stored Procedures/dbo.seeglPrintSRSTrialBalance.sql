SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[seeglPrintSRSTrialBalance]   @I_tInactiveAccounts tinyint   = NULL,   @I_tIncludeUnitAccounts tinyint   = NULL,   @I_tIncludeZeroBalance tinyint   = NULL,   @I_cStartingAccountNumber varchar(128) = NULL,   @I_cEndingAccountNumber varchar(128) = NULL,   @I_dStartingDate datetime    = NULL,   @I_dEndingDate datetime     = NULL,   @I_iYear int       = NULL,   @I_tHistoryYear tinyint     = NULL,   @I_iRangeByAccount int     = NULL,  @I_iPostingAccounts int     = NULL as   declare @numsegs int, @natseg tinyint, @cnt tinyint, @acctseg char(40), @acctsegd varchar(400), @acctsegl varchar(400), @acctsegt varchar(4000), @guid uniqueidentifier, @temptable varchar(50), @useReportingLedgers binary(4), @cGeneral_Entry    char(55), @O_SQL_Error_State int, @FINANCIAL int, @iStartingPeriod int, @iEndingPeriod int, @I_tKeepingSummary tinyint, @I_dStartingPeriodDate datetime, @length    tinyint   if exists(select 1 from GL10110 where YEAR1 = @I_iYear UNION select 1 from GL10111 where YEAR1 = @I_iYear)  begin  set @I_tKeepingSummary =  (select KPGACHST from GL40000)  end   else  begin  set @I_tKeepingSummary = 0  end  select @numsegs = (select MXNUMSEG from DYNAMICS..SY003001)  select @cnt = 1 select @acctseg = '' select @acctsegd = '' select @guid = NEWID() select @useReportingLedgers = power(2,24)  select @temptable = @guid set @temptable = '##' + substring(@temptable,1,8)  while @cnt <= @numsegs   Begin   select @length=SGMNTLTH from   DYNAMICS..SY00302 where SGMTNUMB = @cnt  select @acctseg = ' [ACTNUMBR_' + ltrim(STR(@cnt)) + '] [char] ('+ ltrim(STR(@length)) +') NOT NULL, ' + char(13)   set @acctsegl = rtrim(@acctseg)   select @cnt = @cnt + 1   set @acctsegd = @acctsegd + @acctsegl   End   set @acctsegt =  'CREATE TABLE ' + @temptable + '(  [ACTINDX] [int] NOT NULL, ' + char(13) +  ltrim(rtrim(@acctsegd)) +   '[ACTNUMST] [char](129) NOT NULL,  [Identity_Column] [int] NOT NULL,  [BGNGBAL] [numeric](19, 5) NOT NULL,  [ENDNGBAL] [numeric](19, 5) NOT NULL,  [HSTYEAR] [smallint] NOT NULL,  [STRTNGDT] [datetime] NOT NULL,  [ENDINGDT] [datetime] NOT NULL,  [TOTDEB] [numeric](19, 5) NOT NULL,  [TOTCRED] [numeric](19, 5) NOT NULL,  [PERNAME] [char](21) NOT NULL,  [PERINDX] [smallint] NOT NULL,  [DEBITAMTS] [numeric](19, 5) NOT NULL,  [CRDTAMNTS] [numeric](19, 5) NOT NULL,  [NETAMNT] [numeric](19, 5) NOT NULL,  [NMBRACTS] [int] NOT NULL,  [CURNCYID] [char](15) NOT NULL,  [CURRNIDX] [smallint] NOT NULL,  [ORDBTAMTS] [numeric](19, 5) NOT NULL,  [ORCRDAMTS] [numeric](19, 5) NOT NULL,  [ORNETAMT] [numeric](19, 5) NOT NULL,  [DEX_ROW_ID] [int] IDENTITY(1,1) NOT NULL)'  exec (@acctsegt)  CREATE TABLE [dbo].[#GLTBDTemp](  [YEAR1] [smallint] NOT NULL,  [JRNENTRY] [int] NOT NULL,  [RCTRXSEQ] [numeric](19, 5) NOT NULL,  [SOURCDOC] [char](11) NOT NULL,  [REFRENCE] [char](31) NOT NULL,  [DSCRIPTN] [char](31) NOT NULL,  [TRXDATE] [datetime] NOT NULL,  [TRXSORCE] [char](13) NOT NULL,  [ACTINDX] [int] NOT NULL,  [POLLDTRX] [tinyint] NOT NULL,  [LASTUSER] [char](15) NOT NULL,  [LSTDTEDT] [datetime] NOT NULL,  [USWHPSTD] [char](15) NOT NULL,  [ORGNTSRC] [char](15) NOT NULL,  [ORGNATYP] [smallint] NOT NULL,  [QKOFSET] [smallint] NOT NULL,  [SERIES] [smallint] NOT NULL,  [ORTRXTYP] [smallint] NOT NULL,  [ORCTRNUM] [char](21) NOT NULL,  [ORMSTRID] [char](31) NOT NULL,  [ORMSTRNM] [char](65) NOT NULL,  [ORDOCNUM] [char](21) NOT NULL,  [ORPSTDDT] [datetime] NOT NULL,  [ORTRXSRC] [char](13) NOT NULL,  [OrigDTASeries] [smallint] NOT NULL,  [OrigSeqNum] [int] NOT NULL,  [SEQNUMBR] [int] NOT NULL,  [DTA_GL_Status] [smallint] NOT NULL,  [DTA_Index] [numeric](19, 5) NOT NULL,  [CURNCYID] [char](15) NOT NULL,  [CURRNIDX] [smallint] NOT NULL,  [RATETPID] [char](15) NOT NULL,  [EXGTBLID] [char](15) NOT NULL,  [XCHGRATE] [numeric](19, 7) NOT NULL,  [EXCHDATE] [datetime] NOT NULL,  [TIME1] [datetime] NOT NULL,  [RTCLCMTD] [smallint] NOT NULL,  [NOTEINDX] [numeric](19, 5) NOT NULL,  [ICTRX] [tinyint] NOT NULL,  [ORCOMID] [char](5) NOT NULL,  [ORIGINJE] [int] NOT NULL,  [PERIODID] [smallint] NOT NULL,  [CRDTAMNTD] [numeric](19, 5) NOT NULL,  [DEBITAMTD] [numeric](19, 5) NOT NULL,  [ORCRDAMTD] [numeric](19, 5) NOT NULL,  [ORDBTAMTD] [numeric](19, 5) NOT NULL,  [DOCDATE] [datetime] NOT NULL,  [PSTGNMBR] [int] NOT NULL,  [PPSGNMBR] [int] NOT NULL,  [DENXRATE] [numeric](19, 7) NOT NULL,  [MCTRXSTT] [smallint] NOT NULL,  [CorrespondingUnit] [char](5) NOT NULL,  [PERINDX] [smallint] NOT NULL,  [PERNAME] [char](21) NOT NULL,  [CURIDKEY] [char](15) NOT NULL,  [Ledger_ID] [int] NOT NULL,  [DEX_ROW_ID] [int] IDENTITY(1,1) NOT NULL)  set @iStartingPeriod =   (select isnull((  select top 1 c.PERIODID from   (select top 1000 a.PERIODID ,a.PERIODDT, b.LSTFSCDY, b.NUMOFPER   from SY40100 a, SY40101 b  where a.YEAR1 = b.YEAR1  and a.FORIGIN = 1 and a.YEAR1 = @I_iYear and a.PERIODID > 0   order by a.YEAR1, a.PERIODID DESC) c  where @I_dStartingDate between c.PERIODDT and c.LSTFSCDY), 1))  set @iEndingPeriod =   (select isnull((  select top 1 c.PERIODID from   (select top 1000 a.PERIODID ,a.PERIODDT, b.LSTFSCDY, b.NUMOFPER   from SY40100 a, SY40101 b  where a.YEAR1 = b.YEAR1  and a.FORIGIN = 1 and a.YEAR1 = @I_iYear and a.PERIODID > 0   order by a.YEAR1, a.PERIODID DESC) c  where @I_dEndingDate between c.PERIODDT and c.LSTFSCDY), isnull((select NUMOFPER from SY40101 where YEAR1 = @I_iYear), 1)))   set @I_dStartingPeriodDate =   (select isnull((  select top 1 c.PERIODDT from   (select top 1000 a.PERIODID ,a.PERIODDT, b.LSTFSCDY, b.NUMOFPER   from SY40100 a, SY40101 b  where a.YEAR1 = b.YEAR1  and a.FORIGIN = 1 and a.YEAR1 = @I_iYear and a.PERIODID > 0   order by a.YEAR1, a.PERIODID DESC) c  where @I_dStartingDate between c.PERIODDT and c.LSTFSCDY), 1))  exec glPrintTrialBalanceReport   '',          0,          @temptable,        '#GLTBDTemp',       @I_tInactiveAccounts,  @I_iPostingAccounts,     2,          @I_tIncludeUnitAccounts,   @I_tIncludeZeroBalance,   @I_cStartingAccountNumber,   @I_cEndingAccountNumber,   @I_dStartingDate,   @I_dEndingDate,   @iStartingPeriod,      @iEndingPeriod,       @I_dStartingPeriodDate,           @I_tKeepingSummary,      @I_iYear,   @I_dStartingPeriodDate,       @I_tHistoryYear,   1,          3,          0,          0,           1,           0,           2,           @I_iRangeByAccount,   0,          '',          'ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ',      @useReportingLedgers  if (@I_tIncludeUnitAccounts = 0 ) begin  exec ('delete from ' + @temptable +   ' where ACTINDX in (select ACTINDX from GL00100 where ACCTTYPE = 2)') end  exec DYNAMICS..smGetConstantString 'TRX_SOURCE_GL_GENERAL_ENTRY', @cGeneral_Entry output, @O_SQL_Error_State output exec DYNAMICS..smGetConstantInt 'FINANCIAL', @FINANCIAL output, @O_SQL_Error_State output  exec ('update a set a.PERIODID = b.PERIODID from #GLTBDTemp a, SY40100 b  where a.YEAR1 = b.YEAR1 and a.TRXDATE between b.PERIODDT and b.PERDENDT  and a.YEAR1 = ' + @I_iYear + ' and b.SERIES = ' + @FINANCIAL + ' and b.ODESCTN = ''' + @cGeneral_Entry + '''  and a.PERIODID = 0')  exec ('select d.*,   isnull([s].[YEAR1], 0) as [YEAR1],  isnull([s].[JRNENTRY], 0) as [JRNENTRY],  isnull([s].[RCTRXSEQ], 0.00000) as [RCTRXSEQ],  isnull([s].[SOURCDOC], '''') as [SOURCDOC],  isnull([s].[REFRENCE], '''') as [REFRENCE],  isnull([s].[DSCRIPTN], '''') as [DSCRIPTN],  isnull([s].[TRXDATE], ''1/1/1900'') as [TRXDATE],  isnull([s].[TRXSORCE], '''') as [TRXSORCE],  isnull([s].[ACTINDX], 0) as [ACTINDX],  isnull([s].[POLLDTRX], 0) as [POLLDTRX],  isnull([s].[LASTUSER], '''') as [LASTUSER],  isnull([s].[LSTDTEDT], ''1/1/1900'') as [LSTDTEDT],  isnull([s].[ORGNTSRC], '''') as [ORGNTSRC],  isnull([s].[ORGNATYP], 0) as [ORGNATYP],  isnull([s].[QKOFSET], 0) as [QKOFSET],  isnull([s].[SERIES], 0) as [SERIES],  isnull([s].[ORTRXTYP], 0) as [ORTRXTYP],  isnull([s].[ORCTRNUM], '''') as [ORCTRNUM],  isnull([s].[ORMSTRID], '''') as [ORMSTRID],  isnull([s].[ORMSTRNM], '''') as [ORMSTRNM],  isnull([s].[ORDOCNUM], '''') as [ORDOCNUM],  isnull([s].[ORPSTDDT], ''1/1/1900'') as [ORPSTDDT],  isnull([s].[ORTRXSRC], '''') as [ORTRXSRC],  isnull([s].[OrigDTASeries], 0) as [OrigDTASeries],  isnull(s.[OrigSeqNum], 0) as [OrigSeqNum],  isnull([s].[SEQNUMBR], 0) as [SEQNUMBR],  isnull([s].[DTA_GL_Status], 0) as [DTA_GL_Status],  isnull(s.[DTA_Index], 0.00000) as [DTA_Index],  isnull([s].[NOTEINDX], 0.00000) as [NOTEINDX],  isnull([s].[ICTRX], 0) as [ICTRX],  isnull([s].[ORCOMID], '''') as [ORCOMID],  isnull([s].[ORIGINJE], 0) as [ORIGINJE],  isnull([s].[PERIODID], 0) as [PERIODID],  isnull([s].[CRDTAMNTD], 0.00000) as [CRDTAMNTD],  isnull([s].[DEBITAMTD], 0.00000) as [DEBITAMTD],  isnull([s].[DOCDATE], ''1/1/1900'') as [DOCDATE],  isnull([s].[PSTGNMBR], 0) as [PSTGNMBR],  isnull([s].[PPSGNMBR], 0) as [PPSGNMBR],  isnull([s].[CorrespondingUnit], '''') as [CorrespondingUnit],  isnull([s].[PERINDX], 0) as [PeriodIndex],  isnull([s].[PERNAME], '''') as [PeriodName],  isnull([s].[DEX_ROW_ID], 0) as [DEX_ROW_IDD],  case when [ACCTTYPE] = 1 then isnull([s].[DEBITAMTD], 0.00000) else 0 end as [DEBITAMT],  case when [ACCTTYPE] = 1 then isnull([s].[CRDTAMNTD], 0.00000) else 0 end as [CREDITAMT],  [m].*,  case when TRXDATE is null then 1 else DATEPART(month, TRXDATE) end as MonthIndex,   case when TRXDATE is null then ''Janurary'' else DateName(month, TRXDATE) end as MonthField,   case when SOURCDOC is null then ''*No Transactions for this account*'' else '''' end as ''ActZeroDesc'',  case when ACTIVE = 0 then ''*Inactive account*'' else '''' end as ''ActInactiveDesc'',  case   when [s].[DEX_ROW_ID] is null then [BGNGBAL]   else   case   when [s].[DEX_ROW_ID] = (select min([tmp].[DEX_ROW_ID])   from #GLTBDTemp tmp   where [s].[ACTINDX] = [tmp].[ACTINDX]  and [tmp].[TRXDATE] = (select min([tmp].[TRXDATE]) from #GLTBDTemp tmp where [s].[ACTINDX] = [tmp].[ACTINDX]))  then [BGNGBAL] else 0 end end as Beg_Bal,  case   when [s].[DEX_ROW_ID] is null then [ENDNGBAL]   else   case when [s].[DEX_ROW_ID] = (select min([tmp].[DEX_ROW_ID])   from #GLTBDTemp tmp   where [s].[ACTINDX] = [tmp].[ACTINDX] )   then [ENDNGBAL]   else 0   end   end as End_Bal from ' + @temptable + ' d   left join #GLTBDTemp s on d.ACTINDX = s.ACTINDX left join GL00100 m on d.ACTINDX = m.ACTINDX where (m.ACTIVE = 1 or ' + @I_tInactiveAccounts + ' = 1) and  (s.TRXDATE between ''' + @I_dStartingDate + ''' and ''' + @I_dEndingDate + ''')' + 'or s.TRXDATE is null ' )   
GO
GRANT EXECUTE ON  [dbo].[seeglPrintSRSTrialBalance] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seeglPrintSRSTrialBalance] TO [rpt_accounting manager]
GO
GRANT EXECUTE ON  [dbo].[seeglPrintSRSTrialBalance] TO [rpt_bookkeeper]
GO
GRANT EXECUTE ON  [dbo].[seeglPrintSRSTrialBalance] TO [rpt_certified accountant]
GO
GRANT EXECUTE ON  [dbo].[seeglPrintSRSTrialBalance] TO [rpt_power user]
GO

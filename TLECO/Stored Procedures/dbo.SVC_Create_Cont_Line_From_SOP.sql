SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_Create_Cont_Line_From_SOP]  @contract char(11),  @lineseq integer,  @qty numeric(19,5),  @equipid integer,  @custnumber char(15),  @serial char(21),  @item char(31),  @addresscode char(15),  @soptype smallint,  @sopnumber char(21),  @sopseq integer,  @sopcomp integer As declare @paid tinyint declare @price numeric(19,5) declare @cost numeric(19,5) declare @Origprice numeric(19,5) declare @Origcost numeric(19,5) declare @Origdiscount numeric(19,5) declare @billstatus smallint declare @lastbilldate datetime declare @nextbilldate datetime declare @overriden tinyint declare @description char(101) declare @uofm char(9) declare @BaseCost numeric(19,2) declare @BasePrice numeric(19,2) declare @PRICSHED char(11) declare @ITMCLSCD char(11) declare @CUSTCLAS char(15) declare @I_sRateCalcMethod  smallint ,           @I_sViewMode   smallint,            @I_nExchangeRate  numeric(15,7),       @I_nDenomExchangeRate numeric(15,7),       @I_sMCTrxState   smallint,            @I_sDecimalPlaces  smallint,            @O_iErrorState          int declare @UserID char(21) declare @StartDate datetime, @EndDate datetime declare @discountpercent smallint  declare @discountamount numeric(19,2) declare @TAXSCHID char(15)  declare @MinDate datetime, @MaxDate datetime declare @BillType smallint, @MONTHAMOUNT numeric(19,5), @ORIGMONTHAMOUNT numeric(19,5) declare @ContLineStartDate datetime,  @ContLineEndDate datetime  exec smGetMinDate @MinDate output select @MaxDate = DATEADD(yy, 1000, @MinDate)  select @I_sViewMode = 3           select @paid = SVC_Paid_Contract,  @PRICSHED = PRICSHED, @I_sRateCalcMethod = RATECALC,   @StartDate =  STRTDATE, @EndDate =  ENDDATE,  @discountpercent = DSCPCTAM  from SVC00600 where CONSTS=2 and CONTNBR=@contract   select @I_nExchangeRate = XCHGRATE,   @I_nDenomExchangeRate = DENXRATE,   @I_sDecimalPlaces = 2,   @I_sMCTrxState = MCTRXSTT  from SVC00660 where SOPTYPE = @soptype and SOPNUMBE = @sopnumber  select  @price = XTNDPRCE,@cost = EXTDCOST,  @uofm = UOFM, @description = ITEMDESC,@TAXSCHID = TAXSCHID  from SOP30300 where   SOPTYPE = @soptype and SOPNUMBE = @sopnumber and LNITMSEQ = @sopseq and CMPNTSEQ = @sopcomp select @CUSTCLAS = CUSTCLAS  from RM00101 where CUSTNMBR = @custnumber  if (select CUSTNMBR from SOP30200 where SOPTYPE = @soptype and SOPNUMBE = @sopnumber) <> @custnumber   select @TAXSCHID = TAXSCHID from SVC00600 where CONSTS=2 and CONTNBR=@contract select @ITMCLSCD = ITMCLSCD from IV00101 where ITEMNMBR = @item exec SVC_Get_Contract_Base_Price @PRICSHED,   @ITMCLSCD,   @item,   @CUSTCLAS,   @custnumber,   @BaseCost output,   @BasePrice output if @paid = 1   BEGIN  select @billstatus = 1  select @lastbilldate = CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'  select @nextbilldate = '2999-01-01 00:00:00'   select @overriden = 1  select @price = @BasePrice   exec SVC_Prorate_Amount @StartDate,@EndDate,@BasePrice,@price output   select @price = @price * @qty   select @cost = @BaseCost * @qty   END else  BEGIN  select @billstatus = 0, @lastbilldate = @MinDate, @nextbilldate = @MinDate,  @overriden = 0, @price = @BasePrice * @qty , @cost = @BaseCost * @qty   END  if @discountpercent > 0 select @discountamount = @price * @discountpercent / 10000.0 else select @discountpercent = 0 exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @price,@Origprice OUTPUT, @O_iErrorState OUTPUT exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @cost,@Origcost OUTPUT, @O_iErrorState OUTPUT exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @discountamount,@Origdiscount OUTPUT, @O_iErrorState OUTPUT  select @I_sRateCalcMethod = RATECALC,   @I_nExchangeRate = XCHGRATE,   @I_nDenomExchangeRate = DENXRATE,   @I_sDecimalPlaces = DECPLACS,   @I_sMCTrxState = MCTRXSTT,  @BillType = BILCYC,  @ContLineStartDate = BILSTRT,  @ContLineEndDate = BILEND  from SVC00600 where CONSTS=2 and CONTNBR=@contract select @I_sViewMode = 4  exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @Origprice,@price OUTPUT, @O_iErrorState OUTPUT exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @Origcost,@cost OUTPUT, @O_iErrorState OUTPUT exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @Origdiscount,@discountamount OUTPUT, @O_iErrorState OUTPUT if @paid = 1   Begin  if @BillType > 2   begin  exec SVC_Calc_Monthly_Amount @ContLineStartDate,@ContLineEndDate,@price, @MONTHAMOUNT output   exec SVC_Calc_Monthly_Amount @ContLineStartDate,@ContLineEndDate,@Origprice, @ORIGMONTHAMOUNT output   end  else if @BillType = 2   begin  exec svcCalcWeeklyAmount @ContLineStartDate,@ContLineEndDate,@price, @MONTHAMOUNT output   exec svcCalcWeeklyAmount @ContLineStartDate,@ContLineEndDate,@Origprice, @ORIGMONTHAMOUNT output   end  else if @BillType = 1   begin  select @MONTHAMOUNT = @price / (datediff(dd, @ContLineStartDate, @ContLineEndDate) + 1),   @ORIGMONTHAMOUNT = @Origprice / (datediff(dd, @ContLineStartDate, @ContLineEndDate) + 1)   end  else  select @MONTHAMOUNT = 0, @ORIGMONTHAMOUNT = 0  End  insert SVC00601 with (rowlock)  select   2,  @contract,  @lineseq,  Contract_Transfer_Status,   Contract_Transfer_Date,   @overriden,   0,   @addresscode,   @qty,   @item,   '',   @equipid,   @serial,   FRZEND,   FRXSTRT,   BLKTIM,   VALTIM,   DSCPCTAM,   COMDLRAM,   COUNTRY,   PRCSTAT,   PORDNMBR,   substring(isnull(@description,''),1,30),  PARTPCT,   LABPCT,   MISCPCT,   PMMSCPCT,   PMPRTPCT,   PMLABPCT,   VENDORID,   RETNAGAM,   RTNBILLD,   SLPRSNID,   COMMCODE,   COMPRCNT,   BILSTRT,   BILEND,   BILLNGTH,   BILPRD,   FRSTBLDTE,   0.0,  @lastbilldate,   NBRCAL,   isnull(@price,0.0),  ACTCAL,   TOTVALCAL,   CONTACT,   CURNCYID,   @nextbilldate,   CNTTYPE,   PRICSHED,   CUSTNMBR,   ENTDTE,   MINBIL,   MAXBIL,   MAXBILL,   AUTOREN,   priorityLevel,   MSTCNTRCT,   SRVTYPE,   BILFRRET,   0.0,  PREPAID,   BILONDY,   BILCYC,   isnull(@uofm,''),  @billstatus,   ENTTME,   STRTDATE,   ENDDATE,   CNTCOVPD_1,   CNTCOVPD_2,   CNTCOVPD_3,   CNTCOVPD_4,   CNTCOVPD_5,   CNTCOVPD_6,   CNTCOVPD_7,   Contract_Coverage_Period_1,   Contract_Coverage_Period_2,   Contract_Coverage_Period_3,   Contract_Coverage_Period_4,   Contract_Coverage_Period_5,   Contract_Coverage_Period_6,   Contract_Coverage_Period_7,   USECVPD_1,   USECVPD_2,   USECVPD_3,   USECVPD_4,   USECVPD_5,   USECVPD_6,   USECVPD_7,   isnull(@TAXSCHID,TAXSCHID),  0,   0,   Contract_Length,   Contract_Period,   Invoiced_Amount,   Amount_To_Invoice,   0,  0.0,   0.0,   0,   0.0,   'N',   Contract_Renewal_Contact,   Contract_Response_Time,   Liability_Months,   Next_Liability_Date,   Last_Liability_Date,   Total_Liability_Billed,   TAXEXMT1,   TAXEXMT2,   isnull(@price,0.0),  isnull(@cost,0.0),   isnull(@cost,0.0),  SVC_Liability_Type,   SVC_Contract_Signed,   RETTYPE,   isnull(@MONTHAMOUNT,0),  Location_Segment,   Bill_To_Customer,   SVC_Bill_To_Address_Code,   isnull(@discountamount,0),  0,  SVC_Discount_Recognized,  SVC_Discount_Remaining,  SVC_Discount_Next,  0,0,  CURRNIDX ,  RATETPID,  EXGTBLID ,  XCHGRATE ,  EXCHDATE ,  DECPLACS ,  TIME1 ,  RATECALC ,  VIEWMODE ,  ISMCTRX ,  EXPNDATE ,  DENXRATE ,  MCTRXSTT,  0.0,  0.0 ,  0.0 ,  0.0 ,  isnull(@Origprice,0.0),   isnull(@Origprice,0.0) ,  0.0 ,  0.0 ,  0.0 ,  0.0 ,  isnull(@Origprice,0.0),  0.0,  0.0,  0.0,  0.0,  0.0,  isnull(@Origprice,0.0) ,  isnull(@Origcost,0.0),  isnull(@Origdiscount,0.0),  0.0,  0.0,  -1.0 ,  isnull(@Origcost,0.0),  isnull(@ORIGMONTHAMOUNT,0),  0.0 ,  0.0 ,  0.0,  0.0,  '' ,  0,0,0,0, 0,  isnull(@description,'')  from SVC00600  where CONSTS=2 and CONTNBR=@contract  if @paid = 1   BEGIN  update SVC00601 with (rowlock) set Total_Unit = SVC00601.TOTAL,  FRSTBLDTE = @lastbilldate,  Last_Amount_Billed = SVC00601.TOTAL,  TOTBIL = SVC00601.TOTAL,  NXTBLDTE = @nextbilldate,  Invoiced_Amount = SVC00601.TOTAL,  Originating_Total_Unit = SVC00601.ORIGTOTAL,   ORIGLASTAmountBilled = SVC00601.ORIGTOTAL,   ORIGTOTBIL = SVC00601.ORIGTOTAL,   Orig_Invoiced_Amount = SVC00601.ORIGTOTAL  where CONSTS= 2 and  CONTNBR= @contract and  LNSEQNBR = @lineseq  END select @UserID = SYSTEM_USER exec SVC_Set_Contract_Line_Dist 2, @contract,@lineseq  exec SVC_Create_Contract_Audit 2, @contract,@lineseq,@item,@serial,'',@UserID,'Add New Contract Line From SOP' return    
GO
GRANT EXECUTE ON  [dbo].[SVC_Create_Cont_Line_From_SOP] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateCustomerItems] @I_vITEMNMBR char(30),    @I_vCUSTNMBR char(15),   @I_vCUSTITEMNMBR char(30) = '',   @I_vCUSTITEMDESC char(50) = '',   @I_vCUSTITEMSHORNAME char(15) = '',   @I_vCUSTITEMGENERICDESC char(10) = '',   @I_vUSERDEF1 char(20) = '',   @I_vUSERDEF2 char(20) = '',   @I_vUSRDEF03 char(20) = '',   @I_vUSRDEF04 char(20) = '',   @I_vUSRDEF05 char(20) = '',   @I_vSUBITEMNMBR char(30) = '',   @I_vSTRTDATE datetime = '',   @I_vENDDATE datetime = '',   @I_vRequesterTrx  smallint = 0,   @I_vUSRDEFND1   char(50) = '',       @I_vUSRDEFND2   char(50) = '',       @I_vUSRDEFND3   char(50) = '',       @I_vUSRDEFND4   varchar(8000) = '',  @I_vUSRDEFND5   varchar(8000) = '',  @O_iErrorState   int output, @oErrString   varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @SUBITEMDESC char(50),     @NOTEINDX decimal(19,5),  @CMPANYID smallint,  @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,     @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int      select  @SUBITEMDESC = '',  @NOTEINDX = 0,  @iStatus = 0,   @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateCustomerItemsPre  @I_vITEMNMBR output,  @I_vCUSTNMBR output,  @I_vCUSTITEMNMBR output,  @I_vCUSTITEMDESC output,  @I_vCUSTITEMSHORNAME output,  @I_vCUSTITEMGENERICDESC output,  @I_vUSERDEF1 output,  @I_vUSERDEF2 output,  @I_vUSRDEF03 output,  @I_vUSRDEF04 output,  @I_vUSRDEF05 output,  @I_vSUBITEMNMBR output,  @I_vSTRTDATE output,  @I_vENDDATE output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3651    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vITEMNMBR is NULL or  @I_vCUSTNMBR is NULL or  @I_vCUSTITEMNMBR is NULL or  @I_vCUSTITEMDESC is NULL or  @I_vCUSTITEMSHORNAME is NULL or  @I_vCUSTITEMGENERICDESC is NULL or  @I_vUSERDEF1 is NULL or  @I_vUSERDEF2 is NULL or  @I_vUSRDEF03 is NULL or  @I_vUSRDEF04 is NULL or  @I_vUSRDEF05 is NULL or  @I_vSUBITEMNMBR is NULL or   @I_vSTRTDATE is NULL or  @I_vENDDATE is NULL or   @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 3652    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vCUSTITEMNMBR = UPPER(@I_vCUSTITEMNMBR),  @I_vSUBITEMNMBR = UPPER(@I_vSUBITEMNMBR)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 5344    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if  ( @I_vITEMNMBR = '' ) begin  select @O_iErrorState = 3653    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vITEMNMBR <> '' ) begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 3654    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vSUBITEMNMBR <> '' ) begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vSUBITEMNMBR))  begin  select @O_iErrorState = 5316     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @SUBITEMDESC = ITEMDESC from IV00101 (nolock) where ITEMNMBR = @I_vSUBITEMNMBR  if ( @I_vCUSTITEMDESC = '' ) begin  select @I_vCUSTITEMDESC = ITEMDESC from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR end  if ( @I_vITEMNMBR = @I_vSUBITEMNMBR ) begin  select @O_iErrorState = 5317    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vCUSTNMBR = '' ) begin  select @O_iErrorState = 3656    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if  ( @I_vCUSTNMBR <> '' ) begin  if (not exists(select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR))  begin  select @O_iErrorState = 3657    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vENDDATE < @I_vSTRTDATE ) begin  select @O_iErrorState = 5318     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vCUSTITEMNMBR <> '' ) begin  if (exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vCUSTITEMNMBR))  begin  select @O_iErrorState = 5475    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end   if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3658     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSUBITEMNMBR <> '' ) begin  if not exists( select 1 from SOP00300 (nolock) where  ITEMNMBR = @I_vITEMNMBR and CUSTNMBR = @I_vCUSTNMBR )   begin   insert into SOP00300 (  CUSTNMBR,   ITEMNMBR,  SEQNUMBR,  SUBITEMNMBR,  SUBITEMDESC,  STRTDATE,  ENDDATE  )  select  @I_vCUSTNMBR,    @I_vITEMNMBR,    1,     @I_vSUBITEMNMBR,   @SUBITEMDESC,    @I_vSTRTDATE,    @I_vENDDATE    if @@error <> 0  begin  select @O_iErrorState = 5319    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 5345    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end   if (@O_iErrorState = 0) begin  if not exists( select 1 from SOP60300 (nolock) where  ITEMNMBR = @I_vITEMNMBR and CUSTNMBR = @I_vCUSTNMBR )   begin  insert into SOP60300 ( ITEMNMBR,  CUSTNMBR,  CUSTITEMNMBR,  CUSTITEMDESC,  CUSTITEMSHORNAME,  CUSTITEMGENERICDESC,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  USERDEFKEY1,  USERDEFKEY2,  USERDEFKEY3,   USERDEFKEY4,  NOTEINDX  )  select  @I_vITEMNMBR,    @I_vCUSTNMBR,    @I_vCUSTITEMNMBR,   @I_vCUSTITEMDESC,   @I_vCUSTITEMSHORNAME,   @I_vCUSTITEMGENERICDESC,  @I_vUSERDEF1,    @I_vUSERDEF2,    @I_vUSRDEF03,    @I_vUSRDEF04,    @I_vUSRDEF05,    '',     '',     '',     '',     @NOTEINDX    if @@error <> 0  begin  select @O_iErrorState = 3659    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 3660    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateCustomerItemsPost  @I_vITEMNMBR,  @I_vCUSTNMBR,  @I_vCUSTITEMNMBR ,  @I_vCUSTITEMDESC ,  @I_vCUSTITEMSHORNAME ,  @I_vCUSTITEMGENERICDESC ,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vSUBITEMNMBR ,  @I_vSTRTDATE ,  @I_vENDDATE ,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3661    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateCustomerItems] TO [DYNGRP]
GO

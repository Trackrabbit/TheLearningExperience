SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_post_msx_operation]  @operation              VARCHAR(64),  @object_type            VARCHAR(64)      = 'JOB',  @job_id                 UNIQUEIDENTIFIER = NULL,   @specific_target_server NVARCHAR(30)     = NULL,  @value                  INT              = NULL   AS BEGIN  DECLARE @operation_code            INT  DECLARE @specific_target_server_id INT  DECLARE @instructions_posted       INT  DECLARE @job_id_as_char            VARCHAR(36)  DECLARE @msx_time_zone_adjustment  INT  DECLARE @local_machine_name        NVARCHAR(30)  DECLARE @retval                    INT  DECLARE @SessionID                 integer  SET NOCOUNT ON  SELECT @operation              = LTRIM(RTRIM(@operation))   SELECT @object_type            = LTRIM(RTRIM(@object_type))  SELECT @specific_target_server = LTRIM(RTRIM(@specific_target_server))  IF (@specific_target_server = N'') SELECT @specific_target_server = NULL  IF (ISNULL(IS_SRVROLEMEMBER(N'sysadmin'), 0) <> 1)  RETURN(0)   SELECT @operation = UPPER(@operation)  SELECT @operation_code = CASE @operation  WHEN 'INSERT'    THEN 1  WHEN 'UPDATE'    THEN 2  WHEN 'DELETE'    THEN 3  WHEN 'START'     THEN 4  WHEN 'STOP'      THEN 5  WHEN 'RE-ENLIST' THEN 6  WHEN 'DEFECT'    THEN 7  WHEN 'SYNC-TIME' THEN 8  WHEN 'SET-POLL'  THEN 9  ELSE 0  END  IF (@operation_code = 0)  BEGIN  RAISERROR(14266, -1, -1, '@operation_code', 'INSERT, UPDATE, DELETE, START, STOP, RE-ENLIST, DEFECT, SYNC-TIME, SET-POLL')  RETURN(1)   END  IF ((@object_type <> 'JOB') AND (@object_type <> 'SERVER'))  BEGIN  RAISERROR(14266, -1, -1, '@object_type', 'JOB, SERVER')  RETURN(1)   END  IF ((@object_type = 'JOB') AND (@job_id IS NULL))  BEGIN  RAISERROR(14233, -1, -1)  RETURN(1)   END  IF (@operation_code = 9) AND ((ISNULL(@value, 0) < 10) OR (ISNULL(@value, 0) > 28800))  BEGIN  RAISERROR(14266, -1, -1, '@value', '10..28800')  RETURN(1)   END  IF (@specific_target_server IS NOT NULL)  BEGIN  IF (UPPER(@specific_target_server) = N'(LOCAL)')  BEGIN  RETURN(0)  END  ELSE  BEGIN  SELECT @specific_target_server_id = server_id  FROM msdb.dbo.systargetservers  WHERE (server_name = @specific_target_server)  IF (@specific_target_server_id IS NULL)  BEGIN  RAISERROR(14262, -1, -1, '@specific_target_server', @specific_target_server)  RETURN(1)   END  END  END  IF ((SELECT COUNT(*)  FROM msdb.dbo.systargetservers) = 0)  BEGIN  RETURN(0)  END  EXECUTE @retval = master.dbo.xp_getnetname @local_machine_name OUTPUT  IF (@retval <> 0) OR (@local_machine_name IS NULL)  BEGIN  RAISERROR(14225, -1, -1)  RETURN(1)  END  select @SessionID = SUSER_ID()  delete from SVC_Temp_target_servers where sessionid = @SessionID   IF ((@object_type = 'JOB')    AND (ISNULL(@job_id, 0x00) <> CONVERT(UNIQUEIDENTIFIER, 0x00)) AND (@operation_code IN (1, 2, 3, 4, 5))) OR   ((@object_type = 'SERVER') AND (@operation_code IN (6, 7)))   BEGIN  IF (@specific_target_server IS NOT NULL)  INSERT INTO SVC_Temp_target_servers VALUES (@SessionID,@specific_target_server,0)  ELSE  BEGIN  IF (@object_type = 'SERVER')  INSERT INTO SVC_Temp_target_servers  SELECT @SessionID,server_name,0   FROM msdb.dbo.systargetservers  IF (@object_type = 'JOB')  INSERT INTO SVC_Temp_target_servers  SELECT @SessionID,sts.server_name,0  FROM msdb.dbo.sysjobs_view     sjv,  msdb.dbo.sysjobservers    sjs,  msdb.dbo.systargetservers sts  WHERE (sjv.job_id = @job_id)  AND (sjv.job_id = sjs.job_id)  AND (sjs.server_id = sts.server_id)  AND (sjs.server_id <> 0)  END   IF (EXISTS (SELECT *   FROM SVC_Temp_target_servers where sessionid = @SessionID))  BEGIN  DECLARE @target_server sysname  DECLARE @optimized     BIT  SELECT @optimized = 1  DECLARE targets_to_post_to CURSOR LOCAL  FOR  SELECT server_name   FROM SVC_Temp_target_servers  OPEN targets_to_post_to  FETCH NEXT FROM targets_to_post_to INTO @target_server   BEGIN TRANSACTION  SAVE TRANSACTION start  WHILE (@@fetch_status = 0)  BEGIN  IF (EXISTS (SELECT *   FROM msdb.dbo.sysdownloadlist  WHERE (target_server = @target_server)  AND (operation_code = @operation_code)  AND (object_id = ISNULL(@job_id, CONVERT(UNIQUEIDENTIFIER, 0x00)))  AND (status = 0))) AND  (NOT EXISTS (SELECT *   FROM master.dbo.sysprocesses   WHERE (loginame = @target_server + N'_msx_probe')))  BEGIN  UPDATE msdb.dbo.sysdownloadlist  SET date_posted = GETDATE()  WHERE (target_server = @target_server)  AND (operation_code = @operation_code)  AND (object_id = ISNULL(@job_id, CONVERT(UNIQUEIDENTIFIER, 0x00)))  AND (status = 0)  END  ELSE  BEGIN  SELECT @optimized = 0  BREAK   END  FETCH NEXT FROM targets_to_post_to INTO @target_server  END  DEALLOCATE targets_to_post_to  IF (@optimized = 1)   BEGIN  COMMIT TRANSACTION  SELECT @instructions_posted = 0  GOTO DoReport  END  ELSE  BEGIN  ROLLBACK TRANSACTION start  COMMIT TRANSACTION  END  END  delete from SVC_Temp_target_servers where sessionid = @SessionID  END  IF (@object_type = 'JOB')  BEGIN  IF (@job_id <> CONVERT(UNIQUEIDENTIFIER, 0x00))  BEGIN  SELECT @job_id_as_char = CONVERT(VARCHAR(36), @job_id)  IF (NOT EXISTS (SELECT *  FROM msdb.dbo.sysjobs_view  WHERE (job_id = @job_id)))  BEGIN  RAISERROR(14262, -1, -1, '@job_id', @job_id_as_char)  RETURN(1)   END  IF (EXISTS (SELECT *  FROM msdb.dbo.sysjobservers  WHERE (job_id = @job_id)  AND (server_id = 0)))   OR (NOT EXISTS (SELECT *   FROM msdb.dbo.sysjobservers  WHERE (job_id = @job_id)))  BEGIN  RETURN(0)  END  END  IF (@operation_code = 1) OR    (@operation_code = 2) OR    (@operation_code = 3) OR    (@operation_code = 4) OR    (@operation_code = 5)       BEGIN  IF (@job_id = CONVERT(UNIQUEIDENTIFIER, 0x00))   BEGIN   IF (@operation_code = 3)  BEGIN  INSERT INTO msdb.dbo.sysdownloadlist  (source_server,  operation_code,  object_type,  object_id,  target_server)  SELECT @local_machine_name,  @operation_code,  1,                  CONVERT(UNIQUEIDENTIFIER, 0x00),  sts.server_name  FROM systargetservers sts  WHERE ((@specific_target_server_id IS NULL) OR (sts.server_id = @specific_target_server_id))  AND ((SELECT COUNT(*)   FROM msdb.dbo.sysjobservers  WHERE (server_id = sts.server_id)) > 0)  SELECT @instructions_posted = @@rowcount  END  ELSE  BEGIN  INSERT INTO msdb.dbo.sysdownloadlist  (source_server,  operation_code,  object_type,  object_id,  target_server)  SELECT @local_machine_name,  @operation_code,  1,                  sjv.job_id,  sts.server_name  FROM sysjobs_view     sjv,  sysjobservers    sjs,  systargetservers sts  WHERE (sjv.job_id = sjs.job_id)  AND (sjs.server_id = sts.server_id)  AND (sjs.server_id <> 0)   AND ((@specific_target_server_id IS NULL) OR (sjs.server_id = @specific_target_server_id))  SELECT @instructions_posted = @@rowcount  END  END  ELSE  BEGIN  INSERT INTO msdb.dbo.sysdownloadlist  (source_server,  operation_code,  object_type,  object_id,  target_server,  deleted_object_name)  SELECT @local_machine_name,  @operation_code,  1,                  sjv.job_id,  sts.server_name,  CASE @operation_code WHEN 3   THEN sjv.name  ELSE NULL  END  FROM sysjobs_view     sjv,  sysjobservers    sjs,  systargetservers sts  WHERE (sjv.job_id = @job_id)  AND (sjv.job_id = sjs.job_id)  AND (sjs.server_id = sts.server_id)  AND (sjs.server_id <> 0)   AND ((@specific_target_server_id IS NULL) OR (sjs.server_id = @specific_target_server_id))  SELECT @instructions_posted = @@rowcount  END  END  ELSE  BEGIN  RAISERROR(14266, -1, -1, '@operation_code', 'INSERT, UPDATE, DELETE, START, STOP')  RETURN(1)   END  END  IF (@object_type = 'SERVER')  BEGIN  IF (@operation_code = 6) OR    (@operation_code = 7) OR    (@operation_code = 8) OR    (@operation_code = 9)       BEGIN  IF (@operation_code = 8)  BEGIN   EXECUTE master.dbo.xp_regread N'HKEY_LOCAL_MACHINE',  N'SYSTEM\CurrentControlSet\Control\TimeZoneInformation',  N'Bias',  @msx_time_zone_adjustment OUTPUT,  N'no_output'  SELECT @msx_time_zone_adjustment = -ISNULL(@msx_time_zone_adjustment, 0)  END  INSERT INTO msdb.dbo.sysdownloadlist  (source_server,  operation_code,  object_type,  object_id,  target_server)  SELECT @local_machine_name,  @operation_code,  2,                    CASE @operation_code  WHEN 8 THEN CONVERT(UNIQUEIDENTIFIER, CONVERT(BINARY(16), -(@msx_time_zone_adjustment - sts.time_zone_adjustment)))  WHEN 9 THEN CONVERT(UNIQUEIDENTIFIER, CONVERT(BINARY(16), @value))  ELSE CONVERT(UNIQUEIDENTIFIER, 0x00)  END,  sts.server_name  FROM systargetservers sts  WHERE ((@specific_target_server_id IS NULL) OR (sts.server_id = @specific_target_server_id))  SELECT @instructions_posted = @@rowcount  END  ELSE  BEGIN  RAISERROR(14266, -1, -1, '@operation_code', 'RE-ENLIST, DEFECT, SYNC-TIME, SET-POLL')  RETURN(1)   END  END DoReport:  IF (@object_type = 'JOB') AND  (@job_id = CONVERT(UNIQUEIDENTIFIER, 0x00)) AND  (@instructions_posted = 0) AND  (@specific_target_server_id IS NOT NULL)  RAISERROR(14231, 0, 1, '@specific_target_server', @specific_target_server)  ELSE  RAISERROR(14230, 0, 1, @instructions_posted, @operation)  IF (@specific_target_server IS NOT NULL)  EXECUTE msdb.dbo.sp_downloaded_row_limiter @specific_target_server  RETURN(0)  END    
GO
GRANT EXECUTE ON  [dbo].[SVC_post_msx_operation] TO [DYNGRP]
GO

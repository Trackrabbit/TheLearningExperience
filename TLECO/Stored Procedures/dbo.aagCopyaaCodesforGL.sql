SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagCopyaaCodesforGL]  @JRNENTRYFR INT,  @RCTRXSEQ NUMERIC(19,5),  @YEAR1 SMALLINT,  @JRNENTRYTO INT,  @GLPOSTDT DATETIME,   @CompanyID smallint AS  BEGIN  DECLARE @aaGLHdrID INT,  @aaGLWorkHdrID INT,  @aaGLWorkDistID INT,  @aaGLWorkAssignID INT,  @ClassID INT,  @lSeqNumber INT,  @NewlSeqNumber INT,  @LedgerID SMALLINT,  @ACTINDX INT,  @CURRNIDX SMALLINT,  @RATETPID CHAR(15),  @EXGTBLID CHAR(15),  @XCHGRATE NUMERIC(19,7),  @EXCHDATE DATETIME,  @TIME1 DATETIME ,   @RTCLCMTD SMALLINT,  @DENXRATE NUMERIC(19,7),  @MCTRXSTT SMALLINT,  @CURNCYID CHAR(15),  @aaBrowseTypeNew SMALLINT,  @oRequiredFieldEmpty TINYINT   IF EXISTS(SELECT 1 FROM SY40101 WHERE YEAR1 = @YEAR1 and HISTORYR = 1)  BEGIN  SELECT @aaGLHdrID = aaGLHdrID  FROM AAG40000  WHERE JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and  YEAR1 = @YEAR1  SELECT @LedgerID = Ledger_ID from GL30000    WHERE JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and   HSTYEAR = @YEAR1  END  ELSE  BEGIN  SELECT @aaGLHdrID = aaGLHdrID  FROM AAG30000  WHERE JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and  YEAR1 = @YEAR1  SELECT @LedgerID = Ledger_ID FROM GL20000    WHERE JRNENTRY = @JRNENTRYFR AND   RCTRXSEQ = @RCTRXSEQ AND   OPENYEAR= @YEAR1  END  EXEC aagGLWorkHdrUpdate  @JRNENTRYTO,   0,  @GLPOSTDT,  @LedgerID,   @aaGLWorkHdrID OUTPUT,  @CompanyID   IF EXISTS(SELECT 1 FROM SY40101 WHERE YEAR1 = @YEAR1 and HISTORYR = 1)  BEGIN  SELECT @NewlSeqNumber = 500  DECLARE  TrxOpenCursor  CURSOR LOCAL FOR   SELECT  SEQNUMBR, ACTINDX  FROM  AAG40001  WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 ORDER BY  SEQNUMBR  OPEN TrxOpenCursor  FETCH NEXT   FROM   TrxOpenCursor  INTO  @lSeqNumber, @ACTINDX  WHILE @@FETCH_STATUS = 0   BEGIN   INSERT INTO AAG10001   (aaGLWorkHdrID,aaGLWorkDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,FXDORVAR,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  SQNCLINE,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,aaWinWasOpen,  aaOFFSETAcct,aaDistErrors,aaChangeDate, aaChangeTime,AA_CL_Status)  SELECT @aaGLWorkHdrID,aaGLDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,dbo.aagFixedOrVar(ACTINDX),DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  @NewlSeqNumber,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,1,  0,0,CONVERT(CHAR(12), GETDATE(), 102), CONVERT(CHAR(12), GETDATE(), 108),0 FROM AAG40001   WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and SEQNUMBR = @lSeqNumber AND ACTINDX = @ACTINDX  SELECT  @NewlSeqNumber = @NewlSeqNumber + 500   FETCH NEXT   FROM   TrxOpenCursor  into  @lSeqNumber, @ACTINDX  END  CLOSE TrxOpenCursor  DEALLOCATE TrxOpenCursor   INSERT INTO AAG10002   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,  ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors,aaAliasID)  SELECT @aaGLWorkHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,  ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,0,0 FROM AAG40002  WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and aaGLAssignID > 0   DECLARE  TrxCode  CURSOR LOCAL FOR   SELECT  A2.aaGLWorkDistID, A2.aaGLWorkAssignID,(SELECT TOP 1 ACTINDX FROM AAG10001 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID=A2.aaGLWorkDistID )  FROM  AAG10002 A2 WHERE A2.aaGLWorkHdrID = @aaGLWorkHdrID and A2.aaGLWorkDistID > 0 ORDER BY  A2.aaGLWorkDistID  OPEN TrxCode  FETCH NEXT FROM TrxCode INTO @aaGLWorkDistID, @aaGLWorkAssignID, @ACTINDX  WHILE @@FETCH_STATUS = 0   BEGIN   EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID output,   @aaBrowseTypeNew output   if @aaBrowseTypeNew <> 0   and not exists  (select 1 from AAG10003  where aaGLWorkHdrID = @aaGLWorkHdrID  and aaGLWorkDistID = @aaGLWorkDistID)  begin   exec aagGLWorkCodeUpdate   @aaGLWorkHdrID,   @aaGLWorkDistID,   1,   @ClassID,   @oRequiredFieldEmpty output    set @aaBrowseTypeNew = 0   end    update AAG10001 set aaBrowseType = 1  where aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID = @aaGLWorkDistID   UPDATE AAG10003 SET AAG10003.aaTrxCodeID = A4.aaTrxCodeID FROM AAG10003 INNER JOIN (SELECT aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID FROM AAG40003 WHERE aaGLHdrID = @aaGLHdrID and   aaGLDistID = @aaGLWorkDistID AND aaGLAssignID=@aaGLWorkAssignID) A4 on aaGLWorkDistID=A4.aaGLDistID AND aaGLWorkAssignID=A4.aaGLAssignID AND AAG10003.aaTrxDimID=A4.aaTrxDimID AND aaGLWorkHdrID=@aaGLWorkHdrID   UPDATE AAG10003 SET aaTrxCodeID = 0 FROM AAG10003 AA1 WHERE AA1.aaGLWorkHdrID=@aaGLWorkHdrID AND AA1.aaGLWorkDistID = @aaGLWorkDistID AND aaTrxDimID   NOT IN (SELECT AAG10003.aaTrxDimID FROM AAG10003 INNER JOIN (SELECT aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID FROM AAG30003 WHERE aaGLHdrID = @aaGLHdrID and   aaGLDistID = @aaGLWorkDistID AND aaGLAssignID=@aaGLWorkAssignID) A3 on aaGLWorkHdrID=@aaGLWorkHdrID  AND aaGLWorkDistID=A3.aaGLDistID AND aaGLWorkAssignID=A3.aaGLAssignID   AND AAG10003.aaTrxDimID=A3.aaTrxDimID  AND aaGLWorkHdrID=AA1.aaGLWorkHdrID AND aaGLWorkDistID=AA1.aaGLWorkDistID )    FETCH NEXT   FROM   TrxCode  INTO  @aaGLWorkDistID, @aaGLWorkAssignID, @ACTINDX  END  CLOSE TrxCode  DEALLOCATE TrxCode  END  ELSE  BEGIN  DECLARE TrxOpenCursor  CURSOR LOCAL FOR   SELECT  SEQNUMBR, ACTINDX FROM  AAG30001   WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 ORDER BY  SEQNUMBR  OPEN TrxOpenCursor  FETCH NEXT   FROM   TrxOpenCursor  INTO  @lSeqNumber, @ACTINDX  SELECT @NewlSeqNumber = 500  WHILE @@FETCH_STATUS = 0   BEGIN   INSERT INTO AAG10001   (aaGLWorkHdrID,aaGLWorkDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,FXDORVAR,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  SQNCLINE,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,aaWinWasOpen,  aaOFFSETAcct,aaDistErrors,aaChangeDate, aaChangeTime, AA_CL_Status)  SELECT @aaGLWorkHdrID,aaGLDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,dbo.aagFixedOrVar(ACTINDX),DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  @NewlSeqNumber,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,1,  0,0,CONVERT(CHAR(12), GETDATE(), 102), CONVERT(CHAR(12), GETDATE(), 108),0 FROM AAG30001   WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and SEQNUMBR = @lSeqNumber AND ACTINDX = @ACTINDX  SELECT  @NewlSeqNumber = @NewlSeqNumber + 500   FETCH NEXT   FROM   TrxOpenCursor  INTO  @lSeqNumber, @ACTINDX  END  CLOSE TrxOpenCursor  DEALLOCATE TrxOpenCursor   INSERT INTO AAG10002   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,  ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors,aaAliasID)  SELECT @aaGLWorkHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,  ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,0,aaAliasID FROM AAG30002  WHERE aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and aaGLAssignID > 0   DECLARE  TrxCode  CURSOR LOCAL FOR   SELECT  A2.aaGLWorkDistID, A2.aaGLWorkAssignID,(SELECT TOP 1 ACTINDX FROM AAG10001 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID=A2.aaGLWorkDistID )  FROM  AAG10002 A2 WHERE A2.aaGLWorkHdrID = @aaGLWorkHdrID and A2.aaGLWorkDistID > 0 ORDER BY  A2.aaGLWorkDistID  OPEN TrxCode  FETCH NEXT FROM TrxCode INTO @aaGLWorkDistID, @aaGLWorkAssignID, @ACTINDX  WHILE @@FETCH_STATUS = 0   BEGIN   EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID output,   @aaBrowseTypeNew output   IF @aaBrowseTypeNew <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG10003  WHERE aaGLWorkHdrID = @aaGLWorkHdrID  AND aaGLWorkDistID = @aaGLWorkDistID  AND aaGLWorkAssignID = @aaGLWorkAssignID)  BEGIN   EXEC aagGLWorkCodeUpdate   @aaGLWorkHdrID,   @aaGLWorkDistID,   @aaGLWorkAssignID,   @ClassID,   @oRequiredFieldEmpty output    SET @aaBrowseTypeNew = 0   END    UPDATE AAG10001 SET aaBrowseType = 1  WHERE aaGLWorkHdrID = @aaGLWorkHdrID and  aaGLWorkDistID = @aaGLWorkDistID   UPDATE AAG10003 SET AAG10003.aaTrxCodeID = A3.aaTrxCodeID FROM AAG10003 INNER JOIN (SELECT aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID FROM AAG30003 WHERE aaGLHdrID = @aaGLHdrID and   aaGLDistID = @aaGLWorkDistID AND aaGLAssignID=@aaGLWorkAssignID) A3 on aaGLWorkDistID=A3.aaGLDistID AND aaGLWorkAssignID=A3.aaGLAssignID AND AAG10003.aaTrxDimID=A3.aaTrxDimID AND aaGLWorkHdrID=@aaGLWorkHdrID   UPDATE AAG10003 SET aaTrxCodeID = 0 FROM AAG10003 AA1 WHERE AA1.aaGLWorkHdrID=@aaGLWorkHdrID AND AA1.aaGLWorkDistID = @aaGLWorkDistID AND aaTrxDimID   NOT IN (SELECT AAG10003.aaTrxDimID FROM AAG10003 INNER JOIN (SELECT aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID FROM AAG30003 WHERE aaGLHdrID = @aaGLHdrID and   aaGLDistID = @aaGLWorkDistID AND aaGLAssignID=@aaGLWorkAssignID) A3 on aaGLWorkHdrID=@aaGLWorkHdrID  AND aaGLWorkDistID=A3.aaGLDistID AND aaGLWorkAssignID=A3.aaGLAssignID   AND AAG10003.aaTrxDimID=A3.aaTrxDimID  AND aaGLWorkHdrID=AA1.aaGLWorkHdrID AND aaGLWorkDistID=AA1.aaGLWorkDistID )    FETCH NEXT   FROM   TrxCode  INTO  @aaGLWorkDistID, @aaGLWorkAssignID, @ACTINDX  END  CLOSE TrxCode  DEALLOCATE TrxCode  END END    
GO
GRANT EXECUTE ON  [dbo].[aagCopyaaCodesforGL] TO [DYNGRP]
GO

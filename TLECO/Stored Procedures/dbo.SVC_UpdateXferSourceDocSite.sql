SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 Create Procedure [dbo].[SVC_UpdateXferSourceDocSite]  (  @DocNumber char(15),  @NewFromSite char(10),  @NewToSite char(10),  @NewFromBin char(15),  @NewToBin char(15),  @DocLine int = 0) As Declare @Call Char(10),  @RMA char(15),  @WO char(10),   @RTV char(15),  @TransferLine int, @ServiceLine int, @RMALine numeric(19,5) declare @EquipLine int declare @LineType char(3) declare @RecordType smallint, @WORecordType smallint declare @Item char(31),  @H_NAME     char(65),  @H_ADDRESS1 char(31),  @H_ADDRESS2 char(31),  @H_ADDRESS3 char(31),  @H_CITY     char(31),  @H_STATE    char(30),  @H_ZIPCODE  char(11),  @H_COUNTRY     char(21)  if @DocLine > 0   Begin  select @Call = CALLNBR, @RMA = RETDOCID, @WO = WORKORDNUM, @RTV = RTV_Number, @Item = ITEMNMBR, @RMALine = LNSEQNBR,  @RecordType = SRVRECTYPE, @ServiceLine = SERVLITEMSEQ, @EquipLine = EQPLINE, @WORecordType = WORECTYPE  from SVC00701 where ORDDOCID = @DocNumber and LNITMSEQ = @DocLine  if @Call > ''  update SVC00203 set LOCNCODE = @NewToSite where SRVRECTYPE = @RecordType and LNITMSEQ = @ServiceLine and  EQPLINE = @EquipLine and LINITMTYP = 'P' and CALLNBR = @Call  else if @RMA > '' and @RMALine > 0  begin  select  @H_NAME = LOCNDSCR, @H_ADDRESS1 = ADDRESS1, @H_ADDRESS2 = ADDRESS2, @H_ADDRESS3 = ADDRESS3,  @H_CITY     = CITY, @H_COUNTRY = COUNTRY, @H_STATE = STATE, @H_ZIPCODE  = ZIPCODE  from IV40700 where LOCNCODE = @NewToSite  update SVC05200 set Return_Location_Code = @NewToSite,   RTRNNAME = @H_NAME, SVC_Return_State = @H_STATE, Return_Country = @H_COUNTRY,   RETADDR1 = @H_ADDRESS1, RETADDR2 = @H_ADDRESS2, RETADDR3 = @H_ADDRESS3,   RTRNCITY = @H_CITY, RTRNZIP = @H_ZIPCODE  where RETDOCID = @RMA and Return_Record_Type = 1 and LNSEQNBR = @RMALine  end  else if @WO > ''  update SVC06101 set LOCNCODE = @NewToSite where WORECTYPE = @WORecordType and LNITMSEQ = @ServiceLine and  LINITMTYP = 'P' and WORKORDNUM = @WO  else if @RTV > ''  begin  update SVC05601 set LOCNCODE = @NewToSite where RTV_Number = @RTV and RTV_Line = @RMALine  update SVC05612 set LOCNCODE = @NewToSite, TOBIN = @NewToBin where RTV_Number = @RTV and RTV_Line = @RMALine  end   if exists(select * from SVC00712 where ORDDOCID = @DocNumber and LNITMSEQ = @DocLine)  and exists(select 1 from SVC00701 where ORDDOCID = @DocNumber and LNITMSEQ = @DocLine)  begin  if (@RMA> '' or @RTV > '') and @NewToSite > ''   exec SVC_Bin_GetDefault @Item, @NewToSite, 'R', @NewToBin output  if @NewToSite > ''  update SVC00712 set LOCNCODE = @NewToSite, TOBIN = @NewToBin where ORDDOCID = @DocNumber and LNITMSEQ = @DocLine  end   if exists(select * from SVC00702 where ORDDOCID = @DocNumber and TRANSLINESEQ = @DocLine) and @NewToBin > ''  update SVC00702 set TOBIN = @NewToBin  where ORDDOCID = @DocNumber and TRANSLINESEQ = @DocLine   return  End  if (select count(*) from SVC00701 where ORDDOCID = @DocNumber) > 0  Begin  declare TransferLine cursor for select LNITMSEQ, CALLNBR, RETDOCID, WORKORDNUM, RTV_Number, ITEMNMBR, LNSEQNBR  from SVC00701 where ORDDOCID = @DocNumber  open TransferLine  FETCH NEXT FROM TransferLine INTO @TransferLine, @Call, @RMA, @WO, @RTV, @Item, @RMALine  while @@FETCH_STATUS = 0  BEGIN  if @Call> ''   begin  select @RecordType = SRVRECTYPE, @ServiceLine = SERVLITEMSEQ, @EquipLine = EQPLINE  from SVC00701 where  ORDDOCID = @DocNumber and LNITMSEQ = @TransferLine  update SVC00203 set LOCNCODE = @NewToSite where SRVRECTYPE = @RecordType and LNITMSEQ = @ServiceLine and  EQPLINE = @EquipLine and LINITMTYP = 'P' and CALLNBR = @Call  end  else if @RMA > ''  begin  select @RMALine = LNSEQNBR from SVC00701 where ORDDOCID = @DocNumber and LNITMSEQ = @TransferLine  select  @H_NAME = LOCNDSCR, @H_ADDRESS1 = ADDRESS1, @H_ADDRESS2 = ADDRESS2, @H_ADDRESS3 = ADDRESS3,  @H_CITY     = CITY, @H_COUNTRY = COUNTRY, @H_STATE = STATE, @H_ZIPCODE  = ZIPCODE  from IV40700 where LOCNCODE = @NewToSite  update SVC05200 set Return_Location_Code = @NewToSite,   RTRNNAME = @H_NAME, SVC_Return_State = @H_STATE, Return_Country = @H_COUNTRY,   RETADDR1 = @H_ADDRESS1, RETADDR2 = @H_ADDRESS2, RETADDR3 = @H_ADDRESS3,   RTRNCITY = @H_CITY, RTRNZIP = @H_ZIPCODE  where RETDOCID = @RMA and Return_Record_Type = 1 and LNSEQNBR = @RMALine  end  else if @WO > ''  begin  select @RecordType = WORECTYPE, @ServiceLine = SERVLITEMSEQ  from SVC00701 where ORDDOCID = @DocNumber and LNITMSEQ = @TransferLine  update SVC06101 set LOCNCODE = @NewToSite where WORECTYPE = @RecordType and LNITMSEQ = @ServiceLine and  LINITMTYP = 'P' and WORKORDNUM = @WO  end  else if @RTV > ''  begin  update SVC05601 set LOCNCODE = @NewToSite where RTV_Number = @RTV and RTV_Line = @RMALine  update SVC05612 set LOCNCODE = @NewToSite, TOBIN = @NewToBin where RTV_Number = @RTV and RTV_Line = @RMALine  end  if exists(select * from SVC00712 where ORDDOCID = @DocNumber and LNITMSEQ = @TransferLine)  begin  if (@RMA> '' or @RTV > '') and @NewToSite > ''   exec SVC_Bin_GetDefault @Item, @NewToSite, 'R', @NewToBin output  if @NewToSite > ''  update SVC00712 set LOCNCODE = @NewToSite, TOBIN = @NewToBin where ORDDOCID = @DocNumber and LNITMSEQ = @TransferLine  end  if exists(select * from SVC00702 where ORDDOCID = @DocNumber and TRANSLINESEQ = @TransferLine) and @NewToBin > ''  update SVC00702 set TOBIN = @NewToBin  where ORDDOCID = @DocNumber and TRANSLINESEQ = @TransferLine  FETCH NEXT FROM TransferLine INTO @TransferLine, @Call, @RMA, @WO, @RTV, @Item, @RMALine  END  deallocate TransferLine End  return (0)    
GO
GRANT EXECUTE ON  [dbo].[SVC_UpdateXferSourceDocSite] TO [DYNGRP]
GO

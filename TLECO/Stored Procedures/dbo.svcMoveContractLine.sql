SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[svcMoveContractLine] (  @CONSTS                 smallint,  @CONTNBR                char(11),  @LNSEQNBR               numeric(19,5),  @MOVEDATE datetime,  @DEDUCTIONAMOUNT numeric(19,5),  @NewTotal numeric(19,5) output,  @OrigNewTotal numeric(19,5) output,  @ORIGOldTotal numeric(19,5) output )  AS  declare @DR                     numeric(19,5),   @N                      int,  @BOD                    smallint,  @ContractLineStartDate  datetime,  @ContractLineEndDate   datetime,  @CoverageStartDate      datetime,  @CLBSD                  datetime,  @CLBED                  datetime,  @LBD                    datetime,  @LINECOUNTER            numeric(19,2),  @NumberOfDays            numeric(19,2),  @LIABILITY              smallint,  @IATOTAL                numeric(19,2),  @TOTAL                  numeric(19,2),  @ORIGTOTAL              numeric(19,2),  @BP                     int,  @msg                    varchar(120),  @monthsavail            int,  @tempday                int,  @MA                     numeric(19,2),  @NEXTBILLDATE           datetime,  @BILLAMOUNT             numeric(19,2),  @CNUMOFINV              int,  @MAC                    numeric(19,2),  @MDIV                   int,  @LIABILITYAMOUNT        numeric(19,2) ,  @WholeCredits           numeric(19,2),  @DiscountPercent        smallint,  @DiscountAmount         numeric(19,2),  @NewDocumentAmount      numeric(19,2),  @OrigNewDocumentAmount  numeric(19,2),  @LINECREDIT             numeric(19,2),  @LINEBILLED             numeric(19,2),  @OrigLINEBILLED         numeric(19,2),  @OrigDiscountAmount     numeric(19,2),  @OrigDR                 numeric(19,2),  @OrigWholeCredits       numeric(19,2),  @ORIGBILLAMOUNT         numeric(19,2),  @ORIGLIABILITYAMOUNT    numeric(19,2),  @ORIGLIABMONTHAMT       numeric(19,2),  @LSCD                   datetime,  @ErrorCondition         int,  @UserID                 char(30),   @I_sRateCalcMethod      smallint ,           @I_sViewMode            smallint,            @I_nExchangeRate        numeric(15,7),       @I_nDenomExchangeRate   numeric(15,7),       @I_sMCTrxState          smallint,            @I_sDecimalPlaces       smallint,            @O_iErrorState          int,  @OrigDistAmount         numeric(19,2),  @DistAmount             numeric(19,2),  @BillCycle smallint,  @Rate numeric(19,5), @ORIGDEDUCTIONAMOUNT  numeric(19,5),  @OrigTotalInvoiced      numeric(19,2), @OrigDiffAmount numeric(19,2),  @TotalInvoiced          numeric(19,2), @DiffAmount numeric(19,2) declare @StartDate  datetime,  @EndDate    datetime,  @YEAR1      smallint,  @PERIODID   smallint,  @RevenueLine int,  @BillingStatus smallint declare @MinDate datetime,@MaxDate datetime declare @WholeAmountCancel tinyint declare @MoveZero tinyint declare @svcFreqQty smallint declare @CreateRevenue tinyint  exec smGetMinDate @MinDate output  select @MaxDate = DATEADD(yy, 1000, @MinDate), @WholeAmountCancel = 0,@I_sViewMode = 3,  @UserID = SUSER_SNAME(), @LINECREDIT = 0.0, @MoveZero = 0 if (select TOTAL from SVC00675 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and LNSEQNBR =@LNSEQNBR) = 0   select @MoveZero = 1  if @MoveZero = 0 and (select STRTDATE from SVC00601 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and LNSEQNBR =@LNSEQNBR) = @MOVEDATE  select @WholeAmountCancel = 1 select  @LBD = MAX(SVC00603.SVC_Coverage_End_Date),  @LSCD = MAX(SVC00603.SVC_Coverage_Start_Date),  @DR = MAX(SVC00603.SVC_Daily_Rate) from SVC00603  where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR AND  SVC00603.POSTED = 1 and   SVC00603.SVC_Coverage_Start_Date <= @MOVEDATE and   SVC00603.SVC_Coverage_End_Date >= @MOVEDATE IF @LBD is null BEGIN  select @LBD = MAX(SVC00603.SVC_Coverage_Start_Date),  @DR = MAX(SVC00603.SVC_Daily_Rate)  from  SVC00603   where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR AND  SVC00603.POSTED =0 and   SVC00603.SVC_Coverage_Start_Date <= @MOVEDATE and  SVC00603.SVC_Coverage_End_Date > @MOVEDATE   if  @LBD is null  begin  select @LBD = isnull(@LBD,@MOVEDATE)  select @LINECOUNTER = 0  end  else  select @LINECOUNTER = DATEDIFF(dd,@LBD,@MOVEDATE)+1  END  ELSE BEGIN  select @LINECOUNTER = DATEDIFF(dd,@LBD,@MOVEDATE) END  select @DR = isnull(@DR,0) if @MoveZero = 0   select @WholeCredits = sum(PSTDAMNT), @OrigWholeCredits = sum(ORIGPSTDAMNT)  from SVC00603 where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR AND  SVC00603.POSTED = 1 and   SVC00603.SVC_Coverage_Start_Date > @MOVEDATE if @WholeAmountCancel = 1  select @WholeCredits = sum(PSTDAMNT), @OrigWholeCredits = sum(ORIGPSTDAMNT) from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1 select @WholeCredits = isnull(@WholeCredits,0), @OrigWholeCredits = isnull(@OrigWholeCredits,0)  select @NEXTBILLDATE = MIN(SVC00603.INVODATE) from SVC00603  where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR AND  SVC00603.POSTED = 0  and   SVC00603.SVC_Coverage_End_Date >= @MOVEDATE  delete from SVC00603 with(rowlock)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  and   SVC_Coverage_End_Date > @MOVEDATE   if @WholeAmountCancel = 1  delete from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  select @N = MAX(SVC00603.SVC_Invoice_SEQ_Number) + 1 from SVC00603  where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR  select @svcFreqQty = svcFrequencyQty, @CreateRevenue = Liabiltiy_Reduction  from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR  select  @LIABILITY = SVC_Liability_Type,  @BillCycle = BILCYC,  @ContractLineStartDate = STRTDATE,  @ContractLineEndDate = ENDDATE,  @DiscountPercent = DSCPCTAM,  @TOTAL          = TOTAL,  @ORIGTOTAL = ORIGTOTAL,  @I_sRateCalcMethod = RATECALC,   @I_sViewMode = 3,            @I_sDecimalPlaces = DECPLACS,   @I_nDenomExchangeRate = DENXRATE,   @I_nExchangeRate = XCHGRATE,  @I_sMCTrxState = MCTRXSTT,  @CLBSD = BILSTRT from SVC00601  where SVC00601.CONSTS = @CONSTS and  SVC00601.CONTNBR = @CONTNBR and  SVC00601.LNSEQNBR = @LNSEQNBR if not exists(select * from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR)  select @I_nExchangeRate = XCHGRATE from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR  select @NumberOfDays = DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate) + 1.0 select @OrigDR = @ORIGTOTAL / @NumberOfDays  exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @OrigDR , @DR OUTPUT,   @O_iErrorState OUTPUT  exec SVC_Convert_Amount @I_sRateCalcMethod, 3,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @DEDUCTIONAMOUNT , @ORIGDEDUCTIONAMOUNT OUTPUT, @O_iErrorState OUTPUT   select @N = isnull(@N,1) select @OrigTotalInvoiced = sum(ORDOCAMT) - sum(ORDDLRAT), @TotalInvoiced = sum(DOCAMNT) - sum(DSCDLRAM)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @OrigTotalInvoiced = isnull(@OrigTotalInvoiced,0), @TotalInvoiced = isnull(@TotalInvoiced,0)  if @LIABILITY > 1  select @LIABILITYAMOUNT = sum(Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  and Source_Trx_Document_Type <> 'CAL' if @LIABILITY > 1 and @LIABILITYAMOUNT > 0 and @TOTAL > 0   Begin   select @NewDocumentAmount = @TOTAL - @LIABILITYAMOUNT ,  @OrigNewDocumentAmount = @ORIGTOTAL - @ORIGLIABILITYAMOUNT  select @LINECOUNTER = DATEDIFF(dd,@ContractLineStartDate,@MOVEDATE)+1   if @ContractLineStartDate = @MOVEDATE  select @LINECOUNTER = @LINECOUNTER -1, @CoverageStartDate = @MOVEDATE  else  select @CoverageStartDate = DATEADD(day,1,@MOVEDATE)    select @Rate = @LINECOUNTER / (DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate)+1 )  select @NewDocumentAmount = (@NewDocumentAmount * @Rate) + @LIABILITYAMOUNT,  @OrigNewDocumentAmount = (@OrigNewDocumentAmount * @Rate) + @ORIGLIABILITYAMOUNT   if (@NewDocumentAmount + @DEDUCTIONAMOUNT) > @TOTAL or @MoveZero = 1  select @NewDocumentAmount = @TOTAL, @OrigNewDocumentAmount = @ORIGTOTAL  else  select @NewDocumentAmount = @NewDocumentAmount + @DEDUCTIONAMOUNT,  @OrigNewDocumentAmount = @OrigNewDocumentAmount + @ORIGDEDUCTIONAMOUNT   if @NewDocumentAmount > @TotalInvoiced   insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @N,  IsNull(@MOVEDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  isnull((@NewDocumentAmount - @TotalInvoiced),0),  @LBD,  @MOVEDATE,  0,  @MinDate,  0,  0,  @DR,  0,  isnull((@OrigNewDocumentAmount - @OrigTotalInvoiced),0),  0,  0,  0,0,'',0)  else if @NewDocumentAmount < @TotalInvoiced  insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @N,  IsNull(@MOVEDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  0 ,  @CoverageStartDate,  IsNull(@LBD,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),   0,  @MinDate,  0,  isnull((@TotalInvoiced - @NewDocumentAmount),0),  @DR,  0,  0,   0,  isnull((@OrigTotalInvoiced - @OrigNewDocumentAmount),0),  0,0,'',0)  End ELSE  Begin  IF (@LINECOUNTER > 0 and @TOTAL > 0 and @ContractLineStartDate <> @MOVEDATE) or @MoveZero = 1  BEGIN  select @LINEBILLED = @OrigDR * @LINECOUNTER  select @OrigDiscountAmount = (@LINEBILLED *(@DiscountPercent/10000.0))   select @OrigNewDocumentAmount = (@OrigDR * @LINECOUNTER)   exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @OrigNewDocumentAmount, @NewDocumentAmount OUTPUT, @O_iErrorState OUTPUT   exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @OrigDiscountAmount, @DiscountAmount OUTPUT, @O_iErrorState OUTPUT   if ((@NewDocumentAmount + @TotalInvoiced + @DEDUCTIONAMOUNT ) > @TOTAL) or @MoveZero = 1  select @NewDocumentAmount = @TOTAL - @TotalInvoiced , @OrigNewDocumentAmount = @ORIGTOTAL - @OrigTotalInvoiced  else  select @NewDocumentAmount = @NewDocumentAmount + @DEDUCTIONAMOUNT,  @OrigNewDocumentAmount = @OrigNewDocumentAmount + @ORIGDEDUCTIONAMOUNT   insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @N,  IsNull(@MOVEDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  isnull(@NewDocumentAmount,0),  @LBD,  @MOVEDATE,  0,  @MinDate,  0,  0,  @DR,  IsNull(@DiscountAmount,0),  isnull(@OrigNewDocumentAmount,0),  0,  0,  IsNull(@OrigDiscountAmount,0),0,'',0)  END   ELSE IF @LINECOUNTER < 0 or @OrigWholeCredits > 0 or (@WholeAmountCancel = 1 and @OrigWholeCredits = 0)  BEGIN  if @LINECOUNTER < 0 or @OrigWholeCredits > 0  begin  select @LBD = MAX(SVC00603.SVC_Coverage_End_Date) from SVC00603   where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR AND  SVC00603.POSTED = 1   if @ContractLineStartDate = @MOVEDATE  BEGIN  select @NewDocumentAmount = sum(PSTDAMNT), @OrigNewDocumentAmount = sum(ORIGPSTDAMNT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and  LNSEQNBR = @LNSEQNBR and POSTED = 1   select @CoverageStartDate = @MOVEDATE  END  else  BEGIN  select @CoverageStartDate = DATEADD(day,1,@MOVEDATE)   select @OrigNewDocumentAmount = @OrigWholeCredits+  round((@OrigDR * (-1 * @LINECOUNTER) * (1-@DiscountPercent/10000.0)  ),2)  exec SVC_Convert_Amount @I_sRateCalcMethod, 4,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @OrigNewDocumentAmount, @NewDocumentAmount OUTPUT, @O_iErrorState OUTPUT   END  end  else  select @CoverageStartDate = @MOVEDATE, @LBD = @MOVEDATE, @OrigNewDocumentAmount = 0, @NewDocumentAmount = 0   if (@TotalInvoiced - @NewDocumentAmount + @DEDUCTIONAMOUNT ) < @TOTAL  Begin  select @NewDocumentAmount = @NewDocumentAmount - @DEDUCTIONAMOUNT,  @OrigNewDocumentAmount = @OrigNewDocumentAmount - @ORIGDEDUCTIONAMOUNT  if @NewDocumentAmount > 0  insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @N,  IsNull(@MOVEDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  0 ,  @CoverageStartDate,   IsNull(@LBD,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),   0,  @MinDate,  0,  @NewDocumentAmount,  @DR,  0,  0,   0,  @OrigNewDocumentAmount,  0,0,'',0)  else   insert into SVC00603 with (ROWLOCK)  VALUES(@CONSTS,  @CONTNBR,  @LNSEQNBR,   @N,  IsNull(@MOVEDATE,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),  @NewDocumentAmount *(-1),  @CoverageStartDate,   IsNull(@LBD,CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00'),   0,  @MinDate,  0,  0,  @DR,  0,  @OrigNewDocumentAmount * (-1),   0,  0,  0,0,'',0)   End   select @LINECREDIT = @OrigWholeCredits+round(@OrigDR * (-1 * @LINECOUNTER),2)  select @OrigDiscountAmount = ((@LINECREDIT / (1-@DiscountPercent/10000.0)) - @LINECREDIT) * -1  select @LINECREDIT = (@LINECREDIT - @OrigDiscountAmount)  END  End   select  @NEXTBILLDATE = MIN(SVC00603.INVODATE),  @BILLAMOUNT = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)),  @ORIGBILLAMOUNT = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)),  @CNUMOFINV = count(*) from SVC00603  where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.LNSEQNBR = @LNSEQNBR AND  SVC00603.POSTED = 0  select  @NewTotal = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0) - IsNull(SVC00603.DSCDLRAM,0)),   @OrigNewTotal = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0) - IsNull(SVC00603.ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @OrigNewTotal = @ORIGTOTAL - @OrigNewTotal, @NewTotal = @TOTAL - @NewTotal, @ORIGOldTotal = @ORIGTOTAL  if @CLBSD > @MOVEDATE select @CLBSD = @MOVEDATE update SVC00601 with (ROWLOCK) set SVC00601.NUMOFINV = isnull(@CNUMOFINV,0),  SVC00601.NXTBLDTE = IsNull(@NEXTBILLDATE,'January 1, 2999'),   SVC00601.Amount_To_Invoice = IsNull(@BILLAMOUNT,0),  SVC00601.Orig_Amount_To_Invoice = IsNull(@ORIGBILLAMOUNT,0),   SVC00601.ENDDATE = @MOVEDATE,  SVC00601.BILSTRT = @CLBSD,  SVC00601.BILEND = @MOVEDATE,  SVC00601.Contract_Line_Status = 'M',  SVC00601.BILSTAT = 2 where SVC00601.CONSTS = @CONSTS and  SVC00601.CONTNBR = @CONTNBR and  SVC00601.LNSEQNBR = @LNSEQNBR IF @BillCycle > 0 and @CONSTS = 2  BEGIN  if @LIABILITY = 1 and (@BillCycle > 3 or (@BillCycle = 3 and @CreateRevenue = 1))    Begin  exec SVC_RET_Cancel_Revenue_Recognition_Lines @CONSTS,@CONTNBR,@LNSEQNBR,@MOVEDATE,@UserID,@ErrorCondition OUTPUT  if @ErrorCondition = 1113  begin  select @TotalInvoiced = sum(DOCAMNT)-sum(SVC_Invoice_Credit_Amoun)- sum(DSCDLRAM),@OrigTotalInvoiced = sum(ORDOCAMT)-sum(OrigInvCreditAmt)- sum(ORDDLRAT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   select @LIABILITYAMOUNT = sum(Net_Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigNetTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  if @TotalInvoiced <> @LIABILITYAMOUNT   begin  select @OrigDiffAmount = @ORIGLIABILITYAMOUNT - @OrigTotalInvoiced, @DiffAmount = @LIABILITYAMOUNT - @TotalInvoiced  select @N = max(SVC_Invoice_SEQ_Number) from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  select @TotalInvoiced = sum(DOCAMNT)-sum(SVC_Invoice_Credit_Amoun)- sum(DSCDLRAM),@OrigTotalInvoiced = sum(ORDOCAMT)-sum(OrigInvCreditAmt)- sum(ORDDLRAT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 0  if @TotalInvoiced > 0   update SVC00603 set DOCAMNT = DOCAMNT + @DiffAmount, ORDOCAMT = ORDOCAMT + @OrigDiffAmount where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @N  else  update SVC00603 set SVC_Invoice_Credit_Amoun = SVC_Invoice_Credit_Amoun - @DiffAmount, OrigInvCreditAmt = OrigInvCreditAmt - @OrigDiffAmount where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and SVC_Invoice_SEQ_Number = @N  end  end  End  else IF (@BillCycle > 3 or (@BillCycle = 3 and @svcFreqQty > 1)) and @CONSTS = 2  begin  select @LIABILITYAMOUNT = isnull(sum(Transaction_Amount),0), @ORIGLIABILITYAMOUNT = isnull(sum(OrigTransactionAmount),0),  @RevenueLine = max(LNITMSEQ) + 1  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  select @TotalInvoiced = SUM(IsNull(DOCAMNT,0) - IsNull(SVC_Invoice_Credit_Amoun,0))- SUM(isnull(DSCDLRAM,0)),  @OrigTotalInvoiced = SUM(IsNull(ORDOCAMT,0) - IsNull(OrigInvCreditAmt,0)) - SUM(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_GetFiscalPeriodDates @UserID, @MOVEDATE,@StartDate OUTPUT,  @EndDate OUTPUT, @YEAR1 OUTPUT, @PERIODID OUTPUT  if @LIABILITYAMOUNT <> @TotalInvoiced  insert into SVC00604 select  2, @CONTNBR, @LNSEQNBR, @YEAR1, @PERIODID, isnull(@RevenueLine,1), 0, @MinDate,  @MOVEDATE, @UserID, 0, 0, 'CAL',  CONVERT(varchar(1),2) + '-' + RTRIM(CONVERT(varchar(20),@CONTNBR)) + '-' + CONVERT(varchar(20),@LNSEQNBR),  @TotalInvoiced - @LIABILITYAMOUNT, @OrigTotalInvoiced - @ORIGLIABILITYAMOUNT,  @StartDate, @EndDate, 0, 0, 0, 0,  @TotalInvoiced - @LIABILITYAMOUNT, @OrigTotalInvoiced - @ORIGLIABILITYAMOUNT  end  END  select  @NEXTBILLDATE = MIN(SVC00603.INVODATE),  @BILLAMOUNT = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)),  @ORIGBILLAMOUNT = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)) from SVC00603  where SVC00603.CONSTS = @CONSTS and  SVC00603.CONTNBR = @CONTNBR and  SVC00603.POSTED = 0 SELECT  @CNUMOFINV = ISNULL(MAX(SVC00601.NUMOFINV),0),  @BillingStatus = MIN(SVC00601.BILSTAT) FROM SVC00601  WHERE (SVC00601.CONSTS = @CONSTS AND SVC00601.CONTNBR = @CONTNBR) if @BillingStatus = 0 select @BillingStatus = 1 select @TOTAL = SUM(IsNull(SVC00603.DOCAMNT,0) - IsNull(SVC00603.SVC_Invoice_Credit_Amoun,0)),  @ORIGTOTAL = SUM(IsNull(SVC00603.ORDOCAMT,0) - IsNull(SVC00603.OrigInvCreditAmt,0)),  @DiscountAmount = SUM(isnull(DSCDLRAM,0)) , @OrigDiscountAmount = SUM(isnull(ORDDLRAT,0))  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR UPDATE SVC00600  with (ROWLOCK) SET SVC00600.NUMOFINV = @CNUMOFINV,  SVC00600.NXTBLDTE = IsNull(@NEXTBILLDATE,@MaxDate),   SVC00600.Amount_To_Invoice = IsNull(@BILLAMOUNT,0),  SVC00600.Orig_Amount_To_Invoice = IsNull(@ORIGBILLAMOUNT,0),  TOTAL = IsNull(@TOTAL,0), ORIGTOTAL = IsNull(@ORIGTOTAL,0),  DSCDLRAM = isnull(@DiscountAmount,0), ORDDLRAT = isnull(@OrigDiscountAmount,0) FROM SVC00600 WHERE SVC00600.CONSTS = @CONSTS AND   SVC00600.CONTNBR = @CONTNBR return   
GO
GRANT EXECUTE ON  [dbo].[svcMoveContractLine] TO [DYNGRP]
GO

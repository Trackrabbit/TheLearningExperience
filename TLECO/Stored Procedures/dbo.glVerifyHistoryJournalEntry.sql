SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glVerifyHistoryJournalEntry]         @I_iJournalEntry        int             = NULL,  @I_sBatchFrequency      smallint        = NULL,  @sHdrTransactionYear smallint = NULL,  @O_sPostingStatus       smallint        output,   @O_iErrorState          int             output  as  declare   @POSTED                 int,  @RECURRING_TRX   int,  @NEW                    int,  @iStatus                smallint,  @tTransaction           tinyint,  @iError int  if      ( (@I_iJournalEntry   is NULL)    or  (@I_sBatchFrequency is NULL) ) begin  select @O_iErrorState = 20818  return  end   select          @O_iErrorState = 0  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'POSTED',  @POSTED         output,  @O_iErrorState  output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return(@iStatus)  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'RECURRING_TRX',  @RECURRING_TRX          output,  @O_iErrorState  output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return(@iStatus)  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'NEW',  @NEW            output,  @O_iErrorState  output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return(@iStatus)  select @O_sPostingStatus = @NEW  if exists (  select  1  from  GL30000  where  JRNENTRY = @I_iJournalEntry AND HSTYEAR = @sHdrTransactionYear) begin   if @I_sBatchFrequency > 1   begin  select @O_sPostingStatus = @RECURRING_TRX  end  else  begin  select @O_sPostingStatus = @POSTED  end end  return    
GO
GRANT EXECUTE ON  [dbo].[glVerifyHistoryJournalEntry] TO [DYNGRP]
GO

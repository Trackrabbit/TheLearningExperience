SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create         PROCEDURE [dbo].[aagRenumberAAGLDistsALL]  @iHdrID int,  @oStatus smallint = NULL out AS  begin  set nocount on  declare @DistID int,  @ID int ,  @Max int  select  @DistID = 0,   @Max = 0   Update AAG10003  Set aaGLWorkDistID = aaGLWorkDistID * -1  Where aaGLWorkHdrID = @iHdrID  Update AAG10002  Set aaGLWorkDistID = aaGLWorkDistID * -1  Where aaGLWorkHdrID = @iHdrID  Update AAG10001  Set aaGLWorkDistID = aaGLWorkDistID * -1  Where aaGLWorkHdrID = @iHdrID  DECLARE Cur1 cursor fast_forward FOR  SELECT aaGLWorkDistID FROM AAG10001  Where aaGLWorkHdrID = @iHdrID and aaOFFSETAcct = 0  Order by aaOFFSETAcct , SQNCLINE  OPEN Cur1  FETCH NEXT FROM Cur1 INTO @DistID  select @ID = 1  while @@FETCH_STATUS = 0  Begin  Update AAG10003  Set aaGLWorkDistID = @ID  Where aaGLWorkHdrID = @iHdrID and aaGLWorkDistID = @DistID  IF @@error <> 0  goto errlbl  Update AAG10002  Set aaGLWorkDistID = @ID  Where aaGLWorkHdrID = @iHdrID and aaGLWorkDistID = @DistID  IF @@error <> 0  goto errlbl  Update AAG10001  Set aaGLWorkDistID = @ID  Where aaGLWorkHdrID = @iHdrID and aaGLWorkDistID = @DistID  IF @@error <> 0  goto errlbl   set @ID = @ID + 1   FETCH NEXT FROM Cur1 INTO @DistID   End   errlbl:  close Cur1  deallocate Cur1  Select @Max = isnull(max(aaGLWorkDistID),0)+1  from AAG10001 where aaGLWorkHdrID = @iHdrID and  aaGLWorkDistID > 0 and  aaOFFSETAcct = 0  update AAG10001 set aaGLWorkDistID = @Max where  aaGLWorkHdrID = @iHdrID and aaGLWorkDistID < 0  update AAG10002 set aaGLWorkDistID = @Max where  aaGLWorkHdrID = @iHdrID and aaGLWorkDistID < 0  update AAG10003 set aaGLWorkDistID = @Max where  aaGLWorkHdrID = @iHdrID and aaGLWorkDistID < 0  set nocount off end    
GO
GRANT EXECUTE ON  [dbo].[aagRenumberAAGLDistsALL] TO [DYNGRP]
GO

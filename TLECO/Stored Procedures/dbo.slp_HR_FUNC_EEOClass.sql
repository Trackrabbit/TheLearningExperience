SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[slp_HR_FUNC_EEOClass] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlaccessstring varchar(1000),  @I_iDictID int, @I_sFunctionName varchar(100), @I_iFunctionEnum int, @First_Mid_Level_Officials_and_MGRs varchar(255),  @Professionals varchar(255),  @Technicians varchar(255),  @Sales_Workers varchar(255),  @Administrative_Support_Workers varchar(255),  @Craft_Workers varchar(255),  @Operatives varchar(255),  @Laborers_and_Helpers varchar(255),  @Service_Workers varchar(255),  @Ex_SR__Level_officials_and_MGRs varchar(255),  @Officials_and_Administrators varchar(255),  @Protective_Service_Workers varchar(255),  @Paraprofessionals varchar(255),  @Administrative_Support_Including_Clerical_and_Sales varchar(255),  @Skilled_Craft_Workers varchar(255),  @Service_Maintenance varchar(255)  select @I_iDictID =414 select @I_sFunctionName = 'HR_FUNC_EEOClass' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @First_Mid_Level_Officials_and_MGRs output  select @I_iFunctionEnum = 2 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Professionals output  select @I_iFunctionEnum = 3 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Technicians output  select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Sales_Workers output  select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Administrative_Support_Workers output  select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Craft_Workers output  select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Operatives output  select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Laborers_and_Helpers output  select @I_iFunctionEnum = 9 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Service_Workers output  select @I_iFunctionEnum = 10 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Ex_SR__Level_officials_and_MGRs output   select @I_sFunctionName = 'DYN_FUNC_EEOClass4' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Officials_and_Administrators output  select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Protective_Service_Workers output  select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Paraprofessionals output  select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Administrative_Support_Including_Clerical_and_Sales output  select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Skilled_Craft_Workers output  select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @Service_Maintenance output   select @sqldropstring =  'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[HR_FUNC_EEOClass]'') and xtype in (N''FN'',N''IF'',N''TF'')) ' +  'drop function [dbo].[HR_FUNC_EEOClass] '  select @sqlstring1 =  'create function [dbo].[HR_FUNC_EEOClass] (@iIntEnum integer, @EEOClassPref integer) returns varchar(100) ' +  'as  '+ 'begin  '+ 'declare @oVarcharValuestring varchar(100) ' + 'set @oVarcharValuestring = ' + 'case ' +  ' when @iIntEnum = 1 then ' + ' case when @EEOClassPref = 0 then ''' + @First_Mid_Level_Officials_and_MGRs + '''' +  ' when @EEOClassPref = 1 then ''' + @Officials_and_Administrators + '''' + ' else '''' ' +  ' end ' +  ' when @iIntEnum = 2 then ''' + @Professionals + '''' +  ' when @iIntEnum = 3 then ''' + @Technicians + '''' +  ' when @iIntEnum = 4 then ' + ' case when @EEOClassPref = 0 then ''' + @Sales_Workers + '''' +  ' when @EEOClassPref = 1 then ''' + @Protective_Service_Workers + '''' + ' else '''' ' +  ' end ' +  ' when @iIntEnum = 5 then ' + ' case when @EEOClassPref = 0 then ''' + @Administrative_Support_Workers + '''' +  ' when @EEOClassPref = 1 then ''' + @Paraprofessionals + '''' + ' else '''' ' +  ' end ' +  ' when @iIntEnum = 6 then ' +  ' case when @EEOClassPref = 0 then ''' + @Craft_Workers + '''' +  ' when @EEOClassPref = 1 then ''' + @Administrative_Support_Including_Clerical_and_Sales + '''' + ' else '''' ' +  ' end ' +  ' when @iIntEnum = 7 then ' + ' case when @EEOClassPref = 0 then ''' + @Operatives + '''' +  ' when @EEOClassPref = 1 then ''' + @Skilled_Craft_Workers + '''' + ' else '''' ' +  ' end ' +  ' when @iIntEnum = 8 then ' + ' case when @EEOClassPref = 0 then ''' + @Laborers_and_Helpers + '''' +  ' when @EEOClassPref = 1 then ''' + @Service_Maintenance + '''' + ' else '''' ' +  ' end ' + ' when @iIntEnum = 9 then ' + ' case when @EEOClassPref = 0 then ''' + @Service_Workers + '''' +  ' else '''' ' +  ' end ' + ' when @iIntEnum = 10 then ' + ' case when @EEOClassPref = 0 then ''' + @Ex_SR__Level_officials_and_MGRs + '''' +  ' else '''' ' +  ' end ' + ' else '''' ' +  ' end ' +  ' RETURN(@oVarcharValuestring) ' +  ' END '  exec (@sqldropstring)  exec (@sqlstring1+' '+@sqlstring2)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[slp_HR_FUNC_EEOClass] TO [DYNGRP]
GO

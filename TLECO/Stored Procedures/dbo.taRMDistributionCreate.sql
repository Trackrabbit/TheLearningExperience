SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMDistributionCreate]  @I_vRMDTYPAL  smallint, @I_vDOCNUMBR  char(20), @I_vCUSTNMBR  char(15), @I_vCURRNIDX  int, @I_vCURNCYID  char(15), @I_vPTDUSRID  char(15) = '', @I_vTRADEAMT  numeric(19,5) = 0, @I_vFREIGHTAMT  numeric(19,5) = 0, @I_vMISCAMNT  numeric(19,5) = 0, @I_vCASHAMT  numeric(19,5), @I_vCashCHEKBKID char (15), @I_vCheckCHEKBKID char (15), @I_vCHECKAMT  numeric(19,5), @I_vCRCRDAMT  numeric(19,5), @I_vTDISTKAMT  numeric(19,5) = 0, @I_vDISAVAMT  numeric (19, 5) = 0, @I_vCRCRDNAM  char(15), @I_vDISCRTND  numeric(19,5) = 0, @I_vDOCAMNT  numeric(19,5), @I_vSLSAMNT  numeric(19,5) = 0, @I_vCOSTAMNT  numeric(19,5) = 0, @I_vCOMDLRAM  numeric (19, 5) = 0,  @I_vRATETPID  char(15)='',   @I_vXCHGRATE  numeric(19,7)=0,  @I_vEXCHDATE  datetime = '',   @I_vEXPNDATE datetime = '',   @I_vEXGTBLID  char(15) = '',   @I_vTIME1  datetime = '',   @I_vFNDECPLCUR int = 0,   @I_vORCTRXAM  numeric(19,5) = 0,  @I_vORSLSAMT  numeric(19,5) = 0,  @I_vORCSTAMT  numeric(19,5) = 0,    @I_vORFRTAMT  numeric(19,5) = 0,  @I_vORMISCAMT  numeric(19,5) = 0,  @I_vORTAXAMT  numeric(19,5) = 0,  @I_vORCASAMT  numeric(19,5) = 0,  @I_vORCHKAMT  numeric(19,5) = 0,  @I_vORCCDAMT  numeric(19,5) = 0,  @I_vORAPPAMT  numeric(19,5) = 0,  @I_vORDISTKN  numeric(19,5) = 0,  @I_vORDAVAMT  numeric(19,5) = 0,  @I_vORDATKN  numeric(19,5) = 0,  @I_vORDISRTD  numeric(19,5) = 0,       @I_vORDDLRAT  numeric(19,5) = 0,       @I_vORTDISAM  numeric(19,5) = 0,       @I_vORORGTRX  numeric(19,5) = 0,     @I_vORWROFAM  numeric(19,5) = 0,  @I_vORCOMAMT  numeric(19,5) = 0,  @I_vORBKTSLS  numeric(19,5) = 0,  @I_vORBKTFRT  numeric(19,5) = 0,  @I_vORBKTMSC  numeric(19,5) = 0,   @I_vApply smallint = 0,   @I_vTRXSORCE char(13) = '',   @I_vWROFAMNT numeric(19,5) = 0,  @I_vDistRef  char(30) = '',   @I_vPOSTEDDT datetime = '',   @I_vCMPANYID    smallint = 0,   @I_vINTERID char(5) = '',   @I_vRTCLCMTD  smallint = -1,   @I_vDECPLCUR int = 0,   @I_vCREATEDIST  int = 1,   @O_iErrorState int = NULL output,  @oErrString  varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @SEQNUMB int,  @ROUNDACCT int,  @FUNLCURRINDEX int,  @ISMCTRX smallint,  @O_iErrorStateAASub int,  @O_iErrorStringAASub varchar(255),  @itaProcessAnalyticsErrState int,  @itaProcessAnalyticsErrString varchar(8000),  @aaSubLedgerHdrID int,  @RNDDIFFAccount int,   @ORTaxTotal numeric(19,5),  @O_oErrorState  int,  @cDTYPE int,  @cDTAMT numeric(19,5),  @cCTAMT numeric(19,5),  @cORDTAMT numeric(19,5),  @cORCTAMT numeric(19,5),  @DTAREF char(25),  @iCursorError int,  @AcctRecvAccount int,  @DistributionAccount int,  @cINDEX int,  @iStatus int,  @iError int,  @PYMTTYPE smallint,  @TaxTotal numeric(19,5),  @CashAccount int,  @round numeric(19,5),  @RNDDIFF int,  @RMTRKDAV tinyint,  @PaidOff tinyint  select  @ISMCTRX = 1,  @O_iErrorStateAASub = 0,  @O_iErrorStringAASub = '',  @itaProcessAnalyticsErrState = 0,  @itaProcessAnalyticsErrString = '',  @aaSubLedgerHdrID = 0,  @RNDDIFFAccount = 0,  @ORTaxTotal = 0,  @O_iErrorState = 0,  @DTAREF = '',  @TaxTotal = 0,  @iStatus = 0,  @O_oErrorState = 0,  @round = 0,  @RNDDIFF = 0,  @RMTRKDAV = 0,  @PaidOff = 0  if @I_vPOSTEDDT = '' begin  select @I_vPOSTEDDT = cast(getdate() as varchar(12)) end  if (  @I_vRMDTYPAL is null or  @I_vDOCNUMBR is null or  @I_vCUSTNMBR is null or  @I_vCURRNIDX is null or  @I_vCURNCYID is null or  @I_vPTDUSRID is null or  @I_vTRADEAMT is null or  @I_vFREIGHTAMT is null or  @I_vMISCAMNT is null or  @I_vCASHAMT is null or  @I_vCHECKAMT is null or  @I_vCRCRDAMT is null or  @I_vTDISTKAMT is null or  @I_vDISCRTND is null or    @I_vDOCAMNT is null or  @I_vCashCHEKBKID  is null or  @I_vCheckCHEKBKID is null or  @I_vSLSAMNT is null or  @I_vRATETPID  is null or    @I_vXCHGRATE  is null or    @I_vEXCHDATE  is null or    @I_vEXPNDATE  is null or    @I_vEXGTBLID  is null or    @I_vTIME1 is null or     @I_vRTCLCMTD is null or    @I_vFNDECPLCUR is null or    @I_vORCTRXAM  is null or     @I_vORSLSAMT  is null or     @I_vORCSTAMT  is null or     @I_vORFRTAMT  is null or     @I_vORMISCAMT  is null or     @I_vORTAXAMT  is null or     @I_vORCASAMT  is null or     @I_vORCHKAMT  is null or     @I_vORCCDAMT  is null or     @I_vORAPPAMT  is null or     @I_vORDISTKN  is null or     @I_vORDAVAMT  is null or     @I_vORDATKN  is null or     @I_vORDISRTD  is null or     @I_vORDDLRAT  is null or     @I_vORTDISAM  is null or     @I_vORORGTRX  is null or     @I_vORWROFAM  is null or     @I_vORCOMAMT  is null or     @I_vORBKTSLS  is null or     @I_vORBKTFRT  is null or     @I_vORBKTMSC  is null or      @I_vApply is null or    @I_vTRXSORCE is null or    @I_vDistRef  is null or    @I_vCMPANYID    is null or    @I_vINTERID is null or    @I_vRTCLCMTD  is null or    @I_vDECPLCUR is null or    @I_vCREATEDIST  is null )   begin  select @O_iErrorState = 629    return (@O_iErrorState) end  select  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vCashCHEKBKID  = UPPER(@I_vCashCHEKBKID),  @I_vCheckCHEKBKID = UPPER(@I_vCheckCHEKBKID)  select @RMTRKDAV = RMTRKDAV from RM40101 (nolock)  if (@I_vPTDUSRID = 'PAID') begin  select @PaidOff = 1, @I_vPTDUSRID = '' end  if @I_vRTCLCMTD not in (0,1) begin  select @I_vXCHGRATE = 0, @I_vXCHGRATE = 0, @I_vTIME1 = '', @ISMCTRX = 0  end  if @I_vCREATEDIST = 1 begin  select @DTAREF = rtrim(@I_vDOCNUMBR) + space(20 - len(@I_vDOCNUMBR)) + cast(@I_vRMDTYPAL as char(1))   if (exists (select 1 from DTA10100 (nolock) where DTASERIES = 3 and DTAREF = @DTAREF))  begin  delete DTA10100 where DTASERIES = 3 and DTAREF = @DTAREF  if (@@error <> 0)  begin  select @O_iErrorState = 3626    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (exists (select 1 from DTA10200 (nolock) where DTASERIES = 3 and DTAREF = @DTAREF))  begin  delete DTA10200 where DTASERIES = 3 and DTAREF = @DTAREF  if (@@error <> 0)  begin  select @O_iErrorState = 3627    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   create table #temp (DTYPE int, DTAMT numeric(19,5), CTAMT numeric(19,5), ORDTAMT numeric(19,5), ORCTAMT numeric(19,5), DTINDEX int)   if (@I_vRMDTYPAL = 1)   begin  select @DistributionAccount = isnull(RMSLSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1100   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 9, 0, 0, 0, @I_vORSLSAMT - @I_vORBKTSLS, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800   select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 700   if(@I_vORDAVAMT - @I_vORDISTKN > 0)  begin  if (@RMTRKDAV = 1)         begin   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT - @I_vORDISTKN, 0, @DistributionAccount  end  end  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, isnull(sum(ORTAXAMT),0), ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX   select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, @I_vORDISTKN, 0, @DistributionAccount   select @AcctRecvAccount = isnull(RMARACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100   if (@RMTRKDAV = 1)         begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3,  0,  0,  case  when @I_vORDAVAMT > @I_vORDISTKN  then @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT - @I_vORDAVAMT  else @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT - @I_vORDISTKN  end,  0,  @AcctRecvAccount  end  else        begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3,  0,  0,  case  when @I_vORDAVAMT > @I_vORDISTKN  then @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT   else @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT   end,  0,  @AcctRecvAccount  end   select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 23, 0, 0, @I_vORCOMAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2300   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 24, 0, 0, 0, @I_vORCOMAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2200  end   if (@I_vRMDTYPAL = 3)   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 18, 0, 0, 0, @I_vORSLSAMT - @I_vORBKTSLS, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 400   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, isnull(sum(ORTAXAMT),0), ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX   select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   if(@I_vORDAVAMT - @I_vORDISTKN > 0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT - @I_vORDISTKN, 0, @DistributionAccount  end   select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, @I_vORDISTKN, 0, @DistributionAccount   select @AcctRecvAccount = isnull(RMARACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3,  0,  0,  case  when @I_vORDAVAMT > @I_vORDISTKN  then @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT - @I_vORDAVAMT  else @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT - @I_vORDISTKN  end,  0,  @AcctRecvAccount   select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 23, 0, 0, @I_vORCOMAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2300   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 24, 0, 0, 0, @I_vORCOMAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2200  end   if (@I_vRMDTYPAL = 4)   begin  select @DistributionAccount = isnull(RMFCGACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 800   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 16, 0, 0, 0, @I_vORSLSAMT - @I_vORBKTSLS, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800   select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   if(@I_vORDAVAMT - @I_vORDISTKN > 0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT - @I_vORDISTKN, 0, @DistributionAccount  end   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, isnull(sum(ORTAXAMT),0), ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX   select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, @I_vORDISTKN, 0, @DistributionAccount   select @AcctRecvAccount = isnull(RMARACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3,  0,  0,  case  when @I_vORDAVAMT > @I_vORDISTKN  then @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT - @I_vORDAVAMT  else @I_vORORGTRX - @I_vORCASAMT - @I_vORCHKAMT - @I_vORCCDAMT - @I_vORDISTKN  end,  0,  @AcctRecvAccount   select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount  end   if (@I_vRMDTYPAL = 5)   begin  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1300  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 20, 0, 0, 0, @I_vORSLSAMT - @I_vORBKTSLS, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800   select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   if(@I_vORDAVAMT - @I_vORDISTKN > 0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT - @I_vORDISTKN, 0, @DistributionAccount  end   insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX )  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700    insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, isnull(sum(ORTAXAMT),0), ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX   select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, @I_vORDISTKN, 0, @DistributionAccount   select @AcctRecvAccount = isnull(RMARACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3, 0, 0, @I_vORCTRXAM, 0, @AcctRecvAccount   select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 23, 0, 0, @I_vORCOMAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2300   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 24, 0, 0, 0, @I_vORCOMAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2200  end   if (@I_vRMDTYPAL = 6)   begin  select @TaxTotal = sum(TAXAMNT), @ORTaxTotal = isnull(sum(ORTAXAMT),0)  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL   select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 21, 0, 0, @I_vORSLSAMT+@ORTaxTotal, 0, @DistributionAccount   select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1400   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 22, 0, 0, 0, @I_vORSLSAMT, @DistributionAccount   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX   from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, isnull(sum(ORTAXAMT),0), ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX   select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount  end   if (@I_vRMDTYPAL = 7)   begin  select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount  end   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount  end   if (@I_vApply in (0,3,4))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 19, 0, 0, @I_vORSLSAMT - @I_vORBKTSLS, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 300  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 19, 0, 0, 0, @I_vORSLSAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 300  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10,  0 , 0, 0, @I_vORTDISAM, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, @I_vORFRTAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, @I_vORMISCAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700  end   select @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(RMARACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if @AcctRecvAccount = 0  select @AcctRecvAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100   if (@I_vApply = 0)   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3, 0, 0, 0, @I_vORCTRXAM, @AcctRecvAccount   end  else  if (@I_vApply in (5,6))   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3, 0, 0, @I_vORCTRXAM, 0, @AcctRecvAccount   end  else   if (@I_vApply in (1,2,3,4))  begin    if (@I_vApply in (1,2))  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select  3,   0,   0,   case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM < 0  then abs(@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM < 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM < 0))  then abs(@I_vORDISTKN + @I_vORWROFAM)  else 0  end,  case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM > 0  then (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM > 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM > 0))  then @I_vORDISTKN + @I_vORWROFAM  else 0  end,  @AcctRecvAccount  else   if (@I_vApply in (3,4))  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select  3,   0,   0,   case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM > 0  then (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM > 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM > 0))  then @I_vORDISTKN + @I_vORWROFAM  else 0  end,  case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM < 0  then abs(@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM < 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM < 0))  then abs(@I_vORDISTKN + @I_vORWROFAM)  else 0  end,  @AcctRecvAccount  end   select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   if (@I_vApply = 0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, 0, @I_vORDISRTD, @DistributionAccount  end  else  if (@I_vApply in (3,4))   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, 0, @I_vORDISTKN, @DistributionAccount  end  if (@I_vApply in (1,2))   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0,0, @I_vORDISTKN, 0,  @DistributionAccount  end   if (@I_vApply in (1,2))  begin  select @DistributionAccount = isnull(RMWRACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 4, 0, 0, @I_vORWROFAM, 0, @DistributionAccount  end  else  if (@I_vApply in (3,4))  begin  select @DistributionAccount = isnull(RMWRACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1600  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 4, 0, 0, 0, @I_vORWROFAM, @DistributionAccount  end   if (@RMTRKDAV = 1 and @PaidOff = 1)   begin  if (@I_vORDAVAMT > 0)  begin  select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  end   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 700   if (@DistributionAccount = 0) and (@I_vApply in (1,2))  begin  select @O_iErrorState = 9517     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vApply in (1,2))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT, 0, @DistributionAccount  end  else  if (@I_vApply in (3,4))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, 0, @I_vORDAVAMT,  @DistributionAccount  end  end   if (@I_vApply in (1,2))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, isnull(sum(ORTAXAMT),0), 0, ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL   group by RMDTYPAL, DOCNUMBR, ACTINDX  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, case when @I_vORTAXAMT <> 0 then isnull(sum(ORTAXAMT),0) else 0 end, ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX  end  else  if (@I_vApply = 0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, isnull(sum(ORTAXAMT),0), 0, ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX  end  end   if (@I_vRMDTYPAL = 8)   begin  select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   if (@I_vApply in (1,2))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0 , 0, @I_vORDISTKN, 0, @DistributionAccount  end  if (@I_vApply in (0,3,4))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0 , 0, @I_vORDISTKN, @DistributionAccount  end   select @AcctRecvAccount = 0   select @AcctRecvAccount = RMARACC from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  select @AcctRecvAccount = isnull(@AcctRecvAccount,0)   if (@AcctRecvAccount = 0)  begin  select @AcctRecvAccount = ACTINDX from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100  end   select @AcctRecvAccount = isnull(@AcctRecvAccount,0)   if (@I_vApply = 0)   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3, 0, 0, 0, @I_vORCTRXAM-@I_vORDISRTD, @AcctRecvAccount  end  else  if (@I_vApply in (5,6))   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3, 0, 0, @I_vORCTRXAM, 0, @AcctRecvAccount   end  else   if (@I_vApply in (1,2,3,4))  begin    if (@I_vApply in (1,2))  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select  3,   0,   0,   case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM < 0  then abs(@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM < 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM < 0))  then abs(@I_vORDISTKN + @I_vORWROFAM)  else 0  end,  case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM > 0  then (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM > 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM > 0))  then @I_vORDISTKN + @I_vORWROFAM  else 0  end,  @AcctRecvAccount  else   if (@I_vApply in (3,4))  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select  3,   0,   0,   case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM > 0  then (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM > 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM > 0))  then @I_vORDISTKN + @I_vORWROFAM  else 0  end,  case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM < 0  then abs(@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM < 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM < 0))  then abs(@I_vORDISTKN + @I_vORWROFAM)  else 0  end,  @AcctRecvAccount  end   select @DistributionAccount = isnull(RMWRACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1600   if (@I_vApply in (1,2))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 4, 0, 0, @I_vORWROFAM, 0, @DistributionAccount  end  else  if (@I_vApply in (3,4))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 4, 0, 0, 0, @I_vORWROFAM, @DistributionAccount  end   if (@RMTRKDAV = 1 and @PaidOff = 1)   begin  select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 700   if (@I_vApply in (1,2))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT, 0, @DistributionAccount  end  else  if (@I_vApply in (3,4))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, 0, @I_vORDAVAMT,  @DistributionAccount  end  end   else  if (@I_vApply in (3,4))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, 0, @I_vORDAVAMT, @DistributionAccount  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, 0, @I_vORTDISAM, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 10, 0, 0, @I_vORTDISAM, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 600  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, @I_vORFRTAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 11, 0, 0, 0, @I_vORFRTAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1800  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, @I_vORMISCAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 12, 0, 0, 0, @I_vORMISCAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1700  end   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, isnull(sum(ORTAXAMT),0), 0, ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 13, 0, 0, 0, case when @I_vORTAXAMT <> 0 then isnull(sum(ORTAXAMT),0) else 0 end, ACTINDX  from RM10601 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL  group by RMDTYPAL, DOCNUMBR, ACTINDX  end   select @DistributionAccount = isnull(RMCOSACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 200   if (@I_vApply = 0)   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount  end  else  if @I_vApply in (5,6)   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 14, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount  end   select @DistributionAccount = isnull(RMIVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 900   if @I_vApply in (0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, @I_vORCSTAMT, 0, @DistributionAccount  end  else  if @I_vApply in (5,6)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 15, 0, 0, 0, @I_vORCSTAMT, @DistributionAccount  end   select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1200   if (@I_vApply in (0))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 17, 0, 0, @I_vORSLSAMT - @I_vORBKTSLS, 0, @DistributionAccount  end  else  if (@I_vApply in (5,6))  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 17, 0, 0 , 0 , @I_vORSLSAMT, @DistributionAccount  end   if @I_vApply in (0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 23, 0, 0, 0, @I_vORCOMAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2300  end  else  if @I_vApply in (5,6)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 23, 0, 0, @I_vORCOMAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2300  end   if @I_vApply in (0)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 24, 0, 0, @I_vORCOMAMT, 0, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2200  end  else  if @I_vApply in (5,6)  begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 24, 0, 0, 0, @I_vORCOMAMT, ACTINDX  from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2200  end  end   if (@I_vRMDTYPAL = 9)  begin  if (@I_vApply in (1,2))  begin  select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, @I_vORDISTKN, 0, @DistributionAccount  end  else  if (@I_vApply in (3,4))  begin  select @DistributionAccount = isnull(RMTAKACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 500   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 2, 0, 0, 0, @I_vORDISTKN, @DistributionAccount   end   select @AcctRecvAccount = 0   select @AcctRecvAccount = RMARACC from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  select @AcctRecvAccount = isnull(@AcctRecvAccount,0)   if (@AcctRecvAccount = 0)  begin  select @AcctRecvAccount = ACTINDX from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 100  end   select @AcctRecvAccount = isnull(@AcctRecvAccount,0)   if (@I_vApply = 0)   begin  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 3, 0, 0, 0, @I_vORCTRXAM, @AcctRecvAccount   end  else  if (@I_vApply in (1,2,3,4))  begin    if (@I_vApply in (1,2))  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select  3,   0,   0,   case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM < 0  then abs(@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM < 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM < 0))  then abs(@I_vORDISTKN + @I_vORWROFAM)  else 0  end,  case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM > 0  then (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM > 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM > 0))  then @I_vORDISTKN + @I_vORWROFAM  else 0  end,  @AcctRecvAccount  else   if (@I_vApply in (3,4))  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select  3,   0,   0,   case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM > 0  then (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM > 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM > 0))  then @I_vORDISTKN + @I_vORWROFAM  else 0  end,  case     when @PaidOff = 1 and @RMTRKDAV = 1 and (@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM < 0  then abs(@I_vORDISTKN - @I_vORDAVAMT) + @I_vORWROFAM  when ((@PaidOff = 0 and @I_vORDISTKN + @I_vORWROFAM < 0) or (@RMTRKDAV = 0 and @I_vORDISTKN + @I_vORWROFAM < 0))  then abs(@I_vORDISTKN + @I_vORWROFAM)  else 0  end,  @AcctRecvAccount  end   if (@I_vApply in (1,2))  begin  select @DistributionAccount = isnull(RMWRACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 4, 0, 0, @I_vORWROFAM, 0, @DistributionAccount  end   if (@I_vApply in (3,4))  begin  select @DistributionAccount = isnull(RMWRACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 1600   insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 4, 0, 0, 0, @I_vORWROFAM, @DistributionAccount  end   if (@RMTRKDAV = 1 and @PaidOff = 1)   begin  select @DistributionAccount = isnull(RMAVACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@DistributionAccount = 0)  select @DistributionAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 700   if (@I_vApply in (1,2))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, @I_vORDAVAMT, 0, @DistributionAccount  end  else  if (@I_vApply in (3,4))  begin  insert into #temp (DTYPE, CTAMT, DTAMT, ORCTAMT, ORDTAMT, DTINDEX)  select 5, 0, 0, 0, @I_vORDAVAMT,  @DistributionAccount  end  end  end   if (@I_vRMDTYPAL in (1,3,4,5,8,9))  begin   if (@I_vORCCDAMT <> 0)  begin  select @CashAccount = 0   select @CashAccount = isnull(ACTINDX,0) from SY03100 (nolock) where CARDNAME = @I_vCRCRDNAM and RCVBGRBX = 1   if ((@CashAccount = 0) or (@CashAccount is null))  begin  select @CashAccount = isnull(c.ACTINDX,0) from SY03100 s (nolock), CM00100 c (nolock)  where s.CARDNAME = @I_vCRCRDNAM   and s.RCVBGRBX <> 1  and s.CKBKNUM1 = c.CHEKBKID  end   if ((@CashAccount = 0) or (@CashAccount is null))  begin  select @CashAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 50   if (@CashAccount is null)  begin  select @CashAccount = 0  end  end   if (@I_vRMDTYPAL = 8)  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 1 and DTINDEX = @CashAccount))  begin  if (@I_vApply in (5,6))  update #temp set ORDTAMT = ORDTAMT + @I_vORCCDAMT where DTYPE = 1 and DTINDEX = @CashAccount  else  update #temp set ORCTAMT = ORCTAMT + @I_vORCCDAMT where DTYPE = 1 and DTINDEX = @CashAccount  end  else  begin  if (@I_vApply in (5,6))  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, @I_vORCCDAMT, 0, @CashAccount  else  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, 0, @I_vORCCDAMT, @CashAccount  end  end  else  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 1 and DTINDEX = @CashAccount))  begin  if (@I_vApply in (5,6))  update #temp set ORCTAMT = ORCTAMT + @I_vORCCDAMT where DTYPE = 1 and DTINDEX = @CashAccount  else   update #temp set ORDTAMT = ORDTAMT + @I_vORCCDAMT where DTYPE = 1 and DTINDEX = @CashAccount  end  else  begin  if (@I_vApply in (5,6))  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, 0, @I_vORCCDAMT, @CashAccount  else  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, @I_vORCCDAMT, 0, @CashAccount  end  end  if (@I_vApply in (5,6))  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 3 and DTINDEX = @AcctRecvAccount))  update #temp set ORDTAMT = ORDTAMT + @I_vORCCDAMT where DTYPE = 3 and DTINDEX = @AcctRecvAccount  else  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX) select 3, 0, 0, @I_vORCCDAMT, 0, @AcctRecvAccount  end  end   if (@I_vORCASAMT <> 0)  begin  select @CashAccount = 0   select @CashAccount = isnull(RMCSHACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR and DEFCACTY = 1   if ((@CashAccount = 0) or (@CashAccount is null))  begin  select @CashAccount = isnull(ACTINDX,0) from CM00100 (nolock) where CHEKBKID = @I_vCashCHEKBKID  end   if ((@CashAccount = 0) or (@CashAccount is null))  begin  select @CashAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 50   if (@CashAccount is null)  begin  select @CashAccount = 0  end  end   if (@I_vRMDTYPAL = 8)  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 1 and DTINDEX = @CashAccount))  begin  if (@I_vApply in (5,6))  update #temp set ORDTAMT = ORDTAMT + @I_vORCASAMT where DTYPE = 1 and DTINDEX = @CashAccount  else  update #temp set ORCTAMT = ORCTAMT + @I_vORCASAMT where DTYPE = 1 and DTINDEX = @CashAccount  end  else  begin  if (@I_vApply in (5,6))  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, @I_vORCASAMT, 0, @CashAccount  else  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, 0, @I_vORCASAMT, @CashAccount  end  end  else  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 1 and DTINDEX = @CashAccount))  begin  if (@I_vApply in (5,6))  update #temp set ORCTAMT = ORCTAMT + @I_vORCASAMT where DTYPE = 1 and DTINDEX = @CashAccount  else   update #temp set ORDTAMT = ORDTAMT + @I_vORCASAMT where DTYPE = 1 and DTINDEX = @CashAccount  end  else  begin  if (@I_vApply in (5,6))  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, 0, @I_vORCASAMT, @CashAccount  else  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, @I_vORCASAMT, 0, @CashAccount  end  end  if (@I_vApply in (5,6))  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 3 and DTINDEX = @AcctRecvAccount))  update #temp set ORDTAMT = ORDTAMT + @I_vORCASAMT where DTYPE = 3 and DTINDEX = @AcctRecvAccount  else  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX) select 3, 0, 0, @I_vORCASAMT, 0, @AcctRecvAccount  end  end   if (@I_vORCHKAMT <> 0)  begin  select @CashAccount = 0   select @CashAccount = isnull(RMCSHACC,0) from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR and DEFCACTY = 1   if ((@CashAccount = 0) or (@CashAccount is null))  begin  select @CashAccount = isnull(ACTINDX,0) from CM00100 (nolock) where CHEKBKID = @I_vCheckCHEKBKID  end   if ((@CashAccount = 0) or (@CashAccount is null))  begin  select @CashAccount = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 50   if (@CashAccount is null)  begin  select @CashAccount = 0  end  end   if (@I_vRMDTYPAL = 8)  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 1 and DTINDEX = @CashAccount))  begin  if (@I_vApply in (5,6))  update #temp set ORDTAMT = ORDTAMT + @I_vORCHKAMT where DTYPE = 1 and DTINDEX = @CashAccount  else  update #temp set ORCTAMT = ORCTAMT + @I_vORCHKAMT where DTYPE = 1 and DTINDEX = @CashAccount  end  else  begin  if (@I_vApply in (5,6))  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, @I_vORCHKAMT, 0, @CashAccount  else  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, 0, @I_vORCHKAMT, @CashAccount  end  end  else  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 1 and DTINDEX = @CashAccount))  begin  if (@I_vApply in (5,6))  update #temp set ORCTAMT = ORCTAMT + @I_vORCHKAMT where DTYPE = 1 and DTINDEX = @CashAccount  else   update #temp set ORDTAMT = ORDTAMT + @I_vORCHKAMT where DTYPE = 1 and DTINDEX = @CashAccount  end  else  begin  if (@I_vApply in (5,6))  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, 0, @I_vORCHKAMT, @CashAccount  else  insert into #temp ( DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX ) select 1, 0, 0, @I_vORCHKAMT, 0, @CashAccount  end  end  if (@I_vApply in (5,6))  begin  if (exists (select 1 from #temp (nolock) where DTYPE = 3 and DTINDEX = @AcctRecvAccount))  update #temp set ORDTAMT = ORDTAMT + @I_vORCHKAMT where DTYPE = 3 and DTINDEX = @AcctRecvAccount  else  insert into #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX) select 3, 0, 0, @I_vORCHKAMT, 0, @AcctRecvAccount  end  end  end   update #temp set ORCTAMT = (ORDTAMT * -1), ORDTAMT = 0 where ORDTAMT < 0  update #temp set ORDTAMT = (ORCTAMT * -1), ORCTAMT = 0 where ORCTAMT < 0   delete #temp where ORDTAMT + ORCTAMT = 0.00   update #temp set  DTAMT =  case  when (@I_vRTCLCMTD = 0)  then round(ORDTAMT * @I_vXCHGRATE, @I_vFNDECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(ORDTAMT / @I_vXCHGRATE, @I_vFNDECPLCUR)  else ORDTAMT  end,  CTAMT =  case  when (@I_vRTCLCMTD = 0)  then round(ORCTAMT * @I_vXCHGRATE, @I_vFNDECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(ORCTAMT / @I_vXCHGRATE, @I_vFNDECPLCUR)  else ORCTAMT  end   if (@I_vRTCLCMTD in(0,1))  begin  select @round = isnull(sum(DTAMT - CTAMT),0) from #temp   if (@round <> 0)  begin  select @RNDDIFF = RNDDIFF from MC40201 (nolock) where CURNCYID = @I_vCURNCYID   if (@RNDDIFF = 0)  begin  select @RNDDIFF = ACTINDX from SY01100 (nolock) where SERIES = 2 and SEQNUMBR = 900  end   insert #temp (DTYPE, DTAMT, CTAMT, ORDTAMT, ORCTAMT, DTINDEX)  select 26,  case  when @round < 0  then @round * -1  else 0  end,  case  when @round > 0  then @round  else 0  end,  0,  0,  @RNDDIFF  end  end   declare DistLine INSENSITIVE cursor for select  DTYPE,  DTAMT,  CTAMT,  ORDTAMT,  ORCTAMT,  DTINDEX  from #temp   open DistLine  select @iCursorError = @@cursor_rows   if (@iCursorError > 0)  begin  fetch next from DistLine into  @cDTYPE,  @cDTAMT,  @cCTAMT,  @cORDTAMT,  @cORCTAMT,  @cINDEX  while (@@fetch_status <> -1)  begin  if (@@fetch_status = -2)  begin  select @O_iErrorState = 638    break  end   exec @iStatus = taRMDistributionBuild  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vINDEX =  @cINDEX,  @I_vDTSAMT = @cDTAMT,  @I_vCTSAMT = @cCTAMT,  @I_vORDTSAMT = @cORDTAMT,     @I_vORCTSAMT = @cORCTAMT,     @I_vRATETPID = @I_vRATETPID,     @I_vXCHGRATE = @I_vXCHGRATE,     @I_vEXCHDATE = @I_vEXCHDATE,     @I_vEXPNDATE = @I_vEXPNDATE,     @I_vEXGTBLID = @I_vEXGTBLID,     @I_vTIME1 = @I_vTIME1,     @I_vTYPE = @cDTYPE,  @I_vCURRNIDX = @I_vCURRNIDX,  @I_vCURNCYID = @I_vCURNCYID,  @I_vPTDUSRID = @I_vPTDUSRID,  @I_vApply = @I_vApply,  @I_vTRXSORCE = @I_vTRXSORCE,  @I_vDistRef  = @I_vDistRef,  @I_vPOSTEDDT = @I_vPOSTEDDT,  @O_iErrorState = @O_iErrorState output,  @oErrString = @oErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_oErrorState <> 0)  begin  select @O_iErrorState = 637    deallocate DistLine  return (@O_iErrorState)  end   fetch next from DistLine into  @cDTYPE,  @cDTAMT,  @cCTAMT,  @cORDTAMT,  @cORCTAMT,  @cINDEX  end  end  deallocate DistLine end else if (@ISMCTRX = 1) and (@I_vCREATEDIST <> 1) begin  if exists (select 1 from RM10101 (nolock) where DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR having sum(ORCRDAMT) = sum(ORDBTAMT) and sum(CRDTAMNT) <> sum(DEBITAMT))  begin   select  @round = sum(CRDTAMNT) - sum(DEBITAMT),   @SEQNUMB = max(SEQNUMBR)+16384 from RM10101 (nolock)  where DOCNUMBR = @I_vDOCNUMBR and CUSTNMBR = @I_vCUSTNMBR  select @ROUNDACCT = RNDDIFF from MC40201 (nolock) where CURNCYID = @I_vCURNCYID  if (@ROUNDACCT is null) or (@ROUNDACCT = 0)  begin  select @ROUNDACCT = ACTINDX from SY01100 (nolock) where SERIES = 2 and SEQNUMBR = 900  end   insert into RM10101  (  TRXSORCE,  POSTED,  POSTEDDT,  PSTGSTUS,  CHANGED,  DOCNUMBR,  DCSTATUS,  DISTTYPE,  RMDTYPAL,  SEQNUMBR,  CUSTNMBR,  DSTINDX,   DEBITAMT,  CRDTAMNT,  PROJCTID,  USERID,  CATEGUSD,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  DistRef  )  select   '',     0,     '',     3,     0,     @I_vDOCNUMBR,  1,     26,     @I_vRMDTYPAL,  @SEQNUMB,  @I_vCUSTNMBR,  @ROUNDACCT,     case      when @round > 0  then @round  else 0  end,   case      when @round < 0  then @round * -1   else 0  end,  '',     '',  0,     @I_vCURNCYID,  @I_vCURRNIDX,  0,       0,       ''  if (@iError <> 0)  begin  select @O_iErrorState = 5595    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  end  end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'AAG00102') begin  if exists(select 1 from DYNAMICS..AAG00102 (nolock) where CMPANYID = @I_vCMPANYID)  begin   exec @iStatus = aagCreateSubWorkDist  @aaSubLedgerHdrID out,  0,   @I_vRMDTYPAL,   @I_vDOCNUMBR,  @I_vCUSTNMBR,   10101,  3,   @I_vCMPANYID,   0,  @I_vCURNCYID,   @I_vCURRNIDX,   @I_vRATETPID,   @I_vEXGTBLID,   @I_vXCHGRATE,   @I_vEXCHDATE,   @I_vTIME1,  @I_vRTCLCMTD,   0,  0,   @I_vDECPLCUR,   1,   @I_vINTERID,   0,   0,  @I_vTRXSORCE,  @O_iErrorStateAASub output,  @O_iErrorStringAASub output   if (@@error <> 0)   begin  select @O_iErrorState = 8203    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  if @aaSubLedgerHdrID <> 0  begin  exec @iStatus = taProcessAnalytics  @I_vDOCNMBR = @I_vDOCNUMBR,  @I_vKey = @I_vDOCNUMBR,  @I_vDOCTYPE = 0,  @O_iErrorState = @itaProcessAnalyticsErrState output,  @oErrString = @itaProcessAnalyticsErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@itaProcessAnalyticsErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @itaProcessAnalyticsErrString  select @O_iErrorState = 8204    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  end  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMDistributionCreate] TO [DYNGRP]
GO

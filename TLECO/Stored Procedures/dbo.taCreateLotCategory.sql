SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateLotCategory]  @I_vLOTTYPE char(10),     @I_vLTATRDSC_1 char(15) = '',     @I_vLTATRDSC_2 char(15) = '',      @I_vLTATRDSC_3 char(15) = '',      @I_vLTATRDSC_4 char(15) = '',      @I_vLTATRDSC_5 char(15) = '',      @I_vRequesterTrx smallint = 0,     @I_vUSRDEFND1  char(50) = '',         @I_vUSRDEFND2  char(50) = '',         @I_vUSRDEFND3  char(50) = '',         @I_vUSRDEFND4  varchar(8000) = '',        @I_vUSRDEFND5  varchar(8000) = '',        @O_iErrorState  int output,     @oErrString  varchar(255) output     with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @NOTEINDX numeric(19,5),    @CMPANYID smallint,     @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,     @iStatus int,       @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @iError int      select  @CMPANYID = 0,      @iStatus = 0,  @iAddCodeErrState =0,  @iCustomState = 0,  @O_oErrorState = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateLotCategoryPre  @I_vLOTTYPE output,  @I_vLTATRDSC_1 output,  @I_vLTATRDSC_2 output,  @I_vLTATRDSC_3 output,  @I_vLTATRDSC_4  output,  @I_vLTATRDSC_5  output,  @I_vRequesterTrx output,  @I_vUSRDEFND1  output,  @I_vUSRDEFND2  output,  @I_vUSRDEFND3  output,  @I_vUSRDEFND4  output,  @I_vUSRDEFND5  output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2247     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vLOTTYPE is null or  @I_vLTATRDSC_1 is null or  @I_vLTATRDSC_2 is null or  @I_vLTATRDSC_3 is null or  @I_vLTATRDSC_4  is null or  @I_vLTATRDSC_5  is null or   @I_vRequesterTrx is null  ) begin  select @O_iErrorState = 2248    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vLOTTYPE = UPPER(@I_vLOTTYPE)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 2675   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vLOTTYPE = '' ) begin  select @O_iErrorState = 2249    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vLTATRDSC_1 = '' and @I_vLTATRDSC_2 = '' and @I_vLTATRDSC_3 = '' and @I_vLTATRDSC_4 = '' and @I_vLTATRDSC_5 = '') begin  select @O_iErrorState = 2250     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3707     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if (not exists (select 1 from IV40500 (nolock) where LOTTYPE = @I_vLOTTYPE))  begin  insert into IV40500  (  LOTTYPE,  LTATRDSC_1,  LTATRDSC_2,  LTATRDSC_3,  LTATRDSC_4,  LTATRDSC_5,  NOTEINDX  )  select  @I_vLOTTYPE,    @I_vLTATRDSC_1,    @I_vLTATRDSC_2,    @I_vLTATRDSC_3,    @I_vLTATRDSC_4,    @I_vLTATRDSC_5,    @NOTEINDX    if (@@error <> 0)  begin  select @O_iErrorState = 2251    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 2252    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateLotCategoryPost  @I_vLOTTYPE,  @I_vLTATRDSC_1,  @I_vLTATRDSC_2,  @I_vLTATRDSC_3,  @I_vLTATRDSC_4,  @I_vLTATRDSC_5,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 2253    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateLotCategory] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create  procedure [dbo].[aagUpdateAABMDist]  @CB_Trans_Type char(1),  @ORDOCNUM char(21),  @CHEKBKID char(15),  @SEQNUMBR int,  @SERIES smallint,  @INTERID char(5),  @CMPANYID smallint,  @SQLSESID smallint,  @VENDORID char(15),  @CUSTNMBR char(15),   @aaSubLedgerHdrID int as begin  declare @DOCTYPE smallint,   @DOCNUMBR char(21),  @ACTINDX int,  @DISTTYPE smallint,   @DEBITAMT numeric(19,5),  @CRDTAMNT numeric(19,5),  @ORDBTAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @aaSubLedgerDistID int,  @Cnt int,  @nStatus smallint,  @CURNCYID char(15),  @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime,  @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,   @ClassID   int,  @aaBrowseType int,  @DECPLACS smallint,  @NOTEINDX numeric(19,5),  @SEQNUMBR1 int,  @SQLCmd nvarchar(1000),  @Parameter nvarchar(1000),  @RetCode                int,  @DDEBITAMT numeric(19,5)   select  @DOCTYPE  =0,   @ACTINDX  =0,  @DISTTYPE  =0,   @DEBITAMT  =0,  @CRDTAMNT  =0,  @ORDBTAMT  =0,  @ORCRDAMT  =0,  @aaSubLedgerDistID =0,  @Cnt   =0,  @nStatus  =0,  @ClassID   =0,  @aaBrowseType  =0,  @DECPLACS  =0,  @aaSubLedgerDistID =0,  @NOTEINDX  =0,  @SEQNUMBR1  =0  declare CAADIST  cursor dynamic for  Select SEQNUMBR, aaSubLedgerDistID,ACTINDX,DISTTYPE ,DEBITAMT,CRDTAMNT,   ORDBTAMT, ORCRDAMT  from AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID  and aaSubLedgerDistID > 0  order by SEQNUMBR, aaSubLedgerDistID  open CAADIST  fetch next from CAADIST  into @SEQNUMBR1, @aaSubLedgerDistID,@ACTINDX,@DISTTYPE,  @DEBITAMT,@CRDTAMNT,@ORDBTAMT, @ORCRDAMT  while @@fetch_status = 0  begin    select @Parameter = '@Cnt int'  select @SQLCmd=' declare a cursor for  select count(*)  from CB100000 where  CB_Trans_Type = ''' + @CB_Trans_Type + ''' and ORDOCNUM = ''' + @ORDOCNUM + ''' and   SEQNUMBR =  ' + str(@SEQNUMBR1) + ' and   ACTINDX = ' + str(@ACTINDX) + ' and DISTTYPE = ' + str(@DISTTYPE) + ' and   DEBITAMT = ' + str(@DEBITAMT,19,5) + ' and CRDTAMNT = ' + str(@CRDTAMNT,19,5) + ' and   ORDBTAMT = ' + str(@ORDBTAMT,19,5) + ' and ORCRDAMT = ' + str(@ORCRDAMT,19,5) + ' and  VENDORID = ''' + @VENDORID + ''' and CUSTNMBR = ''' + @CUSTNMBR + ''''   exec @RetCode = sp_executesql @SQLCmd  open a  fetch next  from a into @Cnt  close a  deallocate a  if @Cnt = 0  begin  exec aagDelSubLedgerDist @aaSubLedgerHdrID, @aaSubLedgerDistID, @nStatus output   end  fetch next from CAADIST  into @SEQNUMBR1, @aaSubLedgerDistID,@ACTINDX,@DISTTYPE,  @DEBITAMT,@CRDTAMNT,@ORDBTAMT, @ORCRDAMT  end   close CAADIST  deallocate CAADIST   select @Cnt = 0   if @CB_Trans_Type = 'T'  begin   select @SQLCmd = 'declare a cursor for   select  ACTINDX, DISTTYPE , DEBITAMT, CRDTAMNT, ORDBTAMT,ORCRDAMT,  CURNCYID, CURRNIDX,RATETPID, EXGTBLID, XCHGRATE, EXCHDATE,TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT  from CB100000  where CB_Trans_Type = ''' + @CB_Trans_Type + ''' and  ORDOCNUM = ''' + @ORDOCNUM + ''' and SEQNUMBR = ' + str(@SEQNUMBR)    exec @RetCode=sp_executesql @SQLCmd   open a  fetch next  from a into @ACTINDX,@DISTTYPE,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,  @ORCRDAMT,@CURNCYID,@CURRNIDX,@RATETPID,@EXGTBLID,  @XCHGRATE,@EXCHDATE,@TIME1,@RTCLCMTD,  @DENXRATE,@MCTRXSTT  close a  deallocate a  end   else   begin  select @SQLCmd = ' declare  a cursor for  select  ACTINDX, DISTTYPE , DEBITAMT, CRDTAMNT, ORDBTAMT,ORCRDAMT,  CURNCYID, CURRNIDX,RATETPID, EXGTBLID, XCHGRATE, EXCHDATE,TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT  from CB100000  where CB_Trans_Type = ''' + @CB_Trans_Type+'''  and  ORDOCNUM = ''' + @ORDOCNUM + ''' and CHEKBKID = ''' + @CHEKBKID + ''' and   SEQNUMBR = ' + str(@SEQNUMBR)  exec @RetCode=sp_executesql @SQLCmd   open a  fetch next  from a into @ACTINDX,@DISTTYPE,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,  @ORCRDAMT,@CURNCYID,@CURRNIDX,@RATETPID,@EXGTBLID,  @XCHGRATE,@EXCHDATE,@TIME1,@RTCLCMTD,  @DENXRATE,@MCTRXSTT  close a  deallocate a  end  select @Cnt = count(*)  from AAG20001  where aaSubLedgerHdrID =  @aaSubLedgerHdrID and  aaSubLedgerDistID >0 and SEQNUMBR = @SEQNUMBR and  ACTINDX = @ACTINDX and  DEBITAMT = @DEBITAMT and CRDTAMNT = @CRDTAMNT and   ORDBTAMT = @ORDBTAMT and ORCRDAMT = @ORCRDAMT  if @Cnt <> 1  begin   if @DEBITAMT = 0 and @CRDTAMNT = 0 and  @ORDBTAMT = 0 and @ORCRDAMT = 0  begin  return  end   select @aaSubLedgerDistID = isnull(max(aaSubLedgerDistID),0)+1   from AAG20001  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID >0   exec aagGetClassIDBrowseType @ACTINDX, @ClassID output, @aaBrowseType output    select @CURNCYID = CURNCYID, @DECPLACS = DECPLCUR - 1 from DYNAMICS..MC40200  where CURRNIDX = @CURRNIDX  insert into AAG20001  (aaSubLedgerHdrID, aaSubLedgerDistID, INTERID, ACTINDX, DISTTYPE,ACCTTYPE ,aaBrowseType,DECPLACS,  DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, SEQNUMBR,  aaCustID,aaVendID, POSTED ,RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT,aaChangeDate, aaChangeTime)   values  (@aaSubLedgerHdrID, @aaSubLedgerDistID, @INTERID, @ACTINDX, @DISTTYPE, dbo.aagGetAccountType(@ACTINDX),@aaBrowseType,@DECPLACS,  @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT, isnull(@CURNCYID,' '), @CURRNIDX, @SEQNUMBR,  dbo.aagGetMstrIDGL(2,@CUSTNMBR,0,@ACTINDX),dbo.aagGetMstrIDGL(6,@VENDORID,0,@ACTINDX), 0,   isnull(@RATETPID,' '), isnull(@EXGTBLID,' '), @XCHGRATE, @EXCHDATE, @TIME1,  @RTCLCMTD, @DENXRATE, @MCTRXSTT,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108))    exec DYNAMICS.dbo.smGetNextNoteIndex @CMPANYID, @SQLSESID, @NOTEINDX output   insert into  AAG20002  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, ORDBTAMT,  ORCRDAMT, aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors)  values (@aaSubLedgerHdrID, @aaSubLedgerDistID,1, @DEBITAMT, @CRDTAMNT, @ORDBTAMT,  @ORCRDAMT,10000, ' ', @NOTEINDX,0)   if @aaBrowseType <> 0  begin  insert into AAG20003  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID,   aaTrxDimID, aaTrxCodeID, aaCodeErrors)  Select @aaSubLedgerHdrID, @aaSubLedgerDistID, 1 , aaTrxDimID, aaTrxDimCodeIDDflt , 0  from AAG00202 where aaAcctClassID = @ClassID and aaTrxDimID >=0   end   exec aagRenumberBMDist @aaSubLedgerHdrID   end  end    
GO
GRANT EXECUTE ON  [dbo].[aagUpdateAABMDist] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glCLAccountMSTR]  @I_cUser_ID char(15)  = NULL,  @I_tMCRegistered tinyint   = NULL,  @I_cReporting_Currency char(15)  = NULL,  @I_cAccount_MSTR_Table_Name char(255)  = NULL,  @I_cFixed_Alloc_Table_Name char(255)  = NULL,  @I_cSeg_Desc_Table_Name char(255)  = NULL,  @I_cSeg_Desc_Temp_Table char(30)  = NULL,  @O_SQL_Error_State int    = NULL   output as   declare @cSelectList varchar(255),  @cSubquery1 varchar(255),  @cSubquery2 varchar(255),  @cSubquery3 varchar(255),  @cSubquery4 varchar(255),  @cCompare1 varchar(255),  @cCompare2 varchar(255),  @cGETMSG123   char(255),  @cGETMSG3133 char(255),  @cGETMSG5699   char(255),  @cGETMSG5708   char(255),  @cGETMSG5709   char(255),  @cGETMSG5710   char(255),  @cGETMSG5711   char(255),  @cGETMSG10706   char(255),  @cGETMSG16225   char(255),  @cGETMSG17800   char(255),  @cGETMSG18518   char(255),  @cAccount_Segment char(67),  @cPosition char(2),  @cAccountType char(2),  @cDBName char(5),  @TRUE int,  @FALSE int,  @iStatus int,  @iError int,  @iNumberOfAccounts int,  @iNextAccountIndex int,  @POST_ACCT    smallint,  @CASH_CAT smallint,  @FIXED smallint,  @VARIABLE smallint,  @CURRENCY_TRANS_AVERAGE smallint,  @tNumberSegments tinyint,  @tLoopControl tinyint,  @cCurrencyID char(15)  select @O_SQL_Error_State = 0  if (  @I_cUser_ID is NULL or  @I_tMCRegistered is NULL or  @I_cReporting_Currency is NULL or  @I_cAccount_MSTR_Table_Name is NULL or  @I_cFixed_Alloc_Table_Name is NULL or  @I_cSeg_Desc_Table_Name is NULL or  @I_cSeg_Desc_Temp_Table is NULL)  begin  select          @O_SQL_Error_State = 20857  return end  exec @iStatus = DYNAMICS..smGetConstantInt 'TRUE', @TRUE output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'FALSE', @FALSE output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'POST_ACCT', @POST_ACCT output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'CASH_CAT', @CASH_CAT output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'VARIABLE', @VARIABLE output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'FIXED', @FIXED output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus) exec @iStatus = DYNAMICS..smGetConstantInt 'CURRENCY_TRANSLATION_AVERAGE', @CURRENCY_TRANS_AVERAGE output, @O_SQL_Error_State output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError if ( (@iStatus <> 0) or (@O_SQL_Error_State <> 0) )  return (@iStatus)   select @cDBName = db_name()  exec @iStatus = DYNAMICS..smGetMsgString   123,   @cDBName,  @cGETMSG123 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   3133,   @cDBName,  @cGETMSG3133 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   5699,   @cDBName,  @cGETMSG5699 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   5708,   @cDBName,  @cGETMSG5708 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   5709,   @cDBName,  @cGETMSG5709 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   5710,   @cDBName,  @cGETMSG5710 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   5711,   @cDBName,  @cGETMSG5711 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   10706,   @cDBName,  @cGETMSG10706 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   16225,   @cDBName,  @cGETMSG16225 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   17800,   @cDBName,  @cGETMSG17800 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec @iStatus = DYNAMICS..smGetMsgString   18518,   @cDBName,  @cGETMSG18518 output,   @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  create table #AccountIndex (ACTINDX int   not null,  ACTNUMST char(128)  not null)  create table #SY_FM_Error_Log( ACTINDX int NOT NULL,  DSTINDX int NOT NULL,  ACCTTYPE smallint NOT NULL,  ACTNUMST char(128)  NOT NULL,  DUPLICATE tinyint NOT NULL,  SGMTNUMB smallint NOT NULL,  SGMNTID char(67)  NOT NULL,  HSTRCLRT numeric(19,5) NOT NULL,  INDEX1 int identity)  select  @tNumberSegments = count(*) from  SY00300  select @cSelectList = '' select @cSubquery1 = '' select @cSubquery2 = '' select @cSubquery3 = '' select @cSubquery4 = '' select @cCompare1 = '' select @cCompare2 = ''  select @cCurrencyID = ''  if @tNumberSegments > 11 begin  select @O_SQL_Error_State = 20858  return end  if exists ( select 1 from GL00100 where ACTINDX = 0) begin   select  @tLoopControl  = 1   while @tLoopControl <= @tNumberSegments  begin   if @tLoopControl <= 8  begin  select @cCompare1 = @cCompare1 + 'A.ACTNUMBR_' + ltrim(str(@tLoopControl)) + '=B.ACTNUMBR_'  + ltrim(str(@tLoopControl)) + ' '  if @tLoopControl <> @tNumberSegments   select @cCompare1 = @cCompare1 + ' and '  end  else  begin  select @cCompare2 = @cCompare2 + 'A.ACTNUMBR_' + ltrim(str(@tLoopControl)) + '=B.ACTNUMBR_'  + ltrim(str(@tLoopControl)) + ' '  if @tLoopControl <> @tNumberSegments   select @cCompare2 = @cCompare2 + ' and '  end   select @tLoopControl = @tLoopControl + 1  end   insert into   #SY_FM_Error_Log  select  0,  0,  0,  '',  0,  0,  '',  0.00  from  GL00100  where  ACTINDX = 0   insert into  SY03400  select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  @cGETMSG16225,  ''  from  #SY_FM_Error_Log   exec(' update  GL00100  set  ACTINDX = B.ACTINDX  from  GL00100 A,  GL00105 B  where  A.ACTINDX = 0  and ' + @cCompare1 + @cCompare2)   select @iNextAccountIndex = (select max(ACTINDX) from GL00105)   if (@iNextAccountIndex is NULL)  select @iNextAccountIndex = 0   if (select max(ACTINDX) from GL00100) > @iNextAccountIndex  select @iNextAccountIndex = (select max(ACTINDX) from GL00100)  select @iNextAccountIndex = @iNextAccountIndex + 1   select  @iNumberOfAccounts = (select count(ACTINDX) from GL00100 where ACTINDX = 0)   while @iNumberOfAccounts > 0  begin  set rowcount 1   update  GL00100  set  ACTINDX = @iNextAccountIndex  where  ACTINDX = 0   insert into  #AccountIndex  select  @iNextAccountIndex,  ''   set rowcount 0   select @iNextAccountIndex = @iNextAccountIndex + 1,  @iNumberOfAccounts = @iNumberOfAccounts - 1  end    exec @iStatus = glUpdateAccountIndexMaster @O_SQL_Error_State output    select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   delete #AccountIndex   delete #SY_FM_Error_Log  end   select  @tLoopControl  = 1  while @tLoopControl <= @tNumberSegments begin  select @cSelectList = @cSelectList + 'ACTNUMBR_' + ltrim(str(@tLoopControl))   if @tLoopControl <> @tNumberSegments   begin  select @cSelectList = @cSelectList + ', '  end   if @tLoopControl <= 3  begin  select @cSubquery1 = @cSubquery1 + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' in (select '  + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' from GL00100 where GL00100.ACTINDX=A.ACTINDX)'  if @tLoopControl <> @tNumberSegments   select @cSubquery1 = @cSubquery1 + ' and '  end  else if @tLoopControl <= 6  begin  select @cSubquery2 = @cSubquery2 + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' in (select '  + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' from GL00100 where GL00100.ACTINDX=A.ACTINDX)'  if @tLoopControl <> @tNumberSegments   select @cSubquery2 = @cSubquery2 + ' and '  end  else if @tLoopControl <= 9  begin  select @cSubquery3 = @cSubquery3 + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' in (select '  + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' from GL00100 where GL00100.ACTINDX=A.ACTINDX)'  if @tLoopControl <> @tNumberSegments   select @cSubquery3 = @cSubquery3 + ' and '  end  else if @tLoopControl <= 11  begin  select @cSubquery4 = @cSubquery4 + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' in (select '  + 'ACTNUMBR_' + ltrim(str(@tLoopControl)) + ' from GL00100 where GL00100.ACTINDX=A.ACTINDX)'  if @tLoopControl <> @tNumberSegments   select @cSubquery1 = @cSubquery4 + ' and '  end  select @tLoopControl = @tLoopControl + 1 end  select @cSubquery4 = @cSubquery4 + ')'  insert into   #SY_FM_Error_Log select  distinct ACTINDX,  0,  1,  '',  0,  0,  '',  0.00 from  GL10110 where  ACTINDX not in (select  ACTINDX  from  GL00100)  update  #SY_FM_Error_Log set  DUPLICATE  = @TRUE,  ACTNUMST = GL00105.ACTNUMST from  GL00105 where  #SY_FM_Error_Log.ACTINDX = GL00105.ACTINDX  exec @iStatus = glInsertAccountMaster       '1',  '0',  @cSelectList,  @I_cUser_ID,  @I_cAccount_MSTR_Table_Name,  @cGETMSG123,  @cGETMSG5709,  @cGETMSG17800,  @O_SQL_Error_State    output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  insert into   #SY_FM_Error_Log select  distinct ACTINDX,  0,  3,  '',  0,  0,  '',  0.00 from  GL00104 where  ACTINDX not in (select  ACTINDX  from  GL00100)  update  #SY_FM_Error_Log set  DUPLICATE  = @TRUE,  ACTNUMST = GL00105.ACTNUMST,  DSTINDX  = ( select   isnull(min(DSTINDX),#SY_FM_Error_Log.ACTINDX)  from  GL00104  where  GL00104.ACTINDX = #SY_FM_Error_Log.ACTINDX) from  GL00105 where  #SY_FM_Error_Log.ACTINDX = GL00105.ACTINDX  update  #SY_FM_Error_Log set  ACCTTYPE = GL00100.ACCTTYPE + 2 from  GL00100 where  GL00100.ACTINDX = #SY_FM_Error_Log.DSTINDX and DUPLICATE = 1  exec @iStatus = glInsertAccountMaster       '1',  '2',  @cSelectList,  @I_cUser_ID,  @I_cAccount_MSTR_Table_Name,  @cGETMSG123,  @cGETMSG5709,  @cGETMSG17800,  @O_SQL_Error_State    output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  insert into   #SY_FM_Error_Log select  ACTINDX,  DSTINDX,  0,  '',  0,  0,  '',  0.00 from  GL00104 where  ACTINDX+DSTINDX not in (select   ACTINDX+DSTINDX   from   GL00103)  insert into   GL00103  (ACTINDX,  PRCNTAGE,  DSTINDX) select  ACTINDX,  0.00,  DSTINDX from  #SY_FM_Error_Log  insert into  SY03400 select  @I_cUser_ID,  INDEX1,  @I_cFixed_Alloc_Table_Name,  ERMSGTXT =  CASE  WHEN GL00105.ACTNUMST is NULL  THEN  stuff(@cGETMSG5710,charindex ('%1',@cGETMSG5710),2,ltrim(str(GL00105.ACTINDX)))  ELSE  stuff(@cGETMSG5710,charindex ('%1',@cGETMSG5710),2,rtrim(GL00105.ACTNUMST))  END,  '' from  #SY_FM_Error_Log,  GL00105 where  GL00105.ACTINDX = #SY_FM_Error_Log.ACTINDX  delete #SY_FM_Error_Log  insert into   #SY_FM_Error_Log select  distinct ACTINDX,  0,  3,  '',  0,  0,  '',  0.00 from  GL00103 where  ACTINDX not in (select  ACTINDX  from  GL00100)  update  #SY_FM_Error_Log set  DUPLICATE  = @TRUE,  ACTNUMST = GL00105.ACTNUMST,  DSTINDX  = ( select   isnull(min(DSTINDX),#SY_FM_Error_Log.ACTINDX)  from  GL00103  where  GL00103.ACTINDX = #SY_FM_Error_Log.ACTINDX) from   GL00105 where  #SY_FM_Error_Log.ACTINDX = GL00105.ACTINDX  update  #SY_FM_Error_Log set  ACCTTYPE = GL00100.ACCTTYPE + 2 from  GL00100 where  GL00100.ACTINDX = #SY_FM_Error_Log.DSTINDX and DUPLICATE = 1  exec @iStatus = glInsertAccountMaster       '1',  '1',  @cSelectList,  @I_cUser_ID,  @I_cAccount_MSTR_Table_Name,  @cGETMSG123,  @cGETMSG5709,  @cGETMSG17800,  @O_SQL_Error_State    output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  exec(' insert into   #SY_FM_Error_Log  select  ACTINDX,  0,  0,  ACTNUMST,  0,  0,  '''',  0.00  from  GL00105 A  where  ACTINDX not in  (select  ACTINDX  from  GL00100  where ' +  @cSubquery1 +   @cSubquery2 +   @cSubquery3 +   @cSubquery4)  update  #SY_FM_Error_Log set  DUPLICATE = @TRUE from  GL00100 where  #SY_FM_Error_Log.ACTINDX = GL00100.ACTINDX  exec(' insert into   GL00100   (ACTINDX,  ' + @cSelectList + ',  ACCTTYPE,  ACTDESCR,  ACCATNUM,  ACTIVE,  ACCTENTR)  select   GL00105.ACTINDX,  ' + @cSelectList + ',  1,'  + '''' + @cGETMSG123 + ''',  1,  1,  1   from   GL00105,  #SY_FM_Error_Log   where   GL00105.ACTINDX = #SY_FM_Error_Log.ACTINDX   and #SY_FM_Error_Log.DUPLICATE = 0')  insert into  SY03400 select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  ERMSGTXT =  CASE  WHEN (DUPLICATE = @FALSE)  then stuff(@cGETMSG5709,charindex ('%1',@cGETMSG5709),2,rtrim(ACTNUMST))  ELSE   stuff(@cGETMSG17800,charindex ('%1',@cGETMSG17800),2,ltrim(str(ACTINDX)))  END,  '' from  #SY_FM_Error_Log where  DUPLICATE = @FALSE and ACTINDX  <> 0   delete from #SY_FM_Error_Log  select @tLoopControl = 1  while @tLoopControl <= @tNumberSegments begin  select @cAccount_Segment = 'ACTNUMBR_' + ltrim(str(@tLoopControl))  select @cPosition = ltrim(str(@tLoopControl))   exec('insert into   #SY_FM_Error_Log  select  distinct 0,  0,  0,  '''',  0,'   + @cPosition + ','   + @cAccount_Segment + ',  0.00  from  GL00100  where  ' + @cAccount_Segment + ' not in   ( select   SGMNTID   from   GL40200   where   SGMTNUMB = ' + @cPosition + ')')   insert into  SY03400  select  @I_cUser_ID,  INDEX1,  @I_cSeg_Desc_Table_Name,  stuff(@cGETMSG5708,charindex ('%1',@cGETMSG5708),2,rtrim(SGMNTID)),  ''  from  #SY_FM_Error_Log  where  SGMTNUMB = @tLoopControl   insert into  GL40200  (SGMTNUMB,  SGMNTID,  SEGCOUNT)  select  SGMTNUMB,  SGMNTID,  0  from  #SY_FM_Error_Log  where  SGMTNUMB = @tLoopControl   exec('update   GL40200  set  SEGCOUNT =   case when (select count(ACTINDX) from GL00100  where ' + @cAccount_Segment + ' = SGMNTID) <= 32767 then   (select  count(ACTINDX)  from  GL00100  where ' + @cAccount_Segment + ' = SGMNTID)  else  32767  end  where  GL40200.SGMTNUMB = ' + @cPosition)  select @tLoopControl = @tLoopControl + 1 end  delete from #SY_FM_Error_Log  select @cAccount_Segment = 'ACTNUMBR_' + ltrim(str((select SGMTNUMB from SY00300 where MNSEGIND = 1)))  exec('insert into   #SY_FM_Error_Log  select  ACTINDX,  0,  0,  '''',  0,  0,  ' + @cAccount_Segment + ',  0.00  from  GL00100  where  ' + @cAccount_Segment + '  <> MNACSGMT')  exec(' update   GL00100  set  MNACSGMT = ' + @cAccount_Segment + '  from  #SY_FM_Error_Log  where  GL00100.ACTINDX = #SY_FM_Error_Log.ACTINDX')  insert into  SY03400 select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  @cGETMSG5699,  '' from  #SY_FM_Error_Log  delete from #SY_FM_Error_Log  delete #SY_FM_Error_Log  insert into   #SY_FM_Error_Log select  ACTINDX,  0,  0,  '',  0,  0,  '',  0.00 from  GL00100 where  ACTINDX not in (select ACTINDX from GL00105)  insert into  SY03400 select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  @cGETMSG16225,  '' from  #SY_FM_Error_Log  insert into  #AccountIndex select   ACTINDX,  '' from   #SY_FM_Error_Log  select  @tLoopControl  = 1,  @cCompare1  = '(',  @cCompare2  = '' while @tLoopControl <= @tNumberSegments begin  if @tLoopControl <= 7  begin  select @cCompare1 = @cCompare1 + 'A.ACTNUMBR_' + ltrim(str(@tLoopControl)) + '<> B.ACTNUMBR_'  + ltrim(str(@tLoopControl)) + ' '  if @tLoopControl <> @tNumberSegments   select @cCompare1 = @cCompare1 + ' or '  end  else  begin  select @cCompare2 = @cCompare2 + 'A.ACTNUMBR_' + ltrim(str(@tLoopControl)) + '<> B.ACTNUMBR_'  + ltrim(str(@tLoopControl)) + ' '  if @tLoopControl <> @tNumberSegments   select @cCompare2 = @cCompare2 + ' or '  end   select @tLoopControl = @tLoopControl + 1 end select @cCompare2 = @cCompare2 + ')'  exec(' insert into  #AccountIndex  select  A.ACTINDX,  ''''  from   GL00100 A,  GL00105 B  where  A.ACTINDX = B.ACTINDX  and ( ' + @cCompare1 + @cCompare2 + ')')  exec @iStatus = glUpdateAccountIndexMaster @O_SQL_Error_State output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  delete #AccountIndex  delete #SY_FM_Error_Log  if @I_tMCRegistered = @TRUE begin  insert into   #SY_FM_Error_Log  select  GL00100.ACTINDX,  0,  0,  '',  0,  0,  '',  MC00300.HSTRCLRT  from  GL00100,  MC00300  where  GL00100.ACTINDX  = MC00300.ACTINDX  and MC00300.CURNCYID = @I_cReporting_Currency  and GL00100.HSTRCLRT <> MC00300.HSTRCLRT  and GL00100.ACCTTYPE = @POST_ACCT   insert into   #SY_FM_Error_Log  select  ACTINDX,  0,  0,  '',  0,  0,  '',  0.00  from  GL00100  where  GL00100.HSTRCLRT <> 0.00  and GL00100.ACCTTYPE = @POST_ACCT  and GL00100.ACTINDX not in (select ACTINDX from MC00300 where CURNCYID = @I_cReporting_Currency)   insert into  SY03400  select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  stuff(@cGETMSG18518,charindex ('%1',@cGETMSG18518),2,rtrim(GL00105.ACTNUMST)),  ''  from  #SY_FM_Error_Log,  GL00105  where  #SY_FM_Error_Log.ACTINDX = GL00105.ACTINDX   update  GL00100  set  HSTRCLRT = #SY_FM_Error_Log.HSTRCLRT  from  #SY_FM_Error_Log  where  GL00100.ACTINDX = #SY_FM_Error_Log.ACTINDX   delete #SY_FM_Error_Log  end   insert into   #SY_FM_Error_Log select  ACTINDX,  0,  0,  '',  0,  0,  '',  0.00 from  GL00100 where  GL00100.ACTINDX not in (select ACTINDX from GL00105)  insert into  SY03400 select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  stuff(@cGETMSG17800,charindex ('%1',@cGETMSG17800),2,ltrim(str(ACTINDX))),  '' from  #SY_FM_Error_Log  insert into   #SY_FM_Error_Log select  distinct GL10110.ACTINDX,  0,  0,  '',  0,  0,  '',  0.00 from   GL10110,  GL00100 where  GL10110.ACTINDX = GL00100.ACTINDX and  GL10110.ACCATNUM <> GL00100.ACCATNUM  if @@rowcount <> 0  begin  insert into  SY03400  select  @I_cUser_ID,  0.00,  @I_cAccount_MSTR_Table_Name,  @cGETMSG3133,  '' end  update   GL10110 set   GL10110.ACCATNUM = GL00100.ACCATNUM from   GL10110,  GL00100 where   GL10110.ACTINDX = GL00100.ACTINDX and  GL10110.ACCATNUM <> GL00100.ACCATNUM  delete #SY_FM_Error_Log  insert into   #SY_FM_Error_Log select  GL00100.ACTINDX,  0,  0,  '',  0,  0,  '',  0.00 from   GL00100 where   GL00100.ACCTTYPE = @POST_ACCT and GL00100.ACTINDX not in (select ACTINDX from MC00200 where MC00200.CURNCYID = @cCurrencyID)  insert into  SY03400 select  @I_cUser_ID,  INDEX1,  @I_cAccount_MSTR_Table_Name,  stuff(@cGETMSG10706,charindex ('%1',@cGETMSG10706),2,rtrim(GL00105.ACTNUMST)),  '' from  #SY_FM_Error_Log,  GL00105 where  #SY_FM_Error_Log.ACTINDX = GL00105.ACTINDX  insert into MC00200  select #SY_FM_Error_Log.ACTINDX, @cCurrencyID, 0, 0, 0, @CURRENCY_TRANS_AVERAGE,getutcdate()  from #SY_FM_Error_Log   return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glCLAccountMSTR] TO [DYNGRP]
GO

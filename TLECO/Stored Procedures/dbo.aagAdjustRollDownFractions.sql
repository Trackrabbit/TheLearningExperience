SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagAdjustRollDownFractions] (  @aaBudgetID INTEGER ,  @aaCodeSequence INTEGER ,  @Percentage FLOAT ,  @aaActualPriliminary INTEGER ,  @aaAmtQty INTEGER  ) AS BEGIN  DECLARE @aaParCodeSequence INTEGER  DECLARE @aaBudgetTreeID INTEGER  DECLARE @Sum FLOAT  DECLARE @temp_FiscalPeriod TABLE  (  PERIODDT DATETIME,  aaFiscalPeriod INTEGER  )  DECLARE @nCount   INTEGER  DECLARE @aaFiscalPeriod INTEGER  DECLARE @NodeValue FLOAT  DECLARE @Tolerance FLOAT  DECLARE @PeriodDate DATETIME  SELECT @aaBudgetTreeID = aaBudgetTreeID   FROM AAG00903   WHERE aaBudgetID = @aaBudgetID  SELECT TOP 1 @aaParCodeSequence = aaCodeSequence FROM AAG00902 WHERE   aaTrxDimCodeID =(SELECT DISTINCT aaTrxDimParCodeID FROM AAG00902 WHERE   aaCodeSequence = @aaCodeSequence AND aaBudgetTreeID = @aaBudgetTreeID)AND   aaBudgetTreeID = @aaBudgetTreeID  AND aaCodeSequence < @aaCodeSequence ORDER BY aaCodeSequence DESC  INSERT INTO @temp_FiscalPeriod  SELECT distinct PERIODDT, aaFiscalPeriod   FROM AAG00904   WHERE aaCodeSequence = @aaCodeSequence  ORDER BY PERIODDT  WHILE ( 1 = 1 )  BEGIN  SELECT @nCount = COUNT (*) FROM @temp_FiscalPeriod  IF @nCount = 0 BREAK  SELECT TOP 1 @PeriodDate = PERIODDT, @aaFiscalPeriod = aaFiscalPeriod FROM @temp_FiscalPeriod   SELECT @NodeValue = CASE @aaAmtQty WHEN 0 THEN (Balance * (@Percentage / 100.00))   WHEN 1 THEN ( QUANTITY * (@Percentage / 100.00)) END   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaParCodeSequence AND   aaActualPriliminary = @aaActualPriliminary AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod  SELECT @Sum = CASE @aaAmtQty WHEN 0 THEN SUM(Balance) WHEN 1 THEN SUM(QUANTITY) END   FROM AAG00904   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence in   (SELECT aaCodeSequence FROM dbo.aagGetChildNodes(@aaBudgetTreeID, @aaParCodeSequence)) AND   aaActualPriliminary = @aaActualPriliminary AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod  SET @Tolerance = @NodeValue - @Sum   IF @aaAmtQty = 0   BEGIN  UPDATE AAG00904   SET Balance = Balance + @Tolerance   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaCodeSequence AND   aaActualPriliminary = @aaActualPriliminary AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod  END   ELSE  BEGIN  UPDATE AAG00904   SET QUANTITY = QUANTITY  + @Tolerance   WHERE aaBudgetID = @aaBudgetID AND   aaCodeSequence = @aaCodeSequence AND   aaActualPriliminary = @aaActualPriliminary AND   PERIODDT = @PeriodDate AND   aaFiscalPeriod = @aaFiscalPeriod  END  DELETE FROM @temp_FiscalPeriod WHERE PERIODDT = @PeriodDate AND aaFiscalPeriod = @aaFiscalPeriod   END END    
GO
GRANT EXECUTE ON  [dbo].[aagAdjustRollDownFractions] TO [DYNGRP]
GO

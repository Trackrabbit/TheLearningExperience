SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taFSRMALine]  @I_vReturn_Record_Type smallint,   @I_vRETDOCID char(15),     @I_vLNSEQNBR numeric(19,5) = 0,    @I_vRETTYPE char(11) = null,    @I_vRETSTAT char(3) = null,    @I_vCUSTNMBR char(15) = null,    @I_vADRSCODE char(15) = null,    @I_vITEMNMBR char(31) = null,    @I_vITEMDESC char(101) = null,    @I_vLOCNCODE char(11) = null,    @I_vSVC_Ready_To_Close tinyint = null,   @I_vSVC_RMA_Reason_Code char(3) = null,   @I_vNOTETXT nvarchar(2000) = '',   @I_vRETORIG smallint = null,    @I_vRETREF char(31) = null,    @I_vEQPLINE int = null,     @I_vLNITMSEQ int = null,    @I_vSVC_RMA_From_Service tinyint = null,  @I_vCMPNTSEQ int = null,    @I_vSOP_Line_Item_Sequence int = null,   @I_vENTDTE datetime = null,    @I_vENTTME datetime = null,    @I_vETADTE datetime = null,    @I_vETATME datetime = null,    @I_vCommit_Date datetime = null,   @I_vCommit_Time datetime = null,   @I_vRETUDATE datetime = null,    @I_vReturn_Time datetime = null,   @I_vCOMPDTE datetime = null,    @I_vCOMPTME datetime = null,    @I_vPRMDATE datetime = null,    @I_vUSERID char(15) = null,    @I_vOFFID char(11) = null,    @I_vRTRNNAME char(45) = null,      @I_vRETADDR1 char(61) = null,         @I_vRETADDR2 char(61) = null,         @I_vRETADDR3 char(61) = null,         @I_vRTRNCITY char(21) = null,      @I_vSVC_Return_State char(29) = null,   @I_vRTRNZIP char(11) = null,    @I_vReturn_Country char(61) = null,   @I_vCUSTNAME char(65) = null,    @I_vCONTACT char(61) = null,    @I_vADDRESS1 char(61) = null,    @I_vADDRESS2 char(61) = null,    @I_vADDRESS3 char(61) = null,    @I_vCITY char(35) = null,    @I_vSTATE char(29) = null,    @I_vZIPCODE char(11) = null,    @I_vCOUNTRY char(61) = null,    @I_vCSTPONBR char(21) = null,    @I_vQUANTITY numeric(19,5) = null,   @I_vUOFM char(9) = null,    @I_vUNITCOST numeric(19,5) = null,   @I_vUNITPRCE numeric(19,5) = null,   @I_vXTNDPRCE numeric(19,5) = null,   @I_vCUSTOWN tinyint = null,    @I_vFACTSEAL tinyint = null,    @I_vFlat_Rate_Repair_Price numeric(19,5) = null,  @I_vRepair_Price numeric(19,5) = null,   @I_vNTE_Price numeric(19,5) = null,   @I_vRepair_Cost numeric(19,5) = null,   @I_vBill_of_Lading char(31) = null,   @I_vSHIPMTHD char(15) = null,    @I_vLocation_Code_Replacemen char(11) = null,  @I_vReplace_Item_Number char(31) = null,  @I_vReplace_U_Of_M char(9) = null,   @I_vReplace_Price_Level char(11) = null,  @I_vReplace_QTY numeric(19,5) = null,   @I_vReplace_Cost numeric(19,5) = null,   @I_vReplace_Price numeric(19,5) = null,   @I_vItem_Number_Invoice char(31) = null,  @I_vUSERDEF1 char(21) = null,    @I_vUSERDEF2 char(21) = null,    @I_vUSRDEF03 char(21) = null,    @I_vUSRDEF04 char(21) = null,    @I_vUSRDEF05 char(21) = null,    @I_vCURNCYID char(15) = null,    @I_vReturn_Item_Number char(31) = null,   @I_vReturn_Item_Description char(51) = null,  @I_vReturn_Location_Code char(11) = null,  @I_vReturn_QTY numeric(19,5) = null,   @I_vReturn_U_Of_M char(9) = null,   @I_vRETCOST numeric(19,5) = null,   @I_vSVC_Return_Price_Level char(11) = null,  @I_vSVC_Return_Price numeric(19,5) = null,  @I_vSVC_Extended_Return_Pric numeric(19,5) = null,  @I_vSVC_FO_ID char(51) = null,    @I_vSVC_SCM_Complete smallint = null,   @I_vUpdateIfExists tinyint = 1,    @I_vRequesterTrx smallint = 0,    @I_vUSRDEFND1 char(50) = '',    @I_vUSRDEFND2 char(50) = '',      @I_vUSRDEFND3 char(50) = '',    @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output,    @oErrString varchar(255) output     with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @O_TODAY datetime,  @O_DUMMYDT datetime,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState int,  @O_iNOTEINDX numeric(19,5),  @iStatus int,  @iError int,  @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @CMPANYID smallint,  @iValueExists smallint,  @AuditDesc char(31),  @UserID char(15),  @AuditLNITMSEQ int,  @Line_Seq_Exists smallint,  @FRMSTAT char(3),  @SRVSTAT char(3),  @O_iQTYONHND numeric(19,5),  @O_iQTYALLOC numeric(19,5),  @OFFID char(10),  @RETTYPE char(10),  @O_iTraveler_Printed tinyint,  @O_vSVC_RMA_Reason_Code_Desc char(31),  @O_vREFRENCE char(31),  @O_vDECPLQTY smallint,  @O_vORUNTCST numeric(19,5),  @O_vEXTDCOST numeric(19,5),  @O_vOREXTCST numeric(19,5),  @O_vORUNTPRC numeric(19,5),  @O_vOXTNDPRC numeric(19,5),  @O_vOrig_Flat_RepairPrice numeric(19,5),  @O_vOriginating_Repair_Price numeric(19,5),  @O_vOriginating_NTE_Price numeric(19,5),  @O_vOriginating_Repair_Cost numeric(19,5),  @O_vOriginating_Replace_Cost numeric(19,5),  @O_vOriginating_Replace_Pric numeric(19,5),  @O_vDECPLCUR smallint,  @O_vODECPLCU smallint,  @O_vOriginating_Return_Cost numeric(19,5),  @O_vSVC_Extended_Return_Cost numeric(19,5),  @O_vSVC_Orig_Ext_Return_Cost numeric(19,5),  @O_vOriginating_Return_Price numeric(19,5),  @O_vSVC_Orig_Ext_Return_Pric numeric(19,5),  @O_ITEMNMBR char(31),  @iITMTRKOP smallint,  @iITEMTYPE smallint,  @iUOMSCHDL char(10),  @iSELNGUOM char(10),  @iCurrDecPlaces smallint,  @iQtyDecPlaces smallint,  @iSTNDCOST numeric(19,5),  @iCURRCOST numeric(19,5),  @O_vITMSHNAM char(15),  @O_vITMGEDSC char(10),  @O_vITMCLSCD char(10),  @O_vITEMSHWT bigint,  @ITMDEFPRCLEVEL char(15),  @iCURRNIDX int,  @iMCCurrDecPlaces smallint,  @iValid smallint,  @PYMTRMID char(20),  @PRBTADCD char(15),  @CURNCYID char(15),  @RATETPID char(15),  @O_vADDRESS1 char(60),  @O_vADDRESS2 char(60),  @O_vADDRESS3 char(60),  @O_vCOUNTRY char(60),  @O_vCITY char(35),  @O_vSTATE char(40),  @O_vZIP char(10),  @O_vCNTCPRSN char(60),  @O_vPHONE1 char(22),  @LOCNCODE char(11),  @CUSTNMBR char(15),  @RETCUSTNMBR char(15),  @EQUIPSTAT char(10),  @RETEQUIPSTAT char(10),  @USERETPRICELVL tinyint,  @RETPRICELVL char(10),  @USEPOP tinyint,  @USESOP tinyint,  @PRICELVL char(10),  @RETSTAT char(3),  @Received_Status char(3),  @Close_Status char(3),  @Partial_Received_Status char(3),  @ReadyToClose_Status char(3),  @iRPLITMTRKOP smallint,  @iRPLITEMTYPE smallint,  @O_vRPLUOMSCHDL char(10),  @O_vRPLSELNGUOM char(10),  @iRPLCurrDecPlaces smallint,  @iRPLQtyDecPlaces smallint,  @iRPLSTNDCOST numeric(19,5),  @iRPLCURRCOST numeric(19,5),  @O_vRPLITMCLSCD char(10),  @O_vRPLITMDEFPRCLEVEL char(15),  @iRTNITMTRKOP smallint,  @iRTNITEMTYPE smallint,  @O_vRTNUOMSCHDL char(10),  @O_vRTNSELNGUOM char(10),  @iRTNCurrDecPlaces smallint,  @iRTNQtyDecPlaces smallint,  @iRTNSTNDCOST numeric(19,5),  @iRTNCURRCOST numeric(19,5),  @O_vRTNITMCLSCD char(10),  @O_vRTNITMDEFPRCLEVEL char(15),  @FUNLCURR char(15),  @O_vEXGTBLID char(15),  @O_vDECPLACS int,  @O_vRATECALC int,  @O_vVIEWMODE int,  @O_vISMCTRX tinyint,  @O_vDENXRATE numeric(19,5),  @O_vMCTRXSTT int,  @ISMCTRX int,  @O_vReceived tinyint,  @O_vRMA_Status smallint,  @O_vORDDOCID char(15),  @O_vTRANSLINESEQ int,  @O_vSTATUS smallint,  @O_vCredit_SOP_Type smallint,  @O_vCredit_SOP_Number char(21),  @O_vCredit_SOP_Line_Item_Seq int,  @O_vReplace_SOP_Type smallint,  @O_vReplace_SOP_Number char(21),  @O_vReplace_SOP_Line_Item_Se int,  @SLSRATETPID char(15),  @FINRATETPID char(15),  @PURRATETPID char(15),  @O_vXCHGRATE numeric(19,7),  @O_vRATETPID char(15),  @O_vEXPNDATE datetime,  @O_vEXCHDATE datetime,  @O_vEXGTBDSC char(30),  @O_vEXTBLSRC char(50),  @O_vRATEEXPR smallint,  @O_vDYSTINCR smallint,  @O_vRATEVARC numeric(19,7),  @O_vTRXDTDEF smallint,  @O_vRTCLCMTD smallint,  @O_vPRVDSLMT smallint,  @O_vDATELMTS smallint,  @O_vTIME1 datetime,  @O_vSRVRECTYPE smallint,  @O_vCALLNBR char(11),  @O_vSOPTYPE smallint,  @O_vSOPNUMBE char(21),  @O_vBill_To_Customer char(15),  @O_vSVC_Bill_To_Address_Code char(15),  @RETPATH smallint,  @O_vSOP_Number_Invoice char(21),  @ItemListPrice numeric(19,5),  @O_vQTYINBASE numeric(19,5),  @DEFUNITCOST numeric(19,5),  @DEFUNITPRCE numeric(19,5),  @Flat_Rate_Repair_Price numeric(19,5),  @Repair_Price numeric(19,5),  @NTE_Price numeric(19,5),  @Repair_Cost numeric(19,5),  @Replace_Cost numeric(19,5),  @Replace_Price numeric(19,5),  @SVC_Return_Price numeric(19,5),  @RETCOST numeric(19,5),  @iSerialCount numeric(19,5),  @ISMCREG tinyint,  @O_vReplace_Item_Desc char(101),  @DEFINVCITEM varchar(31),  @DEFSHIPMTHD char(15),  @SITEINACTIVE tinyint,  @ITEMSITEINACTIVE tinyint  select  @O_TODAY = convert(char(11), convert(datetime, getdate()), 101),  @O_DUMMYDT = convert(char(11), convert(datetime, '1900-01-01'), 101),  @NOTEINDX = 0.0,  @iGetNextNoteIdxErrState = 0,  @O_iNOTEINDX = 0.0,  @iStatus = 0,  @iError = 0,  @iCustomState =  0,  @O_oErrorState = 0,  @iCustomErrString = '',  @O_iErrorState = 0,  @oErrString = '',  @CMPANYID = 0,  @FRMSTAT = '',  @SRVSTAT = '',  @iValueExists = 0,  @AuditDesc = 'RMA Line Add/Update',  @UserID = 'eConnect',  @AuditLNITMSEQ = 0,  @Line_Seq_Exists = 0,  @O_iQTYONHND = 0,  @O_iQTYALLOC = 0,  @OFFID = '',  @RETTYPE = '',  @O_iTraveler_Printed = 0,  @O_vSVC_RMA_Reason_Code_Desc = '',  @O_vREFRENCE = '',  @O_vDECPLQTY = 1,  @O_vORUNTCST = 0,  @O_vEXTDCOST = 0,  @O_vOREXTCST = 0,  @O_vORUNTPRC = 0,  @O_vOXTNDPRC = 0,  @O_vOrig_Flat_RepairPrice = 0,  @O_vOriginating_Repair_Price = 0,  @O_vOriginating_NTE_Price = 0,  @O_vOriginating_Repair_Cost = 0,  @O_vOriginating_Replace_Cost = 0,  @O_vOriginating_Replace_Pric = 0,  @O_vDECPLCUR = 0,  @O_vODECPLCU = 0,  @O_vOriginating_Return_Cost = 0,  @O_vSVC_Extended_Return_Cost = 0,  @O_vSVC_Orig_Ext_Return_Cost = 0,  @O_vOriginating_Return_Price = 0,  @O_vSVC_Orig_Ext_Return_Pric = 0,  @O_ITEMNMBR = '',  @iITMTRKOP = 1,  @iITEMTYPE = 1,  @iUOMSCHDL = '',  @iSELNGUOM = '',  @iCurrDecPlaces = 0,  @iQtyDecPlaces = 0,  @iSTNDCOST = 0,  @iCURRCOST = 0,  @O_vITMSHNAM = '',  @O_vITMGEDSC = '',  @O_vITMCLSCD = '',  @O_vITEMSHWT = 0,  @ITMDEFPRCLEVEL = '',  @iCURRNIDX = 0,  @iMCCurrDecPlaces = 0,  @iValid = 0,  @PYMTRMID = '',  @PRBTADCD = '',  @CURNCYID = '',  @RATETPID = '',  @O_vADDRESS1 = '',  @O_vADDRESS2 = '',  @O_vADDRESS3 = '',  @O_vCOUNTRY = '',  @O_vCITY = '',  @O_vSTATE = '',  @O_vZIP = '',  @O_vCNTCPRSN = '',  @O_vPHONE1 = '',  @LOCNCODE = '',  @CUSTNMBR = '',  @RETCUSTNMBR = '',  @EQUIPSTAT = '',  @RETEQUIPSTAT = '',  @USERETPRICELVL = 0,  @RETPRICELVL = '',  @USEPOP = 0,  @USESOP = 0,  @PRICELVL = '',  @RETSTAT = '',  @Received_Status = '',  @Close_Status = '',  @Partial_Received_Status = '',  @ReadyToClose_Status = '',  @iRPLITMTRKOP = 0,  @iRPLITEMTYPE = 0,  @O_vRPLUOMSCHDL = '',  @O_vRPLSELNGUOM = '',  @iRPLCurrDecPlaces = 0,  @iRPLQtyDecPlaces = 0,  @iRPLSTNDCOST = 0,  @iRPLCURRCOST = 0,  @O_vRPLITMCLSCD = '',  @O_vRPLITMDEFPRCLEVEL = '',  @iRTNITMTRKOP = 0,  @iRTNITEMTYPE = 0,  @O_vRTNUOMSCHDL = '',  @O_vRTNSELNGUOM = '',  @iRTNCurrDecPlaces = 0,  @iRTNQtyDecPlaces = 0,  @iRTNSTNDCOST = 0,  @iRTNCURRCOST = 0,  @O_vRTNITMCLSCD = '',  @O_vRTNITMDEFPRCLEVEL = '',  @FUNLCURR = '',  @O_vRATECALC = 1,  @O_vMCTRXSTT = 0,  @O_vDECPLACS = 0,  @O_vVIEWMODE = 3,  @O_vDENXRATE = 0,  @O_vEXGTBLID = '',  @ISMCTRX = 0,  @O_vReceived = 0,  @O_vRMA_Status = 0,  @O_vORDDOCID = '',  @O_vTRANSLINESEQ = 0,  @O_vSTATUS = 0,  @O_vCredit_SOP_Number = '',  @O_vCredit_SOP_Line_Item_Seq = 0,  @O_vReplace_SOP_Type = 0,  @O_vReplace_SOP_Number = '',  @O_vReplace_SOP_Line_Item_Se = 0,  @SLSRATETPID = '',  @FINRATETPID = '',  @PURRATETPID = '',  @O_vRATEEXPR = -1,  @O_vDYSTINCR = -1,  @O_vRATEVARC = 0,  @O_vTRXDTDEF = -1,  @O_vRTCLCMTD = -1,  @O_vPRVDSLMT = 0,  @O_vDATELMTS = 0,  @O_vSRVRECTYPE = 0,  @O_vCALLNBR = '',  @O_vSOPTYPE = 0,  @O_vSOPNUMBE = '',  @O_vBill_To_Customer = '',  @O_vSVC_Bill_To_Address_Code = '',  @RETPATH = 0,  @O_vSOP_Number_Invoice = '',  @ItemListPrice = 0,  @O_vQTYINBASE = 0,  @Flat_Rate_Repair_Price = 0,  @Repair_Price = 0,  @NTE_Price = 0,  @Repair_Cost = 0,  @SVC_Return_Price = 0,  @RETCOST = 0,  @iSerialCount = 0,  @ISMCREG = 1,  @O_vReplace_Item_Desc = '',  @DEFINVCITEM = '',  @DEFSHIPMTHD = '',  @SITEINACTIVE = 0,  @ITEMSITEINACTIVE = 0  exec @iStatus = taFSRMALinePre  @I_vReturn_Record_Type output,  @I_vRETDOCID output,  @I_vLNSEQNBR output,  @I_vRETTYPE output,  @I_vRETSTAT output,  @I_vCUSTNMBR output,  @I_vADRSCODE output,  @I_vITEMNMBR output,  @I_vITEMDESC output,  @I_vLOCNCODE output,  @I_vSVC_Ready_To_Close output,  @I_vSVC_RMA_Reason_Code output,  @I_vNOTETXT output,  @I_vRETORIG output,  @I_vRETREF output,  @I_vEQPLINE output,  @I_vLNITMSEQ output,  @I_vSVC_RMA_From_Service output,  @I_vCMPNTSEQ output,  @I_vSOP_Line_Item_Sequence output,  @I_vENTDTE output,  @I_vENTTME output,  @I_vETADTE output,  @I_vETATME output,  @I_vCommit_Date output,  @I_vCommit_Time output,  @I_vRETUDATE output,  @I_vReturn_Time output,  @I_vCOMPDTE output,  @I_vCOMPTME output,  @I_vPRMDATE output,  @I_vUSERID output,  @I_vOFFID output,  @I_vRTRNNAME output,  @I_vRETADDR1 output,  @I_vRETADDR2 output,  @I_vRETADDR3 output,  @I_vRTRNCITY output,  @I_vSVC_Return_State output,  @I_vRTRNZIP output,  @I_vReturn_Country output,  @I_vCUSTNAME output,  @I_vCONTACT output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIPCODE output,  @I_vCOUNTRY output,  @I_vCSTPONBR output,  @I_vQUANTITY output,  @I_vUOFM output,  @I_vUNITCOST output,  @I_vUNITPRCE output,  @I_vXTNDPRCE output,  @I_vCUSTOWN output,  @I_vFACTSEAL output,  @I_vFlat_Rate_Repair_Price output,  @I_vRepair_Price output,  @I_vNTE_Price output,  @I_vRepair_Cost output,  @I_vBill_of_Lading output,  @I_vSHIPMTHD output,  @I_vLocation_Code_Replacemen output,  @I_vReplace_Item_Number output,  @I_vReplace_U_Of_M output,  @I_vReplace_Price_Level output,  @I_vReplace_QTY output,  @I_vReplace_Cost output,  @I_vReplace_Price output,  @I_vItem_Number_Invoice output,  @I_vUSERDEF1 output,  @I_vUSERDEF2 output,  @I_vUSRDEF03 output,  @I_vUSRDEF04 output,  @I_vUSRDEF05 output,  @I_vCURNCYID output,  @I_vReturn_Item_Number output,  @I_vReturn_Item_Description output,  @I_vReturn_Location_Code output,  @I_vReturn_QTY output,  @I_vReturn_U_Of_M output,  @I_vRETCOST output,  @I_vSVC_Return_Price_Level output,  @I_vSVC_Return_Price output,  @I_vSVC_Extended_Return_Pric output,  @I_vSVC_FO_ID output,  @I_vSVC_SCM_Complete output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  set @iError = @@error if @iStatus = 0 and @iError <> 0 begin  set @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  set @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 9910     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vReturn_Record_Type is NULL or  @I_vRETDOCID is NULL or  @I_vCUSTNMBR is NULL or  @I_vADRSCODE is NULL or   @I_vITEMNMBR is NULL)  begin  set @O_iErrorState = 9911   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vRETDOCID = '' or  @I_vReturn_Record_Type = 0 or  @I_vCUSTNMBR = '' or  @I_vADRSCODE = '' ) begin  set @O_iErrorState = 9912    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vReturn_Record_Type < 0 or  @I_vSVC_Ready_To_Close < 0 or  @I_vRETORIG < 0 begin  set @O_iErrorState = 9913    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if  @I_vEQPLINE < 0 or  @I_vLNITMSEQ < 0  begin  set @O_iErrorState = 9914    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if  @I_vCMPNTSEQ < 0 or  @I_vSOP_Line_Item_Sequence < 0 begin  set @O_iErrorState = 9915    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_vCredit_SOP_Type < 0 or  @O_vCredit_SOP_Line_Item_Seq < 0 or  @O_vReplace_SOP_Type < 0 or  @O_vReplace_SOP_Line_Item_Se < 0 begin  set @O_iErrorState = 9916    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vQUANTITY < 0 or   @I_vCUSTOWN < 0 or   @I_vFACTSEAL < 0 or  @O_vXCHGRATE < 0  begin  set @O_iErrorState = 9917    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vUNITCOST < 0 or   @I_vUNITPRCE < 0 or   @I_vXTNDPRCE < 0 or   @I_vFlat_Rate_Repair_Price < 0 or   @I_vRepair_Price < 0 or  @I_vNTE_Price < 0 or  @I_vRepair_Cost < 0 begin  set @O_iErrorState = 9918    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC35200 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID and LNSEQNBR = @I_vLNSEQNBR) begin  select @Line_Seq_Exists=1   set @O_iErrorState = 9919    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if exists(select 1 from SVC05200 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID and LNSEQNBR = @I_vLNSEQNBR) begin  select @Line_Seq_Exists=1 end  if (@Line_Seq_Exists = 0) begin  if (@I_vITEMNMBR = '' or  @I_vLOCNCODE = '')  begin  set @O_iErrorState = 9920    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vADRSCODE = UPPER(@I_vADRSCODE),  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vRETDOCID = UPPER(@I_vRETDOCID)  if (@I_vReturn_Record_Type < 1) and (@I_vReturn_Record_Type > 2) begin  set @O_iErrorState = 10329    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC05015 (nolock) where RETDOCID = @I_vRETDOCID and (MKDTOPST = 1 or CB_Packing_Slip = 1)) begin  set @O_iErrorState = 9922    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@Line_Seq_Exists = 1) begin  select  @I_vRETTYPE = case  when @I_vRETTYPE is null then isnull(RETTYPE,'')  else @I_vRETTYPE  end,  @O_vRMA_Status = case  when @O_vRMA_Status = 0 then isnull(RMA_Status, 0)  else @O_vRMA_Status  end,  @I_vRETSTAT = case  when @I_vRETSTAT is null then isnull(RETSTAT, '')  else @I_vRETSTAT  end,  @CUSTNMBR = isnull(CUSTNMBR, ''),  @I_vADRSCODE = case   when @I_vADRSCODE is null then isnull(ADRSCODE, '')  else @I_vADRSCODE  end,  @O_ITEMNMBR = isnull(ITEMNMBR, ''),  @I_vITEMDESC = case  when @I_vITEMDESC is null then isnull(ITEMDESC, '')  else @I_vITEMDESC  end,  @I_vLOCNCODE = case  when @I_vLOCNCODE is null then isnull(LOCNCODE, '')  else @I_vLOCNCODE  end,  @O_vReceived = case  when @O_vReceived = 0 then isnull(Received, 0)  else @O_vReceived  end,  @O_iTraveler_Printed = isnull(Traveler_Printed, 0),  @I_vSVC_Ready_To_Close = case   when @I_vSVC_Ready_To_Close is null then isnull(SVC_Ready_To_Close, 0)  else @I_vSVC_Ready_To_Close  end,  @I_vSVC_RMA_Reason_Code = case  when @I_vSVC_RMA_Reason_Code is null then isnull(SVC_RMA_Reason_Code, '')  else @I_vSVC_RMA_Reason_Code  end,  @O_vSVC_RMA_Reason_Code_Desc = isnull(SVC_RMA_Reason_Code_Desc, ''),  @I_vRETORIG = case   when @I_vRETORIG is null then isnull(RETORIG, 1)   else @I_vRETORIG  end,  @I_vRETREF = case  when @I_vRETREF is null then isnull(RETREF, '')  else @I_vRETREF  end,  @O_vSRVRECTYPE = case  when @I_vRETORIG = 2 then isnull(SRVRECTYPE, 0)  else 0  end,  @O_vCALLNBR = case  when @I_vRETORIG = 2 then isnull(CALLNBR, @I_vRETREF)  else ''  end,  @I_vEQPLINE = case  when @I_vEQPLINE is null then isnull(EQPLINE, 1)  else @I_vEQPLINE  end,  @I_vLNITMSEQ = case   when @I_vLNITMSEQ is null then isnull(LNITMSEQ, 0)   else @I_vLNITMSEQ  end,  @I_vSVC_RMA_From_Service = case  when @I_vSVC_RMA_From_Service is null then isnull(SVC_RMA_From_Service, 0)  else @I_vSVC_RMA_From_Service  end,  @O_vSOPTYPE = case  when @I_vRETORIG = 3 then isnull(SOPTYPE, 3)  else 0  end,  @O_vSOPNUMBE = case  when @I_vRETORIG = 3 then isnull(SOPNUMBE, @I_vRETREF)  else ''  end,  @I_vCMPNTSEQ = case   when @I_vCMPNTSEQ is null then isnull(CMPNTSEQ, 0)  else @I_vCMPNTSEQ  end,  @I_vSOP_Line_Item_Sequence = case  when @I_vSOP_Line_Item_Sequence is null then isnull(SOP_Line_Item_Sequence, 0)  else @I_vSOP_Line_Item_Sequence  end,  @I_vENTDTE = case   when @I_vENTDTE is null then isnull(ENTDTE, @O_TODAY)  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then isnull(ENTTME, convert(varchar(10), getdate(), 108))  else @I_vENTTME  end,  @I_vETADTE = case   when @I_vETADTE is null then isnull(ETADTE, @O_DUMMYDT)  else @I_vETADTE  end,  @I_vETATME = case   when @I_vETATME is null then isnull(ETATME, @O_DUMMYDT)  else @I_vETATME  end,  @I_vCommit_Date = case  when @I_vCommit_Date is null then isnull(Commit_Date, @O_DUMMYDT)  else @I_vCommit_Date  end,  @I_vCommit_Time = case   when @I_vCommit_Time is null then isnull(Commit_Time, @O_DUMMYDT)  else @I_vCommit_Time  end,  @I_vRETUDATE = case  when @I_vRETUDATE is null then isnull(RETUDATE, @O_DUMMYDT)  else @I_vRETUDATE  end,  @I_vReturn_Time = case  when @I_vReturn_Time is null then isnull(Return_Time, @O_DUMMYDT)  else @I_vReturn_Time  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then isnull(COMPDTE, @O_DUMMYDT)  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then isnull(COMPTME, @O_DUMMYDT)  else @I_vCOMPTME  end,  @I_vPRMDATE = case  when @I_vPRMDATE is null then isnull(PRMDATE, @O_DUMMYDT)  else @I_vPRMDATE  end,  @O_vREFRENCE = isnull(REFRENCE, ''),  @I_vUSERID = case  when @I_vUSERID is null then isnull(USERID, convert(varchar(15), SYSTEM_USER))  else @I_vUSERID  end,  @I_vOFFID = case  when @I_vOFFID is null then isnull(OFFID, '')  else @I_vOFFID  end,  @I_vRTRNNAME = case  when @I_vRTRNNAME is null then isnull(RTRNNAME, '')  else @I_vRTRNNAME  end,  @I_vRETADDR1 = case  when @I_vRETADDR1 is null then isnull(RETADDR1, '')  else @I_vRETADDR1  end,  @I_vRETADDR2 = case  when @I_vRETADDR2 is null then isnull(RETADDR2, '')  else @I_vRETADDR2  end,  @I_vRETADDR3 = case  when @I_vRETADDR3 is null then isnull(RETADDR3, '')  else @I_vRETADDR3  end,  @I_vRTRNCITY = case  when @I_vRTRNCITY is null then isnull(RTRNCITY, '')  else @I_vRTRNCITY  end,  @I_vSVC_Return_State = case  when @I_vSVC_Return_State is null then isnull(SVC_Return_State, '')  else @I_vSVC_Return_State  end,  @I_vRTRNZIP = case  when @I_vRTRNZIP is null then isnull(RTRNZIP, '')  else @I_vRTRNZIP  end,  @I_vReturn_Country = case  when @I_vReturn_Country is null then isnull(Return_Country, '')  else @I_vReturn_Country  end,  @I_vCUSTNAME = case  when @I_vCUSTNAME is null then isnull(CUSTNAME, '')  else @I_vCUSTNAME  end,  @I_vCONTACT = case  when @I_vCONTACT is null then isnull(CONTACT, '')  else @I_vCONTACT  end,  @I_vADDRESS1 = case  when @I_vADDRESS1 is null then isnull(ADDRESS1, '')  else @I_vADDRESS1  end,  @I_vADDRESS2 = case  when @I_vADDRESS2 is null then isnull(ADDRESS2, '')  else @I_vADDRESS2  end,  @I_vADDRESS3 = case  when @I_vADDRESS3 is null then isnull(ADDRESS3, '')  else @I_vADDRESS3  end,  @I_vCITY = case  when @I_vCITY is null then isnull(CITY, '')  else @I_vCITY  end,  @I_vSTATE = case  when @I_vSTATE is null then isnull(STATE, '')  else @I_vSTATE  end,  @I_vZIPCODE = case  when @I_vZIPCODE is null then isnull(ZIPCODE, '')  else @I_vZIPCODE  end,  @I_vCOUNTRY = case  when @I_vCOUNTRY is null then isnull(COUNTRY, '')  else @I_vCOUNTRY  end,  @O_vBill_To_Customer = isnull(Bill_To_Customer, @I_vCUSTNMBR),  @O_vSVC_Bill_To_Address_Code = isnull(SVC_Bill_To_Address_Code, @I_vADRSCODE),  @I_vCSTPONBR = case  when @I_vCSTPONBR is null then isnull(CSTPONBR, '')  else @I_vCSTPONBR  end,  @I_vQUANTITY = case  when @I_vQUANTITY is null then isnull(QUANTITY, 0)  else @I_vQUANTITY  end,  @I_vUOFM = case  when @I_vUOFM is null then isnull(UOFM, '')  else @I_vUOFM  end,  @DEFUNITCOST = case  when @I_vUNITCOST is null then isnull(UNITCOST, 0)  else @I_vUNITCOST  end,  @O_vORUNTCST = isnull(ORUNTCST, 0),  @O_vEXTDCOST = isnull(EXTDCOST, 0),  @O_vOREXTCST = isnull(OREXTCST, 0),  @DEFUNITPRCE = case  when @I_vUNITPRCE is null then isnull(UNITPRCE, 0)  else @I_vUNITPRCE  end,  @O_vORUNTPRC = isnull(ORUNTPRC, 0),  @I_vXTNDPRCE = case  when @I_vXTNDPRCE is null then XTNDPRCE  else @I_vXTNDPRCE  end,  @O_vOXTNDPRC = isnull(OXTNDPRC, 0),  @I_vCUSTOWN = case   when @I_vCUSTOWN is null then isnull(CUSTOWN, 0)  else @I_vCUSTOWN  end,  @I_vFACTSEAL = case  when @I_vFACTSEAL is null then isnull(FACTSEAL, 0)  else @I_vFACTSEAL  end,  @O_vORDDOCID = isnull(ORDDOCID, ''),  @O_vTRANSLINESEQ = isnull(TRANSLINESEQ, 0),  @O_vSTATUS = isnull(STATUS, 0),  @Flat_Rate_Repair_Price = case  when @I_vFlat_Rate_Repair_Price is null then isnull(Flat_Rate_Repair_Price, 0)  else @I_vFlat_Rate_Repair_Price  end,  @O_vOrig_Flat_RepairPrice = isnull(Orig_Flat_RepairPrice, 0),  @Repair_Price = case  when @I_vRepair_Price is null then isnull(Repair_Price, 0)  else @I_vRepair_Price  end,  @O_vOriginating_Repair_Price = isnull(Originating_Repair_Price, 0),  @NTE_Price = case  when @I_vNTE_Price is null then isnull(NTE_Price, 0)  else @I_vNTE_Price  end,  @O_vOriginating_NTE_Price = isnull(Originating_NTE_Price, 0),  @Repair_Cost = case  when @I_vRepair_Cost is null then isnull(Repair_Cost, 0)  else @I_vRepair_Cost  end,  @O_vOriginating_Repair_Cost = isnull(Originating_Repair_Cost, 0),  @I_vBill_of_Lading = case  when @I_vBill_of_Lading is null then isnull(Bill_of_Lading, '')  else @I_vBill_of_Lading  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null then isnull(SHIPMTHD, '')  else @I_vSHIPMTHD  end,  @O_vCredit_SOP_Type = isnull(Credit_SOP_Type, 0),  @O_vCredit_SOP_Number = isnull(Credit_SOP_Number, ''),  @O_vCredit_SOP_Line_Item_Seq = isnull(Credit_SOP_Line_Item_Seq, 0),  @O_vReplace_SOP_Type = isnull(Replace_SOP_Type, 0),  @O_vReplace_SOP_Number = isnull(Replace_SOP_Number, ''),  @O_vReplace_SOP_Line_Item_Se = isnull(Replace_SOP_Line_Item_Se, 0),  @I_vLocation_Code_Replacemen = isnull(@I_vLocation_Code_Replacemen, ''),  @I_vReplace_Item_Number = case  when @I_vReplace_Item_Number is null then isnull(@I_vReplace_Item_Number, '')  else @I_vReplace_Item_Number  end,  @I_vReplace_U_Of_M = case  when @I_vReplace_U_Of_M is null then isnull(Replace_U_Of_M, '')  else @I_vReplace_U_Of_M  end,  @I_vReplace_Price_Level = case  when @I_vReplace_Price_Level is null then isnull(Replace_Price_Level, '')  else @I_vReplace_Price_Level  end,  @I_vReplace_QTY = case  when @I_vReplace_QTY is null then isnull(Replace_QTY, 0)  else @I_vReplace_QTY  end,  @Replace_Cost = case  when @I_vReplace_Cost is null then isnull(Replace_Cost, 0)  else @I_vReplace_Cost  end,  @O_vOriginating_Replace_Cost = case  when @O_vOriginating_Replace_Cost is null then isnull(Originating_Replace_Cost, 0)  else @O_vOriginating_Replace_Cost  end,  @Replace_Price = case  when @I_vReplace_Price is null then isnull(Replace_Price, 0)  else @I_vReplace_Price  end,  @O_vOriginating_Replace_Pric = isnull(Originating_Replace_Pric, 0),  @O_vSOP_Number_Invoice = isnull(SOP_Number_Invoice, ''),  @I_vItem_Number_Invoice = case  when @I_vItem_Number_Invoice is null then isnull(Item_Number_Invoice, '')  else @I_vItem_Number_Invoice  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then isnull(USERDEF1, '')  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then isnull(USERDEF2, '')  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case   when @I_vUSRDEF03 is null then isnull(USRDEF03, '')  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then isnull(USRDEF04, '')  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then isnull(USRDEF05, '')  else @I_vUSRDEF05  end,  @iCURRNIDX = case  when @I_vCURNCYID is null then isnull(CURRNIDX, 0)  else @iCURRNIDX  end,  @I_vCURNCYID = case  when @I_vCURNCYID is null then ''  else @I_vCURNCYID  end,  @O_vDECPLCUR = isnull(DECPLCUR, 0),  @O_vODECPLCU = isnull(ODECPLCU, 0),  @I_vReturn_Item_Number = case  when @I_vReturn_Item_Number is null then isnull(Return_Item_Number, @I_vReturn_Item_Number)  else @I_vReturn_Item_Number  end,  @I_vReturn_Item_Description = case  when @I_vReturn_Item_Description is null then isnull(Return_Item_Description, '')  else @I_vReturn_Item_Description  end,  @I_vReturn_Location_Code = case  when @I_vReturn_Location_Code is null then isnull(Return_Location_Code, '')  else @I_vReturn_Location_Code  end,  @I_vReturn_QTY = case  when @I_vReturn_QTY is null then isnull(Return_QTY, 0)  else @I_vReturn_QTY  end,  @I_vReturn_U_Of_M = case  when @I_vReturn_U_Of_M is null then isnull(Return_U_Of_M, '')  else @I_vReturn_U_Of_M  end,  @RETCOST = case  when @I_vRETCOST is null then isnull(RETCOST, 0)  else @I_vRETCOST  end,  @O_vOriginating_Return_Cost = isnull(Originating_Return_Cost, 0),  @O_vSVC_Extended_Return_Cost = case  when @O_vSVC_Extended_Return_Cost is null then isnull(SVC_Extended_Return_Cost, 0)  else @O_vSVC_Extended_Return_Cost   end,  @O_vSVC_Orig_Ext_Return_Cost = case  when @O_vSVC_Orig_Ext_Return_Cost is null then isnull(SVC_Orig_Ext_Return_Cost, 0)  else @O_vSVC_Orig_Ext_Return_Cost  end,  @I_vSVC_Return_Price_Level = case  when @I_vSVC_Return_Price_Level is null then isnull(SVC_Return_Price_Level, '')  else @I_vSVC_Return_Price_Level  end,  @SVC_Return_Price = case  when @I_vSVC_Return_Price is null then isnull(SVC_Return_Price, 0)  else @I_vSVC_Return_Price  end,  @O_vOriginating_Return_Price = case  when @O_vOriginating_Return_Price is null then isnull(Originating_Return_Price, 0)  else @O_vOriginating_Return_Price  end,  @I_vSVC_Extended_Return_Pric = case  when @I_vSVC_Extended_Return_Pric is null then isnull(SVC_Extended_Return_Pric, 0)  else @I_vSVC_Extended_Return_Pric  end,  @O_vSVC_Orig_Ext_Return_Pric = isnull(SVC_Orig_Ext_Return_Pric, 0),  @I_vSVC_FO_ID = case  when @I_vSVC_FO_ID is null then isnull(SVC_FO_ID, '')  else @I_vSVC_FO_ID  end,  @I_vSVC_SCM_Complete = case  when @I_vSVC_SCM_Complete is null then isnull(SVC_SCM_Complete, 0)  else @I_vSVC_SCM_Complete  end,  @O_iNOTEINDX = isnull(NOTEINDX, 0)  from SVC05200 (nolock)   where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID and LNSEQNBR = @I_vLNSEQNBR end  if (@CUSTNMBR <> '') and (@I_vCUSTNMBR <> @CUSTNMBR) begin  set @O_iErrorState = 9997     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @OFFID = case  when @OFFID = ''  then isnull(OFFID, '')  else @OFFID  end  from SVC00950 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE  select @RETTYPE=  case  when @RETTYPE = ''  then isnull(RETTYPE, '')  else @RETTYPE  end,  @RETCUSTNMBR = isnull(RETCSTNR, ''),  @EQUIPSTAT = isnull(SRLSTAT, ''),  @RETEQUIPSTAT = isnull(RETSTATUS, ''),  @USERETPRICELVL = isnull(SVC_Use_Return_Price_Lev, 0),  @RETPRICELVL = isnull(SVC_Return_Price_Level, ''),  @USEPOP = isnull(Use_POP, 0),  @USESOP = isnull(Use_SOP, 0)  from SVC00998 (nolock)  select @PRICELVL =   case  when @PRICELVL = ''  then isnull(PRCLEVEL,'')   else @PRICELVL  end  from RM40101 (nolock)  select @PRICELVL =  case   when @PRICELVL = ''  then isnull(@ITMDEFPRCLEVEL, '')  else @PRICELVL  end  if (@I_vRETTYPE is null or @I_vRETTYPE = '')  select @I_vRETTYPE = @RETTYPE  if @I_vRETTYPE <> '' begin  set @iValueExists = 0  select @iValueExists = 1,   @RETSTAT = case when @I_vRETSTAT is null or @I_vRETSTAT = '' then isnull(RETSTAT,'')  else @I_vRETSTAT  end,  @Received_Status = isnull(Received_Status, ''),  @Partial_Received_Status = isnull(SVC_Partial_Received_Sta, ''),  @ReadyToClose_Status = isnull(SVC_Ready_To_Close_Statu, ''),  @Close_Status = isnull(Close_Status, ''),  @LOCNCODE = isnull(LOCNCODE, ''),  @RETPATH = isnull(RETPATH, 0),  @DEFINVCITEM = isnull(ITEMNMBR, '')   from SVC05501 (nolock) where RETTYPE = @I_vRETTYPE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9932     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select  @I_vRETTYPE = case  when @I_vRETTYPE is null then ''  else @I_vRETTYPE  end,  @I_vSVC_Ready_To_Close = case   when @I_vSVC_Ready_To_Close is null then 0  else @I_vSVC_Ready_To_Close  end,  @I_vRETSTAT = case  when (@I_vRETSTAT is null or @I_vRETSTAT = '') and (@O_vRMA_Status = 9 or @I_vSVC_Ready_To_Close = 1) then @ReadyToClose_Status  when (@I_vRETSTAT is null or @I_vRETSTAT = '') then ''  else @I_vRETSTAT  end,  @I_vCUSTNMBR = case  when @I_vCUSTNMBR is null then ''  else @I_vCUSTNMBR  end,  @I_vADRSCODE = case   when @I_vADRSCODE is null then ''  else @I_vADRSCODE  end,  @I_vITEMDESC = case  when @I_vITEMDESC is null then ''  else @I_vITEMDESC  end,  @I_vLOCNCODE = case  when @I_vLOCNCODE is null then ''  else @I_vLOCNCODE  end,  @DEFUNITPRCE = case  when @I_vUNITPRCE is null then @DEFUNITPRCE  else @I_vUNITPRCE  end,  @DEFUNITCOST = case  when @I_vUNITCOST is null then @DEFUNITCOST  else @I_vUNITCOST  end,  @I_vSVC_RMA_Reason_Code = case  when @I_vSVC_RMA_Reason_Code is null then ''  else @I_vSVC_RMA_Reason_Code  end,  @I_vRETORIG = case   when @I_vRETORIG is null then 1  else @I_vRETORIG  end,  @I_vRETREF = case  when @I_vRETREF is null then ''  else @I_vRETREF  end,  @O_vSRVRECTYPE = case  when @O_vSRVRECTYPE <> 0 and @I_vRETORIG = 2 then @O_vSRVRECTYPE  else 0  end,  @O_vCALLNBR = case  when @I_vRETORIG = 2 then @I_vRETREF  else ''  end,  @I_vEQPLINE = case  when @I_vEQPLINE is null then 1  else @I_vEQPLINE  end,  @I_vLNITMSEQ = case   when @I_vLNITMSEQ is null then 0  else @I_vLNITMSEQ  end,  @I_vSVC_RMA_From_Service = case  when @I_vSVC_RMA_From_Service is null then 0  else @I_vSVC_RMA_From_Service  end,  @O_vSOPTYPE = case  when @O_vSOPTYPE <> 0 and @I_vRETORIG = 3 then @O_vSOPTYPE  else 0  end,  @O_vSOPNUMBE = case  when @O_vSOPNUMBE <> '' and @I_vRETORIG = 3 then @O_vSOPNUMBE  when @I_vRETORIG = 3 then @I_vRETREF  else ''  end,  @I_vCMPNTSEQ = case   when @I_vCMPNTSEQ is null then 0  else @I_vCMPNTSEQ  end,  @I_vSOP_Line_Item_Sequence = case  when @I_vSOP_Line_Item_Sequence is null then 0  else @I_vSOP_Line_Item_Sequence  end,  @I_vENTDTE = case   when @I_vENTDTE is null then @O_TODAY  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then convert(varchar(10), getdate(), 108)  else @I_vENTTME  end,  @I_vETADTE = case   when @I_vETADTE is null then @O_DUMMYDT  else @I_vETADTE  end,  @I_vETATME = case   when @I_vETATME is null then @O_DUMMYDT  else @I_vETATME  end,  @I_vCommit_Date = case  when @I_vCommit_Date is null then @O_DUMMYDT  else @I_vCommit_Date  end,  @I_vCommit_Time = case   when @I_vCommit_Time is null then @O_DUMMYDT  else @I_vCommit_Time  end,  @I_vRETUDATE = case  when @I_vRETUDATE is null then @O_DUMMYDT  else @I_vRETUDATE  end,  @I_vReturn_Time = case  when @I_vReturn_Time is null then @O_DUMMYDT  else @I_vReturn_Time  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then @O_DUMMYDT  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then @O_DUMMYDT  else @I_vCOMPTME  end,  @I_vPRMDATE = case  when @I_vPRMDATE is null then @O_DUMMYDT  else @I_vPRMDATE  end,  @I_vUSERID = case  when @I_vUSERID is null then convert(varchar(15), SYSTEM_USER)  else @I_vUSERID  end,  @I_vOFFID = case  when @I_vOFFID is null then ''  else @I_vOFFID  end,  @I_vRTRNNAME = case  when @I_vRTRNNAME is null then ''  else @I_vRTRNNAME  end,  @I_vRETADDR1 = case  when @I_vRETADDR1 is null then ''  else @I_vRETADDR1  end,  @I_vRETADDR2 = case  when @I_vRETADDR2 is null then ''  else @I_vRETADDR2  end,  @I_vRETADDR3 = case  when @I_vRETADDR3 is null then ''  else @I_vRETADDR3  end,  @I_vRTRNCITY = case  when @I_vRTRNCITY is null then ''  else @I_vRTRNCITY  end,  @I_vSVC_Return_State = case  when @I_vSVC_Return_State is null then ''  else @I_vSVC_Return_State  end,  @I_vRTRNZIP = case  when @I_vRTRNZIP is null then ''  else @I_vRTRNZIP  end,  @I_vReturn_Country = case  when @I_vReturn_Country is null then ''  else @I_vReturn_Country  end,  @I_vCUSTNAME = case  when @I_vCUSTNAME is null then ''  else @I_vCUSTNAME  end,  @I_vCONTACT = case  when @I_vCONTACT is null then ''  else @I_vCONTACT  end,  @I_vADDRESS1 = case  when @I_vADDRESS1 is null then ''  else @I_vADDRESS1  end,  @I_vADDRESS2 = case  when @I_vADDRESS2 is null then ''  else @I_vADDRESS2  end,  @I_vADDRESS3 = case  when @I_vADDRESS3 is null then ''  else @I_vADDRESS3  end,  @I_vCITY = case  when @I_vCITY is null then ''  else @I_vCITY  end,  @I_vSTATE = case  when @I_vSTATE is null then ''  else @I_vSTATE  end,  @I_vZIPCODE = case  when @I_vZIPCODE is null then ''  else @I_vZIPCODE  end,  @I_vCOUNTRY = case  when @I_vCOUNTRY is null then ''  else @I_vCOUNTRY  end,  @O_vBill_To_Customer = case   when @O_vBill_To_Customer = '' then @I_vCUSTNMBR  else @O_vBill_To_Customer  end,  @O_vSVC_Bill_To_Address_Code = case  when @O_vSVC_Bill_To_Address_Code = '' then ''  else @O_vSVC_Bill_To_Address_Code  end,  @I_vCSTPONBR = case  when @I_vCSTPONBR is null then ''  else @I_vCSTPONBR  end,  @I_vQUANTITY = case  when @I_vQUANTITY is null then 0  else @I_vQUANTITY  end,  @I_vUOFM = case  when @I_vUOFM is null then ''  else @I_vUOFM  end,  @I_vCUSTOWN = case  when @RETPATH = 1 then 1   when @I_vCUSTOWN is null then 0  else @I_vCUSTOWN  end,  @I_vFACTSEAL = case  when @I_vFACTSEAL is null then 0  else @I_vFACTSEAL  end,  @O_vORDDOCID = case  when @O_vORDDOCID is null then ''  else @O_vORDDOCID  end,  @O_vTRANSLINESEQ = case  when @O_vTRANSLINESEQ is null then 0  else @O_vTRANSLINESEQ  end,  @O_vSTATUS = case  when @O_vSTATUS is null then 0  else @O_vSTATUS  end,  @Flat_Rate_Repair_Price = case  when @I_vFlat_Rate_Repair_Price is null then @Flat_Rate_Repair_Price  else @I_vFlat_Rate_Repair_Price  end,  @Repair_Price = case  when @I_vRepair_Price is null then @Repair_Price  else @I_vRepair_Price  end,  @NTE_Price = case  when @I_vNTE_Price is null then @NTE_Price  else @I_vNTE_Price  end,  @Repair_Cost = case  when @I_vRepair_Cost is null then @Repair_Cost  else @I_vRepair_Cost  end,  @I_vBill_of_Lading = case  when @I_vBill_of_Lading is null then ''  else @I_vBill_of_Lading  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null then ''  else @I_vSHIPMTHD  end,  @O_vCredit_SOP_Type = case  when @O_vCredit_SOP_Type <> 0 then @O_vCredit_SOP_Type  else 0  end,  @O_vCredit_SOP_Number = case  when @O_vCredit_SOP_Number is null then ''  else @O_vCredit_SOP_Number  end,  @O_vCredit_SOP_Line_Item_Seq = case  when @O_vCredit_SOP_Line_Item_Seq is null then 0  else @O_vCredit_SOP_Line_Item_Seq  end,  @O_vReplace_SOP_Type = case  when @O_vReplace_SOP_Type is null then 0  else @O_vReplace_SOP_Type  end,  @O_vReplace_SOP_Number = case  when @O_vReplace_SOP_Number is null then ''  else @O_vReplace_SOP_Number  end,  @O_vReplace_SOP_Line_Item_Se = case  when @O_vReplace_SOP_Line_Item_Se is null then 0  else @O_vReplace_SOP_Line_Item_Se  end,  @I_vLocation_Code_Replacemen = case   when @I_vLocation_Code_Replacemen is null then ''  else @I_vLocation_Code_Replacemen  end,  @I_vReplace_Item_Number = case  when @I_vReplace_Item_Number is null then ''  else @I_vReplace_Item_Number  end,  @I_vReplace_U_Of_M = case  when @I_vReplace_U_Of_M is null then ''  else @I_vReplace_U_Of_M  end,  @I_vReplace_Price_Level = case  when @I_vReplace_Price_Level is null then ''  else @I_vReplace_Price_Level  end,  @I_vReplace_QTY = case  when @I_vReplace_QTY is null then 0  else @I_vReplace_QTY  end,  @Replace_Cost = case  when @I_vReplace_Cost is null then @Replace_Cost  else @I_vReplace_Cost  end,  @O_vOriginating_Replace_Cost = case  when @O_vOriginating_Replace_Cost is null then 0  else @O_vOriginating_Replace_Cost  end,  @Replace_Price = case  when @I_vReplace_Price is null then @Replace_Price  else @I_vReplace_Price  end,  @O_vSOP_Number_Invoice = case  when @O_vSOP_Number_Invoice <> '' then @O_vSOP_Number_Invoice  else ''  end,  @I_vItem_Number_Invoice = case  when @I_vItem_Number_Invoice is null then @DEFINVCITEM  else @I_vItem_Number_Invoice  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then ''  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then ''  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case   when @I_vUSRDEF03 is null then ''  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then ''  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then ''  else @I_vUSRDEF05  end,  @iCURRNIDX = case  when @I_vCURNCYID is null then 0  else @iCURRNIDX  end,  @I_vCURNCYID = case  when @I_vCURNCYID is null then ''  else @I_vCURNCYID  end,  @I_vReturn_Item_Number = case  when @I_vReturn_Item_Number is null or @I_vReturn_Item_Number = '' then null  else @I_vReturn_Item_Number  end,  @I_vReturn_Item_Description = case  when @I_vReturn_Item_Description is null then ''  else @I_vReturn_Item_Description  end,  @I_vReturn_Location_Code = case  when @I_vReturn_Location_Code is null then ''  else @I_vReturn_Location_Code  end,  @I_vReturn_QTY = case  when @I_vReturn_QTY is null then 0  else @I_vReturn_QTY  end,  @I_vReturn_U_Of_M = case  when @I_vReturn_U_Of_M is null then ''  else @I_vReturn_U_Of_M  end,  @RETCOST = case  when @I_vRETCOST is null then @RETCOST  else @I_vRETCOST  end,  @O_vOriginating_Return_Cost = case  when @O_vOriginating_Return_Cost is null then 0  else @O_vOriginating_Return_Cost  end,  @O_vSVC_Extended_Return_Cost = case  when @O_vSVC_Extended_Return_Cost  is null then 0  else @O_vSVC_Extended_Return_Cost  end,  @O_vSVC_Orig_Ext_Return_Cost = case  when @O_vSVC_Orig_Ext_Return_Cost is null then 0  else @O_vSVC_Orig_Ext_Return_Cost  end,  @I_vSVC_Return_Price_Level = case  when @I_vSVC_Return_Price_Level is null then ''  else @I_vSVC_Return_Price_Level  end,  @SVC_Return_Price = case  when @I_vSVC_Return_Price is null and @I_vSVC_Extended_Return_Pric <> null then isnull(@I_vSVC_Extended_Return_Pric, 0)  when @I_vSVC_Return_Price is null then @SVC_Return_Price  else @I_vSVC_Return_Price  end,  @O_vOriginating_Return_Price = case  when @O_vOriginating_Return_Price is null then 0  else @O_vOriginating_Return_Price  end,  @I_vSVC_Extended_Return_Pric = case  when @I_vSVC_Extended_Return_Pric is null then 0  else @I_vSVC_Extended_Return_Pric  end,  @I_vSVC_FO_ID = case  when @I_vSVC_FO_ID is null then ''  else @I_vSVC_FO_ID  end,  @I_vSVC_SCM_Complete = case  when @I_vSVC_SCM_Complete is null then 0  else @I_vSVC_SCM_Complete  end,  @O_vXCHGRATE = case   when @O_vXCHGRATE is null then 0  else @O_vXCHGRATE  end,  @O_vRATETPID = case  when @O_vRATETPID is null then ''  else @O_vRATETPID  end,  @O_vEXPNDATE = case   when @O_vEXPNDATE is null then @O_DUMMYDT  else @O_vEXPNDATE  end,   @O_vEXCHDATE = case  when @O_vEXCHDATE is null then @O_DUMMYDT  else @O_vEXCHDATE  end,  @O_vEXGTBDSC = case  when @O_vEXGTBDSC is null then ''  else @O_vEXGTBDSC  end,  @O_vEXTBLSRC = case  when @O_vEXTBLSRC is null then ''  else @O_vEXTBLSRC  end,  @O_vTIME1 = case  when @O_vTIME1 is null then @O_DUMMYDT  else @O_vTIME1  end  if @O_vReceived < 0 or @O_vReceived > 1 begin  set @O_iErrorState = 9923     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_iTraveler_Printed < 0 or @O_iTraveler_Printed  > 1  begin  set @O_iErrorState = 9924     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vSVC_Ready_To_Close < 0 or @I_vSVC_Ready_To_Close > 1 begin  set @O_iErrorState = 9925     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vSVC_RMA_From_Service < 0 or @I_vSVC_RMA_From_Service > 1 begin  set @O_iErrorState = 9926     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vCUSTOWN < 0 or @I_vCUSTOWN > 1 begin  set @O_iErrorState = 9927     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vFACTSEAL < 0 or @I_vFACTSEAL > 1 begin  set @O_iErrorState = 9928     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vSVC_SCM_Complete < 0 or @I_vSVC_SCM_Complete > 1 begin  set @O_iErrorState = 9929     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end if @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1 begin  set @O_iErrorState = 9930     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vRETORIG < 1 or @I_vRETORIG > 3 begin  set @O_iErrorState = 9931     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @O_vRMA_Status < 0 or @O_vRMA_Status > 10 or @O_vRMA_Status = 6 begin  set @O_iErrorState = 9933     exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vSVC_RMA_Reason_Code <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @O_vSVC_RMA_Reason_Code_Desc = isnull(SVC_RMA_Reason_Code_Desc, '')  from SVC05502 where SVC_RMA_Reason_Code = @I_vSVC_RMA_Reason_Code  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9934     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if @I_vLNSEQNBR > 0 and ((@Line_Seq_Exists = 1) and (@O_ITEMNMBR <> '') and (@O_ITEMNMBR <> @I_vITEMNMBR)) begin  set @Line_Seq_Exists = 0  set @I_vLNSEQNBR = 0 end  if (@I_vLNSEQNBR = 0) or (@I_vLNSEQNBR = null) begin  select @I_vLNSEQNBR = (isnull(max(LNSEQNBR),0) + 100) from SVC05200 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID  set @Line_Seq_Exists = 0 end  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)  begin  set @O_iErrorState = 9935    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vCUSTNMBR <> '' begin  set @iValueExists = 0  select  @iValueExists=1,  @PYMTRMID=isnull(PYMTRMID,''),  @PRBTADCD=isnull(PRBTADCD,''),  @CURNCYID=isnull(CURNCYID,''),  @RATETPID=isnull(RATETPID,''),  @I_vCUSTNAME = case  when @I_vCUSTNAME = '' then isnull(CUSTNAME, '')  else @I_vCUSTNAME  end,  @O_vSVC_Bill_To_Address_Code = case  when @O_vSVC_Bill_To_Address_Code = '' then isnull(PRBTADCD, '')  else @O_vSVC_Bill_To_Address_Code  end  from RM00101 (nolock) where CUSTNMBR=@I_vCUSTNMBR   if (@iValueExists <> 1)  begin  set @O_iErrorState = 9947    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCURNCYID =   case  when @I_vCURNCYID = '' then @CURNCYID   else  @I_vCURNCYID  end,  @O_vRATETPID =   case  when @O_vRATETPID = '' then @RATETPID   else  @O_vRATETPID  end end  if (@I_vADRSCODE <> '') begin  set @iValueExists = 0  select  @iValueExists = 1,  @O_vADDRESS1=isnull(ADDRESS1,''),  @O_vADDRESS2=isnull(ADDRESS2,''),  @O_vADDRESS3=isnull(ADDRESS3,''),  @O_vCOUNTRY=isnull(COUNTRY,''),  @O_vCITY=isnull(CITY,''),  @O_vSTATE=isnull(STATE,''),  @O_vZIP=isnull(ZIP,''),  @O_vCNTCPRSN=isnull(CNTCPRSN,0),  @O_vPHONE1=isnull(PHONE1,''),  @DEFSHIPMTHD = case  when @I_vSHIPMTHD is null or @I_vSHIPMTHD = '' then SHIPMTHD  else @I_vSHIPMTHD  end  from RM00102 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 9950     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vADDRESS1 = '' and @I_vADDRESS2 = '' and @I_vCITY = '' and @I_vSTATE = ''  and @I_vZIPCODE = '' and @I_vCOUNTRY = '')  begin  select @I_vADDRESS1 = @O_vADDRESS1,  @I_vADDRESS2 = @O_vADDRESS2,  @I_vADDRESS3 = @O_vADDRESS3,  @I_vCOUNTRY = @O_vCOUNTRY,  @I_vCITY = @O_vCITY,  @I_vSTATE = @O_vSTATE,  @I_vZIPCODE = @O_vZIP,  @I_vCONTACT = @O_vCNTCPRSN  end end  if (@I_vITEMNMBR <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @I_vITEMDESC = case   when (@I_vRETORIG <> 3) and @I_vITEMDESC = '' then isnull(ITEMDESC, '')   else @I_vITEMDESC   end,  @iITMTRKOP = ITMTRKOP, @iITEMTYPE = ITEMTYPE, @iUOMSCHDL = UOMSCHDL, @iSELNGUOM = SELNGUOM,   @iCurrDecPlaces = (isnull(DECPLCUR, 1)-1), @iQtyDecPlaces = (isnull(DECPLQTY,1)-1),  @iSTNDCOST = isnull(STNDCOST, 0.0), @iCURRCOST = isnull(CURRCOST, 0.0),   @O_vITMSHNAM = isnull(ITMSHNAM,''), @O_vITMGEDSC = isnull(ITMGEDSC, ''), @O_vITMCLSCD = isnull(ITMCLSCD, ''),  @O_vITEMSHWT = isnull(ITEMSHWT, ''),  @ITMDEFPRCLEVEL = isnull(PRCLEVEL, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@I_vITEMNMBR)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9936     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@iITEMTYPE = 3)  begin  set @O_iErrorState = 8920     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   set @O_vDECPLQTY = (@iQtyDecPlaces + 1) end  select @I_vLOCNCODE = case  when @I_vLOCNCODE is null or @I_vLOCNCODE = '' then @LOCNCODE  else @I_vLOCNCODE  end  if (@I_vITEMNMBR <> '') and (@I_vLOCNCODE <> '') begin  set @iValueExists = 0  select @iValueExists = 1,  @I_vRTRNNAME = case  when @I_vRTRNNAME = '' then isnull(LOCNDSCR, '')   else @I_vRTRNNAME  end,  @I_vRETADDR1 = case  when @I_vRETADDR1 = '' then isnull(ADDRESS1, '')  else @I_vRETADDR1  end,  @I_vRETADDR2 = case  when @I_vRETADDR2 = '' then isnull(ADDRESS2, '')  else @I_vRETADDR2  end,  @I_vRETADDR3 = case  when @I_vRETADDR3 = '' then isnull(ADDRESS3, '')  else @I_vRETADDR3  end,  @I_vRTRNCITY = case  when @I_vRTRNCITY = '' then isnull(CITY, '')  else @I_vRTRNCITY  end,   @I_vSVC_Return_State = case  when @I_vSVC_Return_State = '' then isnull(STATE, '')  else @I_vSVC_Return_State  end,  @I_vRTRNZIP = case  when @I_vRTRNZIP = '' then isnull(ZIPCODE, '')  else @I_vRTRNZIP  end,  @I_vReturn_Country = case  when @I_vReturn_Country = '' then isnull(COUNTRY, '')  else @I_vReturn_Country  end  from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 9937    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  set @iValueExists = 0  select @iValueExists = 1, @O_iQTYONHND = isnull(QTYONHND, 0), @O_iQTYALLOC = isnull(ATYALLOC,0) from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9938    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vUOFM = '') begin  if (@iSELNGUOM is NULL or @iSELNGUOM = '')  begin  SELECT @I_vUOFM = isnull(rtrim(BASEUOFM),'') from IV40201 where UOMSCHDL = @iUOMSCHDL  if (@@ERROR <> 0 or @I_vUOFM = '')  begin  return (@O_iErrorState)  end  end  else  set @I_vUOFM = rtrim(@iSELNGUOM) end  if (@I_vITEMNMBR <> '' and @I_vUOFM <> '') begin  exec @iStatus = SVC_Obj_ValidateUOM  @I_vITEMNMBR,  @I_vUOFM,  @iValid output  select @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  if (@iStatus = 0)  set @iStatus = @iError   set @O_iErrorState = 9939    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if ((@iValid is NULL) or (@iValid <> 1))  begin  set @O_iErrorState = 9940    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  if (@O_vSRVRECTYPE = 0 and @O_vCALLNBR <> '') and @I_vRETORIG = 2 begin  select @O_vSRVRECTYPE = isnull(SRVRECTYPE, 0) from SVC00200 where CALLNBR = @O_vCALLNBR  select @O_vSRVRECTYPE = case  when @O_vSRVRECTYPE = 0 then isnull(SRVRECTYPE, 0)  else @O_vSRVRECTYPE  end  from SVC30200 where CALLNBR = @O_vCALLNBR   select @O_vSRVRECTYPE = case  when @O_vSRVRECTYPE = 0 then 2  else @O_vSRVRECTYPE  end end  if (@O_vSRVRECTYPE = 2 or @O_vSRVRECTYPE = 3) and (@O_vCALLNBR <> '') and (@I_vLNITMSEQ > 0) begin  set @iValueExists = 0  select @iValueExists = 1,  @O_vORUNTPRC = case  when (@Line_Seq_Exists = 0) and (@O_vORUNTPRC is null or @O_vORUNTPRC = 0) then ORUNTPRC  when (@Line_Seq_Exists = 0) and (@I_vUNITPRCE is null or @I_vUNITPRCE = 0) then ORUNTPRC  else @O_vORUNTPRC  end,  @DEFUNITPRCE = case  when (@Line_Seq_Exists = 0) and (@I_vUNITPRCE is null or @I_vUNITPRCE = 0) then UNITPRCE  else @I_vUNITPRCE  end,  @O_vOXTNDPRC = round(@O_vORUNTPRC * abs(@I_vQUANTITY), @iCurrDecPlaces),  @I_vXTNDPRCE = case   when @I_vXTNDPRCE is null or @I_vXTNDPRCE = 0 then round(@DEFUNITPRCE * abs(@I_vQUANTITY), @iCurrDecPlaces)  else @I_vXTNDPRCE  end,  @I_vUNITPRCE = case  when (@Line_Seq_Exists = 0) and (@I_vUNITPRCE is null or @I_vUNITPRCE = 0) then UNITPRCE  else @I_vUNITPRCE  end,  @RETCOST = case  when @RETCOST = 0 then UNITCOST  else @RETCOST  end,  @SVC_Return_Price = case  when @SVC_Return_Price = 0 then @I_vUNITPRCE  else @SVC_Return_Price  end,  @I_vITEMDESC = case  when @I_vITEMDESC is null or @I_vITEMDESC = '' then ITEMDESC  else @I_vITEMDESC  end,  @I_vReplace_Item_Number = case  when @I_vReplace_Item_Number is null or @I_vReplace_Item_Number = '' then ITEMNMBR  else @I_vReplace_Item_Number  end,  @I_vReplace_Price_Level = case  when @I_vReplace_Price_Level is null or @I_vReplace_Price_Level = '' then PRICELVL  else @I_vReplace_Price_Level  end,  @I_vLocation_Code_Replacemen = case  when @I_vLocation_Code_Replacemen is null or @I_vLocation_Code_Replacemen = '' and @I_vLOCNCODE = '' then LOCNCODE  when @I_vLocation_Code_Replacemen is null or @I_vLocation_Code_Replacemen = '' and @I_vLOCNCODE <> '' then @I_vLOCNCODE  else @I_vLocation_Code_Replacemen  end,  @I_vReplace_U_Of_M = case  when @I_vReplace_U_Of_M is null or @I_vReplace_U_Of_M = '' then UOFM  else @I_vReplace_U_Of_M  end  from SVC00203   where SRVRECTYPE = @O_vSRVRECTYPE and CALLNBR = @O_vCALLNBR and EQPLINE = @I_vEQPLINE and LNITMSEQ = @I_vLNITMSEQ   if (@iValueExists = 0)  begin  if not exists(select 1 from SVC30203 where SRVRECTYPE = @O_vSRVRECTYPE and CALLNBR = @O_vCALLNBR and EQPLINE = @I_vEQPLINE and LNITMSEQ = @I_vLNITMSEQ)  begin  set @O_iErrorState = 9960     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  select @O_vSRVRECTYPE = 0,  @O_vCALLNBR = '',  @I_vLNITMSEQ = case  when @I_vRETORIG = 2 then 0  else @I_vLNITMSEQ  end,  @I_vEQPLINE = 0,  @I_vSHIPMTHD = case   when @I_vSHIPMTHD is null or @I_vSHIPMTHD = '' then @DEFSHIPMTHD  else @I_vSHIPMTHD  end  end  if (@O_vSOPTYPE = 0 and @O_vSOPNUMBE <> '') and @I_vRETORIG = 3 begin  select  @I_vSOP_Line_Item_Sequence = case  when @I_vSOP_Line_Item_Sequence is null or @I_vSOP_Line_Item_Sequence = 0 then isnull(LNITMSEQ, 0)  else @I_vSOP_Line_Item_Sequence           end,  @O_vSOPTYPE = isnull(SOPTYPE, 0)  from SOP30300   where SOPNUMBE = @O_vSOPNUMBE and ITEMNMBR = @I_vITEMNMBR  and ((@I_vSOP_Line_Item_Sequence > 0 and LNITMSEQ = @I_vSOP_Line_Item_Sequence)   or (@I_vSOP_Line_Item_Sequence = 0 and @I_vLNITMSEQ <> 0 and LNITMSEQ = @I_vLNITMSEQ)  or (@I_vSOP_Line_Item_Sequence = 0 and @I_vLNITMSEQ = 0 and LNITMSEQ > 0))   select  @I_vSOP_Line_Item_Sequence = case  when @I_vSOP_Line_Item_Sequence is null or @I_vSOP_Line_Item_Sequence = 0 then isnull(LNITMSEQ, 0)  else @I_vLNITMSEQ  end,  @O_vSOPTYPE = case  when @O_vSOPTYPE = 0 then isnull(SOPTYPE, 0)  else @O_vSOPTYPE  end  from SOP10200   where SOPNUMBE = @O_vSOPNUMBE and ITEMNMBR = @I_vITEMNMBR   and ((@I_vSOP_Line_Item_Sequence > 0 and LNITMSEQ = @I_vSOP_Line_Item_Sequence) or (@I_vSOP_Line_Item_Sequence = 0 and LNITMSEQ > 0))   select @O_vSOPTYPE = case  when @O_vSOPTYPE = 0 then 3  else @O_vSOPTYPE  end  end  if (@O_vSOPNUMBE <> '') and (@I_vSOP_Line_Item_Sequence > 0) begin  set @iValueExists = 0  select  @iValueExists = 1,   @O_vORUNTPRC = case  when (@Line_Seq_Exists = 0) and (@O_vORUNTPRC is null or @O_vORUNTPRC = 0) then ORUNTPRC  when (@Line_Seq_Exists = 0) and (@I_vUNITPRCE is null or @I_vUNITPRCE = 0) then ORUNTPRC  else @O_vORUNTPRC  end,  @DEFUNITPRCE = case  when (@Line_Seq_Exists = 0) and (@I_vUNITPRCE is null or @I_vUNITPRCE = 0) then UNITPRCE  else @I_vUNITPRCE  end,  @O_vOXTNDPRC = round(@O_vORUNTPRC * abs(@I_vQUANTITY), @iCurrDecPlaces),  @I_vXTNDPRCE = case   when @I_vXTNDPRCE is null or @I_vXTNDPRCE = 0 then round(@DEFUNITPRCE * abs(@I_vQUANTITY), @iCurrDecPlaces)  else @I_vXTNDPRCE  end,  @I_vUNITPRCE = case  when (@Line_Seq_Exists = 0) and (@I_vUNITPRCE is null or @I_vUNITPRCE = 0) then UNITPRCE  else @I_vUNITPRCE  end,  @RETCOST = case  when @RETCOST = 0 then UNITCOST  else @RETCOST  end,  @SVC_Return_Price = case  when @SVC_Return_Price = 0 then @I_vUNITPRCE  else @SVC_Return_Price  end,  @I_vSHIPMTHD = case  when @I_vSHIPMTHD is null or @I_vSHIPMTHD = '' then SHIPMTHD  else @I_vSHIPMTHD  end,  @I_vITEMDESC = case  when @I_vITEMDESC is null or @I_vITEMDESC = '' then ITEMDESC  else @I_vITEMDESC  end,  @I_vReplace_Item_Number = case  when @I_vReplace_Item_Number is null or @I_vReplace_Item_Number = '' then ITEMNMBR  else @I_vReplace_Item_Number  end,  @I_vReplace_Price_Level = case  when @I_vReplace_Price_Level is null or @I_vReplace_Price_Level = '' then PRCLEVEL  else @I_vReplace_Price_Level  end,  @I_vLocation_Code_Replacemen = case  when @I_vLocation_Code_Replacemen is null or @I_vLocation_Code_Replacemen = '' and @I_vLOCNCODE = '' then LOCNCODE  when @I_vLocation_Code_Replacemen is null or @I_vLocation_Code_Replacemen = '' and @I_vLOCNCODE <> '' then @I_vLOCNCODE  else @I_vLocation_Code_Replacemen  end,  @I_vReplace_U_Of_M = case  when @I_vReplace_U_Of_M is null or @I_vReplace_U_Of_M = '' then UOFM  else @I_vReplace_U_Of_M  end  from SOP30300 where SOPTYPE = @O_vSOPTYPE and SOPNUMBE = @O_vSOPNUMBE and CMPNTSEQ = @I_vCMPNTSEQ and LNITMSEQ = @I_vSOP_Line_Item_Sequence and ITEMNMBR = @I_vITEMNMBR  if (@iValueExists = 0)  begin  if not exists(select 1 from SOP10200 where SOPTYPE = @O_vSOPTYPE and SOPNUMBE = @O_vSOPNUMBE and CMPNTSEQ = @I_vCMPNTSEQ and LNITMSEQ = @I_vSOP_Line_Item_Sequence and ITEMNMBR = @I_vITEMNMBR)  begin  set @O_iErrorState = 9961     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  select @O_vSOPTYPE = 0,  @O_vSOPNUMBE = '',  @I_vLNITMSEQ = case  when @I_vRETORIG = 3 then 0  else @I_vLNITMSEQ  end,  @I_vSOP_Line_Item_Sequence = 0,  @I_vCMPNTSEQ = 0,  @I_vSHIPMTHD = case   when @I_vSHIPMTHD is null or @I_vSHIPMTHD = '' then @DEFSHIPMTHD  else @I_vSHIPMTHD  end  end  if (@I_vReplace_Item_Number <> '' and (@I_vLocation_Code_Replacemen = '' or @I_vReplace_U_Of_M = '')) begin  set @O_iErrorState = 9941     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vReplace_Item_Number <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @iRPLITMTRKOP = ITMTRKOP, @iRPLITEMTYPE = ITEMTYPE, @O_vRPLUOMSCHDL = UOMSCHDL, @O_vRPLSELNGUOM = SELNGUOM,   @iRPLCurrDecPlaces = (isnull(DECPLCUR, 1)-1), @iRPLQtyDecPlaces = (isnull(DECPLQTY,1)-1),  @iRPLSTNDCOST = isnull(STNDCOST, 0.0), @iRPLCURRCOST = isnull(CURRCOST, 0.0),   @O_vRPLITMCLSCD = isnull(ITMCLSCD, ''),  @O_vRPLITMDEFPRCLEVEL = isnull(PRCLEVEL, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@I_vReplace_Item_Number)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9942     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vReplace_Price_Level = case  when @I_vReplace_Price_Level is null or @I_vReplace_Price_Level = '' then @O_vRPLITMDEFPRCLEVEL  else @I_vReplace_Price_Level  end,  @I_vLocation_Code_Replacemen = case  when @I_vLocation_Code_Replacemen is null or @I_vLocation_Code_Replacemen = '' and @I_vLOCNCODE <> '' then isnull(@I_vLOCNCODE, '')  else @I_vLocation_Code_Replacemen  end,  @I_vReplace_U_Of_M = case  when @I_vReplace_U_Of_M is null or @I_vReplace_U_Of_M = '' then isnull(@I_vUOFM, '')  else @I_vReplace_U_Of_M  end end  if (@I_vReplace_Item_Number <> '') and (@I_vLocation_Code_Replacemen <> '') begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLocation_Code_Replacemen)  begin  set @O_iErrorState = 9943    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  if not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vReplace_Item_Number and LOCNCODE = @I_vLocation_Code_Replacemen)  begin  set @O_iErrorState = 9944    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vReplace_Item_Number <> '' and @I_vReplace_U_Of_M <> '') begin  exec @iStatus = SVC_Obj_ValidateUOM  @I_vReplace_Item_Number,  @I_vReplace_U_Of_M,  @iValid output  select @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  if (@iStatus = 0)  set @iStatus = @iError   set @O_iErrorState = 9945    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if ((@iValid is NULL) or (@iValid <> 1))  begin  set @O_iErrorState = 9946    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output   if (@O_vRPLSELNGUOM is NULL or @O_vRPLSELNGUOM = '')  begin  SELECT @I_vReplace_U_Of_M = isnull(rtrim(BASEUOFM),'') from IV40201 where UOMSCHDL = @O_vRPLUOMSCHDL  if (@@ERROR <> 0 or @I_vUOFM = '')  begin  return (@O_iErrorState)  end  end  else  set @I_vReplace_U_Of_M = rtrim(@O_vRPLSELNGUOM)  end  end  if (@I_vReplace_Item_Number = '') or (@I_vLocation_Code_Replacemen = '') or (@I_vReplace_U_Of_M = '') begin  select @I_vReplace_Item_Number = '',  @I_vLocation_Code_Replacemen = '',  @I_vReplace_U_Of_M = ''  end  select @FUNLCURR = FUNLCURR, @SLSRATETPID = isnull(DEFSLSTP, ''), @FINRATETPID = isnull(DEFFINTP, ''), @PURRATETPID = isnull(DEFPURTP, '')  from MC40000 (nolock)  select @O_vRATETPID = case  when @O_vRATETPID = '' and @SLSRATETPID <> '' then @SLSRATETPID   when @O_vRATETPID = '' and @FINRATETPID <> '' then @FINRATETPID  when @O_vRATETPID = '' then @RATETPID  else @O_vRATETPID  end  if (@O_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @O_vRATETPID))  begin  set @O_iErrorState = 9955     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @O_vDECPLACS = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   if (@I_vCURNCYID = '') and (@iCURRNIDX = 0) begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @iCURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end else if (@I_vCURNCYID = '') and (@iCURRNIDX <> 0) begin  select @I_vCURNCYID = isnull(CURNCYID,'') from DYNAMICS..MC40200 (nolock) where CURRNIDX = @iCURRNIDX end else begin  select @iCURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if (@I_vCURNCYID <> '') begin  set @iValueExists= 0  select @iValueExists = 1, @iCURRNIDX = isnull(CURRNIDX,0), @iMCCurrDecPlaces = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if (@iValueExists = 0) or (@iCURRNIDX = 0)  begin  set @O_iErrorState = 9951     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  set @iCurrDecPlaces = @iMCCurrDecPlaces end  if (@iCURRNIDX <> 0) begin  set @iValueExists= 0  select @iValueExists = 1, @I_vCURNCYID = isnull(CURNCYID,0), @iMCCurrDecPlaces = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURRNIDX = @iCURRNIDX  if (@iValueExists = 0)  begin  set @O_iErrorState = 9661     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  set @iCurrDecPlaces = @iMCCurrDecPlaces end  if ( (not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> ''))) begin  select @ISMCREG = 0 end  if  (@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR) begin  select @ISMCTRX = 1,@O_vVIEWMODE=4   if (@O_vEXCHDATE is null or @O_vEXCHDATE = '' or @O_vEXCHDATE = @O_DUMMYDT)  begin  select top 1 @O_vEXCHDATE = EXCHDATE from DYNAMICS..MC00100 (nolock)  where EXGTBLID = (select top 1 EXGTBLID from MC40301 where CURNCYID = @I_vCURNCYID AND RATETPID = @O_vRATETPID)  AND EXCHDATE <= @I_vENTDTE  order by EXCHDATE + TIME1 desc  end   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCUSTNMBR,  @I_vDOCDATE  = @I_vENTDTE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @O_vEXCHDATE,  @I_vEXGTBDSC = @O_vEXGTBDSC,  @I_vEXTBLSRC = @O_vEXTBLSRC,  @I_vRATEEXPR = @O_vRATEEXPR output,  @I_vDYSTINCR = @O_vDYSTINCR output,  @I_vRATEVARC = @O_vRATEVARC,  @I_vTRXDTDEF = @O_vTRXDTDEF,  @I_vPRVDSLMT = @O_vPRVDSLMT,  @I_vDATELMTS = @O_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @O_vTIME1 output,  @I_vXCHGRATE = @O_vXCHGRATE output,  @I_vEXPNDATE = @O_vEXPNDATE output,  @I_vRATETPID = @O_vRATETPID output,  @I_vRTCLCMTD = @O_vRTCLCMTD output,  @I_vEXGTBLID = @O_vEXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   set @O_iErrorState = 9953     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@@error <> 0)  begin  set @O_iErrorState = 9663   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else begin  select @ISMCTRX = 0, @O_vRATEEXPR = 0, @O_vDYSTINCR = 0, @O_vRTCLCMTD = 0, @O_vVIEWMODE = 3 end   select @O_vSVC_Bill_To_Address_Code = case   when @O_vBill_To_Customer = '' then @I_vADRSCODE  else @O_vSVC_Bill_To_Address_Code   end,  @O_vBill_To_Customer = case  when @O_vBill_To_Customer = '' then @I_vCUSTNMBR  else @O_vBill_To_Customer  end  if @O_vBill_To_Customer <> '' AND @O_vBill_To_Customer <> @I_vCUSTNMBR begin  set @iValueExists = 0  select  @iValueExists=1,  @PYMTRMID=isnull(PYMTRMID,''),  @PRBTADCD=isnull(PRBTADCD,''),  @CURNCYID=isnull(CURNCYID,''),  @RATETPID=isnull(RATETPID,''),  @O_vSVC_Bill_To_Address_Code = isnull(PRBTADCD, '')  from RM00101 (nolock) where CUSTNMBR = @O_vBill_To_Customer   if (@iValueExists <> 1)  begin  set @O_iErrorState = 9956     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_vSVC_Bill_To_Address_Code <> '')   and ((@I_vCUSTNMBR = @O_vBill_To_Customer and @I_vADRSCODE <> @O_vSVC_Bill_To_Address_Code)  or (@I_vCUSTNMBR <> @O_vBill_To_Customer and @I_vADRSCODE <> @O_vSVC_Bill_To_Address_Code)) begin  set @iValueExists = 0  select  @iValueExists = 1,  @O_vADDRESS1=isnull(ADDRESS1,''),  @O_vADDRESS2=isnull(ADDRESS2,''),  @O_vADDRESS3=isnull(ADDRESS3,''),  @O_vCOUNTRY=isnull(COUNTRY,''),  @O_vCITY=isnull(CITY,''),  @O_vSTATE=isnull(STATE,''),  @O_vZIP=isnull(ZIP,''),  @O_vCNTCPRSN=isnull(CNTCPRSN,0),  @O_vPHONE1=isnull(PHONE1,'')  from RM00102 (nolock) where CUSTNMBR = @O_vBill_To_Customer and ADRSCODE = @O_vSVC_Bill_To_Address_Code   if (@iValueExists <> 1)  begin  set @O_iErrorState = 9959     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ((@O_vCredit_SOP_Type > 0 and @O_vCredit_SOP_Type <> 4) or (@O_vCredit_SOP_Number = 0 and @O_vCredit_SOP_Line_Item_Seq <> '')) begin  set @O_iErrorState = 9962     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_vCredit_SOP_Type > 0) and (@O_vCredit_SOP_Number <> '') and (@O_vCredit_SOP_Line_Item_Seq > 0) begin  if not exists(select 1 from SOP30300 where SOPTYPE = @O_vCredit_SOP_Type and SOPNUMBE = @O_vCredit_SOP_Number and CMPNTSEQ = 0 and LNITMSEQ = @O_vCredit_SOP_Line_Item_Seq)  begin  if not exists(select 1 from SOP10200 where SOPTYPE = @O_vCredit_SOP_Type and SOPNUMBE = @O_vCredit_SOP_Number and CMPNTSEQ = 0 and LNITMSEQ = @O_vCredit_SOP_Line_Item_Seq)  begin  set @O_iErrorState = 9963     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  select @O_vCredit_SOP_Type = 0,  @O_vCredit_SOP_Number = '',  @O_vCredit_SOP_Line_Item_Seq = 0 end  if ((@O_vReplace_SOP_Type > 0 and @O_vReplace_SOP_Type <> 3) or (@O_vReplace_SOP_Type = 0 and @O_vReplace_SOP_Number <> '')) begin  set @O_iErrorState = 9964     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_vReplace_SOP_Type > 0) and (@O_vReplace_SOP_Number <> '') and ( @O_vReplace_SOP_Line_Item_Se > 0) begin  if not exists(select 1 from SOP30300 where SOPTYPE = @O_vReplace_SOP_Type and SOPNUMBE = @O_vReplace_SOP_Number and CMPNTSEQ = 0 and LNITMSEQ = @O_vReplace_SOP_Line_Item_Se)  begin  if not exists(select 1 from SOP10200 where SOPTYPE = @O_vReplace_SOP_Type and SOPNUMBE = @O_vReplace_SOP_Number and CMPNTSEQ = 0 and LNITMSEQ = @O_vReplace_SOP_Line_Item_Se)  begin  set @O_iErrorState = 9965     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  select @O_vReplace_SOP_Type = 0,  @O_vReplace_SOP_Number = '',  @O_vReplace_SOP_Line_Item_Se = 0 end  if (@I_vSHIPMTHD <> '') begin  if not exists(select 1 from SY03000 where SHIPMTHD = @I_vSHIPMTHD)  begin  set @O_iErrorState = 9966     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  set @I_vRETSTAT = case   when (@I_vRETSTAT = '') and (@O_vRMA_Status = 9 and @I_vSVC_Ready_To_Close = 1) then @ReadyToClose_Status  when (@I_vRETSTAT = '') and (@O_vRMA_Status = 7 or @O_vRMA_Status = 8) and @O_vReceived = 1 then @Received_Status   when (@I_vRETSTAT = '') and (@O_vRMA_Status = 7 or @O_vRMA_Status = 8) then @Partial_Received_Status  when (@I_vRETSTAT = '') and (@O_vRMA_Status = 10) then @Close_Status   when (@I_vRETSTAT = '') then @RETSTAT  else @I_vRETSTAT  end  if (@I_vRETSTAT <> '') begin  if not exists(select 1 from SVC05500 (nolock) where RETSTAT = @I_vRETSTAT)  begin  set @O_iErrorState = 9967    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vReplace_Price_Level = '') and (@I_vReplace_Item_Number <> '')  set @I_vReplace_Price_Level = case   when @RETPRICELVL = '' then @PRICELVL  else @RETPRICELVL  end if (@I_vReplace_Price_Level <> '') begin  if not exists(select 1 from IV40800 where PRCLEVEL = @I_vReplace_Price_Level)  begin  set @O_iErrorState = 9968    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vReplace_Price_Level <> '') and (@I_vReplace_Item_Number <> '') and (@I_vCURNCYID <> '') and (@I_vUOFM <> '')  and not exists(select 1 from IV00108 where ITEMNMBR = @I_vReplace_Item_Number and UOFM = @I_vUOFM   and (CURNCYID = '' or CURNCYID = @I_vCURNCYID) and PRCLEVEL = @I_vReplace_Price_Level) begin  set @O_iErrorState = 9969     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vSVC_Return_Price_Level = '')   set @I_vSVC_Return_Price_Level = case   when @RETPRICELVL = '' then @PRICELVL  else @RETPRICELVL  end if not exists(select 1 from IV40800 where PRCLEVEL = @I_vSVC_Return_Price_Level) begin  set @O_iErrorState = 9970     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taItemListPrice  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vDOCDATE = @I_vENTDTE,  @I_vITEMNMBR = @I_vITEMNMBR,  @I_vPRCLEVEL = @I_vSVC_Return_Price_Level,  @I_vQUANTITY = 1,  @I_vNONINVEN = 0,  @I_vCURNCYID = @I_vCURNCYID,  @I_vUOFM = @I_vUOFM,  @I_vUNITPRCE = @ItemListPrice output,  @I_vITEMDESC = @I_vITEMDESC,  @O_iErrorState = @O_oErrorState output,  @oErrString = @oErrString output  set @iError = @@error if (@iStatus <> 0 or @iError <> 0) begin  set @O_iErrorState = 8944     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec SVC_Get_QtyInBase  @I_vITEMNMBR,   @I_vUOFM,   1,  @O_vQTYINBASE OUTPUT set @iError = @@error if (@iStatus <> 0 or @iError <> 0) begin  set @O_iErrorState = 8945     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @O_vQTYINBASE = case  when @O_vQTYINBASE is null or @O_vQTYINBASE = 0 then 1  else @O_vQTYINBASE  end,  @DEFUNITPRCE = case  when @DEFUNITPRCE is null and (@I_vXTNDPRCE is null) then @ItemListPrice  when (@DEFUNITPRCE is null and @I_vXTNDPRCE is not null) and @I_vQUANTITY > 0 then round(@I_vXTNDPRCE / abs(@I_vQUANTITY), @iCurrDecPlaces)  else isnull(@DEFUNITPRCE, 0)  end,  @DEFUNITCOST = case  when @DEFUNITCOST is null and @iCURRCOST > 0 then (@iCURRCOST * @O_vQTYINBASE)  when @DEFUNITCOST is null and @iSTNDCOST > 0 then (@iSTNDCOST * @O_vQTYINBASE)  else isnull(@DEFUNITCOST, 0)  end  if (@I_vReplace_Item_Number <> '' and (@I_vITEMNMBR <> @I_vReplace_Item_Number or @I_vUOFM <> @I_vReplace_U_Of_M or @I_vSVC_Return_Price_Level <> @I_vReplace_Price_Level)) begin  set @ItemListPrice = 0  exec @iStatus = taItemListPrice  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vDOCDATE = @I_vENTDTE,  @I_vITEMNMBR = @I_vReplace_Item_Number,  @I_vPRCLEVEL = @I_vReplace_Price_Level,  @I_vQUANTITY = 1,  @I_vNONINVEN = 0,  @I_vCURNCYID = @I_vCURNCYID,  @I_vUOFM = @I_vReplace_U_Of_M,  @I_vUNITPRCE = @ItemListPrice output,  @I_vITEMDESC = @O_vReplace_Item_Desc,  @O_iErrorState = @O_oErrorState output,  @oErrString = @oErrString output   set @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  set @O_iErrorState = 8975     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec SVC_Get_QtyInBase  @I_vReplace_Item_Number,   @I_vReplace_U_Of_M,   1,  @O_vQTYINBASE OUTPUT  set @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  set @O_iErrorState = 8974     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @O_vQTYINBASE = case  when @O_vQTYINBASE is null or @O_vQTYINBASE = 0 then 1  else @O_vQTYINBASE  end,  @Replace_Price = case  when @Replace_Price is null then @ItemListPrice  else isnull(@Replace_Price, 0)  end,  @Replace_Cost = case  when @Replace_Cost is null and @iRPLCURRCOST > 0 then (@iRPLCURRCOST * @O_vQTYINBASE)  when @Replace_Cost is null and @iRPLSTNDCOST > 0 then (@iRPLSTNDCOST * @O_vQTYINBASE)  else isnull(@Replace_Cost, 0)  end end else  begin  select @Replace_Price = case  when @Replace_Price is null then isnull(@DEFUNITPRCE, 0)  else @Replace_Price  end,  @Replace_Cost = case  when @Replace_Cost is null then isnull(@DEFUNITCOST, 0)  else @Replace_Cost  end end  if (@I_vQUANTITY is NULL)  set @I_vQUANTITY = 0.0  set @O_vEXTDCOST = round(@DEFUNITCOST * abs(@I_vQUANTITY), @iCurrDecPlaces) set @I_vXTNDPRCE = round(@DEFUNITPRCE * abs(@I_vQUANTITY), @iCurrDecPlaces)  select @O_vORUNTCST = @DEFUNITCOST,  @O_vORUNTPRC = @DEFUNITPRCE,  @O_vOREXTCST = @O_vEXTDCOST,  @O_vOXTNDPRC = @I_vXTNDPRCE,  @O_vOrig_Flat_RepairPrice = @Flat_Rate_Repair_Price,  @O_vOriginating_Repair_Price = @Repair_Price,  @O_vOriginating_NTE_Price = @NTE_Price,  @O_vOriginating_Repair_Cost = @Repair_Cost,  @O_vOriginating_Replace_Cost = @Replace_Cost,  @O_vOriginating_Replace_Pric = @Replace_Price,  @O_vOriginating_Return_Cost = @RETCOST,  @O_vSVC_Orig_Ext_Return_Cost = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Cost * abs(@I_vReturn_QTY), @iCurrDecPlaces)  else @O_vReceived  end,  @O_vOriginating_Return_Price = @SVC_Return_Price,  @O_vSVC_Orig_Ext_Return_Pric = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Price * abs(@I_vReturn_QTY), @iCurrDecPlaces)  else 0  end  select @O_vDECPLCUR = @iCurrDecPlaces,  @O_vODECPLCU = @iCurrDecPlaces  if ( @ISMCTRX = 1) begin  if @O_vXCHGRATE = 0   begin  set @O_iErrorState = 9971     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @O_vRTCLCMTD = 0     begin  select   @O_vORUNTCST   = case  when @I_vUNITCOST is not null then @I_vUNITCOST  else round(@DEFUNITCOST / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vORUNTPRC    = case  when @I_vUNITPRCE is not null then @I_vUNITPRCE  else round(@DEFUNITPRCE / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vUNITCOST    = case  when @I_vUNITCOST is null then @DEFUNITCOST  else round(@O_vORUNTCST * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vUNITPRCE    = case  when @I_vUNITPRCE is null then @DEFUNITPRCE  else round(@O_vORUNTPRC * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vEXTDCOST    = round(@I_vUNITCOST * abs(@I_vQUANTITY), @iCurrDecPlaces),  @I_vXTNDPRCE    = round(@I_vUNITPRCE * abs(@I_vQUANTITY), @iCurrDecPlaces),  @O_vOREXTCST    = round(@O_vORUNTCST * abs(@I_vQUANTITY), @iCurrDecPlaces),  @O_vOXTNDPRC    = round(@O_vORUNTPRC * abs(@I_vQUANTITY), @iCurrDecPlaces),   @O_vOrig_Flat_RepairPrice  = case  when @I_vFlat_Rate_Repair_Price is not null then @I_vFlat_Rate_Repair_Price   else round(@Flat_Rate_Repair_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vFlat_Rate_Repair_Price  = case  when @I_vFlat_Rate_Repair_Price is null then @Flat_Rate_Repair_Price   else round(@O_vOrig_Flat_RepairPrice * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Repair_Price  = case  when @I_vRepair_Price is not null then @I_vRepair_Price  else round(@Repair_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vRepair_Price   = case  when @I_vRepair_Price is null then @Repair_Price  else round(@O_vOriginating_Repair_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_NTE_Price = case  when @I_vNTE_Price is not null then @I_vNTE_Price  else round(@NTE_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vNTE_Price    = case  when @I_vNTE_Price is null then @NTE_Price  else round(@O_vOriginating_NTE_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Repair_Cost  = case  when @I_vRepair_Cost is not null then @I_vRepair_Cost  else round(@Repair_Cost / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vRepair_Cost   = case  when @I_vRepair_Cost is null then @Repair_Cost  else round(@O_vOriginating_Repair_Cost * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Replace_Cost  = case  when @I_vReplace_Cost is not null then @I_vReplace_Cost  else round(@Replace_Cost / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vReplace_Cost   = case  when @I_vReplace_Cost is null then @Replace_Cost  else round(@O_vOriginating_Replace_Cost * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Replace_Pric  = case  when @I_vReplace_Price is not null then @I_vReplace_Price  else round(@Replace_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vReplace_Price   = case  when @I_vReplace_Price is null then @Replace_Price  else round(@O_vOriginating_Replace_Pric * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Return_Cost  = case  when @I_vRETCOST is not null then @I_vRETCOST   else round(@RETCOST / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vRETCOST    = case  when @I_vRETCOST is null then @RETCOST   else round(@O_vOriginating_Return_Cost * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Return_Price  = case  when @I_vSVC_Return_Price is not null then @I_vSVC_Return_Price  else round(@SVC_Return_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vSVC_Return_Price   = case  when @I_vSVC_Return_Price is null then @SVC_Return_Price  else round(@O_vOriginating_Return_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vSVC_Extended_Return_Cost  = case  when @O_vReceived = 1 then round(@I_vRETCOST * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end,  @O_vSVC_Orig_Ext_Return_Cost  = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Cost * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end,  @O_vSVC_Orig_Ext_Return_Pric  = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Price * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end,  @I_vSVC_Extended_Return_Pric  = case  when @O_vReceived = 1 then round(@I_vSVC_Return_Price * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end  end   else if @O_vRTCLCMTD = 1    begin  select   @O_vORUNTCST   = case  when @I_vUNITCOST is not null then @I_vUNITCOST  else round(@DEFUNITCOST * @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vORUNTPRC    = case  when @I_vUNITPRCE is not null then @I_vUNITPRCE  else round(@DEFUNITPRCE * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vUNITCOST    = case  when @I_vUNITCOST is null then @DEFUNITCOST  else round(@O_vORUNTCST / @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vUNITPRCE    = case  when @I_vUNITPRCE is null then @DEFUNITPRCE  else round(@O_vORUNTPRC / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vEXTDCOST    = round(@I_vUNITCOST * abs(@I_vQUANTITY), @iCurrDecPlaces),  @I_vXTNDPRCE    = round(@I_vUNITPRCE * abs(@I_vQUANTITY), @iCurrDecPlaces),  @O_vOREXTCST    = round(@O_vORUNTCST * abs(@I_vQUANTITY), @iCurrDecPlaces),  @O_vOXTNDPRC    = round(@O_vORUNTPRC * abs(@I_vQUANTITY), @iCurrDecPlaces),  @O_vOrig_Flat_RepairPrice  = case  when @I_vFlat_Rate_Repair_Price is not null then @I_vFlat_Rate_Repair_Price   else round(@Flat_Rate_Repair_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vFlat_Rate_Repair_Price  = case  when @I_vFlat_Rate_Repair_Price is null then @Flat_Rate_Repair_Price   else round(@O_vOrig_Flat_RepairPrice / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Repair_Price  = case  when @I_vRepair_Price is not null then @I_vRepair_Price  else round(@Repair_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vRepair_Price   = case  when @I_vRepair_Price is null then @Repair_Price  else round(@O_vOriginating_Repair_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_NTE_Price = case  when @I_vNTE_Price is not null then @I_vNTE_Price  else round(@NTE_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vNTE_Price    = case  when @I_vNTE_Price is null then @NTE_Price  else round(@O_vOriginating_NTE_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Repair_Cost  = case  when @I_vRepair_Cost is not null then @I_vRepair_Cost  else round(@Repair_Cost * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vRepair_Cost   = case  when @I_vRepair_Cost is null then @Repair_Cost  else round(@O_vOriginating_Repair_Cost / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Replace_Cost  = case  when @I_vReplace_Cost is not null then @I_vReplace_Cost  else round(@Replace_Cost * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vReplace_Cost   = case  when @I_vReplace_Cost is null then @Replace_Cost  else round(@O_vOriginating_Replace_Cost / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Replace_Pric  = case  when @I_vReplace_Price is not null then @I_vReplace_Price  else round(@Replace_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vReplace_Price   = case  when @I_vReplace_Price is null then @Replace_Price  else round(@O_vOriginating_Replace_Pric / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Return_Cost  = case  when @I_vRETCOST is not null then @I_vRETCOST   else round(@RETCOST * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vRETCOST    = case  when @I_vRETCOST is null then @RETCOST   else round(@O_vOriginating_Return_Cost / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vOriginating_Return_Price  = case  when @I_vSVC_Return_Price is not null then @I_vSVC_Return_Price  else round(@SVC_Return_Price * @O_vXCHGRATE, @O_vDECPLACS)  end,  @I_vSVC_Return_Price   = case  when @I_vSVC_Return_Price is null then @SVC_Return_Price  else round(@O_vOriginating_Return_Price / @O_vXCHGRATE, @O_vDECPLACS)  end,  @O_vSVC_Extended_Return_Cost  = case  when @O_vReceived = 1 then round(@I_vRETCOST * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end,  @O_vSVC_Orig_Ext_Return_Cost  = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Cost * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end,  @O_vSVC_Orig_Ext_Return_Pric  = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Price * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end,  @I_vSVC_Extended_Return_Pric  = case  when @O_vReceived = 1 then round(@I_vSVC_Return_Price * abs(@I_vReturn_QTY), @O_vDECPLACS)  else 0  end  end end else   begin  select @I_vUNITCOST = @DEFUNITCOST,  @O_vORUNTCST = @DEFUNITCOST,  @I_vUNITPRCE = @DEFUNITPRCE,  @O_vORUNTPRC = @DEFUNITPRCE,  @O_vOREXTCST = @O_vEXTDCOST,  @O_vOXTNDPRC = @I_vXTNDPRCE,  @I_vFlat_Rate_Repair_Price = @Flat_Rate_Repair_Price,  @O_vOrig_Flat_RepairPrice = @Flat_Rate_Repair_Price,  @I_vRepair_Price = @Repair_Price,  @O_vOriginating_Repair_Price = @Repair_Price,  @I_vNTE_Price = @NTE_Price,  @O_vOriginating_NTE_Price = @NTE_Price,  @I_vRepair_Cost = @Repair_Cost,  @O_vOriginating_Repair_Cost = @Repair_Cost,  @I_vReplace_Cost = @Replace_Cost,  @O_vOriginating_Replace_Cost = @Replace_Cost,  @I_vReplace_Price = @Replace_Price,  @O_vOriginating_Replace_Pric = @Replace_Price,  @I_vRETCOST = @RETCOST,  @O_vOriginating_Return_Cost = @RETCOST,  @O_vSVC_Orig_Ext_Return_Cost = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Cost * abs(@I_vReturn_QTY), @iCurrDecPlaces)  else @O_vReceived  end,  @I_vSVC_Return_Price = @SVC_Return_Price,  @O_vOriginating_Return_Price = @SVC_Return_Price,  @O_vSVC_Orig_Ext_Return_Pric = case  when @O_vReceived = 1 then round(@O_vOriginating_Return_Price * abs(@I_vReturn_QTY), @iCurrDecPlaces)  else 0  end end  if (@I_vReturn_Item_Number is null) or (@I_vReturn_Item_Number = '') begin  select @I_vReturn_Item_Number = @I_vITEMNMBR,  @I_vReturn_Item_Description = @I_vITEMDESC,  @I_vReturn_Location_Code = @I_vLOCNCODE,  @I_vReturn_QTY = 0,  @I_vReturn_U_Of_M = @I_vUOFM,  @I_vSVC_Return_Price_Level = case   when @I_vSVC_Return_Price_Level = '' and @RETPRICELVL = '' then @PRICELVL  when @I_vSVC_Return_Price_Level = '' and @RETPRICELVL <> '' then @RETPRICELVL  else @I_vSVC_Return_Price_Level  end,  @O_vOriginating_Return_Price = case  when @I_vSVC_Return_Price is null or @I_vSVC_Return_Price < 0 then @O_vORUNTPRC  else @O_vOriginating_Return_Price  end,  @O_vSVC_Orig_Ext_Return_Pric = case  when @I_vSVC_Extended_Return_Pric is null or @I_vSVC_Extended_Return_Pric < 0 then @O_vOXTNDPRC  else @O_vSVC_Orig_Ext_Return_Pric  end,  @I_vSVC_Return_Price = case   when @I_vSVC_Return_Price is null or @I_vSVC_Return_Price < 0 then @I_vUNITPRCE  else @I_vSVC_Return_Price  end,  @I_vSVC_Extended_Return_Pric = case  when @I_vSVC_Extended_Return_Pric is null or @I_vSVC_Extended_Return_Pric < 0 then @I_vXTNDPRCE  else @I_vSVC_Extended_Return_Pric  end,  @O_vOriginating_Return_Cost = case  when @I_vRETCOST is null or @I_vRETCOST < 0 then @O_vORUNTCST  else @O_vOriginating_Return_Cost  end,  @O_vSVC_Orig_Ext_Return_Cost = case   when @O_vSVC_Extended_Return_Cost is null or @O_vSVC_Extended_Return_Cost < 0 then @O_vOREXTCST  else @O_vSVC_Orig_Ext_Return_Cost  end,  @I_vRETCOST = case  when @I_vRETCOST is null or @I_vRETCOST < 0 then @I_vUNITCOST  else @I_vRETCOST  end,  @O_vSVC_Extended_Return_Cost = case   when @O_vSVC_Extended_Return_Cost is null or @O_vSVC_Extended_Return_Cost < 0 then @O_vEXTDCOST  else @O_vSVC_Extended_Return_Cost  end end  if (@I_vReturn_Item_Number <> '' and (@I_vReturn_Location_Code = '' or @I_vReturn_U_Of_M  = '')) begin  set @O_iErrorState = 9972     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vReturn_Item_Number <> '') and (@I_vReturn_Item_Number <> @I_vITEMNMBR) begin  set @iValueExists = 0  select @iValueExists = 1, @iRTNITMTRKOP = ITMTRKOP, @iRTNITEMTYPE = ITEMTYPE, @O_vRTNUOMSCHDL = UOMSCHDL, @O_vRTNSELNGUOM = SELNGUOM,   @iRTNCurrDecPlaces = (isnull(DECPLCUR, 1)-1), @iRTNQtyDecPlaces = (isnull(DECPLQTY,1)-1),  @iRTNSTNDCOST = isnull(STNDCOST, 0.0), @iRTNCURRCOST = isnull(CURRCOST, 0.0),   @O_vRTNITMCLSCD = isnull(ITMCLSCD, ''),  @O_vRTNITMDEFPRCLEVEL = isnull(PRCLEVEL, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@I_vReturn_Item_Number)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9973     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vReturn_Item_Number <> '') and (@I_vReturn_Location_Code <> '') begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vReturn_Location_Code)  begin  set @O_iErrorState = 9974    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  if not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vReturn_Item_Number and LOCNCODE = @I_vReturn_Location_Code)  begin  set @O_iErrorState = 9975    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vReturn_Item_Number <> '' and @I_vReturn_U_Of_M  <> '') begin  exec @iStatus = SVC_Obj_ValidateUOM  @I_vReturn_Item_Number,  @I_vReturn_U_Of_M ,  @iValid output  select @iError = @@error  if (@iStatus <> 0 or @iError <> 0)  begin  if (@iStatus = 0)  set @iStatus = @iError   set @O_iErrorState = 9976     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if ((@iValid is NULL) or (@iValid <> 1))  begin  set @O_iErrorState = 9977     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output   if (@O_vRTNSELNGUOM is NULL or @O_vRTNSELNGUOM = '')  begin  SELECT @I_vReturn_U_Of_M  = isnull(rtrim(BASEUOFM),'') from IV40201 where UOMSCHDL = @O_vRTNUOMSCHDL  if (@@ERROR <> 0 or @I_vUOFM = '')  begin  return (@O_iErrorState)  end  end  else  set @I_vReturn_U_Of_M  = rtrim(@O_vRTNSELNGUOM)  end  end  if (@I_vReturn_Item_Number = '') or (@I_vReturn_Location_Code = '') or (@I_vReturn_U_Of_M  = '') begin  select @I_vReturn_Item_Number = '',  @I_vReturn_Location_Code = '',  @I_vReturn_U_Of_M  = '' end  if (@I_vReplace_Price_Level <> '') and (@I_vReturn_Item_Number <> '')   and (@I_vCURNCYID <> '') and (@I_vUOFM <> '') and @ISMCREG = 1  and not exists(select 1 from IV00108 where ITEMNMBR = @I_vReturn_Item_Number and UOFM = @I_vUOFM   and (CURNCYID = '' or CURNCYID = @I_vCURNCYID) and PRCLEVEL = @I_vReplace_Price_Level) begin  set @O_iErrorState = 9978     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_vReceived = 1) or (@O_vRMA_Status > 7 and @O_vRMA_Status <> 9) begin  set @O_iErrorState = 9996     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vENTDTE = '')  set @I_vENTDTE = @O_TODAY  if (@I_vENTTME = '')  set @I_vENTTME = getdate()- convert(char(12),getdate(),12)  if (@I_vENTTME <> '') and not (datepart(day,@I_vENTTME) = 1 and datepart(month,@I_vENTTME) = 1 and datepart(year,@I_vENTTME) = 1900) begin  set @O_iErrorState = 9979     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vENTDTE <> '') and not (datepart(hour,@I_vENTDTE) = 0 and datepart(minute,@I_vENTDTE) = 0 and datepart(second,@I_vENTDTE) = 0   and datepart(millisecond,@I_vENTDTE) = 0) begin  set @O_iErrorState = 9980     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vETADTE is NULL)  set @I_vETADTE = ''  if (@I_vETATME is NULL)  set @I_vETATME = '' else  set @I_vETATME = convert(varchar(10), @I_vETATME, 108)  if (@I_vETATME <> '')   if not (datepart(day,@I_vETATME) = 1 and datepart(month,@I_vETATME) = 1 and datepart(year,@I_vETATME) = 1900)  begin  set @O_iErrorState = 9981     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vETADTE <> '')  begin  if not (datepart(hour,@I_vETADTE) = 0 and datepart(minute,@I_vETADTE) = 0 and datepart(second,@I_vETADTE) = 0   and datepart(millisecond,@I_vETADTE) = 0)  begin  set @O_iErrorState = 9982     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vCommit_Date is NULL)  set @I_vCommit_Date = ''  if (@I_vCommit_Time is NULL)  set @I_vCommit_Time = '' else  set @I_vCommit_Time = convert(varchar(10), @I_vCommit_Time, 108)  if (@I_vCommit_Time <> '')   if not (datepart(day,@I_vCommit_Time) = 1 and datepart(month,@I_vCommit_Time) = 1 and datepart(year,@I_vReturn_Time) = 1900)  begin  set @O_iErrorState = 9983     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vCommit_Date <> '')  begin  if not (datepart(hour,@I_vCommit_Date) = 0 and datepart(minute,@I_vCommit_Date) = 0 and datepart(second,@I_vCommit_Date) = 0   and datepart(millisecond,@I_vCommit_Date) = 0)  begin  set @O_iErrorState = 9984     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vRETUDATE is NULL)  set @I_vRETUDATE = ''  if (@I_vReturn_Time is NULL)  set @I_vReturn_Time = '' else  set @I_vReturn_Time = convert(varchar(10), @I_vReturn_Time, 108)  if (@I_vReturn_Time <> '')   if not (datepart(day,@I_vReturn_Time) = 1 and datepart(month,@I_vReturn_Time) = 1 and datepart(year,@I_vReturn_Time) = 1900)  begin  set @O_iErrorState = 9985     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vRETUDATE <> '')  begin  if not (datepart(hour,@I_vRETUDATE) = 0 and datepart(minute,@I_vRETUDATE) = 0 and datepart(second,@I_vRETUDATE) = 0   and datepart(millisecond,@I_vRETUDATE) = 0)  begin  set @O_iErrorState = 9986     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vCOMPDTE is NULL)  set @I_vCOMPDTE = ''  if (@I_vCOMPTME is NULL)  set @I_vCOMPTME = '' else  set @I_vCOMPTME = convert(varchar(10), @I_vCOMPTME, 108)  if (@I_vCOMPTME <> '')   if not (datepart(day,@I_vCOMPTME) = 1 and datepart(month,@I_vCOMPTME) = 1 and datepart(year,@I_vCOMPTME) = 1900)  begin  set @O_iErrorState = 9987     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vCOMPDTE <> '')  begin  if not (datepart(hour,@I_vCOMPDTE) = 0 and datepart(minute,@I_vCOMPDTE) = 0 and datepart(second,@I_vCOMPDTE) = 0   and datepart(millisecond,@I_vCOMPDTE) = 0)  begin  set @O_iErrorState = 9988     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  set @I_vOFFID = case   when @I_vOFFID is null or @I_vOFFID = '' then @OFFID  else @I_vOFFID  end if (@I_vOFFID <> '') begin  if (not exists(select 1 from SVC00902 (nolock) where OFFID = @I_vOFFID))  begin  set @O_iErrorState = 9989    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @AuditLNITMSEQ = count(RETDOCID) + 1 from SVC05020 (nolock) where RETDOCID = @I_vRETDOCID  if (@Line_Seq_Exists=0) or (isnull(@O_iNOTEINDX,0) = 0) begin  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,   @oErrString,  @oErrString output,  @O_oErrorState output  end  set @O_iErrorState = 9990     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @NOTEINDX = isnull(@O_iNOTEINDX, 0) end  select @iSerialCount = sum(SERLTQTY) from SVC05255   where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and Return_Item_Number = @I_vITEMNMBR  if ((@iITMTRKOP = 2 or @iITMTRKOP = 3) and (@iSerialCount > 0 and @I_vQUANTITY < @iSerialCount)) begin  set @O_iErrorState = 8972     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  set @iSerialCount = 0 select @iSerialCount = sum(SERLTQTY) from SVC05256  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and Replace_Item_Number = @I_vReplace_Item_Number  if ((@iITMTRKOP = 2 or @iITMTRKOP = 3) and (@iSerialCount > 0 and @I_vReplace_QTY < @iSerialCount)) begin  set @O_iErrorState = 8973     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@Line_Seq_Exists=0) begin     insert into SVC05200( Return_Record_Type,  RETDOCID,  LNSEQNBR,  SVC_Next_Line_SEQ_Number,  SVC_Prev_Line_SEQ_Number,  RETTYPE,  RMA_Status,  RETSTAT,  CUSTNMBR,  ADRSCODE,  ITEMNMBR,  ITEMDESC,  LOCNCODE,  Received,  Traveler_Printed,  SVC_Ready_To_Close,  SVC_RMA_Reason_Code,  SVC_RMA_Reason_Code_Desc,  NOTEINDX,  RETORIG,  RETREF,  SRVRECTYPE,  CALLNBR,  EQPLINE,  LNITMSEQ,  SVC_RMA_From_Service,  SOPTYPE,  SOPNUMBE,  CMPNTSEQ,  SOP_Line_Item_Sequence,  ENTDTE,  ENTTME,  ETADTE,  ETATME,  Commit_Date,  Commit_Time,  RETUDATE,  Return_Time,  COMPDTE,  COMPTME,  PRMDATE,  REFRENCE,  USERID,  OFFID,  RTRNNAME,  RETADDR1,  RETADDR2,  RETADDR3,  RTRNCITY,  SVC_Return_State,  RTRNZIP,  Return_Country,  CUSTNAME,  CONTACT,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  COUNTRY,  Bill_To_Customer,  SVC_Bill_To_Address_Code,  CSTPONBR,  QUANTITY,  DECPLQTY,  UOFM,  UNITCOST,  ORUNTCST,  EXTDCOST,  OREXTCST,  UNITPRCE,  ORUNTPRC,  XTNDPRCE,  OXTNDPRC,  CUSTOWN,  FACTSEAL,  ORDDOCID,  TRANSLINESEQ,  STATUS,  Flat_Rate_Repair_Price,  Orig_Flat_RepairPrice,  Repair_Price,  Originating_Repair_Price,  NTE_Price,  Originating_NTE_Price,  Repair_Cost,  Originating_Repair_Cost,  Bill_of_Lading,  SHIPMTHD,  Credit_SOP_Type,  Credit_SOP_Number,  Credit_SOP_Line_Item_Seq,  Replace_SOP_Type,  Replace_SOP_Number,  Replace_SOP_Line_Item_Se,  Location_Code_Replacemen,  Replace_Item_Number,  Replace_U_Of_M,  Replace_Price_Level,  Replace_QTY,  Replace_Cost,  Originating_Replace_Cost,  Replace_Price,  Originating_Replace_Pric,  SOP_Number_Invoice,  Item_Number_Invoice,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  CURRNIDX,  DECPLCUR,  ODECPLCU,  Return_Item_Number,  Return_Item_Description,  Return_Location_Code,  Return_QTY,  Return_U_Of_M,  RETCOST,  Originating_Return_Cost,  SVC_Extended_Return_Cost,  SVC_Orig_Ext_Return_Cost,  SVC_Return_Price_Level,  SVC_Return_Price,  Originating_Return_Price,  SVC_Extended_Return_Pric,  SVC_Orig_Ext_Return_Pric,  SVC_FO_ID,  SVC_SCM_Complete,  svcRMAComponentSeq)  select  @I_vReturn_Record_Type,  @I_vRETDOCID,  @I_vLNSEQNBR,  0,       0,       @I_vRETTYPE,  @O_vRMA_Status,  @I_vRETSTAT,  @I_vCUSTNMBR,  @I_vADRSCODE,  @I_vITEMNMBR,  @I_vITEMDESC,  @I_vLOCNCODE,  @O_vReceived,  @O_iTraveler_Printed,  @I_vSVC_Ready_To_Close,  @I_vSVC_RMA_Reason_Code,  @O_vSVC_RMA_Reason_Code_Desc,  @NOTEINDX,  @I_vRETORIG,  @I_vRETREF,  @O_vSRVRECTYPE,  @O_vCALLNBR,  @I_vEQPLINE,  @I_vLNITMSEQ,  @I_vSVC_RMA_From_Service,  @O_vSOPTYPE,  @O_vSOPNUMBE,  @I_vCMPNTSEQ,  @I_vSOP_Line_Item_Sequence,  @I_vENTDTE,  @I_vENTTME,  @I_vETADTE,  @I_vETATME,  @I_vCommit_Date,  @I_vCommit_Time,  @I_vRETUDATE,  @I_vReturn_Time,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vPRMDATE,  @O_vREFRENCE,  @I_vUSERID,  @I_vOFFID,  @I_vRTRNNAME,  @I_vRETADDR1,  @I_vRETADDR2,  @I_vRETADDR3,  @I_vRTRNCITY,  @I_vSVC_Return_State,  @I_vRTRNZIP,  @I_vReturn_Country,  @I_vCUSTNAME,  @I_vCONTACT,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCOUNTRY,  @O_vBill_To_Customer,  @O_vSVC_Bill_To_Address_Code,  @I_vCSTPONBR,  @I_vQUANTITY,  @O_vDECPLQTY,  @I_vUOFM,  @I_vUNITCOST,  @O_vORUNTCST,  @O_vEXTDCOST,  @O_vOREXTCST,  @I_vUNITPRCE,  @O_vORUNTPRC,  @I_vXTNDPRCE,  @O_vOXTNDPRC,  @I_vCUSTOWN,  @I_vFACTSEAL,  @O_vORDDOCID,  @O_vTRANSLINESEQ,  @O_vSTATUS,  @I_vFlat_Rate_Repair_Price,  @O_vOrig_Flat_RepairPrice,  @I_vRepair_Price,  @O_vOriginating_Repair_Price,  @I_vNTE_Price,  @O_vOriginating_NTE_Price,  @I_vRepair_Cost,  @O_vOriginating_Repair_Cost,  @I_vBill_of_Lading,  @I_vSHIPMTHD,  @O_vCredit_SOP_Type,  @O_vCredit_SOP_Number,  @O_vCredit_SOP_Line_Item_Seq,  @O_vReplace_SOP_Type,  @O_vReplace_SOP_Number,  @O_vReplace_SOP_Line_Item_Se,  @I_vLocation_Code_Replacemen,  @I_vReplace_Item_Number,  @I_vReplace_U_Of_M,  @I_vReplace_Price_Level,  @I_vReplace_QTY,  @I_vReplace_Cost,  @O_vOriginating_Replace_Cost,  @I_vReplace_Price,  @O_vOriginating_Replace_Pric,  @O_vSOP_Number_Invoice,  @I_vItem_Number_Invoice,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @iCURRNIDX,  @O_vDECPLCUR,  @O_vODECPLCU,  @I_vReturn_Item_Number,  @I_vReturn_Item_Description,  @I_vReturn_Location_Code,  @I_vReturn_QTY,  @I_vReturn_U_Of_M,  @I_vRETCOST,  @O_vOriginating_Return_Cost,  @O_vSVC_Extended_Return_Cost,  @O_vSVC_Orig_Ext_Return_Cost,  @I_vSVC_Return_Price_Level,  @I_vSVC_Return_Price,  @O_vOriginating_Return_Price,  @I_vSVC_Extended_Return_Pric,  @O_vSVC_Orig_Ext_Return_Pric,  @I_vSVC_FO_ID,  @I_vSVC_SCM_Complete,  @I_vCMPNTSEQ   if @@error <> 0  begin  set @O_iErrorState = 9991    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC05020  (RETDOCID,  LNSEQNBR,  LNITMSEQ,  SVCFRMSTAT,  SVCTOSTAT,  DSCRPTION,  USERID,  CREATDDT,  CREATETIME)  select  @I_vRETDOCID,  @I_vLNSEQNBR,  @AuditLNITMSEQ,  @FRMSTAT,  @I_vRETSTAT,  @AuditDesc,  @UserID,  convert(varchar(12),getdate(),101),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  set @O_iErrorState = 10330    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end else begin     if (@I_vUpdateIfExists > 0)  begin  update SVC05200 set RETTYPE = @I_vRETTYPE,  RMA_Status = @O_vRMA_Status,  RETSTAT = @I_vRETSTAT,  CUSTNMBR = @I_vCUSTNMBR,  ADRSCODE = @I_vADRSCODE,  ITEMNMBR = @I_vITEMNMBR,  ITEMDESC = @I_vITEMDESC,  LOCNCODE = @I_vLOCNCODE,  Received = @O_vReceived,  Traveler_Printed = @O_iTraveler_Printed,  SVC_Ready_To_Close = @I_vSVC_Ready_To_Close,  SVC_RMA_Reason_Code = @I_vSVC_RMA_Reason_Code,  SVC_RMA_Reason_Code_Desc = @O_vSVC_RMA_Reason_Code_Desc,  NOTEINDX = @NOTEINDX,  RETORIG = @I_vRETORIG,  RETREF = @I_vRETREF,  SRVRECTYPE = @O_vSRVRECTYPE,  CALLNBR = @O_vCALLNBR,  EQPLINE = @I_vEQPLINE,  LNITMSEQ = @I_vLNITMSEQ,  SVC_RMA_From_Service = @I_vSVC_RMA_From_Service,  SOPTYPE = @O_vSOPTYPE,  SOPNUMBE = @O_vSOPNUMBE,  CMPNTSEQ = @I_vCMPNTSEQ,  SOP_Line_Item_Sequence = @I_vSOP_Line_Item_Sequence,  ENTDTE = @I_vENTDTE,  ENTTME = @I_vENTTME,  ETADTE = @I_vETADTE,  ETATME = @I_vETATME,  Commit_Date = @I_vCommit_Date,  Commit_Time = @I_vCommit_Time,  RETUDATE = @I_vRETUDATE,  Return_Time = @I_vReturn_Time,  COMPDTE = @I_vCOMPDTE,  COMPTME = @I_vCOMPTME,  PRMDATE = @I_vPRMDATE,  REFRENCE = @O_vREFRENCE,  USERID = @I_vUSERID,  OFFID = @I_vOFFID,  RTRNNAME = @I_vRTRNNAME,  RETADDR1 = @I_vRETADDR1,  RETADDR2 = @I_vRETADDR2,  RETADDR3 = @I_vRETADDR3,  RTRNCITY = @I_vRTRNCITY,  SVC_Return_State = @I_vSVC_Return_State,  RTRNZIP = @I_vRTRNZIP,  Return_Country = @I_vReturn_Country,  CUSTNAME = @I_vCUSTNAME,  CONTACT = @I_vCONTACT,  ADDRESS1 = @I_vADDRESS1,  ADDRESS2 = @I_vADDRESS2,  ADDRESS3 = @I_vADDRESS3,  CITY = @I_vCITY,  STATE = @I_vSTATE,  ZIPCODE = @I_vZIPCODE,  COUNTRY = @I_vCOUNTRY,  Bill_To_Customer = @O_vBill_To_Customer,  SVC_Bill_To_Address_Code = @O_vSVC_Bill_To_Address_Code,  CSTPONBR = @I_vCSTPONBR,  QUANTITY = @I_vQUANTITY,  DECPLQTY = @O_vDECPLQTY,  UOFM = @I_vUOFM,  UNITCOST = @I_vUNITCOST,  ORUNTCST = @O_vORUNTCST,  EXTDCOST = @O_vEXTDCOST,  OREXTCST = @O_vOREXTCST,  UNITPRCE = @I_vUNITPRCE,  ORUNTPRC = @O_vORUNTPRC,  XTNDPRCE = @I_vXTNDPRCE,  OXTNDPRC = @O_vOXTNDPRC,  CUSTOWN = @I_vCUSTOWN,  FACTSEAL = @I_vFACTSEAL,  ORDDOCID = @O_vORDDOCID,  TRANSLINESEQ = @O_vTRANSLINESEQ,  STATUS = @O_vSTATUS,  Flat_Rate_Repair_Price = @I_vFlat_Rate_Repair_Price,  Orig_Flat_RepairPrice = @O_vOrig_Flat_RepairPrice,  Repair_Price = @I_vRepair_Price,  Originating_Repair_Price = @O_vOriginating_Repair_Price,  NTE_Price = @I_vNTE_Price,  Originating_NTE_Price = @O_vOriginating_NTE_Price,  Repair_Cost = @I_vRepair_Cost,  Originating_Repair_Cost = @O_vOriginating_Repair_Cost,  Bill_of_Lading = @I_vBill_of_Lading,  SHIPMTHD = @I_vSHIPMTHD,  Credit_SOP_Type = @O_vCredit_SOP_Type,  Credit_SOP_Number = @O_vCredit_SOP_Number,  Credit_SOP_Line_Item_Seq = @O_vCredit_SOP_Line_Item_Seq,  Replace_SOP_Type = @O_vReplace_SOP_Type,  Replace_SOP_Number = @O_vReplace_SOP_Number,  Replace_SOP_Line_Item_Se = @O_vReplace_SOP_Line_Item_Se,  Location_Code_Replacemen = @I_vLocation_Code_Replacemen,  Replace_Item_Number = @I_vReplace_Item_Number,  Replace_U_Of_M = @I_vReplace_U_Of_M,  Replace_Price_Level = @I_vReplace_Price_Level,  Replace_QTY = @I_vReplace_QTY,  Replace_Cost = @I_vReplace_Cost,  Originating_Replace_Cost = @O_vOriginating_Replace_Cost,  Replace_Price = @I_vReplace_Price,  Originating_Replace_Pric = @O_vOriginating_Replace_Pric,  SOP_Number_Invoice = @O_vSOP_Number_Invoice,  Item_Number_Invoice = @I_vItem_Number_Invoice,  USERDEF1 = @I_vUSERDEF1,  USERDEF2 = @I_vUSERDEF2,  USRDEF03 = @I_vUSRDEF03,  USRDEF04 = @I_vUSRDEF04,  USRDEF05 = @I_vUSRDEF05,  CURRNIDX = @iCURRNIDX,  DECPLCUR = @O_vDECPLCUR,  ODECPLCU = @O_vODECPLCU,  Return_Item_Number = @I_vReturn_Item_Number,  Return_Item_Description = @I_vReturn_Item_Description,  Return_Location_Code = @I_vReturn_Location_Code,  Return_QTY = @I_vReturn_QTY,  Return_U_Of_M = @I_vReturn_U_Of_M,  RETCOST = @I_vRETCOST,  Originating_Return_Cost = @O_vOriginating_Return_Cost,  SVC_Extended_Return_Cost = @O_vSVC_Extended_Return_Cost,  SVC_Orig_Ext_Return_Cost = @O_vSVC_Orig_Ext_Return_Cost,  SVC_Return_Price_Level = @I_vSVC_Return_Price_Level,  SVC_Return_Price = @I_vSVC_Return_Price,  Originating_Return_Price = @O_vOriginating_Return_Price,  SVC_Extended_Return_Pric = @I_vSVC_Extended_Return_Pric,  SVC_Orig_Ext_Return_Pric = @O_vSVC_Orig_Ext_Return_Pric,  SVC_FO_ID = @I_vSVC_FO_ID,  SVC_SCM_Complete = @I_vSVC_SCM_Complete   where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID and LNSEQNBR = @I_vLNSEQNBR   if (@@error <> 0)  begin  set @O_iErrorState = 9993    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC05020  (RETDOCID,  LNSEQNBR,  LNITMSEQ,  SVCFRMSTAT,  SVCTOSTAT,  DSCRPTION,  USERID,  CREATDDT,  CREATETIME)  select  @I_vRETDOCID,  @I_vLNSEQNBR,  @AuditLNITMSEQ,  @FRMSTAT,  @I_vRETSTAT,  @AuditDesc,  @UserID,  convert(varchar(12),getdate()),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  set @O_iErrorState = 9992    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   end end  if (@I_vNOTETXT is NULL)  set @I_vNOTETXT = ''  if (@I_vNOTETXT <> '') and (@NOTEINDX > 0) begin  if exists(select 1 from SY03900 where NOTEINDX = @NOTEINDX)  update SY03900 set TXTFIELD = @I_vNOTETXT,   DATE1 = @O_TODAY,   TIME1 = convert(char(12), getdate(), 108)   where NOTEINDX = @NOTEINDX  else  insert into SY03900 (NOTEINDX,   DATE1,   TIME1,   TXTFIELD)   select @NOTEINDX,   @O_TODAY,   convert(char(12), getdate(), 108),   @I_vNOTETXT end  if (@I_vQUANTITY > 0) begin  exec @iStatus = SVC_Set_RMA_Dist  @RMANumber = @I_vRETDOCID,  @RecordType = @I_vReturn_Record_Type,  @LineNumber = @I_vLNSEQNBR,  @ProcessLine = 0,    @LineType = '',    @DistType = 0,    @Price = 0,    @OrigPrice = 0,    @Cost = 0,    @OrigCost = 0,    @iType = 1,    @UserCOGSAcct = 0,  @CMPNTSEQ = @I_vCMPNTSEQ    select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 9994    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@iITMTRKOP = 2) begin  update SVC05255 set RETCOST = @I_vRETCOST  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and POSTED = 0   update SVC05256 set Replace_Cost = @I_vRETCOST  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR  end  exec @iStatus = taFSRMALinePost  @I_vReturn_Record_Type,  @I_vRETDOCID,  @I_vLNSEQNBR,  @I_vRETTYPE,  @I_vRETSTAT,  @I_vCUSTNMBR,  @I_vADRSCODE,  @I_vITEMNMBR,  @I_vITEMDESC,  @I_vLOCNCODE,  @I_vSVC_Ready_To_Close,  @I_vSVC_RMA_Reason_Code,  @I_vNOTETXT,  @I_vRETORIG,  @I_vRETREF,  @I_vEQPLINE,  @I_vLNITMSEQ,  @I_vSVC_RMA_From_Service,  @I_vCMPNTSEQ,  @I_vSOP_Line_Item_Sequence,  @I_vENTDTE,  @I_vENTTME,  @I_vETADTE,  @I_vETATME,  @I_vCommit_Date,  @I_vCommit_Time,  @I_vRETUDATE,  @I_vReturn_Time,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vPRMDATE,  @I_vUSERID,  @I_vOFFID,  @I_vRTRNNAME,  @I_vRETADDR1,  @I_vRETADDR2,  @I_vRETADDR3,  @I_vRTRNCITY,  @I_vSVC_Return_State,  @I_vRTRNZIP,  @I_vReturn_Country,  @I_vCUSTNAME,  @I_vCONTACT,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCOUNTRY,  @I_vCSTPONBR,  @I_vQUANTITY,  @I_vUOFM,  @I_vUNITCOST,  @I_vUNITPRCE,  @I_vXTNDPRCE,  @I_vCUSTOWN,  @I_vFACTSEAL,  @I_vFlat_Rate_Repair_Price,  @I_vRepair_Price,  @I_vNTE_Price,  @I_vRepair_Cost,  @I_vBill_of_Lading,  @I_vSHIPMTHD,  @I_vLocation_Code_Replacemen,  @I_vReplace_Item_Number,  @I_vReplace_U_Of_M,  @I_vReplace_Price_Level,  @I_vReplace_QTY,  @I_vReplace_Cost,  @I_vReplace_Price,  @I_vItem_Number_Invoice,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vCURNCYID,  @I_vReturn_Item_Number,  @I_vReturn_Item_Description,  @I_vReturn_Location_Code,  @I_vReturn_QTY,  @I_vReturn_U_Of_M,  @I_vRETCOST,  @I_vSVC_Return_Price_Level,  @I_vSVC_Return_Price,  @I_vSVC_Extended_Return_Pric,  @I_vSVC_FO_ID,  @I_vSVC_SCM_Complete,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 9995    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taFSRMALine] TO [DYNGRP]
GO

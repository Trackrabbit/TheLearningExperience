SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create   procedure [dbo].[aagDeriveParentDimCodeAccClass]  @I_nTrxDimID   int = 0,   @I_nTrxDCodeID int = 0,  @I_cTableCodeAccClassDimTemp1  nvarchar(30) = null,   @I_cTableCodeAccClassDimTemp2  nvarchar(30) = null output,  @O_cParentTrxDim  char(16)= '' output,   @O_cParentTrxDimCode  char(31) ='' output,  @O_nDimInactive tinyint = 0 output,  @O_nCodeInactive tinyint = 0 output,  @O_nDataEntry tinyint = 0 output  as  exec ('truncate TABLE ' + @I_cTableCodeAccClassDimTemp2 )  exec ('insert into ' + @I_cTableCodeAccClassDimTemp2 + ' select aaTrxDimID, aaTrxDim, aaOrder, aaTrxDimCodeIDDflt,aaTrxDimCode,aaTrxDimCodeNum,aaTrxDimCodeBool,aaTrxDimCodeDate, aaTrxDimCodeDescr, aaDataType, aaDataEntry, aaShow,DECPLQTY, BASEUOFM,INACTIVE from ' + @I_cTableCodeAccClassDimTemp1 + ' where aaDataType = 1')  begin  declare  @cTrxDimID int,   @cTrxCodeID int,  @cParentTrxDimID int,   @cParentTrxDimCodeID int,  @cParentTrxDimCodeDesc char(51) set @cTrxDimID = @I_nTrxDimID set @cTrxCodeID = @I_nTrxDCodeID set @O_cParentTrxDim = space(0) set @O_cParentTrxDimCode = space(0)  WHILE (@cTrxDimID <> 0 and  @cTrxCodeID <> 0)  begin  exec aagDeriveParentDimCode  @cTrxDimID,   @cTrxCodeID,  @cParentTrxDimID output,   @cParentTrxDimCodeID output,  @O_cParentTrxDim output,   @O_cParentTrxDimCode output,  @cParentTrxDimCodeDesc output   if (@cParentTrxDimID = 0 or  @cParentTrxDimCodeID = 0)  return   else  if (select INACTIVE from AAG00400 where aaTrxDimID = @cParentTrxDimID) = 1  begin  set @O_nDimInactive = 1  return  end  else  if (select INACTIVE from AAG00401 where aaTrxDimID = @cParentTrxDimID   and aaTrxDimCodeID = @cParentTrxDimCodeID) = 1  begin  set @O_nCodeInactive = 1  return  end  begin   set @cParentTrxDimCodeDesc = replace(@cParentTrxDimCodeDesc,'''','''''')  exec ('update ' + @I_cTableCodeAccClassDimTemp2 +  ' set aaTrxDimCodeIDDflt ='  + @cParentTrxDimCodeID +  ',aaTrxDim = ''' + @O_cParentTrxDim +  ''', aaTrxDimCode = ''' + @O_cParentTrxDimCode +   ''', aaTrxDimCodeDescr = ''' + @cParentTrxDimCodeDesc +  '''  where aaTrxDimID = ' + @cParentTrxDimID + ' and aaDataEntry <> 1')   exec ('update ' + @I_cTableCodeAccClassDimTemp2 +  ' set aaTrxDimCodeIDDflt = space(1),aaTrxDim = ''' + @O_cParentTrxDim +  ''', aaTrxDimCode =  space(1) , aaTrxDimCodeDescr = ''' + @cParentTrxDimCodeDesc +  '''  where aaTrxDimID = ' + @cParentTrxDimID + ' and aaDataEntry = 1')    set @cTrxDimID = @cParentTrxDimID  set @cTrxCodeID = @cParentTrxDimCodeID  end  end  end return     
GO
GRANT EXECUTE ON  [dbo].[aagDeriveParentDimCodeAccClass] TO [DYNGRP]
GO

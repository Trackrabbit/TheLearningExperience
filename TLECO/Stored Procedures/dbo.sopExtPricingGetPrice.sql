SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[sopExtPricingGetPrice]  @piST_DorP char(1),      @piST_CustomerNumber char(15),   @piST_ItemNumber char(31),   @piST_UofM char(9),    @piDA_Date datetime,    @piDE_Qty decimal(19,5),   @piIN_GetPromotion integer,   @piST_Currency char(16),   @poDE_Price decimal(19,5) OUTPUT,  @poIN_PromFound integer OUTPUT,   @poIN_PromType integer OUTPUT,   @poDE_PromPrice decimal(19,5) OUTPUT,   @poST_SchemeCode char(15) OUTPUT,  @poST_SchemeItemType char(1) OUTPUT,     @poST_SchemeGroup char(31) OUTPUT,  @poDE_QtyFrom decimal (19,5) OUTPUT,  @poDE_QtyTo decimal (19,5) OUTPUT,  @poIN_CurrPriceFound integer  OUTPUT, @Description char(50) OUTPUT,   @StartDate datetime OUTPUT,   @EndDate datetime OUTPUT,   @QuantityFree decimal(19,5) OUTPUT,  @QuantityFrom decimal(19,5) OUTPUT,  @QuantityTo decimal(19,5) OUTPUT,  @PriceSheetID char(15) OUTPUT   AS  DECLARE @loDE_Value decimal(19,5),  @loDE_EQUOMQTY decimal(19,5),  @loST_ValueType char(1),  @loST_BaseUofM char(9),  @loDA_NextStartDate datetime,  @loDA_NextEndDate datetime,  @loST_CS_Type char(1),  @loDE_CS_Value decimal(19,5),  @loST_CP_Type char(1),  @loDE_CP_Value decimal(19,5),  @loIN_DecPlaces integer,  @loIN_DPQty integer,  @loIN_GotPrice integer,   @loIN_GotPromotion integer,   @loDE_StoredPrice decimal(19,5),   @loDE_LevelPrice decimal(19,5),   @loDE_PrevLevelPrice decimal(19,5),   @loIN_PromFound integer,   @loIN_PromLevel integer,  @loDE_PromPrice decimal(19,5),  @loDE_PromValueOff decimal(19,5),  @loST_SchemeCode char(15),  @loDE_QtyFrom decimal (19,5),   @loDE_QtyTo decimal (19,5),   @loST_FUNLCURR char(16),  @loIN_PricesNotReqd integer,  @loIN_ConvertFunctPrice integer,  @loIN_CurrPromFound integer,  @QtyFree decimal (19,5),  @PromotionType integer,    @PriceSheetType char(1),     @PriceGroupID char(31),    @Start datetime,  @End datetime,  @Desc char(50),  @loDT_StartDate datetime,  @loDT_EndDate datetime,  @loDE_From decimal (19,5),   @loDE_To decimal (19,5),  @loPriceSheetID char(15)  SELECT @loIN_DecPlaces = DECPLCUR - 1, @loIN_DPQty = DECPLQTY - 1  FROM IV00101 where ITEMNMBR = @piST_ItemNumber  IF @piDE_Qty = 0 BEGIN  RETURN 50007 END  EXECUTE ExtPricingGetFunctionalCurrency @loST_FUNLCURR OUTPUT  IF @loST_FUNLCURR IS NULL BEGIN  SELECT @loST_FUNLCURR = '' END   SELECT @loIN_PricesNotReqd = SOP40100.Prices_Not_Required_In_Pr,  @loIN_ConvertFunctPrice = SOP40100.Convert_Functional_Price  FROM SOP40100  SET @loIN_GotPromotion = 0 SET @poIN_PromFound = 0  SET @loIN_CurrPromFound = 0  SET @poIN_CurrPriceFound = 0  SET @loIN_GotPrice = 0  IF @piST_Currency = @loST_FUNLCURR BEGIN  GOTO FunctCurrencyRoutines END  IF (SELECT COUNT(*)   FROM IV00105  WHERE ITEMNMBR = @piST_ItemNumber AND  CURNCYID = @piST_Currency) > 0 BEGIN  SELECT  @loIN_DecPlaces = DECPLCUR - 1  FROM IV00105  WHERE ITEMNMBR = @piST_ItemNumber AND  CURNCYID = @piST_Currency END ELSE BEGIN  RETURN 50033 END   IF @piIN_GetPromotion = 1 BEGIN  EXECUTE ExtPricingGetPromoPrice  @piST_DorP,  @piST_CustomerNumber,  @piST_ItemNumber,  @piST_UofM,  @piDA_Date,  @piDE_Qty,  @piST_Currency,  @poDE_Price = @loDE_PromPrice OUTPUT,  @poDE_Value = @loDE_PromValueOff OUTPUT,  @poST_SchemeCode = @loST_SchemeCode OUTPUT,  @poST_SchemeItemType = @PriceSheetType OUTPUT,  @poST_SchemeGroup = @PriceGroupID OUTPUT,  @poIN_PromLevel = @loIN_PromLevel OUTPUT,  @poIN_PromType = @PromotionType OUTPUT,  @poDE_QtyFrom = @loDE_QtyFrom OUTPUT,  @poDE_QtyTo = @loDE_QtyTo OUTPUT,  @poIN_PromFound = @loIN_PromFound OUTPUT,  @poIN_CurrPriceFound = @loIN_CurrPromFound OUTPUT,  @QuantityFree = @QtyFree OUTPUT,  @StartDate = @Start  OUTPUT,  @EndDate  = @End  OUTPUT,  @Description = @Desc OUTPUT   SET @poIN_CurrPriceFound = @loIN_CurrPromFound  SET @poIN_PromFound = @loIN_PromFound  SET @poST_SchemeCode = @loST_SchemeCode  SET @poST_SchemeItemType = @PriceSheetType  SET @poST_SchemeGroup = @PriceGroupID  SET @poIN_PromType = @PromotionType  SET @poDE_QtyFrom = @loDE_QtyFrom  SET @poDE_QtyTo = @loDE_QtyTo  SET @poDE_PromPrice = @loDE_PromPrice  SET @QuantityFree = @QtyFree  SET @StartDate = @Start  SET @EndDate  = @End  SET @Description = @Desc  IF (@loIN_PromFound = 1) AND (@PromotionType = 1)  BEGIN   SET @poDE_PromPrice = @loDE_PromPrice  SET @loIN_GotPromotion = 1  END END  SET @poIN_CurrPriceFound = 1  IF @piST_CustomerNumber IS NULL BEGIN  GOTO CurrBaseListProduct END  CurrCustomerProduct:  DECLARE scCurrCustomerProduct SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with (index = AK2RM00500)  INNER JOIN SOP10110 as SH with (index=PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  INNER JOIN IV10401 as SW with(index = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'I'  AND SW.ITEMNMBR = @piST_ItemNumber  INNER JOIN IV10402 as SWU with(index = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  WHERE SL.PRODTCOD = @piST_DorP  AND SL.LINKCODE = @piST_CustomerNumber  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrCustomerProduct  FETCH FIRST FROM scCurrCustomerProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrCustomerProduct  DEALLOCATE scCurrCustomerProduct  GOTO CurrCustomerGroup END ELSE BEGIN  FETCH NEXT FROM  scCurrCustomerProduct  INTO  @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrCustomerProduct  DEALLOCATE scCurrCustomerProduct  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50001  END  END  END END  FETCH FIRST FROM scCurrCustomerProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID CLOSE scCurrCustomerProduct DEALLOCATE scCurrCustomerProduct  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF  (@loIN_PromFound = 1)  AND (@loIN_CurrPromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel =1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  GOTO CurrPriceListProduct  END  END  ELSE  BEGIN  SET @poIN_PromFound = 0  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  END ELSE BEGIN  SELECT @loST_CS_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CS_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CS_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO CurrPriceListProduct END  CurrCustomerGroup:  DECLARE scCurrCustomerGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(index = AK2RM00500)  INNER JOIN SOP10110 as SH with(index = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  INNER JOIN IV10401 as SW with(index = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  INNER JOIN IV10402 as SWU with(index = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN IV10400 as GW with(index = AK2IV10400)  ON GW.PRCGRPID = SW.ITEMNMBR  AND GW.ITEMNMBR = @piST_ItemNumber  WHERE SL.PRODTCOD = @piST_DorP  AND SL.LINKCODE = @piST_CustomerNumber  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrCustomerGroup  FETCH FIRST FROM scCurrCustomerGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrCustomerGroup  DEALLOCATE scCurrCustomerGroup  GOTO CurrPriceListProduct END ELSE BEGIN  FETCH NEXT FROM scCurrCustomerGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID   IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrCustomerGroup  DEALLOCATE scCurrCustomerGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50002  END  END  END END  FETCH FIRST FROM scCurrCustomerGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCurrCustomerGroup DEALLOCATE scCurrCustomerGroup  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF  (@loIN_PromFound = 1)  AND (@loIN_CurrPromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END  select @PriceSheetID = @loPriceSheetID   RETURN 0  END  ELSE  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  GOTO CurrPriceListProduct  END  END  ELSE  BEGIN  SET @poIN_PromFound = 0  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  END ELSE BEGIN  SELECT @loST_CS_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CS_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CS_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO CurrPriceListProduct END  CurrPriceListProduct:  DECLARE scCurrPriceListProduct SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(index = AK2RM00500)  INNER JOIN SOP10110 as SH  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  INNER JOIN IV10401 as SW  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'I'  AND SW.ITEMNMBR = @piST_ItemNumber  INNER JOIN IV10402 as SWU  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN SOP10205 as PL  ON PL.PRCBKID = SL.LINKCODE  AND PL.PRODTCOD = @piST_DorP  AND PL.LINKCODE = @piST_CustomerNumber  WHERE SL.PRODTCOD = 'P'  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrPriceListProduct  FETCH FIRST FROM scCurrPriceListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrPriceListProduct  DEALLOCATE scCurrPriceListProduct  GOTO CurrPriceListGroup END ELSE BEGIN  FETCH NEXT FROM scCurrPriceListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID   IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrPriceListProduct  DEALLOCATE scCurrPriceListProduct  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50003  END  END  END END  FETCH FIRST FROM scCurrPriceListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCurrPriceListProduct DEALLOCATE scCurrPriceListProduct  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  AND (@loIN_CurrPromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID   RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID   RETURN 0  END  ELSE  BEGIN  IF @loIN_GotPrice = 0  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  END  GOTO CurrBaseListProduct  END  END  ELSE  BEGIN  SET @poIN_PromFound = 0  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  SELECT @loST_CP_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CP_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CP_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO CurrBaseListProduct END  CurrPriceListGroup:  DECLARE scCurrPriceListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(index = AK2RM00500)  INNER JOIN SOP10110 as SH with(index = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  INNER JOIN IV10401 as SW with(index = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  INNER JOIN IV10402 as SWU with(index = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN IV10400 as GW with(index = AK2IV10400)  ON GW.PRCGRPID = SW.ITEMNMBR  AND GW.ITEMNMBR = @piST_ItemNumber  INNER JOIN SOP10205 as PL  ON PL.PRCBKID = SL.LINKCODE  AND PL.PRODTCOD = @piST_DorP  AND PL.LINKCODE = @piST_CustomerNumber  WHERE SL.PRODTCOD = 'P'  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrPriceListGroup  FETCH FIRST FROM scCurrPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrPriceListGroup  DEALLOCATE scCurrPriceListGroup  GOTO CurrBaseListProduct END ELSE BEGIN  FETCH NEXT FROM scCurrPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrPriceListGroup  DEALLOCATE scCurrPriceListGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50004  END  END  END END  FETCH FIRST FROM scCurrPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCurrPriceListGroup DEALLOCATE scCurrPriceListGroup  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  AND (@loIN_CurrPromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  IF @loIN_GotPrice = 0  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  END  GOTO CurrBaseListProduct  END  END  ELSE  BEGIN  SET @poIN_PromFound = 0  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  END ELSE BEGIN  SELECT @loST_CP_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CP_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CP_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO CurrBaseListProduct END  CurrBaseListProduct:  DECLARE scCurrBaseListProduct SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(index = AK2RM00500)  INNER JOIN SOP10110 as SH with(index = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  INNER JOIN IV10401 as SW with(index = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'I'  AND SW.ITEMNMBR = @piST_ItemNumber  INNER JOIN IV10402 as SWU with(index = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  WHERE PH.ISBASE = 1  AND SL.PRODTCOD = 'P'  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrBaseListProduct  FETCH FIRST FROM scCurrBaseListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrBaseListProduct  DEALLOCATE scCurrBaseListProduct  GOTO CurrBaseListGroup END ELSE BEGIN  FETCH NEXT FROM scCurrBaseListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrBaseListProduct  DEALLOCATE scCurrBaseListProduct  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50005  END  END  END END  FETCH FIRST FROM scCurrBaseListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCurrBaseListProduct DEALLOCATE scCurrBaseListProduct  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CP_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CP_Value  END  ELSE IF @loST_CP_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CP_Value / 100),@loIN_DecPlaces)  END  SELECT @loDE_PrevLevelPrice =  @poDE_Price  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  AND (@loIN_CurrPromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_PrevLevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 3)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  IF @loIN_GotPrice = 0  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  END  GOTO CurrBaseListGroup  END  END  ELSE  BEGIN  SET @poIN_PromFound = 0  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  IF @loST_ValueType <> ' '  BEGIN  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50008  END  END END  CurrBaseListGroup:  DECLARE scCurrBaseListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(index = AK2RM00500)  INNER JOIN SOP10110 as SH with(index = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @piST_Currency  INNER JOIN IV10401 as SW with(index = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  INNER JOIN IV10402 as SWU with(index = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  INNER JOIN IV10400 as GW with(index = AK2IV10400)  ON GW.PRCGRPID = SW.ITEMNMBR  AND GW.ITEMNMBR = @piST_ItemNumber  WHERE PH.ISBASE = 1  AND SL.PRODTCOD = 'P' ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCurrBaseListGroup  FETCH FIRST FROM scCurrBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCurrBaseListGroup  DEALLOCATE scCurrBaseListGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50007  END  GOTO FunctCurrencyRoutines END ELSE BEGIN  FETCH NEXT FROM scCurrBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCurrBaseListGroup  DEALLOCATE scCurrBaseListGroup  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50006  END  END  END END  FETCH FIRST FROM scCurrBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCurrBaseListGroup DEALLOCATE scCurrBaseListGroup  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CP_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CP_Value  END  ELSE IF @loST_CP_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CP_Value / 100),@loIN_DecPlaces)  END  SELECT @loDE_PrevLevelPrice =  @poDE_Price  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  AND (@loIN_CurrPromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END  IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_PrevLevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 3)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  IF @loIN_GotPromotion = 0  BEGIN  SET @poDE_PromPrice = 0  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  END  ELSE  BEGIN  SET @poIN_PromFound = 0  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  IF @loST_ValueType <> ' '  BEGIN  IF (@loIN_PricesNotReqd = 1) AND (@loIN_ConvertFunctPrice = 1)  BEGIN  GOTO FunctCurrencyRoutines  END  ELSE  BEGIN  RETURN 50009  END  END END  FunctCurrencyRoutines:  SET @poIN_CurrPriceFound = 0  SET @loIN_GotPrice = 0  IF @piST_Currency <>  @loST_FUNLCURR BEGIN  IF @loIN_PricesNotReqd = 0  BEGIN  RETURN 50031  END END  IF @piST_Currency <>  @loST_FUNLCURR BEGIN  SELECT @loIN_DecPlaces = DECPLCUR - 1  FROM IV00101 where ITEMNMBR = @piST_ItemNumber END  SET @loST_CS_Type = ' ' SET @loST_CP_Type = ' ' SET @loDE_CS_Value = 0 SET @loDE_CP_Value = 0  IF  (@piIN_GetPromotion = 1)  BEGIN   if @poIN_PromFound = 0 OR @poIN_PromType <> 4  BEGIN  SET @poIN_PromFound = 0  SET @loIN_CurrPromFound = 0  EXECUTE ExtPricingGetPromoPrice  @piST_DorP,  @piST_CustomerNumber,  @piST_ItemNumber,  @piST_UofM,  @piDA_Date,  @piDE_Qty,  @loST_FUNLCURR,  @poDE_Price = @loDE_PromPrice OUTPUT,  @poDE_Value = @loDE_PromValueOff OUTPUT,  @poST_SchemeCode = @loST_SchemeCode OUTPUT,  @poST_SchemeItemType = @PriceSheetType OUTPUT,  @poST_SchemeGroup = @PriceGroupID OUTPUT,  @poIN_PromLevel = @loIN_PromLevel OUTPUT,  @poIN_PromType = @PromotionType OUTPUT,  @poDE_QtyFrom = @loDE_QtyFrom OUTPUT,  @poDE_QtyTo = @loDE_QtyTo OUTPUT,  @poIN_PromFound = @loIN_PromFound OUTPUT,  @poIN_CurrPriceFound = @loIN_CurrPromFound OUTPUT,  @QuantityFree = @QtyFree OUTPUT,  @StartDate = @Start  OUTPUT,  @EndDate  = @End  OUTPUT,  @Description = @Desc OUTPUT   SET @poIN_PromFound = @loIN_PromFound  SET @poST_SchemeCode = @loST_SchemeCode  SET @poST_SchemeItemType = @PriceSheetType  SET @poST_SchemeGroup = @PriceGroupID  SET @poIN_PromType = @PromotionType  SET @poDE_QtyFrom = @loDE_QtyFrom  SET @poDE_QtyTo = @loDE_QtyTo  SET @poDE_PromPrice = @loDE_PromPrice  SET @QuantityFree = @QtyFree  SET @StartDate = @Start  SET @EndDate  = @End  SET @Description = @Desc  IF (@loIN_PromFound = 1) AND (@PromotionType = 1)  BEGIN   SET @poDE_PromPrice = @loDE_PromPrice  SET @loIN_GotPromotion = 1  END  END END  IF @piST_CustomerNumber IS NULL BEGIN  GOTO BaseListProduct END  CustomerProduct:  DECLARE scCustomerProduct SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(index = AK2RM00500)  INNER JOIN SOP10110 as SH with(INDEX = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  INNER JOIN IV10401 as SW with(INDEX = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'I'  AND SW.ITEMNMBR = @piST_ItemNumber  INNER JOIN IV10402 as SWU with(INDEX = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  WHERE SL.PRODTCOD = @piST_DorP  AND SL.LINKCODE = @piST_CustomerNumber  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCustomerProduct  FETCH FIRST FROM scCustomerProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCustomerProduct  DEALLOCATE scCustomerProduct  GOTO CustomerGroup END ELSE BEGIN  FETCH NEXT FROM  scCustomerProduct  INTO  @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCustomerProduct  DEALLOCATE scCustomerProduct  RETURN 50001  END  END END  FETCH FIRST FROM scCustomerProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCustomerProduct DEALLOCATE scCustomerProduct  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF  (@loIN_PromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel =1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  GOTO PriceListProduct  END  END  ELSE  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  SELECT @loST_CS_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CS_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CS_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO PriceListProduct END  CustomerGroup:  DECLARE scCustomerGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(INDEX = AK2RM00500)  INNER JOIN SOP10110 as SH with(INDEX = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  INNER JOIN IV10401 as SW with(INDEX = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  INNER JOIN IV10402 as SWU with(INDEX = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN IV10400 as GW with(INDEX = AK2IV10400)  ON GW.PRCGRPID = SW.ITEMNMBR  AND GW.ITEMNMBR = @piST_ItemNumber  WHERE SL.PRODTCOD = @piST_DorP  AND SL.LINKCODE = @piST_CustomerNumber ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scCustomerGroup  FETCH FIRST FROM scCustomerGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scCustomerGroup  DEALLOCATE scCustomerGroup  GOTO PriceListProduct END ELSE BEGIN  FETCH NEXT FROM scCustomerGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scCustomerGroup  DEALLOCATE scCustomerGroup  RETURN 50002  END  END END  FETCH FIRST FROM scCustomerGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scCustomerGroup DEALLOCATE scCustomerGroup  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  IF  (@loIN_PromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  GOTO PriceListProduct  END  END  ELSE  BEGIN   select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  SELECT @loST_CS_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CS_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CS_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO PriceListProduct END  PriceListProduct:  DECLARE scPriceListProduct SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(INDEX = AK2RM00500)  INNER JOIN SOP10110 as SH with(INDEX = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  INNER JOIN IV10401 as SW with(INDEX = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'I'  AND SW.ITEMNMBR = @piST_ItemNumber  INNER JOIN IV10402 as SWU with(INDEX = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN SOP10205 as PL  ON PL.PRCBKID = SL.LINKCODE  AND PL.PRODTCOD = @piST_DorP  AND PL.LINKCODE = @piST_CustomerNumber  WHERE SL.PRODTCOD = 'P'  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scPriceListProduct  FETCH FIRST FROM scPriceListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scPriceListProduct  DEALLOCATE scPriceListProduct  GOTO PriceListGroup END ELSE BEGIN  FETCH NEXT FROM scPriceListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scPriceListProduct  DEALLOCATE scPriceListProduct  RETURN 50003  END  END END  FETCH FIRST FROM scPriceListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scPriceListProduct DEALLOCATE scPriceListProduct  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  IF @loIN_GotPrice = 0  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  END  GOTO BaseListProduct  END  END  ELSE  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  SELECT @loST_CP_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CP_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CP_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO BaseListProduct END  PriceListGroup:  DECLARE scPriceListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(INDEX = AK2RM00500)  INNER JOIN SOP10110 as SH with(INDEX = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  INNER JOIN IV10401 as SW with(INDEX = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  INNER JOIN IV10402 as SWU with(INDEX = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN IV10400 as GW with(INDEX = AK2IV10400)  ON GW.PRCGRPID = SW.ITEMNMBR  AND GW.ITEMNMBR = @piST_ItemNumber  INNER JOIN SOP10205 as PL  ON PL.PRCBKID = SL.LINKCODE  AND PL.PRODTCOD = @piST_DorP  AND PL.LINKCODE = @piST_CustomerNumber  WHERE SL.PRODTCOD = 'P' ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scPriceListGroup  FETCH FIRST FROM scPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scPriceListGroup  DEALLOCATE scPriceListGroup  GOTO BaseListProduct END ELSE BEGIN  FETCH NEXT FROM scPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scPriceListGroup  DEALLOCATE scPriceListGroup  RETURN 50004  END  END END  FETCH FIRST FROM scPriceListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scPriceListGroup DEALLOCATE scPriceListGroup  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  IF @loIN_GotPrice = 0  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  END  GOTO BaseListProduct  END  END  ELSE  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  SELECT @loST_CP_Type = @loST_ValueType  IF @loST_ValueType = 'P'  BEGIN  SELECT @loDE_CP_Value = @loDE_Value  END  ELSE  BEGIN  SELECT @loDE_CP_Value = @loDE_Value * @loDE_EQUOMQTY  END  GOTO BaseListProduct END  BaseListProduct:  DECLARE scBaseListProduct SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(INDEX = AK2RM00500)  INNER JOIN SOP10110 as SH with(INDEX = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  INNER JOIN IV10401 as SW with(INDEX = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'I'  AND SW.ITEMNMBR = @piST_ItemNumber  INNER JOIN IV10402 as SWU with(INDEX = PKIV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN SOP10109 as PH  ON PH.PRCBKID = SL.LINKCODE  WHERE PH.ISBASE = 1  AND SL.PRODTCOD = 'P' ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scBaseListProduct  FETCH FIRST FROM scBaseListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scBaseListProduct  DEALLOCATE scBaseListProduct  GOTO BaseListGroup END ELSE BEGIN  FETCH NEXT FROM scBaseListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scBaseListProduct  DEALLOCATE scBaseListProduct  RETURN 50005  END  END END  FETCH FIRST FROM scBaseListProduct  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scBaseListProduct DEALLOCATE scBaseListProduct  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CP_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CP_Value  END  ELSE IF @loST_CP_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CP_Value / 100),@loIN_DecPlaces)  END  SELECT @loDE_PrevLevelPrice =  @poDE_Price  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_PrevLevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 3)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN  IF @loIN_GotPrice = 0  BEGIN  SET @loIN_GotPrice = 1  SET @loDE_StoredPrice = @poDE_Price  END  GOTO BaseListGroup  END  END  ELSE  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  IF @loST_ValueType <> ' '  BEGIN  RETURN 50008  END END  BaseListGroup:  DECLARE scBaseListGroup SCROLL CURSOR FOR  SELECT SWU.PSITMVAL, SWU.EQUOMQTY, SW.PRODTCOD, SH.STRTDATE, SH.ENDDATE, SW.BASEUOFM,SWU.QTYFROM,SWU.QTYTO,SH.PRCSHID FROM RM00500 as SL with(INDEX = AK2RM00500)  INNER JOIN SOP10110 as SH with(INDEX = PKSOP10110)  ON SH.PRCSHID = SL.PRCSHID  AND SH.ACTIVE = 1  AND SH.STRTDATE <= @piDA_Date  AND SH.ENDDATE >= @piDA_Date  AND SH.PROMO = 0  AND SH.CURNCYID = @loST_FUNLCURR  INNER JOIN IV10401 as SW with(INDEX = AK2IV10401)  ON SW.PRCSHID = SL.PRCSHID  AND SW.ACTIVE = 1  AND SW.EPITMTYP = 'G'  INNER JOIN IV10402 as SWU with(INDEX = AK2IV10402)  ON SWU.PRCSHID = SL.PRCSHID  AND SWU.EPITMTYP = SW.EPITMTYP  AND SWU.ITEMNMBR = SW.ITEMNMBR  AND SWU.UOFM = @piST_UofM  AND @piDE_Qty BETWEEN SWU.QTYFROM AND SWU.QTYTO  INNER JOIN SOP10109 as PH   ON PH.PRCBKID = SL.LINKCODE  INNER JOIN IV10400 as GW with(INDEX = AK2IV10400)  ON GW.PRCGRPID = SW.ITEMNMBR  AND GW.ITEMNMBR = @piST_ItemNumber  WHERE PH.ISBASE = 1  AND SL.PRODTCOD = 'P'  ORDER BY SH.STRTDATE DESC,  SH.ENDDATE  OPEN scBaseListGroup  FETCH FIRST FROM scBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS <> 0 BEGIN  CLOSE scBaseListGroup  DEALLOCATE scBaseListGroup  RETURN 50007 END ELSE BEGIN  FETCH NEXT FROM scBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDA_NextStartDate,  @loDA_NextEndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  IF @@FETCH_STATUS = 0  BEGIN  IF @loDT_StartDate = @loDA_NextStartDate and @loDT_EndDate = @loDA_NextEndDate  BEGIN  CLOSE scBaseListGroup  DEALLOCATE scBaseListGroup  RETURN 50006  END  END END  FETCH FIRST FROM scBaseListGroup  INTO @loDE_Value,  @loDE_EQUOMQTY,  @loST_ValueType,  @loDT_StartDate,  @loDT_EndDate,  @loST_BaseUofM,  @loDE_From,  @loDE_To,  @loPriceSheetID  CLOSE scBaseListGroup DEALLOCATE scBaseListGroup  IF @loDE_From > @QuantityFrom or (@QuantityFrom is null) or (@QuantityFrom=0.0) BEGIN  SELECT @QuantityFrom = @loDE_From END   IF @loDE_To < @QuantityTo or (@QuantityTo is null) or (@QuantityTo=0.0) BEGIN  SELECT @QuantityTo = @loDE_To END  IF @loST_ValueType = 'N' BEGIN  SELECT @poDE_Price = @loDE_Value * @loDE_EQUOMQTY  SELECT @loDE_LevelPrice = @loDE_Value * @loDE_EQUOMQTY  IF @loST_CP_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CP_Value  END  ELSE IF @loST_CP_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CP_Value / 100),@loIN_DecPlaces)  END  SELECT @loDE_PrevLevelPrice =  @poDE_Price  IF @loST_CS_Type = 'V'  BEGIN  SELECT @poDE_Price = @poDE_Price - @loDE_CS_Value  END  ELSE IF @loST_CS_Type = 'P'   BEGIN  SELECT @poDE_Price = ROUND(@poDE_Price * (@loDE_CS_Value / 100),@loIN_DecPlaces)  END  IF  (@loIN_PromFound = 1)  BEGIN  IF (@PromotionType = 1) OR (@loIN_GotPromotion = 1)  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  IF  (@loIN_PromLevel = 1)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @poDE_Price  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@poDE_Price * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @poDE_Price - @loDE_PromValueOff  END  IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 2)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_PrevLevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_PrevLevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE IF  (@loIN_PromLevel = 3)  BEGIN  IF @PromotionType = 4  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice  END  IF @PromotionType = 2  BEGIN  SELECT @poDE_PromPrice = ROUND(@loDE_LevelPrice * (@loDE_PromValueOff / 100),@loIN_DecPlaces)  END  IF @PromotionType = 3  BEGIN  SELECT @poDE_PromPrice = @loDE_LevelPrice - @loDE_PromValueOff  END     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  ELSE  BEGIN     IF @loIN_GotPrice = 1  BEGIN  SELECT @poDE_Price = @loDE_StoredPrice  END  IF @loIN_GotPromotion = 0  BEGIN  SET @poDE_PromPrice = 0  END  select @PriceSheetID = @loPriceSheetID  RETURN 0  END  END  ELSE  BEGIN  select @PriceSheetID = @loPriceSheetID  RETURN 0  END END ELSE BEGIN  IF @loST_ValueType <> ' '  BEGIN  RETURN 50009  END END    
GO
GRANT EXECUTE ON  [dbo].[sopExtPricingGetPrice] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpVerifyQuickTransaction]  @I_iJournalEntry                int             = NULL,  @I_cJournalID                   char(15)        = NULL,  @I_iOffsetAccountIndex          int             = NULL,  @I_tPosting                     tinyint         = NULL,  @I_tPostingToHistory            tinyint         = NULL,  @I_bHeaderValid                 binary(4)       = NULL,  @I_bBatchValid                  binary(4)       = NULL,  @I_iCompanyID smallint = NULL,  @IO_sOffsetAccountType   smallint        = NULL  output,  @IO_sFixedOrVariable            smallint        = NULL  output,  @IO_sBalanceForCalculation      smallint        = NULL  output,  @IO_sPostingType                smallint        = NULL  output,  @IO_bHeaderMessages             binary(4)       = NULL  output,  @O_tPrintDistributions          tinyint         = NULL  output,  @O_iErrorState                  int             = NULL  output as  declare  @TRUE                           tinyint,  @FALSE                          tinyint,  @POST_ACCT                      smallint,  @UNIT_ACCT                      smallint,  @POST_ALLOC_ACCT                smallint,  @UNIT_ALLOC_ACCT                smallint,  @VARIABLE                       smallint,  @MS_ITEM_1                      int,  @MS_ITEM_3                      int,  @MS_ITEM_4                      int,  @MS_ITEM_5                      int,  @MS_ITEM_10                     int,  @MS_ITEM_13                     int,  @MS_ITEM_19                     int,  @tValidAccountNumber            tinyint,  @tActive                        tinyint,  @tTransaction                   tinyint,  @iError                         int,  @iStatus                        int,  @tLoop                          tinyint,  @sUnitDecimalPlaces             smallint,  @tALSRegistered tinyint,  @iRelationID int,  @sUserLevel smallint,  @iAccessAllAccounts int,  @sAccountCategory smallint,  @cCompanyID char(5)  select   @O_tPrintDistributions          = 0,  @O_iErrorState                  = 0,  @iStatus                        = 0,  @iRelationID   = 0,  @sUserLevel    = 0,  @iAccessAllAccounts  = 0,  @tALSRegistered   = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iJournalEntry                is NULL or  @I_cJournalID                   is NULL or  @I_iOffsetAccountIndex          is NULL or  @I_tPosting                     is NULL or  @I_tPostingToHistory            is NULL or  @I_bHeaderValid                 is NULL or  @I_bBatchValid                  is NULL or  @I_iCompanyID is NULL or  @IO_sOffsetAccountType   is NULL or  @IO_sFixedOrVariable            is NULL or  @IO_sBalanceForCalculation      is NULL or  @IO_sPostingType                is NULL or  @IO_sOffsetAccountType   is NULL or  @IO_bHeaderMessages             is NULL  begin  select @O_iErrorState = 20044   break  end    select  @TRUE                   = 1,  @FALSE                  = 0,  @POST_ACCT              = 1,  @UNIT_ACCT              = 2,  @POST_ALLOC_ACCT        = 3,  @UNIT_ALLOC_ACCT        = 4,  @VARIABLE               = 2,  @MS_ITEM_1              = power(2,24),  @MS_ITEM_3              = power(2,26),  @MS_ITEM_4              = power(2,27),  @MS_ITEM_5              = power(2,28),  @MS_ITEM_10             = power(2,17),  @MS_ITEM_13             = power(2,20),  @MS_ITEM_19             = power(2,10)   select  @O_tPrintDistributions = BRKDNALL  from  GL40100  where  BSNSFMID = @I_cJournalID   if @@rowcount <> 1  begin   select   @O_tPrintDistributions = @FALSE,  @IO_bHeaderMessages = (@IO_bHeaderMessages | @MS_ITEM_19)   insert   GL40100 (  BSNSFMID)   values (  @I_cJournalID )   if @@rowcount <> 1  begin  select @O_iErrorState = 20214  break  end   if @I_tPosting = @TRUE  select @O_iErrorState = 20045  break  end    select @cCompanyID = db_name()   exec @iStatus = DYNAMICS..smGetAccountLevelSecurityInfo  @cCompanyID,  @iRelationID output,  @sUserLevel  output,  @iAccessAllAccounts output,  @tALSRegistered output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   if (@I_bHeaderValid & @MS_ITEM_1) <> @MS_ITEM_1 or   (@I_bBatchValid & @MS_ITEM_1) = @MS_ITEM_1 or  (@I_bBatchValid & @MS_ITEM_3) = @MS_ITEM_3 or  @iAccessAllAccounts = @FALSE   begin  exec @iStatus = glpGetAccountNumber  @I_iOffsetAccountIndex,  @iRelationID,  @sUserLevel,  @iAccessAllAccounts,  @tValidAccountNumber            output,  @tActive                        output,  @IO_sOffsetAccountType          output,  @sAccountCategory output,  @IO_sFixedOrVariable            output,  @IO_sBalanceForCalculation      output,  @IO_sPostingType                output,  @sUnitDecimalPlaces             output,  @O_iErrorState                  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end  else  begin   select  @tValidAccountNumber = @TRUE,  @tActive = @TRUE  end    exec @iStatus = glpVerifyAccountNumber  @tValidAccountNumber,   @tActive,   @IO_sFixedOrVariable,   @IO_sBalanceForCalculation,  @IO_sPostingType,  @TRUE,                                            @I_tPostingToHistory,  @FALSE,                                           @IO_sOffsetAccountType          output,  @IO_bHeaderMessages             output,  @O_iErrorState                  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   if @IO_bHeaderMessages <> 0 and @I_tPosting = @TRUE  select @O_iErrorState = 20171 end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[glpVerifyQuickTransaction] TO [DYNGRP]
GO

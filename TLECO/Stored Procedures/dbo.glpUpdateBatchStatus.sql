SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpUpdateBatchStatus]  @I_iSQLSessionID         int  = NULL,  @I_cBatchNumber          char(15) = NULL,  @I_cBatchSource          char(15) = NULL,  @I_sBatchStatus          smallint = NULL,  @I_cTransactionSource    char(25) = NULL,  @I_tMarkedToPost         tinyint  = NULL,  @I_cUserID               char(15) = NULL,  @I_cCompanyName          char(64) = NULL,  @I_sWindowType           smallint = NULL,  @I_tAddBatchActivity     tinyint = NULL,  @I_sActivityTrackingType smallint = NULL,  @I_bBatchMessages1 binary(4) = NULL,  @I_bBatchMessages2 binary(4) = NULL,  @I_tActivityTracking tinyint = NULL,  @I_tDeleteBatch tinyint = NULL,  @I_tPosting tinyint = NULL,  @I_iBatchError int  = NULL,  @O_iErrorState int  = NULL output as  declare  @TRUE          tinyint,  @FALSE                          tinyint,  @FINANCIAL                      smallint,  @tBatchMessages                 tinyint,  @tBatchMessages2                tinyint,  @tTransaction                   tinyint,  @tLoop                          tinyint,  @iError                         int,  @iStatus                        int  select  @O_iErrorState = 0,  @iStatus                = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID                is NULL or  @I_cBatchNumber          is NULL or  @I_cBatchSource          is NULL or  @I_sBatchStatus          is NULL or  @I_cTransactionSource    is NULL or  @I_tMarkedToPost                is NULL or  @I_cUserID                      is NULL or  @I_cCompanyName          is NULL or  @I_sWindowType                  is NULL or  @I_tAddBatchActivity     is NULL or  @I_sActivityTrackingType        is NULL or  @I_bBatchMessages1 is NULL or  @I_bBatchMessages2 is NULL or  @I_tActivityTracking is NULL or  @I_tDeleteBatch          is NULL or  @I_tPosting is NULL or  @I_iBatchError                  is NULL  begin  select @O_iErrorState = 20284  break  end    select  @TRUE = 1,  @FALSE = 0,  @FINANCIAL = 2   if @I_tPosting = @TRUE  begin   update SY00500  set  BCHSTTUS = @I_sBatchStatus,  USERID  = @I_cUserID,  DELBACH  = @I_tDeleteBatch,  MKDTOPST = @I_tMarkedToPost,  BCHEMSG1 = @I_bBatchMessages1,  BCHEMSG2 = @I_bBatchMessages2,  ERRSTATE = @I_iBatchError  where  BCHSOURC = @I_cBatchSource   and BACHNUMB = @I_cBatchNumber   if @@rowcount <> 1  begin  select @O_iErrorState = 20285  break  end   end  else  begin  update SY00500  set  BCHSTTUS        = @I_sBatchStatus,  BCHEMSG1        = @I_bBatchMessages1,  BCHEMSG2        = @I_bBatchMessages2  where  BCHSOURC        = @I_cBatchSource   and BACHNUMB        = @I_cBatchNumber   if @@rowcount <> 1  begin  select @O_iErrorState = 20812  break  end   end    if @I_tActivityTracking = @FALSE  break   if @I_tAddBatchActivity = @FALSE  begin  delete from  DYNAMICS.dbo.SY00800  where  BCHSOURC        = @I_cBatchSource   and     BACHNUMB        = @I_cBatchNumber  and     CMPNYNAM        = @I_cCompanyName  and     USERID  = @I_cUserID   if @@rowcount <> 1  begin  select @O_iErrorState = 20545  break  end    end   else if @I_tAddBatchActivity = @TRUE  begin  update DYNAMICS.dbo.SY00800  set     WINTYPE = @I_sWindowType,  POSTING = @TRUE  where  BCHSOURC        = @I_cBatchSource   and     BACHNUMB        = @I_cBatchNumber  and     CMPNYNAM        = @I_cCompanyName  and     USERID  = @I_cUserID   if @@rowcount <> 1  begin  insert   into   DYNAMICS.dbo.SY00800 (   WINTYPE,  USERID,  CMPNYNAM,  BCHSOURC,  BACHNUMB,  POSTING )  values(   @I_sWindowType,  @I_cUserID,  @I_cCompanyName,  @I_cBatchSource,  @I_cBatchNumber,  @TRUE )                    if @@rowcount <> 1  begin  select @O_iErrorState = 20811  break  end    end    end    exec @iStatus = smAddPostingSecurityRecord  @FINANCIAL,  @I_cTransactionSource,  @I_cBatchNumber,  @I_cUserID,  @I_cCompanyName,  @FALSE,  @I_sActivityTrackingType,   @I_iSQLSessionID,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  end   if (@O_iErrorState <> 0) or (@iStatus <> 0) begin  if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[glpUpdateBatchStatus] TO [DYNGRP]
GO

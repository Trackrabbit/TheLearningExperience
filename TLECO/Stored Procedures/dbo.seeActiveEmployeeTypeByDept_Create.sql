SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[seeActiveEmployeeTypeByDept_Create] @iLanguageID int   as   set nocount on   declare @sqldropstring varchar(400),   @sqlstring1 varchar(8000),   @sqlstring2 varchar(8000),   @sqlstring3 varchar(8000),   @sqlstring4 varchar(8000),   @sqlstring5 varchar(8000),   @sqlstring6 varchar(8000),   @sqlstring7 varchar(8000),   @sqlstring8 varchar(8000),   @sqlstring9 varchar(8000),   @sqlstring10 varchar(8000),   @sqljoinstring varchar(8000),   @sqlaccessstring varchar(2000),   @tNumberSegments int,   @tSegment int,   @I_iDictID int,   @I_iLangID int,   @I_iMessageNumber int,   @I_iAliasMessageNumber int,   @I_iIntegerValue int,   @Inactive varchar(255),  @Start_Date varchar(255),  @Date_Employee_Inactivated varchar(255),  @Department varchar(255),  @Employee_ID varchar(255),  @Type_of_Employment varchar(255)  select @I_iDictID = 1493 select @I_iMessageNumber = 22402 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Inactive output   select @I_iDictID = 1493 select @I_iMessageNumber = 22425 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Start_Date output  select @I_iDictID = 1493 select @I_iMessageNumber = 22426 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Date_Employee_Inactivated output  select @I_iDictID = 1493 select @I_iMessageNumber = 22420 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Department output   select @I_iDictID = 1493 select @I_iMessageNumber = 22400 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Employee_ID output   select @I_iDictID = 1493 select @I_iMessageNumber = 24344 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Type_of_Employment output    select @sqldropstring =   'IF EXISTS (SELECT * FROM   sys.objects WHERE  object_id = OBJECT_ID(N''[dbo].[seeActiveEmployeeTypeByDept]'') AND type in ( N''P'', N''PC'' ))  ' +   '  DROP PROCEDURE [dbo].[seeActiveEmployeeTypeByDept]  '   select @sqlstring1 =   'create procedure dbo.seeActiveEmployeeTypeByDept '+   '  @UserDate datetime  = NULL, '+   '  @MaxDepartments int   = 10 '+   'as '+   'if @MaxDepartments > 0  '+   ' select COUNT(['+@Employee_ID+']) as ActiveEmployees, a.['+@Department+'], ['+@Type_of_Employment+'] '+   '  from Employees a, '+   '  (select top (select @MaxDepartments) COUNT(['+@Employee_ID+']) as ActiveEmployees, '+@Department+' '+   '    from Employees '+   '    where (['+@Inactive+'] = ''No'' and ['+@Start_Date+'] <= dbo.GetDateStripTime(@UserDate) ) or '+   '       (['+@Start_Date+'] <= dbo.GetDateStripTime(@UserDate)  and '+@Inactive+' = ''Yes'' and  '+   '        ['+@Date_Employee_Inactivated+'] > dbo.GetDateStripTime(@UserDate) )  '+   '    group by '+@Department+' '+   '    order by ActiveEmployees desc, '+@Department+') b '+   '  where ((['+@Inactive+'] = ''No'' and ['+@Start_Date+'] <= dbo.GetDateStripTime(@UserDate) ) or '+   '   (['+@Start_Date+'] <= dbo.GetDateStripTime(@UserDate)  and '+@Inactive+' = ''Yes'' and  '+   '    ['+@Date_Employee_Inactivated+'] > dbo.GetDateStripTime(@UserDate) )) and '+   '    a.'+@Department+' = b.'+@Department+' '+   '  group by a.['+@Department+'],['+@Type_of_Employment+'], b.ActiveEmployees   '+   '  order by ActiveEmployees desc '+   'else if @MaxDepartments = 0 '+   ' select COUNT(['+@Employee_ID+']) as ActiveEmployees, ['+@Department+'], ['+@Type_of_Employment+'] '+   '  from Employees  '+   '  where (['+@Inactive+'] = ''No'' and ['+@Start_Date+'] <= dbo.GetDateStripTime(@UserDate) ) or '+   '  (['+@Start_Date+'] <= dbo.GetDateStripTime(@UserDate)  and '+@Inactive+' = ''Yes'' and ['+@Date_Employee_Inactivated+'] > dbo.GetDateStripTime(@UserDate) ) '+   '  group by ['+@Type_of_Employment+'], ['+@Department+']  '+   '  order by ActiveEmployees desc '   select @sqlaccessstring =   'GRANT execute ON [dbo].[seeActiveEmployeeTypeByDept] TO [rpt_executive], [rpt_payroll], [rpt_human resource administrator] '  exec (@sqldropstring)   exec (@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10)   exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[seeActiveEmployeeTypeByDept_Create] TO [DYNGRP]
GO

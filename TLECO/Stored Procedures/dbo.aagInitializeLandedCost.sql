SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagInitializeLandedCost]  @POPRCTNM CHAR(17),  @SERIES SMALLINT,  @CompanyID SMALLINT,  @SqlSessionID INT,  @l_ErrorCode SMALLINT = NULL OUTPUT AS  BEGIN   DECLARE   @RCPTLNNM INT,   @LCHDRNUMBER INT,   @LCLINENUMBER INT,  @aaSubLedgerHdrID INT,  @aaSubLedgerDistID INT,  @aaSubLedgerAssignID INT,  @DistNo INT,  @SEQNUMBR INT,  @ACTINDX INT,  @ACPURIDX INT,   @PURPVIDX INT,  @ClassID INT,  @IsNoDistExists INT,  @Landed_Cost_Type INT,  @CURNCYID CHAR(15),  @RATETPID CHAR(15),   @EXGTBLID CHAR(15),   @DECPLCUR SMALLINT,  @ACCTTYPE SMALLINT,  @aaBrowseType SMALLINT,  @CURRNIDX SMALLINT,  @NOTEINDX NUMERIC(19,5),  @DEBITAMT NUMERIC(19,7),  @ORGDBTAMT NUMERIC(19,7),   @CRDTAMT NUMERIC(19,7),  @ORGCRDTAMT NUMERIC(19,7),  @TOTDISTAMT NUMERIC(19,7),  @TOTORGDISTAMT NUMERIC(19,7),  @Total_Landed_Cost_Amount NUMERIC(19,7),  @Orig_TotalLandedCostAmt NUMERIC(19,7),  @LandedCostDocType TINYINT,  @oRequiredFieldEmpty TINYINT,  @XCHGRATE NUMERIC(19,7),   @EXCHDATE DATETIME,   @TIME1 DATETIME,   @RATECALC SMALLINT,   @DENXRATE NUMERIC(19,7),   @MCTRXSTT SMALLINT,  @AssignPercent INT,  @DISTTYPE SMALLINT,  @oStatus SMALLINT,  @Flag SMALLINT,  @Flag1 SMALLINT,   @DEX_ROW_ID INT   SELECT @LandedCostDocType = 20, @IsNoDistExists = 0, @aaSubLedgerHdrID = 0, @aaSubLedgerDistID = 0, @AssignPercent = 0, @TOTDISTAMT = 0, @TOTORGDISTAMT = 0, @Flag = 0, @Flag1= 0  SELECT @aaSubLedgerHdrID = ISNULL(aaSubLedgerHdrID,0) FROM AAG20000 WHERE DOCNUMBR = @POPRCTNM AND SERIES = @SERIES AND DOCTYPE = @LandedCostDocType  IF @aaSubLedgerHdrID = 0   BEGIN  EXEC DYNAMICS.dbo.aagGetNextID 20000, @CompanyID, @aaSubLedgerHdrID OUTPUT  INSERT INTO AAG20000 (aaSubLedgerHdrID, SERIES, DOCTYPE, DOCNUMBR, Master_ID, aaHdrErrors)   VALUES (@aaSubLedgerHdrID, @SERIES, @LandedCostDocType, @POPRCTNM, '', 0)  SELECT @aaSubLedgerDistID = 1, @IsNoDistExists = 1  END   DELETE FROM AAG20003 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID NOT IN (SELECT aaSubLedgerDistID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND BINNMBR = (SELECT DISTINCT LCLINENUMBER FROM POP10700 WHERE POPRCTNM = @POPRCTNM AND RCPTLNNM <> 0 AND LCLINENUMBER = BINNMBR AND RCPTLNNM = TRNSTLOC))  DELETE FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID NOT IN (SELECT aaSubLedgerDistID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND BINNMBR = (SELECT DISTINCT LCLINENUMBER FROM POP10700 WHERE POPRCTNM = @POPRCTNM AND RCPTLNNM <> 0 AND LCLINENUMBER = BINNMBR AND RCPTLNNM = TRNSTLOC))  DELETE FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID NOT IN (SELECT aaSubLedgerDistID FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND BINNMBR = (SELECT DISTINCT LCLINENUMBER FROM POP10700 WHERE POPRCTNM = @POPRCTNM AND RCPTLNNM <> 0 AND LCLINENUMBER = BINNMBR AND RCPTLNNM = TRNSTLOC))  DECLARE Cursor1 CURSOR LOCAL FAST_FORWARD FOR  SELECT DISTINCT RCPTLNNM, LCLINENUMBER, LCHDRNUMBER, Landed_Cost_Type, ACPURIDX, PURPVIDX, DECPLCUR, CURNCYID, CURRNIDX,  RATETPID, EXGTBLID, XCHGRATE, EXCHDATE,   TIME1, RATECALC, DENXRATE, MCTRXSTT, DEX_ROW_ID FROM POP10700 WHERE POPRCTNM = @POPRCTNM AND   ((Landed_Cost_Type = 2 AND RCPTLNNM <> 0 AND LCHDRNUMBER <> 0) OR (Landed_Cost_Type = 1))  ORDER BY DEX_ROW_ID ASC   OPEN Cursor1  FETCH NEXT FROM Cursor1 INTO @RCPTLNNM, @LCLINENUMBER,@LCHDRNUMBER, @Landed_Cost_Type, @ACPURIDX, @PURPVIDX, @DECPLCUR, @CURNCYID, @CURRNIDX,  @RATETPID, @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1, @RATECALC, @DENXRATE, @MCTRXSTT, @DEX_ROW_ID  WHILE @@FETCH_STATUS = 0  BEGIN  SELECT @aaSubLedgerDistID = 0  SELECT TOP 1 @aaSubLedgerDistID = ISNULL(aaSubLedgerDistID,0), @SEQNUMBR = ISNULL(SEQNUMBR,0) FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND BINNMBR = @LCLINENUMBER AND TRNSTLOC = @RCPTLNNM  IF @aaSubLedgerDistID = 0  SELECT @aaSubLedgerDistID = ISNULL(MAX(aaSubLedgerDistID),0) + 1, @SEQNUMBR = ISNULL(MAX(SEQNUMBR),0) + 16384 FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID   SELECT @ACTINDX = @ACPURIDX, @DISTTYPE = 209  SELECT @CRDTAMT = ISNULL(SUM(Total_Landed_Cost_Amount),0), @ORGCRDTAMT = ISNULL(SUM(Orig_TotalLandedCostAmt),0), @DEBITAMT = 0, @ORGDBTAMT = 0   FROM POP10700 WHERE POPRCTNM = @POPRCTNM AND LCLINENUMBER = @LCLINENUMBER AND LCHDRNUMBER = @LCHDRNUMBER AND RCPTLNNM = @RCPTLNNM AND Landed_Cost_Type = @Landed_Cost_Type  IF @CRDTAMT + @ORGCRDTAMT = 0   BEGIN  DELETE FROM AAG20003 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID  DELETE FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   DELETE FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID  END  ELSE  BEGIN  SELECT TOP 1 @ACCTTYPE = ACCTTYPE FROM GL00100 WHERE @ACTINDX = @ACTINDX  EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID OUTPUT,   @aaBrowseType OUTPUT   IF @ACTINDX = 0 SET @aaBrowseType = 0  EXEC DYNAMICS.dbo.smGetNextNoteIndex @CompanyID, @SqlSessionID, @NOTEINDX OUTPUT   IF NOT EXISTS(SELECT TOP 1 1 FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID AND BINNMBR = @LCLINENUMBER AND TRNSTLOC = @RCPTLNNM)  BEGIN  INSERT INTO AAG20001 (  [aaSubLedgerHdrID], [aaSubLedgerDistID], [INTERID], [CorrespondingUnit], [ACTINDX], [DISTTYPE], [SEQNUMBR], [BINNMBR], [TRNSTLOC],  [ACCTTYPE], [aaBrowseType], [DECPLACS], [DEBITAMT], [ORDBTAMT], [CRDTAMNT], [ORCRDAMT], [CURNCYID], [CURRNIDX],   [RATETPID], [EXGTBLID], [XCHGRATE], [EXCHDATE], [TIME1], [RTCLCMTD], [DENXRATE], [MCTRXSTT],  [GLPOSTDT], [aaCopyStatus], [aaWinWasOpen], [aaChangeDate],[aaChangeTime])  SELECT TOP 1  @aaSubLedgerHdrID, @aaSubLedgerDistID, DB_NAME(), '', @ACTINDX, @DISTTYPE, @SEQNUMBR, @LCLINENUMBER, @RCPTLNNM,  ISNULL(@ACCTTYPE,0), @aaBrowseType, DECPLCUR, @DEBITAMT, @ORGDBTAMT, @CRDTAMT, @ORGCRDTAMT, CURNCYID, CURRNIDX,  RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, RATECALC, DENXRATE, MCTRXSTT,  CONVERT(CHAR(12), GETDATE(), 102), 8, 0, CONVERT(CHAR(12), GETDATE(), 102), CONVERT(CHAR(12), GETDATE(), 108) FROM POP10700   WHERE POPRCTNM = @POPRCTNM AND LCLINENUMBER = @LCLINENUMBER AND LCHDRNUMBER = @LCHDRNUMBER AND RCPTLNNM = @RCPTLNNM AND Landed_Cost_Type = @Landed_Cost_Type  END  ELSE  BEGIN  IF NOT EXISTS(SELECT TOP 1 1 FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID AND BINNMBR = @LCLINENUMBER AND TRNSTLOC = @RCPTLNNM AND  ACTINDX = @ACTINDX AND SEQNUMBR = @SEQNUMBR AND ACCTTYPE = @ACCTTYPE AND  DECPLACS = @DECPLCUR AND DEBITAMT = @DEBITAMT AND ORDBTAMT = @ORGDBTAMT AND CRDTAMNT = @CRDTAMT AND   ORCRDAMT = @ORGCRDTAMT AND CURNCYID = @CURNCYID AND CURRNIDX = @CURRNIDX AND  RATETPID = @RATETPID AND EXGTBLID = @EXGTBLID AND XCHGRATE = @XCHGRATE AND EXCHDATE = @EXCHDATE AND   TIME1 = @TIME1 AND RTCLCMTD = @RATECALC AND DENXRATE = @DENXRATE AND MCTRXSTT = @MCTRXSTT)  BEGIN  UPDATE AAG20001 SET ACTINDX = @ACTINDX, SEQNUMBR = @SEQNUMBR, BINNMBR = @LCLINENUMBER, TRNSTLOC = @RCPTLNNM, ACCTTYPE = @ACCTTYPE, aaBrowseType = @aaBrowseType,  DECPLACS = @DECPLCUR, DEBITAMT = @DEBITAMT, ORDBTAMT = @ORGDBTAMT, CRDTAMNT = @CRDTAMT,   ORCRDAMT = @ORGCRDTAMT, CURNCYID = @CURNCYID, CURRNIDX = @CURRNIDX,  RATETPID = @RATETPID, EXGTBLID = @EXGTBLID, XCHGRATE = @XCHGRATE, EXCHDATE = @EXCHDATE,   TIME1 = @TIME1, RTCLCMTD = @RATECALC, DENXRATE = @DENXRATE, MCTRXSTT = @MCTRXSTT   WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID AND BINNMBR = @LCLINENUMBER AND TRNSTLOC = @RCPTLNNM  SELECT @Flag = 1  END  END   SELECT @aaSubLedgerAssignID = 1, @TOTDISTAMT = @DEBITAMT + @CRDTAMT, @TOTORGDISTAMT = @ORGDBTAMT + @ORGCRDTAMT  SELECT @CRDTAMT = 0, @ORGCRDTAMT = 0, @DEBITAMT = 0, @ORGDBTAMT = 0   SET @Flag = 0  DECLARE Cursor2 CURSOR LOCAL FAST_FORWARD FOR  SELECT RCPTLNNM, Total_Landed_Cost_Amount, Orig_TotalLandedCostAmt FROM POP10700   WHERE POPRCTNM = @POPRCTNM AND LCLINENUMBER = @LCLINENUMBER AND LCHDRNUMBER = @LCHDRNUMBER AND RCPTLNNM = @RCPTLNNM   OPEN Cursor2  FETCH NEXT FROM Cursor2 INTO @RCPTLNNM, @Total_Landed_Cost_Amount, @Orig_TotalLandedCostAmt  WHILE @@FETCH_STATUS = 0  BEGIN  SELECT @CRDTAMT = @Total_Landed_Cost_Amount, @ORGCRDTAMT = @Orig_TotalLandedCostAmt, @DEBITAMT = 0, @ORGDBTAMT = 0   IF NOT EXISTS(SELECT 1 FROM AAG20002 INNER JOIN AAG20001 ON AAG20002.aaSubLedgerHdrID = AAG20001.aaSubLedgerHdrID AND   AAG20002.aaSubLedgerDistID = AAG20001.aaSubLedgerDistID AND POSTED = 0  WHERE AAG20002.aaSubLedgerHdrID = @aaSubLedgerHdrID AND AAG20002.aaSubLedgerDistID = @aaSubLedgerDistID   GROUP BY AAG20002.aaSubLedgerHdrID, AAG20002.aaSubLedgerDistID  HAVING SUM(AAG20002.DEBITAMT) = @DEBITAMT AND SUM(AAG20002.ORDBTAMT) = @ORGDBTAMT   AND SUM(AAG20002.CRDTAMNT) = @CRDTAMT AND SUM(AAG20002.ORCRDAMT) = @ORGCRDTAMT)  AND  NOT EXISTS(SELECT TOP 1 1 FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID AND   aaSubLedgerAssignID = @aaSubLedgerAssignID AND DEBITAMT = @DEBITAMT AND ORDBTAMT = @ORGDBTAMT   AND CRDTAMNT = @CRDTAMT AND ORCRDAMT = @ORGCRDTAMT)  BEGIN  DELETE FROM AAG20003 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   DELETE FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   IF @CRDTAMT + @ORGCRDTAMT <> 0  BEGIN  INSERT INTO AAG20002 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [DEBITAMT], [ORDBTAMT], [CRDTAMNT],  [ORCRDAMT], [aaAssignedPercent],[NOTEINDX])  VALUES( @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @DEBITAMT, @ORGDBTAMT, @CRDTAMT, @ORGCRDTAMT, (@TOTDISTAMT*10000) / (@DEBITAMT + @CRDTAMT), @NOTEINDX)   IF @aaBrowseType <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG20003  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID   AND aaSubLedgerAssignID = @aaSubLedgerAssignID)  BEGIN   EXEC aagSubWorkCodeUpdate   @aaSubLedgerHdrID,   @aaSubLedgerDistID,   @aaSubLedgerAssignID,   @ClassID,   @oRequiredFieldEmpty OUTPUT  END  SET @Flag1 = 1  END  END  SELECT @aaSubLedgerAssignID = @aaSubLedgerAssignID +1, @Flag = 1  FETCH NEXT FROM Cursor2 INTO @RCPTLNNM, @Total_Landed_Cost_Amount, @Orig_TotalLandedCostAmt  END  CLOSE Cursor2  DEALLOCATE Cursor2  IF @Flag = 1  BEGIN  DELETE FROM AAG20003 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID AND aaSubLedgerAssignID > @aaSubLedgerAssignID  DELETE FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID AND aaSubLedgerAssignID > @aaSubLedgerAssignID   END  IF @Flag1 = 1  UPDATE AAG20002 SET aaAssignedPercent = CASE (ORCRDAMT+ORDBTAMT)   WHEN 0 THEN ROUND(((CRDTAMNT+DEBITAMT)* 10000)/(@TOTDISTAMT),2)  ELSE ROUND(((ORCRDAMT+ORDBTAMT)* 10000)/(@TOTORGDISTAMT),2)   END  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   SET @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID)  IF @AssignPercent <> 0 AND @AssignPercent > 9900 and @AssignPercent <> 10000  UPDATE AAG20002 SET aaAssignedPercent = aaAssignedPercent + (10000 - @AssignPercent)  FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND   aaSubLedgerDistID = @aaSubLedgerDistID AND aaSubLedgerAssignID = @aaSubLedgerAssignID -1    SET @Flag1 = 0  END  FETCH NEXT FROM Cursor1 INTO @RCPTLNNM, @LCLINENUMBER, @LCHDRNUMBER, @Landed_Cost_Type, @ACPURIDX, @PURPVIDX, @DECPLCUR, @CURNCYID, @CURRNIDX,  @RATETPID, @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1, @RATECALC, @DENXRATE, @MCTRXSTT, @DEX_ROW_ID  END  CLOSE Cursor1  DEALLOCATE Cursor1  IF EXISTS(SELECT TOP 1 1 FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID)  EXEC aagRenumberAADistsALL @aaSubLedgerHdrID, @oStatus OUT  ELSE  DELETE FROM AAG20000 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID END   
GO
GRANT EXECUTE ON  [dbo].[aagInitializeLandedCost] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create    procedure [dbo].[aagYearEndCloseGetData] @I_nYearClosed smallint, @I_nNextYear smallint, @O_cTrxDimFields varchar(8000) output, @O_cTrxDimFieldsWithPrefix varchar(8000) output, @I_nAAFromOpen bit, @I_nCalledFromUtility bit, @I_cBBF varchar(255), @I_cPANDL      varchar(255),  @I_nMCRegistered    tinyint  = NULL   as begin  set nocount on  Declare  @l_cmdExec varchar(8000),  @l_aaTrxDimID int,  @l_nIsNextYearOpen bit,  @l_naaOrder int,  @l_TrxCodeTableName varchar(11),  @l_cFunc_Currency char(15),  @l_dYearEndDate datetime   if (select HISTORYR from SY40101 where  YEAR1 = @I_nNextYear) = 0  begin  set @l_nIsNextYearOpen = 1  end  else  begin  set @l_nIsNextYearOpen = 0  end   select  @l_dYearEndDate  = LSTFSCDY  from  SY40101  where  YEAR1 = @I_nYearClosed  if exists(select name from tempdb..sysobjects where name = '##aaBBFGetDataTemp'    and type = 'U') drop table ##aaBBFGetDataTemp  set @l_cmdExec = ''  set @O_cTrxDimFields = ''  set @O_cTrxDimFieldsWithPrefix = ''   select @l_cmdExec = 'create table ##aaBBFGetDataTemp(  [aaGLHdrID] [int] NOT NULL default(0),  [aaGLDistID] [int] NOT NULL default(0),  [aaGLAssignID] [int] NOT NULL default(0),  [ACTINDX] [int] NOT NULL default(0),  [ACCTTYPE] [smallint] NOT NULL default(0),  [DEBITAMT] [numeric](19, 5) NOT NULL default(0),  [CRDTAMNT] [numeric](19, 5) NOT NULL default(0),  [ORDBTAMT] [numeric](19, 5) NOT NULL default(0),  [ORCRDAMT] [numeric](19, 5) NOT NULL default(0),  [CURNCYID] [char] (15) NOT NULL default(''''),  [Ledger_ID] [int] NOT NULL default(0), '   if exists(select * from AAG00700 where aaOption = 15 and aaIsOptionSet = 1)  begin  if @I_nAAFromOpen = 1   begin  declare TrxDim cursor fast_forward for  select code.aaTrxDimID,  aaOrder   from AAG30003 code Inner join   (Select aaGLHdrID from AAG30000 where YEAR1 = @I_nYearClosed) hdr   on code.aaGLHdrID = hdr.aaGLHdrID  Inner join AAG00400 dim on code.aaTrxDimID = dim.aaTrxDimID  where dim.aaIncYEC = 1 and dim.aaDataType = 1  group by code.aaTrxDimID,  aaOrder   order by aaOrder  end  else  begin  declare TrxDim cursor fast_forward for  select code.aaTrxDimID, aaOrder  from AAG40003 code Inner join   (Select aaGLHdrID from AAG40000 where YEAR1 = @I_nYearClosed) hdr   on code.aaGLHdrID = hdr.aaGLHdrID  Inner join AAG00400 dim on code.aaTrxDimID = dim.aaTrxDimID  where dim.aaIncYEC = 1 and dim.aaDataType = 1  group by code.aaTrxDimID,  aaOrder   order by aaOrder  end  open TrxDim  fetch next from TrxDim into @l_aaTrxDimID, @l_naaOrder  while @@fetch_status = 0  begin  select @l_cmdExec = @l_cmdExec + '[' + ltrim(rtrim(@l_aaTrxDimID)) + '] [int] NULL , '  select @O_cTrxDimFields = @O_cTrxDimFields + '[' + ltrim(rtrim(@l_aaTrxDimID)) + '], '  select @O_cTrxDimFieldsWithPrefix =  @O_cTrxDimFieldsWithPrefix + 'assin.[' + ltrim(rtrim(@l_aaTrxDimID)) + '], '  insert into ##aaTrxDimTemp  (aaTrxDimID, aaOrder) values (@l_aaTrxDimID, @l_naaOrder)   fetch next from TrxDim into @l_aaTrxDimID, @l_naaOrder  end   close TrxDim  deallocate TrxDim  end   select @O_cTrxDimFields = ltrim(rtrim(@O_cTrxDimFields))  select @O_cTrxDimFieldsWithPrefix = ltrim(rtrim(@O_cTrxDimFieldsWithPrefix))  if len(@O_cTrxDimFields) > 0  begin  select @O_cTrxDimFields = substring(@O_cTrxDimFields, 1,len(@O_cTrxDimFields) - 1)  select @O_cTrxDimFieldsWithPrefix = substring(@O_cTrxDimFieldsWithPrefix, 1,len(@O_cTrxDimFieldsWithPrefix) - 1)  end   select @l_cmdExec = @l_cmdExec + 'CONSTRAINT [PKaaGLAssingBBFTemp] PRIMARY KEY  CLUSTERED   (  [aaGLHdrID],  [aaGLDistID],  [aaGLAssignID],  [ACTINDX]  )  ON [PRIMARY]   ) ON [PRIMARY]'  exec (@l_cmdExec)   if @I_nAAFromOpen = 1   begin  if @I_nCalledFromUtility = 0  begin  insert into ##aaBBFGetDataTemp (aaGLHdrID,  aaGLDistID,  aaGLAssignID,  ACTINDX,  ACCTTYPE,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,  ORCRDAMT,  CURNCYID,  Ledger_ID)  select Asign.aaGLHdrID,  Asign.aaGLDistID,  Asign.aaGLAssignID,  dist.ACTINDX,  dist.ACCTTYPE,  Asign.DEBITAMT,  Asign.CRDTAMNT,  Asign.ORDBTAMT,  Asign.ORCRDAMT,  dist.CURNCYID,  Ledger_ID   from (Select aaGLHdrID, Ledger_ID from AAG30000 where YEAR1 = @I_nYearClosed) hdr Inner join   AAG30002 Asign on Asign.aaGLHdrID = hdr.aaGLHdrID  inner join AAG30001 dist on dist.aaGLHdrID = Asign.aaGLHdrID and dist.aaGLDistID = Asign.aaGLDistID  order by Asign.aaGLHdrID, Asign.aaGLDistID, Asign.aaGLAssignID  end  else  begin  if @l_nIsNextYearOpen = 1  begin  insert into ##aaBBFGetDataTemp (aaGLHdrID,  aaGLDistID,  aaGLAssignID,  ACTINDX,  ACCTTYPE,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,  ORCRDAMT,  CURNCYID,  Ledger_ID)  select Asign.aaGLHdrID,  Asign.aaGLDistID,  Asign.aaGLAssignID,  dist.ACTINDX,  dist.ACCTTYPE,  Asign.DEBITAMT,  Asign.CRDTAMNT,  Asign.ORDBTAMT,  Asign.ORCRDAMT,  dist.CURNCYID,  Ledger_ID   from (Select aaGLHdrID, Ledger_ID from AAG30000 where YEAR1 = @I_nYearClosed and  not exists(select 1 from GL20000   where GL20000.JRNENTRY = AAG30000.JRNENTRY and   GL20000.TRXDATE = @l_dYearEndDate and  GL20000.OPENYEAR = @I_nNextYear AND  SOURCDOC IN(@I_cBBF, @I_cPANDL) and SEQNUMBR <> 0)  ) hdr Inner join   AAG30002 Asign on Asign.aaGLHdrID = hdr.aaGLHdrID  inner join AAG30001 dist on dist.aaGLHdrID = Asign.aaGLHdrID and dist.aaGLDistID = Asign.aaGLDistID  order by Asign.aaGLHdrID, Asign.aaGLDistID, Asign.aaGLAssignID  end  else  begin  insert into ##aaBBFGetDataTemp (aaGLHdrID,  aaGLDistID,  aaGLAssignID,  ACTINDX,  ACCTTYPE,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,  ORCRDAMT,  CURNCYID,  Ledger_ID)  select Asign.aaGLHdrID,  Asign.aaGLDistID,  Asign.aaGLAssignID,  dist.ACTINDX,  dist.ACCTTYPE,  Asign.DEBITAMT,  Asign.CRDTAMNT,  Asign.ORDBTAMT,  Asign.ORCRDAMT,  dist.CURNCYID,  Ledger_ID   from (Select aaGLHdrID, Ledger_ID from AAG30000 where YEAR1 = @I_nYearClosed and  not exists(select 1 from GL30000   where GL30000.JRNENTRY = AAG30000.JRNENTRY and   GL30000.TRXDATE = @l_dYearEndDate and  GL30000.HSTYEAR = @I_nNextYear AND  SOURCDOC IN(@I_cBBF, @I_cPANDL) and SEQNUMBR <> 0)  ) hdr Inner join   AAG30002 Asign on Asign.aaGLHdrID = hdr.aaGLHdrID  inner join AAG30001 dist on dist.aaGLHdrID = Asign.aaGLHdrID and dist.aaGLDistID = Asign.aaGLDistID  order by Asign.aaGLHdrID, Asign.aaGLDistID, Asign.aaGLAssignID  end   end   end  else  begin   if @l_nIsNextYearOpen = 1  begin  insert into ##aaBBFGetDataTemp (aaGLHdrID,  aaGLDistID,  aaGLAssignID,  ACTINDX,  ACCTTYPE,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,  ORCRDAMT,  CURNCYID,  Ledger_ID)  select Asign.aaGLHdrID,  Asign.aaGLDistID,  Asign.aaGLAssignID,  dist.ACTINDX,  dist.ACCTTYPE,  Asign.DEBITAMT,  Asign.CRDTAMNT,  Asign.ORDBTAMT,  Asign.ORCRDAMT,  dist.CURNCYID,  Ledger_ID   from (Select aaGLHdrID, Ledger_ID from AAG40000 where YEAR1 = @I_nYearClosed and  not exists(select 1 from GL20000   where GL20000.JRNENTRY = AAG40000.JRNENTRY and   GL20000.TRXDATE = @l_dYearEndDate and  GL20000.OPENYEAR = @I_nNextYear AND  SOURCDOC IN(@I_cBBF, @I_cPANDL) and SEQNUMBR <> 0)) hdr Inner join   AAG40002 Asign on Asign.aaGLHdrID = hdr.aaGLHdrID  inner join AAG40001 dist on dist.aaGLHdrID = Asign.aaGLHdrID and dist.aaGLDistID = Asign.aaGLDistID  order by Asign.aaGLHdrID, Asign.aaGLDistID, Asign.aaGLAssignID  end  else  begin  insert into ##aaBBFGetDataTemp (aaGLHdrID,  aaGLDistID,  aaGLAssignID,  ACTINDX,  ACCTTYPE,  DEBITAMT,  CRDTAMNT,  ORDBTAMT,  ORCRDAMT,  CURNCYID,  Ledger_ID)  select Asign.aaGLHdrID,  Asign.aaGLDistID,  Asign.aaGLAssignID,  dist.ACTINDX,  dist.ACCTTYPE,  Asign.DEBITAMT,  Asign.CRDTAMNT,  Asign.ORDBTAMT,  Asign.ORCRDAMT,  dist.CURNCYID,  Ledger_ID   from (Select aaGLHdrID, Ledger_ID from AAG40000 where YEAR1 = @I_nYearClosed and  not exists(select 1 from GL30000   where GL30000.JRNENTRY = AAG40000.JRNENTRY and   GL30000.TRXDATE = @l_dYearEndDate and  GL30000.HSTYEAR = @I_nNextYear AND  SOURCDOC IN(@I_cBBF, @I_cPANDL) and SEQNUMBR <> 0)) hdr Inner join   AAG40002 Asign on Asign.aaGLHdrID = hdr.aaGLHdrID  inner join AAG40001 dist on dist.aaGLHdrID = Asign.aaGLHdrID and dist.aaGLDistID = Asign.aaGLDistID  order by Asign.aaGLHdrID, Asign.aaGLDistID, Asign.aaGLAssignID  end  end  if exists(select * from AAG00700 where aaOption = 15 and aaIsOptionSet = 1)   begin  if @I_nAAFromOpen = 1   begin  declare TrxDim cursor local fast_forward for  select code.aaTrxDimID, aaOrder   from AAG30003 code Inner join   (Select aaGLHdrID from AAG30000 where YEAR1 = @I_nYearClosed) hdr   on code.aaGLHdrID = hdr.aaGLHdrID  Inner join AAG00400 dim on code.aaTrxDimID = dim.aaTrxDimID  where dim.aaIncYEC = 1 and dim.aaDataType = 1  group by code.aaTrxDimID,  aaOrder   order by aaOrder  set @l_TrxCodeTableName = ' AAG30003'  end   else  begin  declare TrxDim cursor local fast_forward for  select code.aaTrxDimID, aaOrder   from AAG40003 code Inner join   (Select aaGLHdrID from AAG40000 where YEAR1 = @I_nYearClosed) hdr   on code.aaGLHdrID = hdr.aaGLHdrID  Inner join AAG00400 dim on code.aaTrxDimID = dim.aaTrxDimID  where dim.aaIncYEC = 1 and dim.aaDataType = 1  group by code.aaTrxDimID, aaOrder   order by aaOrder  set @l_TrxCodeTableName = ' AAG40003'  end    open TrxDim  fetch next from TrxDim into @l_aaTrxDimID, @l_naaOrder  while @@fetch_status = 0  begin  select @l_cmdExec = 'Update ##aaBBFGetDataTemp set '  select @l_cmdExec = @l_cmdExec + '[' + ltrim(rtrim(@l_aaTrxDimID)) + '] = aaTrxCodeID '  select @l_cmdExec = @l_cmdExec + 'from ##aaBBFGetDataTemp tmp inner join ' + @l_TrxCodeTableName + ' cod on '  select @l_cmdExec = @l_cmdExec + ' tmp.aaGLHdrID = cod.aaGLHdrID and  '  select @l_cmdExec = @l_cmdExec + ' tmp.aaGLDistID = cod.aaGLDistID and '  select @l_cmdExec = @l_cmdExec + ' tmp.aaGLAssignID = cod.aaGLAssignID '   select @l_cmdExec = @l_cmdExec + 'where cod.aaTrxDimID = ' + ltrim(rtrim(@l_aaTrxDimID))  exec (@l_cmdExec)  fetch next from TrxDim into @l_aaTrxDimID, @l_naaOrder  end   close TrxDim  deallocate TrxDim  end  set @l_cFunc_Currency = ''  select @l_cFunc_Currency = FUNLCURR from MC40000   if  @I_nMCRegistered = 1   update ##aaBBFGetDataTemp set CURNCYID = @l_cFunc_Currency WHERE LTRIM(RTRIM(CURNCYID)) = '' OR CURNCYID IS NULL   set nocount off end    
GO
GRANT EXECUTE ON  [dbo].[aagYearEndCloseGetData] TO [DYNGRP]
GO

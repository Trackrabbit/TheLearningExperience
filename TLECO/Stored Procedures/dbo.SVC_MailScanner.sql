SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_MailScanner]  as declare @status int declare @msg_id varchar(64) declare @originator varchar(255) declare @cc_list varchar(255) declare @msgsubject varchar(255) declare @query varchar(255) declare @messages int declare @mapifailure int declare @database varchar(30) declare @CUSTOMER varchar(255) declare @PASSWORD2 varchar(255) declare @KEYWORD2 varchar(255) declare @SERIAL varchar(255) declare @DESCR varchar(255) declare @CUSTREF varchar(255) declare @EMAIL varchar(255) declare @CONTACT varchar(255) declare @PHONE varchar(20) declare @BCP_User_Name varchar(30) declare @BCP_Password varchar(30) select @BCP_User_Name = 'sa' select @BCP_Password = '' select @messages=0 select @mapifailure=0 PRINT 'START MAIL SCANNER'  while( 1=1 )  begin  exec @status = master..xp_findnextmsg @msg_id=@msg_id output,  @unread_only='true'  if @status <> 0   begin  select @mapifailure=1  break  end  if @msg_id is null break  exec @status = master..xp_readmail @msg_id=@msg_id,  @originator=@originator output,  @cc_list=@cc_list output,  @subject=@msgsubject output,  @message=@query output,  @peek='true',   @suppress_attach='true'  if @status <> 0  begin  select @mapifailure=1  break  end   if charindex(':',@msgsubject) = 0  begin  select @database = null  end  else  begin  select @database = substring(@msgsubject,1,charindex(':',@msgsubject)-1)  select @msgsubject = substring(@msgsubject,charindex(':',@msgsubject)+1,255)  end   if @database is null  begin  exec @status = SVC_Mail_parse_for_keywords @query,   @CUSTOMER out,   @PASSWORD2 out,   @KEYWORD2 out,   @SERIAL out,   @DESCR out,   @CUSTREF out,  @EMAIL out,@CONTACT out,@PHONE out  if exists(select * from RM00101 where CUSTNMBR = @CUSTOMER)   select @database = DB_NAME()  end   if @database = DB_NAME()   begin  select @messages = @messages + 1   IF UPPER(@msgsubject) = 'OPEN'            exec SVC_MailProcessOPEN @msg_id  ELSE IF UPPER(@msgsubject) = 'HISTORY'    exec SVC_MailProcessHISTORY @msg_id  ELSE IF UPPER(@msgsubject) = 'SEARCH'     exec SVC_MailProcessSEARCH @msg_id  ELSE IF UPPER(@msgsubject) = 'LOG'        exec SVC_MailProcessLOG @msg_id  ELSE IF UPPER(@msgsubject) = 'TIMESHEET'  exec SVC_MailProcessTIMESHEET @msg_id, @BCP_User_Name, @BCP_Password  ELSE exec SVC_SendMail @originator,'Invalid Command','The command you entered is not valid.'  exec master..xp_deletemail @msg_id  select @msg_id = null  end  end    if @mapifailure=0  begin  raiserror(15079,-1,-1,@messages)  return(1)  end  else   return(0)    
GO
GRANT EXECUTE ON  [dbo].[SVC_MailScanner] TO [DYNGRP]
GO

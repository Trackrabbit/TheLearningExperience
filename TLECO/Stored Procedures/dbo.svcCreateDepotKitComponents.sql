SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[svcCreateDepotKitComponents]   (@RecType smallint,  @WO char(15),  @Line as numeric(19,5),   @WOCompSeq int,   @CompItem char(31),  @CompLineQty numeric(19,5),  @CompQTY numeric(19,5),  @CompUOM char(10),  @LocationCode char(10),  @USERID char(15),  @UserDate datetime  ) AS  declare @entdte datetime declare @enttme datetime declare @ITEMDESC char(100), @ITEMTYPE smallint declare @Status int declare @l_UOM char(10), @DecPlcQty smallint, @DecPlcCur smallint declare @UnitCost numeric(19,5),@UnitPrice numeric(19,5) declare @QtyAvail numeric(19,5),@QtyBO numeric(19,5), @QtyInBase numeric(19,5), @QtyAlloc numeric(19,5) declare @ExUnitCost numeric(19,5),@ExUnitPrice numeric(19,5), @CurrentCost numeric(19,5) declare @ExOrigUnitCost numeric(19,5),@ExOrigUnitPrice numeric(19,5) declare @MinDate datetime declare @NewNoteIndex int declare @SOPAllowDiscntinued  tinyint  exec smGetMinDate @MinDate output  select @entdte = CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00',  @enttme = @MinDate + CONVERT(varchar(10),GETDATE(),108)  if exists(select * from IV00101  where ITEMNMBR = @CompItem)   select @ITEMDESC = ITEMDESC, @DecPlcQty = DECPLQTY, @DecPlcCur = DECPLCUR, @UnitCost = CURRCOST,  @CurrentCost = CURRCOST, @ITEMTYPE = ITEMTYPE from IV00101  where ITEMNMBR = @CompItem else  select @DecPlcQty = DECPLQTY, @DecPlcCur = DECPLCUR, @CurrentCost = 0, @UnitCost = 0 from SOP40100   exec SVC_Get_QtyInBase @CompItem,@CompUOM,1,@QtyInBase OUTPUT if @QtyInBase  = 0 select @QtyInBase = 1.0  select @SOPAllowDiscntinued = SOPALLOW_10 from SOP40100   select @ITEMDESC = IsNull(@ITEMDESC,''), @CompItem = IsNull(@CompItem,'') select @UnitCost = @UnitCost * @QtyInBase select  @ExUnitCost = @UnitCost * @CompLineQty  exec SVC_Get_Next_Note_Index @NewNoteIndex output  INSERT SVC06101  (WORECTYPE, WORKORDNUM, WOSTAT, LINITMTYP, LNITMSEQ, ITEMNMBR, ITEMDESC, STATIONID, LOCNCODE, UOFM, TECHID, QTYORDER, ATYALLOC, QTYBACKO, QTYSOLD, UNITCOST, UNITPRCE, EXTDCOST, XTNDPRCE, NOTEINDX, SEQUENCE1, CMPNTSEQ, CMPITQTY ) select WORECTYPE, WORKORDNUM, WOSTAT, LINITMTYP, LNITMSEQ, @CompItem, @ITEMDESC, STATIONID, LOCNCODE, @CompUOM, TECHID, @CompLineQty, 0, 0, 0, @UnitCost, 0, @ExUnitCost, 0, @NewNoteIndex, SEQUENCE1, @WOCompSeq, @CompQTY  FROM SVC06101 where WORECTYPE = @RecType and WORKORDNUM = @WO and LNITMSEQ = @Line and CMPNTSEQ = 0  if @ITEMTYPE > 0 and @ITEMTYPE < 3  Begin  select @QtyAvail = (QTYONHND - ATYALLOC) / @QtyInBase from IV00102  where ITEMNMBR = @CompItem and LOCNCODE = @LocationCode and RCRDTYPE = 2  select @QtyAvail = isnull(@QtyAvail,0)  if @QtyAvail < 0   select @QtyAvail = 0   if @QtyAvail >= @CompLineQty  begin  select @QtyAlloc = @CompLineQty * @QtyInBase  exec SVC_Allocate_Quantity @CompItem, @LocationCode, @QtyAlloc  update SVC06101 with (rowlock) set ATYALLOC = @CompLineQty  where WORECTYPE = @RecType and WORKORDNUM = @WO and LNITMSEQ = @Line AND LINITMTYP = 'P' and CMPNTSEQ = @WOCompSeq  end  else  begin  if @QtyAvail > 0   begin  select @QtyAlloc = @QtyAvail * @QtyInBase  exec SVC_Allocate_Quantity @CompItem, @LocationCode, @QtyAlloc  end  if @ITEMTYPE = 2   begin  update SVC06101 with (rowlock) set ATYALLOC = @QtyAvail , QTYORDER = @QtyAvail  where WORECTYPE = @RecType and WORKORDNUM = @WO and LNITMSEQ = @Line AND LINITMTYP = 'P' and CMPNTSEQ = @WOCompSeq  end  else  begin  select @QtyBO = @CompLineQty - @QtyAvail   update SVC06101 with (rowlock) set ATYALLOC = @QtyAvail, QTYBACKO = @QtyBO  where WORECTYPE = @RecType and WORKORDNUM = @WO and LNITMSEQ = @Line AND LINITMTYP = 'P' and CMPNTSEQ = @WOCompSeq  exec SVC_Create_Inv_Requirement 2,@RecType,@WO, 0, @Line, 'P', @WOCompSeq,@USERID  end   end  End  return   
GO
GRANT EXECUTE ON  [dbo].[svcCreateDepotKitComponents] TO [DYNGRP]
GO

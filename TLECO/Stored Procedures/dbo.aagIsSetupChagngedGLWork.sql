SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create            procedure [dbo].[aagIsSetupChagngedGLWork]  @iHdrID int,  @iDistID int,  @iAcctIndex int,   @oSetupChanged smallint = null out,  @oCodesExisting smallint = null out,  @oLinkedToClass smallint = null out,  @oStatus smallint = null out as  declare @transaction tinyint,  @retCode int,  @dbName varchar(32),  @companyID smallint,  @companyStatus smallint,  @DistID int,  @totalrecords int,  @AcctClassID int,  @TrxDimID int  select  @transaction = 0,  @retCode = 0,  @dbName = '',  @companyID = 0,  @companyStatus = 0,  @DistID = 0,  @totalrecords = 0,  @AcctClassID = 0,  @TrxDimID = 0,  @oSetupChanged = 0,  @oCodesExisting = 0,  @oLinkedToClass = 0  if (@iHdrID is null) or (@iDistID is null) begin select @oStatus = 35000 return end  if (@iHdrID = 0) or (@iDistID = 0) begin select @oStatus = 35001 return end  select @dbName = db_name() exec @retCode = DYNAMICS.dbo.aagGetCompanyStatus @dbName, @companyID out, @companyStatus out, @oStatus out if ((@retCode <> 0) or (@oStatus <> 0)) return @retCode  select @AcctClassID = aaAcctClassID from AAG00200 where ACTINDX = @iAcctIndex  if @AcctClassID <> 0 begin  select @oLinkedToClass = 1   declare AcctClassCursor cursor fast_forward FOR   select aaTrxDimID from AAG00202 where aaAcctClassID= @AcctClassID   open AcctClassCursor    fetch next from AcctClassCursor   into @TrxDimID   while @@fetch_status = 0  begin  if not exists(select aaGLWorkHdrID from AAG10003 where aaGLWorkHdrID = @iHdrID and aaGLWorkDistID = @iDistID and aaGLWorkAssignID = 1 and aaTrxDimID = @TrxDimID)   begin select @oSetupChanged = 1 break end  fetch next from AcctClassCursor   into @TrxDimID  end   if @oSetupChanged = 0 begin  if ((select count(*) from AAG00202 where aaAcctClassID = @AcctClassID) <>   (select count(*) from AAG10003 where aaGLWorkHdrID = @iHdrID and aaGLWorkDistID = @iDistID and aaGLWorkAssignID = 1))   select @oSetupChanged = 1  end   deallocate AcctClassCursor end  if @AcctClassID = 0  begin  select @oLinkedToClass = 0  select @totalrecords = count(*) from AAG10002 where aaGLWorkHdrID = @iHdrID and  aaGLWorkDistID = @iDistID  if (@totalrecords > 1)   select @oSetupChanged = 1  if @oSetupChanged = 0   begin  if exists(select top 1 aaGLWorkHdrID from AAG10003 where aaGLWorkHdrID = @iHdrID and  aaGLWorkDistID = @iDistID)   select @oSetupChanged = 1  end end    
GO
GRANT EXECUTE ON  [dbo].[aagIsSetupChagngedGLWork] TO [DYNGRP]
GO

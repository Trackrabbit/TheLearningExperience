SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[rmCLTransactionLogicalTableGrp]   @I_cUserID char(15)    = NULL,  @I_cUserDate char(12)    = NULL,  @I_cFunctionalCurrency char(15)    = NULL,  @I_cCashWORK   varchar(40) = NULL,  @I_cSalesWORK varchar(40) = NULL,  @I_cOPEN varchar(40) = NULL,  @I_cDistributionWORK varchar(40) = NULL,  @I_cCommissionWORK varchar(40) = NULL,  @I_cAppliedOPEN varchar(40) = NULL,  @I_cKeyMSTR varchar(40) = NULL,  @I_cBatchHeaders varchar(40) = NULL,  @I_cMCRMTransactions varchar(40) = NULL,  @I_cMCRMRevaluation varchar(40) = NULL,  @I_cTaxWORK varchar(40) = NULL,  @I_cSchHdr varchar(40) = NULL,  @I_cSchLine varchar(40) = NULL,  @I_cEmailDetails varchar(40) = NULL,  @I_cEmailHistory varchar(40) = NULL,  @I_tMCRegistered tinyint     = NULL,   @O_iErrorState int      = NULL output  as  declare  @iError int,   @iStatus int,   @cSearchString1 char(2),  @tLoop tinyint  select  @O_iErrorState = 0,  @iStatus  = 0,  @cSearchString1 = '%1'  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL  or @I_cUserDate is NULL  or @I_cFunctionalCurrency is NULL  or @I_cCashWORK is NULL  or @I_cSalesWORK is NULL  or @I_cOPEN is NULL  or @I_cDistributionWORK is NULL  or @I_cCommissionWORK is NULL  or @I_cAppliedOPEN is NULL  or @I_cKeyMSTR is NULL  or @I_cTaxWORK is NULL  or @I_cSchHdr is NULL  or @I_cSchLine is NULL  or @I_cEmailDetails is NULL  or  @I_cEmailHistory is NULL  or @I_cMCRMTransactions is NULL  or  @I_cMCRMRevaluation is NULL  or @I_tMCRegistered is NULL    begin  select @O_iErrorState = 20850  break   end   create table #CNTRLNUMTEMP(  CNTRLNUM varchar(21) not null,  DOCTYPE smallint not null,  VENDORID varchar(15) not null )   exec @iStatus = rmCLCashWORK  @I_cUserID,  @I_cUserDate,  @I_cFunctionalCurrency,  @I_cCashWORK,  @I_cBatchHeaders,  @I_cKeyMSTR,  @cSearchString1,  @I_tMCRegistered,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLSalesWORK  @I_cUserID,  @I_cUserDate,  @I_cFunctionalCurrency,  @I_cSalesWORK,  @I_cBatchHeaders,  @I_cKeyMSTR,  @cSearchString1,  @I_tMCRegistered,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLRMOPEN  @I_cUserID,  @I_cUserDate,  @I_cFunctionalCurrency,  @I_cOPEN,  @I_cKeyMSTR,  @cSearchString1,  @I_tMCRegistered,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLDistributionWORK  @I_cUserID,  @I_cDistributionWORK,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLCommissionWORK  @I_cUserID,  @I_cCommissionWORK,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  exec @iStatus = rmCLAppliedOPEN  @I_cUserID,  @I_cAppliedOPEN,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLTaxWORK  @I_cUserID,  @I_cTaxWORK,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLMCTransaction  @I_cUserID,  @I_cMCRMTransactions,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLMCRevaluation  @I_cUserID,  @I_cMCRMRevaluation,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLSchHdr  @I_cUserID,  @I_cSchHdr,  @cSearchString1,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLSchLine  @I_cUserID,  @I_cSchLine,  @cSearchString1,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLEmailDetails  @I_cUserID,  @I_cEmailDetails,  @cSearchString1,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLEmailHistory  @I_cUserID,  @I_cEmailHistory,  @cSearchString1,  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = rmCLKeysMSTR  @I_cUserID,  @I_cKeyMSTR,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[rmCLTransactionLogicalTableGrp] TO [DYNGRP]
GO

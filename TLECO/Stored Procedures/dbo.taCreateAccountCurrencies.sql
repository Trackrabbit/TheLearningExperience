SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateAccountCurrencies]  @I_vAccount_Number char(75),    @I_vCURNCYID char(15),   @I_vREVALUE tinyint=0,    @I_vREVLUHOW smallint=0,   @I_vPost_Results_To smallint=0,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @ACTINDX int,     @CMPANYID smallint,    @FUNLCURR char(15),    @iAddCodeErrState int,    @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @ACTINDX = 0,     @CMPANYID = 0,     @FUNLCURR = '',     @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateAccountCurrenciesPre  @I_vAccount_Number output,  @I_vCURNCYID output,  @I_vREVALUE output,  @I_vREVLUHOW output,  @I_vPost_Results_To output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6600    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vAccount_Number is NULL or  @I_vCURNCYID is NULL or  @I_vREVALUE is NULL or  @I_vREVLUHOW is NULL or  @I_vPost_Results_To is NULL or  @I_vUSRDEFND1 is NULL or   @I_vUSRDEFND2 is NULL or   @I_vUSRDEFND3 is NULL or   @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 6601    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vAccount_Number = UPPER(@I_vAccount_Number),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  if  ( @I_vAccount_Number = '' ) begin  select @O_iErrorState = 6602    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vAccount_Number <> '' ) begin  select @ACTINDX = ACTINDX from GL00105 a (nolock) where a.ACTNUMST = @I_vAccount_Number  if (@ACTINDX is null) or (@ACTINDX = 0)  begin  select @O_iErrorState = 6603     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if  ( @I_vCURNCYID = '' ) begin  select @O_iErrorState = 9341    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vCURNCYID <> '') begin  if not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID)  begin  select @O_iErrorState = 6604    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCURNCYID <> '') begin  if not exists(select 1 from DYNAMICS..MC60100 (nolock) where CURNCYID = @I_vCURNCYID and CMPANYID = @CMPANYID)  begin  select @O_iErrorState = 6605    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCURNCYID = @FUNLCURR) begin  select @O_iErrorState = 8091    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vREVALUE < 0 or @I_vREVALUE > 1 )  begin  select @O_iErrorState = 6606     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vREVLUHOW < 0 or @I_vREVLUHOW > 1 ) begin  select @O_iErrorState = 6607     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vPost_Results_To < 0 or @I_vPost_Results_To > 1 ) begin  select @O_iErrorState = 6608     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if not exists( select 1 from MC00200 (nolock) where  ACTINDX = @ACTINDX and  CURNCYID = ''  )  begin  insert into MC00200 (   ACTINDX,  CURNCYID,  REVALUE,  REVLUHOW,  Post_Results_To  )  select  @ACTINDX,    '',     @I_vREVALUE,    @I_vREVLUHOW,    @I_vPost_Results_To   end end  if (@O_iErrorState = 0) begin  if not exists( select 1 from MC00200 (nolock) where  ACTINDX = @ACTINDX and  CURNCYID = @I_vCURNCYID  )  begin  insert into MC00200 (   ACTINDX,  CURNCYID,  REVALUE,  REVLUHOW,  Post_Results_To  )  select  @ACTINDX,    @I_vCURNCYID,     0,     0,     0     if @@error <> 0  begin  select @O_iErrorState = 6609    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 8084    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taCreateAccountCurrenciesPost  @I_vAccount_Number,  @I_vCURNCYID,  @I_vREVALUE,  @I_vREVLUHOW,  @I_vPost_Results_To,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6610    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateAccountCurrencies] TO [DYNGRP]
GO

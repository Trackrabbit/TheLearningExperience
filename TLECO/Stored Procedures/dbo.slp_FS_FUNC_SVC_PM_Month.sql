SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[slp_FS_FUNC_SVC_PM_Month] @iLanguageID int  as  set nocount on   declare @sqldropstring varchar(400),  @sqlstring1 varchar(8000),  @sqlstring2 varchar(8000),  @sqlaccessstring varchar(1000),  @I_iDictID int, @I_sFunctionName varchar(100), @I_iFunctionEnum int, @January varchar(255),  @February varchar(255),  @March varchar(255),  @April varchar(255),  @May varchar(255),  @June varchar(255),  @July varchar(255),  @August varchar(255),  @September varchar(255),  @October varchar(255),  @November varchar(255),  @December varchar(255)  select @I_iDictID = 949 select @I_sFunctionName = 'FS_FUNC_SVC_PM_Month' select @I_iFunctionEnum = 1 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @January output  select @I_iFunctionEnum = 2 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @February output  select @I_iFunctionEnum = 3 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @March output  select @I_iFunctionEnum = 4 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @April output  select @I_iFunctionEnum = 5 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @May output  select @I_iFunctionEnum = 6 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @June output  select @I_iFunctionEnum = 7 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @July output  select @I_iFunctionEnum = 8 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @August output  select @I_iFunctionEnum = 9 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @September output  select @I_iFunctionEnum = 10 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @October output  select @I_iFunctionEnum = 11 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @November output  select @I_iFunctionEnum = 12 exec DYNAMICS..smGetBIEnumString  @I_iDictID, @iLanguageID, @I_sFunctionName, @I_iFunctionEnum, @December output  select @sqldropstring =  'if exists (select * from dbo.sysobjects where id = object_id(N''[dbo].[FS_FUNC_SVC_PM_Month]'') and xtype in (N''FN'',N''IF'',N''TF'')) ' +  'drop function [dbo].[FS_FUNC_SVC_PM_Month] '  select @sqlstring1 =  'create function [dbo].[FS_FUNC_SVC_PM_Month] (@iIntEnum integer) returns varchar(100) ' +  'as  '+ 'begin  '+ 'declare @oVarcharValuestring varchar(100) ' + 'set @oVarcharValuestring = ' + 'case ' +  ' when @iIntEnum = 1 then ''' + @January + '''' +  ' when @iIntEnum = 2 then ''' + @February + '''' +  ' when @iIntEnum = 3 then ''' + @March + '''' +  ' when @iIntEnum = 4 then ''' + @April + '''' +  ' when @iIntEnum = 5 then ''' + @May + '''' +  ' when @iIntEnum = 6 then ''' + @June + '''' +  ' when @iIntEnum = 7 then ''' + @July + '''' +  ' when @iIntEnum = 8 then ''' + @August + '''' +  ' when @iIntEnum = 9 then ''' + @September + '''' +  ' when @iIntEnum = 10 then ''' + @October + '''' +  ' when @iIntEnum = 11 then ''' + @November + '''' +  ' when @iIntEnum = 12 then ''' + @December + '''' +  ' else '''' ' +  ' end ' +  ' RETURN(@oVarcharValuestring) ' +  ' END '  exec (@sqldropstring)  exec (@sqlstring1+' '+@sqlstring2)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[slp_FS_FUNC_SVC_PM_Month] TO [DYNGRP]
GO

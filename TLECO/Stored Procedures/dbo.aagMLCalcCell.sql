SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create          procedure [dbo].[aagMLCalcCell]  @iRowOrder int = 0,  @iColID smallint = 0,  @iCol   smallint = 0,  @iColDataType smallint = 0,  @aaOrder int,  @aaBudgetID int,  @iWhereCmd nvarchar(2000) = N'',  @iYear smallint = 0,  @iBasePeriod smallint = 0,  @iTruncateTo smallint = 0,  @iDecPlaces smallint = 0,   @iClearIfNull tinyint = 0,  @iDebug tinyint  = 0,  @oStatus  smallint = 0 out as declare @retCode int,  @execCmd nvarchar(4000),  @year nvarchar(4),  @period nvarchar(3),  @rowOrder nvarchar(9),  @colID nvarchar(3),  @BudColID int,  @BudgetFlag tinyint,  @colIDs integer,  @icols integer,  @iPeriod integer,  @Cells nvarchar(4000),  @execCmd2 varchar(8000)  set nocount on  select @retCode = 0,  @oStatus = 0,  @execCmd  = N'',  @year   = convert(nvarchar(4), @iYear),  @period  = convert(nvarchar(3), @iBasePeriod),  @rowOrder = convert(nvarchar(9), @iRowOrder),  @colID  = convert(nvarchar(3), @iColID),  @BudgetFlag = 1,  @icols  =@iCol,  @iPeriod =@iBasePeriod,  @execCmd2 =''  if @iDebug = 1 begin  print ''  print '** aagMLCalcCell **' end   select @Cells=''  if (select aaColFlag from ##ExpCols where aaColID=@colID) <> 1   declare p cursor fast_forward for select colID from ##RowCols where rowOrder = @iRowOrder and col=@icols and colID<@colID and colID not in (select isnull(aaColID,0) from ##ExpCols where aaColFlag=1 and aaColumn=@icols)  and  basePeriod<>0 order by colID   else  begin  select Top 1 @colIDs=aaColID from ##ExpCols where aaColFlag=1 and aaColumn=@icols and aaColID<@colID order by aaColID Desc  declare p cursor fast_forward for select colID from ##RowCols where rowOrder = @iRowOrder and col=@icols and (colID  between isnull(@colIDs,0) and @colID)and basePeriod<>0  order by colID  end  open p  fetch next from p into @colIDs  while (@@fetch_status <> -1)   begin  if @Cells <> '' begin select @Cells=@Cells + ' + ' end  select @Cells=@Cells + 'isnull(cell' + ltrim(str(@colIDs)) + ',0)'  fetch next from p into @colIDs  end  close p  deallocate p  if @iClearIfNull = 1   begin  select @execCmd2=N'declare @sum numeric(19,5)   select @sum='+@Cells+' from ##CellImport where rowOrder ='+ltrim(str(@iRowOrder))  select @execCmd2 = @execCmd2 + '  if @sum = 0 set @sum = Null   update ##CellImport set cell'+ ltrim(str(@iColID)) + ' = @sum where rowOrder = ' +ltrim(str(@iRowOrder))  end  else  begin  select @execCmd2=N'declare @sum numeric(19,5)   select @sum='+@Cells+' from ##CellImport where rowOrder ='+ltrim(str(@iRowOrder))  select @execCmd2 = @execCmd2 + ' update ##CellImport set cell'+ ltrim(str(@iColID)) + ' = @sum where rowOrder = ' +ltrim(str(@iRowOrder))  end  set @oStatus = 0  if LEN(@execCmd2) = 8000   begin   select @oStatus = -30   return @oStatus   end   exec  (@execCmd2)  set nocount off return    
GO
GRANT EXECUTE ON  [dbo].[aagMLCalcCell] TO [DYNGRP]
GO

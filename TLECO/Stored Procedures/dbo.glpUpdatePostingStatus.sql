SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpUpdatePostingStatus]  @I_iSQLSessionID                int    = NULL,  @I_cBatchSource                 char(15)        = NULL,  @I_cBatchNumber                 char(15)        = NULL,  @I_sTransactionType             smallint        = NULL,  @I_iJournalEntry                int             = NULL,  @I_cUserID                      char(15)        = NULL,  @I_cAuditTrailCode              char(13)        = NULL,  @I_cReversingAuditTrailCode     char(13)        = NULL,  @I_sPostingStatus               smallint        = NULL,  @I_mRecurringTRXSequence        numeric(19,5) = NULL,  @I_bHeaderMessages              binary(4)       = NULL,  @I_bHeaderMessages2             binary(4)       = NULL,  @I_tEditList                    tinyint         = NULL,  @I_iTransactionError            int             = NULL,  @O_iErrorState                  int             = NULL  output as  declare  @TRUE                   tinyint,  @BUSINESS_FORM    smallint,  @CLEARING_TRX     smallint,  @BUDGET_TRX smallint,    @NORMAL_TRX       smallint,   @POSTED                 smallint,  @POSTED_WITH_ERROR      smallint,  @UNPOSTED               smallint,  @RECURRING_POSTED smallint,  @nRecurringTrxSeqNumber numeric(19,5),  @tTransaction           tinyint,  @tLoop                  tinyint,  @iStatus int,  @sDefaultDate char(12)  select @O_iErrorState = 0,  @iStatus = 0,  @nRecurringTrxSeqNumber = @I_mRecurringTRXSequence  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if  @I_iSQLSessionID                is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_sTransactionType          is NULL or  @I_iJournalEntry                is NULL or  @I_cUserID                      is NULL or  @I_cAuditTrailCode              is NULL or  @I_cReversingAuditTrailCode is NULL or  @I_sPostingStatus               is NULL or  @I_mRecurringTRXSequence        is NULL or   @I_bHeaderMessages              is NULL or  @I_tEditList                    is NULL or  @I_iTransactionError            is NULL  begin  select @O_iErrorState = 20671  break  end    select   @TRUE                   = 1,  @BUSINESS_FORM          = 5,  @CLEARING_TRX           = 2,  @BUDGET_TRX    = 4,   @NORMAL_TRX             = 1,  @POSTED                 = 2,  @POSTED_WITH_ERROR      = 3,  @UNPOSTED               = 1,  @RECURRING_POSTED  = 4   exec @iStatus = smGetDefaultDate @sDefaultDate output   if      @I_sTransactionType <> @BUSINESS_FORM   and  @I_sTransactionType <> @CLEARING_TRX    and  @I_sTransactionType <> @NORMAL_TRX and  @I_sTransactionType <> @BUDGET_TRX    begin  select @O_iErrorState = 20673  break  end    if      @I_sPostingStatus <> @POSTED                    and  @I_sPostingStatus <> @POSTED_WITH_ERROR         and  @I_sPostingStatus <> @UNPOSTED and  @I_sPostingStatus <> @RECURRING_POSTED  begin  select @O_iErrorState = 20724  break  end    else if (@I_sPostingStatus = @RECURRING_POSTED) and (@I_cReversingAuditTrailCode <> '')  select @nRecurringTrxSeqNumber = @nRecurringTrxSeqNumber + 1   if @I_sTransactionType = @BUDGET_TRX   begin  if @I_tEditList = @TRUE   update   GL12000  set  GLHDRMSG = @I_bHeaderMessages,  GLHDRMS2 = @I_bHeaderMessages2,  ERRSTATE = @I_iTransactionError  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     JRNENTRY    = @I_iJournalEntry   else  update   GL12000  set   PSTGSTUS        = @I_sPostingStatus,  TRXSORCE        = @I_cAuditTrailCode,  GLHDRMSG        = @I_bHeaderMessages,  GLHDRMS2        = @I_bHeaderMessages2,  LASTUSER        = @I_cUserID,  USWHPSTD        = @I_cUserID,  LSTDTEDT        = @sDefaultDate,  ERRSTATE        = @I_iTransactionError  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     JRNENTRY    = @I_iJournalEntry   if @@rowcount <> 1   begin  select @O_iErrorState = 21111   break  end   end    else if @I_sTransactionType <> @BUSINESS_FORM   begin  if @I_tEditList = @TRUE   update   GL10000  set  GLHDRMSG = @I_bHeaderMessages,  GLHDRMS2 = @I_bHeaderMessages2,  ERRSTATE = @I_iTransactionError  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     JRNENTRY    = @I_iJournalEntry   else  update   GL10000  set     RCTRXSEQ        = @nRecurringTrxSeqNumber,  PSTGSTUS        = @I_sPostingStatus,  TRXSORCE        = @I_cAuditTrailCode,  RVTRXSRC        = @I_cReversingAuditTrailCode,  GLHDRMSG        = @I_bHeaderMessages,  GLHDRMS2        = @I_bHeaderMessages2,  LASTUSER        = @I_cUserID,  USWHPSTD        = @I_cUserID,  LSTDTEDT        = @sDefaultDate,  ERRSTATE        = @I_iTransactionError  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     JRNENTRY    = @I_iJournalEntry   if @@rowcount <> 1   begin  select @O_iErrorState = 20674  break   end    end    else  begin  if @I_tEditList = @TRUE   update   GL10100  set   GLHDRMSG = @I_bHeaderMessages,  GLHDRMS2 = @I_bHeaderMessages2,  ERRSTATE = @I_iTransactionError  where  BSNSFMID = @I_cBatchNumber  and JRNENTRY = @I_iJournalEntry   else  update   GL10100  set     TRXSORCE        = @I_cAuditTrailCode,  GLHDRMSG        = @I_bHeaderMessages,  GLHDRMS2        = @I_bHeaderMessages2,  PSTGSTUS        = @I_sPostingStatus,  LASTUSER        = @I_cUserID,  USWHPSTD        = @I_cUserID,  LSTDTEDT        = @sDefaultDate,  ERRSTATE        = @I_iTransactionError  where  BSNSFMID  = @I_cBatchNumber  and JRNENTRY        = @I_iJournalEntry   if @@rowcount <> 1   begin  select @O_iErrorState = 20675  break   end    end  end   if  @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return     
GO
GRANT EXECUTE ON  [dbo].[glpUpdatePostingStatus] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_Copy_Contract]  (@CONSTS  smallint,  @NEWCONSTS  smallint,  @CONTNBR  char(11),  @KEEPNUMBER tinyint,  @CUSTNMBR char(15),  @ADRSCODE  char(15),  @STRTDATE  datetime,  @CURRENTDATE datetime,  @CURRENTTIME datetime,  @NEWCONTNBR char(11) OUTPUT,  @OUTERROR integer OUTPUT) AS  declare   @USERID char(10),   @ENDDATE datetime,  @BILLENDDATE datetime,  @HOLD tinyint,  @BillToCustomer char(11),  @OldCustomer char(11),  @OldADRSCODE char(15),  @OldSLPRSNID char(15),  @OldCONTACT char(31),  @OldTAXSCHID char(15),  @OldTAXEXMT1 char(25),  @OldTAXEXMT2 char(25),  @BillToAddressCode char(15),  @OldNoteIndex numeric(19,5),  @NewNoteIndex numeric(19,5),  @MinDate datetime  set NOCOUNT ON   exec smGetMinDate @MinDate output  if @KEEPNUMBER = 1 and exists(select * from SVC00600 where CONSTS = @NEWCONSTS and CONTNBR = @CONTNBR) BEGIN  select @OUTERROR = 22000  return END IF @CONSTS = 4  BEGIN   select @NEWCONTNBR = @CONTNBR  return  END ELSE BEGIN  set ANSI_PADDING OFF  exec SVC_New_Contract_Number  @NEWCONTNBR  OUTPUT  set ANSI_PADDING ON END   select @USERID = SUSER_SNAME()  select @OldNoteIndex = NOTEINDX,  @OldCustomer = CUSTNMBR,  @OldADRSCODE = ADRSCODE,  @OldSLPRSNID = SLPRSNID,   @OldCONTACT  = CONTACT,   @OldTAXSCHID = TAXSCHID,  @OldTAXEXMT1 = TAXEXMT1,  @OldTAXEXMT2 = TAXEXMT2,  @ENDDATE = CASE   WHEN Contract_Period = 1 THEN DATEADD(dd,Contract_Length,@STRTDATE)  WHEN Contract_Period = 2 THEN DATEADD(mm,(Contract_Length - 1),@STRTDATE)  WHEN Contract_Period = 3 THEN DATEADD(mm,((Contract_Length * 12) - 1),@STRTDATE)  END,  @BILLENDDATE = CASE   WHEN BILPRD = 1 THEN DATEADD(dd,BILLNGTH,@STRTDATE)  WHEN BILPRD = 2 THEN DATEADD(mm,(BILLNGTH - 1),@STRTDATE)  WHEN BILPRD = 3 THEN DATEADD(mm,((BILLNGTH * 12) - 1),@STRTDATE)  END from SVC00600  where CONSTS = @CONSTS and CONTNBR = @CONTNBR IF @CUSTNMBR <> @OldCustomer BEGIN  select @OldSLPRSNID = SLPRSNID,   @OldCONTACT  = CNTCPRSN,   @OldTAXSCHID = TAXSCHID,  @OldTAXEXMT1 = TAXEXMT1,  @OldTAXEXMT2 = TAXEXMT2  from RM00101 where CUSTNMBR = @CUSTNMBR  END  select @BillToCustomer = IsNull(Bill_To_Customer,'') from SVC00950  where CUSTNMBR = @CUSTNMBR and ADRSCODE = @ADRSCODE if @BillToCustomer is null or @BillToCustomer = ''  select @BillToCustomer = @CUSTNMBR select @BillToAddressCode = PRBTADCD,  @HOLD = HOLD  from RM00101 where CUSTNMBR = @CUSTNMBR INSERT INTO SVC00600   ( CONSTS,  CONTNBR,  Contract_Transfer_Status,  Contract_Transfer_Date,  TAXSCHID,  priorityLevel,  ADRSCODE,  NOTEINDX,  TIMEZONE,  CONTPRC,  RENCNTTYP,  RENPRCSCHD,  PCTCRYFWD,  FRZEND,  FRXSTRT,  MXINCPCT,  BLKTIM,  VALTIM,  DSCPCTAM,  COMDLRAM,  COUNTRY,  PRCSTAT,  PORDNMBR,  DSCRIPTN,  PARTPCT,  LABPCT,  MISCPCT,  PMMSCPCT,  PMPRTPCT,  PMLABPCT,  VENDORID,  RETNAGAM,  RTNBILLD,  SLPRSNID,  COMMCODE,  COMPRCNT,  BILSTRT,  BILEND,  BILLNGTH,  BILPRD,  TOTAL,  FRSTBLDTE,  Last_Amount_Billed,  LSTBLDTE,  NBRCAL,  ACTCAL,  TOTVALCAL,  CONTACT,  CURNCYID,  NXTBLDTE,  CNTTYPE,  PRICSHED,  CUSTNMBR,  ENTDTE,  MINBIL,  MAXBIL,  MAXBILL,  AUTOREN,  MSTCNTRCT,  SRVTYPE,  BILFRRET,  TOTBIL,  PREPAID,  BILONDY,  BILCYC,  UOFM,  BILSTAT,  ENTTME,  STRTDATE,  ENDDATE,  CNTCOVPD_1,  CNTCOVPD_2,  CNTCOVPD_3,  CNTCOVPD_4,  CNTCOVPD_5,  CNTCOVPD_6,  CNTCOVPD_7,  Contract_Coverage_Period_1,  Contract_Coverage_Period_2,  Contract_Coverage_Period_3,  Contract_Coverage_Period_4,  Contract_Coverage_Period_5,  Contract_Coverage_Period_6,  Contract_Coverage_Period_7,  USECVPD_1,  USECVPD_2,  USECVPD_3,  USECVPD_4,  USECVPD_5,  USECVPD_6,  USECVPD_7,  Contract_Length,  Contract_Period,  Invoiced_Amount,  Liabiltiy_Reduction,  Amount_To_Invoice,  Liability_Amount,  Total_Liability_Amount,  NUMOFINV,  Quote_Status,  QUOEXPDA,  Credit_Hold,  TAXEXMT1,  TAXEXMT2,  New_PO_Required,  Contract_Renewal_Contact,  Source_Contract_Number,  Source_Contract_Type,  Contract_Response_Time,  Liability_Months,  Next_Liability_Date,  Last_Liability_Date,  Total_Liability_Billed,  Total_Unit,  Created_User_ID,  Source_User_ID,  SVC_Contract_Signed,  SVC_Liability_Type,  RETTYPE,  Location_Segment,  Bill_To_Customer,  SVC_Invoice_Detail,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  SVC_Bill_To_Address_Code,  DSCDLRAM,  SVC_Paid_Contract,  SVC_Discount_Recognized,  SVC_Discount_Remaining,  SVC_Discount_Next,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  DECPLACS,  TIME1,  RATECALC,  VIEWMODE,  ISMCTRX,  EXPNDATE,  DENXRATE,  MCTRXSTT,  ORIGVALTIM,  ORCOMAMT,  ORIGRETNAGAM,  ORIGRTNBILLD,  ORIGTOTAL,  ORIGLASTAmountBilled,  ORIGTOTVALCAL,  ORIGMINBIL,  ORIGMAXBIL,  Originating_Max_Billable,  ORIGTOTBIL,  Orig_Invoiced_Amount,  Orig_Amount_To_Invoice,  Orig_Liability_Amount,  OrigTotLiabilityAmount,  OrigTotLiabBilled,  Originating_Total_Unit,  ORDDLRAT,  OrigDiscountReceived,  OrigDiscountRemaining,  OrigDiscountNext,  SmoothInvoiceCalc,  SmoothRevenueCalc,  SVC_Use_Same_Number,  SVC_FO_ID,  SVC_Invoiced_Cost,  Orig_SVC_Invoiced_Cost ,  SVC_Evergreen_Contract,  SVC_Evergreen_RenewLimit,  SVC_Evergreen_Renewals,  svcBillingFrequency,  svcFrequencyQty )  select  @NEWCONSTS,  @NEWCONTNBR,  0,  @MinDate,  @OldTAXSCHID,  priorityLevel,  @ADRSCODE,  NOTEINDX,  TIMEZONE,  CONTPRC,  RENCNTTYP,  RENPRCSCHD,  PCTCRYFWD,  @MinDate,  @MinDate,  MXINCPCT,  0,  0,  DSCPCTAM,  COMDLRAM,  COUNTRY,  PRCSTAT,  CASE WHEN New_PO_Required > 0 THEN '.' ELSE PORDNMBR END,  DSCRIPTN,  PARTPCT,  LABPCT,  MISCPCT,  PMMSCPCT,  PMPRTPCT,  PMLABPCT,  VENDORID,  0,  0,  @OldSLPRSNID,  COMMCODE,  COMPRCNT,  @STRTDATE,  @BILLENDDATE,  BILLNGTH,  BILPRD,  0,  @MinDate,  0,  @MinDate,  0,  0,  0,  @OldCONTACT,  '',  @MinDate,  CNTTYPE,  CASE WHEN RENPRCSCHD <> '' THEN RENPRCSCHD ELSE PRICSHED END,  @CUSTNMBR,  @CURRENTDATE,  0,  0,  0,  AUTOREN,  MSTCNTRCT,  SRVTYPE,  BILFRRET,  0,  PREPAID,  BILONDY,  BILCYC,  UOFM,  0,  @CURRENTTIME,  @STRTDATE,  @ENDDATE,  CNTCOVPD_1,  CNTCOVPD_2,  CNTCOVPD_3,  CNTCOVPD_4,  CNTCOVPD_5,  CNTCOVPD_6,  CNTCOVPD_7,  Contract_Coverage_Period_1,  Contract_Coverage_Period_2,  Contract_Coverage_Period_3,  Contract_Coverage_Period_4,  Contract_Coverage_Period_5,  Contract_Coverage_Period_6,  Contract_Coverage_Period_7,  USECVPD_1,  USECVPD_2,  USECVPD_3,  USECVPD_4,  USECVPD_5,  USECVPD_6,  USECVPD_7,  Contract_Length,  Contract_Period,  0,  0,  0,  0,  0,  0,  Quote_Status,  QUOEXPDA,  @HOLD,  @OldTAXEXMT1,  @OldTAXEXMT2,  New_PO_Required,  Contract_Renewal_Contact,  @CONTNBR,  @CONSTS,  Contract_Response_Time,  0,  @MinDate,  @MinDate,  0,  0,  @USERID,  Created_User_ID,  '',  SVC_Liability_Type,  RETTYPE,  Location_Segment,  @BillToCustomer,  SVC_Invoice_Detail,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  @BillToAddressCode,  0,  0,  0,  0,  0,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  DECPLACS,  TIME1,  RATECALC,  VIEWMODE,  ISMCTRX,  EXPNDATE,  DENXRATE,  MCTRXSTT,  0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  SmoothInvoiceCalc,  SmoothRevenueCalc,  SVC_Use_Same_Number,  '',  SVC_Invoiced_Cost,  Orig_SVC_Invoiced_Cost ,  SVC_Evergreen_Contract,  SVC_Evergreen_RenewLimit,  SVC_Evergreen_Renewals,  svcBillingFrequency,  svcFrequencyQty from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR if @OldNoteIndex > 0  exec SVC_Copy_Note @OldNoteIndex, @NewNoteIndex output else  select @NewNoteIndex = @OldNoteIndex update SVC00600 set   Contract_Transfer_Status =  2,  Contract_Transfer_Date = @CURRENTDATE,  SVC_New_Contract_Number = @NEWCONTNBR,  NOTEINDX = @NewNoteIndex where CONSTS = @CONSTS and CONTNBR = @CONTNBR     
GO
GRANT EXECUTE ON  [dbo].[SVC_Copy_Contract] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE                        procedure [dbo].[aagValidateCodeSubLedAssign]  @I_cTableCode nvarchar(30) = null,   @I_nHdrID int = 0,   @I_nDistID    int = 0,   @I_nAcctClassID int = 0,  @I_nAssignID   int = 0,   @O_nTrxDim  char(15)= ''  output,   @O_nTrxDimCode char(30)= ''  output,  @O_nRelTrxDim char(15)= ''  output,   @O_nRelTrxDimCode char(30)= ''  output,  @IO_fValidCodeComb tinyint = 1 output AS  set @O_nTrxDim  = '' set @O_nTrxDimCode = '' set @O_nRelTrxDim = ''  set @O_nRelTrxDimCode = '' set @IO_fValidCodeComb = 1  begin  declare  @nTrxDimID int,   @nTrxDimCodeID int,  @nRelTrxDimID int,   @nRelTrxDimCodeID int  exec ('declare aaAssign cursor fast_forward FOR  select aaTrxDimID, aaTrxCodeID from ' + @I_cTableCode + ' where aaSubLedgerHdrID = ' + @I_nHdrID +   ' and aaSubLedgerDistID =' + @I_nDistID + ' and aaSubLedgerAssignID = ' + @I_nAssignID )   open aaAssign  fetch next from aaAssign into @nTrxDimID,@nTrxDimCodeID  WHILE @@fetch_status = 0  begin  exec ('declare aaCodes cursor fast_forward FOR   select aaTrxDimID, aaTrxCodeID from ' + @I_cTableCode + ' where aaSubLedgerHdrID = ' + @I_nHdrID +   ' and aaSubLedgerDistID =' + @I_nDistID + ' and aaSubLedgerAssignID = ' + @I_nAssignID )  open aaCodes  fetch next from aaCodes into @nRelTrxDimID,@nRelTrxDimCodeID  WHILE @@fetch_status = 0   begin  if @nTrxDimID <> @nRelTrxDimID   and @nTrxDimID <> 0 and @nTrxDimCodeID <> 0  and @nRelTrxDimID <> 0 and @nRelTrxDimCodeID <> 0  begin  exec aagValidateCodes  @nTrxDimID,   @nTrxDimCodeID,  @nRelTrxDimID,   @nRelTrxDimCodeID,  @IO_fValidCodeComb output  if @IO_fValidCodeComb = 0  begin  select @O_nTrxDim =  aaTrxDim from AAG00400 where aaTrxDimID = @nTrxDimID   select @O_nTrxDimCode = aaTrxDimCode from AAG00401 where aaTrxDimID = @nTrxDimID and aaTrxDimCodeID = @nTrxDimCodeID  select @O_nRelTrxDim = aaTrxDim from AAG00400 where aaTrxDimID = @nRelTrxDimID   select @O_nRelTrxDimCode = aaTrxDimCode from AAG00401 where aaTrxDimID = @nRelTrxDimID and aaTrxDimCodeID = @nRelTrxDimCodeID   close aaAssign  deallocate aaAssign  close aaCodes  deallocate aaCodes  return(0)  end  end  fetch next from aaCodes into @nRelTrxDimID,@nRelTrxDimCodeID  end  close aaCodes  deallocate aaCodes  fetch next from aaAssign into @nTrxDimID,@nTrxDimCodeID  end  close aaAssign  deallocate aaAssign  return(0) end    
GO
GRANT EXECUTE ON  [dbo].[aagValidateCodeSubLedAssign] TO [DYNGRP]
GO

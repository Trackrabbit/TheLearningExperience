SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create    procedure [dbo].[aagCreateVoideRecordInGLForBM]  @aaSubLedgerHdrID int,  @JRNENTRY int,  @lastDist int,  @GLPOSTDT datetime,  @CompanyID smallint as begin  declare @aaSubLedgerDistID int,  @aaGLWorkDistID  int,  @aaGLWorkHdrID    int,  @SQNCLINE numeric(19,5),  @SQNCLINE1 numeric(19,5),  @FUNLCURR char(15),  @CURRID char(15),  @Count int   select @FUNLCURR = FUNLCURR from MC40000   select  @aaSubLedgerDistID  = 0,  @aaGLWorkDistID    = 0,  @aaGLWorkHdrID  = 0,  @SQNCLINE=0  select @Count=(Min(DEX_ROW_ID)) from GL10001 where JRNENTRY = @JRNENTRY   exec DYNAMICS.dbo.aagGetNextID 10000, @CompanyID, @aaGLWorkHdrID output   insert into  AAG10000 (aaGLWorkHdrID,JRNENTRY,RCTRXSEQ,GLPOSTDT,aaTRXType,aaHdrErrors,Ledger_ID)  values(@aaGLWorkHdrID,@JRNENTRY,0,@GLPOSTDT,1,0,1 )  declare CSubDist Cursor for  Select aaSubLedgerDistID  from AAG20001  where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID > @lastDist  open CSubDist  fetch next from CSubDist into @aaSubLedgerDistID   while @@fetch_status = 0  begin  set @aaGLWorkDistID = @aaGLWorkDistID + 1   select @SQNCLINE= SQNCLINE from GL10001 a inner join AAG20001 b on  a.ACTINDX =b.ACTINDX   and b.aaSubLedgerHdrID =@aaSubLedgerHdrID  and b.aaSubLedgerDistID=@aaGLWorkDistID  and  a.DEX_ROW_ID=@Count  and a.JRNENTRY = @JRNENTRY  INSERT INTO AAG10001(aaGLWorkHdrID,aaGLWorkDistID,  INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,DECPLACS,FXDORVAR,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX,RATETPID,EXGTBLID,  XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,SQNCLINE,  aaCustID,aaVendID,aaSiteID,aaItemID,  aaCopyStatus,aaWinWasOpen,aaDistErrors,aaBrowseType,aaChangeDate, aaChangeTime)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,  INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,DECPLACS,dbo.aagFixedOrVar(ACTINDX),   DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,CURRNIDX,RATETPID,EXGTBLID,  XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,@SQNCLINE,  aaCustID,aaVendID,aaSiteID,aaItemID,  aaCopyStatus,1,0,aaBrowseType,convert(char(12), getdate(), 102),   convert(char(12), getdate(), 108)  from AAG20001 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID   INSERT INTO AAG10002(aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,aaAssignedPercent,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,DistRef,NOTEINDX,aaAliasID)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,aaSubLedgerAssignID,aaAssignedPercent,  DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,DistRef,NOTEINDX,aaAliasID  from AAG20002 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID    INSERT INTO AAG10003(aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,  aaTrxDimID,aaTrxCodeID,aaCodeErrors)  SELECT @aaGLWorkHdrID,@aaGLWorkDistID,aaSubLedgerAssignID,  aaTrxDimID,aaTrxCodeID,aaCodeErrors  from AAG20003 where aaSubLedgerHdrID = @aaSubLedgerHdrID and  aaSubLedgerDistID = @aaSubLedgerDistID  SELECT  @CURRID = CURNCYID from AAG10001 WHERE aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID =  @aaGLWorkDistID   if  (@FUNLCURR = @CURRID) or len(rtrim(ltrim(@CURRID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @aaGLWorkDistID  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @aaGLWorkDistID  and aaGLWorkAssignID > 0  end   select @Count=@Count+1  fetch next from CSubDist into @aaSubLedgerDistID  end  close CSubDist  deallocate CSubDist end    
GO
GRANT EXECUTE ON  [dbo].[aagCreateVoideRecordInGLForBM] TO [DYNGRP]
GO

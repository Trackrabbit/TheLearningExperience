SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[SVC_MailProcessLOG] @msg_id varchar(64)  as declare @subject varchar(255) declare @status int declare @originator varchar(255) declare @cc_list varchar(255) declare @query varchar(255) declare @custname varchar(60) declare @password varchar(255) declare @CUSTOMER varchar(255) declare @PASSWORD2 varchar(255) declare @KEYWORD2 varchar(255) declare @SERIAL varchar(255) declare @DESCR varchar(255) declare @EQUIPID integer declare @CUSTREF varchar(255) declare @CALLNBR varchar(255) declare @EMAIL varchar(255) declare @CONTACTe varchar(255) declare @PHONEe varchar(20) declare @separator varchar(3) declare @dbuse varchar(30) declare @filename varchar(255) declare @filepath varchar(255) declare @TempFile varchar(255) declare @result int declare @pathSep int declare @CommandLine varchar(255) declare @contact varchar(30) declare @phone varchar(14) declare @addressid varchar(15) declare @svcdesc varchar(60) declare @noteindex int declare @date datetime declare @time datetime declare @address1 varchar(31) declare @address2 varchar(31) declare @city varchar(31) declare @statecd varchar(5)  declare @zip varchar(11)  declare @Err integer  print 'PROCESS LOG' select @separator=CHAR(9) select @dbuse = DB_NAME() set ANSI_PADDING ON exec @status = master..xp_readmail  @msg_id=@msg_id,  @originator=@originator output,  @cc_list=@cc_list output,  @subject=@subject output,  @message=@query output,  @peek='true',   @suppress_attach='false',  @attachments=@TempFile output exec @status = SVC_Mail_parse_for_keywords @query,   @CUSTOMER out,   @PASSWORD2 out,   @KEYWORD2 out,   @SERIAL out,   @DESCR out,   @CUSTREF out,  @EMAIL out,  @CONTACTe out,  @PHONEe out select @svcdesc = substring(@DESCR,1,60) select @custname=CUSTNAME,   @contact=CNTCPRSN,  @phone=PHONE1,  @addressid=ADRSCODE,  @password=USERDEF2  from RM00101  where CUSTNMBR = @CUSTOMER select @CONTACTe = isnull(@CONTACTe,@contact) select @PHONEe = isnull(@PHONEe,@phone)  if @CUSTOMER is null or @custname is null  begin  exec SVC_SendMail @originator, 'Invalid Customer',  'The customer you entered is not valid.'  return  end  if @password <> @PASSWORD2 or @password is null or @PASSWORD2 is null  begin  exec SVC_SendMail @originator, 'Invalid Password',  'The password you entered is not valid.'  return  end  if @EMAIL is null  begin  exec SVC_SendMail @originator, 'Empty E-Mail Adddress',  'You MUST supply an e-mail address. Use EMAIL:xxxxx@yyyy.'  return  end  if @SERIAL is not NULL  select @date = CONVERT(char(10),GETDATE(),102) + ' 00:00:00'  select @time = '01/01/1900 ' + CONVERT(char(5),GETDATE(),108)  select @EQUIPID=EQUIPID   from SVC00300   where SVC00300.SERLNMBR = @SERIAL and SVC00300.CUSTNMBR = @CUSTOMER  exec  @status = SVC_ISC_Add_Call   @custnmbr=@CUSTOMER,  @svcdescr = @svcdesc,  @pordnmbr=@CUSTREF,  @equipid=@EQUIPID,  @rqstdate=@date,  @rqsttime=@time,  @txtfield=value,  @CONTNBR = '',  @callnbr=@CALLNBR out,  @Serial=@SERIAL,  @Err=0   select @noteindex = NOTEINDX from SVC00200 where CALLNBR = @CALLNBR and SRVRECTYPE = 2  exec SVC_UpdateTextObject @noteindex OUTPUT, @date,@time,@DESCR  update SVC00200 set CNTCPRSN = @CONTACTe, PHONE1 = @PHONEe where CALLNBR = @CALLNBR and SRVRECTYPE = 2 select @subject = 'Service Call Number ' + @CALLNBR + 'Logged For ' + @custname + ' - ' + @addressid + ' : ' + @CONTACTe + ' Phone: ' + @PHONEe select @pathSep = CHARINDEX('\',REVERSE(@TempFile)) select @filepath = Reverse(SUBSTRING(REVERSE(@TempFile),@pathSep,255)) select @pathSep = CHARINDEX('.',REVERSE(@TempFile)) select @filename = Reverse(SUBSTRING(REVERSE(@TempFile),1,@pathSep)) select @CommandLine = 'ren ' + @TempFile + ' ' + RTRIM(@CALLNBR) + @filename EXEC @result = master..xp_cmdshell @CommandLine exec @status = master..xp_sendmail  @recipients=@EMAIL,  @copy_recipients=@cc_list,  @message='A new Service Call has been logged per your request',  @subject=@subject,  @separator=@separator,  @width=256,  @no_output='false',  @echo_error='true',  @dbuse=@dbuse    
GO
GRANT EXECUTE ON  [dbo].[SVC_MailProcessLOG] TO [DYNGRP]
GO

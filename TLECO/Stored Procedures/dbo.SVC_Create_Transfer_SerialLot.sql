SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE Procedure [dbo].[SVC_Create_Transfer_SerialLot]  (  @TransferNumber char(15),  @TransferLine int,  @Location char(11),  @Serial char(21),  @ReceiptDate datetime,  @LotQTY numeric(19,5)  ) As declare @Item char(31),  @ToLocation char(11),  @SRVRECTYPE smallint,  @CALLNBR char(15),  @EQPLINE integer,  @LINITMTYP char(3),  @LNITMSEQ int,  @QTYTYPE smallint ,  @SERLTQTY numeric(19,5) ,  @SLTSQNUM int ,  @DATERECD datetime ,  @DTSEQNUM int,  @UNITCOST numeric(19,5) ,  @TRXSORCE char(13) ,  @POSTED tinyint ,  @OVRSELT smallint ,  @WO_RecType smallint,  @WO_Number char(11),  @IVIndex integer,  @OffsetIndex integer,  @newIVIndex integer,  @newOffsetIndex integer,  @STATUS smallint,  @CurrencyIndex smallint,  @FromBin char(15), @ToBin char(15) declare @EnableBin tinyint declare @MinDate datetime declare @CMPNTSEQ int, @QtyInBaseUOM numeric(19,5)  if not exists(select * from SVC00701 where ORDDOCID = @TransferNumber and LNITMSEQ = @TransferLine)  return  exec smGetMinDate @MinDate output  set nocount on  if @Serial is null or @Serial = ''   return if @Location is null or @Location = ''   return  select @EnableBin = ENABLEMULTIBIN from IV40100 select @ToLocation = TRNSTLOC from SVC00701 where ORDDOCID = @TransferNumber and LNITMSEQ = @TransferLine  select  @Item = ITEMNMBR,  @WO_Number = isnull(WORKORDNUM,''),  @WO_RecType = isnull(WORECTYPE,0),  @SRVRECTYPE = IsNull(SRVRECTYPE,0),  @CALLNBR = IsNull(CALLNBR,''),  @EQPLINE = IsNull(EQPLINE,0),  @LINITMTYP = IsNull(LINITMTYP,''),  @LNITMSEQ = IsNull(SERVLITEMSEQ,0),  @CMPNTSEQ = isnull(LNSEQNBR,0),  @QtyInBaseUOM = isnull(QTYBSUOM,1)  from SVC00701 where ORDDOCID = @TransferNumber and LNITMSEQ = @TransferLine if @Item > ''  BEGIN  if @EnableBin = 1   exec SVC_Bin_GetDefault @Item, @ToLocation, 'I', @ToBin output  if @ToBin = '' or @ToBin is null  select @ToBin = 'AUTOCREATE'   select @UNITCOST = CURRCOST, @IVIndex = IVIVINDX, @OffsetIndex = IVIVINDX from IV00101 where ITEMNMBR = @Item  if exists(select * from IV00300  where ITEMNMBR = @Item and LOTNUMBR = @Serial and LOCNCODE = @Location and DATERECD = @ReceiptDate)  BEGIN   select @UNITCOST = UNITCOST,  @DATERECD = DATERECD,  @DTSEQNUM = DTSEQNUM,  @FromBin = BIN,  @QTYTYPE = QTYTYPE  from IV00300  where ITEMNMBR = @Item and LOTNUMBR = @Serial and LOCNCODE = @Location and DATERECD = @ReceiptDate  update IV00300  set ATYALLOC = @LotQTY, LTNUMSLD = 1  where  ITEMNMBR = @Item and LOTNUMBR = @Serial and LOCNCODE = @Location and DATERECD = @ReceiptDate  if @EnableBin = 1   update IV00112 set ATYALLOC = ATYALLOC + @LotQTY  where  ITEMNMBR = @Item and QTYTYPE = @QTYTYPE and LOCNCODE = @Location and BIN = @FromBin  END   ELSE  BEGIN  select @DATERECD = CONVERT(varchar(10),GETDATE(),102) + ' 00:00:00',  @DTSEQNUM =1  END  if not exists(select * from SVC00702 where ORDDOCID = @TransferNumber and TRANSLINESEQ = @TransferLine and SERLTNUM = @Serial and ITEMNMBR = @Item)  BEGIN  select @SERLTQTY = @LotQTY,  @TRXSORCE = '0',  @QTYTYPE = 1,  @STATUS = 1,  @OVRSELT = 0,  @POSTED = 0  select @SLTSQNUM = isnull(MAX(SLTSQNUM),0)+1 from SVC00702  where ORDDOCID = @TransferNumber and TRANSLINESEQ = @TransferLine   insert into SVC00702 with (rowlock)  VALUES( @TransferNumber,  @TransferLine,  @SRVRECTYPE,  @CALLNBR,  @EQPLINE,  @LINITMTYP,  @LNITMSEQ,  @QTYTYPE,  @Serial,  @SERLTQTY,  @SLTSQNUM,  @DATERECD,  @DTSEQNUM,  @UNITCOST,  @Item,  @TRXSORCE,  @POSTED,  @OVRSELT,  @STATUS,  isnull(@FromBin,''), isnull(@ToBin,'') ,  @MinDate,@MinDate)  update SVC00700 set STATUS = 1 where ORDDOCID = @TransferNumber  update SVC00701 set STATUS = 1, QTYFULFI = QTYFULFI + @LotQTY/@QtyInBaseUOM where ORDDOCID = @TransferNumber and LNITMSEQ = @TransferLine  if @IVIndex = 0 or @IVIndex is null  select @IVIndex = ACTINDX from SY01100 where SERIES=5 and SEQNUMBR = 100  if @OffsetIndex = 0 or @OffsetIndex is null  select @OffsetIndex = ACTINDX from SY01100 where SERIES=5 and SEQNUMBR = 100  exec SVC_LocationSegmentReplace @IVIndex, @Location, @newIVIndex output  exec SVC_LocationSegmentReplace @OffsetIndex, @ToLocation, @newOffsetIndex output  exec SVC_Set_Transfer_Line_Dist @TransferNumber,@TransferLine,@newIVIndex,@newOffsetIndex,@UNITCOST,@UNITCOST,0  END END return    
GO
GRANT EXECUTE ON  [dbo].[SVC_Create_Transfer_SerialLot] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smAccountMasterUpdateTrigger] as  exec ('create trigger dbo.glpAccountMasterUpdateTrigger on GL00100 for update as declare @MS_ITEM_3 int,  @cNormal varchar(255),  @cClearing varchar(255),  @cQuick varchar(255),  @cInterID char(5),  @cCompanyName char(65)  select @MS_ITEM_3 =  power(2, 26) select @cNormal = ''GL_Normal'' select @cClearing = ''GL_Clearing'' select @cQuick = ''GL_Business''  select @cInterID = DB_Name() select   @cCompanyName = CMPNYNAM  from   DYNAMICS..SY01500  where   INTERID = @cInterID  if  update (ACTIVE)   or  update (ACCTTYPE) or  update (FXDORVAR) or  update (BALFRCLC) or  update (PSTNGTYP) or  update (DECPLACS) begin  update   wkPostingValidationState   set  GLBCHVAL = GLBCHVAL | @MS_ITEM_3   insert   wkPostingValidationState (  BCHSOURC,  BACHNUMB,  GLBCHVAL )  select  A.BCHSOURC,  A.BACHNUMB,  @MS_ITEM_3   from  SY00500 A left outer join wkPostingValidationState B on   (A.BCHSOURC = B.BCHSOURC and A.BACHNUMB = B.BACHNUMB)  where  ( A.BCHSOURC = @cNormal  or A.BCHSOURC = @cClearing  or A.BCHSOURC = @cQuick)   and B.BCHSOURC IS NULL   insert   wkPostingValidationState (  BCHSOURC,  BACHNUMB,   GLBCHVAL )  select distinct  A.BCHSOURC,  A.BACHNUMB,  @MS_ITEM_3   from  DYNAMICS..SY00800 A left outer join wkPostingValidationState B on   (A.BCHSOURC = B.BCHSOURC and A.BACHNUMB = B.BACHNUMB)   where  ( A.BCHSOURC = @cNormal  or A.BCHSOURC = @cClearing  or A.BCHSOURC = @cQuick)   and B.BCHSOURC IS NULL  and  A.CMPNYNAM = @cCompanyName   end  if  update (ACTALIAS) or  update (ACTDESCR) or  update (ACCATNUM) begin  update GL00100F1  set GL00100F1.ACTALIAS = inserted.ACTALIAS,  GL00100F1.ACTDESCR = inserted.ACTDESCR,  GL00100F1.ACCATNUM = inserted.ACCATNUM  from  inserted  where  inserted.ACTINDX = GL00100F1.ACTINDX   update GL00100F2  set GL00100F2.ACTALIAS = inserted.ACTALIAS,  GL00100F2.ACTDESCR = inserted.ACTDESCR,  GL00100F2.ACCATNUM = inserted.ACCATNUM  from  inserted  where  inserted.ACTINDX = GL00100F2.ACTINDX   update GL00100F3  set GL00100F3.ACTALIAS = inserted.ACTALIAS,  GL00100F3.ACTDESCR = inserted.ACTDESCR,  GL00100F3.ACCATNUM = inserted.ACCATNUM  from  inserted  where  inserted.ACTINDX = GL00100F3.ACTINDX   update GL00100F4  set GL00100F4.ACTALIAS = inserted.ACTALIAS,  GL00100F4.ACTDESCR = inserted.ACTDESCR,  GL00100F4.ACCATNUM = inserted.ACCATNUM  from  inserted  where  inserted.ACTINDX = GL00100F4.ACTINDX end  declare @cnt int declare @myproc varchar(8000) declare @act as varchar(1000) declare @natact as varchar(1000) declare @numsegs int declare @natseg int DECLARE @SEGLENGTH INT  select @numsegs = (select count(*) from SY00300) select @natseg = (select SGMTNUMB from SY00300 where MNSEGIND = 1) select @cnt = 1  select * into #temp002 from inserted  select @act = '''' while @cnt <= @numsegs begin   select @SEGLENGTH =LOFSGMNT from SY00300 where SGMTNUMB = @cnt   select @act = @act + '' SUBSTRING(i.ACTNUMBR_'' + ltrim(STR(@cnt)) + '',1, '' + str(@SEGLENGTH) + '' ) ''  if @cnt < @numsegs  begin  select @act = @act + '' + ''  end  select @cnt = @cnt + 1 end  select @SEGLENGTH =LOFSGMNT from SY00300 where SGMTNUMB = @natseg  select @natact = ''''  select @natact = @natact + '' substring(i.ACTNUMBR_'' + ltrim(str(@natseg)) + '',1,'' + str(@SEGLENGTH) + '')''   select @cnt = 1  while @cnt <= @numsegs begin  if @cnt <> @natseg   begin  select @SEGLENGTH =LOFSGMNT from SY00300 where SGMTNUMB = @cnt    select @natact = @natact + '' +  substring(i.ACTNUMBR_'' + ltrim(str(@cnt)) + '',1,'' + str(@SEGLENGTH) + '')''   end   select @cnt = @cnt + 1 end  select @myproc = ''UPDATE frl_acct_code   SET  acct_id = i.ACTINDX, entity_num = 1,   acct_code = '' + @act + '' ,   acct_type =  i.ACCTTYPE, acct_status = i.ACTIVE ,   acct_desc = i.ACTDESCR , normal_bal = i.TPCLBLNC + 1 ,   acct_group = i.PSTNGTYP * 3 + 1 ,   nat_seg_code = '' + @natact + '' ,   rollup_level = 0,   activated_date = i.CREATDDT,   last_used_date =i. MODIFDT ,  deactivated_date = NULL,   modify_flag = 0   FROM #temp002 i where  acct_id = i.ACTINDX''  exec (@myproc) ')    
GO
GRANT EXECUTE ON  [dbo].[smAccountMasterUpdateTrigger] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[seeSVCServiceCallCountsDetail_Create] @iLanguageID int   as   set nocount on   declare @sqldropstring varchar(400),   @sqlstring1 varchar(8000),   @sqlstring2 varchar(8000),   @sqlstring3 varchar(8000),   @sqlstring4 varchar(8000),   @sqlstring5 varchar(8000),   @sqlstring6 varchar(8000),   @sqlstring7 varchar(8000),   @sqlstring8 varchar(8000),   @sqlstring9 varchar(8000),   @sqlstring10 varchar(8000),   @sqljoinstring varchar(8000),   @sqlaccessstring varchar(2000),   @tNumberSegments int,   @tSegment int,   @I_iDictID int,   @I_iLangID int,   @I_iMessageNumber int,   @I_iAliasMessageNumber int,   @I_iIntegerValue int,  @Service_Record_Type varchar(255), @Service_Type varchar(255), @Entry_Date varchar(255)  select @I_iDictID = 949 select @I_iMessageNumber = 26001 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Service_Record_Type output   select @I_iDictID = 949 select @I_iMessageNumber = 26003 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Service_Type output  select @I_iDictID = 949 select @I_iMessageNumber = 26021 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Entry_Date output    select @sqldropstring =   'IF EXISTS (SELECT * FROM   sys.objects WHERE  object_id = OBJECT_ID(N''[dbo].[seeSVCServiceCallCountsDetail]'') AND type in ( N''P'', N''PC'' ))  ' +   '  DROP PROCEDURE [dbo].[seeSVCServiceCallCountsDetail]  '   select @sqlstring1 =   'create procedure dbo.seeSVCServiceCallCountsDetail '+   ' @DocumentDate datetime = null, '+   ' @ServiceType varchar(10) = null '+   'as '+   'if @DocumentDate is null  '+   ' if @ServiceType is null '+   ' select *  '+   ' from FieldServiceCalls where ['+@Service_Record_Type+'] = ''Open'' '+   ' else '+   ' select *  '+   ' from FieldServiceCalls '+   ' where ['+@Service_Type+'] = @ServiceType and ['+@Service_Record_Type+'] = ''Open'' '+   'if @DocumentDate is not null  '+   ' if @ServiceType is null '+   ' select *  '+   ' from FieldServiceCalls '+   ' where (['+@Entry_Date+'] >= @DocumentDate ) and ['+@Service_Record_Type+'] = ''Open'' '+   ' else '+   ' select *  '+   ' from FieldServiceCalls '+   ' where ['+@Service_Type+'] = @ServiceType and ['+@Service_Record_Type+'] = ''Open'' '+   ' and (['+@Entry_Date+'] >= @DocumentDate ) '  select @sqlaccessstring =   'GRANT execute ON [dbo].[seeSVCServiceCallCountsDetail] TO [rpt_dispatcher], [rpt_executive], [rpt_power user] '   exec (@sqldropstring)   exec (@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10)   exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[seeSVCServiceCallCountsDetail_Create] TO [DYNGRP]
GO

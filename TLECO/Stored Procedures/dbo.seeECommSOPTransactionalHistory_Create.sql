SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[seeECommSOPTransactionalHistory_Create] @iLanguageID int   as   set nocount on   declare @sqldropstring varchar(400),   @sqlstring1 varchar(8000),   @sqlstring2 varchar(8000),   @sqlstring3 varchar(8000),   @sqlstring4 varchar(8000),   @sqlstring5 varchar(8000),   @sqlstring6 varchar(8000),   @sqlstring7 varchar(8000),   @sqlstring8 varchar(8000),   @sqlstring9 varchar(8000),   @sqlstring10 varchar(8000),   @sqljoinstring varchar(8000),   @sqlaccessstring varchar(2000),   @tNumberSegments int,   @tSegment int,   @I_iDictID int,   @I_iLangID int,   @I_iMessageNumber int,   @I_iAliasMessageNumber int,   @I_iIntegerValue int,  @SOP_Type varchar(255), @SOP_Number varchar(255), @Document_ID varchar(255), @Item_Number varchar(255), @Document_Date varchar(255), @Master_Number varchar(255), @Salesperson_ID varchar(255), @Customer_Number varchar(255), @Customer_Name varchar(255), @Item_Description varchar(255), @Line_Item_Sequence varchar(255), @Component_Sequence varchar(255), @Location_Code varchar(255), @U_Of_M varchar(255), @Item_Tax_Schedule_ID varchar(255), @QTY varchar(255), @QTY_To_Invoice varchar(255), @Extended_Cost varchar(255), @Extended_Price varchar(255), @Tax_Amount varchar(255), @Void_Status varchar(255), @Customer_Number_For_DrillBack varchar(255), @SOP_Number_For_DrillBack varchar(255), @Item_Number_For_DrillBack varchar(255)  select @I_iDictID = 1493 select @I_iMessageNumber = 22600 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @SOP_Type output   select @I_iDictID = 1493 select @I_iMessageNumber = 22601 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @SOP_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 22605 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_ID output   select @I_iDictID = 1493 select @I_iMessageNumber = 24022 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 22606 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Date output   select @I_iDictID = 1493 select @I_iMessageNumber = 22641 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Master_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 22687 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Salesperson_ID output    select @I_iDictID = 1493 select @I_iMessageNumber = 22637 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Customer_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 22638 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Customer_Name output   select @I_iDictID = 1493 select @I_iMessageNumber = 24023 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Description output   select @I_iDictID = 1493 select @I_iMessageNumber = 24026 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Line_Item_Sequence output   select @I_iDictID = 1493 select @I_iMessageNumber = 24008 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Component_Sequence output   select @I_iDictID = 1493 select @I_iMessageNumber = 24027 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Location_Code output   select @I_iDictID = 1493 select @I_iMessageNumber = 24084 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @U_Of_M output   select @I_iDictID = 1493 select @I_iMessageNumber = 24024 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Tax_Schedule_ID output   select @I_iMessageNumber = 24046 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @QTY output   select @I_iDictID = 1493 select @I_iMessageNumber = 24068 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @QTY_To_Invoice output   select @I_iDictID = 1493 select @I_iMessageNumber = 24078 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Extended_Cost output   select @I_iDictID = 1493 select @I_iMessageNumber = 24079 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Extended_Price output   select @I_iDictID = 1493 select @I_iMessageNumber = 24080 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Tax_Amount output   select @I_iDictID = 1493 select @I_iMessageNumber = 22742 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Void_Status output   select @I_iDictID = 1493 select @I_iMessageNumber = 22637 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Customer_Number_For_DrillBack output   select @I_iDictID = 1493 select @I_iMessageNumber = 22601 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @SOP_Number_For_DrillBack output   select @I_iDictID = 1493 select @I_iMessageNumber = 24022 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Item_Number_For_DrillBack output    select @sqldropstring =   'IF EXISTS (SELECT * FROM   sys.objects WHERE  object_id = OBJECT_ID(N''[dbo].[seeECommSOPTransactionalHistory]'') AND type in ( N''P'', N''PC'' ))  ' +   '  DROP PROCEDURE [dbo].[seeECommSOPTransactionalHistory]  '   select @sqlstring1 =   'CREATE procedure [dbo].[seeECommSOPTransactionalHistory]  '+   '@SORTBY char(15),       '+   '@i_CUSTNMBR_RS char(15) = '''',    '+   '@i_CUSTNMBR_RE char(15) = '''',    '+   '@i_DOCDATE_RS datetime = NULL,    '+   '@i_DOCDATE_RE datetime = NULL,    '+   '@i_DOCNUMBR_RS char(21) = '''',    '+   '@i_DOCNUMBR_RE char(21) = '''',    '+   '@TXDETAILS tinyint = 0,      '+   '@PYMDEPOTS tinyint = 0,      '+   '@USRDEFIND tinyint = 0,      '+   '@DETAIL tinyint = 0       '+   'as '+   'set nocount on '+   'declare '+   '@SOPNUMBE char(21),  '+   '@SOPTYPE char(15), '+   '@ITEMNMBR char(31), '+   '@MY_DEX_ROW int, '+   '@x varchar(1000), '+   '@PRRTNTAL numeric(19,5), '+   '@PRINVTAL numeric(19,5), '+   '@CSINVTAL numeric(19,5), '+   '@CSRTNTAL numeric(19,5), '+   '@EPINVTAL numeric(19,5), '+   '@EPRTNTAL numeric(19,5), '+   '@TOTFRGHTINV numeric(19,5), '+   '@TOTFRGHTRTN numeric(19,5), '+   '@TOTTRDICRTN numeric(19,5), '+   '@TOTTRDICINV numeric(19,5), '+   '@TOTLMISCRTN numeric(19,5), '+   '@TOTLMISCINV numeric(19,5), '+   '@TOTALTAXRTN numeric(19,5), '+   '@TOTALTAXINV numeric(19,5), '+   '@CASHDEP numeric(19,5), '+   '@CASHPAY numeric(19,5), '+   '@CHECKDEP numeric(19,5), '+   '@CHECKPAY numeric(19,5), '+   '@CCDEP numeric(19,5), '+   '@CCPAY numeric(19,5), '+   '@ECommInvoiceDoc varchar(15), '+   '@ECommOrderDoc varchar(15),  '+   '@OrderTypeText char(15), '+   '@InvoiceTypeText char(15) '+   'Set @OrderTypeText = dbo.DYN_FUNC_SOP_Type(2) '+   'Set @InvoiceTypeText = dbo.DYN_FUNC_SOP_Type(3) '+   'set @x = '''' '   select @sqlstring2 =   'If OBJECT_ID(''tempdb..#SOPDOCSTATUS'') is  NULL '+   ' Begin '+   '  create table #SOPDOCSTATUS ( '+   '   SOPNUMBE char(21) not null default '''', '+   '   SOPTYPE char(15) not null default '''', '+   '   DOCID char(15) not null default '''', '+   '   DOCDATE datetime not null default ''01/01/1900'', '+   '   MSTRNUMB int not null default 0, '+   '   SLPRSNID char(15) not null default '''', '+   '   CUSTNMBR char(15) not null default '''', '+   '   CUSTNAME char(65) not null default '''', '+   '   ITEMNMBR char(31) not null default '''', '+   '   ITEMDESC char(101) not null default '''', '+   '   ITEMTYPE tinyint not null default 0, '+   '   ITMTRKOP tinyint not null default 0, '+   '   LNITMSEQ int not null default 0, '+   '   CMPNTSEQ int not null default 0, '+   '   LOCNCODE char(11) not null default '''', '+   '   UofM char(9) not null default '''', '+   '   ITMTSHID char(15) not null default '''', '+   '   QUANTITY numeric(19,5) not null default 0.00, '+   '   QTYTOINV numeric(19,5) not null default 0.00, '+   '   EXTDPRIC numeric(19,5) not null default 0.00, '+   '   EXTDCOST numeric(19,5) not null default 0.00, '+   '   PROFIT   numeric(19,5) not null default 0.00, '+   '   TAXAMNT numeric(19,5) not null default 0.00, '+   '   PMARGIN  numeric(19,5) not null default 0.00, '+   '   VOIDSTTS char(15) not null default '''', '+   '   SERLTNUM char(1000) not null default '''', '+   '   EPINVTAL numeric(19,5) not null default 0.00, '+   '   EPRTNTAL numeric(19,5) not null default 0.00, '+   '   CSINVTAL numeric(19,5) not null default 0.00, '+   '   CSRTNTAL numeric(19,5) not null default 0.00, '+   '   PRINVTAL numeric(19,5) not null default 0.00, '+   '   PRRTNTAL numeric(19,5) not null default 0.00, '+   '   TOTFRGHT numeric(19,5) not null default 0.00, '+   '   TOTTRDIC numeric(19,5) not null default 0.00, '+   '   TOTLMISC numeric(19,5) not null default 0.00, '+   '   TOTALTAX numeric(19,5) not null default 0.00, '+   '   TOTLCASH numeric(19,5) not null default 0.00, '+   '   TOTLCHCK numeric(19,5) not null default 0.00, '+   '   TOTLCRDC numeric(19,5) not null default 0.00, '+   '   PYMTTYPE char(25) not null default '''', '+   '   PMNTDATE datetime not null default ''01/01/1900'', '+   '   PMNTCRCY char(12) not null default '''', '+   '   PMNTNUMB char(21) not null default '''', '+   '   CARDNAME char(15) not null default '''', '+   '   PMNTAMNT numeric(19,5) not null default 0.00, '+   '   HIDEDETL tinyint not null default 0, '+   '   HIDESERL tinyint not null default 0, '+   '   MY_DEX_ROW int Identity (1,1), '+   '   CustomerDrillBack varchar(1000), '+   '   SOPNumberDrillBack varchar(1000), '+   '   ItemNumberDrillback varchar(1000) ) '+   ' End '+   ' delete #SOPDOCSTATUS '   select @sqlstring3 =   'SELECT @ECommInvoiceDoc = ECOMMINVID, @ECommOrderDoc = ECOMMORDID FROM DYNAMICS..DO40100 do '+   'INNER JOIN DYNAMICS..SY01500 sy ON sy.CMPANYID = do.CMPANYID AND INTERID = db_name() '+   ' insert into #SOPDOCSTATUS ( SOPNUMBE,SOPTYPE,DOCID,DOCDATE,MSTRNUMB,SLPRSNID,CUSTNMBR,CUSTNAME, '+   '        ITEMNMBR,ITEMDESC,ITEMTYPE,ITMTRKOP,LNITMSEQ,CMPNTSEQ,LOCNCODE,UofM,ITMTSHID,QUANTITY,QTYTOINV,EXTDPRIC,EXTDCOST,PROFIT,TAXAMNT,PMARGIN,VOIDSTTS, '+   '        CustomerDrillBack, SOPNumberDrillBack, ItemNumberDrillback) '+   ' select a.['+@SOP_Number+'], a.['+@SOP_Type+'], a.['+@Document_ID+'], a.['+@Document_Date+'], a.['+@Master_Number+'], a.['+@Salesperson_ID+'], a.['+@Customer_Number+'],a.['+@Customer_Name+'], '+   '   b.['+@Item_Number+'], b.['+@Item_Description+'], c.ITEMTYPE, c.ITMTRKOP, b.['+@Line_Item_Sequence+'], b.['+@Component_Sequence+'], '+   '   b.['+@Location_Code+'], b.['+@U_Of_M+'], b.['+@Item_Tax_Schedule_ID+'], b.['+@QTY+'], b.['+@QTY_To_Invoice+'], b.['+@Extended_Price+'], b.['+@Extended_Cost+'], '+   '   cast(b.['+@Extended_Price+'] - b.['+@Extended_Cost+'] as numeric(19,2)) as PROFIT, a.['+@Tax_Amount+'], '+   '   case when b.['+@Extended_Price+'] = 0.00 then 0.00 else cast((b.['+@Extended_Price+'] - b.['+@Extended_Cost+']) / b.['+@Extended_Price+'] as numeric(19,5)) end, '+   '   a.['+@Void_Status+'], a.['+@Customer_Number_For_DrillBack+'], a.['+@SOP_Number_For_DrillBack+'], b.['+@Item_Number_For_DrillBack +'] '+   ' from SalesTransactions a, SalesLineItems b, IV00101 c '+   ' where a.['+@SOP_Number+'] = b.['+@SOP_Number+'] and '+   '   a.['+@SOP_Type+'] = b.['+@SOP_Type+'] and '+   '   a.['+@Document_ID+'] in (@ECommInvoiceDoc, @ECommOrderDoc) AND '+   '   a.['+@SOP_Type+'] in (@OrderTypeText, @InvoiceTypeText) and '+   '   b.['+@Item_Number+'] = c.ITEMNMBR and '+   '   a.['+@SOP_Number+'] between (CASE WHEN ((@i_DOCNUMBR_RS is null) OR (LEN(@i_DOCNUMBR_RS) = 0)) THEN a.['+@SOP_Number+'] ELSE  @i_DOCNUMBR_RS END) and (CASE WHEN ((@i_DOCNUMBR_RE is null) OR (LEN(@i_DOCNUMBR_RE) = 0)) THEN a.['+@SOP_Number+'] ELSE @i_DOCNUMBR_RE END)and '+   '   a.['+@Document_Date+'] between (CASE WHEN (@i_DOCDATE_RS is null) THEN a.['+@Document_Date+'] ELSE  @i_DOCDATE_RS END) and (CASE WHEN (@i_DOCDATE_RE is null) THEN a.['+@Document_Date+'] ELSE @i_DOCDATE_RE END) '+   ' DECLARE SERIAL_CHECK CURSOR FOR '+   ' SELECT distinct SOPNUMBE, SOPTYPE, ITEMNMBR, MY_DEX_ROW  '+   ' FROM #SOPDOCSTATUS '+   ' where ITMTRKOP = 2 '+   ' order by SOPNUMBE, SOPTYPE, ITEMNMBR '+   ' OPEN SERIAL_CHECK '+   ' FETCH NEXT FROM SERIAL_CHECK '+   ' INTO @SOPNUMBE, @SOPTYPE, @ITEMNMBR, @MY_DEX_ROW '+   ' WHILE @@FETCH_STATUS = 0 '+   '  Begin '+   '   select @x = @x + '+   '       case  '+   '        when @x = '''' then rtrim(SERLTNUM) '+   '        else ''; '' + rtrim(SERLTNUM) '+   '       end '+   '   from SOP10201 where SOPNUMBE = @SOPNUMBE and dbo.DYN_FUNC_SOP_Type(SOPTYPE) = @SOPTYPE and ITEMNMBR = @ITEMNMBR '+   '   update #SOPDOCSTATUS set SERLTNUM = @x where MY_DEX_ROW = @MY_DEX_ROW '+    '  FETCH NEXT FROM SERIAL_CHECK INTO @SOPNUMBE, @SOPTYPE, @ITEMNMBR, @MY_DEX_ROW '+   '  End '+   ' CLOSE SERIAL_CHECK '+   ' DEALLOCATE SERIAL_CHECK '  select @sqlstring4 =   ' update #SOPDOCSTATUS set HIDESERL = 1 where SERLTNUM <> '''' '+   ' select @EPINVTAL = sum(isNULL(EXTDPRIC,0)) from #SOPDOCSTATUS where SOPTYPE = @InvoiceTypeText '+   ' select @EPRTNTAL = sum(isNULL(EXTDPRIC,0)) from #SOPDOCSTATUS where SOPTYPE = @OrderTypeText '+   ' select @CSINVTAL = sum(isNULL(EXTDCOST,0)) from #SOPDOCSTATUS where SOPTYPE = @InvoiceTypeText '+   ' select @CSRTNTAL = sum(isNULL(EXTDCOST,0)) from #SOPDOCSTATUS where SOPTYPE = @OrderTypeText '+   ' select @PRINVTAL = sum(isNULL(EXTDPRIC,0) - isNULL(EXTDCOST,0)) from #SOPDOCSTATUS where SOPTYPE = @InvoiceTypeText '+   ' select @PRRTNTAL = sum(isNULL(EXTDPRIC,0) - isNULL(EXTDCOST,0)) from #SOPDOCSTATUS where SOPTYPE = @OrderTypeText '+   ' update #SOPDOCSTATUS set EPINVTAL = isNULL(@EPINVTAL,0) '+   ' update #SOPDOCSTATUS set EPRTNTAL = isNULL(@EPRTNTAL,0) '+   ' update #SOPDOCSTATUS set CSINVTAL = isNULL(@CSINVTAL,0) '+   ' update #SOPDOCSTATUS set CSRTNTAL = isNULL(@CSRTNTAL,0) '+   ' update #SOPDOCSTATUS set PRINVTAL = isNULL(@PRINVTAL,0) '+   ' update #SOPDOCSTATUS set PRRTNTAL = isNULL(@PRRTNTAL,0) '+   ' select @TOTFRGHTINV = sum(FRTAMNT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 3 '+   ' select @TOTFRGHTRTN = sum(FRTAMNT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 2 '+   ' update #SOPDOCSTATUS set TOTFRGHT = isNULL(@TOTFRGHTINV,0) - isNULL(@TOTFRGHTRTN,0) '+   ' select @TOTTRDICINV = sum(TRDISAMT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 3 '+   ' select @TOTTRDICRTN = sum(TRDISAMT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 2 '+   ' update #SOPDOCSTATUS set TOTTRDIC = isNULL(@TOTTRDICINV,0) - isNULL(@TOTTRDICRTN,0) '+   ' select @TOTLMISCINV = sum(MISCAMNT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 3 '+   ' select @TOTLMISCRTN = sum(MISCAMNT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 2 '+   ' update #SOPDOCSTATUS set TOTLMISC = isNULL(@TOTLMISCINV,0) - isNULL(@TOTLMISCRTN,0) '+   ' select @TOTALTAXINV = sum(TAXAMNT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 3 '+   ' select @TOTALTAXRTN = sum(TAXAMNT) from SOP30200 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and SOPTYPE = 2 '+   ' update #SOPDOCSTATUS set TOTALTAX = isNULL(@TOTALTAXINV,0) - isNULL(@TOTALTAXRTN,0) '   select @sqlstring5 =   '  '+   ' select @CASHDEP = sum(AMNTPAID) from SOP10103 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and PYMTTYPE = 1 '+   ' select @CASHPAY = sum(AMNTPAID) from SOP10103 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and PYMTTYPE = 4 '+   ' select @CHECKDEP = sum(AMNTPAID) from SOP10103 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and PYMTTYPE = 2 '+   ' select @CHECKPAY = sum(AMNTPAID) from SOP10103 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and PYMTTYPE = 5 '+   ' select @CCDEP = sum(AMNTPAID) from SOP10103 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and PYMTTYPE = 3 '+   ' select @CCPAY = sum(AMNTPAID) from SOP10103 where SOPNUMBE in (select SOPNUMBE from #SOPDOCSTATUS) and PYMTTYPE = 6 '+   ' update #SOPDOCSTATUS set TOTLCASH = isNULL(@CASHDEP,0) + isNULL(@CASHPAY,0) '+   ' update #SOPDOCSTATUS set TOTLCHCK = isNULL(@CHECKDEP,0) + isNULL(@CHECKPAY,0) '+   ' update #SOPDOCSTATUS set TOTLCRDC = isNULL(@CCDEP,0) + isNULL(@CCPAY,0) '+   ' update a set '+   '    a.PYMTTYPE = case  '+   '         when b.PYMTTYPE = 1 then ''Cash Deposit'' '+   '         when b.PYMTTYPE = 2 then ''Check Deposit'' '+   '         when b.PYMTTYPE = 3 then ''Credit Card Deposit'' '+   '         when b.PYMTTYPE = 4 then ''Cash Payment'' '+   '         when b.PYMTTYPE = 5 then ''Check Payment''  '+   '         when b.PYMTTYPE = 6 then ''Credit Card Payment'' '+   '        else '''' end, '+   '    a.PMNTDATE = b.DOCDATE, '+   '    a.PMNTCRCY = b.CURNCYID, '+   '    a.PMNTNUMB = b.DOCNUMBR, '+   '    a.CARDNAME = b.CARDNAME, '+   '    a.PMNTAMNT = AMNTPAID '+   ' from #SOPDOCSTATUS a, SOP10103 b '+   ' where a.SOPNUMBE = b.SOPNUMBE and '+   '   a.SOPTYPE = dbo.DYN_FUNC_SOP_Type(b.SOPTYPE) '+   'select * from #SOPDOCSTATUS  '   select @sqlaccessstring =   'GRANT execute ON [dbo].[seeECommSOPTransactionalHistory] TO [rpt_order processor], [rpt_power user], [rpt_accounting manager], [rpt_operations manager]'   exec (@sqldropstring)   exec (@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10)   exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[seeECommSOPTransactionalHistory_Create] TO [DYNGRP]
GO

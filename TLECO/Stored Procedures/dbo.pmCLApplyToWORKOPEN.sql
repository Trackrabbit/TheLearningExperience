SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLApplyToWORKOPEN]  @I_cUserID char(15) = NULL,  @I_cFileName1 varchar(40) = NULL,  @I_cSearchString1 char(2)  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,    @iStatus int,    @XPM_Cchecks varchar(50),  @TRUE tinyint,  @FALSE tinyint,  @tLoop tinyint  select  @O_iErrorState = 0,  @iStatus  = 0,  @TRUE           = 1,  @FALSE  = 0  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL   or @I_cFileName1 is NULL  or @I_cSearchString1 is NULL  begin  select @O_iErrorState = 20848  break  end   exec @iStatus = DYNAMICS.dbo.smGetConstantString  'XPM_CCHECKS_STR',   @XPM_Cchecks output,   @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if (@iStatus <> 0) or (@O_iErrorState <> 0)  break   create table #TRXTEMP(  VCHRNMBR char(21) not null,  DOCTYPE smallint not null,  APTVCHNM char(21) not null,  APTODCTY smallint not null,  DCSTATUS tinyint not null,  VENDORID char(15) not null )   create table #PAYTEMP(  VCHRNMBR char(21) not null,  DOCTYPE smallint not null,  APTVCHNM char(21) not null,  APTODCTY smallint not null,  DCSTATUS tinyint not null,  VENDORID char(15) not null )   create table #APPLYTEMP(  VCHRNMBR char(21) not null,  DOCTYPE smallint not null,  APTVCHNM char(21) not null,  APTODCTY smallint not null,  APPLDAMT numeric(19,5) not null,  DISTKNAM numeric(19,5) not null,  DISAVTKN numeric(19,5) not null,  WROFAMNT numeric(19,5) not null,  PPSAMDED numeric(19,5) not null,  GSTDSAMT numeric(19,5) not null,  DCSTATUS tinyint not null,  VENDORID char(15) not null,  ERRTYPE tinyint not null )   insert into #TRXTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  KEYMSTR.DCSTATUS,  APPLY.VENDORID  from  PM10200 APPLY,  PM00400 KEYMSTR  where  APPLY.APTVCHNM = KEYMSTR.CNTRLNUM  and APPLY.APTODCTY = KEYMSTR.DOCTYPE  and   (  ( KEYMSTR.DCSTATUS = 2  and  NOT EXISTS(  select  1  from  PM20000 TRX  where  TRX.VCHRNMBR = APPLY.APTVCHNM  and TRX.DOCTYPE = APPLY.APTODCTY ) )  or  ( KEYMSTR.DCSTATUS = 3 ) )   insert into #PAYTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  KEYMSTR.DCSTATUS,  APPLY.VENDORID  from  PM10200 APPLY,  PM00400 KEYMSTR  where  APPLY.VCHRNMBR = KEYMSTR.CNTRLNUM  and APPLY.DOCTYPE = KEYMSTR.DOCTYPE  and  ( ( KEYMSTR.DCSTATUS = 1  and  NOT EXISTS(  select  1  from  PM10000  where  PM10000.VCHNUMWK = APPLY.VCHRNMBR  and PM10000.DOCTYPE = APPLY.DOCTYPE )  and  NOT EXISTS(  select  1  from  PM10300  where  PM10300.PMNTNMBR = APPLY.VCHRNMBR  and PM10300.DOCTYPE = APPLY.DOCTYPE  and PM10300.BCHSOURC = @XPM_Cchecks )  and  NOT EXISTS(  select  1  from  PM10400  where  PM10400.PMNTNMBR = APPLY.VCHRNMBR  and PM10400.DOCTYPE = APPLY.DOCTYPE ) )  or   ( KEYMSTR.DCSTATUS = 2  and  NOT EXISTS(  select  1  from  PM20000 TRX  where  TRX.VCHRNMBR = APPLY.VCHRNMBR  and TRX.DOCTYPE = APPLY.DOCTYPE ) )  or   ( KEYMSTR.DCSTATUS = 3 ) )   insert into #TRXTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  3,   APPLY.VENDORID  from  PM10200 APPLY  where  NOT EXISTS(  select  1  from  PM00400 KEYMSTR  where  KEYMSTR.CNTRLNUM = APPLY.APTVCHNM  and KEYMSTR.DOCTYPE = APPLY.APTODCTY)  and  NOT EXISTS(  select  1  from  PM20000 TRX  where  TRX.VCHRNMBR = APPLY.APTVCHNM  and TRX.DOCTYPE = APPLY.APTODCTY)   insert into #PAYTEMP  select  APPLY.VCHRNMBR,  APPLY.DOCTYPE,  APPLY.APTVCHNM,  APPLY.APTODCTY,  3,   APPLY.VENDORID  from  PM10200 APPLY  where  NOT EXISTS(  select  1  from  PM00400 KEYMSTR  where  KEYMSTR.CNTRLNUM = APPLY.VCHRNMBR  and KEYMSTR.DOCTYPE = APPLY.DOCTYPE)  and  NOT EXISTS(  select  1  from  PM20000 TRX  where  TRX.VCHRNMBR = APPLY.VCHRNMBR  and TRX.DOCTYPE = APPLY.DOCTYPE)   insert into  #APPLYTEMP  select  #TRXTEMP.VCHRNMBR,  #TRXTEMP.DOCTYPE,  #TRXTEMP.APTVCHNM,  #TRXTEMP.APTODCTY,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0,   #TRXTEMP.VENDORID,  3    from  #TRXTEMP,  #PAYTEMP  where  #TRXTEMP.VCHRNMBR = #PAYTEMP.VCHRNMBR  and #TRXTEMP.DOCTYPE  = #PAYTEMP.DOCTYPE  and #TRXTEMP.APTVCHNM = #PAYTEMP.APTVCHNM  and #TRXTEMP.APTODCTY = #PAYTEMP.APTODCTY   insert into  #APPLYTEMP  select  #TRXTEMP.VCHRNMBR,  #TRXTEMP.DOCTYPE,  #TRXTEMP.APTVCHNM,  #TRXTEMP.APTODCTY,  PM10200.APPLDAMT,  PM10200.DISTKNAM,  PM10200.DISAVTKN,  PM10200.WROFAMNT,  PM10200.PPSAMDED,  PM10200.GSTDSAMT,  PM00400.DCSTATUS,  #TRXTEMP.VENDORID,   1  from  #TRXTEMP,  PM10200,  PM00400  where  #TRXTEMP.VCHRNMBR = PM10200.VCHRNMBR  and #TRXTEMP.DOCTYPE  = PM10200.DOCTYPE  and #TRXTEMP.APTVCHNM = PM10200.APTVCHNM  and #TRXTEMP.APTODCTY = PM10200.APTODCTY  and #TRXTEMP.VCHRNMBR = PM00400.CNTRLNUM  and #TRXTEMP.DOCTYPE  = PM00400.DOCTYPE  and #TRXTEMP.DCSTATUS <> 3  and  NOT EXISTS(  select   VCHRNMBR  from  #PAYTEMP  where  #PAYTEMP.VCHRNMBR = #TRXTEMP.VCHRNMBR  and #PAYTEMP.DOCTYPE  = #TRXTEMP.DOCTYPE  and #PAYTEMP.APTVCHNM = #TRXTEMP.APTVCHNM  and #PAYTEMP.APTODCTY = #TRXTEMP.APTODCTY )   insert into  #APPLYTEMP  select  #PAYTEMP.VCHRNMBR,  #PAYTEMP.DOCTYPE,  #PAYTEMP.APTVCHNM,  #PAYTEMP.APTODCTY,  PM10200.APPLDAMT+PM10200.DISTKNAM+PM10200.WROFAMNT+PM10200.PPSAMDED+PM10200.GSTDSAMT,  PM10200.DISTKNAM,  PM10200.DISAVTKN,  PM10200.WROFAMNT,  PM10200.PPSAMDED,  PM10200.GSTDSAMT,  PM00400.DCSTATUS,  #PAYTEMP.VENDORID,  2  from  #PAYTEMP,  PM10200,  PM00400  where  #PAYTEMP.VCHRNMBR = PM10200.VCHRNMBR  and #PAYTEMP.DOCTYPE  = PM10200.DOCTYPE  and #PAYTEMP.APTVCHNM = PM10200.APTVCHNM  and #PAYTEMP.APTODCTY = PM10200.APTODCTY  and #PAYTEMP.APTVCHNM = PM00400.CNTRLNUM  and #PAYTEMP.APTODCTY = PM00400.DOCTYPE  and #PAYTEMP.DCSTATUS <> 3  and  NOT EXISTS(  select   1  from  #TRXTEMP  where  #TRXTEMP.VCHRNMBR = #PAYTEMP.VCHRNMBR  and #TRXTEMP.DOCTYPE  = #PAYTEMP.DOCTYPE  and #TRXTEMP.APTVCHNM = #PAYTEMP.APTVCHNM  and #TRXTEMP.APTODCTY = #PAYTEMP.APTODCTY )   update  PM20000  set  CURTRXAM = PM20000.CURTRXAM + #APPLYTEMP.APPLDAMT,  DISTKNAM = PM20000.DISTKNAM - #APPLYTEMP.DISTKNAM,  DISAVTKN = PM20000.DISAVTKN - #APPLYTEMP.DISAVTKN,  WROFAMNT = PM20000.WROFAMNT - #APPLYTEMP.WROFAMNT,  PPSAMDED = PM20000.PPSAMDED - #APPLYTEMP.PPSAMDED,  GSTDSAMT = PM20000.GSTDSAMT - #APPLYTEMP.GSTDSAMT  from  #APPLYTEMP  where  #APPLYTEMP.APTVCHNM = PM20000.VCHRNMBR  and #APPLYTEMP.APTODCTY = PM20000.DOCTYPE  and #APPLYTEMP.DCSTATUS = 2  and #APPLYTEMP.ERRTYPE  = 2    update  PM20000  set  CURTRXAM = PM20000.CURTRXAM + #APPLYTEMP.APPLDAMT,  DISTKNAM = PM20000.DISTKNAM - #APPLYTEMP.DISTKNAM,  DISAVTKN = PM20000.DISAVTKN - #APPLYTEMP.DISAVTKN,  WROFAMNT = PM20000.WROFAMNT - #APPLYTEMP.WROFAMNT,  PPSAMDED = PM20000.PPSAMDED - #APPLYTEMP.PPSAMDED,  GSTDSAMT = PM20000.GSTDSAMT - #APPLYTEMP.GSTDSAMT  from  #APPLYTEMP  where  #APPLYTEMP.VCHRNMBR = PM20000.VCHRNMBR  and #APPLYTEMP.DOCTYPE  = PM20000.DOCTYPE  and #APPLYTEMP.DCSTATUS = 2  and #APPLYTEMP.ERRTYPE  = 1    update  PM10000  set  CURTRXAM = PM10000.CURTRXAM + #APPLYTEMP.APPLDAMT,  APPLDAMT = PM10000.APPLDAMT - #APPLYTEMP.APPLDAMT,  APDSTKAM = PM10000.APDSTKAM - #APPLYTEMP.DISTKNAM,  DISAMTAV = PM10000.DISAMTAV - #APPLYTEMP.DISAVTKN,  WROFAMNT = PM10000.WROFAMNT - #APPLYTEMP.WROFAMNT,  PPSAMDED = PM10000.PPSAMDED - #APPLYTEMP.PPSAMDED,  GSTDSAMT = PM10000.GSTDSAMT - #APPLYTEMP.GSTDSAMT  from  #APPLYTEMP  where  #APPLYTEMP.VCHRNMBR = PM10000.VCHRNMBR  and #APPLYTEMP.DOCTYPE  = PM10000.DOCTYPE  and #APPLYTEMP.DCSTATUS = 1  and #APPLYTEMP.ERRTYPE  = 1    update  PM10400  set  CURTRXAM = PM10400.CURTRXAM + #APPLYTEMP.APPLDAMT,  APPLDAMT = PM10400.APPLDAMT - #APPLYTEMP.APPLDAMT,  DISTKNAM = PM10400.DISTKNAM - #APPLYTEMP.DISTKNAM,  DISAMTAV = PM10400.DISAMTAV - #APPLYTEMP.DISAVTKN,  WROFAMNT = PM10400.WROFAMNT - #APPLYTEMP.WROFAMNT,  PPSAMDED = PM10400.PPSAMDED - #APPLYTEMP.PPSAMDED,  GSTDSAMT = PM10400.GSTDSAMT - #APPLYTEMP.GSTDSAMT  from  #APPLYTEMP  where  #APPLYTEMP.VCHRNMBR = PM10400.VCHRNMBR  and #APPLYTEMP.DOCTYPE  = PM10400.DOCTYPE  and #APPLYTEMP.DCSTATUS = 1  and #APPLYTEMP.ERRTYPE  = 1    update  PM10300  set  CURTRXAM = PM10300.CURTRXAM + #APPLYTEMP.APPLDAMT,  APPLDAMT = PM10300.APPLDAMT - #APPLYTEMP.APPLDAMT,  DISTKNAM = PM10300.DISTKNAM - #APPLYTEMP.DISTKNAM,  DISAMTAV = PM10300.DISAMTAV - #APPLYTEMP.DISAVTKN,  WROFAMNT = PM10300.WROFAMNT - #APPLYTEMP.WROFAMNT,  PPSAMDED = PM10300.PPSAMDED - #APPLYTEMP.PPSAMDED,  GSTDSAMT = PM10300.GSTDSAMT - #APPLYTEMP.GSTDSAMT  from  #APPLYTEMP  where  #APPLYTEMP.VCHRNMBR = PM10300.VCHRNMBR  and #APPLYTEMP.DOCTYPE  = PM10300.DOCTYPE  and #APPLYTEMP.DCSTATUS = 1  and #APPLYTEMP.ERRTYPE  = 1    delete  PM10200  from  #APPLYTEMP  where  #APPLYTEMP.VCHRNMBR = PM10200.VCHRNMBR  and #APPLYTEMP.DOCTYPE  = PM10200.DOCTYPE  and #APPLYTEMP.APTVCHNM = PM10200.APTVCHNM  and #APPLYTEMP.APTODCTY = PM10200.APTODCTY  and #APPLYTEMP.ERRTYPE  = 3    insert into  #CNTRLNUMTEMP  select  VCHRNMBR,  DOCTYPE,  VENDORID  from  #APPLYTEMP  where  #APPLYTEMP.ERRTYPE  = 3    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10327,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   update  PM10200  set   POSTED = @TRUE  from  PM10200  LEFT OUTER JOIN PM20000 ON (PM20000.DOCTYPE  = PM10200.DOCTYPE and PM20000.VCHRNMBR = PM10200.VCHRNMBR)  LEFT OUTER JOIN PM30200 ON (PM30200.DOCTYPE  = PM10200.DOCTYPE and PM30200.VCHRNMBR = PM10200.VCHRNMBR)  where  PM10200.POSTED = @FALSE  and (PM20000.VCHRNMBR IS NOT NULL  or PM30200.VCHRNMBR IS NOT NULL)  end   return(@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmCLApplyToWORKOPEN] TO [DYNGRP]
GO

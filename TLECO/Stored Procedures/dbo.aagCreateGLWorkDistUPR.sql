SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROC [dbo].[aagCreateGLWorkDistUPR]  @GLWorkHdrID INT, @BatchNum VARCHAR(15), @EmployID VARCHAR(15) AS BEGIN  DECLARE @SeqNumbr NUMERIC(19, 5), @AcctIdx INT, @AcctTyp SMALLINT, @DecPlcs SMALLINT, @FxdOrVar SMALLINT, @DebitAmt NUMERIC(19, 5),   @CrdtAmt NUMERIC(19, 5), @CuryID VARCHAR(15), @CurrIdx SMALLINT, @RateTypID VARCHAR(15), @ExcTblID VARCHAR(15), @XchRate NUMERIC(19, 5),   @ExchDate DATETIME, @RateCalcMtd SMALLINT, @DenXrate NUMERIC(19, 5), @McTrxStt SMALLINT, @InterID VARCHAR(5), @WinOpen TINYINT  DECLARE @ClassID INT, @BrowseType SMALLINT, @GLWorkDistID INT, @IncludeEmployee SMALLINT, @SubLedgerHdrID INT  DECLARE @l_cINTERID char(5)  DECLARE @l_nStatus int  DECLARE @l_nError int  DECLARE @l_nSQL_Error_State int  DECLARE @l_cComputerCheck varchar(255)  DECLARE @l_cManualCheck varchar(255)  DECLARE @l_cVoidCheck varchar(255)  DECLARE @l_cComputerCheckPrefix varchar(255)  DECLARE @l_cManualCheckPrefix varchar(255)  DECLARE @l_cVoidCheckPrefix varchar(255)  DECLARE @CreatJRNPerBatch smallint  DECLARE @PreEmployID VARCHAR(15)  DECLARE @CurrDistID int  DECLARE @PostInDetail smallint   SELECT @l_cINTERID = db_name()   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 275, @l_cINTERID, @l_cComputerCheckPrefix output, @l_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@l_nSQL_Error_State <> 0) )  return (@l_nStatus)  select @l_cComputerCheckPrefix = ltrim(rtrim(@l_cComputerCheckPrefix))   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 276, @l_cINTERID, @l_cManualCheckPrefix output, @l_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@l_nSQL_Error_State <> 0) )  return (@l_nStatus)  select @l_cManualCheckPrefix = ltrim(rtrim(@l_cManualCheckPrefix))   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 18762, @l_cINTERID, @l_cVoidCheckPrefix output, @l_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@l_nSQL_Error_State <> 0) )  return (@l_nStatus)  select @l_cManualCheckPrefix = ltrim(rtrim(@l_cManualCheckPrefix))  select @BatchNum = LTRIM(RTRIM(@BatchNum))  if substring(@BatchNum, 1, len(@l_cComputerCheckPrefix)) = @l_cComputerCheckPrefix  begin  select @CreatJRNPerBatch = PSTOGLHW, @PostInDetail = POSTINDETAIL from SY02300 where SERIES = 6 and TRXSOURC = 'Computer Checks'  end  else if substring(@BatchNum, 1, len(@l_cManualCheckPrefix)) = @l_cManualCheckPrefix  begin  select @CreatJRNPerBatch = PSTOGLHW, @PostInDetail = POSTINDETAIL from SY02300 where SERIES = 6 and TRXSOURC = 'Manual Checks'  end  else if substring(@BatchNum, 1, len(@l_cVoidCheckPrefix)) = @l_cVoidCheckPrefix  begin  select @CreatJRNPerBatch = PSTOGLHW, @PostInDetail = POSTINDETAIL from SY02300 where SERIES = 6 and TRXSOURC = 'Void Checks'  end  if (@CreatJRNPerBatch = 0 AND @PostInDetail = 1)  begin  SET @GLWorkDistID = 0  SET @IncludeEmployee = 0  DECLARE CreateDistrRecords CURSOR FAST_FORWARD  FOR   SELECT DB_NAME() AS INTERID, G.ACTINDX, G.ACCTTYPE, G.DECPLACS, G.FXDORVAR, G.DEBITAMT, G.CRDTAMNT, ISNULL(C.CURNCYID,A.CURNCYID), G.CURRNIDX,   G.RATETPID, G.EXGTBLID, G.XCHGRATE, G.EXCHDATE, G.RTCLCMTD, G.DENXRATE, G.MCTRXSTT, G.SQNCLINE, 1 AS aaWinWasOpen   FROM GL10001 G LEFT OUTER JOIN DYNAMICS..MC40200 C ON G.CURRNIDX = C.CURRNIDX INNER JOIN GL10000 A on G.JRNENTRY=A.JRNENTRY  WHERE LTRIM(RTRIM(G.BACHNUMB)) = LTRIM(RTRIM(@BatchNum)) AND LTRIM(RTRIM(G.ORMSTRID)) = LTRIM(RTRIM(@EmployID))  ORDER BY G.ACTINDX   OPEN CreateDistrRecords  FETCH NEXT FROM CreateDistrRecords INTO @InterID, @AcctIdx, @AcctTyp, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt, @CuryID,   @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @WinOpen  WHILE @@FETCH_STATUS = 0  BEGIN  SELECT @ClassID = aaAcctClassID FROM AAG00200 WHERE ACTINDX = @AcctIdx  IF @ClassID = 0   BEGIN SET @BrowseType = 0 END  ELSE  BEGIN  IF EXISTS (SELECT aaTrxDimID FROM AAG00202 WHERE aaAcctClassID = @ClassID AND aaDataEntry = 2 AND aaTrxDimCodeIDDflt  = 0)   BEGIN SET @BrowseType = 2 END  ELSE  BEGIN SET @BrowseType = 1 END   END  SELECT @IncludeEmployee = aaSetEmployeeID FROM AAG00201 WHERE aaAcctClassID = @ClassID  SET @GLWorkDistID = @GLWorkDistID + 1  IF @IncludeEmployee = 1   BEGIN  INSERT INTO AAG10001 (aaGLWorkHdrID, aaGLWorkDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT,   CRDTAMNT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE, EMPLOYID,   aaWinWasOpen, ORDBTAMT, ORCRDAMT)  VALUES(@GLWorkHdrID ,@GLWorkDistID, @InterID, @AcctIdx, @AcctTyp, @BrowseType, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt,   @CuryID, @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @EmployID,   @WinOpen, @DebitAmt, @CrdtAmt)  END   ELSE  BEGIN  INSERT INTO AAG10001 (aaGLWorkHdrID, aaGLWorkDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT,   CRDTAMNT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,   aaWinWasOpen, ORDBTAMT, ORCRDAMT)  VALUES(@GLWorkHdrID ,@GLWorkDistID, @InterID, @AcctIdx, @AcctTyp, @BrowseType, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt,   @CuryID, @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @WinOpen,  @DebitAmt, @CrdtAmt)  END  SELECT  @SubLedgerHdrID = aaSubLedgerHdrID FROM AAG20000 WHERE LTRIM(RTRIM(DOCNUMBR)) = LTRIM(RTRIM(@BatchNum)) AND   LTRIM(RTRIM(Master_ID)) = LTRIM(RTRIM(@EmployID))  INSERT INTO AAG10002(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, DEBITAMT, CRDTAMNT, aaAssignedPercent, aaAliasID,   ORDBTAMT, ORCRDAMT)  (SELECT @GLWorkHdrID, @GLWorkDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, aaAssignedPercent, aaAliasID, DEBITAMT AS ORDBTAMT,  CRDTAMNT AS ORCRDAMT FROM AAG20002   WHERE aaSubLedgerHdrID = @SubLedgerHdrID AND aaSubLedgerDistID = @GLWorkDistID)  INSERT INTO AAG10003(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, aaTrxDimID, aaTrxCodeID)  (SELECT @GLWorkHdrID, @GLWorkDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID FROM AAG20003  WHERE aaSubLedgerHdrID = @SubLedgerHdrID AND aaSubLedgerDistID = @GLWorkDistID)  SET @IncludeEmployee = 0  FETCH NEXT FROM CreateDistrRecords INTO @InterID, @AcctIdx, @AcctTyp, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt, @CuryID,   @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @WinOpen  END  CLOSE CreateDistrRecords  DEALLOCATE CreateDistrRecords  end  ELSE IF  @PostInDetail = 1  BEGIN  SET @GLWorkDistID = 0  SET @IncludeEmployee = 0  SET @CurrDistID = 0  DECLARE empDetail CURSOR FAST_FORWARD FOR  SELECT EMPLOYID FROM UPR30401  WHERE AUCTRLCD = @BatchNum  ORDER BY AUCTRLCD, EMPLOYID, DEX_ROW_ID  OPEN empDetail  FETCH NEXT FROM empDetail INTO @EmployID  select @PreEmployID = @EmployID   DECLARE CreateDistrRecords CURSOR FAST_FORWARD  FOR   SELECT DB_NAME() AS INTERID, G.ACTINDX, G.ACCTTYPE, G.DECPLACS, G.FXDORVAR, G.DEBITAMT, G.CRDTAMNT, C.CURNCYID, G.CURRNIDX,   G.RATETPID, G.EXGTBLID, G.XCHGRATE, G.EXCHDATE, G.RTCLCMTD, G.DENXRATE, G.MCTRXSTT, G.SQNCLINE, 1 AS aaWinWasOpen   FROM GL10001 G INNER JOIN DYNAMICS..MC40200 C ON G.CURRNIDX = C.CURRNIDX  WHERE LTRIM(RTRIM(BACHNUMB)) = LTRIM(RTRIM(@BatchNum))  ORDER BY G.SQNCLINE   OPEN CreateDistrRecords  FETCH NEXT FROM CreateDistrRecords INTO @InterID, @AcctIdx, @AcctTyp, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt, @CuryID,   @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @WinOpen  WHILE @@FETCH_STATUS = 0  BEGIN  IF @PreEmployID <> @EmployID  BEGIN  SET @CurrDistID = 0  select @PreEmployID = @EmployID  END  SELECT @ClassID = aaAcctClassID FROM AAG00200 WHERE ACTINDX = @AcctIdx  IF @ClassID = 0   BEGIN SET @BrowseType = 0 END  ELSE  BEGIN  IF EXISTS (SELECT aaTrxDimID FROM AAG00202 WHERE aaAcctClassID = @ClassID AND aaDataEntry = 2 AND aaTrxDimCodeIDDflt  = 0)   BEGIN SET @BrowseType = 2 END  ELSE  BEGIN SET @BrowseType = 1 END   END  SELECT @IncludeEmployee = aaSetEmployeeID FROM AAG00201 WHERE aaAcctClassID = @ClassID  SET @GLWorkDistID = @GLWorkDistID + 1  SET @CurrDistID = @CurrDistID + 1  IF @IncludeEmployee = 1   BEGIN  INSERT INTO AAG10001 (aaGLWorkHdrID, aaGLWorkDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT,   CRDTAMNT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE, EMPLOYID,   aaWinWasOpen, ORDBTAMT, ORCRDAMT)  VALUES(@GLWorkHdrID ,@GLWorkDistID, @InterID, @AcctIdx, @AcctTyp, @BrowseType, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt,   @CuryID, @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @EmployID,   @WinOpen, @DebitAmt, @CrdtAmt)  END   ELSE  BEGIN  INSERT INTO AAG10001 (aaGLWorkHdrID, aaGLWorkDistID, INTERID, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT,   CRDTAMNT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,   aaWinWasOpen, ORDBTAMT, ORCRDAMT)  VALUES(@GLWorkHdrID ,@GLWorkDistID, @InterID, @AcctIdx, @AcctTyp, @BrowseType, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt,   @CuryID, @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @WinOpen,  @DebitAmt, @CrdtAmt)  END   SELECT  @SubLedgerHdrID = aaSubLedgerHdrID FROM AAG20000 WHERE LTRIM(RTRIM(DOCNUMBR)) = LTRIM(RTRIM(@BatchNum)) AND   LTRIM(RTRIM(Master_ID)) = LTRIM(RTRIM(@EmployID))   INSERT INTO AAG10002(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, DEBITAMT, CRDTAMNT, aaAssignedPercent, aaAliasID,   ORDBTAMT, ORCRDAMT)  (SELECT @GLWorkHdrID, @GLWorkDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT, aaAssignedPercent, aaAliasID, DEBITAMT AS ORDBTAMT,  CRDTAMNT AS ORCRDAMT FROM AAG20002   WHERE aaSubLedgerHdrID = @SubLedgerHdrID AND aaSubLedgerDistID = @CurrDistID)  INSERT INTO AAG10003(aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID, aaTrxDimID, aaTrxCodeID)  (SELECT @GLWorkHdrID, @GLWorkDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID FROM AAG20003  WHERE aaSubLedgerHdrID = @SubLedgerHdrID AND aaSubLedgerDistID = @CurrDistID)   SET @IncludeEmployee = 0   FETCH NEXT FROM empDetail INTO @EmployID   FETCH NEXT FROM CreateDistrRecords INTO @InterID, @AcctIdx, @AcctTyp, @DecPlcs, @FxdOrVar, @DebitAmt, @CrdtAmt, @CuryID,   @CurrIdx, @RateTypID, @ExcTblID, @XchRate, @ExchDate, @RateCalcMtd, @DenXrate, @McTrxStt, @SeqNumbr, @WinOpen  END  CLOSE CreateDistrRecords  DEALLOCATE CreateDistrRecords  CLOSE empDetail  DEALLOCATE empDetail  END END    
GO
GRANT EXECUTE ON  [dbo].[aagCreateGLWorkDistUPR] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[pmPopulateSelectChecksVendorTemp]  @I_cVendorTemp char(40)= NULL,  @I_cStartVendorID char(15)= NULL,   @I_cEndVendorID char(15)= NULL,   @I_cStartVendorName char(65)= NULL,   @I_cEndVendorName char(65)= NULL,   @I_cStartVendorClassID char(11)= NULL,   @I_cEndVendorClassID char(11)= NULL,   @I_cStartPaymentPriority char(3)= NULL,   @I_cEndPaymentPriority char(3)= NULL,   @I_cStartVoucherNumber char(20)= NULL,   @I_cEndVoucherNumber char(20)= NULL,   @I_cStartDocNumber char(20)= NULL,   @I_cEndDocNumber char(20)= NULL,   @I_iPrintPrevApplDocs tinyint = NULL,   @I_iDueDateCutoffType tinyint = NULL,   @I_iDiscDateCutoffType tinyint = NULL,   @I_cDueDate char(8)= NULL,  @I_cDiscDate char(8)= NULL,  @I_cCheckbookID char(15) = NULL,  @I_iEFTFileFormat smallint = NULL,    @I_iBankTransfer tinyint = NULL,   @I_iPMEFTRegistered tinyint = NULL,   @I_iAllowEFTinChecks tinyint = NULL,   @I_cUserDate char(8)= NULL,  @I_iExcludeExpiredDiscounts tinyint = NULL,   @I_iVendorWFEnabled tinyint = NULL,   @O_iErrorState int  = NULL output  as  declare   @iError int,  @iStatus int,  @TRUE int,  @FALSE int,  @PM_DOC_MISC_CHG int,  @KEYSOURCE_PM char(10),  @cKEYSOURCE_PM char(22),  @cStartVendorID char(82),   @cEndVendorID char(82),   @cStartVendorName char(132),  @cEndVendorName char(132),  @cStartVendorClassID char(42),  @cEndVendorClassID char(42),  @cStartPaymentPriority char(42),  @cEndPaymentPriority char(42),  @cStartVoucherNumber char(42),  @cEndVoucherNumber char(42),  @cStartDocNumber char(42),  @cEndDocNumber char(42),  @cDueDate char(18),  @cDiscDate char(18),  @cUserDate char(18),  @iPrenoteRequired tinyint,  @iBankType smallint,  @iPrenoteGracePeriod smallint,  @iCheckbookFound tinyint   select  @O_iErrorState   = 0,  @iStatus         = 0   if @I_cVendorTemp is NULL  begin  select @O_iErrorState = 21095   return  end    exec @iStatus = DYNAMICS..smGetConstantInt 'TRUE', @TRUE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'FALSE', @FALSE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantString 'KEYSOURCE_PM', @KEYSOURCE_PM output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantInt 'PM_DOC_MISC_CHG', @PM_DOC_MISC_CHG output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @KEYSOURCE_PM,  @cKEYSOURCE_PM output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cStartVendorID,  @cStartVendorID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cEndVendorID,  @cEndVendorID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cStartVendorName,  @cStartVendorName output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cEndVendorName,  @cEndVendorName output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cStartVendorClassID,  @cStartVendorClassID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cEndVendorClassID,  @cEndVendorClassID output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cStartPaymentPriority,  @cStartPaymentPriority output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cEndPaymentPriority,  @cEndPaymentPriority output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cStartVoucherNumber,  @cStartVoucherNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cEndVoucherNumber,  @cEndVoucherNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cStartDocNumber,  @cStartDocNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cEndDocNumber,  @cEndDocNumber output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cDueDate,  @cDueDate output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cDiscDate,  @cDiscDate output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cUserDate,  @cUserDate output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   exec ('delete ' + @I_cVendorTemp)   if @I_iVendorWFEnabled=0  exec('insert into ' + @I_cVendorTemp + '  (VENDORID, VENDNAME, VNDCLSID, USERDEF1, PYMNTPRI, VNRECSTS,   OLDCUBAL, OUPDFCHR, OUAPYBAL, OLDONORDER, OldPrepaymentAmount,  CURRBLNC, UNPDFNCH, CURUNPBN, ONORDAMT, PrepaymentAmount)  select  VENDORID,  VENDNAME,  VNDCLSID,  USERDEF1,  PYMNTPRI,  0,0,0,0,0,0,0,0,0,0,0  from  PM00200 V  where  (  V.VENDORID between ' + @cStartVendorID + ' and ' + @cEndVendorID +   ' and V.VENDNAME between ' + @cStartVendorName + ' and ' + @cEndVendorName +   ' and V.VNDCLSID between ' + @cStartVendorClassID + ' and ' + @cEndVendorClassID +   ' and V.PYMNTPRI between ' + @cStartPaymentPriority + ' and ' + @cEndPaymentPriority +   ')  and (  exists (  select 1 from PM20000 O  where  O.VENDORID = V.VENDORID  and ((' + @I_iDueDateCutoffType + ' = ' + @FALSE + ' or O.DUEDATE <= ' + @cDueDate + ') or (' + @I_iExcludeExpiredDiscounts + ' = ' + @FALSE + ' and (( '  + @I_iDiscDateCutoffType + ' = 1 and not O.DISCDATE = ''1900-01-01 00:00:00.000'') or ' + '('   + @I_iDiscDateCutoffType + ' = 2 and O.DISCDATE <= ' + @cDiscDate + ' and not O.DISCDATE = ''1900-01-01 00:00:00.000''))   or  (' + @I_iExcludeExpiredDiscounts + ' = ' + @TRUE + ' and O.DISCDATE <= ' + @cDiscDate + ' and not O.DISCDATE = ''1900-01-01 00:00:00.000'')  ))  and (  O.VCHRNMBR between ' + @cStartVoucherNumber + ' and ' + @cEndVoucherNumber + '   and O.DOCNUMBR between ' + @cStartDocNumber + ' and ' + @cEndDocNumber + '   )  and O.DOCTYPE <= 3   and O.CURTRXAM > 0  )  or (' + @I_iPrintPrevApplDocs + ' = ' + @TRUE + '  and exists(  select 1 from PM20100 A where  A.VENDORID = V.VENDORID  and A.KEYSOURC = ' + @cKEYSOURCE_PM + '  and A.Payment_To_Print_On_Stub = ''''  )  )  )  ')  else  exec('insert into ' + @I_cVendorTemp + '  (VENDORID, VENDNAME, VNDCLSID, USERDEF1, PYMNTPRI, VNRECSTS,   OLDCUBAL, OUPDFCHR, OUAPYBAL, OLDONORDER, OldPrepaymentAmount,  CURRBLNC, UNPDFNCH, CURUNPBN, ONORDAMT, PrepaymentAmount)  select  VENDORID,  VENDNAME,  VNDCLSID,  USERDEF1,  PYMNTPRI,  0,0,0,0,0,0,0,0,0,0,0  from  PM00200 V  where  (  V.VENDORID between ' + @cStartVendorID + ' and ' + @cEndVendorID +   ' and V.VENDNAME between ' + @cStartVendorName + ' and ' + @cEndVendorName +   ' and V.VNDCLSID between ' + @cStartVendorClassID + ' and ' + @cEndVendorClassID +   ' and V.PYMNTPRI between ' + @cStartPaymentPriority + ' and ' + @cEndPaymentPriority +  ' and V.Workflow_Status not in (1,4,5,7) ' +  ')  and (  exists (  select 1 from PM20000 O  where  O.VENDORID = V.VENDORID  and ((' + @I_iDueDateCutoffType + ' = ' + @FALSE + ' or O.DUEDATE <= ' + @cDueDate + ') or (' + @I_iExcludeExpiredDiscounts + ' = ' + @FALSE + ' and (( '  + @I_iDiscDateCutoffType + ' = 1 and not O.DISCDATE = ''1900-01-01 00:00:00.000'') or ' + '('   + @I_iDiscDateCutoffType + ' = 2 and O.DISCDATE <= ' + @cDiscDate + ' and not O.DISCDATE = ''1900-01-01 00:00:00.000''))   or  (' + @I_iExcludeExpiredDiscounts + ' = ' + @TRUE + ' and O.DISCDATE <= ' + @cDiscDate + ' and not O.DISCDATE = ''1900-01-01 00:00:00.000'')  ))  and (  O.VCHRNMBR between ' + @cStartVoucherNumber + ' and ' + @cEndVoucherNumber + '   and O.DOCNUMBR between ' + @cStartDocNumber + ' and ' + @cEndDocNumber + '   )  and O.DOCTYPE <= 3   and O.CURTRXAM > 0  )  or (' + @I_iPrintPrevApplDocs + ' = ' + @TRUE + '  and exists(  select 1 from PM20100 A where  A.VENDORID = V.VENDORID  and A.KEYSOURC = ' + @cKEYSOURCE_PM + '  and A.Payment_To_Print_On_Stub = ''''  )  )  )  ')   if @I_iBankTransfer = @TRUE begin  if (select ISNULL(SUM(1),0) from CM00101 where CHEKBKID = @I_cCheckbookID) = 0 begin  exec ('delete ' + @I_cVendorTemp)  end  else begin  select @iPrenoteRequired = (select EFTPMPrenoteRequired from CM00101 where CHEKBKID = @I_cCheckbookID)  select @iPrenoteGracePeriod = (select EFTPMPrenoteGracePeriod from CM00101 where CHEKBKID = @I_cCheckbookID)  select @iBankType = (select EFTBankType from CM00101 where CHEKBKID = @I_cCheckbookID)   exec ('delete ' + @I_cVendorTemp + '  where   VENDORID not in (  select VENDORID from SY06000 A   where INACTIVE = 0   and (' + @iPrenoteRequired + ' = ' + @FALSE + ' or (' + @iPrenoteRequired + ' = ' + @TRUE + ' and (A.EFTPrenoteDate > ''1900-01-01 00:00:00.000'' and A.EFTPrenoteDate <= DATEADD(dy,-' + @iPrenoteGracePeriod + ', ' + @cUserDate + '))))   and ((' + @I_iEFTFileFormat + ' = 1 and (A.EFTBankType = ' + @iBankType + ' or (A.EFTBankType in (4,5) and ' + @iBankType + ' in (4,5)) or (A.EFTBankType in (11,12) and ' + @iBankType + ' in (11,12)) or (A.EFTBankType in (13,14) and ' + @iBankType + ' in (13,14)) or (A.EFTBankType in (15,16) and ' + @iBankType + ' in (15,16)) ))   or (' + @I_iEFTFileFormat + ' = 2 and (A.EFTBankType <> ' + @iBankType + ') ))  and ADRSCODE in (  select   ''RemitTo'' =   case  when O.VADCDTRO = '''' then  case  when V.VADCDTRO = '''' then  V.VADDCDPR  else  V.VADCDTRO  end  else  O.VADCDTRO  end  from PM20000 O, PM00200 V  where  O.VENDORID = A.VENDORID  and O.VENDORID = V.VENDORID  and (' + @I_iDueDateCutoffType + ' = ' + @FALSE + '  or O.DUEDATE <= ' + @cDueDate + '  or (' + @I_iDiscDateCutoffType + ' = 1 and not O.DISCDATE = ''1900-01-01 00:00:00.000'')  or (' + @I_iDiscDateCutoffType + ' = 2 and O.DISCDATE <= ' + @cDiscDate + ' and not O.DISCDATE = ''1900-01-01 00:00:00.000'')  )  and O.VCHRNMBR between ' + @cStartVoucherNumber + ' and ' + @cEndVoucherNumber + '  and O.DOCNUMBR between ' + @cStartDocNumber + ' and ' + @cEndDocNumber + '  and O.DOCTYPE <= 3   and O.CURTRXAM > 0  )  )  ')   end  end  else if @I_iPMEFTRegistered = @TRUE and @I_iAllowEFTinChecks = @FALSE begin   select @iCheckbookFound = (select ISNULL((select 1 from CM00101 where CHEKBKID = @I_cCheckbookID),0))  select @iPrenoteRequired = isnull((select EFTPMPrenoteRequired from CM00101 where CHEKBKID = @I_cCheckbookID),0)  select @iPrenoteGracePeriod = isnull((select EFTPMPrenoteGracePeriod from CM00101 where CHEKBKID = @I_cCheckbookID),0)  select @iBankType = isnull((select EFTBankType from CM00101 where CHEKBKID = @I_cCheckbookID),0)   exec ('delete ' + @I_cVendorTemp + '  where   VENDORID in (  select VENDORID from SY06000 A   where INACTIVE = 0   and (' + @iPrenoteRequired + ' = ' + @FALSE + ' or (' + @iPrenoteRequired + ' = ' + @TRUE + ' and (A.EFTPrenoteDate > ''1900-01-01 00:00:00.000'' and A.EFTPrenoteDate <= DATEADD(dy,-' + @iPrenoteGracePeriod + ', ' + @cUserDate + '))))   and (((' + @I_iEFTFileFormat + ' = 1 or ' + @I_iEFTFileFormat + ' = 0) and (A.EFTBankType = ' + @iBankType + ' or (A.EFTBankType in (4,5) and ' + @iBankType + ' in (4,5)) or (A.EFTBankType in (11,12) and ' + @iBankType + ' in (11,12)) or (A.EFTBankType in (13,14) and ' + @iBankType + ' in (13,14)) or (A.EFTBankType in (15,16) and ' + @iBankType + ' in (15,16)) ))   or (' + @I_iEFTFileFormat + ' = 2 and (A.EFTBankType <> ' + @iBankType + '))  or (' + @iCheckbookFound + ' = ' + @FALSE + ') )  and ADRSCODE in (  select   ''RemitTo'' =   case  when O.VADCDTRO = '''' then  case  when V.VADCDTRO = '''' then  V.VADDCDPR  else  V.VADCDTRO  end  else  O.VADCDTRO  end  from PM20000 O, PM00200 V  where  O.VENDORID = A.VENDORID  and O.VENDORID = V.VENDORID  and (' + @I_iDueDateCutoffType + ' = ' + @FALSE + '  or O.DUEDATE <= ' + @cDueDate + '  or (' + @I_iDiscDateCutoffType + ' = 1 and not O.DISCDATE = ''1900-01-01 00:00:00.000'')  or (' + @I_iDiscDateCutoffType + ' = 2 and O.DISCDATE <= ' + @cDiscDate + ' and not O.DISCDATE = ''1900-01-01 00:00:00.000'')  )  and O.VCHRNMBR between ' + @cStartVoucherNumber + ' and ' + @cEndVoucherNumber + '  and O.DOCNUMBR between ' + @cStartDocNumber + ' and ' + @cEndDocNumber + '  and O.DOCTYPE <= 3   and O.CURTRXAM > 0  )  )  ')  end  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmPopulateSelectChecksVendorTemp] TO [DYNGRP]
GO

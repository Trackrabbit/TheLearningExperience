SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_Copy_RMA]  (@RETDOCID char(16) OUTPUT, @RecType smallint)   AS declare @NEWRETDOCID char(16) declare @Line numeric(19,5) declare @NoteIndex numeric(19,5) declare @OldNoteIndex numeric(19,5) declare @NewNoteIndex numeric(19,5) declare @RMAStatus smallint declare @ReturnStatus char(3), @RetType char(11) declare @Received tinyint declare @USERID char(15) declare @MinDate datetime declare @QtyInBase numeric(19,5),@item varchar(31),@UOM char(10), @Qty numeric(19,5) declare @UnitCost numeric(19,5),@UnitPrice numeric(19,5)  declare @OrigUnitCost numeric(19,5),@OrigUnitPrice numeric(19,5)  declare @Description char(100) declare @svcRMAComponentSeq int declare @ITEMTYPE smallint  select @USERID = SYSTEM_USER select @RetType = RETTYPE, @OldNoteIndex = NOTEINDX from SVC05000 where RETDOCID = @RETDOCID and Return_Record_Type = @RecType select @ReturnStatus = RETSTAT from SVC05501 where RETTYPE = @RetType if @OldNoteIndex > 0  exec SVC_Copy_Note @OldNoteIndex, @NewNoteIndex output else  exec SVC_Get_Next_Note_Index @NewNoteIndex output exec SVC_New_DocumentID 'RMA', @NEWRETDOCID  OUTPUT select @Received = 0, @RMAStatus = 0 exec smGetMinDate @MinDate output   insert into SVC05000 with (rowlock)  select @NEWRETDOCID, 1, @RMAStatus, @Received, RETORIG, RETREF,  @ReturnStatus, RETTYPE,   CONVERT(char(10),GETDATE(),102) + ' 00:00:00' ,   @MinDate + CONVERT(char(5),GETDATE(),108),   @MinDate, @MinDate, @MinDate, @MinDate, @MinDate, @MinDate,  @USERID, OFFID, RTRNNAME,RETADDR1,  RETADDR2, RETADDR3, RTRNCITY, SVC_Return_State, RTRNZIP, Return_Country,  LOCNCODE, CUSTNMBR,ADRSCODE,CUSTNAME, CONTACT, ADDRESS1, ADDRESS2, ADDRESS3, CITY, STATE,ZIPCODE, COUNTRY,  @NewNoteIndex, CALLNBR,SRVRECTYPE, EQPLINE, LNITMSEQ, Bill_of_Lading, SHIPMTHD, SOPTYPE, SOPNUMBE,  SOP_Line_Item_Sequence, CMPNTSEQ, Bill_To_Customer, SVC_Bill_To_Address_Code, @MinDate, @MinDate,  USERDEF1, USERDEF2, USRDEF03, USRDEF04, USRDEF05,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE,  EXCHDATE, DECPLACS, TIME1, RATECALC, VIEWMODE,ISMCTRX, EXPNDATE, DENXRATE, MCTRXSTT, CSTPONBR,  SVC_RMA_Reason_Code, SVC_RMA_Reason_Code_Desc,SVC_RMA_From_Service, '' from SVC05000  where RETDOCID = @RETDOCID and Return_Record_Type = @RecType  if @@error <> 0 goto baderror  declare RMA_Lines cursor for select LNSEQNBR, RETTYPE,NOTEINDX, svcRMAComponentSeq, ITEMNMBR from SVC05200   where RETDOCID = @RETDOCID and Return_Record_Type = @RecType   order by LNSEQNBR, svcRMAComponentSeq open RMA_Lines fetch next from RMA_Lines into @Line, @RetType,@NoteIndex, @svcRMAComponentSeq, @item while (@@fetch_status = 0)   begin  select @ReturnStatus = RETSTAT from SVC05501 where RETTYPE = @RetType   select @ITEMTYPE = ITEMTYPE from IV00101 where ITEMNMBR = @item  if @NoteIndex > 0       exec SVC_Copy_Note @NoteIndex, @NewNoteIndex output  else  exec SVC_Get_Next_Note_Index @NewNoteIndex output   insert into SVC05200 with (rowlock) select   @NEWRETDOCID, 1, @Line, 0,0,   RETTYPE, @RMAStatus, @ReturnStatus, case when @ITEMTYPE > 3 then 1 else 0 end, 0, 0,   SVC_RMA_Reason_Code, SVC_RMA_Reason_Code_Desc, @NewNoteIndex, RETORIG, RETREF, SRVRECTYPE, CALLNBR, EQPLINE, LNITMSEQ,  SVC_RMA_From_Service, SOPTYPE, SOPNUMBE, CMPNTSEQ,SOP_Line_Item_Sequence,   CONVERT(char(10),GETDATE(),102) + ' 00:00:00' ,   @MinDate + CONVERT(char(5),GETDATE(),108),  @MinDate, @MinDate, @MinDate, @MinDate, @MinDate, @MinDate, @MinDate, @MinDate,  PRMDATE, REFRENCE, @USERID, OFFID,   LOCNCODE,RTRNNAME, RETADDR1, RETADDR2, RETADDR3, RTRNCITY,SVC_Return_State, RTRNZIP,Return_Country,  CUSTNMBR, CUSTNAME, ADRSCODE, CONTACT, ADDRESS1,ADDRESS2, ADDRESS3, CITY, STATE, ZIPCODE,COUNTRY,   Bill_To_Customer, SVC_Bill_To_Address_Code, CSTPONBR, QUANTITY, DECPLQTY, UOFM,ITEMNMBR,ITEMDESC,  UNITCOST, ORUNTCST, EXTDCOST, OREXTCST, UNITPRCE, ORUNTPRC, XTNDPRCE, OXTNDPRC, CUSTOWN,  FACTSEAL,  '', 0, 0, Flat_Rate_Repair_Price, Orig_Flat_RepairPrice,  Repair_Price, Originating_Repair_Price, NTE_Price, Originating_NTE_Price, Repair_Cost, Originating_Repair_Cost,  Bill_of_Lading, SHIPMTHD, 0, '', 0,   0, '', 0, Location_Code_Replacemen, Replace_Item_Number,  Replace_U_Of_M, Replace_Price_Level, Replace_QTY, Replace_Cost, Originating_Replace_Cost, Replace_Price,  Originating_Replace_Pric, '', Item_Number_Invoice,   USERDEF1, USERDEF2, USRDEF03, USRDEF04, USRDEF05, CURRNIDX, DECPLCUR, ODECPLCU,   Return_Item_Number, Return_Item_Description, Return_Location_Code, 0, Return_U_Of_M, 0, 0, 0, 0,   SVC_Return_Price_Level, 0, 0, 0, 0, '',0 , svcRMAKitComponentFrom, @svcRMAComponentSeq, CMPITQTY,  QTYONHND, QTYRTRND, QTYINUSE, QTYINSVC, QTYDMGED,0,0 from SVC05200  where RETDOCID = @RETDOCID and Return_Record_Type = @RecType and LNSEQNBR = @Line and svcRMAComponentSeq = @svcRMAComponentSeq  if @@error <> 0 goto baderror  fetch next from RMA_Lines into @Line, @RetType,@NoteIndex, @svcRMAComponentSeq, @item  end deallocate RMA_Lines  select @Description = 'Copy RMA from ' + @RETDOCID exec SVC_Create_RMA_Audit @NEWRETDOCID, @Line, '', @ReturnStatus, @Description , @USERID  select @RETDOCID = @NEWRETDOCID  return baderror:  return   
GO
GRANT EXECUTE ON  [dbo].[SVC_Copy_RMA] TO [DYNGRP]
GO

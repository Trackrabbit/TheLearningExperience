SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMCommissions]  @I_vRMDTYPAL smallint,    @I_vDOCNUMBR char(20),    @I_vSEQNUMBR int = 0,    @I_vCUSTNMBR char(15),     @I_vSLPRSNID char(15),    @I_vSALSTERR char(15)='',   @I_vCOMPRCNT numeric(19,2)=0,   @I_vCOMDLRAM numeric(19,2)=0,    @I_vDOCAMNT  numeric(19,2),   @I_vPRCTOSAL numeric(19,2)=100.00,  @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @SEQNUMBR int,  @CURNCYID char(15),  @CURRNIDX int,  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @CMMSLAMT numeric(19,2),  @NCOMAMNT numeric(19,2),  @COMDLRAM numeric(19,2)  select  @iStatus = 0,  @iError = 0,  @O_iErrorState = 0,  @CMMSLAMT = 0,  @NCOMAMNT = 0,  @CURNCYID = '',  @CURRNIDX = 0,  @SEQNUMBR = 0,   @COMDLRAM = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taRMCommissionsPre  @I_vRMDTYPAL output,  @I_vDOCNUMBR output,  @I_vSEQNUMBR output,  @I_vCUSTNMBR output,  @I_vSLPRSNID output,  @I_vSALSTERR output,  @I_vCOMPRCNT output,  @I_vCOMDLRAM output,  @I_vDOCAMNT  output,  @I_vPRCTOSAL output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 7427    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vRMDTYPAL is NULL or  @I_vDOCNUMBR is NULL or  @I_vSLPRSNID is NULL or  @I_vCUSTNMBR is NULL or   @I_vRequesterTrx is NULL) begin  select @O_iErrorState = 7428     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRMDTYPAL = 0 or   @I_vDOCNUMBR = '' or  @I_vSLPRSNID = '' or   @I_vCUSTNMBR = '' or   @I_vDOCAMNT = 0 ) begin  select @O_iErrorState = 7429    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vSALSTERR = UPPER(@I_vSALSTERR),  @I_vSLPRSNID = UPPER(@I_vSLPRSNID)  select  @I_vCOMPRCNT =  case   when @I_vCOMPRCNT = 0   then COMPRCNT/100.00  else @I_vCOMPRCNT  end  from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID  if ( @I_vDOCAMNT < 0 )  begin  select @O_iErrorState = 7448     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @NCOMAMNT = @I_vDOCAMNT - round((@I_vDOCAMNT * @I_vPRCTOSAL) / 100, 2)  select @CMMSLAMT = round((@I_vDOCAMNT * @I_vPRCTOSAL) / 100, 2)  if ( @I_vCUSTNMBR <> '' ) begin  if (not exists (select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR ))  begin  select @O_iErrorState = 7430    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vSLPRSNID <> '' ) begin  if (not exists (select 1 from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID ))  begin  select @O_iErrorState = 7431    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (exists (select 1 from RM00301 (nolock) where SLPRSNID = @I_vSLPRSNID and INACTIVE = 1))  begin  select @O_iErrorState = 9541    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vSALSTERR = '' ) begin  select @I_vSALSTERR = SALSTERR from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR end  if ( @I_vSALSTERR = '' ) begin  select @O_iErrorState = 7432     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vSALSTERR <> '' ) begin  if (not exists (select 1 from RM00303 (nolock) where SALSTERR = @I_vSALSTERR ))  begin  select @O_iErrorState = 7433     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vRMDTYPAL not in (1,3,4,5,6,7,8 )) begin  select @O_iErrorState = 7434     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRMDTYPAL = 4 )  begin   select @O_iErrorState = 7435     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRMDTYPAL = 6 )  begin   select @O_iErrorState = 7436     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRMDTYPAL = 7 )  begin   select @O_iErrorState = 7437     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCOMPRCNT < 0.00 or @I_vCOMPRCNT > 100.00) begin  select @O_iErrorState = 7438     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPRCTOSAL < 0.00 or @I_vPRCTOSAL > 100.00) begin  select @O_iErrorState = 7439     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists (select 1 from RM10501 (nolock) where SALSTERR = @I_vSALSTERR and SLPRSNID = @I_vSLPRSNID and DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL and CUSTNMBR = @I_vCUSTNMBR ) begin  select @O_iErrorState = 7440     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCOMDLRAM < 0.00) begin  select @O_iErrorState = 7441     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 5622     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> '')  return (@O_iErrorState)  select @CURNCYID = CURNCYID from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end  if (@I_vSEQNUMBR = 0) begin  select @SEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from RM10501 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR end else begin  select @SEQNUMBR = @I_vSEQNUMBR end  if exists (select 1 from RM10501 (nolock) where DOCNUMBR = @I_vDOCNUMBR and SEQNUMBR = @SEQNUMBR and RMDTYPAL = @I_vRMDTYPAL) begin  select @O_iErrorState = 7442     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @COMDLRAM = (((@I_vDOCAMNT * (@I_vPRCTOSAL / 100)) * @I_vCOMPRCNT)) /100  select @I_vPRCTOSAL = @I_vPRCTOSAL * 100 select @I_vCOMPRCNT = @I_vCOMPRCNT * 100  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Receivables_Transaction',  @I_vINDEX1=@I_vDOCNUMBR,  @I_vINDEX2=@I_vRMDTYPAL,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 7444    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  insert RM10501  (  NCOMAMNT,  RMDTYPAL,  COMPRCNT,  DOCNUMBR,  SEQNUMBR,  TRXSORCE,  COMTRSRC,  CUSTNMBR,  SLPRSNID,  SALSTERR,  COMMCODE,  PRCTOSAL,  SLSAMNT,  COMDLRAM,  POSTED,  COMMPAID,  COMMDEST,  ORCOMAMT,  ORNCMAMT,  ORSLSAMT,  CURRNIDX  )  select  @NCOMAMNT,    @I_vRMDTYPAL,    @I_vCOMPRCNT,    @I_vDOCNUMBR,    @SEQNUMBR,    '',     '',     @I_vCUSTNMBR,    @I_vSLPRSNID,    @I_vSALSTERR,    '',     @I_vPRCTOSAL,    @CMMSLAMT,    case      WHEN @I_vCOMDLRAM = 0   THEN @COMDLRAM   ELSE @I_vCOMDLRAM  end,  0,     0,     0,     case     WHEN @I_vCOMDLRAM = 0   THEN @COMDLRAM   ELSE @I_vCOMDLRAM  end,  @NCOMAMNT,    @CMMSLAMT,     @CURRNIDX   if (@@error <> 0) begin  select @O_iErrorState = 7445    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taRMCommissionsPost  @I_vRMDTYPAL,  @I_vDOCNUMBR,  @I_vSEQNUMBR,  @I_vCUSTNMBR,  @I_vSLPRSNID,  @I_vSALSTERR,  @I_vCOMPRCNT,  @I_vCOMDLRAM,  @I_vDOCAMNT,  @I_vPRCTOSAL,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 7446    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Receivables_Transaction',   @I_vINDEX1=@I_vDOCNUMBR,  @I_vINDEX2=@I_vRMDTYPAL,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 7447    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMCommissions] TO [DYNGRP]
GO

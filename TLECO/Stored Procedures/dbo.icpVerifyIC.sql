SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icpVerifyIC]  @I_cBatchNumber char(15)  = NULL,  @I_cBatchSource  char(15)  = NULL,  @I_cOrigICID    char(5)  = NULL,  @I_tICRegistered tinyint  = NULL,  @O_bHeaderMessages binary(4)       = NULL  output,  @O_iErrorState      int             = NULL  output as   declare  @TRUE                   tinyint,   @FALSE         tinyint,   @MS_ITEM_21 int,  @MS_ITEM_22 int,  @MS_ITEM_23 int,  @tTransaction          int,  @tLoop          tinyint,  @FINANCIAL smallint,  @PURCHASING smallint,  @SUMMARY_CHECKED smallint,  @UNREGISTERED_CHECKED smallint,  @WORK smallint,  @iStatus int,  @iError int,  @vNormal varchar(1)  select  @O_bHeaderMessages = 0x00000000,   @O_iErrorState   = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin    select @tLoop = 1   if      @I_cBatchNumber is NULL or   @I_cBatchSource  is NULL or  @I_tICRegistered  is NULL or  @I_cOrigICID   is NULL  begin  select @O_iErrorState = 20900   break  end    exec @iStatus = DYNAMICS.dbo.smGetConstantString  'DTA_GLREFDELIMITER_NORMAL',   @vNormal output,   @O_iErrorState output   select @iError = @@error   if (@O_iErrorState <> 0)  break   if (@iStatus <> 0) or (@iError <> 0)  begin  select @O_iErrorState = 21092  break  end   select  @TRUE            = 1,   @FALSE           = 0,   @MS_ITEM_21  = power(2, 12),  @MS_ITEM_22  = power(2, 13),  @MS_ITEM_23  = power(2, 14),  @FINANCIAL  = 2,  @PURCHASING  = 4,  @SUMMARY_CHECKED = 1,  @UNREGISTERED_CHECKED = 8,  @WORK   = 1   update   GL10000   set  GL10000.GLHDRMSG = (GL10000.GLHDRMSG | @MS_ITEM_21)  from   GL10000,   GL10001   where  GL10000.BCHSOURC = @I_cBatchSource  and GL10000.BACHNUMB  = @I_cBatchNumber   and    GL10000.ICTRX  = @FALSE   and GL10000.JRNENTRY  = GL10001.JRNENTRY   and GL10001.INTERID <> @I_cOrigICID    if @@rowcount > 0   select @O_bHeaderMessages = (@O_bHeaderMessages | @MS_ITEM_21)   update   GL10000   set  ICDISTS = @TRUE  from   GL10000,  GL10001   where  GL10000.BCHSOURC = @I_cBatchSource  and GL10000.BACHNUMB  = @I_cBatchNumber   and    GL10000.ICDISTS  = @FALSE   and GL10000.JRNENTRY = GL10001.JRNENTRY   and GL10001.INTERID <> @I_cOrigICID   update   GL10000   set  ICDISTS = @FALSE  where  GL10000.BCHSOURC = @I_cBatchSource  and GL10000.BACHNUMB  = @I_cBatchNumber   and    GL10000.ICDISTS  = @TRUE   and not exists(  select   1   from   GL10001   where  GL10001.JRNENTRY  =  GL10000.JRNENTRY   and GL10001.INTERID   <> @I_cOrigICID)   if @I_tICRegistered = @FALSE   begin  update   GL10000   set  GLHDRMSG = (GLHDRMSG | @MS_ITEM_22)  where   (ICDISTS   = @TRUE   or ICTRX  = @TRUE)  and BCHSOURC  = @I_cBatchSource   and BACHNUMB  = @I_cBatchNumber    if @@rowcount > 0   select @O_bHeaderMessages = (@O_bHeaderMessages | @MS_ITEM_22)   end     update   HDR   set  HDR.GLHDRMSG = (HDR.GLHDRMSG | @MS_ITEM_23)  from  GL10000 HDR JOIN GL10001 LINE with (NOLOCK) ON (HDR.JRNENTRY = LINE.JRNENTRY)  JOIN DTA10100 DTA with (NOLOCK) ON (HDR.JRNENTRY = DTA.JRNENTRY and LINE.ACTINDX = DTA.ACTINDX and DTA.PSTGSTUS = @WORK)  where   HDR.BCHSOURC = @I_cBatchSource   and HDR.BACHNUMB = @I_cBatchNumber  and HDR.ICDISTS = @TRUE   and LINE.INTERID <> @I_cOrigICID  and (LINE.DTA_GL_Status & @SUMMARY_CHECKED) <> @SUMMARY_CHECKED  and  (   (  ( LINE.OrigSeqNum = 0  or (LINE.DTA_GL_Status & @UNREGISTERED_CHECKED) = @UNREGISTERED_CHECKED  )  and DTA.DTASERIES = @FINANCIAL  and LINE.SQNCLINE = DTA.SEQNUMBR  )   OR  (  ( LINE.OrigSeqNum <> 0  and  (LINE.DTA_GL_Status & @UNREGISTERED_CHECKED) <> @UNREGISTERED_CHECKED  )  and DTA.DTASERIES = @PURCHASING  and LINE.OrigSeqNum = DTA.SEQNUMBR  )   )   if @@rowcount > 0   select @O_bHeaderMessages = (@O_bHeaderMessages | @MS_ITEM_23)   update   HDR  set  HDR.GLHDRMSG = (HDR.GLHDRMSG | @MS_ITEM_23)  from  GL10000 HDR JOIN GL10001 LINE with (NOLOCK) ON (HDR.JRNENTRY = LINE.JRNENTRY)  JOIN DTA10100 DTA with (NOLOCK) ON (  (DTA.DTASERIES = @PURCHASING)  and (DTA.DTA_GL_Reference =   (rtrim(substring(   substring(convert(char(20),HDR.DTA_Index),1, charindex('.',convert(char(20),HDR.DTA_Index)) - 1) +   substring(convert(char(20),HDR.DTA_Index), charindex('.',convert(char(20),HDR.DTA_Index)) + 1, len(convert(char(20),HDR.DTA_Index)))  ,1,18)) + @vNormal) )  and     (DTA.ACTINDX = LINE.ACTINDX) )  where   HDR.BCHSOURC = @I_cBatchSource   and HDR.BACHNUMB = @I_cBatchNumber  and HDR.ICDISTS = @TRUE   and HDR.SERIES = @PURCHASING  and LINE.INTERID <> @I_cOrigICID  and (LINE.DTA_GL_Status & @SUMMARY_CHECKED) = @SUMMARY_CHECKED   if @@rowcount > 0   select @O_bHeaderMessages = (@O_bHeaderMessages | @MS_ITEM_23)  end   if @O_iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return     
GO
GRANT EXECUTE ON  [dbo].[icpVerifyIC] TO [DYNGRP]
GO

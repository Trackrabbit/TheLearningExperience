SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taFSRMALineSerial] @I_vReturn_Record_Type smallint,  @I_vRETDOCID char(15),    @I_vCUSTNMBR char(15) = null,   @I_vADRSCODE char(15) = null,   @I_vLNSEQNBR numeric(19,5) = 0,   @I_vQTYTYPE smallint = 1,   @I_vSERLTQTY numeric(19,5) = 1,   @I_vITEMNMBR char(31) = null,   @I_vSERLNMBR char(21) = null,    @I_vLOCNCODE char(11) = null,   @I_vSLTSQNUM integer = 0,   @I_vBIN char(15) = null,   @I_vSVC_Original_Serial tinyint = null,  @I_vDATERECD datetime = null,   @I_vReplaceItem smallint = 0,   @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',     @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @O_DUMMYDT datetime,  @Line_Seq_Exists smallint,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @iAddCodeErrState int,    @O_oErrorState int,  @iError int,  @sCompanyID smallint,    @O_vEquipment_ID int,  @O_vTRXSORCE char(13),  @O_vMARKED tinyint,  @O_vPOSTED tinyint,  @iQtySold numeric(19,5),  @iSerialSold smallint,  @SRLSTAT char(10),  @O_vADDRESS1 char(30),  @O_vADDRESS2 char(30),  @O_vADDRESS3 char(30),  @O_vCOUNTRY char(30),  @O_vCITY char(30),  @O_vSTATE char(30),  @O_vZIP char(10),  @O_vCNTCPRSN char(30),  @O_vPHONE1 char(22),  @O_vSERLTQTY numeric(17,5),  @iValueExists smallint,  @O_vDTSEQNUM numeric(19,5),  @O_vRETCOST numeric(19,5),  @iSTNDCOST numeric(19,5),  @iCURRCOST numeric(19,5)  select   @O_DUMMYDT = convert(varchar(10), '1900/01/01', 101),  @Line_Seq_Exists = 0,  @iStatus  = 0,  @iCustomState  = 0,  @iCustomErrString = '',  @iAddCodeErrState  = 0,  @O_oErrorState  = 0,  @iError  = 0,  @sCompanyID  = 0,  @O_vEquipment_ID = 0,  @O_vTRXSORCE = '',  @O_vMARKED = 0,  @O_vPOSTED = 0,  @O_iErrorState = 0,  @oErrString = '',  @iQtySold = 0,  @iSerialSold = 0,  @SRLSTAT = '',  @O_vADDRESS1 = '',  @O_vADDRESS2 = '',  @O_vADDRESS3 = '',  @O_vCOUNTRY = '',  @O_vCITY = '',  @O_vSTATE = '',  @O_vZIP = '',  @O_vCNTCPRSN = '',  @O_vPHONE1 = '',  @O_vSERLTQTY =1,  @iValueExists = 0,  @O_vDTSEQNUM = 1,  @O_vRETCOST = 0,  @iSTNDCOST = 0,  @iCURRCOST = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taFSRMALineSerialPre  @I_vReturn_Record_Type output,  @I_vRETDOCID output,  @I_vCUSTNMBR output,  @I_vADRSCODE output,  @I_vLNSEQNBR output,  @I_vQTYTYPE output,  @I_vSERLTQTY output,  @I_vITEMNMBR output,  @I_vSERLNMBR output,  @I_vLOCNCODE output,  @I_vSLTSQNUM output,  @I_vBIN output,  @I_vSVC_Original_Serial output,  @I_vDATERECD output,  @I_vReplaceItem output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10000     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @SRLSTAT = isnull(SRLSTAT, '')  from SVC00998 (nolock)  if( @I_vReturn_Record_Type is NULL or  @I_vRETDOCID  is NULL or  @I_vITEMNMBR  is NULL or  @I_vCUSTNMBR is NULL or  @I_vADRSCODE is NULL or  @I_vLOCNCODE is NULL or  @I_vQTYTYPE is NULL or  @I_vSERLNMBR is NULL or  @I_vLNSEQNBR is NULL  ) begin  set @O_iErrorState = 10001    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vReturn_Record_Type=0 or  @I_vRETDOCID='' or  @I_vCUSTNMBR = '' or  @I_vADRSCODE = '' or  @I_vITEMNMBR = '' or  @I_vSERLNMBR = '' or  @I_vLOCNCODE = '' or  @I_vLNSEQNBR = 0  ) begin  set @O_iErrorState = 10002    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vLNSEQNBR < 0 or  @I_vSLTSQNUM < 0 or  @I_vQTYTYPE < 0 or  @I_vReplaceItem < 0 or  @I_vSVC_Original_Serial < 0 or  @O_vRETCOST < 0  ) begin  set @O_iErrorState = 10003    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vUpdateIfExists not in (0,1)) begin  set @O_iErrorState = 10026     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vRETDOCID = UPPER(@I_vRETDOCID),  @I_vITEMNMBR = UPPER(rtrim(@I_vITEMNMBR)),  @I_vSERLNMBR = UPPER(rtrim(@I_vSERLNMBR)),  @I_vCUSTNMBR = UPPER(rtrim(@I_vCUSTNMBR)),  @I_vADRSCODE = UPPER(rtrim(@I_vADRSCODE)),  @I_vLOCNCODE = UPPER(rtrim(@I_vLOCNCODE))  if ((@I_vReturn_Record_Type < 1) or (@I_vReturn_Record_Type > 2)) begin  set @O_iErrorState = 10004    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC05015 (nolock) where RETDOCID = @I_vRETDOCID and MKDTOPST = 1) begin  set @O_iErrorState = 10005    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vQTYTYPE < 1 or @I_vQTYTYPE > 5) begin  set @O_iErrorState = 10006     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vSVC_Original_Serial < 0 or @I_vQTYTYPE > 1) begin  set @O_iErrorState = 10024     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vReplaceItem = 0)  begin  if (@I_vSLTSQNUM = 0)  begin  select @I_vSLTSQNUM = (isnull(max(SLTSQNUM),0) + 1) from SVC05255 (nolock)   where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE  end end else  begin  if (@I_vSLTSQNUM = 0)  begin  select @I_vSLTSQNUM = (isnull(max(SLTSQNUM),0) + 1) from SVC05256 (nolock)   where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE  end end  if (@I_vReplaceItem = 0)  begin  if exists (select 1 from SVC35255 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM)  begin  select @Line_Seq_Exists=1  set @O_iErrorState = 10031    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  if exists (select 1 from SVC05255 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  and Return_Item_Number = @I_vITEMNMBR)  begin  select @Line_Seq_Exists=1  end  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)   begin  set @O_iErrorState = 10008    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else  begin  if exists (select 1 from SVC35256 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM)  begin  select @Line_Seq_Exists=1  set @O_iErrorState = 10009    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  if exists (select 1 from SVC05256 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  and Replace_Item_Number = @I_vITEMNMBR)  begin  select @Line_Seq_Exists=1  end  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)   begin  set @O_iErrorState = 10010    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vReplaceItem = 0)  begin  if (@Line_Seq_Exists=1)  begin  select  @I_vITEMNMBR = case  when @I_vITEMNMBR is null then isnull(Return_Item_Number, '')  else @I_vITEMNMBR  end,  @I_vSERLNMBR = case  when @I_vSERLNMBR is null then isnull(Return_Serial_Number, '')  else @I_vSERLNMBR  end,  @O_vSERLTQTY = case  when @I_vSERLTQTY <= 0 then isnull(SERLTQTY, 1)  else @I_vSERLTQTY  end,  @O_vEquipment_ID = isnull(Return_Equipment_ID, 0),  @I_vSLTSQNUM = case  when @I_vSLTSQNUM is null then isnull(SLTSQNUM, 0)  else @I_vSLTSQNUM  end,  @I_vBIN = case  when @I_vBIN is null then isnull(BIN, '')  else @I_vBIN  end,  @O_vRETCOST = isnull(RETCOST, 0),  @I_vSVC_Original_Serial = case  when @I_vSVC_Original_Serial is null then isnull(SVC_Original_Serial, 0)  else @I_vSVC_Original_Serial  end,  @I_vDATERECD = case  when @I_vDATERECD is null then isnull(DATERECD, @O_DUMMYDT)  else @I_vDATERECD  end,  @O_vDTSEQNUM = isnull(DTSEQNUM, 1),  @O_vTRXSORCE = isnull(TRXSORCE, ''),  @O_vMARKED = isnull(MARKED, 0),  @O_vPOSTED = isnull(POSTED, 0)  from SVC05255 (nolock)  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  end  else  begin  select  @I_vITEMNMBR = case  when @I_vITEMNMBR is null then ''  else @I_vITEMNMBR  end,  @I_vSERLNMBR = case  when @I_vSERLNMBR is null then ''  else @I_vSERLNMBR  end,  @I_vSLTSQNUM = case  when @I_vSLTSQNUM is null then 0  else @I_vSLTSQNUM  end,  @I_vBIN = case  when @I_vBIN is null then ''  else @I_vBIN  end,  @O_vRETCOST = case  when @O_vRETCOST <> 0 then @O_vRETCOST  else 0  end,  @I_vSVC_Original_Serial = case  when @I_vSVC_Original_Serial is null then 0  else @I_vSVC_Original_Serial  end,  @I_vDATERECD = case  when @I_vDATERECD is null then @O_DUMMYDT  else @I_vDATERECD  end,  @O_vEquipment_ID = 0,  @O_vDTSEQNUM = 0,  @O_vTRXSORCE = '',  @O_vMARKED = 0,  @O_vPOSTED = 0  end end else begin  if (@Line_Seq_Exists=1)  begin  select  @I_vITEMNMBR = case  when @I_vITEMNMBR is null then isnull(Replace_Item_Number, '')  else @I_vITEMNMBR  end,  @I_vSERLNMBR = case  when @I_vSERLNMBR is null then isnull(Replace_Serial_Number, '')  else @I_vSERLNMBR  end,  @O_vSERLTQTY = case  when @I_vSERLTQTY <= 0 then isnull(SERLTQTY, 1)  else @I_vSERLTQTY  end,  @O_vEquipment_ID = isnull(Replace_Equipment_ID, 0),  @I_vSLTSQNUM = case  when @I_vSLTSQNUM is null then isnull(SLTSQNUM, 0)  else @I_vSLTSQNUM  end,  @I_vBIN = case  when @I_vBIN is null then isnull(BIN, '')  else @I_vBIN  end,  @O_vRETCOST = isnull(Replace_Cost, 0),  @I_vSVC_Original_Serial = 0,  @I_vDATERECD = @O_DUMMYDT  from SVC05256 (nolock)  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  end  else  begin  select  @I_vITEMNMBR = case  when @I_vITEMNMBR is null then ''  else @I_vITEMNMBR  end,  @I_vSERLNMBR = case  when @I_vSERLNMBR is null then ''  else @I_vSERLNMBR  end,  @I_vSLTSQNUM = case  when @I_vSLTSQNUM is null then 0  else @I_vSLTSQNUM  end,  @I_vBIN = case  when @I_vBIN is null then ''  else @I_vBIN  end,  @O_vRETCOST = case  when @O_vRETCOST <> 0 then @O_vRETCOST  else 0  end,  @I_vSVC_Original_Serial = 0,  @I_vDATERECD = @O_DUMMYDT,  @O_vEquipment_ID = 0  end end  if (@I_vITEMNMBR <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @iSTNDCOST = isnull(STNDCOST, 0.0), @iCURRCOST = isnull(CURRCOST, 0.0)   from IV00101 (nolock) where ITEMNMBR=@I_vITEMNMBR and ITMTRKOP = 2  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10007     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @O_vRETCOST = case  when @O_vRETCOST = 0 and @iCURRCOST > 0 then @iCURRCOST  when @O_vRETCOST = 0 and @iSTNDCOST > 0 then @iSTNDCOST  else 0  end  if (@I_vCUSTNMBR <> '') begin  if not exists(select 1 from RM00101 (nolock) where CUSTNMBR=@I_vCUSTNMBR)  begin  set @O_iErrorState = 10027     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vADRSCODE <> '') begin  set @iValueExists = 0  select  @iValueExists = 1,   @O_vADDRESS1=isnull(ADDRESS1,''),  @O_vADDRESS2=isnull(ADDRESS2,''),  @O_vADDRESS3=isnull(ADDRESS3,''),  @O_vCOUNTRY=isnull(COUNTRY,''),  @O_vCITY=isnull(CITY,''),  @O_vSTATE=isnull(STATE,''),  @O_vZIP=isnull(ZIP,''),  @O_vCNTCPRSN=isnull(CNTCPRSN,0),  @O_vPHONE1=isnull(PHONE1,'')  from RM00102 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if (@iValueExists <> 1)  begin  set @O_iErrorState = 10028    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vLOCNCODE <> '')  begin  if not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10029    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)   end  else   begin  if not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @I_vLOCNCODE)  begin  set @O_iErrorState = 10030    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if exists(select 1 from SVC05210 (nolock) where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and SLTSQNUM = @I_vSLTSQNUM) begin  set @O_iErrorState = 10011    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@Line_Seq_Exists = 1) and (@I_vSERLTQTY < 0) begin  if (@I_vReplaceItem = 0)   begin  delete from SVC05255 where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  if (@@error <> 0)  begin  set @O_iErrorState = 10012     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else   begin  delete from SVC05256 where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  if (@@error <> 0)  begin  set @O_iErrorState = 10013     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vSERLNMBR <> '') begin  set @O_vEquipment_ID = 0  set @iValueExists = 0  select @iValueExists = 1, @iSerialSold = SERLNSLD, @O_vDTSEQNUM = isnull(DTSEQNUM, 0)  from IV00200 (nolock) where ITEMNMBR=@I_vITEMNMBR AND LOCNCODE = @I_vLOCNCODE AND SERLNMBR = @I_vSERLNMBR   if (@iValueExists = 1)  begin  set @O_iErrorState = 10014     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   set @iValueExists = 0  select @iValueExists = 1, @O_vEquipment_ID = isnull(EQUIPID,0) from SVC00300 (nolock)   where ITEMNMBR=@I_vITEMNMBR AND SERLNMBR = @I_vSERLNMBR AND CUSTNMBR = @I_vCUSTNMBR  if (@iValueExists <> 1)  begin  set @O_iErrorState = 10015     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   set @iValueExists = 0   if exists(select 1 from SVC05255 where Return_Item_Number = @I_vITEMNMBR AND Return_Serial_Number = @I_vSERLNMBR AND POSTED = 0   AND ((SLTSQNUM <> @I_vSLTSQNUM AND RETDOCID = @I_vRETDOCID) or (RETDOCID <> @I_vRETDOCID)))  or exists(select 1 from SVC05256 where Replace_Item_Number = @I_vITEMNMBR AND Replace_Serial_Number = @I_vSERLNMBR   AND SLTSQNUM <> @I_vSLTSQNUM AND RETDOCID = @I_vRETDOCID)  set @iValueExists = 1  if (@iValueExists = 1)  begin  set @O_iErrorState = 10025     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@O_vEquipment_ID = 0)  begin  select @O_vEquipment_ID = isnull(max(EQUIPID)+1, 1) from SVC00300 (nolock)   end end  if (@I_vDATERECD is NULL)  set @I_vDATERECD = ''  if (@I_vDATERECD <> '') and not (datepart(hour,@I_vDATERECD) = 0 and datepart(minute,@I_vDATERECD) = 0 and datepart(second,@I_vDATERECD) = 0   and datepart(millisecond,@I_vDATERECD) = 0) begin  set @O_iErrorState = 10016     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end if (@I_vDATERECD = '')  set @I_vDATERECD = '01/01/1900'  if (@Line_Seq_Exists=0) begin  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name() end  if (@O_iErrorState <> '')  return (@O_iErrorState)  if (@Line_Seq_Exists=0) begin  if (@I_vReplaceItem = 0)   begin  insert into SVC05255( Return_Record_Type,  RETDOCID,  LNSEQNBR,  QTYTYPE,  SERLTQTY,  Return_Item_Number,  Return_Serial_Number,  Return_Equipment_ID,  SLTSQNUM,  BIN,  RETCOST,  SVC_Original_Serial,  DATERECD,  DTSEQNUM,  TRXSORCE,  MARKED,  POSTED,  MFGDATE,  EXPNDATE,  CMPNTSEQ  )  select  @I_vReturn_Record_Type,  @I_vRETDOCID,  @I_vLNSEQNBR,  @I_vQTYTYPE,  @O_vSERLTQTY,  @I_vITEMNMBR,  @I_vSERLNMBR,  @O_vEquipment_ID,  @I_vSLTSQNUM,  @I_vBIN,  @O_vRETCOST,  @I_vSVC_Original_Serial,  @I_vDATERECD,  @O_vDTSEQNUM,  @O_vTRXSORCE,  @O_vMARKED,  @O_vPOSTED,  '1900-01-01',    '1900-01-01',    0       if (@@error <> 0)  begin  set @O_iErrorState = 10017    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else   begin  insert into SVC05256( Return_Record_Type,  RETDOCID,  LNSEQNBR,  QTYTYPE,  SERLTQTY,  Replace_Item_Number,  Replace_Serial_Number,  Replace_Equipment_ID,  SLTSQNUM,  BIN,  Replace_Cost,  MFGDATE,  EXPNDATE,  DATERECD,  DTSEQNUM,  CMPNTSEQ  )  select  @I_vReturn_Record_Type,  @I_vRETDOCID,  @I_vLNSEQNBR,  @I_vQTYTYPE,  @O_vSERLTQTY,  @I_vITEMNMBR,  @I_vSERLNMBR,  @O_vEquipment_ID,  @I_vSLTSQNUM,  @I_vBIN,  @O_vRETCOST,  '1900-01-01',    '1900-01-01',    '1900-01-01',    0,       0       if (@@error <> 0)  begin  set @O_iErrorState = 10018    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end else begin  if (@I_vReplaceItem = 0)   begin  if (@I_vUpdateIfExists > 0)  begin  update SVC05255 set  Return_Record_Type = @I_vReturn_Record_Type,  RETDOCID = @I_vRETDOCID,  LNSEQNBR = @I_vLNSEQNBR,  QTYTYPE = @I_vQTYTYPE,  SERLTQTY = @O_vSERLTQTY,  Return_Item_Number = @I_vITEMNMBR,  Return_Serial_Number = @I_vSERLNMBR,  Return_Equipment_ID = @O_vEquipment_ID,  SLTSQNUM = @I_vSLTSQNUM,  BIN = @I_vBIN,  RETCOST = @O_vRETCOST,  SVC_Original_Serial = @I_vSVC_Original_Serial,  DATERECD = @I_vDATERECD,  DTSEQNUM = @O_vDTSEQNUM,  TRXSORCE = @O_vTRXSORCE,  MARKED = @O_vMARKED,  POSTED = @O_vPOSTED  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  if (@@error <> 0)  begin  set @O_iErrorState = 10019    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  end   else   begin  if (@I_vUpdateIfExists > 0)  begin  update SVC05256 set  Return_Record_Type = @I_vReturn_Record_Type,  RETDOCID = @I_vRETDOCID,  LNSEQNBR = @I_vLNSEQNBR,  QTYTYPE = @I_vQTYTYPE,  SERLTQTY = @O_vSERLTQTY,  Replace_Item_Number = @I_vITEMNMBR,  Replace_Serial_Number = @I_vSERLNMBR,  Replace_Equipment_ID = @O_vEquipment_ID,  SLTSQNUM = @I_vSLTSQNUM,  BIN = @I_vBIN,  Replace_Cost = @O_vRETCOST  where Return_Record_Type = @I_vReturn_Record_Type and RETDOCID = @I_vRETDOCID   and LNSEQNBR = @I_vLNSEQNBR and QTYTYPE = @I_vQTYTYPE and SLTSQNUM = @I_vSLTSQNUM  if (@@error <> 0)  begin  set @O_iErrorState = 10020    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  end end  if (@Line_Seq_Exists = 0 or (@Line_Seq_Exists = 1 and @I_vUpdateIfExists = 1)) begin  if not exists(select 1 from SVC00300 where SERLNMBR = @I_vSERLNMBR and ITEMNMBR = @I_vITEMNMBR)  begin  insert into SVC00300 (  EQUIPID,   SERLNMBR,   ITEMNMBR,   SRLSTAT,   INSTDTE,   CUSTNMBR,   ADRSCODE,   ADDRESS1,   ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIP,  COUNTRY,  CNTCPRSN)  values (@O_vEquipment_ID,  @I_vSERLNMBR,  @I_vITEMNMBR,  isnull(@SRLSTAT, ''),  convert(char(10), getdate(), 101),  @I_vCUSTNMBR,  @I_vADRSCODE,  @O_vADDRESS1,  @O_vADDRESS2,  @O_vADDRESS3,  @O_vCITY,  @O_vSTATE,  @O_vZIP,  @O_vCOUNTRY,  @O_vCNTCPRSN  )  if (@@error <> 0)  begin  set @O_iErrorState = 10021    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  begin  update SVC00300 set  SRLSTAT = isnull(@SRLSTAT, SRLSTAT),  INSTDTE = case   when INSTDTE = '' then convert(char(10), getdate(), 101)  else INSTDTE  end,  CUSTNMBR = @I_vCUSTNMBR,  ADRSCODE = @I_vADRSCODE,  ADDRESS1 = @O_vADDRESS1,  ADDRESS2 = @O_vADDRESS2,  ADDRESS3 = @O_vADDRESS3,  CITY = @O_vCITY,  STATE = @O_vSTATE,  ZIP = @O_vZIP,  COUNTRY = @O_vCOUNTRY,  CNTCPRSN = @O_vCNTCPRSN  where SERLNMBR = @I_vSERLNMBR and ITEMNMBR = @I_vITEMNMBR  if (@@error <> 0)  begin  set @O_iErrorState = 10022    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taFSRMALineSerialPost  @I_vReturn_Record_Type,  @I_vRETDOCID,  @I_vCUSTNMBR,  @I_vADRSCODE,  @I_vLNSEQNBR,  @I_vQTYTYPE,  @I_vSERLTQTY,  @I_vITEMNMBR,  @I_vSERLNMBR,  @I_vLOCNCODE,  @I_vSLTSQNUM,  @I_vBIN,   @I_vSVC_Original_Serial,  @I_vDATERECD,   @I_vReplaceItem,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  set @O_iErrorState = 10023    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taFSRMALineSerial] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopRcptLineTaxInsert]  @I_vVENDORID char(15),    @I_vPOPRCTNM char(17),    @I_vTAXDTLID char(15),    @I_vTAXTYPE smallint,    @I_vACTINDX int = 0,    @I_vACTNUMST varchar(75) = '',   @I_vTAXAMNT numeric(19,5) = 0,   @I_vTAXPURCH numeric(19,5) = 0,   @I_vTOTPURCH numeric(19,5) = 0,   @I_vRCPTLNNM int = 0,    @I_vFRTTXAMT numeric(19,5) = 0,   @I_vMSCTXAMT numeric(19,5) = 0,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @CURNCYID char(15),  @CURRNIDX int,  @TXDTLBSE tinyint,  @BKOUTTAX tinyint,  @TaxACTINDX int,  @ACTINDX int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @iError int,  @O_oErrorState int  select  @CURNCYID = '',  @CURRNIDX = 0,  @TXDTLBSE = 0,  @BKOUTTAX = 0,  @TaxACTINDX = 0,  @ACTINDX = 0,  @O_oErrorState = 0,  @O_iErrorState = 0,  @iStatus = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taPopRcptLineTaxInsertPre  @I_vVENDORID output,  @I_vPOPRCTNM output,  @I_vTAXDTLID output,  @I_vTAXTYPE output,  @I_vACTINDX output,  @I_vACTNUMST output,  @I_vTAXAMNT output,  @I_vTAXPURCH output,  @I_vTOTPURCH output,  @I_vRCPTLNNM output,  @I_vFRTTXAMT output,  @I_vMSCTXAMT output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 151    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM is NULL or  @I_vTAXDTLID is NULL or  @I_vACTINDX is NULL or  @I_vACTNUMST is NULL or  @I_vTAXAMNT is NULL or  @I_vTAXPURCH is NULL or  @I_vTOTPURCH is NULL or  @I_vTAXDTLID is NULL or  @I_vRCPTLNNM is NULL or  @I_vFRTTXAMT is NULL or  @I_vMSCTXAMT is NULL) begin  select @O_iErrorState = 20100    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vPOPRCTNM = '') and (@I_vTAXDTLID = '')) begin  select @O_iErrorState = 20101    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vPOPRCTNM = UPPER(@I_vPOPRCTNM),  @I_vTAXDTLID = UPPER(@I_vTAXDTLID)  select @TXDTLBSE = TXDTLBSE, @TaxACTINDX = ACTINDX from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID  if (@TXDTLBSE = 0) begin  select @O_iErrorState = 20102    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@TXDTLBSE = 1) begin  select @BKOUTTAX = 1 end  if (@I_vACTNUMST <> '') begin  select @ACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  if (@ACTINDX = 0)  begin  select @O_iErrorState = 440     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vACTINDX <> 0)  begin  if not exists(select 1 from GL00105 (nolock) where ACTINDX = @I_vACTINDX)  begin  select @O_iErrorState = 441     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @ACTINDX = @TaxACTINDX  if (@ACTINDX = 0)  begin  select @O_iErrorState = 20103    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  select @CURNCYID = CURNCYID from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@CURNCYID <> '') begin  select @CURRNIDX = CURRNIDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = FUNLCURR, @CURRNIDX = FUNCRIDX from MC40000 (nolock) end  if (@I_vTAXTYPE = 0) begin  if (exists(select 1 from POP10360 (nolock) where RCPTLNNM = @I_vRCPTLNNM and  POPRCTNM = @I_vPOPRCTNM and @I_vTAXDTLID = TAXDTLID))  begin  select @O_iErrorState = 860    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vFRTTXAMT <> 0) or (@I_vMSCTXAMT <> 0))  begin  select @O_iErrorState = 3913    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vTAXTYPE = 1)  begin  if (exists(select 1 from POP10360 (nolock) where RCPTLNNM = 2147483646 and  POPRCTNM = @I_vPOPRCTNM and TAXDTLID = @I_vTAXDTLID))  begin  select @O_iErrorState = 861    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vTAXAMNT <> 0) or (@I_vMSCTXAMT <> 0))  begin  select @O_iErrorState = 6262    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if (exists(select 1 from POP10360 (nolock) where RCPTLNNM = 2147483645 and  POPRCTNM = @I_vPOPRCTNM and @I_vTAXDTLID = TAXDTLID))  begin  select @O_iErrorState = 862    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vTAXAMNT <> 0) or (@I_vFRTTXAMT <> 0))  begin  select @O_iErrorState = 6264    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vTAXTYPE = 1) begin  select @I_vRCPTLNNM = 2147483646 end  if (@I_vTAXTYPE = 2) begin  select @I_vRCPTLNNM = 2147483645 end  if (@oErrString <> '')  return (@O_iErrorState)  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1=@I_vPOPRCTNM,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 2769   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  insert POP10360  (  POPRCTNM,  RCPTLNNM,  TAXDTLID,  ACTINDX,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  TAXPURCH,  ORGTXPCH,  TOTPURCH,  ORTOTPUR,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TXDTOTTX,  OTTAXPON,  TRXSORCE,  POP_Tax_Note_ID_Array_1,  POP_Tax_Note_ID_Array_2,  CURRNIDX,  DELETE1  )  select  @I_vPOPRCTNM,    @I_vRCPTLNNM,    @I_vTAXDTLID,    @ACTINDX,    @BKOUTTAX,    @I_vTAXAMNT,    @I_vTAXAMNT,    @I_vTAXPURCH,    @I_vTAXPURCH,    @I_vTAXPURCH,    @I_vTAXPURCH,    @I_vFRTTXAMT,    @I_vFRTTXAMT,    @I_vMSCTXAMT,    @I_vMSCTXAMT,    @I_vTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT,   @I_vTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT,   '',     0,     0,     @CURRNIDX,    0    if (@@error <> 0) begin  select @O_iErrorState = 20104    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRCPTLNNM > 0) begin  if (not exists(select 1 from POP10360 (nolock) where  POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and TAXDTLID = @I_vTAXDTLID and ACTINDX = @ACTINDX))  begin  insert POP10360  (  POPRCTNM,  RCPTLNNM,  TAXDTLID,  ACTINDX,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  TAXPURCH,  ORGTXPCH,  TOTPURCH,  ORTOTPUR,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TXDTOTTX,  OTTAXPON,  TRXSORCE,  POP_Tax_Note_ID_Array_1,  POP_Tax_Note_ID_Array_2,  CURRNIDX,  DELETE1  )  select  @I_vPOPRCTNM,    0,     @I_vTAXDTLID,    @ACTINDX,    @BKOUTTAX,    @I_vTAXAMNT,    @I_vTAXAMNT,    @I_vTAXPURCH,    @I_vTAXPURCH,    @I_vTOTPURCH,    @I_vTOTPURCH,    @I_vFRTTXAMT,    @I_vFRTTXAMT,    @I_vMSCTXAMT,    @I_vMSCTXAMT,    @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,   @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,   '',     0,     0,     @CURRNIDX,    0     if (@@error <> 0)  begin  select @O_iErrorState = 6127    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  update POP10360 set  TAXAMNT = TAXAMNT + @I_vTAXAMNT,  ORTAXAMT = ORTAXAMT + @I_vTAXAMNT,  FRTTXAMT = FRTTXAMT + @I_vFRTTXAMT,  ORFRTTAX = ORFRTTAX + @I_vFRTTXAMT,  MSCTXAMT = MSCTXAMT + @I_vMSCTXAMT,  ORMSCTAX = ORMSCTAX + @I_vMSCTXAMT,  TAXPURCH = TAXPURCH + @I_vTAXPURCH,  ORGTXPCH = ORGTXPCH + @I_vTAXPURCH,  TOTPURCH = TOTPURCH + @I_vTAXPURCH,  ORTOTPUR = TOTPURCH + @I_vTOTPURCH,  TXDTOTTX = TXDTOTTX + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT,  OTTAXPON = OTTAXPON + @I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT  where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = 0 and  TAXDTLID = @I_vTAXDTLID and ACTINDX = @ACTINDX  if (@@error <> 0)  begin  select @O_iErrorState = 6128    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPopRcptLineTaxInsertPost  @I_vVENDORID,  @I_vPOPRCTNM,  @I_vTAXDTLID,  @I_vTAXTYPE,  @I_vACTINDX,  @I_vACTNUMST,  @I_vTAXAMNT,  @I_vTAXPURCH,  @I_vTOTPURCH,  @I_vRCPTLNNM,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 152    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1=@I_vPOPRCTNM,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus = 0) and (@iError <> 0))  begin  select @iStatus = @iError  end  if ((@iStatus <> 0) or (@iCustomState <> 0))  begin  select @O_iErrorState = 2770   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopRcptLineTaxInsert] TO [DYNGRP]
GO

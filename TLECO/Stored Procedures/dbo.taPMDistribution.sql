SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPMDistribution] @I_vDOCTYPE smallint,    @I_vVCHRNMBR char(17),    @I_vVENDORID char(15),    @I_vDSTSQNUM int = 0,     @I_vDISTTYPE smallint,     @I_vDistRef char(30) = '',   @I_vACTINDX int = 0,    @I_vACTNUMST varchar(75) = '',   @I_vDEBITAMT numeric(19,5) = 0,   @I_vCRDTAMNT numeric(19,5) = 0,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int = NULL output, @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @INTERID char(5),  @FUNCRIDX smallint,    @FUNLCURR char(15),    @CURRNIDX smallint,    @CURNCYID char(15),    @CNTRLTYP int,  @ACCTENTR tinyint,  @ACTIVE tinyint,  @DECPLCUR smallint,    @updated tinyint,    @GROUPAMT numeric(19,5),  @IsMC tinyint,  @DOCDATE datetime,  @DTAREF char(25),  @iStatus int,  @ISMCREG tinyint,  @DefaultAccountIndex int,   @ChkBkId varchar(20),     @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @CashorCheck int,  @CashorCheck2 int,  @ChkBkId2 varchar(20)  select  @CURRNIDX = 0,  @iStatus = 0,  @CNTRLTYP = 0,  @CURNCYID = '',  @FUNLCURR = '',  @FUNCRIDX = 0,  @DECPLCUR = 0,  @updated = 0,  @GROUPAMT = 0,  @IsMC = 0,  @DOCDATE = '',  @DTAREF = '',  @ISMCREG = 0,  @DefaultAccountIndex = 0,   @ChkBkId = '',         @O_iErrorState = 0,  @CashorCheck = 0,  @CashorCheck2 = 0,  @ChkBkId2 = ''  exec @iStatus = taPMDistributionPre  @I_vDOCTYPE output,  @I_vVCHRNMBR output,  @I_vVENDORID output,  @I_vDSTSQNUM output,  @I_vDISTTYPE output,  @I_vDistRef output,  @I_vACTINDX output,  @I_vACTNUMST output,  @I_vDEBITAMT output,  @I_vCRDTAMNT output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 549    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vDOCTYPE  is NULL or  @I_vVCHRNMBR is NULL or  @I_vACTINDX  is NULL or  @I_vVENDORID is NULL or  @I_vDEBITAMT is NULL or  @I_vCRDTAMNT is NULL or  @I_vDISTTYPE is NULL or  @I_vDistRef  is NULL or  @I_vDSTSQNUM is NULL) begin  select @O_iErrorState = 548    exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if(  @I_vDOCTYPE  = 0  or  @I_vVCHRNMBR = '' or  @I_vDISTTYPE = 0) begin  select @O_iErrorState = 547    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vVENDORID = upper(@I_vVENDORID)  select @INTERID = db_name()  select  @FUNCRIDX = FUNCRIDX, @FUNLCURR = FUNLCURR from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  select @CURNCYID = isnull(CURNCYID,'') from PM00200 (nolock) where VENDORID  = @I_vVENDORID if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = @FUNLCURR, @CURRNIDX = @FUNCRIDX end  if ((@FUNLCURR <> @CURNCYID) and (@FUNCRIDX <> @CURRNIDX))  select @IsMC = 1  if (exists(select 1 from CM00100 (nolock) where CURNCYID <> '')) begin  select @ISMCREG = 1 end  if ( @I_vDOCTYPE = 6 ) begin  select @CNTRLTYP = 1 end  if (@I_vDSTSQNUM = 0) begin  select @I_vDSTSQNUM = isnull(max(DSTSQNUM),0) + 16384 from PM10100 (nolock)  where CNTRLTYP = @CNTRLTYP and VCHRNMBR = @I_vVCHRNMBR and APTVCHNM = '' and SPCLDIST = 0 end  if ((@I_vDISTTYPE < 1) or (@I_vDISTTYPE > 15)) begin  select @O_iErrorState = 770    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vACTNUMST <> '') begin  select @I_vACTINDX = 0  select @I_vACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  if (@I_vACTINDX = 0)  begin  select @O_iErrorState = 769      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if not exists(select 1 from GL00105 (nolock) where ACTINDX = @I_vACTINDX)  begin  select @O_iErrorState = 768     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vDISTTYPE = 1  Begin   if isnull(@I_vACTINDX,0) = 0  Begin  select @CashorCheck2 = isnull(PTCSHACF,0) from PM00200 (nolock) where VENDORID = @I_vVENDORID  if @CashorCheck2 = 0  Begin  select @ChkBkId2 = CHEKBKID from PM00200 (nolock) where VENDORID = @I_vVENDORID  if not @ChkBkId2 = ''  select @I_vACTINDX = isnull(ACTINDX ,0) from CM00100 (nolock) where CHEKBKID  = @ChkBkId2  End  Else  select @I_vACTINDX = isnull(PMCSHIDX,0) from PM00200 (nolock) where VENDORID = @I_vVENDORID  if @I_vACTINDX = 0  select @I_vACTINDX = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 4 and SEQNUMBR = 100  End  End  if @I_vDISTTYPE = 2           begin  if isnull(@I_vACTINDX,0) = 0  Begin  select @I_vACTINDX =  isnull(PMAPINDX,0)   from PM00200(nolock) where VENDORID = @I_vVENDORID  if @I_vACTINDX = 0  select @I_vACTINDX =  isnull(ACTINDX,0) from SY01100(nolock) where SERIES = 4 and SEQNUMBR = 200  End  End  end  if (@I_vACTINDX <> 0) begin   select @ACTIVE = ACTIVE from GL00100(nolock) where ACTINDX = @I_vACTINDX  if (@ACTIVE = 0)  begin  select @O_iErrorState = 9001      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if @I_vDISTTYPE = 1         Begin  select @CashorCheck = isnull(PTCSHACF,0) from PM00200 (nolock) where VENDORID = @I_vVENDORID  if @CashorCheck = 0  Begin  select @ChkBkId = CHEKBKID from PM00200 (nolock) where VENDORID = @I_vVENDORID  if not @ChkBkId = ''  select @DefaultAccountIndex = isnull(ACTINDX ,0) from CM00100 (nolock) where CHEKBKID  = @ChkBkId  End  Else  select @DefaultAccountIndex = isnull(PMCSHIDX,0) from PM00200 (nolock) where VENDORID = @I_vVENDORID  if @DefaultAccountIndex = 0  select @DefaultAccountIndex = isnull(ACTINDX,0) from SY01100 (nolock) where SERIES = 4 and SEQNUMBR = 100 end  if @I_vDISTTYPE = 2          begin  select @DefaultAccountIndex =  isnull(PMAPINDX,0)   from PM00200(nolock) where VENDORID=@I_vVENDORID  if @DefaultAccountIndex = 0  select @DefaultAccountIndex =  isnull(ACTINDX,0) from SY01100(nolock) where SERIES = 4 and SEQNUMBR = 200 End  select @ACCTENTR = ACCTENTR from GL00100 (nolock) where ACTINDX = @I_vACTINDX  if ((@ACCTENTR = 0) and @I_vDISTTYPE not in(1, 2)) or ((@ACCTENTR = 0) and (@I_vDISTTYPE in (1,2) and (@I_vACTINDX <> @DefaultAccountIndex))) begin  if (@ACCTENTR = 0)   begin  select @O_iErrorState = 9563   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vDEBITAMT > 0) and (@I_vCRDTAMNT > 0)) begin  select @O_iErrorState = 772     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end if ((@I_vDEBITAMT < 0) or (@I_vCRDTAMNT < 0)) begin  select @O_iErrorState = 739     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDEBITAMT < 0) and (@I_vCRDTAMNT < 0)) begin  select @O_iErrorState = 740     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vVENDORID  = '') begin  select @O_iErrorState = 773    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID) begin  select @O_iErrorState = 936    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0) begin  return(@O_iErrorState) end  if not exists(select 1 from PM10100 (nolock)  where CNTRLTYP = @CNTRLTYP  and  VCHRNMBR = @I_vVCHRNMBR and  DSTSQNUM = @I_vDSTSQNUM and  APTVCHNM = ''   and  SPCLDIST = 0) begin  insert into PM10100  (  VCHRNMBR,  DSTSQNUM,  CNTRLTYP,  CRDTAMNT,  DEBITAMT,  DSTINDX,  DISTTYPE,  USERID,  VENDORID,  TRXSORCE,  INTERID,  CURNCYID,  CURRNIDX,  ORCRDAMT,  ORDBTAMT,  RATETPID,  EXGTBLID,  DistRef,  XCHGRATE,  EXCHDATE,  TIME1,  DECPLACS,  EXPNDATE,  ICCURRID,  ICCURRIX,  CHANGED,  PSTGSTUS,  PSTGDATE,  APTVCHNM,  APTODCTY,  SPCLDIST,  RTCLCMTD,  DENXRATE,  MCTRXSTT,  CorrespondingUnit  )  select  @I_vVCHRNMBR,    @I_vDSTSQNUM,    @CNTRLTYP,    @I_vCRDTAMNT,    @I_vDEBITAMT,    @I_vACTINDX,    @I_vDISTTYPE,    '',     @I_vVENDORID,    '',     @INTERID,    case     when @ISMCREG = 1  then @CURNCYID  else ''  end,  case     when @ISMCREG = 1  then @CURRNIDX  else 0  end,  0,     0,     '',     '',     @I_vDistRef,    1,     '',     '',     @DECPLCUR,    '',     @FUNLCURR,    @FUNCRIDX,    0,     0,     '',     '',     0,     0,     0,     0,     0,     ''     if (@@error <> 0)  begin  select @O_iErrorState = 120    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  update PM10100 set  CRDTAMNT = CRDTAMNT + @I_vCRDTAMNT,  DEBITAMT = DEBITAMT + @I_vDEBITAMT  where VCHRNMBR = @I_vVCHRNMBR and CNTRLTYP = @CNTRLTYP and DSTINDX = @I_vACTINDX and DISTTYPE = @I_vDISTTYPE  if (@@error <> 0)  begin  select @O_iErrorState = 767    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @updated = 1 end  if exists (select 1 from DTA00300 (nolock) where ACTINDX = @I_vACTINDX) begin  select @DOCDATE =  DOCDATE from PM00400 (nolock) where CNTRLNUM = @I_vVCHRNMBR  exec @iStatus = taMdaInsert  @I_vDOCNUMBR = @I_vVCHRNMBR,  @I_vRMDTYPAL = 0,  @I_vDTASERIES = 4,  @I_vACTINDX = @I_vACTINDX,  @I_vSEQNUMBR = @I_vDSTSQNUM,  @I_vDEBITAMT = @I_vDEBITAMT,  @I_vCRDTAMNT = @I_vCRDTAMNT,  @I_vTRXDATE = @DOCDATE,  @I_vDECPLCUR = @DECPLCUR,  @I_vUpdated = @updated,  @O_iErrorState  = @O_iErrorState output,  @oErrString  = @oErrString output  if @O_iErrorState <> 0 or @@error <> 0 or @iStatus <> 0  begin  select @O_iErrorState = 3497   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taPMDistributionPost  @I_vDOCTYPE,  @I_vVCHRNMBR,  @I_vVENDORID,  @I_vDSTSQNUM,  @I_vDISTTYPE,  @I_vDistRef,  @I_vACTINDX,  @I_vACTNUMST,  @I_vDEBITAMT,  @I_vCRDTAMNT,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 550    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPMDistribution] TO [DYNGRP]
GO

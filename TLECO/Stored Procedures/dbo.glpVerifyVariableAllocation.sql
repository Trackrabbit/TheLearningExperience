SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpVerifyVariableAllocation]  @I_iSQLSessionID                int             = NULL,  @I_iAccountIndex                int             = NULL,  @I_mDebit                       numeric(19,5)   = NULL,  @I_mCredit                      numeric(19,5)   = NULL,  @I_tPosting                     tinyint  = NULL,   @I_sAllocationType              smallint        = NULL,  @I_sFuncDecimalPlaces    smallint        = NULL,  @I_sMCTransaction               smallint        = NULL,  @I_mOrigDebit                   numeric(19,5)   = NULL,  @I_mOrigCredit                  numeric(19,5)   = NULL,  @I_cOrigCurrencyID              char(15)        = NULL,  @I_sOrigDecimalPlaces    smallint        = NULL,  @IO_bLineMessages               binary(4)       = NULL  output,  @IO_bLineMessages2              binary(4)       = NULL  output,  @O_sAccountType          smallint        = NULL  output,  @O_tDistributionsExist   tinyint  = NULL  output,  @O_tBreakdownsExist             tinyint  = NULL  output,  @O_iErrorState                  int             = NULL  output as  declare  @FALSE                  tinyint,  @TRUE tinyint,  @ALLOCATION             smallint,  @HISTORY                smallint,  @YEAR_END_CLOSE  smallint,  @RECONCILE              smallint,  @MAINTENANCE            smallint,  @tTransaction           tinyint,  @iError                 int,  @iStatus                int,  @tLoop                  tinyint,  @iRelationID int,  @sUserLevel smallint,  @iAccessAllAccounts int,  @tALSRegistered tinyint,  @MS_ITEM_1   int,  @cCompanyID char(5)  select   @O_sAccountType = 3,      @O_tDistributionsExist = 0,  @O_tBreakdownsExist = 0,  @O_iErrorState = 0,  @iStatus                = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID                is NULL or   @I_iAccountIndex                is NULL or  @I_mDebit                       is NULL or  @I_mCredit                      is NULL or  @I_tPosting                     is NULL or  @I_sAllocationType              is NULL or  @I_sFuncDecimalPlaces    is NULL or  @I_sMCTransaction               is NULL or  @I_mOrigDebit                   is NULL or  @I_mOrigCredit                  is NULL or  @I_cOrigCurrencyID              is NULL or  @I_sOrigDecimalPlaces    is NULL or  @IO_bLineMessages               is NULL or  @IO_bLineMessages2              is NULL  begin  select @O_iErrorState = 20455   break  end    select  @FALSE                  = 0,  @TRUE   = 1,  @ALLOCATION             = 1,  @HISTORY                = 2,  @YEAR_END_CLOSE  = 3,  @RECONCILE              = 4,  @MAINTENANCE            = 5,  @iRelationID  = 0,  @sUserLevel  = 0,  @iAccessAllAccounts = 0,  @tALSRegistered = 0   select @cCompanyID = db_name()   exec @iStatus = DYNAMICS..smGetAccountLevelSecurityInfo  @cCompanyID,  @iRelationID output,  @sUserLevel  output,  @iAccessAllAccounts output,  @tALSRegistered output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if      @I_sAllocationType <> @ALLOCATION and  @I_sAllocationType <> @HISTORY and  @I_sAllocationType <> @YEAR_END_CLOSE and  @I_sAllocationType <> @RECONCILE and  @I_sAllocationType <> @MAINTENANCE  begin  select @O_iErrorState = 20708  break  end   exec @iStatus = glpVerifyDistributionAccounts  @I_iSQLSessionID,  @I_iAccountIndex,  @I_mDebit,  @I_mCredit,  @I_tPosting,  @I_sAllocationType,  @I_sFuncDecimalPlaces,  @I_sMCTransaction,  @I_mOrigDebit,  @I_mOrigCredit,  @I_cOrigCurrencyID,  @I_sOrigDecimalPlaces,  @iRelationID,  @sUserLevel,  @iAccessAllAccounts,  @IO_bLineMessages               output,  @IO_bLineMessages2              output,  @O_sAccountType         output,  @O_tDistributionsExist  output,  @O_iErrorState                  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0 or @O_tDistributionsExist = @FALSE  break   exec @iStatus = glpVerifyBreakdownAccounts  @I_iSQLSessionID,  @I_iAccountIndex,  @I_mDebit,    @I_tPosting,  @I_sAllocationType,  @iRelationID,  @sUserLevel,  @iAccessAllAccounts,  @IO_bLineMessages               output,  @O_tBreakdownsExist             output,  @O_iErrorState                  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0 or @O_tBreakdownsExist = @FALSE  break  end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpVerifyVariableAllocation] TO [DYNGRP]
GO

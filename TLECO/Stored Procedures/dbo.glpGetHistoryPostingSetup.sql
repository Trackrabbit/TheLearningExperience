SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpGetHistoryPostingSetup]  @I_iSQLSessionID                                int             = NULL,  @I_tMCRegistered                                tinyint = NULL,  @O_tKeepingTransactionHistory           tinyint = NULL  output,  @O_tKeepingAccountHistory               tinyint = NULL  output,  @O_tKeepingMCSummaryHistory             tinyint = NULL  output,  @O_tDivisionalClosing                   tinyint = NULL  output,  @O_iSETPRetainedEarningsIndex           int             = NULL  output,   @O_sDivisionalAccountSegment            smallint        = NULL  output,  @O_tBeforeSegmentLength                 tinyint = NULL  output,  @O_tDivisionalSegmentLength             tinyint = NULL  output,  @O_tAfterSegmentLength                  tinyint = NULL  output,  @O_dClosingDate                         datetime        = NULL  output,  @O_iErrorState                                  int             = NULL  output as  declare  @TRUE           tinyint,  @tTransaction   tinyint,  @iError         int,  @iStatus                int,  @tLoop          tinyint,  @dMinDate datetime  exec @iStatus = smGetMinDate @dMinDate output  select   @O_tKeepingTransactionHistory = 0,  @O_tKeepingAccountHistory = 0,  @O_tKeepingMCSummaryHistory = 0,  @O_tDivisionalClosing = 0,  @O_iSETPRetainedEarningsIndex = 0,  @O_sDivisionalAccountSegment = 0,  @O_tBeforeSegmentLength = 0,  @O_tDivisionalSegmentLength = 0,  @O_tAfterSegmentLength = 0,  @O_dClosingDate = @dMinDate,  @O_iErrorState  = 0,  @iStatus = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID is NULL or  @I_tMCRegistered is NULL  begin  select @O_iErrorState = 20396  break  end    select @TRUE = 1   select   @O_tKeepingTransactionHistory = KeepingTransactionHistory,  @O_tKeepingAccountHistory = KeepingAccountHistory,  @O_tKeepingMCSummaryHistory = KeepingMCSummaryHistory,  @O_tDivisionalClosing = DivisionalClosing,  @O_iSETPRetainedEarningsIndex = RetainedEarningsIndex,  @O_sDivisionalAccountSegment = DivisionalAccountSegment,  @O_tBeforeSegmentLength = BeforeSegmentLength,  @O_tDivisionalSegmentLength = DivisionalSegmentLength,  @O_tAfterSegmentLength = AfterSegmentLength,  @O_dClosingDate = ClosingDate  from  #HistorySetup  where  SQLSessionID = @I_iSQLSessionID   if @@rowcount <> 1  begin  select  @O_tKeepingTransactionHistory = KPGTRXHS,  @O_tKeepingAccountHistory = KPGACHST,  @O_tDivisionalClosing = TRERCLSG,  @O_iSETPRetainedEarningsIndex = RERINDX,  @O_sDivisionalAccountSegment = DIVACTSG  from  GL40000   if @@rowcount <> 1  begin  select @O_iErrorState = 20397  break  end   if @O_tDivisionalClosing = @TRUE  begin  exec @iStatus = glCalculateSegment  @O_sDivisionalAccountSegment,  @O_tBeforeSegmentLength         output,  @O_tDivisionalSegmentLength     output,  @O_tAfterSegmentLength          output,  @O_iErrorState                          output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   end    else  begin  select   @O_tBeforeSegmentLength = 0,  @O_tDivisionalSegmentLength = 0,  @O_tAfterSegmentLength = 0   end    select   @O_dClosingDate = LSTFSCDY  from  SY40101  where  HISTORYR = @TRUE  and YEAR1 = (   select  max(YEAR1)  from   SY40101  where  HISTORYR = @TRUE)    if @@rowcount <> 1  begin  select @O_iErrorState = 20398  break  end   if @I_tMCRegistered = @TRUE  begin  select  @O_tKeepingMCSummaryHistory = MNSUMHST  from  MC40000   if @@rowcount <> 1  begin  select @O_iErrorState = 20784  break  end  end    insert   #HistorySetup  (       SQLSessionID,  KeepingTransactionHistory,  KeepingAccountHistory,  KeepingMCSummaryHistory,  DivisionalClosing,  RetainedEarningsIndex,  DivisionalAccountSegment,  BeforeSegmentLength,  DivisionalSegmentLength,  AfterSegmentLength,  ClosingDate)  values   (       @I_iSQLSessionID,  @O_tKeepingTransactionHistory,  @O_tKeepingAccountHistory,  @O_tKeepingMCSummaryHistory,  @O_tDivisionalClosing,  @O_iSETPRetainedEarningsIndex,  @O_sDivisionalAccountSegment,  @O_tBeforeSegmentLength,  @O_tDivisionalSegmentLength,  @O_tAfterSegmentLength,  @O_dClosingDate)   if @@rowcount <> 1  begin  select @O_iErrorState = 20399  break  end   end   end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[glpGetHistoryPostingSetup] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMDistributionBuild] @I_vRMDTYPAL smallint,   @I_vDOCNUMBR char(20),    @I_vCUSTNMBR char (15),   @I_vINDEX int,    @I_vDTSAMT numeric(19,5), @I_vCTSAMT numeric(19,5), @I_vORDTSAMT    numeric(19,5),   @I_vORCTSAMT    numeric(19,5),   @I_vRATETPID  char(15) = '',   @I_vXCHGRATE  numeric(19,7)=0,  @I_vEXCHDATE  datetime = '',   @I_vEXPNDATE  datetime = '',   @I_vEXGTBLID  char(15) = '',   @I_vTIME1  datetime = '',   @I_vTYPE int,    @I_vCURRNIDX int,    @I_vCURNCYID char(15),    @I_vPTDUSRID char(15) = '',   @I_vApply smallint = 0,   @I_vTRXSORCE char(13) = '',   @I_vDistRef  char(30) = '',   @I_vPOSTEDDT datetime = '',   @O_iErrorState int = NULL output, @oErrString     varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @TYPE int,  @iStatus int,  @iError int,  @O_oErrorState int  select @O_iErrorState = 0,  @iStatus = 0,  @O_oErrorState  = 0  if (  @I_vRMDTYPAL is NULL or  @I_vDOCNUMBR is NULL or  @I_vCUSTNMBR is NULL or  @I_vDTSAMT   is NULL or  @I_vTYPE     is NULL or  @I_vCTSAMT   is NULL or  @I_vCURRNIDX is NULL or  @I_vCURNCYID is NULL or  @I_vINDEX    is NULL or  @I_vPTDUSRID is NULL or  @I_vRATETPID is NULL or    @I_vXCHGRATE is NULL or    @I_vEXCHDATE is NULL or    @I_vEXPNDATE is NULL or    @I_vEXGTBLID is NULL or    @I_vTIME1    is NULL or    @I_vORDTSAMT is NULL or    @I_vORCTSAMT is NULL)   begin  select @O_iErrorState = 634    return end  select  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR)  if (  @I_vRMDTYPAL = 0 or   @I_vDOCNUMBR = '' ) begin  select @O_iErrorState = 635    return end  exec @iStatus = taRMDistributionInsert  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vACTINDX  = @I_vINDEX,  @I_vDEBITAMT = @I_vDTSAMT,  @I_vCRDTAMNT = @I_vCTSAMT,  @I_vDISTTYPE = @I_vTYPE ,  @I_vCURRNIDX = @I_vCURRNIDX,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURNCYID = @I_vCURNCYID,  @I_vTRXSORCE = @I_vTRXSORCE,  @I_vDistRef  = @I_vDistRef,    @I_vPTDUSRID = @I_vPTDUSRID,  @I_vRATETPID = @I_vRATETPID,    @I_vXCHGRATE = @I_vXCHGRATE,    @I_vEXCHDATE = @I_vEXCHDATE,    @I_vEXPNDATE = @I_vEXPNDATE,    @I_vEXGTBLID = @I_vEXGTBLID,    @I_vTIME1    = @I_vTIME1,    @I_vORDBTAMT = @I_vORDTSAMT,    @I_vORCRDAMT = @I_vORCTSAMT,    @I_vApply    = @I_vApply,  @I_vPOSTEDDT = @I_vPOSTEDDT,  @O_iErrorState = @O_iErrorState  output,  @oErrString  = @oErrString output select @iError = @@error if ((@iStatus <> 0) or (@O_iErrorState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 636    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMDistributionBuild] TO [DYNGRP]
GO

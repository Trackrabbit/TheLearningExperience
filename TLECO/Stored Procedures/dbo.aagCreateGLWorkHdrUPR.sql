SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[aagCreateGLWorkHdrUPR]   @BatchNum VARCHAR(15), @iCompanyID SMALLINT AS  DECLARE @GLWorkHdrID INT, @JrnlEntry INT, @SeqNbr NUMERIC(19, 5), @GLPostDate DATETIME, @aaTRXType SMALLINT, @EmployID AS VARCHAR(15),  @Status SMALLINT, @SubLedgerHdrID INT, @LedgerID int  DECLARE @l_cComputerCheckPrefix varchar(255)  DECLARE @l_cManualCheckPrefix varchar(255)  DECLARE @l_cVoidCheckPrefix varchar(255)  DECLARE @CreatJRNPerBatch smallint  DECLARE @l_cINTERID char(5)  DECLARE @l_nStatus int  DECLARE @l_nError int  DECLARE @l_nSQL_Error_State int  DECLARE @PostInDetail smallint   SELECT @l_cINTERID = db_name()  exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 275, @l_cINTERID, @l_cComputerCheckPrefix output, @l_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@l_nSQL_Error_State <> 0) )  return (@l_nStatus)  select @l_cComputerCheckPrefix = ltrim(rtrim(@l_cComputerCheckPrefix))   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 276, @l_cINTERID, @l_cManualCheckPrefix output, @l_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@l_nSQL_Error_State <> 0) )  return (@l_nStatus)  select @l_cManualCheckPrefix = ltrim(rtrim(@l_cManualCheckPrefix))   exec    @l_nStatus = DYNAMICS.dbo.smGetMsgString 18762, @l_cINTERID, @l_cVoidCheckPrefix output, @l_nSQL_Error_State output  select @l_nError = @@error  if @l_nStatus = 0 and @l_nError <> 0  select @l_nStatus = @l_nError   if ( (@l_nStatus <> 0) or (@l_nSQL_Error_State <> 0) )  return (@l_nStatus)  select @l_cManualCheckPrefix = ltrim(rtrim(@l_cManualCheckPrefix))  select @BatchNum = LTRIM(RTRIM(@BatchNum))  if substring(@BatchNum, 1, len(@l_cComputerCheckPrefix)) = @l_cComputerCheckPrefix  begin  select @CreatJRNPerBatch = PSTOGLHW, @PostInDetail = POSTINDETAIL from SY02300 where SERIES = 6 and TRXSOURC = 'Computer Checks'  end  else if substring(@BatchNum, 1, len(@l_cManualCheckPrefix)) = @l_cManualCheckPrefix  begin  select @CreatJRNPerBatch = PSTOGLHW, @PostInDetail = POSTINDETAIL from SY02300 where SERIES = 6 and TRXSOURC = 'Manual Checks'  end  else if substring(@BatchNum, 1, len(@l_cVoidCheckPrefix)) = @l_cVoidCheckPrefix  begin  select @CreatJRNPerBatch = PSTOGLHW, @PostInDetail = POSTINDETAIL from SY02300 where SERIES = 6 and TRXSOURC = 'Void Checks'  end   DECLARE CreateHdrRecords CURSOR FAST_FORWARD  FOR   SELECT G1.JRNENTRY, G1.RCTRXSEQ, G1.TRXDATE AS GLPOSTDT, G1.TRXTYPE AS aaTRXType, G2.ORMSTRID, G1.Ledger_ID FROM GL10000 G1   INNER JOIN GL10001 G2 ON G1.BACHNUMB = G2.BACHNUMB AND G1.JRNENTRY = G2.JRNENTRY AND G1.SQNCLINE = G2.SQNCLINE  WHERE LTRIM(RTRIM(G1.BACHNUMB)) = LTRIM(RTRIM(@BatchNum))  ORDER BY G1.DEX_ROW_ID  OPEN CreateHdrRecords  FETCH NEXT FROM CreateHdrRecords INTO @JrnlEntry, @SeqNbr, @GLPostDate, @aaTRXType, @EmployID,@LedgerID  WHILE @@FETCH_STATUS = 0  BEGIN  IF  (@CreatJRNPerBatch = 0 AND @PostInDetail = 1)  BEGIN   EXEC DYNAMICS..aagGetNextID 10000, @iCompanyID, @GLWorkHdrID OUT, @Status OUT  INSERT INTO AAG10000(aaGLWorkHdrID, JRNENTRY, RCTRXSEQ, GLPOSTDT, aaTRXType, Ledger_ID)  VALUES(@GLWorkHdrID, @JrnlEntry, @SeqNbr, @GLPostDate, @aaTRXType,@LedgerID)    EXEC aagCreateGLWorkDistUPR @GLWorkHdrID, @BatchNum, @EmployID  IF NOT EXISTS(SELECT TOP 1 1 FROM AAG10001 WHERE aaGLWorkHdrID = @GLWorkHdrID)  BEGIN  DELETE FROM AAG10000 WHERE aaGLWorkHdrID = @GLWorkHdrID  UPDATE DYNAMICS..AAG00102 SET aaRowID = @GLWorkHdrID - 1 WHERE aaTableID = 10000 and CMPANYID = @iCompanyID  END  END  ELSE IF  @PostInDetail = 1  BEGIN  EXEC DYNAMICS..aagGetNextID 10000, @iCompanyID, @GLWorkHdrID OUT, @Status OUT  INSERT INTO AAG10000(aaGLWorkHdrID, JRNENTRY, RCTRXSEQ, GLPOSTDT, aaTRXType, Ledger_ID)  VALUES(@GLWorkHdrID, @JrnlEntry, @SeqNbr, @GLPostDate, @aaTRXType,@LedgerID)    EXEC aagCreateGLWorkDistUPR @GLWorkHdrID, @BatchNum, @EmployID   IF NOT EXISTS(SELECT TOP 1 1 FROM AAG10001 WHERE aaGLWorkHdrID = @GLWorkHdrID)  BEGIN  DELETE FROM AAG10000 WHERE aaGLWorkHdrID = @GLWorkHdrID  UPDATE DYNAMICS..AAG00102 SET aaRowID = @GLWorkHdrID - 1 WHERE aaTableID = 10000 and CMPANYID = @iCompanyID  END  END  FETCH NEXT FROM CreateHdrRecords INTO @JrnlEntry, @SeqNbr, @GLPostDate, @aaTRXType, @EmployID,@LedgerID  END  CLOSE CreateHdrRecords  DEALLOCATE CreateHdrRecords   
GO
GRANT EXECUTE ON  [dbo].[aagCreateGLWorkHdrUPR] TO [DYNGRP]
GO

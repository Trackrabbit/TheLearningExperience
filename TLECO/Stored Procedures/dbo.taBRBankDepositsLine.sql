SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taBRBankDepositsLine]  @I_vdepositnumber char(20),   @I_vRCPTNMBR char(20) = null,   @I_vCHEKBKID char(15) = null,   @I_vRcpType smallint = null,   @I_vCMRECNUM numeric(19,5) = null,  @I_vDEPDATE datetime = '',   @I_vBANKNAME char(30) = null,   @I_vBNKBRNCH char(20) = null,   @I_vCURRENCYTOTAL int = 0,   @I_vCOINTOTAL numeric(19,5) = 0,  @I_vXCHGRATE numeric(19,7) = 0,   @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7) = 0,   @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @FUNLCURR char(15),    @CURRNIDXRcpt smallint,    @DECPLCURFun smallint,    @DECPLCURRcpt smallint,    @AMNTOFCHECK numeric(19,5),   @AMNTOFCASH numeric(19,5),   @AMNTOFCREDITCARD numeric(19,5),  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int,  @EXGTBLID char(15),  @ISMCTRX tinyint,  @taMCCurrencyValidateErrString varchar(255),  @taMCCurrencyValidateErrState int,  @CURNCYIDRcpt char(15),    @reccount int,  @ORCHKTTL numeric(19,5),  @Originating_Check_Count int,  @Orig_Credit_Card_Total numeric(19,5),  @Originating_Credit_Card_ int,  @Originating_Cash_Total numeric(19,5),  @Originating_Cash_Count int,  @Originating_Coin_Amount numeric(19,5),  @Originating_Deposit_Amou numeric(19,5),  @Originating_Checkbook_Am numeric(19,5),  @AmntPassedIn tinyint,  @CURNCYID char(15),  @DECPLCURChbk smallint,  @ISMCREG tinyint,  @FUNCRIDX int  select  @FUNLCURR = '',  @CURRNIDXRcpt = 0,  @DECPLCURFun = 0,  @DECPLCURRcpt = 0,  @AMNTOFCHECK = 0,  @AMNTOFCASH = 0,  @AMNTOFCREDITCARD = 0,  @iStatus = 0,  @iCustomState = 0,  @O_iErrorState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @iError = 0,  @EXGTBLID = '',  @ISMCTRX = 0,  @taMCCurrencyValidateErrString = '',  @taMCCurrencyValidateErrState = 0,  @CURNCYIDRcpt = '',  @reccount = 0,  @ORCHKTTL = 0,  @Originating_Check_Count = 0,  @Orig_Credit_Card_Total = 0,  @Originating_Credit_Card_ = 0,  @Originating_Cash_Total = 0,  @Originating_Cash_Count = 0,  @Originating_Coin_Amount = 0,  @Originating_Deposit_Amou = 0,  @Originating_Checkbook_Am = 0,  @AmntPassedIn = 0,  @CURNCYID = '',  @DECPLCURChbk = 0,  @ISMCREG = 0,  @FUNCRIDX = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taBRBankDepositsLinePre  @I_vdepositnumber output,  @I_vRCPTNMBR output,  @I_vCHEKBKID output,  @I_vRcpType output,  @I_vCMRECNUM output,  @I_vDEPDATE output,  @I_vBANKNAME output,  @I_vBNKBRNCH output,  @I_vCURRENCYTOTAL output,  @I_vCOINTOTAL output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7335    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vdepositnumber is null or  @I_vDEPDATE is null or  @I_vCURRENCYTOTAL is null or  @I_vCOINTOTAL is null or  @I_vXCHGRATE is null or  @I_vRATETPID is null or  @I_vEXPNDATE is null or  @I_vEXCHDATE is null or  @I_vEXGTBDSC is null or  @I_vEXTBLSRC is null or  @I_vRATEEXPR is null or  @I_vDYSTINCR is null or  @I_vRATEVARC is null or  @I_vTRXDTDEF is null or  @I_vRTCLCMTD is null or  @I_vPRVDSLMT is null or  @I_vDATELMTS is null or  @I_vTIME1 is null or  @I_vRequesterTrx is null or  @I_vUSRDEFND1 is null or  @I_vUSRDEFND2 is null or  @I_vUSRDEFND3 is null or  @I_vUSRDEFND4 is null or  @I_vUSRDEFND5 is null  ) begin  select @O_iErrorState = 7336    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  (@I_vRcpType < 0) or  (@I_vCURRENCYTOTAL < 0) or  (@I_vCOINTOTAL < 0) or  (@I_vXCHGRATE < 0) or  (@I_vPRVDSLMT < 0) or  (@I_vDATELMTS < 0) or  (@I_vRequesterTrx < 0)) begin  select @O_iErrorState = 7350    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vdepositnumber = UPPER(@I_vdepositnumber)  if ((@I_vCURRENCYTOTAL <> 0) or (@I_vCOINTOTAL <> 0)) begin  select @AmntPassedIn = 1 end  if (exists(select 1 from CM00100 (nolock) where CURNCYID <> '')) begin  select @ISMCREG = 1 end  if ((@I_vCMRECNUM is null) and (@I_vCHEKBKID is null) and (@I_vRcpType is null) and (@I_vRCPTNMBR is null)) begin  select @O_iErrorState = 7343     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vCMRECNUM is null) begin  select @reccount = count(*) from CM20300 (nolock) where CHEKBKID = @I_vCHEKBKID and RcpType = @I_vRcpType and RCPTNMBR = @I_vRCPTNMBR   if (@reccount = 0)  begin  select @O_iErrorState = 7348     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  if (@reccount = 1)  begin  select @I_vCMRECNUM = CMRECNUM,  @CURNCYIDRcpt = CURNCYID,  @CURRNIDXRcpt = CURRNIDX  from CM20300 (nolock) where CHEKBKID = @I_vCHEKBKID and RcpType = @I_vRcpType and RCPTNMBR = @I_vRCPTNMBR   select @DECPLCURRcpt = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYIDRcpt  end  else  begin  if (@reccount > 1)  begin  select @O_iErrorState = 7389     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end end else begin  if (not exists(select 1 from CM20300 (nolock) where CMRECNUM = @I_vCMRECNUM))  begin  select @O_iErrorState = 7390     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @CURNCYIDRcpt = CURNCYID,  @CURRNIDXRcpt = CURRNIDX,  @I_vRCPTNMBR = RCPTNMBR,  @I_vCHEKBKID = CHEKBKID,  @I_vRcpType = RcpType  from CM20300 (nolock) where CMRECNUM = @I_vCMRECNUM   select @DECPLCURRcpt = DECPLCUR -1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYIDRcpt end  select @FUNLCURR = FUNLCURR,  @FUNCRIDX = FUNCRIDX  from MC40000 (nolock)  if (@FUNLCURR = '') begin  select @O_iErrorState = 7361    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @DECPLCURFun = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@CURNCYIDRcpt = '') begin  select @DECPLCURRcpt = @DECPLCURFun end  if (@I_vCOINTOTAL <> round(@I_vCOINTOTAL, @DECPLCURRcpt)) begin  select @O_iErrorState = 7351     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vdepositnumber = '') begin  select @O_iErrorState = 7337     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCHEKBKID <> '') begin   if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID))  begin  select @O_iErrorState = 7340     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCHEKBKID <> '') begin  if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 7341     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vRcpType < 1) or (@I_vRcpType > 3)) begin  select @O_iErrorState = 7342     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from CM10100 (nolock) where depositnumber =  @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID)) begin  select @O_iErrorState = 7347     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from CM20300 (nolock) where CMRECNUM = @I_vCMRECNUM and DEPOSITED = 1)) begin  select @O_iErrorState = 7349     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCURRENCYTOTAL > 0) and ((@I_vRcpType = 1) or (@I_vRcpType = 3))) begin  select @O_iErrorState = 7352     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCOINTOTAL > 0) and ((@I_vRcpType = 1) or (@I_vRcpType = 3))) begin  select @O_iErrorState = 7353     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRATEEXPR not in(-1,0,1,2,3,4,5,6,7,8,9)) begin  select @O_iErrorState = 7362     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRXDTDEF not in(-1,0,1,2)) begin  select @O_iErrorState = 7363     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRTCLCMTD not in(-1,0,1)) begin  select @O_iErrorState = 7364     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 7354     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRcpType = 1)  begin   select @AMNTOFCHECK = ORIGAMT from CM20300 (nolock) where CMRECNUM = @I_vCMRECNUM end  if (@I_vRcpType = 2)  begin   select @AMNTOFCASH = ORIGAMT from CM20300 (nolock) where CMRECNUM = @I_vCMRECNUM end  if (@I_vRcpType = 3)  begin   select @AMNTOFCREDITCARD = ORIGAMT from CM20300 (nolock) where CMRECNUM = @I_vCMRECNUM end  if (((@I_vRcpType = 2) and (@AMNTOFCASH <> @I_vCURRENCYTOTAL + @I_vCOINTOTAL)) and ((@I_vCURRENCYTOTAL <> 0) or (@I_vCOINTOTAL <> 0))) begin  select @O_iErrorState = 7355     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRcpType = 2) and (@AMNTOFCASH <> 0) and (@I_vCURRENCYTOTAL = 0) and (@I_vCOINTOTAL = 0)) begin  select @I_vCURRENCYTOTAL = @AMNTOFCASH,  @I_vCOINTOTAL = @AMNTOFCASH - @I_vCURRENCYTOTAL end  select @CURNCYID = CURNCYID from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID select @DECPLCURChbk = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID   if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@CURNCYID = @FUNLCURR) begin  if ((@CURNCYIDRcpt <> '') and (@CURNCYIDRcpt <> @FUNLCURR))  begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = '',  @I_vDOCDATE = @I_vDEPDATE,  @I_vCURNCYID = @CURNCYIDRcpt,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 2,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @taMCCurrencyValidateErrString output,  @O_iErrorState = @taMCCurrencyValidateErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@taMCCurrencyValidateErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taMCCurrencyValidateErrString  select @O_iErrorState = 7356    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vXCHGRATE > 0)  begin  if (exists(select 1 from CM10101 (nolock)  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt and  ((XCHGRATE <> @I_vXCHGRATE) or (RTCLCMTD <> @I_vRTCLCMTD))))  begin  select @O_iErrorState = 7459     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if (exists(select 1 from CM10101 (nolock) where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt))  begin  select top 1  @I_vXCHGRATE = XCHGRATE,  @EXGTBLID = EXGTBLID,  @I_vRTCLCMTD = RTCLCMTD  from CM10101 (nolock)  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt  end  end  end  else  begin  select @ISMCTRX = 0, @I_vRATEEXPR = 0, @I_vDYSTINCR = 0, @I_vRTCLCMTD = 0  end end  if (@ISMCTRX = 0) begin  select @I_vXCHGRATE = 0,  @I_vRATETPID = '',  @I_vEXPNDATE = '',  @I_vEXCHDATE = '',  @I_vRTCLCMTD = 0 end  if ((@I_vTIME1 = '') and (@ISMCTRX = 1)) begin  select @I_vTIME1 = ' '+ substring(convert(varchar(25),getdate()),12,12) end  select  @ORCHKTTL =  case      when @I_vRcpType = 1  then @AMNTOFCHECK  else 0  end,  @Originating_Check_Count =  case     when @I_vRcpType = 1  then 1  else 0  end,  @Orig_Credit_Card_Total =  case     when @I_vRcpType = 3  then @AMNTOFCREDITCARD  else 0  end,  @Originating_Credit_Card_ =  case      when @I_vRcpType = 3  then 1  else 0  end,  @Originating_Cash_Total =  case     when @I_vRcpType = 2  then @AMNTOFCASH  else 0  end,  @Originating_Cash_Count =  case     when @I_vRcpType = 2  then 1  else 0  end,  @Originating_Coin_Amount =  case      when @I_vRcpType = 2  then @I_vCOINTOTAL  else 0  end,  @Originating_Deposit_Amou =  case      when @I_vRcpType = 1  then @AMNTOFCHECK  when @I_vRcpType = 2  then @AMNTOFCASH  else @AMNTOFCREDITCARD  end,  @Originating_Checkbook_Am =  case     when @I_vRcpType = 1  then @AMNTOFCHECK  when @I_vRcpType = 2  then @AMNTOFCASH  else @AMNTOFCREDITCARD  end  if (not exists(select 1 from CM10101 (nolock) where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt)) begin  insert CM10101 (  depositnumber,  CHEKBKID,  CURNCYID,  CMRECNUM,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  EXPNDATE,  DECPLCUR,  RCPTCOUNT,  ORCHKTTL,  Originating_Check_Count,  Orig_Credit_Card_Total,  Originating_Credit_Card_,  Originating_Cash_Total,  Originating_Cash_Count,  Originating_Coin_Amount,  Originating_Deposit_Amou,  Originating_Checkbook_Am,  DENXRATE,  MCTRXSTT  )  select  @I_vdepositnumber,    @I_vCHEKBKID,     case      when @ISMCREG = 0  then ''  else @CURNCYIDRcpt  end,  0,      case      when @ISMCREG = 0  then @FUNCRIDX  else @CURRNIDXRcpt  end,  @I_vRATETPID,     @EXGTBLID,     case      when @ISMCTRX = 0  then 1  else @I_vXCHGRATE  end,  @I_vEXCHDATE,     @I_vTIME1,     @I_vRTCLCMTD,     @I_vEXPNDATE,     case      when @ISMCREG = 0  then 0  else @DECPLCURRcpt  end,  0,      @ORCHKTTL,     @Originating_Check_Count,   @Orig_Credit_Card_Total,   @Originating_Credit_Card_,   @Originating_Cash_Total,   @Originating_Cash_Count,   @Originating_Coin_Amount,   @Originating_Deposit_Amou,   case      when @ISMCTRX = 0  then @Originating_Checkbook_Am  else 0  end,  0,      0      if (@@error <> 0)  begin  select @O_iErrorState = 7357    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  update CM10101 set  ORCHKTTL =  case  when @I_vRcpType = 1  then ORCHKTTL + @AMNTOFCHECK  else ORCHKTTL  end,  Originating_Check_Count =  case  when @I_vRcpType = 1  then Originating_Check_Count + 1  else Originating_Check_Count  end,  Orig_Credit_Card_Total =  case  when @I_vRcpType = 3  then Orig_Credit_Card_Total + @AMNTOFCREDITCARD  else Orig_Credit_Card_Total  end,  Originating_Credit_Card_ =  case  when @I_vRcpType = 3  then Originating_Credit_Card_ + 1  else Originating_Credit_Card_  end,  Originating_Cash_Total =  case  when @I_vRcpType = 2  then Originating_Cash_Total + @AMNTOFCASH  else Originating_Cash_Total  end,  Originating_Cash_Count =  case  when @I_vRcpType = 2  then Originating_Cash_Count + 1  else Originating_Cash_Count  end,  Originating_Coin_Amount =  case  when @I_vRcpType = 2 and @AmntPassedIn = 1  then @I_vCOINTOTAL  when @I_vRcpType = 2 and @AmntPassedIn = 0  then Originating_Coin_Amount + @I_vCOINTOTAL  else Originating_Coin_Amount  end,  Originating_Deposit_Amou =  case  when @I_vRcpType = 1  then Originating_Deposit_Amou + @AMNTOFCHECK  when @I_vRcpType = 2  then Originating_Deposit_Amou + @AMNTOFCASH  else Originating_Deposit_Amou + @AMNTOFCREDITCARD  end,  Originating_Checkbook_Am =  case  when @I_vRcpType = 1 and @ISMCTRX = 0  then Originating_Checkbook_Am + @AMNTOFCHECK  when @I_vRcpType = 2 and @ISMCTRX = 0  then Originating_Checkbook_Am + @AMNTOFCASH  when @I_vRcpType = 3 and @ISMCTRX = 0  then Originating_Checkbook_Am + @AMNTOFCREDITCARD  else Originating_Checkbook_Am  end  from CM10101 (nolock) where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt  if (@@error <> 0)  begin  select @O_iErrorState = 7358    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@ISMCTRX = 1) begin  if (@I_vRTCLCMTD = 0)  begin  update CM10101 set  Originating_Checkbook_Am = Originating_Checkbook_Am + round(@Originating_Checkbook_Am * @I_vXCHGRATE, @DECPLCURChbk)  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt  if (@@error <> 0)  begin  select @O_iErrorState = 7456    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  if (@I_vRTCLCMTD = 1)  begin  update CM10101 set  Originating_Checkbook_Am = Originating_Checkbook_Am + round(@Originating_Checkbook_Am / @I_vXCHGRATE, @DECPLCURChbk)  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID = @CURNCYIDRcpt  if (@@error <> 0)  begin  select @O_iErrorState = 7457    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   update CM20300 set  RATETPID = @I_vRATETPID,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  EXPNDATE = @I_vEXPNDATE,  RLGANLOS =  case  when @I_vRTCLCMTD = 0  then round((ORIGAMT * @I_vXCHGRATE), @DECPLCURFun) - round((ORIGAMT * Receiving_Exchange_Rate), @DECPLCURFun)  when @I_vRTCLCMTD = 1  then round((ORIGAMT / @I_vXCHGRATE), @DECPLCURFun) - round((ORIGAMT / Receiving_Exchange_Rate), @DECPLCURFun)  else 0  end  where CMRECNUM = @I_vCMRECNUM  if (@@error <> 0)  begin  select @O_iErrorState = 7458    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  update CM20300 set  MODIFDT = convert(varchar(12),getdate()),  depositnumber = @I_vdepositnumber,  BANKNAME =  case  when @I_vBANKNAME is null  then BANKNAME  else @I_vBANKNAME  end,  BNKBRNCH =  case  when @I_vBNKBRNCH is null  then BNKBRNCH  else @I_vBNKBRNCH  end,  Checkbook_Amount =  case  when @ISMCTRX = 1 and @I_vRTCLCMTD = 0  then round(@Originating_Checkbook_Am * @I_vXCHGRATE, @DECPLCURFun)  when @ISMCTRX = 1 and @I_vRTCLCMTD = 1  then round(@Originating_Checkbook_Am / @I_vXCHGRATE, @DECPLCURFun)  else @Originating_Checkbook_Am  end  where CMRECNUM = @I_vCMRECNUM if (@@error <> 0) begin  select @O_iErrorState = 7359    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taBRBankDepositsLinePost  @I_vdepositnumber,  @I_vRCPTNMBR,  @I_vCHEKBKID,  @I_vRcpType,  @I_vCMRECNUM,  @I_vDEPDATE,  @I_vBANKNAME,  @I_vBNKBRNCH,  @I_vCURRENCYTOTAL,  @I_vCOINTOTAL,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7360    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taBRBankDepositsLine] TO [DYNGRP]
GO

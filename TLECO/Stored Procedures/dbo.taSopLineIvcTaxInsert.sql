SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taSopLineIvcTaxInsert]  @I_vSOPTYPE smallint,    @I_vTAXTYPE smallint=0,    @I_vSOPNUMBE char(21),     @I_vCUSTNMBR char(15),     @I_vLNITMSEQ int=0,     @I_vSALESAMT numeric (19,5)=0,   @I_vFRTTXAMT numeric (19,5)=0,   @I_vMSCTXAMT numeric (19,5)=0,   @I_vFREIGHT numeric(19,5)=0,   @I_vMISCAMNT numeric(19,5)=0,   @I_vTAXDTLID char(15),    @I_vACTINDX int=0,    @I_vACTNUMST varchar(75) = '',   @I_vSTAXAMNT numeric (19,5)=0,   @I_vTDTTXSLS numeric (19,5)=null,  @I_vTXDTOTTX numeric(19,5)=null,  @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @BKOUTTAX smallint,  @CURRNIDX smallint,  @CURNCYID char(15),  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @TXDTLBSE int,  @ACTINDX int  select @BKOUTTAX = 0,  @CURRNIDX = 0,  @CURNCYID = '',  @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @O_iErrorState = 0,  @TXDTLBSE = 0,  @ACTINDX = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taSopLineIvcTaxInsertPre  @I_vSOPTYPE output,  @I_vTAXTYPE output,  @I_vSOPNUMBE output,  @I_vCUSTNMBR output,  @I_vLNITMSEQ output,  @I_vSALESAMT output,  @I_vFRTTXAMT output,  @I_vMSCTXAMT output,  @I_vFREIGHT output,  @I_vMISCAMNT output,  @I_vTAXDTLID output,  @I_vACTINDX output,  @I_vACTNUMST output,  @I_vSTAXAMNT output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 673    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vCUSTNMBR is NULL or  @I_vSOPTYPE is NULL or  @I_vTAXTYPE is NULL or  @I_vSOPNUMBE is NULL or  @I_vLNITMSEQ is NULL or  @I_vSALESAMT is NULL or  @I_vFRTTXAMT is NULL or  @I_vMSCTXAMT is NULL or  @I_vFREIGHT is NULL or  @I_vMISCAMNT is NULL or  @I_vTAXDTLID is NULL or  @I_vACTINDX is NULL or  @I_vACTNUMST is NULL or  @I_vSTAXAMNT is NULL or  @I_vRequesterTrx is NULL) begin  select @O_iErrorState = 601    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE)  if (@I_vSOPNUMBE = '' and @I_vTAXDTLID = '') begin  select @O_iErrorState = 602     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vSOPTYPE < 1 or @I_vSOPTYPE > 6)  begin  select @O_iErrorState = 604     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if not exists(select 1 from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID ) begin  select @O_iErrorState = 605     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @TXDTLBSE = TXDTLBSE, @ACTINDX = isnull(ACTINDX,0) from TX00201 (nolock) where TAXDTLID = @I_vTAXDTLID   if (@TXDTLBSE = 1)  select @BKOUTTAX = 1 else   select @BKOUTTAX = 0  if (@I_vACTNUMST <> '') begin  select @I_vACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  select @I_vACTINDX = isnull(@I_vACTINDX,0)  if (@I_vACTINDX = 0)  begin  select @O_iErrorState = 456     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vACTINDX <> 0)  begin  select @I_vACTINDX = ACTINDX from GL00105 (nolock) where ACTINDX = @I_vACTINDX  select @I_vACTINDX = isnull(@I_vACTINDX,0)   if (@I_vACTINDX = 0)  begin  select @O_iErrorState = 457     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if (@I_vACTINDX = 0)  begin  select @I_vACTINDX = @ACTINDX   if (@I_vACTINDX = 0)  begin  select @I_vACTINDX = ACTINDX from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2000  end  end  end end  select @CURNCYID = isnull(RM00101.CURNCYID,'') from RM00101 (nolock) where RM00101.CUSTNMBR = @I_vCUSTNMBR if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end  while (1=1) begin  if (@I_vTAXTYPE = 0)  begin  if exists( select 1 from SOP10105 (nolock) where @I_vLNITMSEQ = LNITMSEQ and  @I_vSOPTYPE = SOPTYPE and @I_vSOPNUMBE = SOPNUMBE and @I_vTAXDTLID = TAXDTLID )  begin  select @O_iErrorState = 795     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vTAXTYPE = 1)  begin  if exists(select 1 from SOP10105 (nolock) where LNITMSEQ = 2147483646 and  SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and TAXDTLID = @I_vTAXDTLID)  begin  select @O_iErrorState = 794     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vTAXTYPE = 2)  begin  if exists( select 1 from SOP10105 (nolock) where LNITMSEQ = 2147483645 and  @I_vSOPTYPE = SOPTYPE and @I_vSOPNUMBE = SOPNUMBE and @I_vTAXDTLID = TAXDTLID )   begin  select @O_iErrorState = 793     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vTAXTYPE = 1)  begin  select @I_vLNITMSEQ = 2147483646  end  if (@I_vTAXTYPE = 2)  begin  select @I_vLNITMSEQ = 2147483645  end   insert SOP10105  (  SOPTYPE,  SOPNUMBE,  LNITMSEQ,  TAXDTLID,  ACTINDX,  TXABLETX,  STAXAMNT,  ORSLSTAX,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXDTSLS,  ORTOTSLS,  TDTTXSLS,  ORTXSLS,  TXDTOTTX,  OTTAXPON,  DELETE1,  CURRNIDX,  TRXSORCE,  BKOUTTAX  )  select  @I_vSOPTYPE,    @I_vSOPNUMBE,    @I_vLNITMSEQ,    @I_vTAXDTLID,    @I_vACTINDX,    0,     @I_vSTAXAMNT,    @I_vSTAXAMNT,    @I_vFRTTXAMT,    @I_vFRTTXAMT,    @I_vMSCTXAMT,    @I_vMSCTXAMT,    case     when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vTDTTXSLS is not null  then @I_vTDTTXSLS  when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vTDTTXSLS is not null  then @I_vTDTTXSLS  when @I_vLNITMSEQ = 0   then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vTXDTOTTX is not null  then @I_vTXDTOTTX  when @I_vLNITMSEQ = 0  then @I_vSTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT  when @I_vTAXTYPE = 1  then @I_vFRTTXAMT  when @I_vTAXTYPE = 2  then @I_vMSCTXAMT  else @I_vSTAXAMNT  end,  case     when @I_vTXDTOTTX is not null  then @I_vTXDTOTTX  when @I_vLNITMSEQ = 0  then @I_vSTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT  when @I_vTAXTYPE = 1  then @I_vFRTTXAMT  when @I_vTAXTYPE = 2  then @I_vMSCTXAMT  else @I_vSTAXAMNT  end,  0,     @CURRNIDX,    '',     @BKOUTTAX    if (@@error <> 0)  begin  select @O_iErrorState = 612    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @ACTINDX = 0   select @ACTINDX = ACTINDX from SOP10105 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = 0 and TAXDTLID = @I_vTAXDTLID   if (@ACTINDX <> 0) and (@ACTINDX <> @I_vACTINDX)  begin  select @O_iErrorState = 9550     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vLNITMSEQ > 0)  begin  if not exists( select 1 from SOP10105 (nolock) where   SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and   LNITMSEQ = 0 and TAXDTLID = @I_vTAXDTLID and ACTINDX = @I_vACTINDX and BKOUTTAX = @BKOUTTAX)  begin  insert SOP10105  (  SOPTYPE,  SOPNUMBE,  LNITMSEQ,  TAXDTLID,  ACTINDX,  TXABLETX,  STAXAMNT,  ORSLSTAX,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXDTSLS,  ORTOTSLS,  TDTTXSLS,  ORTXSLS,  TXDTOTTX,  OTTAXPON,  DELETE1,  CURRNIDX,  TRXSORCE,  BKOUTTAX  )  select  @I_vSOPTYPE,    @I_vSOPNUMBE,    0,     @I_vTAXDTLID,    @I_vACTINDX,    0,     @I_vSTAXAMNT,    @I_vSTAXAMNT,    @I_vFRTTXAMT,    @I_vFRTTXAMT,    @I_vMSCTXAMT,    @I_vMSCTXAMT,    case     when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vTDTTXSLS is not null  then @I_vTDTTXSLS  when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vTDTTXSLS is not null  then @I_vTDTTXSLS  when @I_vLNITMSEQ = 0  then @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  when @I_vTAXTYPE = 1  then @I_vFREIGHT  when @I_vTAXTYPE = 2  then @I_vMISCAMNT  else @I_vSALESAMT  end,  case     when @I_vTXDTOTTX is not null  then @I_vTXDTOTTX  when @I_vLNITMSEQ = 0  then @I_vSTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT  when @I_vTAXTYPE = 1  then @I_vFRTTXAMT  when @I_vTAXTYPE = 2  then @I_vMSCTXAMT  else @I_vSTAXAMNT  end,  case     when @I_vTXDTOTTX is not null  then @I_vTXDTOTTX  when @I_vLNITMSEQ = 0  then @I_vSTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT  when @I_vTAXTYPE = 1  then @I_vFRTTXAMT  when @I_vTAXTYPE = 2  then @I_vMSCTXAMT  else @I_vSTAXAMNT  end,  0,     @CURRNIDX,    '',     @BKOUTTAX    if (@@error <> 0)  begin  select @O_iErrorState = 613    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  update SOP10105 set  STAXAMNT = STAXAMNT + @I_vSTAXAMNT,  ORSLSTAX = ORSLSTAX + @I_vSTAXAMNT,  TAXDTSLS = TAXDTSLS + @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT,  FRTTXAMT = FRTTXAMT + @I_vFRTTXAMT,  ORFRTTAX = ORFRTTAX + @I_vFRTTXAMT,  MSCTXAMT = MSCTXAMT + @I_vMSCTXAMT,  ORMSCTAX = ORMSCTAX + @I_vMSCTXAMT,  ORTOTSLS = ORTOTSLS + @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT,  TDTTXSLS =  case  when @I_vTDTTXSLS is not null  then TDTTXSLS + @I_vTDTTXSLS   else TDTTXSLS + @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  end,  ORTXSLS =  case  when @I_vTDTTXSLS is not null  then ORTXSLS + @I_vTDTTXSLS  else ORTXSLS + @I_vSALESAMT+@I_vFREIGHT+@I_vMISCAMNT  end,  TXDTOTTX =  case  when @I_vTXDTOTTX is not null  then TXDTOTTX + @I_vTXDTOTTX  else TXDTOTTX + @I_vSTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT  end,  OTTAXPON =  case  when @I_vTXDTOTTX is not null  then OTTAXPON + @I_vTXDTOTTX  else OTTAXPON + @I_vSTAXAMNT+@I_vFRTTXAMT+@I_vMSCTXAMT  end  where SOPTYPE = @I_vSOPTYPE and  SOPNUMBE = @I_vSOPNUMBE and  LNITMSEQ = 0 and  TAXDTLID = @I_vTAXDTLID and  ACTINDX = @I_vACTINDX and  BKOUTTAX = @BKOUTTAX  if (@@error <> 0)  begin  select @O_iErrorState = 614    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  break end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taSopLineIvcTaxInsertPost  @I_vSOPTYPE,  @I_vTAXTYPE,  @I_vSOPNUMBE,  @I_vCUSTNMBR,  @I_vLNITMSEQ,  @I_vSALESAMT,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @I_vFREIGHT,  @I_vMISCAMNT,  @I_vTAXDTLID,  @I_vACTINDX,  @I_vACTNUMST,  @I_vSTAXAMNT,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if (@iStatus = 0 and @iError <> 0) begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 674    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taSopLineIvcTaxInsert] TO [DYNGRP]
GO

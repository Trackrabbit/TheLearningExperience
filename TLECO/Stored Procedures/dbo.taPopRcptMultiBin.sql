SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopRcptMultiBin]  @I_vPOPRCTNM char(17),       @I_vRCPTLNNM int = 0,    @I_vITEMNMBR char(30),       @I_vBIN char(15) = '',    @I_vQUANTITY numeric(19,5),       @I_vUOFM char(8) = '',       @I_vCreateBin int = 0,    @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @count int,  @RCPTLNNM int,  @SEQNUMBR int,  @LineQty numeric(19,5),  @BinQtyDone numeric(19,5),  @QtyLeft numeric(19,5),  @ITMTRKOP tinyint,  @ITEMTYPE tinyint,  @LOCNCODE char(10),  @QTYBSUOM numeric(19,5),  @UOFMBASE char(8),  @UOMSCHDL char(10),  @sCompanyID int,  @NOTEINDX numeric(19,5),  @iGetNextNoteIdxErrState int,  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int  select  @count = 0,  @RCPTLNNM = 0,  @SEQNUMBR = 0,  @LineQty = 0,  @BinQtyDone = 0,  @QtyLeft = 0,  @ITMTRKOP = 0,  @ITEMTYPE = 0,  @LOCNCODE = '',  @QTYBSUOM = 1,  @UOFMBASE = 0,  @UOMSCHDL = '',  @sCompanyID = 0,  @NOTEINDX = 0,  @iGetNextNoteIdxErrState = 0,  @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_iErrorState = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopRcptMultiBinPre  @I_vPOPRCTNM output,  @I_vRCPTLNNM output,  @I_vITEMNMBR output,  @I_vBIN output,  @I_vQUANTITY output,  @I_vUOFM output,  @I_vCreateBin output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 9313    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vPOPRCTNM is null or  @I_vRCPTLNNM is null or  @I_vITEMNMBR is null or  @I_vBIN is null or  @I_vQUANTITY is null or  @I_vUOFM is null or  @I_vCreateBin is null or  @I_vRequesterTrx is null) begin  select @O_iErrorState = 9314    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPOPRCTNM = '') or (@I_vQUANTITY <= 0) or (@I_vITEMNMBR = '')) begin  select @O_iErrorState = 9315     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vPOPRCTNM = upper(@I_vPOPRCTNM),  @I_vITEMNMBR = upper(@I_vITEMNMBR),  @I_vBIN = upper(@I_vBIN)  if ((select ENABLEMULTIBIN from IV40100 (nolock)) <> 1) begin  select @O_iErrorState = 9316    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState) end  if (@I_vRequesterTrx not in (0,1)) begin  select @O_iErrorState = 9317     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @count = count(RCPTLNNM), @RCPTLNNM = isnull(max(RCPTLNNM),0) from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR  if (@count = 0) begin  select @O_iErrorState = 9318     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@count > 1) and (@I_vRCPTLNNM = 0)) begin  select @O_iErrorState = 9319     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRCPTLNNM <> 0) and (@count > 1)) begin  if not exists(select 1 from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR and RCPTLNNM = @I_vRCPTLNNM)  begin  select @O_iErrorState = 9320     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@count = 1) begin  select @I_vRCPTLNNM = @RCPTLNNM end  select @SEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from POP10340 (nolock) where POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR and RCPTLNNM = @I_vRCPTLNNM  select @ITMTRKOP = ITMTRKOP, @UOMSCHDL = UOMSCHDL, @ITEMTYPE = ITEMTYPE from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@ITMTRKOP <> 1) begin  select @O_iErrorState = 9321     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@ITEMTYPE = 3) begin  select @O_iErrorState = 9322     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @UOFMBASE = BASEUOFM from IV40201 (nolock) where UOMSCHDL = @UOMSCHDL  if (@I_vUOFM = '') begin  select @I_vUOFM = @UOFMBASE end  if (@I_vUOFM = '') begin  select @O_iErrorState = 9323     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @QTYBSUOM = QTYBSUOM from IV40202 (nolock) where UOMSCHDL = @UOMSCHDL and EQUIVUOM = @UOFMBASE and UOFM = @I_vUOFM  if (@I_vUOFM <> @UOFMBASE) begin  select @I_vQUANTITY = @I_vQUANTITY * @QTYBSUOM end  select @LineQty = QTYSHPPD * UMQTYINB, @LOCNCODE = TRXLOCTN from POP10500 (nolock) where POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR and RCPTLNNM = @I_vRCPTLNNM  select @BinQtyDone = isnull(sum(QUANTITY),0) from POP10340 (nolock) where POPRCTNM = @I_vPOPRCTNM and ITEMNMBR = @I_vITEMNMBR and RCPTLNNM = @I_vRCPTLNNM  select @QtyLeft = @LineQty - @BinQtyDone  if (@QtyLeft < @I_vQUANTITY) begin  select @O_iErrorState = 9324     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@LOCNCODE = '') begin  select @O_iErrorState = 9325    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vBIN = '') and (@I_vCreateBin = 1)) begin  select @O_iErrorState = 9387     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vBIN = '') begin  select @I_vBIN = PORECEIPTBIN from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and LOCNCODE = @LOCNCODE   if (@I_vBIN = '')  begin  select @I_vBIN = PORECEIPTBIN from IV40700 (nolock) where LOCNCODE = @LOCNCODE  end   if (@I_vBIN = '')  begin  select @O_iErrorState = 9326     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCreateBin not in (0,1)) begin  select @O_iErrorState = 9327     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists(select 1 from IV40701 (nolock) where LOCNCODE = @LOCNCODE and BIN = @I_vBIN) begin  if (@I_vCreateBin = 0)  begin  select @O_iErrorState = 9328     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  if (@I_vCreateBin = 1)  begin  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 9329    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert IV40701 (LOCNCODE, BIN, NOTEINDX)  select @LOCNCODE, @I_vBIN, @NOTEINDX  if (@@error <> 0)  begin  select @O_iErrorState = 9330     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE= 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 9331    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  insert POP10340  (  POPRCTNM,  RCPTLNNM,  SEQNUMBR,  ITEMNMBR,  LOCNCODE,  BIN,  QTYTYPE,  QUANTITY  )  select  @I_vPOPRCTNM,   @I_vRCPTLNNM,   @SEQNUMBR,   @I_vITEMNMBR,   @LOCNCODE,   @I_vBIN,   1,    @I_vQUANTITY  if (@@error <> 0) begin  select @O_iErrorState = 9332    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  exec @iStatus = taPopRcptMultiBinPost  @I_vPOPRCTNM,  @I_vRCPTLNNM,  @I_vITEMNMBR,  @I_vBIN,  @I_vQUANTITY,  @I_vUOFM,  @I_vCreateBin,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 9333    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 9334    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopRcptMultiBin] TO [DYNGRP]
GO

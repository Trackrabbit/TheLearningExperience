SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smPeriodSetupCalculate] @I_cBeginingBalanceName char(20)        =       NULL, @I_cPeriodName          char(20)        =       NULL, @I_dFirstFiscalDay              datetime        =       NULL, @I_tExtraPeriod         tinyint =       NULL, @I_tIncMonth            tinyint =       NULL, @I_sYear                        smallint        =       NULL, @I_iPeriodLength                int     =       NULL, @I_iNumberOfPeriods     int     =       NULL, @I_iSQLSessionID                int     =       NULL, @O_iErrorState          int     =       NULL    output  as  declare  @cPeriodName            char(20),  @dFirstFiscalDay                datetime,  @dStartDate             datetime,  @tDone                  tinyint,  @iPeriodIndex           int,  @tTransaction           tinyint,  @sNumberOfRecords       smallint,  @TRUE                   tinyint,  @FALSE                  tinyint,  @iRowCount              int  if      @I_cBeginingBalanceName is      NULL    or  @I_cPeriodName          is      NULL    or  @I_dFirstFiscalDay              is      NULL    or  @I_tIncMonth            is      NULL    or  @I_sYear                        is      NULL    or  @I_iPeriodLength                is      NULL    or  @I_iNumberOfPeriods     is      NULL    or  @I_iSQLSessionID                is      NULL begin  select  @O_iErrorState  =       20311  return end  select  @TRUE = 1,  @FALSE = 0  if @@trancount = 0 begin  select  @tTransaction   =       1   begin transaction end  select  @O_iErrorState  =       0  select  @sNumberOfRecords = count ( FORIGIN ) from  SY40100 where  FORIGIN         >=      0               and  PERIODID        >=      0               and  SERIES          >=      0               and  YEAR1           =       @I_sYear  if @sNumberOfRecords  > 0 begin  delete  from  SY40100  where  FORIGIN         >=      0               and  PERIODID        >=      0               and  SERIES          >=      0               and  YEAR1           =       @I_sYear   if @@RowCount <> @sNumberOfRecords  begin  select  @O_iErrorState  =       20302   if @tTransaction = 1  rollback transaction  return  end end  select  @iPeriodIndex = 0,  @dFirstFiscalDay = dateadd(dd, -1, @I_dFirstFiscalDay),  @dStartDate = @I_dFirstFiscalDay  insert into  SY40100  ( PERIODID,  PERNAME,  PERIODDT,  YEAR1,  FORIGIN ) values  ( @iPeriodIndex,  rtrim(@I_cBeginingBalanceName),  @dFirstFiscalDay,  @I_sYear,  1 )  if @@RowCount = 0 begin  select  @O_iErrorState = 20350  if @tTransaction = 1  rollback transaction  return end  insert into  SY40100  ( SERIES,  ODESCTN,  PERIODID,  PERIODDT,  PERNAME,  YEAR1 ) select  SERIES,  TRXSOURC,  @iPeriodIndex,  @dFirstFiscalDay,  rtrim(@I_cBeginingBalanceName),  @I_sYear from  SY01000 where  SEQNUMBR > 0  if @@RowCount = 0 begin  if @tTransaction = 1  rollback transaction   select @O_iErrorState = 20303  return end  while (@tDone is NULL) begin  select  @iPeriodIndex = @iPeriodIndex + 1   select  @cPeriodName = rtrim(@I_cPeriodName) +  ' ' + convert(char(4), @iPeriodIndex)   insert  into  SY40100  ( SERIES,  PERIODID,  PERNAME,  PERIODDT,  YEAR1,  FORIGIN )  values  ( 0,  @iPeriodIndex,  @cPeriodName,  @dStartDate,  @I_sYear,  1 )   if @@RowCount = 0  begin  select  @O_iErrorState = 20352   rollback transaction  return  end   insert  into  SY40100  ( SERIES,  ODESCTN,  PERIODID,  PERIODDT,  PERNAME,  YEAR1 )  select  SERIES,  TRXSOURC,  @iPeriodIndex,  @dStartDate,  @cPeriodName,  @I_sYear  from  SY01000  where  SEQNUMBR > 0   if @@RowCount = 0  begin  if @tTransaction = 1   rollback transaction  select @O_iErrorState = 20351  return  end   if @I_tIncMonth = 1  begin    if @iPeriodIndex + 1 = @I_iNumberOfPeriods and @I_tExtraPeriod = 1  begin  continue  end  else  begin     select  @dStartDate = dateadd(mm, @I_iPeriodLength, @dStartDate)  end  end  else  begin    if @iPeriodIndex + 1 = @I_iNumberOfPeriods and @I_tExtraPeriod = 1  begin  continue  end  else  begin     select   @dStartDate = dateadd(dd, @I_iPeriodLength, @dStartDate)  end  end   if @iPeriodIndex >= @I_iNumberOfPeriods  begin     select  @tDone = 1  end end  UPDATE GL00201   SET GL00201.PERIODDT = SY40100.PERIODDT   FROM SY40100   INNER JOIN  GL00201 ON   SY40100.YEAR1 = GL00201.YEAR1 AND   SY40100.PERIODID = GL00201.PERIODID AND   SY40100.SERIES = 0 AND SY40100.YEAR1 = @I_sYear  SELECT @iRowCount = COUNT(1) FROM GL00201 WHERE YEAR1 = @I_sYear and PERIODID > @I_iNumberOfPeriods   IF EXISTS(SELECT TOP 1 1 FROM GL00201 WHERE YEAR1 = @I_sYear and PERIODID > @I_iNumberOfPeriods)   DELETE FROM   GL00201   WHERE   YEAR1 = @I_sYear and   PERIODID > @I_iNumberOfPeriods  IF @iRowCount <> @@ROWCOUNT BEGIN  IF @tTransaction = 1   ROLLBACK TRANSACTION  SELECT @O_iErrorState = 20302   RETURN END  UPDATE GL12001   SET GL12001.PERIODDT = SY40100.PERIODDT   FROM SY40100   INNER JOIN  GL12001 ON   SY40100.YEAR1 = GL12001.YEAR1 AND   SY40100.PERIODID = GL12001.PERIODID AND   SY40100.SERIES = 0 AND SY40100.YEAR1 = @I_sYear  if @tTransaction = 1  commit transaction  return    
GO
GRANT EXECUTE ON  [dbo].[smPeriodSetupCalculate] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 Create Procedure [dbo].[SVC_RET_Update_Retainage]  (  @CONSTS smallint,  @CONTNBR char(11),  @Line numeric(19,5),  @UpdateDate datetime,  @UpdateTime datetime,  @CheckDate datetime,  @Percentage numeric(19,5),   @I_sRateCalcMethod  smallint ,           @I_nExchangeRate  numeric(15,7),         @I_nDenomExchangeRate numeric(15,7),     @I_sMCTrxState   smallint,               @I_sDecimalPlaces  smallint,             @QTYSOLD numeric(19,5),  @EXTDCOST numeric(19,5),  @XTNDPRCE numeric(19,5),  @OREXTCST numeric(19,5),  @OXTNDPRC numeric(19,5),   @UpdateCallCount smallint,  @SourceModule char(3),  @SourceDocument varchar(255),  @RemainingRetainage  numeric(19,5) OUTPUT,  @Error integer OUTPUT  ) As set nocount on DECLARE @I_sViewMode   smallint,                 @SVC_Liability_Type smallint,  @NBRCAL numeric(19,5),  @ACTCAL numeric(19,5),  @BLKTIM numeric(19,5),  @RETNAGAM numeric(19,5),  @VALTIM numeric(19,5),  @RTNBILLD numeric(19,5),  @Retainage  numeric(19,5),   @LaborTime numeric(19,5),  @LinePrice numeric(19,5),  @OrigLinePrice numeric(19,5),   @O_iErrorState          int,  @ORIGRTNBILLD numeric(19,5),  @ORIGRETNAGAM numeric(19,5),  @LocalRetainageBilled numeric(19,5),  @OrigLocalRetainageBilled numeric(19,5),  @BillAmount numeric(19,5),  @BillAmountDiscount numeric(19,5),  @TOTAL numeric(19,5),  @DSCDLRAM numeric(19,5),  @DSCPCTAM smallint,  @LiabilityMonthlyAmount  numeric(19,5),  @OrigLiabilityMonthlyAmount  numeric(19,5),  @TotalRevenue numeric(19,5),   @SVC_Discount_Next numeric(19,5),  @OrigSVC_Discount_Next numeric(19,5),  @SVC_Discount_Remaining numeric(19,5),  @DLiabilityMonthlyAmount numeric(19,5),  @OrigDLiabilityMonthlyAmount numeric(19,5),  @BILCYC integer,  @Months integer,  @ContractLineEndDate datetime,  @ErrorCondition integer,  @msg varchar(255),  @UserID char(30),  @EstimatedAmount numeric(19,5),  @MeterToCheck integer,  @TimeRemaining numeric(19,5),  @LineStatus char(1),  @ExpireLine     tinyint,  @TotalRevenueDiscount numeric(19,5),  @TotalInvoiceDiscount numeric(19,5),  @OrigTotalRevenueDiscount numeric(19,5),  @OrigTotalInvoiceDiscount numeric(19,5),  @DexID int,  @MovedRevenue numeric(19,5),  @OrigMovedRevenue numeric(19,5)  select @Error = 0,@SVC_Liability_Type = 0,@Retainage = -1,  @BillAmountDiscount = 0, @UserID = SUSER_SNAME() IF not exists(select * from sysobjects where name = 'SVC00601')  return IF exists(select * from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line) BEGIN  select  @SVC_Liability_Type = SVC_Liability_Type,  @NBRCAL = NBRCAL,  @ACTCAL = ACTCAL,  @BLKTIM = BLKTIM,  @RETNAGAM = RETNAGAM,  @ORIGRETNAGAM = ORIGRETNAGAM,  @VALTIM = VALTIM,  @RTNBILLD = RTNBILLD,  @ORIGRTNBILLD = ORIGRTNBILLD,  @TOTAL = TOTAL,  @DSCDLRAM = DSCDLRAM,  @DSCPCTAM = DSCPCTAM,   @SVC_Discount_Next = SVC_Discount_Next,  @SVC_Discount_Remaining = SVC_Discount_Remaining,  @BILCYC = BILCYC,  @ContractLineEndDate =ENDDATE,  @LineStatus = Contract_Line_Status,  @ExpireLine = 0,  @OrigMovedRevenue = OrigMovedRevenue,  @MovedRevenue = MovedRevenue  from SVC00601   where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  select @I_sViewMode = 3            IF @LineStatus = 'C' OR @LineStatus = 'M'  return  IF @SVC_Liability_Type <> 0   BEGIN  select @Retainage = round(@QTYSOLD * (@Percentage),  2)   select @RemainingRetainage = round((@XTNDPRCE * ((@VALTIM + @Retainage) - @BLKTIM)),2)    IF @RemainingRetainage < 0  select @RemainingRetainage = 0    IF  @BLKTIM  > 0   BEGIN   IF @VALTIM + @QTYSOLD < @BLKTIM   begin  if @MovedRevenue > 0  select @VALTIM = @VALTIM + @QTYSOLD, @BillAmount = (@MovedRevenue * (@QTYSOLD/@BLKTIM))   else  select @VALTIM = @VALTIM + @QTYSOLD, @BillAmount = (@TOTAL * (@QTYSOLD/@BLKTIM))   end   ELSE IF @VALTIM + @QTYSOLD = @BLKTIM   begin  if @MovedRevenue > 0  select @VALTIM = @BLKTIM, @ExpireLine = 1, @BillAmount = (@MovedRevenue * (@QTYSOLD/@BLKTIM))   else  select @VALTIM = @BLKTIM, @ExpireLine = 1, @BillAmount = (@TOTAL * (@QTYSOLD/@BLKTIM))   end   ELSE   BEGIN   IF @BLKTIM <= @VALTIM and @SVC_Liability_Type =2  BEGIN  select @BillAmount = 0, @ExpireLine = 1, @TimeRemaining = 0  END ELSE  BEGIN  begin  if @MovedRevenue > 0  select @BillAmount = (@MovedRevenue * ((@BLKTIM - @VALTIM)/@BLKTIM)), @TimeRemaining = @BLKTIM - @VALTIM  else  select @BillAmount = (@TOTAL * ((@BLKTIM - @VALTIM)/@BLKTIM)), @TimeRemaining = @BLKTIM - @VALTIM  end  END  IF @TimeRemaining > 0  BEGIN  select @RemainingRetainage = round((@XTNDPRCE / @QTYSOLD) * (@QTYSOLD - @TimeRemaining),2)  END ELSE  BEGIN  select @RemainingRetainage = round(@XTNDPRCE ,2)  END  select @VALTIM = @VALTIM + @Retainage  IF @RemainingRetainage < 0  select @RemainingRetainage = 0   END   END ELSE  Begin  if @MovedRevenue > 0  select @VALTIM  =  @VALTIM  + @QTYSOLD,  @BillAmount = (@MovedRevenue * (@VALTIM/@BLKTIM))   else  select @VALTIM  =  @VALTIM  + @QTYSOLD,  @BillAmount = (@TOTAL * (@VALTIM/@BLKTIM))   End  if @UpdateCallCount = 1 and @SVC_Liability_Type =2  select @BillAmount = 0   select @Retainage = round(@XTNDPRCE  ,  2)   if  @SVC_Liability_Type <> 2  select @BillAmount = 0  IF @RETNAGAM > 0 and @SVC_Liability_Type = 3  select @RemainingRetainage = round(((@RTNBILLD + @Retainage) - @RETNAGAM),2)   IF @RemainingRetainage < 0  select @RemainingRetainage = 0   IF @RETNAGAM <> 0 and @SVC_Liability_Type = 3   BEGIN  IF @RTNBILLD < @RETNAGAM   BEGIN   IF (@RTNBILLD  + @Retainage) > @RETNAGAM     BEGIN  select @LocalRetainageBilled = @RETNAGAM - @RTNBILLD,  @RTNBILLD  = @RETNAGAM ,  @ORIGRTNBILLD = @ORIGRETNAGAM  END ELSE  BEGIN                                      select @LocalRetainageBilled = @Retainage  exec SVC_Convert_Amount @I_sRateCalcMethod, @I_sViewMode,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @LocalRetainageBilled,@OrigLocalRetainageBilled OUTPUT, @O_iErrorState OUTPUT   select  @RTNBILLD =  @RTNBILLD + @LocalRetainageBilled,   @ORIGRTNBILLD = @ORIGRTNBILLD + @OrigLocalRetainageBilled  END  if @MovedRevenue > 0  select @BillAmount = round((@MovedRevenue * @LocalRetainageBilled/@RETNAGAM),2)   else  select @BillAmount = round((@TOTAL * @LocalRetainageBilled/@RETNAGAM),2)    select @TotalRevenue = SUM(Transaction_Amount)   from SVC00604 WITH (NOLOCK)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   select @TotalRevenue = isnull(@TotalRevenue,0)   IF @TotalRevenue + @BillAmount > @TOTAL  select @BillAmount =  @TOTAL - @TotalRevenue   if @RTNBILLD >= @RETNAGAM and @SVC_Liability_Type = 3 select @ExpireLine = 1  END   ELSE   BEGIN                                       select @RTNBILLD = @RETNAGAM,  @ORIGRTNBILLD = @ORIGRETNAGAM  END  END   else  begin  select @RTNBILLD = @XTNDPRCE + @RTNBILLD,  @ORIGRTNBILLD = @OXTNDPRC + @ORIGRTNBILLD  end  END   IF @SVC_Liability_Type = 4      BEGIN   select @RemainingRetainage = round(@XTNDPRCE,  2)   IF @NBRCAL >  @ACTCAL   BEGIN  IF @UpdateCallCount = 1 or @UpdateCallCount = 3   BEGIN   begin  if @MovedRevenue > 0  select @ACTCAL = @ACTCAL + 1, @BillAmount = (@MovedRevenue * (1/@NBRCAL))  else  select @ACTCAL = @ACTCAL + 1, @BillAmount = (@TOTAL * (1/@NBRCAL))  end  if @NBRCAL = @ACTCAL and @SVC_Liability_Type = 4   begin  select @ExpireLine = 1    select @TotalRevenue = SUM(Transaction_Amount)   from SVC00604 WITH (NOLOCK)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   select @TotalRevenue = isnull(@TotalRevenue,0)   IF @TotalRevenue + @BillAmount > @TOTAL  select @BillAmount =  @TOTAL - @TotalRevenue  end  END   select @RemainingRetainage = 0  END   END ELSE IF @SVC_Liability_Type = 5    BEGIN  select @RemainingRetainage = 0  select @BillAmount = IsNull(@TOTAL,0) * @Percentage    IF  @SourceModule = 'CL' or @SourceModule = 'CLS'  BEGIN  select @MeterToCheck = @QTYSOLD  select @EstimatedAmount = SUM(Transaction_Amount)  from SVC00604 WITH (NOLOCK)  where   CONSTS = @CONSTS and   CONTNBR = @CONTNBR and   LNSEQNBR = @Line and   Source_Trx_Document_Type = 'CLE' and  SUBSTRING(SourceTrxDocumentNumber,5,1) = CONVERT(varchar(1),@MeterToCheck) and  SVC_Coverage_Start_Date <= @CheckDate   select @BillAmount = @BillAmount - IsNull(@EstimatedAmount,0)  END   select @TotalRevenue = SUM(Transaction_Amount) from SVC00604 WITH (NOLOCK)  where CONSTS = @CONSTS and CONTNBR = @CONTNBR   and LNSEQNBR = @Line   select @TotalRevenue = isnull(@TotalRevenue,0)   IF @TotalRevenue + @BillAmount > @TOTAL  select @BillAmount =  @TOTAL - @TotalRevenue  IF @TotalRevenue + @BillAmount = @TOTAL  select @ExpireLine = 1    END   IF @BillAmount > 0 and @SVC_Liability_Type  > 1  BEGIN  select @BillAmount = ROUND(@BillAmount,2)  if @DSCPCTAM > 0   select @BillAmountDiscount = round((@DSCPCTAM / 10000.0),2)  exec SVC_RET_Create_Revenue_Recognition_Lines  -1,   -1,  @CONSTS,  @CONTNBR,  @Line ,  0 ,  '01/01/1900 00:00:00',  @SourceModule,  @SourceDocument ,  @CheckDate,  @BillAmount,  @UserID ,  @UpdateDate,  @CheckDate,  @BillAmountDiscount,  @ErrorCondition OUTPUT  END  IF @RemainingRetainage > 0 and @SVC_Liability_Type  > 1   select @ExpireLine = 1   if @SVC_Liability_Type  = 1  select @RemainingRetainage = 0    if @BillAmountDiscount > 0 and @SVC_Liability_Type  > 1 and @ExpireLine = 1  begin  select @TotalRevenueDiscount = isnull(sum(DSCDLRAM),0), @OrigTotalRevenueDiscount = isnull(sum(ORDDLRAT),0)   from SVC00604 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   select @TotalInvoiceDiscount = isnull(sum(DSCDLRAM),0), @OrigTotalInvoiceDiscount = isnull(sum(ORDDLRAT),0)   from SVC00603 WITH (NOLOCK) where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line   select @DexID = max(DEX_ROW_ID) from SVC00604  where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line and Status = 0  if @TotalRevenueDiscount <> @TotalInvoiceDiscount  update SVC00604 set DSCDLRAM = DSCDLRAM - (@TotalRevenueDiscount - @TotalInvoiceDiscount),  ORDDLRAT = ORDDLRAT - (@OrigTotalRevenueDiscount - @OrigTotalInvoiceDiscount),  Net_Transaction_Amount = Net_Transaction_Amount + (@TotalRevenueDiscount - @TotalInvoiceDiscount),   OrigNetTransactionAmount = OrigNetTransactionAmount + (@OrigTotalRevenueDiscount - @OrigTotalInvoiceDiscount)  where DEX_ROW_ID = @DexID  end   update SVC00601 with (rowlock)  set RTNBILLD = @RTNBILLD,  ORIGRTNBILLD = @ORIGRTNBILLD,  VALTIM = CASE  WHEN @UpdateCallCount = 2 or @UpdateCallCount = 3  THEN VALTIM + @QTYSOLD  ELSE VALTIM  END,  TOTVALCAL = TOTVALCAL + @XTNDPRCE,  ORIGTOTVALCAL = ORIGTOTVALCAL + @OXTNDPRC,  ACTCAL = CASE  WHEN @UpdateCallCount = 1 or @UpdateCallCount = 3 THEN ACTCAL + 1  ELSE ACTCAL  END,  Contract_Line_Status = CASE  WHEN @ExpireLine = 1 THEN 'E' ELSE Contract_Line_Status  END,  BILSTAT = CASE  when @SVC_Liability_Type > 1 then 1 ELSE BILSTAT END    where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @Line  update SVC00600 with (rowlock)  set RTNBILLD = RTNBILLD + @RTNBILLD,  ORIGRTNBILLD = ORIGRTNBILLD + @ORIGRTNBILLD,  VALTIM = CASE  WHEN @UpdateCallCount = 2 or @UpdateCallCount = 3  THEN VALTIM + @QTYSOLD  ELSE VALTIM  END,  TOTVALCAL = TOTVALCAL + @XTNDPRCE,  ORIGTOTVALCAL = ORIGTOTVALCAL + @OXTNDPRC,  ACTCAL = CASE  WHEN @UpdateCallCount = 1 or @UpdateCallCount = 3 THEN ACTCAL + 1  ELSE ACTCAL  END,   BILSTAT = CASE  when @SVC_Liability_Type > 1 then 1 ELSE BILSTAT END  where CONSTS = @CONSTS and CONTNBR = @CONTNBR    exec SVC_Set_Contract_Amount_Totals @CONSTS, @CONTNBR END return     
GO
GRANT EXECUTE ON  [dbo].[SVC_RET_Update_Retainage] TO [DYNGRP]
GO

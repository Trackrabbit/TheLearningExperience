SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[wfGenerateDocumentWhereClause]   @Workflow_Business_Object_Key char(201),  @Workflow_Type_Name char(51),  @historical tinyint,  @include_from_clause tinyint,  @main_table_clause_only tinyint,  @main_table char(50) OUTPUT,  @where_clause varchar(4000) OUTPUT AS  BEGIN  declare @sql_string varchar(4000)  declare @cursor_string varchar(4000)  declare @table_names varchar(4000)  declare @table_name varchar(50)  declare @FieldName varchar(128)  declare @from_clause varchar(4000)  declare @parsed_fields tinyint   set NOCOUNT ON   declare @WorkflowTypeTableandFields table (FieldName char(128), ORD int, Row_Index int)  select @main_table=''  if @historical=1  begin  insert into @WorkflowTypeTableandFields   select ResourceName, ORD, Row_Index from wfWorkflowTypeHistTableandFields(@Workflow_Type_Name,@main_table_clause_only)  end  else  begin  insert into @WorkflowTypeTableandFields   select ResourceName, ORD, Row_Index from wfWorkflowTypeTableandFields(@Workflow_Type_Name,@main_table_clause_only)  end  select @table_names=''  while (select COUNT(*) from @WorkflowTypeTableandFields where ORD=1)>0  begin  select @table_name = (select top 1 FieldName from @WorkflowTypeTableandFields where ORD=1)  if @main_table=''  begin  select @main_table=@table_name  end   if not(@table_names<>'' and @main_table_clause_only=1)  select @table_names=RTRIM(@table_names)+RTRIM(@table_name)+','  delete from @WorkflowTypeTableandFields where FieldName=@table_name  end   select @table_names = SUBSTRING(@table_names,1,(LEN(@table_names)-1))   declare @WorkflowFieldValues table (FieldValue char(128), Row_Index int IDENTITY(1,1))  insert into @WorkflowFieldValues   select * from wfBusObjKeyValues(@Workflow_Business_Object_Key)   if @Workflow_Type_Name = 'Smartlist Designer View Approval'  select @from_clause=' from '+'   DYNAMICS..'+ rtrim(@table_names)  else   select @from_clause=' from '+rtrim(@table_names)  select @sql_string=' where '  if @Workflow_Type_Name in ('Employee Skills Approval','Employee Profile Approval')  begin  declare FIELDS_AND_VALUES cursor local fast_forward for  select a.FieldName, rtrim(a.FieldName)+'='''+rtrim(b.FieldValue)+''''   from @WorkflowTypeTableandFields a inner join @WorkflowFieldValues b   on a.Row_Index=b.Row_Index where substring(a.FieldName,(LEN(a.FieldName)-10),11)<>'.CREATETIME'  union  select a.FieldName, 'convert(char(8),'+rtrim(a.FieldName)+',108)='''+rtrim(b.FieldValue)+''''   from @WorkflowTypeTableandFields a inner join @WorkflowFieldValues b   on a.Row_Index=b.Row_Index where substring(a.FieldName,(LEN(a.FieldName)-10),11)='.CREATETIME'  end  else  begin  declare FIELDS_AND_VALUES cursor local fast_forward for  select a.FieldName, rtrim(a.FieldName)+'='''+rtrim(b.FieldValue)+''''   from @WorkflowTypeTableandFields a inner join @WorkflowFieldValues b   on a.Row_Index=b.Row_Index where substring(a.FieldName,(LEN(a.FieldName)-5),6)<>'.TIME1'  union  select a.FieldName, 'convert(char(8),'+rtrim(a.FieldName)+',108)='''+rtrim(b.FieldValue)+''''   from @WorkflowTypeTableandFields a inner join @WorkflowFieldValues b   on a.Row_Index=b.Row_Index where substring(a.FieldName,(LEN(a.FieldName)-5),6)='.TIME1'  end   open FIELDS_AND_VALUES  fetch next from FIELDS_AND_VALUES into @FieldName, @cursor_string  while @@FETCH_STATUS = 0  begin  select @parsed_fields=1  select @sql_string=rtrim(@sql_string)+' '+RTRIM(@cursor_string)+' and'  delete from @WorkflowTypeTableandFields where FieldName=@FieldName  fetch next from FIELDS_AND_VALUES into @FieldName,@cursor_string  end  close FIELDS_AND_VALUES  deallocate FIELDS_AND_VALUES   declare FIXED_PRESET_FIELDS cursor local fast_forward for  select rtrim(FieldName)  from @WorkflowTypeTableandFields where (charindex('=',FieldName)>0 or CHARINDEX('in',FieldName)>0)  open FIXED_PRESET_FIELDS  fetch next from FIXED_PRESET_FIELDS into @cursor_string  while @@FETCH_STATUS = 0  begin   if @parsed_fields=1  begin  select @sql_string=rtrim(@sql_string)+' '+RTRIM(@cursor_string)+' and'  end  else  begin  select @sql_string=' and '+rtrim(@sql_string)+' '+RTRIM(@cursor_string)+' and'  end   select @parsed_fields=1  fetch next from FIXED_PRESET_FIELDS into @cursor_string  end  close FIXED_PRESET_FIELDS  deallocate FIXED_PRESET_FIELDS   if @parsed_fields>0   select @sql_string = substring(@sql_string, 1,(len(@sql_string)-4))   if @include_from_clause=1  begin  select @where_clause = rtrim(@from_clause)+RTRIM(@sql_string)  end  else  begin  select @where_clause = RTRIM(@sql_string)  end  END   
GO
GRANT EXECUTE ON  [dbo].[wfGenerateDocumentWhereClause] TO [DYNGRP]
GO

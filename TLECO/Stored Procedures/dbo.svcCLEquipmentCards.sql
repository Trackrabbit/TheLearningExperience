SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[svcCLEquipmentCards]   @I_cUserID char(15)    = NULL,  @I_cUserDate char(12)    = NULL,  @I_cFunctionalCurrency char(15)    = NULL,  @I_Equipment  varchar(40) = NULL,  @I_SerialReadings varchar(40) = NULL,  @I_SerialSupersession varchar(40) = NULL,  @I_SerialPM varchar(40) = NULL,  @I_SerialECO varchar(40) = NULL,  @I_SerialTechs varchar(40) = NULL,  @I_SerialAudit  varchar(40) = NULL,  @I_SerialPMSchedule  varchar(40) = NULL,  @I_ConfigMSTR  varchar(40) = NULL,  @I_ConfigSystem  varchar(40) = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,   @iStatus int,   @cSearchString1 char(2),  @tLoop tinyint DECLARE @CONFGREF CHAR(20), @PARLEVEL SMALLINT, @PARSEQ INT, @ITEMNMBR CHAR(30), @UPDATE TINYINT  select  @O_iErrorState = 0,  @iStatus  = 0,  @cSearchString1 = '%1'  while (@tLoop is NULL) begin  select @tLoop = 1   if   @I_cUserID is NULL OR  @I_Equipment is NULL OR  @I_SerialReadings is NULL OR  @I_SerialSupersession is NULL OR  @I_SerialPM is NULL OR  @I_SerialECO is NULL OR  @I_SerialTechs is NULL OR  @I_SerialAudit  is NULL OR  @I_SerialPMSchedule is NULL OR  @I_ConfigMSTR is NULL OR  @I_ConfigSystem is NULL  begin  select @O_iErrorState = 20846  break  end   create table #CNTRLNUMTEMP(  CNTRLNUM varchar(31) not null,  DOCTYPE smallint not null,  VENDORID varchar(30) not null )   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SERLNMBR,  1,  'Serial Reading'  from   SVC00301   where not exists  (select   1  from   SVC00300  where   SVC00301.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00301   where not exists  (select   1  from   SVC00300  where   SVC00301.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialReadings,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialReadings and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SERLNMBR,  1,  'Serial Supersession'  from   SVC00302   where not exists  (select   1  from   SVC00300  where   SVC00302.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00302  where not exists  (select   1  from   SVC00300  where   SVC00302.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialSupersession,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialSupersession and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SERLNMBR,  1,  'Serial PM'  from   SVC00305   where not exists  (select   1  from   SVC00300  where   SVC00305.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00305  where not exists  (select   1  from   SVC00300  where   SVC00305.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialPM,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialPM and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   ECO_Number,  1,  'Serial ECO'  from   SVC00306   where not exists  (select   1  from   SVC00300  where   SVC00306.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00306  where not exists  (select   1  from   SVC00300  where   SVC00306.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialECO,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialECO and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   TECHID,  1,  'Equipment Techs'  from   SVC00307   where not exists  (select   1  from   SVC00300  where   SVC00307.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00307  where not exists  (select   1  from   SVC00300  where   SVC00307.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialTechs,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialTechs and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   From_Serial_Number,  1,  'Serial Audit'  from   SVC00310   where not exists  (select   1  from   SVC00300  where   SVC00310.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00310  where not exists  (select   1  from   SVC00300  where   SVC00310.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialAudit,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialAudit and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SCHEDID,  1,  'Serial PM Schedule'  from   SVC00315   where not exists  (select   1  from   SVC00300  where   SVC00315.EQUIPID = SVC00300.EQUIPID)   if @@rowcount <> 0  begin  delete  SVC00315  where not exists  (select   1  from   SVC00300  where   SVC00315.EQUIPID = SVC00300.EQUIPID)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_SerialPMSchedule,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Serial Master Table' where  FILENAME = @I_SerialPMSchedule and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   CUSTNMBR,  8,  CONFGREF  from   SVC00400   where CUSTNMBR not in (select CUSTNMBR from RM00101)  and CUSTNMBR > ''   if @@rowcount <> 0  begin  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_ConfigMSTR,  'Customer ID does not exist.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   rtrim(CUSTNMBR) + '/' + rtrim(ADRSCODE),  8,  CONFGREF  from   SVC00400   where not exists  (select   1  from   RM00102  where   SVC00400.CUSTNMBR = RM00102.CUSTNMBR and   SVC00400.ADRSCODE =RM00102.ADRSCODE ) and  CUSTNMBR > '' and ADRSCODE > ''   if @@rowcount <> 0  begin  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_ConfigMSTR,  'Customer Address does not exist.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   rtrim(CONFGREF) +'/'+rtrim(ITEMNMBR),  1,  CONFGREF  from   SVC00401   where not exists  (select   1  from   SVC00400  where   SVC00401.CONFGREF = SVC00400.CONFGREF)   if @@rowcount <> 0  begin  delete  SVC00401   where not exists  (select   1  from   SVC00400  where   SVC00401.CONFGREF = SVC00400.CONFGREF)    exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_ConfigSystem,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error  update SY03400 set ERMSGTX2 = 'No Corresponding record was found in the Configuration Master Table' where  FILENAME = @I_ConfigSystem and ERMSGTX2 = ''   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    declare cursor_401 cursor for select CONFGREF,PARLEVEL,PARSEQ, ITEMNMBR from SVC00401 WITH (NOLOCK)   WHERE PARLEVEL> 0 AND PARSEQ > 0 ORDER BY CONFGREF, PARLEVEL,PARSEQ  open cursor_401  FETCH NEXT FROM cursor_401 INTO @CONFGREF,@PARLEVEL,@PARSEQ, @ITEMNMBR  while @@FETCH_STATUS = 0  BEGIN  IF NOT EXISTS(SELECT * FROM SVC00401 WHERE CONFGREF = @CONFGREF AND CNFGLVL = @PARLEVEL AND CNFGSEQ = @PARSEQ)  BEGIN  insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   rtrim(@CONFGREF)+ '/'+ rtrim(@ITEMNMBR),  1,  @CONFGREF  delete  SVC00401   WHERE CONFGREF = @CONFGREF AND PARLEVEL = @PARLEVEL AND PARSEQ = @PARSEQ  SELECT @UPDATE = 1  END   FETCH NEXT FROM cursor_401 INTO @CONFGREF,@PARLEVEL,@PARSEQ, @ITEMNMBR  END  deallocate cursor_401   if @UPDATE = 1  begin  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_ConfigSystem,  @cSearchString1,  11503,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   CAST(EQUIPID AS varchar(10)),  8,  'Equipment ID:'  from   SVC00300  where SERLNMBR='' or ITEMNMBR ='' or SRLSTAT = ''  or TIMEZONE = '' or CUSTNMBR=''    if @@rowcount <> 0  begin  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Required Fields are missing.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SRLSTAT,  9,  SERLNMBR  from   SVC00300   where not exists  (select   1  from   SVC00911  where SVC00300.SRLSTAT = SVC00911.SRLSTAT)  and SRLSTAT > ''   if @@rowcount <> 0  begin   insert into  SVC00911(  SRLSTAT,  DSCRIPTN )  select   distinct(SRLSTAT),  SRLSTAT  from   SVC00300   where not exists  (select   1  from   SVC00911  where SVC00300.SRLSTAT = SVC00911.SRLSTAT) and SRLSTAT > ''   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  'SVC_Codes_Serial_Status',  @cSearchString1,  11504,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SVCAREA,  9,  SERLNMBR  from   SVC00300   where not exists  (select   1  from   SVC00909  where SVC00300.SVCAREA = SVC00909.SVCAREA)  and SVCAREA > ''   if @@rowcount <> 0  begin   insert into  SVC00909(  SVCAREA,  NAME )  select   DISTINCT(SVCAREA),  SVCAREA  from   SVC00300   where not exists  (select   1  from   SVC00909  where SVC00300.SVCAREA = SVC00909.SVCAREA)  and SVCAREA > ''   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  'SVC_Codes_Service_Area',  @cSearchString1,  11504,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   OFFID,  8,  SERLNMBR  from   SVC00300   where OFFID not in (select OFFID from SVC00902)  and OFFID > ''   if @@rowcount <> 0  begin  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Office ID does not exist.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   'Time Zone- '+ TIMEZONE,  8,  'Serial : '+ SERLNMBR  from   SVC00300   where not exists  (select   1  from   SVC00900  where SVC00300.TIMEZONE = SVC00900.TIMEZONE) and TIMEZONE > ''    if @@rowcount <> 0  begin  insert into  SVC00900(  TIMEZONE,  DSCRIPTN )  select   DISTINCT(TIMEZONE),  TIMEZONE  from   SVC00300   where not exists  (select 1 from SVC00900  where SVC00300.TIMEZONE = SVC00900.TIMEZONE) and TIMEZONE > '' group by TIMEZONE   exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Time Zone does not exist - record added.',  @O_iErrorState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   CUSTNMBR,  8,  SERLNMBR  from   SVC00300   where CUSTNMBR not in (select CUSTNMBR from RM00101)  and CUSTNMBR > ''   if @@rowcount <> 0  begin  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Customer ID does not exist.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   ADRSCODE,  8,  SERLNMBR  from   SVC00300   where not exists  (select   1  from   RM00102  where   SVC00300.CUSTNMBR = RM00102.CUSTNMBR and   SVC00300.ADRSCODE =RM00102.ADRSCODE ) and  CUSTNMBR > '' and ADRSCODE > ''   if @@rowcount <> 0  begin  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Customer Address does not exist.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   TECHID,  8,  SERLNMBR  from   SVC00300   where TECHID not in (select TECHID from SVC00100)  and TECHID > ''   if @@rowcount <> 0  begin  update SVC00300 with (rowlock)  set TECHID = ''  where TECHID not in (select TECHID from SVC00100)  and TECHID > ''  exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Invalid Tech ID field has been cleared from the record.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end    insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   WARRCDE,  8,  SERLNMBR  from   SVC00300   where WARRCDE not in (select WARRCDE from SVC00906)  and WARRCDE > ''   if @@rowcount <> 0  begin  update SVC00300 with (rowlock)  set WARRCDE = ''  where WARRCDE not in (select WARRCDE from SVC00906)  and WARRCDE > ''   exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Invalid Vendor Warranty field has been cleared from the record.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID )  select   SLRWARR,  8,  SERLNMBR  from   SVC00300   where SLRWARR not in (select WARRCDE from SVC00906)  and SLRWARR > ''   if @@rowcount <> 0  begin  update SVC00300 with (rowlock)  set SLRWARR = ''  where SLRWARR not in (select WARRCDE from SVC00906)  and SLRWARR > ''   exec @iStatus = svcCreateErrorLogRecord  @I_cUserID,  @I_Equipment,  'Invalid Vendor Warranty field has been cleared from the record.',  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[svcCLEquipmentCards] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[wfEscalate]  @WorkflowStepInstanceID char(37),  @Workflow_Error int OUTPUT AS  BEGIN set NOCOUNT ON   declare @Workflow_User char(85), @WorkflowTaskAssignedTo char(85)  declare @Workflow_Comments char(2000)   declare @WorkflowInstanceID char(37), @Workflow_Escalate_To char(37),   @Workflow_Step_Assign_To char(37),  @Workflow_Managers char(37)  declare @Workflow_Step_Name char(51), @Workflow_Name char(51)  declare @Workflow_Version int  declare @DueDate datetime, @DueTime datetime,  @Workflow_Completion_Date datetime, @Workflow_Completion_Time datetime  declare @assignment_status tinyint, @bypass_conditions tinyint, @tasks_created tinyint,   @Workflow_Require_One_App tinyint, @defined_final_approver tinyint,  @calculate_due_date tinyint, @escalate tinyint,  @approval_tasks_created tinyint  declare @WF_Overdue_Task_Action smallint, @assigned_user_count int  declare @WF_Use_Alt_Final_Approv tinyint, @escalation tinyint  declare @WF_Alt_FinalApprover char(37)  declare @CMPANYID smallint, @server_name nvarchar(128), @SystemDB nvarchar(6)  declare @ADDisplayName char(85)  declare @TempFilePath nvarchar(300)  select @WorkflowStepInstanceID=UPPER(@WorkflowStepInstanceID)  select @Workflow_Error=0, @tasks_created=0  select @TempFilePath=''   select TOP 1 @WorkflowInstanceID=WorkflowInstanceID, @Workflow_Step_Name=Workflow_Step_Name,  @Workflow_Name=Workflow_Name,@Workflow_Version=Workflow_Version,  @DueDate=Workflow_Due_Date, @DueTime=Workflow_Due_Time  from WFI10004 with (nolock, index=AK2WFI10004)   where WorkflowStepInstanceID=@WorkflowStepInstanceID    select @WF_Overdue_Task_Action=WF_Overdue_Task_Action,@Workflow_Escalate_To=Workflow_Delegate_To,  @WorkflowInstanceID=WorkflowInstanceID, @Workflow_Require_One_App=Workflow_Require_One_App,  @WF_Use_Alt_Final_Approv=WF_Use_Alt_Final_Approv, @WF_Alt_FinalApprover=WF_Alt_FinalApprover  from WFI10002 where WorkflowInstanceID=@WorkflowInstanceID   if @WF_Overdue_Task_Action=0   begin  RETURN  end  if @WF_Overdue_Task_Action=3   begin  select @Workflow_User='SYSTEM'  select @Workflow_Comments='The task assignment was automatically rejected by the system.'  exec wfReject @WorkflowStepInstanceID,@Workflow_User,1,@Workflow_Comments,@Workflow_Error OUTPUT  RETURN  end   if @WF_Overdue_Task_Action=1   begin  select @Workflow_User='SYSTEM'  select @Workflow_Comments='The task assignment was automatically escalated to the next approver.'  select @Workflow_Step_Assign_To=Workflow_Step_Assign_To from WFI10003 where WorkflowStepInstanceID=@WorkflowStepInstanceID  select @Workflow_Completion_Date=cast(SYSDATETIME() as date),@Workflow_Completion_Time=cast(SYSDATETIME() as time)  exec wfCreateHistoryRecord @WorkflowInstanceID,  @WorkflowStepInstanceID,  @Workflow_User,  @Workflow_Name,  @Workflow_Step_Name,  @Workflow_Step_Assign_To,  8,  @DueDate,  @DueTime,  @Workflow_Completion_Date,  @Workflow_Completion_Time,  @Workflow_Comments,  @Workflow_Error OUTPUT   if (select COUNT(*) from WF100003 where Workflow_Name=@Workflow_Name   and Workflow_Version=@Workflow_Version and WF_Step_Predecessor=@Workflow_Step_Name)>0  begin   select @bypass_conditions=1  exec wfProcessChildrenOfStep @Workflow_User, @WorkflowStepInstanceID, @bypass_conditions, @escalation,@TempFilePath,  @tasks_created OUTPUT, @approval_tasks_created OUTPUT  if @tasks_created>0  begin  update WFI10003 set Workflow_Step_Status=4  where WorkflowStepInstanceID=@WorkflowStepInstanceID  end  end   if @tasks_created=0   begin  select top 1 @Workflow_Managers=Workflow_Managers from WF100001 where Workflow_Type_Name in  (select Workflow_Type_Name from WFI10002 where WorkflowInstanceID=@WorkflowInstanceID)   select @calculate_due_date=1, @escalate=1  if @WF_Alt_FinalApprover=''   begin  select @assignment_status=1  end  else  begin  update WFI10003 set Workflow_Step_Assign_To=@WF_Alt_FinalApprover   where WorkflowStepInstanceID=@WorkflowStepInstanceID  exec wfAssignTasks @WorkflowStepInstanceID, @WF_Alt_FinalApprover, @Workflow_User, @calculate_due_date, @escalate,@TempFilePath,   @assignment_status OUTPUT, @approval_tasks_created OUTPUT  end  if @assignment_status>0   begin   update WFI10003 set Workflow_Step_Assign_To=@Workflow_Managers   where WorkflowStepInstanceID=@WorkflowStepInstanceID  exec wfAssignTasks @WorkflowStepInstanceID, @Workflow_Managers, @Workflow_User, @calculate_due_date, @escalate,@TempFilePath,   @assignment_status OUTPUT, @approval_tasks_created OUTPUT  if @assignment_status>0  begin   select @Workflow_User='SYSTEM'  select @Workflow_Comments='The task assignment was automatically rejected by the system.'  exec wfReject @WorkflowStepInstanceID,@Workflow_User,1,@Workflow_Comments,@Workflow_Error OUTPUT  end  end  end   delete from WFI10004 where WorkflowInstanceID=@WorkflowInstanceID and   WorkflowStepInstanceID=@WorkflowStepInstanceID and Workflow_Action_Date='' and Workflow_Task_Escalated=0  RETURN  end   if @WF_Overdue_Task_Action=2   begin   select @Workflow_User='SYSTEM'  select @calculate_due_date=1, @escalate=1   exec wfAssignTasks @WorkflowStepInstanceID, @Workflow_Escalate_To, @Workflow_User, @calculate_due_date, @escalate,@TempFilePath,   @assignment_status OUTPUT, @approval_tasks_created OUTPUT   if @assignment_status>0   begin  select @Workflow_Comments='The task assignment was automatically rejected by the system.'  delete from WFI10005 where Workflow_User=@Workflow_User  exec wfReject @WorkflowStepInstanceID,@Workflow_User,1,@Workflow_Comments,@Workflow_Error OUTPUT  end  else   begin    select @assigned_user_count=count(WorkflowTaskAssignedTo) from WFI10005   where Workflow_User=@Workflow_User and WorkflowStepInstanceID=@WorkflowStepInstanceID  if @assigned_user_count=1  begin  select @ADDisplayName=isnull((select top 1 ADDisplayName from WFI10005   where Workflow_User=@Workflow_User and WorkflowStepInstanceID=@WorkflowStepInstanceID),'')   select @Workflow_Comments='The task assignment was automatically escalated to '+RTRIM(substring(@ADDisplayName,1,85))+'.'  end  else  begin  select @Workflow_Comments='The task assignment was automatically escalated to '+LTRIM(STR(@assigned_user_count))+' users.'  end   delete from WFI10005 where Workflow_User=@Workflow_User   select @Workflow_Step_Assign_To=Workflow_Step_Assign_To from WFI10003 where WorkflowStepInstanceID=@WorkflowStepInstanceID  select @Workflow_Completion_Date=cast(SYSDATETIME() as date),@Workflow_Completion_Time=cast(SYSDATETIME() as time)  exec wfCreateHistoryRecord @WorkflowInstanceID,  @WorkflowStepInstanceID,  @Workflow_User,  @Workflow_Name,  @Workflow_Step_Name,  @Workflow_Step_Assign_To,  8,  @DueDate,  @DueTime,  @Workflow_Completion_Date,  @Workflow_Completion_Time,  @Workflow_Comments,  @Workflow_Error OUTPUT  end   delete from WFI10004 where WorkflowInstanceID=@WorkflowInstanceID and   WorkflowStepInstanceID=@WorkflowStepInstanceID and Workflow_Action_Date='' and Workflow_Task_Escalated=0   RETURN  end END   
GO
GRANT EXECUTE ON  [dbo].[wfEscalate] TO [DYNGRP]
GO

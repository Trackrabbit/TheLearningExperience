SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[seeSalesVScogsDetail_Create] @iLanguageID int   as   set nocount on   declare @sqldropstring varchar(400),   @sqlstring1 varchar(8000),   @sqlstring2 varchar(8000),   @sqlstring3 varchar(8000),   @sqlstring4 varchar(8000),   @sqlstring5 varchar(8000),   @sqlstring6 varchar(8000),   @sqlstring7 varchar(8000),   @sqlstring8 varchar(8000),   @sqlstring9 varchar(8000),   @sqlstring10 varchar(8000),   @sqljoinstring varchar(8000),   @sqlaccessstring varchar(2000),   @tNumberSegments int,   @tSegment int,   @I_iDictID int,   @I_iLangID int,   @I_iMessageNumber int,   @I_iAliasMessageNumber int,   @I_iIntegerValue int,  @Account_Category_Number varchar(255), @TRX_Date varchar(255), @Document_Status varchar(255), @Journal_Entry varchar(255), @Account_Number varchar(255), @Account_Description varchar(255), @Credit_Amount varchar(255), @Debit_Amount varchar(255), @Account_Index_For_DrillBack varchar(255), @Journal_Entry_For_DrillBack varchar(255)  select @I_iDictID = 1493 select @I_iMessageNumber = 22507 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Account_Category_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 24447 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @TRX_Date output   select @I_iDictID = 1493 select @I_iMessageNumber = 24404 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Document_Status output   select @I_iDictID = 1493 select @I_iMessageNumber = 24400 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Journal_Entry output   select @I_iDictID = 1493 select @I_iMessageNumber = 24450 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Account_Number output   select @I_iDictID = 1493 select @I_iMessageNumber = 24451 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Account_Description output   select @I_iDictID = 1493 select @I_iMessageNumber = 24452 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Credit_Amount output   select @I_iDictID = 1493 select @I_iMessageNumber = 24453 select @I_iAliasMessageNumber = 0 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Debit_Amount output   select @I_iDictID = 1493 select @I_iMessageNumber = 24415 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Account_Index_For_DrillBack output   select @I_iDictID = 1493 select @I_iMessageNumber = 24400 select @I_iAliasMessageNumber = 22214 exec DYNAMICS..smGetBIMsgStringForProcs  @I_iMessageNumber, @I_iAliasMessageNumber, @I_iDictID, @iLanguageID, @Journal_Entry_For_DrillBack output    select @sqldropstring =   'IF EXISTS (SELECT * FROM   sys.objects WHERE  object_id = OBJECT_ID(N''[dbo].[seeSalesVScogsDetail]'') AND type in ( N''P'', N''PC'' ))  ' +   '  DROP PROCEDURE [dbo].[seeSalesVScogsDetail]  '   select @sqlstring1 =   'create procedure [dbo].[seeSalesVScogsDetail] '+   ' @UserDate datetime '+   'as '+   'declare @StartDate datetime '+   'declare @EndDate datetime '+   'set @StartDate = dateadd(dd,-(day(@UserDate)-1),@UserDate) '+   'set @EndDate = dateadd(s,-1,DATEADD(mm, datediff(m,0,@UserDate)+1,0)) '+   'select ['+@Journal_Entry+'], '+   '  ['+@TRX_Date+'], '+   '  ['+@Account_Number+'], '+   '  ['+@Account_Description+'], '+   '  ['+@Account_Category_Number+'], '+   '  case ['+@Account_Category_Number+']  when ''Sales'' then ['+@Credit_Amount+'] - ['+@Debit_Amount+'] '+   '          when ''Sales Returns and Discounts'' then -( ['+@Debit_Amount+'] - ['+@Credit_Amount+'] ) '+   '          when ''Cost of Goods Sold'' then ['+@Debit_Amount+'] - ['+@Credit_Amount+'] '+   '  end as Total, '+   '  case ['+@Account_Category_Number+']  when ''Sales'' then 1 '+   '          when ''Sales Returns and Discounts'' then 1 '+   '          when ''Cost of Goods Sold'' then 2 '+   '  end as VS, '+   '  ['+@Account_Index_For_DrillBack+'], '+   '  ['+@Journal_Entry_For_DrillBack+'] '+   ' from AccountTransactions '+   ' where ['+@Account_Category_Number+'] in (''Sales'',''Sales Returns and Discounts'',''Cost of Goods Sold'') '+   ' and ['+@TRX_Date+'] >= @StartDate '+   ' and ['+@TRX_Date+'] <= @EndDate '+   ' and ['+@Document_Status+'] = ''Open'' '  select @sqlaccessstring =   'GRANT execute ON [dbo].[seeSalesVScogsDetail] TO [rpt_accounting manager], [rpt_accounts receivable coordinator],[rpt_executive], '+  ' [rpt_operations manager], [rpt_power user] '   exec (@sqldropstring)   exec (@sqlstring1+' '+@sqlstring2+' '+@sqlstring3+' '+@sqlstring4+' '+@sqlstring5+' '+@sqlstring6+' '+@sqlstring7+' '+@sqlstring8+' '+@sqlstring9+' '+@sqlstring10)   exec (@sqlaccessstring)   set nocount off    
GO
GRANT EXECUTE ON  [dbo].[seeSalesVScogsDetail_Create] TO [DYNGRP]
GO

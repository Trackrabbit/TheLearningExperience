SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateKitItemRcd] @I_vITEMNMBR char(30),    @I_vCMPTITNM char(30),    @I_vCMPITUOM char(8),    @I_vCMPITQTY numeric(19,5) = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int = null output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @UOMSCHDL char(10),  @SEQNUMBR int,  @ITEMTYPE tinyint,  @INACTIVEKit tinyint,  @INACTIVEComponent tinyint,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int  select  @UOMSCHDL = '',  @SEQNUMBR = 0,  @ITEMTYPE = 0,  @INACTIVEKit = 0,  @INACTIVEComponent = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @oErrString = isnull(@oErrString, ''),  @O_iErrorState = 0  exec @iStatus = taCreateKitItemRcdPre  @I_vITEMNMBR output,  @I_vCMPTITNM output,  @I_vCMPITUOM output,  @I_vCMPITQTY output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 1501    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vITEMNMBR is NULL or  @I_vCMPTITNM is NULL or  @I_vCMPITUOM is NULL or  @I_vCMPITQTY is NULL  ) begin  select @O_iErrorState = 1391    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vITEMNMBR = upper(@I_vITEMNMBR),  @I_vCMPTITNM = upper(@I_vCMPTITNM)  if(@I_vITEMNMBR = '') begin  select @O_iErrorState = 1393    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists( select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR ) begin  select @O_iErrorState = 1415    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists( select 1 from IV00101 (nolock) where ITEMNMBR = @I_vCMPTITNM ) begin  select @O_iErrorState = 1416    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @ITEMTYPE = ITEMTYPE from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR if (@ITEMTYPE <> 3) begin  select @O_iErrorState = 1417    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @INACTIVEKit = INACTIVE from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR select @INACTIVEComponent = INACTIVE from IV00101 (nolock) where ITEMNMBR = @I_vCMPTITNM  if (@INACTIVEKit = 0 and @INACTIVEComponent = 1) begin  select @O_iErrorState = 11761    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @SEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from IV00104 (nolock) where ITEMNMBR = @I_vITEMNMBR   if exists (select 1 from IV00104 (nolock) where ITEMNMBR = @I_vITEMNMBR and CMPTITNM = @I_vCMPTITNM and CMPITUOM = @I_vCMPITUOM) begin  select @O_iErrorState = 2073      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @UOMSCHDL = UOMSCHDL from IV00101 (nolock) where ITEMNMBR = @I_vCMPTITNM if (@UOMSCHDL = '') begin  select @O_iErrorState = 1413      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists( select 1 from IV40202 (nolock) where UOMSCHDL = @UOMSCHDL and UOFM = @I_vCMPITUOM ) begin  select @O_iErrorState = 1414      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if not exists( select 1 from IV00104 (nolock) where ITEMNMBR = @I_vITEMNMBR and CMPTITNM = @I_vCMPTITNM and CMPITUOM = @I_vCMPITUOM )  begin  insert IV00104  (  ITEMNMBR,  SEQNUMBR,  CMPTITNM,  CMPITUOM,  CMPITQTY,  CMPSERNM  )  select  @I_vITEMNMBR,    @SEQNUMBR,     @I_vCMPTITNM,    @I_vCMPITUOM,    @I_vCMPITQTY,    0     if @@error <> 0  begin  select @O_iErrorState = 2074    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taCreateKitItemRcdPost  @I_vITEMNMBR,  @I_vCMPTITNM,  @I_vCMPITUOM,  @I_vCMPITQTY,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 1502    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateKitItemRcd] TO [DYNGRP]
GO

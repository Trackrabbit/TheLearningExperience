SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[SVC_sqlagent_has_server_access]  @login_name         sysname = NULL,  @is_sysadmin_member INT     = NULL OUTPUT AS BEGIN  DECLARE @has_server_access BIT  DECLARE @is_sysadmin       BIT  DECLARE @actual_login_name sysname  SET NOCOUNT ON  SELECT @has_server_access = 0  SELECT @is_sysadmin = 0  SELECT @actual_login_name = FORMATMESSAGE(14205)  IF (@login_name IS NULL)  BEGIN  SELECT has_server_access = 1,   is_sysadmin       = IS_SRVROLEMEMBER(N'sysadmin'),  actual_login_name = SUSER_SNAME()  RETURN  END  IF (@login_name LIKE '%\%')  BEGIN  IF (@login_name = N'NT AUTHORITY\SYSTEM')  BEGIN  IF (EXISTS (SELECT *   FROM master.dbo.syslogins   WHERE (loginname = N'BUILTIN\Administrators')))  BEGIN  SELECT @has_server_access = hasaccess,  @is_sysadmin = sysadmin,  @actual_login_name = loginname  FROM master.dbo.syslogins   WHERE (loginname = N'BUILTIN\Administrators')  END  END  ELSE  BEGIN  IF (EXISTS (SELECT *   FROM master.dbo.syslogins   WHERE (loginname = @login_name)  AND (denylogin = 1)))  BEGIN  SELECT @has_server_access = 0,  @is_sysadmin = sysadmin,  @actual_login_name = loginname  FROM master.dbo.syslogins   WHERE (loginname = @login_name)  END  ELSE  BEGIN   SELECT *  FROM master.dbo.syslogins   WHERE (loginname = @login_name)  END  END  END  ELSE  BEGIN  IF (EXISTS (SELECT *  FROM master.dbo.syslogins   WHERE (loginname = @login_name)))  BEGIN  SELECT @has_server_access = hasaccess,  @is_sysadmin = sysadmin,  @actual_login_name = loginname  FROM master.dbo.syslogins   WHERE (loginname = @login_name)  END  END  IF (@is_sysadmin_member IS NULL)  BEGIN  SELECT has_server_access = @has_server_access,   is_sysadmin       = @is_sysadmin,  actual_login_name = @actual_login_name  END  ELSE  SELECT @is_sysadmin_member = @is_sysadmin END    
GO
GRANT EXECUTE ON  [dbo].[SVC_sqlagent_has_server_access] TO [DYNGRP]
GO

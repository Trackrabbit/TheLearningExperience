SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[aagTODglWork]  @caaTrxSource char(13) as begin  set nocount on   declare @CMPANYID int,  @aagGetHdrID int,  @Status int,  @JRNENTRY int,  @RCTRXSEQ numeric(19,5),  @TRXDATE datetime,  @LedgerID INT   select  @CMPANYID = CMPANYID from DYNAMICS.dbo.SY01500 where INTERID = DB_NAME()   exec DYNAMICS..aagGetNextID 10000, @CMPANYID, @aagGetHdrID out, @Status   declare CGLWork cursor for   select JRNENTRY,RCTRXSEQ,TRXDATE, Ledger_ID  from GL10000  union all  select JRNENTRY,0,TRXDATE, 1 Ledger_ID  from GL10100   open CGLWork  fetch next from CGLWork into @JRNENTRY,@RCTRXSEQ,@TRXDATE,@LedgerID  while @@fetch_status = 0  begin  insert into AAG10000  (aaGLWorkHdrID,JRNENTRY,RCTRXSEQ,GLPOSTDT,aaTRXType,aaHdrErrors, Ledger_ID)  values(dbo.aagGetNextHdrID(10000),@JRNENTRY,@RCTRXSEQ,@TRXDATE,1,0,@LedgerID)   fetch next from CGLWork into @JRNENTRY,@RCTRXSEQ,@TRXDATE,@LedgerID  end  close CGLWork  deallocate CGLWork   update DYNAMICS..AAG00102 set aaRowID = dbo.aagGetNextHdrID(10000) - 1  where aaTableID = 10000 and CMPANYID = @CMPANYID   insert into AAG10001   (aaGLWorkHdrID,  aaGLWorkDistID, INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,   aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus, aaWinWasOpen, aaOFFSETAcct, aaDistErrors )  select dbo.aagGetHdrID(0,1,' ',' ',GL10000.JRNENTRY,GL10000.RCTRXSEQ, getdate(),0,' ',10000),  GL10001.DEX_ROW_ID,  INTERID ,CorrespondingUnit,ACTINDX, ACCTTYPE,  0,2, 0 , DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  GL10000.CURNCYID, GL10000.CURRNIDX, GL10001.RATETPID,  GL10001.EXGTBLID, GL10001.XCHGRATE, GL10001.EXCHDATE, GL10001.TIME1,  GL10001.RTCLCMTD, GL10001.DENXRATE, GL10001.MCTRXSTT, GL10001.SQNCLINE,'',  '', '', '', 8, 0, 0, 0 from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY  union all  select dbo.aagGetHdrID(0,1,' ',' ',GL10100.JRNENTRY,0, getdate(),0,' ',10000),  GL10101.DEX_ROW_ID,  DB_NAME() ,'',ACTINDX, ACCTTYPE,  0,2, 0, case   when GL10101.TRXAMNT < 0 then 0   else GL10101.TRXAMNT  end,  case   when GL10101.TRXAMNT > 0  then 0   else abs(GL10101.TRXAMNT)  end,  case   when GL10101.TRXAMNT < 0 then 0   else GL10101.TRXAMNT  end,  case   when GL10101.TRXAMNT > 0  then 0   else abs(GL10101.TRXAMNT)  end,  GL10100.CURNCYID, 0, ' ', ' ', 0, '1900-01-01 00:00:00.000', '1900-01-01 00:00:00.000',  0, 0, 0, GL10101.SQNCLINE,'',  '', '', '', 8, 0, 0, 0 from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY   Update AAG10001 SET aaGLWorkDistID=0-aaGLWorkDistID  where aaGLWorkHdrID not in (select distinct aaGLWorkHdrID from AAG10002)  UPDATE AAG10001   SET aaGLWorkDistID =  (SELECT COUNT(1) FROM AAG10001 AA WHERE AAG10001.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID)   where AAG10001.aaGLWorkHdrID not in (select distinct aaGLWorkHdrID from AAG10002)    insert into AAG10002   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,  aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors)  select aaGLWorkHdrID,aaGLWorkDistID,1,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,  10000,' ',0,0  from AAG10001   set nocount off end    
GO
GRANT EXECUTE ON  [dbo].[aagTODglWork] TO [DYNGRP]
GO

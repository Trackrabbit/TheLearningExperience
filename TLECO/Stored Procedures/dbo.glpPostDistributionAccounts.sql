SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpPostDistributionAccounts]  @I_iSQLSessionID                int             = NULL,  @I_sTransactionType             smallint        = NULL,   @I_iJournalEntry                int             = NULL,   @I_cBatchSource                 char(15)        = NULL,   @I_cBatchNumber                 char(15)        = NULL,  @I_cUserID                      char(15)        = NULL,   @I_sSeries                      smallint        = NULL,   @I_iAccountIndex                int             = NULL,  @I_cAuditTrailCode              char(13)        = NULL,  @I_dTransactionDate             datetime        = NULL,  @I_sTransactionYear             smallint        = NULL,  @I_sClosingYear                 smallint        = NULL,  @I_sPeriodID                    smallint        = NULL,  @I_nLedgerID int  = NULL,  @I_cDescription                 char(30)        = NULL,  @I_tPrintDistributions          tinyint  = NULL,   @I_tReversing                   tinyint  = NULL,   @I_tPrinting                    tinyint  = NULL,  @I_tPosting                     tinyint  = NULL,   @I_tRealTimeQuick               tinyint  = NULL,  @I_sQuickOffset                 smallint        = NULL,  @I_sAllocationType              smallint        = NULL,  @I_tHistory                     tinyint  = NULL,   @I_tOffsetAccount               tinyint  = NULL,  @I_mSequenceLine                numeric(19,5)   = NULL,  @I_mRecurringTRXSequence        numeric(19,5)   = NULL,  @I_mExchangeRate                numeric(15,7)   = NULL,  @I_cExchangeTableID             char(15)        = NULL,  @I_cFuncCurrencyID              char(15)        = NULL,   @I_sFuncCurrencyIndex           smallint        = NULL,  @I_sFuncDecimalPlaces           smallint        = NULL,  @I_tMCRegistered                tinyint  = NULL,  @I_sMCTransaction               smallint        = NULL,  @I_cOrigCurrencyID              char(15)        = NULL,  @I_sOrigCurrencyIndex           smallint        = NULL,  @I_sOrigDecimalPlaces           smallint        = NULL,  @I_sRateCalculationMethod       smallint        = NULL,  @I_cRateTypeID                  char(15)        = NULL,  @I_cIntercompanyID char(5)  = NULL,  @I_tICTransaction tinyint  = NULL,  @I_cOriginatingDocNumber char(21) = NULL,  @I_cOriginatingControlNumber char(21) = NULL,  @I_cOriginatingMasterID char(31) = NULL,  @I_cOriginatingMasterName char(65) = NULL,  @I_sOriginatingTrxType smallint = NULL,  @I_cOriginatingTRXDesc char(30) = NULL,  @I_sOrigDTASeries smallint = NULL,  @I_iOrigSequenceNumber int  = NULL,  @I_sDTAGLStatus smallint = NULL,  @I_nDTAIndex numeric(19,5) = NULL,  @I_nDenomExchangeRate numeric(15,7) = NULL,  @I_sMCTrxState smallint = NULL,  @I_dDocumentDate datetime = NULL,  @I_nClearAmount numeric(19,5) = NULL,  @I_iPostingNumber int  = NULL,  @I_iPeriodPostingNumber int  = NULL,  @I_iPostingNumberHist int  = NULL,  @I_iPeriodPostingNumberHist int  = NULL,  @I_cCorrespondingUnit   char(5)  = NULL,  @O_mBalanceSheetTotalDebits           numeric(19,5)   = NULL  output,  @O_mBalanceSheetTotalCredits           numeric(19,5)   = NULL  output,  @O_mProfitAndLossTotalDebits          numeric(19,5)   = NULL  output,  @O_mProfitAndLossTotalCredits          numeric(19,5)   = NULL  output,  @O_mOrigBalanceSheetTotalDebs       numeric(19,5)   = NULL  output,  @O_mOrigBalanceSheetTotalCreds       numeric(19,5)   = NULL  output,  @O_mOrigProfitAndLossTotalDebs      numeric(19,5)   = NULL  output,  @O_mOrigProfitAndLossTotalCred      numeric(19,5)   = NULL  output,  @IO_bRetainEarnMessages binary(4)       = NULL  output,  @IO_bRetainEarnMessages2 binary(4)       = NULL  output,  @O_iErrorState                  int             = NULL  output  as  declare  @TRUE                   tinyint,  @FALSE                  tinyint,  @BAL_SHEET              tinyint,  @ALLOCATION             smallint,  @HISTORY smallint,  @YEAR_END_CLOSE smallint,  @CURRENT_YEAR           smallint,  @HISTORY_BBF            smallint,  @UNIT_ACCT              smallint,  @iDistributionIndex     int,  @iTempIndex             int,  @sAccountType           smallint,  @sPostingType           smallint,  @sUnitDecimalPlaces     smallint,  @mDebit                 numeric(19,5),  @mCredit                numeric(19,5),  @mOrigDebit             numeric(19,5),  @mOrigCredit            numeric(19,5),  @mSequenceLine          numeric(19,5),  @bLineMessages          binary(4),  @bLineMessages2  binary(4),  @bRetainEarnMessages    binary(4),  @bRetainEarnMessages2  binary(4),  @tAllowCloseHistory     tinyint,  @tClosingEntryType      tinyint,  @tHistoryClosingEntry   tinyint,  @tPrinting              tinyint,  @tTransaction           tinyint,  @tLoop                  tinyint,  @iError                 int,  @iStatus                int  select   @O_mBalanceSheetTotalDebits = 0.0,  @O_mBalanceSheetTotalCredits = 0.0,  @O_mProfitAndLossTotalDebits = 0.0,  @O_mProfitAndLossTotalCredits = 0.0,  @O_mOrigBalanceSheetTotalDebs = 0.0,  @O_mOrigBalanceSheetTotalCreds = 0.0,  @O_mOrigProfitAndLossTotalDebs = 0.0,  @O_mOrigProfitAndLossTotalCred = 0.0,  @O_iErrorState = 0,  @iStatus = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID                is NULL or  @I_sTransactionType             is NULL or   @I_iJournalEntry                is NULL or   @I_cBatchSource          is NULL or   @I_cBatchNumber          is NULL or  @I_cUserID                      is NULL or   @I_sSeries                      is NULL or   @I_iAccountIndex                is NULL or  @I_cAuditTrailCode              is NULL or  @I_dTransactionDate             is NULL or  @I_sTransactionYear             is NULL or  @I_sClosingYear          is NULL or  @I_sPeriodID                    is NULL or  @I_nLedgerID is NULL or  @I_cDescription          is NULL or  @I_tPrintDistributions   is NULL or   @I_tReversing                   is NULL or   @I_tPrinting                    is NULL or  @I_tPosting                     is NULL or   @I_tRealTimeQuick               is NULL or  @I_sQuickOffset          is NULL or  @I_sAllocationType              is NULL or  @I_tHistory                     is NULL or   @I_tOffsetAccount               is NULL or   @I_mSequenceLine                is NULL or  @I_mRecurringTRXSequence        is NULL or  @I_mExchangeRate                is NULL or  @I_cExchangeTableID             is NULL or  @I_cFuncCurrencyID              is NULL or   @I_sFuncCurrencyIndex    is NULL or   @I_sFuncDecimalPlaces    is NULL or  @I_tMCRegistered                is NULL or   @I_sMCTransaction               is NULL or  @I_cOrigCurrencyID              is NULL or  @I_sOrigCurrencyIndex    is NULL or  @I_sOrigDecimalPlaces    is NULL or  @I_sRateCalculationMethod  is NULL or  @I_cRateTypeID                  is NULL or  @I_cIntercompanyID is NULL or  @I_tICTransaction is NULL or  @I_cOriginatingDocNumber is NULL or  @I_cOriginatingControlNumber is NULL or  @I_cOriginatingMasterID is NULL or  @I_cOriginatingMasterName is NULL or  @I_sOriginatingTrxType is NULL or  @I_cOriginatingTRXDesc is NULL or  @I_sOrigDTASeries is NULL or  @I_iOrigSequenceNumber is NULL or  @I_sDTAGLStatus is NULL or  @I_nDTAIndex is NULL or  @I_nDenomExchangeRate     is NULL or  @I_sMCTrxState is NULL or  @I_dDocumentDate is NULL or  @I_iPostingNumber is NULL or  @I_iPeriodPostingNumber is NULL or  @I_iPostingNumberHist is NULL or  @I_iPeriodPostingNumberHist is NULL or  @IO_bRetainEarnMessages is NULL or  @IO_bRetainEarnMessages2 is NULL or  @I_cCorrespondingUnit is NULL   begin  select @O_iErrorState = 20130  break  end    select  @TRUE           = 1,  @FALSE          = 0,  @BAL_SHEET      = 0,  @ALLOCATION     = 1,  @HISTORY        = 2,  @YEAR_END_CLOSE = 3,  @CURRENT_YEAR   = 1,  @HISTORY_BBF    = 3,  @UNIT_ACCT      = 2   if      @I_sAllocationType <> @ALLOCATION and  @I_sAllocationType <> @HISTORY and  @I_sAllocationType <> @YEAR_END_CLOSE  begin  select @O_iErrorState = 20711  break  end   select   @iDistributionIndex = NULL,  @mSequenceLine = @I_mSequenceLine,  @tHistoryClosingEntry = @FALSE   select   @iDistributionIndex = min(DistributionIndex)  from   #Distributions   where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex   and     AllocationType = @I_sAllocationType   if @iDistributionIndex is NULL  begin  select @O_iErrorState = 20131  break   end   while (@iDistributionIndex is not NULL)  begin    select   @mDebit = Debit,  @mCredit = Credit,  @mOrigDebit = OriginatingDebit,  @mOrigCredit = OriginatingCredit,  @sAccountType = AccountType,  @sPostingType = PostingType,  @sUnitDecimalPlaces = UnitDecimalPlaces,  @bLineMessages = LineMessage,  @bLineMessages2 = LineMessages2  from   #Distributions   where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     @iDistributionIndex = DistributionIndex  and     AllocationType = @I_sAllocationType   if @@rowcount <> 1  begin  select @O_iErrorState = 20156  break  end    if @sAccountType = @UNIT_ACCT  select   @I_sFuncCurrencyIndex = @sUnitDecimalPlaces,  @I_sOrigCurrencyIndex = @sUnitDecimalPlaces   select   @tPrinting = @I_tPrinting,  @mSequenceLine = @mSequenceLine + 1.0   if @I_tHistory = @TRUE  begin  select @tHistoryClosingEntry = @TRUE   if @sPostingType = @BAL_SHEET  begin  select @tAllowCloseHistory = @TRUE   if @I_tPrinting = @TRUE and @I_tPrintDistributions = @FALSE  select   @tPrinting = @FALSE,  @O_mBalanceSheetTotalDebits = @O_mBalanceSheetTotalDebits + @mDebit,  @O_mBalanceSheetTotalCredits = @O_mBalanceSheetTotalCredits + @mCredit,  @O_mOrigBalanceSheetTotalDebs = @O_mOrigBalanceSheetTotalDebs + @mOrigDebit,  @O_mOrigBalanceSheetTotalCreds = @O_mOrigBalanceSheetTotalCreds + @mOrigCredit  end   else   select   @tAllowCloseHistory = @FALSE,  @O_mProfitAndLossTotalDebits = @O_mProfitAndLossTotalDebits + @mDebit,  @O_mProfitAndLossTotalCredits = @O_mProfitAndLossTotalCredits + @mCredit,  @O_mOrigProfitAndLossTotalDebs = @O_mOrigProfitAndLossTotalDebs + @mOrigDebit,  @O_mOrigProfitAndLossTotalCred = @O_mOrigProfitAndLossTotalCred + @mOrigCredit   if @I_tPosting = @TRUE or @tPrinting = @TRUE and   (@mDebit <> 0.00000 or @mCredit <> 0.00000)  begin  exec @iStatus = glpPostToHistoryYear  @I_iSQLSessionID,  @I_sTransactionType,  @I_iJournalEntry,  @I_cBatchSource,  @I_cBatchNumber,  @I_cUserID,  @I_sSeries,  @iDistributionIndex,  @sAccountType,  @sPostingType,  @mDebit,  @mCredit,  @I_cAuditTrailCode,  @I_dTransactionDate,  @I_sTransactionYear,  @I_sClosingYear,  @I_sPeriodID,  @I_nLedgerID,  @I_cDescription,  @I_tPrintDistributions,  @I_tReversing,  @tPrinting,  @I_tPosting,  @I_tRealTimeQuick,  @I_sQuickOffset,  @I_tOffsetAccount,  @tAllowCloseHistory,  @mSequenceLine,  @I_mRecurringTRXSequence,  @I_mExchangeRate,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @I_sFuncDecimalPlaces,  @I_tMCRegistered,   @I_sMCTransaction,  @mOrigDebit,  @mOrigCredit,  @I_cOrigCurrencyID,  @I_sOrigCurrencyIndex,  @I_sOrigDecimalPlaces,  @I_cIntercompanyID,  @I_tICTransaction,  @I_cOriginatingDocNumber,  @I_cOriginatingControlNumber,  @I_cOriginatingMasterID,  @I_cOriginatingMasterName,  @I_sOriginatingTrxType,  @I_cOriginatingTRXDesc,  @I_sOrigDTASeries,  @I_iOrigSequenceNumber,  @I_sDTAGLStatus,  @I_nDTAIndex,  @I_nDenomExchangeRate,  @I_sMCTrxState,  @I_dDocumentDate,  @I_iPostingNumber,  @I_iPeriodPostingNumber,  @I_iPostingNumberHist,  @I_iPeriodPostingNumberHist,  @I_cCorrespondingUnit,  @bLineMessages    output,  @bLineMessages2   output,  @IO_bRetainEarnMessages   output,  @IO_bRetainEarnMessages2  output,  @O_iErrorState    output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end   end   else  begin   if @I_sAllocationType = @ALLOCATION  select   @tClosingEntryType = @CURRENT_YEAR,  @tHistoryClosingEntry = @FALSE  else  select   @tClosingEntryType = @HISTORY_BBF,   @tHistoryClosingEntry = @TRUE   if @I_tPosting = @TRUE and (@mDebit <> 0.00000 or @mCredit <> 0.00000)  begin  exec @iStatus = glpPostToCurrentYear  @I_iSQLSessionID,  @I_sTransactionType,  @I_iJournalEntry,  @I_cUserID,  @iDistributionIndex,  @sAccountType,  @mDebit,  @mCredit,  @I_tOffsetAccount,  @I_sQuickOffset,  @I_cAuditTrailCode,   @I_sTransactionYear,  @I_sPeriodID,  @I_nLedgerID,  @tClosingEntryType,  @I_dTransactionDate,  @I_cDescription,  @I_mRecurringTRXSequence,   @I_mExchangeRate,  @I_cExchangeTableID,  @I_cFuncCurrencyID,   @I_sFuncCurrencyIndex,  @I_tMCRegistered,  @I_sMCTransaction,  @mOrigDebit,  @mOrigCredit,  @I_cOrigCurrencyID,  @I_sOrigCurrencyIndex,  @I_sRateCalculationMethod,  @I_cRateTypeID,  @I_cOriginatingDocNumber,  @I_cOriginatingControlNumber,  @I_cOriginatingMasterID,  @I_cOriginatingMasterName,  @I_sOriginatingTrxType,  @I_cOriginatingTRXDesc,  @I_sOrigDTASeries,  @I_iOrigSequenceNumber,  @I_mSequenceLine,  @I_sDTAGLStatus,  @I_nDTAIndex,  @I_nDenomExchangeRate,  @I_sMCTrxState,  @I_dDocumentDate,  @I_iPostingNumber,  @I_iPeriodPostingNumber,  @I_cCorrespondingUnit,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break  end   end    if  @I_tPrintDistributions = @TRUE and   @I_tPrinting = @TRUE and  ( @mDebit <> 0.00000 or @mCredit <> 0.00000 or  (@I_sTransactionType = 2 and @I_nClearAmount = 0) or  (@bLineMessages <> 0x00000000 or  @bLineMessages2 <> 0x00000000))  begin   select   @bLineMessages2 = DistMessages2  from   #DistErrors   where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and     @iDistributionIndex = DistributionIndex   exec @iStatus = glpUpdateAllocationRegister  @I_sTransactionType,  @I_iJournalEntry,  @I_cBatchSource,  @I_cBatchNumber,  @I_cUserID,  @I_tRealTimeQuick,   @iDistributionIndex,  @sAccountType,  @mDebit,  @mCredit,  @I_dTransactionDate,  @mSequenceLine,  @I_cDescription,  @I_tOffsetAccount,   @tHistoryClosingEntry,  @I_tReversing,  @bLineMessages,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @bLineMessages2,  @mOrigDebit,  @mOrigCredit,  @I_cOrigCurrencyID,  @I_sOrigCurrencyIndex,  @I_cIntercompanyID,  @I_tICTransaction,  @I_cOriginatingDocNumber,  @I_cOriginatingControlNumber,  @I_cOriginatingMasterID,  @I_cOriginatingMasterName,  @I_sOriginatingTrxType,  @I_sMCTrxState,  @I_mExchangeRate,  @I_nDenomExchangeRate,   @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   end    select   @iTempIndex = @iDistributionIndex,  @iDistributionIndex = NULL    select   @iDistributionIndex = min (DistributionIndex)  from   #Distributions   where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex   and     DistributionIndex > @iTempIndex  and     AllocationType = @I_sAllocationType   end    if @iStatus <> 0 or @O_iErrorState <> 0  break  end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction   return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpPostDistributionAccounts] TO [DYNGRP]
GO

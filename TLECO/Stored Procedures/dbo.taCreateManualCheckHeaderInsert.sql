SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateManualCheckHeaderInsert] @I_vMLCHKTYP smallint=0,   @I_vPYADNMBR int,    @I_vBACHNUMB char(15),    @I_vCHEKBKID char(15)='',   @I_vCHEKNMBR char(20)='',   @I_vPOSTEDDT datetime='',   @I_vEMPLOYID char(15),    @I_vUSEGPPYADNMBR int=1,   @I_vRequesterTrx smallint = 0,   @I_vUSERID char(15)='',    @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare @PYADNMBR int,      @DATEFROM int,      @CHEKDATE datetime,     @GROSSAMNT numeric(19,5),    @NETAMNT1 numeric(19,5),    @NETAMNT2 numeric(19,5),    @PYRLCTYP smallint,     @sCompanyID int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @O_oErrorState int,  @iGetNextUPRPayAdjNumberErrState int,  @iGetNextUPRCheckNumberErrState int,  @iError int,      @DBName char(50),     @O_iInitErrorState int,     @oInitErrString varchar(255),    @INACTIVE tinyint  select @PYADNMBR = 0,      @DATEFROM = 0,      @CHEKDATE = '',      @GROSSAMNT = 0,  @NETAMNT1 = 0,  @NETAMNT2 = 0,  @PYRLCTYP = 0,   @sCompanyID = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @nNextNoteIndex = 0,     @iGetNextNoteIdxErrState = 0,    @iAddCodeErrState = 0,  @O_oErrorState = 0,  @iGetNextUPRPayAdjNumberErrState = 0,  @iGetNextUPRCheckNumberErrState = 0,  @iError = 0,      @DBName = '',      @O_iInitErrorState = 0,     @oInitErrString = '',     @O_iErrorState = 0,  @INACTIVE = 0 select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  select @DBName = DB_Name()  exec @iStatus = taCreateManualCheckHeaderInsertPre  @I_vMLCHKTYP output,  @I_vPYADNMBR output,  @I_vBACHNUMB output,  @I_vCHEKBKID output,  @I_vCHEKNMBR output,  @I_vPOSTEDDT output,  @I_vEMPLOYID output,  @I_vUSEGPPYADNMBR output,  @I_vRequesterTrx output,  @I_vUSERID output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1174    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vMLCHKTYP is NULL or  @I_vPYADNMBR is NULL or  @I_vBACHNUMB is NULL or  @I_vCHEKBKID is NULL or  @I_vCHEKNMBR is NULL or  @I_vPOSTEDDT is NULL or  @I_vEMPLOYID is NULL or  @I_vUSEGPPYADNMBR is NULL or  @I_vRequesterTrx is NULL or  @I_vUSERID is NULL or   @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 1175    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vCHEKNMBR = UPPER(@I_vCHEKNMBR),  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vEMPLOYID = UPPER(@I_vEMPLOYID)  if ( @I_vMLCHKTYP < 0 or @I_vMLCHKTYP > 2 ) begin  select @O_iErrorState = 1176     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vMLCHKTYP = 2)  begin  select @PYRLCTYP = 4 end  else  begin  select @PYRLCTYP = 3 end   if ( @I_vCHEKBKID <> '' )  begin   if (not exists (select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID ))  begin  select @O_iErrorState = 1178     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vUSEGPPYADNMBR = 1 )  begin  exec @iStatus = taGetUPRNextPayAdjNumber  @I_vInc_Dec = 1,  @O_vPYADNMBR = @PYADNMBR output,  @O_vPYRLCTYP = @PYRLCTYP,  @O_iErrorState = @iGetNextUPRPayAdjNumberErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextUPRPayAdjNumberErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextUPRPayAdjNumberErrState  select @O_iErrorState = 2365   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update UPR10308 set PYADNMBR = @PYADNMBR where PYADNMBR = @I_vPYADNMBR and MLCHKTYP = @I_vMLCHKTYP  if @@error <> 0  begin  select @O_iErrorState = 2387    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vPYADNMBR = @PYADNMBR end  if ( @I_vMLCHKTYP = 0 and @I_vCHEKBKID = '' ) begin  select @I_vCHEKBKID = isnull(MLCHBKID,'') from UPR40200 (nolock)  end  if ( @I_vMLCHKTYP = 0 and @I_vCHEKNMBR = '' ) begin  exec @iStatus = taGetUPRNextCheckNumber  @I_vInc_Dec = 1,  @O_vCHEKNMBR = @I_vCHEKNMBR output,  @O_vCHEKBKID = @I_vCHEKBKID ,  @O_iErrorState = @iGetNextUPRCheckNumberErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextUPRCheckNumberErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextUPRCheckNumberErrState  select @O_iErrorState = 2370   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vMLCHKTYP = 0 and @I_vCHEKBKID = '' ) begin  select @O_iErrorState = 1177     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vMLCHKTYP = 0 and @I_vCHEKNMBR = '' ) begin  select @O_iErrorState = 3535     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vBACHNUMB = '' ) begin  select @O_iErrorState = 1179    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID = '' ) begin  select @O_iErrorState = 1180    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID <> '' ) begin  if (not exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID ))  begin  select @O_iErrorState = 1181    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  select @INACTIVE = INACTIVE from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID   if ( @I_vEMPLOYID <> '') and (@INACTIVE = 1) begin  select @O_iErrorState = 9501    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end   if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 1182     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vUSEGPPYADNMBR < 0 or @I_vUSEGPPYADNMBR > 1 )  begin  select @O_iErrorState = 3532     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  begin  if (exists (select 1 from UPR10307 (nolock) where EMPLOYID = @I_vEMPLOYID and BACHNUMB = @I_vBACHNUMB ))  begin  select @O_iErrorState = 3534    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (not exists (select 1 from UPR10301 (nolock) where BACHNUMB = @I_vBACHNUMB )) begin  select @O_iErrorState = 11989     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @DATEFROM = UPSTDTFR from SY02300 (nolock) where SERIES = 6 and TRXSOURC = 'Manual Checks'  select  @CHEKDATE = POSTEDDT from UPR10301 (nolock) where BACHNUMB = @I_vBACHNUMB  if ( @DATEFROM = 1 and @I_vPOSTEDDT = '' ) begin  select @O_iErrorState = 1186     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vMLCHKTYP = 0) and (@I_vCHEKBKID <> '') begin  if (exists (select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9511     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end   if @O_iErrorState <> 0 begin  return (@O_iErrorState) end  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 1183   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists( select 1 from UPR10309 (nolock) where PYRLCTYP = @PYRLCTYP and PYRLCNBR = @I_vPYADNMBR )  begin  insert UPR10309(  PYRLCTYP,  PYRLCNBR,  USERID  )  select   @PYRLCTYP,    @I_vPYADNMBR,    @I_vUSERID    if @@error <> 0  begin  select @O_iErrorState = 2372    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end else begin  select @O_iErrorState = 2373    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  begin  if not exists( select 1 from UPR10307 (nolock) where MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR )  begin  insert UPR10307(  MLCHKTYP,  PYADNMBR,  BACHNUMB,  CHEKBKID,  CHEKNMBR,  CHEKDATE,  POSTEDDT,  EMPLOYID,  ATACRVAC,  ATACRSCK,  GROSAMNT,  NETAMNT,  MCHKPRTD,  MCHKPSTD,  NOTEINDX  )  select  @I_vMLCHKTYP,    @I_vPYADNMBR,    @I_vBACHNUMB,    case     WHEN @I_vMLCHKTYP = 1 or @I_vMLCHKTYP = 2  THEN ''  ELSE @I_vCHEKBKID  end,  case     WHEN @I_vMLCHKTYP = 1  THEN ''  WHEN @I_vMLCHKTYP = 2  THEN 'BEG BAL'  ELSE @I_vCHEKNMBR  end,  @CHEKDATE,    case     WHEN @DATEFROM = 0  THEN ''  ELSE @I_vPOSTEDDT  end,  @I_vEMPLOYID,    0,     0,     0,     0,     0,     0,     @nNextNoteIndex    if @@error <> 0  begin  select @O_iErrorState = 1184    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  begin  if exists( select 1 from UPR10307 (nolock) where MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR )  begin   select @GROSSAMNT = isnull(sum(MLTRXAMT),0)  from UPR10308 a (nolock), UPR00400 b (nolock)   where (a.MLCHKTYP = @I_vMLCHKTYP and a.PYADNMBR = @I_vPYADNMBR)   and (a.MLTRXTYP in (1,9))   and (a.EMPLOYID = b.EMPLOYID)   and (a.UPRTRXCD = b.PAYRCORD)   and (b.PAYTYPE = 5 and b.RPTASWGS = 1 or b.PAYTYPE <> 5)  update UPR10307 set GROSAMNT = @GROSSAMNT  where ( MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR )  if @@error <> 0  begin  select @O_iErrorState = 2389    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   select @NETAMNT1 = isnull(sum(MLTRXAMT),0) from UPR10308 (nolock) where (MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR) and (MLTRXTYP = 1 or MLTRXTYP = 9)  select @NETAMNT2 = isnull(sum(MLTRXAMT),0) from UPR10308 (nolock) where (MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR) and ((MLTRXTYP = 2) or ( MLTRXTYP >= 4 and MLTRXTYP <= 13))   update UPR10307 set NETAMNT = @NETAMNT1 - @NETAMNT2  where ( MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR )  if @@error <> 0  begin  select @O_iErrorState = 3533    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateManualCheckHeaderInsertPost  @I_vMLCHKTYP,  @I_vPYADNMBR,  @I_vBACHNUMB,  @I_vCHEKBKID,  @I_vCHEKNMBR,  @I_vPOSTEDDT,  @I_vEMPLOYID,  @I_vUSEGPPYADNMBR,  @I_vRequesterTrx ,  @I_vUSERID,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1185    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateManualCheckHeaderInsert] TO [DYNGRP]
GO

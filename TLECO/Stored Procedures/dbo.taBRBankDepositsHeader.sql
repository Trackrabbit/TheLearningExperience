SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taBRBankDepositsHeader]  @I_vOption smallint = 1,   @I_vDEPTYPE smallint = 1,   @I_vDEPDATE datetime = '',   @I_vGLPOSTDT datetime = '',   @I_vCHEKBKID char(15),    @I_vdepositnumber char(20),   @I_vDSCRIPTN char(30) = '',   @I_vDepAmt numeric(19,5) = 0,   @I_vCheckTotal numeric(19,5) = 0,  @I_vCheckCount int = 0,    @I_vCreditCardTotal numeric(19,5) = 0,  @I_vCreditCardCount int = 0,   @I_vCurrencyAmount int = 0,   @I_vCurrencyCount int = 0,   @I_vCoinAmount numeric(19,5) = 0,  @I_vXCHGRATE numeric(19,7) = 0,   @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,     @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7) = 0,   @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vMDFUSRID char(15) = '',   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @CMPANYID smallint,  @FUNLCURR char(15),  @CURRNIDX smallint,  @iGetNextNoteIdxErrState int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int,  @CURNCYID char(15),  @DBName char(50),  @O_iInitErrorState int,  @oInitErrString varchar(255),  @NOTEINDX numeric(19,5),  @DECPLCUR int,  @DECPLCURFun int,  @ISMCTRX tinyint,  @taMCCurrencyValidateErrState int,  @taMCCurrencyValidateErrString varchar(255),  @EXGTBLID char(15),  @ChkbkTotal numeric(19,5),  @LineDtlTot numeric(19,5),  @ISMCREG tinyint,  @FUNCRIDX int  select  @CMPANYID = 0,  @FUNLCURR = '',  @CURRNIDX = 0,  @iGetNextNoteIdxErrState = 0,  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @iError = 0,  @CURNCYID = '',  @DBName = '',  @O_iInitErrorState = 0,  @oInitErrString = '',  @NOTEINDX = 0,  @DECPLCUR = 0,  @DECPLCURFun = 0,  @ISMCTRX = 0,  @taMCCurrencyValidateErrState = 0,  @taMCCurrencyValidateErrString = '',  @EXGTBLID = '',  @ChkbkTotal = 0,  @LineDtlTot = 0,  @ISMCREG = 0,  @O_iErrorState = 0,  @FUNCRIDX = 0  if (@oErrString is null) begin  select @oErrString = '' end  select @DBName = DB_Name()  exec @iStatus = taBRBankDepositsHeaderPre  @I_vOption output,  @I_vDEPTYPE output,  @I_vDEPDATE output,  @I_vGLPOSTDT output,  @I_vCHEKBKID output,  @I_vdepositnumber output,  @I_vDSCRIPTN output,  @I_vDepAmt output,  @I_vCheckTotal output,  @I_vCheckCount output,  @I_vCreditCardTotal output,  @I_vCreditCardCount output,  @I_vCurrencyAmount output,  @I_vCurrencyCount output,  @I_vCoinAmount output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vMDFUSRID output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7338    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vOption is null or  @I_vDEPTYPE is null or  @I_vDEPDATE is null or  @I_vGLPOSTDT is null or  @I_vCHEKBKID is null or  @I_vdepositnumber is null or  @I_vDSCRIPTN is null or  @I_vDepAmt is null or  @I_vCheckTotal is null or  @I_vCheckCount is null or  @I_vCreditCardTotal is null or  @I_vCreditCardCount is null or  @I_vCurrencyAmount is null or  @I_vCurrencyCount is null or  @I_vCoinAmount is null or  @I_vXCHGRATE is null or  @I_vRATETPID is null or  @I_vEXPNDATE is null or  @I_vEXCHDATE is null or  @I_vEXGTBDSC is null or  @I_vEXTBLSRC is null or  @I_vRATEEXPR is null or  @I_vDYSTINCR is null or  @I_vRATEVARC is null or  @I_vTRXDTDEF is null or  @I_vRTCLCMTD is null or  @I_vPRVDSLMT is null or  @I_vDATELMTS is null or  @I_vTIME1 is null or  @I_vMDFUSRID is null or  @I_vRequesterTrx is null or  @I_vUSRDEFND1 is null or  @I_vUSRDEFND2 is null or  @I_vUSRDEFND3 is null or  @I_vUSRDEFND4 is null or  @I_vUSRDEFND5 is null  ) begin  select @O_iErrorState = 7339    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  (@I_vDepAmt < 0) or  (@I_vCheckTotal < 0) or  (@I_vCheckCount < 0) or  (@I_vCreditCardTotal < 0) or  (@I_vCreditCardCount < 0) or  (@I_vCurrencyAmount < 0) or  (@I_vCurrencyCount < 0) or  (@I_vCoinAmount < 0) or  (@I_vXCHGRATE < 0) or  (@I_vRATEVARC < 0) or  (@I_vPRVDSLMT < 0) or  (@I_vDATELMTS < 0) or  (@I_vRequesterTrx < 0)) begin  select @O_iErrorState = 7381    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vdepositnumber = UPPER(@I_vdepositnumber)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (exists(select 1 from CM00100 (nolock) where CURNCYID <> '')) begin  select @ISMCREG = 1 end  if (@I_vDEPDATE = '') begin  select @I_vDEPDATE = convert(varchar(12),getdate()) end  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  if @iGetNextNoteIdxErrState <> 0 select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 7345   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @CURNCYID = CURNCYID from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID  select @CURRNIDX = CURRNIDX,  @DECPLCUR = DECPLCUR - 1  from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID  select @FUNLCURR = FUNLCURR,  @FUNCRIDX = FUNCRIDX  from MC40000 (nolock)  if (@FUNLCURR = '') begin  select @O_iErrorState = 7372    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @DECPLCURFun = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@CURNCYID = '') begin  select @DECPLCUR = @DECPLCURFun end  if ((@I_vOption < 1) or (@I_vOption > 1)) begin  select @O_iErrorState = 7380     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDEPTYPE < 1) and (@I_vDEPTYPE > 2)) begin  select @O_iErrorState = 7370     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCHEKBKID = '') begin  select @O_iErrorState = 7346     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vdepositnumber = '') begin  select @O_iErrorState = 7367     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRATEEXPR not in(-1,0,1,2,3,4,5,6,7,8,9)) begin  select @O_iErrorState = 7382     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vTRXDTDEF not in(-1,0,1,2)) begin  select @O_iErrorState = 7383     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRTCLCMTD not in(-1,0,1)) begin  select @O_iErrorState = 7384     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 7376     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from CM10100 (nolock) where CHEKBKID = @I_vCHEKBKID and depositnumber = @I_vdepositnumber)) begin  select @O_iErrorState = 7368     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (exists(select 1 from CM10100 (nolock) where CHEKBKID = @I_vCHEKBKID and DEPTYPE = 1 and @I_vDEPTYPE = 1)) begin  select @O_iErrorState = 7466     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vCHEKBKID <> '') begin   if not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID)  begin  select @O_iErrorState = 7365     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1)  begin  select @O_iErrorState = 7366     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vDepAmt <> round(@I_vDepAmt, @DECPLCUR)) begin  select @O_iErrorState = 7385     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from CM20200 (nolock) where CHEKBKID = @I_vCHEKBKID and SRCDOCNUM = @I_vdepositnumber and CMTrxType = 1)) begin  select @O_iErrorState = 7401     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@CURNCYID <> '') begin   if not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID)  begin  select @O_iErrorState = 7373    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if not exists(select 1 from DYNAMICS..MC60100 (nolock) where CMPANYID = @CMPANYID and CURNCYID = @CURNCYID)  begin  select @O_iErrorState = 7374    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if exists(select 1 from DYNAMICS..MC60100 (nolock) where CMPANYID = @CMPANYID and CURNCYID = @CURNCYID and INACTIVE = 1)  begin  select @O_iErrorState = 7375    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if ((@CURNCYID <> '') and (@CURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCHEKBKID,  @I_vDOCDATE = @I_vDEPDATE,  @I_vCURNCYID = @CURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 3,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @taMCCurrencyValidateErrString output,  @O_iErrorState = @taMCCurrencyValidateErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@taMCCurrencyValidateErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taMCCurrencyValidateErrString  select @O_iErrorState = 7379    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  else begin  select @ISMCTRX = 0, @I_vRATEEXPR = 0, @I_vDYSTINCR = 0, @I_vRTCLCMTD = 0 end  if ((@I_vTIME1 = '') and (@ISMCTRX = 1)) begin  select @I_vTIME1 = ' '+ substring(convert(varchar(25),getdate()),12,12) end  if ((@ISMCTRX = 1) and (@I_vDEPTYPE = 1)) begin  update CM10101 set  RATETPID = @I_vRATETPID,  EXGTBLID = @EXGTBLID,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  TIME1 = @I_vTIME1,  RTCLCMTD = @I_vRTCLCMTD,  EXPNDATE = @I_vEXPNDATE,  DENXRATE = 0  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID  if (@@error <> 0)  begin  select @O_iErrorState = 7369    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update CM20300 set  RATETPID =  case  when CURNCYID <> @FUNLCURR  then @I_vRATETPID  else ''  end,  XCHGRATE =  case  when CURNCYID <> @FUNLCURR  then @I_vXCHGRATE  else 0  end,  EXCHDATE =  case  when CURNCYID <> @FUNLCURR  then @I_vEXCHDATE  else ''  end,  EXPNDATE =  case  when CURNCYID <> @FUNLCURR  then @I_vEXPNDATE  else ''  end,  RTCLCMTD =  case  when CURNCYID <> @FUNLCURR  then @I_vRTCLCMTD  else 0  end,  Checkbook_Amount =  case  when @I_vRTCLCMTD = 0 and @CURNCYID <> CURNCYID  then round(ORIGAMT / @I_vXCHGRATE, @DECPLCUR)  when @I_vRTCLCMTD = 1 and @CURNCYID <> CURNCYID  then round(ORIGAMT * @I_vXCHGRATE, @DECPLCUR)  else Checkbook_Amount  end,  RLGANLOS =  case  when @I_vRTCLCMTD = 0 and CURNCYID <> @FUNLCURR  then round((ORIGAMT * @I_vXCHGRATE),@DECPLCURFun) - round((ORIGAMT * Receiving_Exchange_Rate), @DECPLCURFun)  when @I_vRTCLCMTD = 1 and CURNCYID <> @FUNLCURR  then round((ORIGAMT / @I_vXCHGRATE),@DECPLCURFun) - round((ORIGAMT / Receiving_Exchange_Rate), @DECPLCURFun)  else 0  end  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID  if (@@error <> 0)  begin  select @O_iErrorState = 7454    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRTCLCMTD = 0)  begin  update CM10101 set  Originating_Checkbook_Am = round(Originating_Checkbook_Am / @I_vXCHGRATE, @DECPLCUR)  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID <> @CURNCYID  if (@@error <> 0)  begin  select @O_iErrorState = 7371    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  if (@I_vRTCLCMTD = 1)  begin  update CM10101 set  Originating_Checkbook_Am = round(Originating_Checkbook_Am * @I_vXCHGRATE, @DECPLCUR)  where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID and CURNCYID <> @CURNCYID  if (@@error <> 0)  begin  select @O_iErrorState = 7455    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end end  if (@ISMCTRX = 0) begin  select @I_vXCHGRATE = 0,  @I_vRATETPID = '',  @I_vEXPNDATE = '',  @I_vEXCHDATE = '',  @I_vRTCLCMTD = 0 end  select @ChkbkTotal = sum(Originating_Checkbook_Am) from CM10101 (nolock) where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID  if (@I_vDEPTYPE = 1) begin  select @I_vDepAmt = @ChkbkTotal end else begin  if (@I_vDEPTYPE = 2)  begin  if ((@I_vCheckTotal = 0) and (@I_vCreditCardTotal = 0) and (@I_vCurrencyAmount = 0) and (@I_vCoinAmount = 0))  begin  select @I_vCheckTotal = @I_vDepAmt,  @I_vCheckCount = 1   end   if (@I_vDepAmt <> @I_vCheckTotal+@I_vCreditCardTotal+@I_vCurrencyAmount+@I_vCoinAmount)  begin  select @O_iErrorState = 7387     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (exists(select 1 from CM10101 (nolock) where depositnumber = @I_vdepositnumber and CHEKBKID = @I_vCHEKBKID))  begin  select @O_iErrorState = 7460     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  insert CM10100 (  CHEKBKID,  depositnumber,  DEPTYPE,  DEPWTHRCT,  DEPDATE,  GLPOSTDT,  DepAmt,  MDFUSRID,  MODIFDT,  CURNCYID,  DSCRIPTN,  USERDEF1,  USERDEF2,  NOTEINDX,  RCRDSTTS,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  EXPNDATE,  CURRNIDX,  DECPLCUR,  DENXRATE,  MCTRXSTT  )  select   @I_vCHEKBKID,     @I_vdepositnumber,    @I_vDEPTYPE,     case      when @I_vDEPTYPE = 1 or @I_vDEPTYPE = 3   then 1  else 0  end,  @I_vDEPDATE,     case      when @I_vGLPOSTDT = ''  then @I_vDEPDATE  else @I_vGLPOSTDT  end,  @I_vDepAmt,  @I_vMDFUSRID,  convert(varchar(12),getdate()),   @CURNCYID,     @I_vDSCRIPTN,     '',      '',      @NOTEINDX,     40,      @I_vRATETPID,     @EXGTBLID,     case      when @ISMCREG = 0  then 0  when @ISMCREG = 1 and @ISMCTRX = 0  then 1  else @I_vXCHGRATE  end,  @I_vEXCHDATE,     @I_vTIME1,     @I_vRTCLCMTD,     @I_vEXPNDATE,     case      when @ISMCREG = 0  then 0  else @CURRNIDX  end,  case      when @ISMCREG = 0  then 0  else @DECPLCUR  end,  0,      0     if (@@error <> 0) begin  select @O_iErrorState = 7377    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vDEPTYPE = 2) begin  insert CM10101 (  depositnumber,  CHEKBKID,  CURNCYID,  CMRECNUM,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RTCLCMTD,  EXPNDATE,  DECPLCUR,  RCPTCOUNT,  ORCHKTTL,  Originating_Check_Count,  Orig_Credit_Card_Total,  Originating_Credit_Card_,  Originating_Cash_Total,  Originating_Cash_Count,  Originating_Coin_Amount,  Originating_Deposit_Amou,  Originating_Checkbook_Am,  DENXRATE,  MCTRXSTT  )  select  @I_vdepositnumber,     @I_vCHEKBKID,      case       when @ISMCREG = 0  then ''  else @CURNCYID  end,  0,       case       when @ISMCREG = 0  then @FUNCRIDX  else @CURRNIDX  end,  @I_vRATETPID,      @EXGTBLID,      case       when @ISMCREG = 0  then 0  when @ISMCREG = 1 and @ISMCTRX = 0  then 1  else @I_vXCHGRATE  end,  @I_vEXCHDATE,      @I_vTIME1,      @I_vRTCLCMTD,      @I_vEXPNDATE,      case       when @ISMCREG = 0  then 0  else @DECPLCUR  end,  0,       @I_vCheckTotal,      @I_vCheckCount,      @I_vCreditCardTotal,     @I_vCreditCardCount,     @I_vCurrencyAmount+@I_vCoinAmount,   @I_vCurrencyCount,     @I_vCoinAmount,      @I_vDepAmt,      case       when @ISMCREG = 0  then @I_vDepAmt  else 0  end,  0,       0       if (@@error <> 0)  begin  select @O_iErrorState = 7386    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taBRBankDepositsHeaderPost  @I_vOption,  @I_vDEPTYPE,  @I_vDEPDATE,  @I_vGLPOSTDT,  @I_vCHEKBKID,  @I_vdepositnumber,  @I_vDSCRIPTN,  @I_vDepAmt,  @I_vCheckTotal,  @I_vCheckCount,  @I_vCreditCardTotal,  @I_vCreditCardCount,  @I_vCurrencyAmount,  @I_vCurrencyCount,  @I_vCoinAmount,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vMDFUSRID,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7378    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taBRBankDepositsHeader] TO [DYNGRP]
GO

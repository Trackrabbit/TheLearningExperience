SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taIVTransactionHeaderInsert]  @I_vBACHNUMB char(15) ,    @I_vIVDOCNBR char(17) ,   @I_vIVDOCTYP smallint,   @I_vDOCDATE datetime ,   @I_vRequesterTrx smallint = 0,   @I_vPOSTTOGL smallint = 1,   @I_vMDFUSRID char(15) = '',   @I_vPTDUSRID char(15) = '',   @I_vPOSTEDDT datetime = '',   @I_vNOTETEXT  varchar(8000) = '',  @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @BCHSOURC char(15),  @iStatus int,  @iAddCodeErrState int,  @iStatement int,  @O_oErrorState int,  @sCompanyID smallint,     @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @TRXTOTAL numeric(19,5),    @TRXTOTAL1 numeric(19,5),    @TRXTOTAL2 numeric(19,5),    @iUpdtBthErrState int,  @iCustomState int,  @iCustomErrString varchar(255),  @iCreateBatchErrString varchar(255),   @iError int,      @DBName char(50),     @O_iInitErrorState int,     @oInitErrString varchar(255),    @O_iErrorStateAASub int,  @O_iErrorStringAASub varchar(255),  @itaProcessAnalyticsErrState int,  @itaProcessAnalyticsErrString varchar(8000),  @aaSubLedgerHdrID int,  @CURNCYID char(15),  @CURRNIDX int,  @INTERID char(5)  select  @BCHSOURC = 'IV_Trxent',  @iStatus = 0,  @iAddCodeErrState = 0,  @O_oErrorState = 0,  @iStatement = 0,  @TRXTOTAL = 0,   @TRXTOTAL1 = 0,  @TRXTOTAL2 = 0,  @iUpdtBthErrState = 0,  @O_iErrorState = 0,    @O_iErrorStateAASub = 0,  @O_iErrorStringAASub = '',  @itaProcessAnalyticsErrState = 0,  @itaProcessAnalyticsErrString = '',  @aaSubLedgerHdrID = 0,  @CURNCYID = '',  @CURRNIDX = 0,  @INTERID = ''  if (@oErrString is NULL) begin  select @oErrString = '' end  select @DBName = DB_Name()  exec @iStatus = taIVTransactionHeaderInsertPre  @I_vBACHNUMB output,  @I_vIVDOCNBR  output,  @I_vIVDOCTYP output,  @I_vDOCDATE output,  @I_vRequesterTrx output,  @I_vPOSTTOGL    output,  @I_vMDFUSRID  output,      @I_vPTDUSRID  output,      @I_vPOSTEDDT output,      @I_vNOTETEXT  output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 271    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vBACHNUMB is null or  @I_vIVDOCNBR is null or  @I_vIVDOCTYP is null or  @I_vDOCDATE is null or  @I_vRequesterTrx is null) begin  select @O_iErrorState = 272    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select  @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vIVDOCNBR = UPPER(@I_vIVDOCNBR)  select @CURNCYID = isnull(FUNLCURR,''), @CURRNIDX = FUNCRIDX from MC40000 (nolock) if @CURNCYID = '' begin  select @O_iErrorState = 7046     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vBACHNUMB = '') begin  select @O_iErrorState = 273     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from SY00500 (nolock) where BACHNUMB = @I_vBACHNUMB and MKDTOPST <> 0 and BCHSOURC = @BCHSOURC)) begin  select @O_iErrorState = 573     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ((select ENABLEMULTIBIN from IV40100 (nolock)) = 1) begin  if exists(select 1 from IV10002 (nolock) where IVDOCTYP = @I_vIVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and FROMBIN = '') or  exists(select 1 from IV10003 (nolock) where IVDOCTYP = @I_vIVDOCTYP and IVDOCNBR = @I_vIVDOCNBR and BIN = '')  begin  select @O_iErrorState = 5952    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vIVDOCTYP < 1 or @I_vIVDOCTYP > 2) begin  select @O_iErrorState = 274     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vIVDOCNBR = '') begin  select @O_iErrorState = 275     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vPOSTTOGL < 0 or @I_vPOSTTOGL > 1 ) begin  select @O_iErrorState = 1618     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select 1 from IV10000 a (nolock) where a.IVDOCTYP = @I_vIVDOCTYP and a.IVDOCNBR = @I_vIVDOCNBR) or  exists(select 1 from IV30200 a (nolock) where a.IVDOCTYP = @I_vIVDOCTYP and a.DOCNUMBR = @I_vIVDOCNBR)  begin  select @O_iErrorState = 276      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3700     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @INTERID = INTERID, @sCompanyID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID  = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,   @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 277    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @TRXTOTAL1 = sum(TRXQTY*QTYBSUOM) from IV10001 a (nolock) where a.IVDOCTYP = @I_vIVDOCTYP and a.IVDOCNBR = @I_vIVDOCNBR and a.TRXQTY > 0 select @TRXTOTAL1 = isnull(@TRXTOTAL1,0)  select @TRXTOTAL2 = sum(TRXQTY*QTYBSUOM) * -1  from IV10001 a (nolock) where a.IVDOCTYP = @I_vIVDOCTYP and a.IVDOCNBR = @I_vIVDOCNBR and a.TRXQTY < 0 select @TRXTOTAL2 = isnull(@TRXTOTAL2,0)  select @TRXTOTAL = @TRXTOTAL1 + @TRXTOTAL2  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='IV_Transaction',  @I_vINDEX1=@I_vIVDOCNBR,  @I_vINDEX2=@I_vIVDOCTYP,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 2916    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taCreateUpdateBatchHeaderRcd  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vSERIES = 5,  @I_vGLPOSTDT = @I_vDOCDATE,  @I_vBCHSOURC = 'IV_Trxent',  @I_vDOCAMT = @TRXTOTAL,  @I_vORIGIN = 1,  @I_vNUMOFTRX = 1,  @I_vCHEKBKID = '',  @I_vPOSTTOGL = @I_vPOSTTOGL,  @O_iErrorState = @iUpdtBthErrState output,  @oErrString = @iCreateBatchErrString output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdtBthErrState <> 0) begin  if (@iUpdtBthErrState <> 0)  begin  exec @iStatus = taUpdateString  @iUpdtBthErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @O_iErrorState = 278    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vNOTETEXT <> '') begin  insert SY03900   (  NOTEINDX,   DATE1,   TIME1,   TXTFIELD  )   select   @nNextNoteIndex,  convert(varchar(12),getdate()),  substring(convert(varchar(25),getdate()),12,12),  @I_vNOTETEXT   if (@@error <> 0)  begin  select @O_iErrorState = 5869    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  insert into IV10000 ( BACHNUMB,  BCHSOURC,  IVDOCNBR,  RCDOCNUM,  IVDOCTYP,  DOCDATE,  MODIFDT,  MDFUSRID,  PTDUSRID,  GLPOSTDT,  PSTGSTUS,  TRXQTYTL,  NOTEINDX,  SRCRFRNCNMBR,  SOURCEINDICATOR  )  select  @I_vBACHNUMB,      @BCHSOURC,      @I_vIVDOCNBR,      @I_vIVDOCNBR,      @I_vIVDOCTYP,      @I_vDOCDATE,      convert(varchar(12),getdate()),    @I_vMDFUSRID,      @I_vPTDUSRID,      case        when @I_vPOSTEDDT = ''  then @I_vDOCDATE   else @I_vPOSTEDDT  end,   0,       @TRXTOTAL,      @nNextNoteIndex,     '',       1      if @@error <> 0 begin  select @O_iErrorState = 279    select @iStatement = 1  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'AAG00102') begin  if exists(select 1 from DYNAMICS..AAG00102 (nolock) where CMPANYID = @sCompanyID)  begin   exec @iStatus = aagCreateSubWorkDist  @aaSubLedgerHdrID out,  0,   @I_vIVDOCTYP,   @I_vIVDOCNBR,  '',   10001,  5,   @sCompanyID,   0,  @CURNCYID,   @CURRNIDX,   '',   '',   0,   '',   '',  '',   0,  0,   0,   1,   @INTERID,   0,   0,  '',  @O_iErrorStateAASub output,  @O_iErrorStringAASub output   if (@@error <> 0)   begin  select @O_iErrorState = 8205    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end   if (@aaSubLedgerHdrID <> 0)  begin  exec @iStatus = taProcessAnalytics  @I_vDOCNMBR = @I_vIVDOCNBR,  @I_vKey = @I_vIVDOCNBR,  @I_vDOCTYPE = 0,  @O_iErrorState = @itaProcessAnalyticsErrState output,  @oErrString = @itaProcessAnalyticsErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@itaProcessAnalyticsErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @itaProcessAnalyticsErrString  select @O_iErrorState = 8206    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  end  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taIVTransactionHeaderInsertPost  @I_vBACHNUMB,  @I_vIVDOCNBR,  @I_vIVDOCTYP,  @I_vDOCDATE,  @I_vRequesterTrx,  @I_vPOSTTOGL,  @I_vMDFUSRID,      @I_vPTDUSRID,      @I_vPOSTEDDT,      @I_vNOTETEXT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error  if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end  if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 280    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='IV_Transaction',  @I_vINDEX1=@I_vIVDOCNBR,  @I_vINDEX2=@I_vIVDOCTYP,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 2917    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taIVTransactionHeaderInsert] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE procedure [dbo].[pmPopulateEditCheckBatchVendorTemp]  @I_cVendorTemp char(40)        = NULL,  @I_cBatchSource char(15) = NULL,  @I_cBatchNumber char(15) = NULL,  @I_tFuncBatch tinyint=NULL,  @IO_cyBatchTotal numeric(9,2)  = 0 output,  @O_iErrorState int  = NULL output as  declare  @cBatchNumber char(32),  @cBatchSource char(32),  @cTempBatchNumber char(15),  @iError int,  @iStatus int,  @TRUE int,  @FALSE int  select  @O_iErrorState   = 0,  @iStatus         = 0   if @I_cVendorTemp is NULL or  @I_cBatchSource is NULL or  @I_cBatchNumber is NULL or  @I_tFuncBatch is NULL  begin  select @O_iErrorState = 21095  return  end    exec @iStatus = DYNAMICS..smGetConstantInt 'TRUE', @TRUE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)  exec @iStatus = DYNAMICS..smGetConstantInt 'FALSE', @FALSE output, @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@O_iErrorState <> 0) )  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchNumber,  @cBatchNumber output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   Exec @iStatus = smFormatStringsForExecs  @I_cBatchSource,  @cBatchSource output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return (@iStatus)   exec ('delete ' + @I_cVendorTemp)   exec('insert into ' + @I_cVendorTemp + '  select  V.VENDORID,  V.VENDNAME,  V.VNDCLSID,  V.PYMNTPRI,  case ' + @I_tFuncBatch + '   when ' + @TRUE + ' then  (select sum(P.CHEKTOTL) from PM10300 P  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and V.VENDORID = P.VENDORID  )  else  (select sum(M.ORCHKTTL) from PM10300 P, MC020103 M  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and V.VENDORID = P.VENDORID  and P.VCHRNMBR = M.VCHRNMBR  and P.DOCTYPE = M.DOCTYPE  )  end,  1  from  PM00200 V  where  exists (select 1 from PM10300 P  where  P.BACHNUMB = ' + @cBatchNumber + '   and P.BCHSOURC  = ' + @cBatchSource + '   and V.VENDORID = P.VENDORID  )  ')   exec('insert into ' + @I_cVendorTemp + '  select  V.VENDORID,  V.VENDNAME,  V.VNDCLSID,  V.PYMNTPRI,  0,  0  from  PM00200 V  where  V.VENDORID not in (select VENDORID from ' + @I_cVendorTemp + ')  and V.VENDORID in (select VENDORID from PM20000 T where T.VENDORID = V.VENDORID and T.CURTRXAM > 0 and T.DOCTYPE >= 1 and T.DOCTYPE <=3)  and V.HOLD = 0  ')  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[pmPopulateEditCheckBatchVendorTemp] TO [DYNGRP]
GO

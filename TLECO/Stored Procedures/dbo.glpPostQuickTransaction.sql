SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
create procedure [dbo].[glpPostQuickTransaction]  @I_iSQLSessionID int  = NULL,  @I_iJournalEntry int  = NULL,   @I_cUserID char(15) = NULL,   @I_tPrinting tinyint  = NULL,   @I_tPosting tinyint  = NULL,   @I_tPrintDistributions tinyint  = NULL,   @I_bBatchValid binary(4) = NULL,  @I_cFuncCurrencyID char(15) = NULL,   @I_sFuncCurrencyIndex smallint = NULL,  @I_sFuncDecimalPlaces smallint = NULL,  @I_tMCRegistered tinyint  = NULL,  @I_tRealTimePosting tinyint  = NULL,   @I_cIntercompanyID char(5)  = NULL,  @I_iPostingNumber int  = NULL,  @I_iPeriodPostingNumber int  = NULL,  @I_iPostingNumberHist int  = NULL,  @I_iPeriodPostingNumberHist int  = NULL,  @IO_bHeaderMessages binary(4) = NULL output,  @O_bLineMessages binary(4) = NULL output,  @O_bLineMessages2 binary(4) = NULL output,   @O_mSequenceLine numeric(19,5) = NULL output,  @O_iErrorState int  = NULL output as declare  @TRUE tinyint,  @FALSE tinyint,  @BUSINESS_FORM smallint,  @POST_ACCT tinyint,  @UNIT_ACCT tinyint,  @POST_ALLOC_ACCT tinyint,  @UNIT_ALLOC_ACCT tinyint,  @VARIABLE smallint,  @QUICK_OFFSET smallint,  @REGULAR_OFFSET smallint,  @ALLOC_SEQ_LINE_QUICK int,  @GL_TRANSACTION smallint,  @UNIT_DECIMAL_PLACES smallint,  @MS_ITEM_1 int,  @MS_ITEM_2 int,  @MS_ITEM_3 int,  @MS_ITEM_4 int,  @MS_ITEM_5 int,  @MS_ITEM_14 int,  @MS_ITEM_29 int,  @iAccountIndex int,  @cDescription char(31),  @tActive tinyint,  @tValidAccountNumber tinyint,  @tPostingAccountFlag tinyint,   @tUnitAccountFlag tinyint,   @tProcessOffsetAccount tinyint,  @nAmount    numeric(19,5),  @nDebit    numeric(19,5),  @nCredit numeric(19,5),  @nActualBalance numeric(19,5),   @nSequenceLine numeric(19,5),  @sAccountType smallint,  @sAccountCategory smallint,  @sFixedOrVariable smallint,  @sQuickOffset smallint,  @iTempJournalEntry int,  @tTransaction tinyint,  @iError int,  @iStatus int,  @tLoop tinyint,  @sBalanceForCalculation smallint,  @bLineValid binary(4),  @sPostingType smallint,  @sUnitDecimalPlaces smallint,  @sFuncCurrencyIndex smallint,  @sFuncDecimalPlaces smallint,  @cHdrBatchSource char(15),  @cHdrBatchNumber char(15),  @sHdrSeries smallint,  @cHdrAuditTrailCode char(13),  @dHdrTransactionDate datetime,  @sHdrTransactionPeriodID smallint,  @sHdrTransactionYear smallint,  @sHdrTransactionClosingYear smallint,  @tHdrTransactionHistory tinyint,  @iHdrOffsetAccountIndex int,  @sHdrOffsetAccountType smallint,  @sHdrOffsetPostingType smallint,  @sHdrOffsetFixedOrVariable smallint,  @nHdrControlBalance numeric(19,5),  @nHdrRecurringTRXSequence numeric(19,5),  @iRelationID int,  @sUserLevel smallint,  @iAccessAllAccounts int,  @tALSRegistered tinyint,  @cCompanyID char(5),  @nDenomExchangeRate numeric(15,7),  @sMCTrxState smallint,   @dDocumentDate datetime, /* Start of modifications - 20/06/06 - pjsparrow */ 	@ifetch_status int, 	/* End of modifications - 20/06/06 - pjsparrow */  @nLedger_ID int select  @O_mSequenceLine = 0.0,  @O_iErrorState = 0,  @iStatus = 0,  @O_bLineMessages = 0x00000000,  @O_bLineMessages2 = 0x00000000 if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end  while (@tLoop is NULL) begin  select @tLoop = 1  if @I_iSQLSessionID is NULL or  @I_iJournalEntry is NULL or   @I_cUserID is NULL or  @I_tPrinting is NULL or  @I_tPosting is NULL or  @I_tRealTimePosting is NULL or  @I_tPrintDistributions is NULL or  @I_bBatchValid is NULL or  @I_cFuncCurrencyID is NULL or  @I_sFuncCurrencyIndex is NULL or  @I_sFuncDecimalPlaces is NULL or  @I_tMCRegistered is NULL or  @I_cIntercompanyID is NULL or  @I_iPostingNumber is NULL or  @I_iPeriodPostingNumber is NULL or  @I_iPostingNumberHist is NULL or  @I_iPeriodPostingNumberHist is NULL or  @IO_bHeaderMessages is NULL  begin  select @O_iErrorState = 20047  break  end   select  @TRUE   = 1,  @FALSE   = 0,  @BUSINESS_FORM  = 5,  @POST_ACCT  = 1,  @UNIT_ACCT  = 2,  @POST_ALLOC_ACCT = 3,  @UNIT_ALLOC_ACCT = 4,  @VARIABLE  = 2,  @QUICK_OFFSET  = 0,  @REGULAR_OFFSET  = 1,  @ALLOC_SEQ_LINE_QUICK = 500,  @GL_TRANSACTION  = 0,  @UNIT_DECIMAL_PLACES = 3,  @MS_ITEM_1  = power (2,24),  @MS_ITEM_2  = power (2,25),  @MS_ITEM_3  = power (2,26),  @MS_ITEM_4  = power (2,27),  @MS_ITEM_5  = power (2,28),  @MS_ITEM_14  = power (2,21),  @MS_ITEM_29  = power (2,4)  select  @tPostingAccountFlag = @FALSE,  @tUnitAccountFlag = @FALSE,  @nActualBalance  = 0.0,  @tProcessOffsetAccount = @FALSE,  @sQuickOffset  = @REGULAR_OFFSET,  @iRelationID  = 0,  @sUserLevel   = 0,  @iAccessAllAccounts = 0,  @tALSRegistered  = 0  select   @cHdrBatchSource  = BatchSource,  @cHdrBatchNumber  = BatchNumber,  @sHdrSeries   = Series,  @cHdrAuditTrailCode  = TRXSource,  @dHdrTransactionDate  = TransactionDate,  @sHdrTransactionPeriodID = TransactionPeriodID,  @sHdrTransactionYear  = TransactionYear,  @sHdrTransactionClosingYear = TransactionClosingYear,  @tHdrTransactionHistory  = TransactionHistory,  @iHdrOffsetAccountIndex  = OffsetAccountIndex,  @sHdrOffsetAccountType  = OffsetAccountType,  @sHdrOffsetPostingType  = OffsetPostingType,  @sHdrOffsetFixedOrVariable = OffsetFixedOrVariable,  @nHdrControlBalance  = ControlBalance,  @nHdrRecurringTRXSequence = RecurringTRXSequence,  @nDenomExchangeRate  = DenomExchangeRate,  @sMCTrxState   = MCTrxState,  @dDocumentDate   = DocumentDate,  @nLedger_ID   = Ledger_ID  from  #TRXHeader  where  JournalEntry = @I_iJournalEntry  if @@rowcount <> 1  begin  select @O_iErrorState = 20891  break  end  declare  QuickCursor INSENSITIVE  cursor for select  SQNCLINE,  ACTINDX,  TRXAMNT,  DSCRIPTN,  GLLINVAL,  ACCTTYPE,  FXDORVAR,  BALFRCLC,  PSTNGTYP,  DECPLACS  from  GL10101 with (NOLOCK)  where  BSNSFMID = @cHdrBatchNumber  and JRNENTRY = @I_iJournalEntry  order by  SQNCLINE  open QuickCursor  if @@cursor_rows = 0  begin  deallocate QuickCursor  select @O_bLineMessages = (@O_bLineMessages | @MS_ITEM_1)  if @I_tPosting = @FALSE  begin  exec @iStatus = glpUpdateAllocationRegister  @BUSINESS_FORM,  @I_iJournalEntry,  @cHdrBatchSource,  @cHdrBatchNumber,  @I_cUserID,  @I_tRealTimePosting,    0,      0,      0.0,      0.0,      @dHdrTransactionDate,  0.0,      ' ',      @FALSE,       @tHdrTransactionHistory,   @FALSE,      @O_bLineMessages,  @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  @O_bLineMessages2,  0.00,      0.00,      @I_cFuncCurrencyID,  @I_sFuncCurrencyIndex,  '',      @FALSE,      '',  '',  '',  '',  0,  0,      0.0,      0.0,      @O_iErrorState output  select @iError = @@error if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   else  select @O_iErrorState = 20048  break  end   fetch next from   QuickCursor  into   @nSequenceLine,  @iAccountIndex,  @nAmount,  @cDescription,  @bLineValid,  @sAccountType,  @sFixedOrVariable,  @sBalanceForCalculation,  @sPostingType,  @sUnitDecimalPlaces /* Start of modifications - 20/06/06 - pjsparrow */ 	select @ifetch_status = @@fetch_status 	 	while (@ifetch_status <> - 1) or (@tProcessOffsetAccount = @TRUE) 	/* while (@@fetch_status <> - 1) or (@tProcessOffsetAccount = @TRUE) */ 	/* End of modifications - 20/06/06 - pjsparrow */ 	begin 		/* Start of modifications - 20/06/06 - pjsparrow */ 		/* if @@fetch_status = -2 */ 		if @ifetch_status = -2 		/* End of modifications - 20/06/06 - pjsparrow */ begin 	select @O_iErrorState = 20049 	break end  if @tProcessOffsetAccount = @TRUE  select @nSequenceLine = @nSequenceLine + @ALLOC_SEQ_LINE_QUICK  select   @O_mSequenceLine = @nSequenceLine,  @O_bLineMessages = 0x00000000,  @O_bLineMessages2 = 0x00000000  if @tProcessOffsetAccount = @FALSE   begin  if @nAmount <> 0.0   begin  select @cCompanyID = db_name()  exec @iStatus = DYNAMICS..smGetAccountLevelSecurityInfo  @cCompanyID,  @iRelationID output,  @sUserLevel  output,  @iAccessAllAccounts output,  @tALSRegistered output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@bLineValid & @MS_ITEM_1) <> @MS_ITEM_1 or    (@I_bBatchValid & @MS_ITEM_1) = @MS_ITEM_1 or   (@I_bBatchValid & @MS_ITEM_3) = @MS_ITEM_3 or    @iAccessAllAccounts= @FALSE      begin  exec @iStatus = glpGetAccountNumber  @iAccountIndex,  @iRelationID,  @sUserLevel,  @iAccessAllAccounts,  @tValidAccountNumber output,  @tActive output,  @sAccountType output,  @sAccountCategory output,  @sFixedOrVariable output,  @sBalanceForCalculation output,  @sPostingType output,  @sUnitDecimalPlaces output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end  else  begin  select  @tValidAccountNumber = @TRUE,  @tActive = @TRUE  end   exec @iStatus = glpVerifyAccountNumber  @tValidAccountNumber,  @tActive,   @sFixedOrVariable,   @sBalanceForCalculation,  @sPostingType,  @FALSE,       @tHdrTransactionHistory,  @FALSE,        @sAccountType output,  @O_bLineMessages output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  if @O_bLineMessages <> 0 and @I_tPosting = @TRUE  begin  select @O_iErrorState = 20142  break  end   if @sAccountType = @UNIT_ACCT or  @sAccountType = @UNIT_ALLOC_ACCT  begin  select @tUnitAccountFlag = @TRUE  end   else  begin  select   @nActualBalance = @nActualBalance + @nAmount,  @tPostingAccountFlag = @TRUE  end /* if @nAmount <> 0.0 */  end  /* if @tProcessOffsetAccount = @FALSE */  end   else  begin  if @nActualBalance = 0.0 and  (@tPostingAccountFlag = @TRUE or  @tUnitAccountFlag = @FALSE)  begin  select @IO_bHeaderMessages = (@IO_bHeaderMessages | @MS_ITEM_14)  if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20161   break  end   end   if @tPostingAccountFlag = @TRUE and  @nHdrControlBalance <> 0.0 and   @nHdrControlBalance <> @nActualBalance  begin  select @IO_bHeaderMessages = (@IO_bHeaderMessages | @MS_ITEM_29)  if @I_tPosting = @TRUE   begin  select @O_iErrorState = 20162  break  end   end   select  @nAmount = @nActualBalance * -1,  @iAccountIndex = @iHdrOffsetAccountIndex,  @sAccountType = @sHdrOffsetAccountType,  @sPostingType = @sHdrOffsetPostingType,  @sFixedOrVariable = @sHdrOffsetFixedOrVariable,    @sQuickOffset = @QUICK_OFFSET,  @cDescription = ''  end  /* if @tProcessOffsetAccount = @TRUE */  if @sAccountType = @UNIT_ACCT  select   @sFuncCurrencyIndex = @sUnitDecimalPlaces,  @sFuncDecimalPlaces = @sUnitDecimalPlaces - 1  else if @sAccountType = @UNIT_ALLOC_ACCT  select   @sFuncCurrencyIndex = @UNIT_DECIMAL_PLACES,  @sFuncDecimalPlaces = @UNIT_DECIMAL_PLACES - 1  else  select   @sFuncCurrencyIndex = @I_sFuncCurrencyIndex,  @sFuncDecimalPlaces = @I_sFuncDecimalPlaces  if @nAmount <> 0.0   begin  if @nAmount > 0.0  select @nDebit = @nAmount,  @nCredit = 0.0  else  select @nCredit = @nAmount * -1,  @nDebit = 0.0  exec @iStatus = glpPostAccount  @I_iSQLSessionID,  @BUSINESS_FORM,   @I_iJournalEntry,   @cHdrBatchSource,   @cHdrBatchNumber,   @I_cUserID,   @sHdrSeries,   @iAccountIndex,  @sAccountType,  @sFixedOrVariable,  @nDebit,  @nCredit,  @cHdrAuditTrailCode,  @nSequenceLine,  @dHdrTransactionDate,  @sHdrTransactionPeriodID,  @nLedger_ID,  @sHdrTransactionYear,  @sHdrTransactionClosingYear,  @tHdrTransactionHistory,  @cDescription,  @I_tPrintDistributions,  @FALSE,      @I_tPrinting,   @I_tPosting,   @tProcessOffsetAccount,    @I_tRealTimePosting,  @sQuickOffset,  @nHdrRecurringTRXSequence,  0.0,      @sBalanceForCalculation,  @sPostingType,  @I_cFuncCurrencyID,  @sFuncCurrencyIndex,  @sFuncDecimalPlaces,  @I_tMCRegistered,  @FALSE,      @GL_TRANSACTION,    @nDebit,  @nCredit,  @I_cFuncCurrencyID,  @sFuncCurrencyIndex,  @sFuncDecimalPlaces,  '',     @FALSE,     '',     '',     '',     '',     0,     '',     0,     0,     0,     0.0,     @nDenomExchangeRate,  @sMCTrxState,  @dDocumentDate,   0,     @I_iPostingNumber,  @I_iPeriodPostingNumber,  @I_iPostingNumberHist,  @I_iPeriodPostingNumberHist,  '',     @O_bLineMessages output,  @O_bLineMessages2 output,   @O_iErrorState output select @iError = @@error 			 			if @iStatus = 0 and @iError <> 0 				select @iStatus = @iError 			if @iStatus <> 0 or @O_iErrorState <> 0 				break 		end /* if @nAmount <> 0.0 */ 		if @tProcessOffsetAccount = @TRUE 		begin  			select @tProcessOffsetAccount = @FALSE 		end 		else begin   fetch next from   QuickCursor  into   @nSequenceLine,  @iAccountIndex,  @nAmount,  @cDescription,  @bLineValid,  @sAccountType,  @sFixedOrVariable,  @sBalanceForCalculation,  @sPostingType,  @sUnitDecimalPlaces		 			/* Start of modifications - 20/06/06 - pjsparrow */ 			select @ifetch_status = @@fetch_status 			if @ifetch_status = -1 			/* if @@fetch_status = -1  */ 			/* End of modifications - 20/06/06 - pjsparrow */ 				select @tProcessOffsetAccount = @TRUE 		end 	end /* while (@@fetch_status <> - 1) or (@tProcessOffsetAccount = @TRUE) */ 	deallocate QuickCursor 	if @iStatus <> 0 or @O_iErrorState <> 0 		break end /* while (@tLoop is NULL) */ if @iStatus <> 0 or @O_iErrorState <> 0 begin 	if @tTransaction = 1 		rollback transaction end else if @tTransaction = 1 	commit transaction return (@iStatus)  
GO
GRANT EXECUTE ON  [dbo].[glpPostQuickTransaction] TO [DYNGRP]
GO

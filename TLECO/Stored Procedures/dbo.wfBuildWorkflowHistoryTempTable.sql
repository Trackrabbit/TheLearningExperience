SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[wfBuildWorkflowHistoryTempTable]   @WorkflowInstanceID char(37),  @WorkflowTempHistoryTable varchar(128),  @Workflow_Error int OUTPUT AS  BEGIN SET NOCOUNT ON   declare @WorkflowStepInstanceID char(37)  declare @Workflow_History_User char(85)  declare @Workflow_Name char(51)  declare @Workflow_Step_Name char(51)  declare @Workflow_Step_Assign_To char(37)  declare @Workflow_Action smallint   declare @Workflow_Completion_Date datetime  declare @Workflow_Completion_Time datetime  declare @Workflow_Comments varchar(4000)  declare @SQL_Text1 varchar(8000),  @SQL_Text2 varchar(8000),  @SQL_Text3 varchar(8000)  declare @Previous_Workflow_Completion_Date datetime  declare @Previous_Workflow_Completion_Time datetime  declare @Workflow_Step_Status smallint,   @WF_Step_Predecessor char(51),   @Workflow_Step_Sequence int  declare @dex_row_id int   select @WorkflowInstanceID=UPPER(@WorkflowInstanceID)  declare @WF30100 TABLE(  WorkflowInstanceID [char] (37) NOT NULL ,   WorkflowStepInstanceID [char] (37) NOT NULL ,   Workflow_History_User [char] (85) NOT NULL ,  Workflow_Name [char] (51) NOT NULL ,   Workflow_Step_Name [char] (51) NOT NULL ,   Workflow_Step_Assign_To [char] (37) NOT NULL ,  Workflow_Action [smallint] NOT NULL ,   Workflow_Due_Date [datetime] NOT NULL ,   Workflow_Due_Time [datetime] NOT NULL ,  Workflow_Completion_Date [datetime] NOT NULL ,   Workflow_Completion_Time [datetime] NOT NULL ,   Workflow_Comments [text] NOT NULL,  DEX_ROW_ID [int] NOT NULL)  insert into @WF30100  select WorkflowInstanceID,   WorkflowStepInstanceID,   Workflow_History_User,  Workflow_Name,   Workflow_Step_Name,   Workflow_Step_Assign_To,  Workflow_Action,   Workflow_Due_Date,   Workflow_Due_Time,  Workflow_Completion_Date,   Workflow_Completion_Time,   Workflow_Comments,  DEX_ROW_ID from WF30100 where WorkflowInstanceID=@WorkflowInstanceID   declare @WFI10003 TABLE(  WorkflowStepInstanceID [char] (37) NOT NULL ,  Workflow_Step_Name [char] (51) NOT NULL ,  WorkflowInstanceID [char] (37) NOT NULL ,  Workflow_Name [char] (51) NOT NULL ,  Workflow_Version [int] NOT NULL ,  WF_Step_Description [char] (101) NOT NULL ,  Workflow_Step_Status [smallint] NOT NULL ,  Workflow_Step_Sequence [int] NOT NULL ,  Workflow_Step_Type [smallint] NOT NULL ,  Workflow_Step_Order [smallint] NOT NULL ,  Workflow_Step_Condition [smallint] NOT NULL ,  Workflow_Step_Conditions [char] (37) NOT NULL ,  WF_Step_Predecessor [char] (51) NOT NULL ,  Workflow_Step_Assign_To [char] (37) NOT NULL ,  EmailMessageID [char] (25) NOT NULL ,  Workflow_Step_Send_Email [tinyint] NOT NULL ,  Workflow_Step_Time_Limit [smallint] NOT NULL ,  WF_Step_Time_Limit_UofM [smallint] NOT NULL ,  WF_Step_Completion_Polic [smallint] NOT NULL ,  WF_Apply_WF_Calendar [tinyint] NOT NULL ,  NOTEINDX [numeric](19, 5) NOT NULL)  insert into @WFI10003  select WorkflowStepInstanceID,  Workflow_Step_Name,  WorkflowInstanceID,  Workflow_Name,  Workflow_Version,  WF_Step_Description,  Workflow_Step_Status,  Workflow_Step_Sequence,  Workflow_Step_Type,  Workflow_Step_Order,  Workflow_Step_Condition,  Workflow_Step_Conditions,  WF_Step_Predecessor,  Workflow_Step_Assign_To,  EmailMessageID,  Workflow_Step_Send_Email,  Workflow_Step_Time_Limit,  WF_Step_Time_Limit_UofM,  WF_Step_Completion_Polic,  WF_Apply_WF_Calendar,  NOTEINDX from WFI10003 where WorkflowInstanceID=@WorkflowInstanceID   declare @WFI10004 TABLE(  WorkflowInstanceID [char] (37) NOT NULL ,  WorkflowStepInstanceID [char] (37) NOT NULL ,  WorkflowTaskAssignedTo [char] (85) NOT NULL ,  Workflow_Step_Name [char] (51) NOT NULL ,  Workflow_Name [char] (51) NOT NULL ,  Workflow_Version [int] NOT NULL ,  WF_Step_Description [char] (101) NOT NULL ,  Workflow_Action_Date [datetime] NOT NULL ,  Workflow_Action_Time [datetime] NOT NULL ,  Workflow_Due_Date [datetime] NOT NULL ,  Workflow_Due_Time [datetime] NOT NULL ,  Workflow_Step_Sequence [int] NOT NULL ,  Workflow_Step_Type [smallint] NOT NULL ,  Workflow_Step_Order [smallint] NOT NULL ,  WF_Step_Predecessor [char] (51) NOT NULL ,  WF_Step_Completion_Polic [smallint] NOT NULL ,  Workflow_Task_Escalated [tinyint] NOT NULL)  insert into @WFI10004  select WorkflowInstanceID,  WorkflowStepInstanceID,  WorkflowTaskAssignedTo,  Workflow_Step_Name,  Workflow_Name,  Workflow_Version,  WF_Step_Description,  Workflow_Action_Date,  Workflow_Action_Time,  Workflow_Due_Date,  Workflow_Due_Time,  Workflow_Step_Sequence,  Workflow_Step_Type,  Workflow_Step_Order,  WF_Step_Predecessor,  WF_Step_Completion_Polic,  Workflow_Task_Escalated from WFI10004 where WorkflowInstanceID=@WorkflowInstanceID   create table #temp_history_table(WorkflowInstanceID char(37), WorkflowStepInstanceID char(37),Workflow_History_User char(85),Workflow_Name char(51),  Workflow_Step_Name char(51),Workflow_Action smallint,Workflow_Completion_Date datetime,Workflow_Completion_Time datetime,  Workflow_Step_Assign_To char(37),Workflow_Step_Status smallint, WF_Step_Predecessor char(51),Workflow_Step_Sequence int,  Workflow_Comments text)   create table #workflow_history_table  (WorkflowInstanceID char(37), WorkflowStepInstanceID char(37),Workflow_History_User char(85),Workflow_Name char(51),  Workflow_Step_Name char(51),Workflow_Action smallint,Workflow_Completion_Date datetime,Workflow_Completion_Time datetime,  Workflow_Step_Assign_To char(37),Workflow_Step_Status smallint, WF_Step_Predecessor char(51),Workflow_Step_Sequence int,  Workflow_Comments text)   insert into #temp_history_table   select @WorkflowInstanceID as WorkflowInstanceID,a.WorkflowStepInstanceID,a.Workflow_History_User,a.Workflow_Name,  a.Workflow_Step_Name,a.Workflow_Action,a.Workflow_Completion_Date,a.Workflow_Completion_Time,  isnull(b.Workflow_Step_Assign_To,''),isnull(b.Workflow_Step_Status,0),   isnull(b.WF_Step_Predecessor,''), isnull(b.Workflow_Step_Sequence,0), a.Workflow_Comments   from @WF30100 a left outer join @WFI10003 b  on a.WorkflowStepInstanceID=b.WorkflowStepInstanceID  where a.WorkflowStepInstanceID=''  order by a.WorkflowInstanceID,a.Workflow_Completion_Date,a.Workflow_Completion_Time    insert into #temp_history_table  select distinct @WorkflowInstanceID as WorkflowInstanceID,b.WorkflowStepInstanceID,'' as Workflow_History_User,b.Workflow_Name,  b.Workflow_Step_Name,'' as Workflow_Action,  ''  as Workflow_Completion_Date,  ''  as Workflow_Completion_Time,  isnull(b.Workflow_Step_Assign_To,''),isnull(b.Workflow_Step_Status,0),   isnull(b.WF_Step_Predecessor,''), isnull(b.Workflow_Step_Sequence,0), '' as Workflow_Comments   from @WFI10003 b, @WF30100 a where b.WorkflowStepInstanceID<>'' and a.WorkflowStepInstanceID=b.WorkflowStepInstanceID   declare History_Records_To_Update cursor local fast_forward for  select WorkflowStepInstanceID from #temp_history_table where  WorkflowStepInstanceID<>''   open History_Records_To_Update  fetch next from History_Records_To_Update into @WorkflowStepInstanceID  while  @@FETCH_STATUS = 0  begin  select @dex_row_id=MAX(DEX_ROW_ID) from @WF30100 where WorkflowStepInstanceID=@WorkflowStepInstanceID   update #temp_history_table   set #temp_history_table.Workflow_History_User=a.Workflow_History_User,   #temp_history_table.Workflow_Action=a.Workflow_Action,   #temp_history_table.Workflow_Comments=a.Workflow_Comments,   #temp_history_table.Workflow_Completion_Date=a.Workflow_Completion_Date,   #temp_history_table.Workflow_Completion_Time=a.Workflow_Completion_Time   from #temp_history_table inner join @WF30100 a on   #temp_history_table.WorkflowStepInstanceID =a.WorkflowStepInstanceID  where a.WorkflowStepInstanceID=@WorkflowStepInstanceID and a.DEX_ROW_ID=@dex_row_id  fetch next from History_Records_To_Update into @WorkflowStepInstanceID  end   insert into #temp_history_table  select distinct @WorkflowInstanceID as WorkflowInstanceID,b.WorkflowStepInstanceID,'' as Workflow_History_User,b.Workflow_Name,  b.Workflow_Step_Name,0 as Workflow_Action,a.Workflow_Due_Date as Workflow_Completion_Date,a.Workflow_Due_Time as Workflow_Completion_Time,  isnull(b.Workflow_Step_Assign_To,''),isnull(b.Workflow_Step_Status,0),   isnull(b.WF_Step_Predecessor,''), isnull(b.Workflow_Step_Sequence,0), '' as Workflow_Comments   from @WFI10003 b, @WFI10004 a where b.WorkflowStepInstanceID<>'' and a.WorkflowStepInstanceID=b.WorkflowStepInstanceID  and a.WorkflowStepInstanceID not in (select WorkflowStepInstanceID from #temp_history_table)   declare Workflow_History_Root_Nodes cursor local fast_forward for  select WorkflowStepInstanceID,Workflow_History_User,Workflow_Name,  Workflow_Step_Name,Workflow_Action,Workflow_Completion_Date,Workflow_Completion_Time,  Workflow_Step_Assign_To,Workflow_Step_Status, WF_Step_Predecessor, Workflow_Step_Sequence,  Workflow_Comments   from #temp_history_table where WorkflowInstanceID=@WorkflowInstanceID and Workflow_Action in (1,2)   order by WorkflowInstanceID,Workflow_Completion_Date,Workflow_Completion_Time    open Workflow_History_Root_Nodes  fetch next from Workflow_History_Root_Nodes into @WorkflowStepInstanceID,@Workflow_History_User,@Workflow_Name,  @Workflow_Step_Name,@Workflow_Action,@Workflow_Completion_Date,@Workflow_Completion_Time,  @Workflow_Step_Assign_To,@Workflow_Step_Status, @WF_Step_Predecessor, @Workflow_Step_Sequence,  @Workflow_Comments  while  @@FETCH_STATUS = 0  begin  if @Workflow_Action=1   begin  insert into #workflow_history_table  select @WorkflowInstanceID,@WorkflowStepInstanceID,@Workflow_History_User,@Workflow_Name,  @Workflow_Step_Name,@Workflow_Action,@Workflow_Completion_Date,@Workflow_Completion_Time,  @Workflow_Step_Assign_To,@Workflow_Step_Status,@WF_Step_Predecessor,@Workflow_Step_Sequence,  @Workflow_Comments   delete from #temp_history_table where Workflow_Action=1   select @Previous_Workflow_Completion_Date=@Workflow_Completion_Date  select @Previous_Workflow_Completion_Time=@Workflow_Completion_Time  end  else   begin   insert into #workflow_history_table  select @WorkflowInstanceID,WorkflowStepInstanceID,Workflow_History_User,Workflow_Name,  Workflow_Step_Name,Workflow_Action,Workflow_Completion_Date,Workflow_Completion_Time,  Workflow_Step_Assign_To,Workflow_Step_Status,WF_Step_Predecessor,Workflow_Step_Sequence,  Workflow_Comments  from #temp_history_table   where WorkflowInstanceID=@WorkflowInstanceID and   ((Workflow_Completion_Date<@Workflow_Completion_Date)  or (Workflow_Completion_Date=@Workflow_Completion_Date and Workflow_Completion_Time<@Workflow_Completion_Time)) and  ((Workflow_Completion_Date>@Previous_Workflow_Completion_Date)  or (Workflow_Completion_Date=@Previous_Workflow_Completion_Date and Workflow_Completion_Time>@Previous_Workflow_Completion_Time))   delete from #temp_history_table  where WorkflowInstanceID=@WorkflowInstanceID and   ((Workflow_Completion_Date<@Workflow_Completion_Date)  or (Workflow_Completion_Date=@Workflow_Completion_Date and Workflow_Completion_Time<@Workflow_Completion_Time)) and  ((Workflow_Completion_Date>@Previous_Workflow_Completion_Date)  or (Workflow_Completion_Date=@Previous_Workflow_Completion_Date and Workflow_Completion_Time>@Previous_Workflow_Completion_Time))   insert into #workflow_history_table  select @WorkflowInstanceID,@WorkflowStepInstanceID,@Workflow_History_User,@Workflow_Name,  @Workflow_Step_Name,@Workflow_Action,@Workflow_Completion_Date,@Workflow_Completion_Time,  @Workflow_Step_Assign_To,@Workflow_Step_Status,@WF_Step_Predecessor,@Workflow_Step_Sequence,  @Workflow_Comments  delete from #temp_history_table where Workflow_Action=2 and   Workflow_Completion_Date=@Workflow_Completion_Date and Workflow_Completion_Time=@Workflow_Completion_Time   end   fetch next from Workflow_History_Root_Nodes into @WorkflowStepInstanceID,@Workflow_History_User,@Workflow_Name,  @Workflow_Step_Name,@Workflow_Action,@Workflow_Completion_Date,@Workflow_Completion_Time,  @Workflow_Step_Assign_To,@Workflow_Step_Status, @WF_Step_Predecessor, @Workflow_Step_Sequence,  @Workflow_Comments  end   insert into #workflow_history_table  select @WorkflowInstanceID,WorkflowStepInstanceID,Workflow_History_User,Workflow_Name,  Workflow_Step_Name,Workflow_Action,Workflow_Completion_Date,Workflow_Completion_Time,  Workflow_Step_Assign_To,Workflow_Step_Status,WF_Step_Predecessor,Workflow_Step_Sequence,  Workflow_Comments  from #temp_history_table   where WorkflowInstanceID=@WorkflowInstanceID and  ((Workflow_Completion_Date>@Workflow_Completion_Date)  or (Workflow_Completion_Date=@Workflow_Completion_Date and Workflow_Completion_Time>=@Workflow_Completion_Time))  delete from #temp_history_table   where WorkflowInstanceID=@WorkflowInstanceID and  ((Workflow_Completion_Date>@Workflow_Completion_Date)  or (Workflow_Completion_Date=@Workflow_Completion_Date and Workflow_Completion_Time>=@Workflow_Completion_Time))   close Workflow_History_Root_Nodes  deallocate Workflow_History_Root_Nodes   insert into #workflow_history_table  select @WorkflowInstanceID,WorkflowStepInstanceID,Workflow_History_User,Workflow_Name,  Workflow_Step_Name,Workflow_Action,Workflow_Completion_Date,Workflow_Completion_Time,  Workflow_Step_Assign_To,Workflow_Step_Status,WF_Step_Predecessor,Workflow_Step_Sequence,  Workflow_Comments  from #temp_history_table    update #workflow_history_table set Workflow_Step_Sequence=99999   where Workflow_Step_Name='Alternate Final Approval'   select @SQL_Text1 = 'delete from '+@WorkflowTempHistoryTable+' '  select @SQL_Text2 = 'insert into '+@WorkflowTempHistoryTable+  ' select WorkflowInstanceID, WorkflowStepInstanceID, Workflow_History_User, Workflow_Name,'+  ' Workflow_Step_Name,Workflow_Action,Workflow_Completion_Date,Workflow_Completion_Time,'+  ' Workflow_Step_Assign_To,Workflow_Step_Status,WF_Step_Predecessor,Workflow_Step_Sequence,'+  ' 0,'''','''',Workflow_Comments from #workflow_history_table '+  ' order by Workflow_Completion_Date, Workflow_Completion_Time '   exec (@SQL_Text1)  exec (@SQL_Text2)   if object_id('tempdb..#workflow_history_table') is not null drop table #workflow_history_table  END    
GO
GRANT EXECUTE ON  [dbo].[wfBuildWorkflowHistoryTempTable] TO [DYNGRP]
GO

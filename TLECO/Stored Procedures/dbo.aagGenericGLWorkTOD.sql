SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 CREATE  PROCEDURE [dbo].[aagGenericGLWorkTOD] @USERID CHAR(15), @TBName varchar(25), @Preview SMALLINT, @O_SQL_Error_State int = NULL  output AS Begin   SET NOCOUNT ON  SET TRANSACTION ISOLATION LEVEL READ COMMITTED  BEGIN TRANSACTION  Declare @CMPANYID smallint,  @aagGetHdrID int,  @Status  int,  @RCTRXSEQ numeric(19,5),  @OPENYEAR int,  @TRXSORCE char(13),  @TRXDATE datetime,  @JRNENTRY bigint  DECLARE @HDRID int,  @DISTID int,  @SEQNUMBR numeric(19,5),  @DISTID2 int,  @LedgerID int,  @x INTEGER  SET @x=0   DECLARE @aaGLWorkHdrID int ,@aaGLWorkDistID int ,@aaGLWorkAssignID int ,@ACTINDX int,@ClassID  int, @BrowseType  int  IF @Preview = 1   BEGIN  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'','''' ,9,1 , LTRIM(STR(GL10000.JRNENTRY))  from GL10000 where GL10000.JRNENTRY not in (select Distinct JRNENTRY from AAG10000)  union all  SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'','''' ,9,1 , LTRIM(STR(GL10100.JRNENTRY))  from GL10100 where GL10100.JRNENTRY not in (select Distinct JRNENTRY from AAG10000)')  IF NOT EXISTS(SELECT TOP 1 1 FROM AAG10001 A1 INNER JOIN AAG10000 A on A1.aaGLWorkHdrID =A.aaGLWorkHdrID inner join   (SELECT GL10000.JRNENTRY,GL10001.SQNCLINE GL_SQNCLINE,ACTINDX,TRXDATE,CURNCYID,GL10000.CURRNIDX,DEBITAMT,CRDTAMNT from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY and   (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and  (GL10001.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY))))  ) GL on GL.JRNENTRY=A.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND A.GLPOSTDT = GL.TRXDATE AND A1.CURNCYID = GL.CURNCYID AND A1.CURRNIDX = GL.CURRNIDX AND A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT   UNION  SELECT TOP 1 1 FROM AAG10001 A1 INNER JOIN AAG10000 A on A1.aaGLWorkHdrID =A.aaGLWorkHdrID inner join   (SELECT GL10100.JRNENTRY,GL10101.SQNCLINE GL_SQNCLINE,ACTINDX,TRXDATE,CURNCYID,  case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY and   (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and (GL10101.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY))))  ) GL on GL.JRNENTRY=A.JRNENTRY AND A1.ACTINDX = GL.ACTINDX AND A.GLPOSTDT = GL.TRXDATE AND A1.CURNCYID = GL.CURNCYID AND A1.CRDTAMNT  = GL.CRDTAMNT AND A1.DEBITAMT = GL.DEBITAMT )  SET @x=9  else  SET @x=15   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',  ''AA GL Work Header ID='' + CONVERT(VARCHAR(10),(select TOP 1 aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY)),'+@x+',1 , LTRIM(STR(GL10000.JRNENTRY))  from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY and   (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and  (GL10001.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY))))  union all   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'', ''AA GL Work Header ID='' + CONVERT(VARCHAR(10),(select TOP 1 aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY)) ,'+@x+',1 , LTRIM(STR(GL10101.JRNENTRY))  from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY and   (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and (GL10101.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY))))')   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(aaGLWorkHdrID))+Space(3)+''AA GL Work Distribution ID=''+LTRIM(STR(aaGLWorkDistID))  ,9,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10001.aaGLWorkHdrID)) ),0)  from AAG10001 where  (AAG10001.aaGLWorkDistID not in (select Distinct aaGLWorkDistID from AAG10002 where AAG10002.aaGLWorkHdrID =AAG10001.aaGLWorkHdrID) )   or AAG10001.aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10002)')   DECLARE CODECUR CURSOR  FAST_FORWARD FOR  SELECT A1.aaGLWorkHdrID,A1.aaGLWorkDistID,A2.aaGLWorkAssignID,A1.ACTINDX FROM AAG10001 A1   INNER JOIN  AAG10002 A2 ON A1.aaGLWorkHdrID=A2.aaGLWorkHdrID AND A1.aaGLWorkDistID=A2.aaGLWorkDistID   WHERE aaBrowseType <> 0  AND (A1.aaGLWorkDistID not in (select Distinct aaGLWorkDistID from AAG10003 where AAG10003.aaGLWorkHdrID =A1.aaGLWorkHdrID) )   or A1.aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10003)   OPEN CODECUR  FETCH NEXT FROM CODECUR INTO @aaGLWorkHdrID,@aaGLWorkDistID,@aaGLWorkAssignID,@ACTINDX  WHILE @@fetch_status=0   BEGIN   Select @ClassID  = aaAcctClassID from AAG00200 Where ACTINDX = @ACTINDX  if @ClassID <> 0  BEGIN  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR('+@aaGLWorkHdrID+')),9,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR('+@aaGLWorkHdrID+')) ),0)  from AAG00202 where aaAcctClassID ='+ @ClassID+' and aaTrxDimID >=0')  END  FETCH NEXT FROM CODECUR INTO @aaGLWorkHdrID,@aaGLWorkDistID,@aaGLWorkAssignID,@ACTINDX  END  CLOSE CODECUR  DEALLOCATE CODECUR  END  ELSE  BEGIN  Begin  select  @CMPANYID = CMPANYID from DYNAMICS.dbo.SY01500 where INTERID = DB_NAME()  update DYNAMICS..AAG00102 set aaRowID = dbo.aagGetNextHdrID(10000) - 1  where aaTableID = 10000 and CMPANYID = @CMPANYID  exec DYNAMICS..aagGetNextID 10000, @CMPANYID, @aagGetHdrID out, @Status  declare CGLWork cursor fast_forward  for   select JRNENTRY,RCTRXSEQ,TRXDATE, Ledger_ID  from GL10000 where GL10000.JRNENTRY not in (select Distinct JRNENTRY from AAG10000)  union all  select JRNENTRY,0,TRXDATE, 1  from GL10100 where GL10100.JRNENTRY not in (select Distinct JRNENTRY from AAG10000)  for read only   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'','''' ,3,1 , LTRIM(STR(GL10000.JRNENTRY))  from GL10000 where GL10000.JRNENTRY not in (select Distinct JRNENTRY from AAG10000)  union all  SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Header Table'','''' ,3,1 , LTRIM(STR(GL10100.JRNENTRY))  from GL10100 where GL10100.JRNENTRY not in (select Distinct JRNENTRY from AAG10000)')   open CGLWork  fetch next from CGLWork into @JRNENTRY,@RCTRXSEQ,@TRXDATE,@LedgerID  while @@fetch_status = 0  begin  insert into AAG10000  (aaGLWorkHdrID,JRNENTRY,RCTRXSEQ,GLPOSTDT,aaTRXType,aaHdrErrors, Ledger_ID)  values(dbo.aagGetNextHdrID(10000),@JRNENTRY,@RCTRXSEQ,@TRXDATE,1,0,@LedgerID)   fetch next from CGLWork into @JRNENTRY,@RCTRXSEQ,@TRXDATE,@LedgerID  end  close CGLWork  deallocate CGLWork    update DYNAMICS..AAG00102 set aaRowID = dbo.aagGetNextHdrID(10000) - 1  where aaTableID = 10000 and CMPANYID = @CMPANYID   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + CONVERT(VARCHAR(20),(SELECT dbo.aagGetHdrID(0,1,'' '','' '',GL10000.JRNENTRY,GL10000.RCTRXSEQ, getdate(),0,'' '',10000))) ,3,1 , LTRIM(STR(GL10000.JRNENTRY))  from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY and   (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and  (GL10001.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY))))  union all   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID='' + CONVERT(VARCHAR(20),(SELECT dbo.aagGetHdrID(0,1,'' '','' '',GL10100.JRNENTRY,0, getdate(),0,'' '',10000))) ,3,1 , LTRIM(STR(GL10101.JRNENTRY))  from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY and   (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and (GL10101.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY))))')   insert into AAG10001   (aaGLWorkHdrID,  aaGLWorkDistID, INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,  RTCLCMTD, DENXRATE, MCTRXSTT, SQNCLINE,   aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus, aaWinWasOpen, aaOFFSETAcct, aaDistErrors , AA_CL_Status)  select dbo.aagGetHdrID(0,1,' ',' ',GL10000.JRNENTRY,GL10000.RCTRXSEQ, getdate(),0,' ',10000),  GL10001.SQNCLINE,  DB_NAME() ,CorrespondingUnit,ACTINDX, ACCTTYPE,  0,2, 0 , DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  GL10000.CURNCYID, GL10000.CURRNIDX, GL10001.RATETPID,  GL10001.EXGTBLID, GL10001.XCHGRATE, GL10001.EXCHDATE, GL10001.TIME1,  GL10001.RTCLCMTD, GL10001.DENXRATE, GL10001.MCTRXSTT, GL10001.SQNCLINE,'',  '', '', '', 8, 0, 0, 0, 0 from GL10000 , GL10001   where GL10001.JRNENTRY = GL10000.JRNENTRY and   (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10000.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and  (GL10001.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10000.JRNENTRY))))  union all  select dbo.aagGetHdrID(0,1,' ',' ',GL10100.JRNENTRY,0, getdate(),0,' ',10000),  GL10101.SQNCLINE,  DB_NAME() ,0,ACTINDX, ACCTTYPE,  0,2, 0, CASE   WHEN GL10101.TRXAMNT < 0 THEN 0   ELSE GL10101.TRXAMNT  END,  CASE   WHEN GL10101.TRXAMNT > 0  THEN 0   ELSE ABS(GL10101.TRXAMNT)  END,  CASE   WHEN GL10101.TRXAMNT < 0 THEN 0   ELSE GL10101.TRXAMNT  END,  CASE   WHEN GL10101.TRXAMNT > 0  THEN 0   ELSE ABS(GL10101.TRXAMNT)  END,  GL10100.CURNCYID, 0, ' ', ' ', 0, '1900-01-01 00:00:00.000', '1900-01-01 00:00:00.000',  0, 0, 0, GL10101.SQNCLINE,'',  '', '', '', 8, 0, 0, 0, 0 from GL10100 , GL10101   where GL10101.JRNENTRY = GL10100.JRNENTRY and   (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10001)) or  (GL10100.JRNENTRY IN (select JRNENTRY from AAG10000 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10001)) and (GL10101.SQNCLINE) not in  (select  SQNCLINE from AAG10001 where aaGLWorkHdrID = (select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY=GL10100.JRNENTRY))))   DECLARE BTYPECUR CURSOR fast_forward FOR  SELECT DISTINCT ACTINDX FROM AAG10001  for read only  OPEN BTYPECUR  FETCH NEXT FROM BTYPECUR INTO @ACTINDX  WHILE @@fetch_status=0  BEGIN  exec aagGetClassIDBrowseType  @ACTINDX, @ClassID output, @BrowseType output  Update AAG10001 set aaBrowseType  = @BrowseType   where ACTINDX=@ACTINDX  FETCH NEXT FROM BTYPECUR INTO @ACTINDX  END  CLOSE BTYPECUR  DEALLOCATE BTYPECUR   DELETE AAG10003 FROM   AAG10003 A  INNER JOIN AAG10001 B  ON A.aaGLWorkHdrID=B.aaGLWorkHdrID  AND A.aaGLWorkDistID=B.aaGLWorkDistID   WHERE B.aaBrowseType=0   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(aaGLWorkHdrID)),3,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10001.aaGLWorkHdrID)) ),0)  from AAG10001 where (AAG10001.aaGLWorkDistID not in (select Distinct aaGLWorkDistID from AAG10002 where AAG10002.aaGLWorkHdrID =AAG10001.aaGLWorkHdrID) )   or AAG10001.aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10002)')   insert into AAG10002   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,  aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors)  select aaGLWorkHdrID,aaGLWorkDistID,1,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,  10000,' ',0,0  from AAG10001 where (AAG10001.aaGLWorkDistID not in (select Distinct aaGLWorkDistID from AAG10002 where AAG10002.aaGLWorkHdrID =AAG10001.aaGLWorkHdrID) )   or AAG10001.aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10002)   DECLARE CODECUR CURSOR  FAST_FORWARD FOR  SELECT A1.aaGLWorkHdrID,A1.aaGLWorkDistID,A2.aaGLWorkAssignID,A1.ACTINDX FROM AAG10001 A1   INNER JOIN  AAG10002 A2 ON A1.aaGLWorkHdrID=A2.aaGLWorkHdrID AND A1.aaGLWorkDistID=A2.aaGLWorkDistID   WHERE aaBrowseType <> 0  AND (A1.aaGLWorkDistID not in (select Distinct aaGLWorkDistID from AAG10003 where AAG10003.aaGLWorkHdrID =A1.aaGLWorkHdrID) )   or A1.aaGLWorkHdrID not in (select Distinct aaGLWorkHdrID from AAG10003)   OPEN CODECUR  FETCH NEXT FROM CODECUR INTO @aaGLWorkHdrID,@aaGLWorkDistID,@aaGLWorkAssignID,@ACTINDX  WHILE @@fetch_status=0   BEGIN   Select @ClassID  = aaAcctClassID from AAG00200 Where ACTINDX = @ACTINDX  if @ClassID <> 0  BEGIN  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR('+@aaGLWorkHdrID+')),3,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR('+@aaGLWorkHdrID+')) ),0)  from AAG00202 where aaAcctClassID ='+ @ClassID+' and aaTrxDimID >=0')   Insert into AAG10003 (aaGLWorkHdrID, aaGLWorkDistID, aaGLWorkAssignID,aaTrxDimID, aaTrxCodeID, aaCodeErrors)   Select @aaGLWorkHdrID, @aaGLWorkDistID, @aaGLWorkAssignID, aaTrxDimID, aaTrxDimCodeIDDflt, 0  from AAG00202 where aaAcctClassID = @ClassID and aaTrxDimID >=0   If (select min(aaTrxDimCodeIDDflt) from AAG00202 where aaAcctClassID = @ClassID and aaTrxDimID >=0) = 0  Update AAG10001 set aaBrowseType = 2 where aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID=@aaGLWorkDistID and ACTINDX = @ACTINDX   Else  Update AAG10001 set aaBrowseType = 1 where aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID=@aaGLWorkDistID and ACTINDX = @ACTINDX    END  FETCH NEXT FROM CODECUR INTO @aaGLWorkHdrID,@aaGLWorkDistID,@aaGLWorkAssignID,@ACTINDX  END  CLOSE CODECUR  DEALLOCATE CODECUR   End   update DYNAMICS..AAG00102 set aaRowID = dbo.aagGetNextHdrID(10000) - 1  where aaTableID = 10000 and CMPANYID = @CMPANYID  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10002.aaGLWorkDistID)')   DELETE AAG10002 FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10002.aaGLWorkDistID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10003.aaGLWorkDistID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID AND AAG10001.aaGLWorkDistID=AAG10003.aaGLWorkDistID)   Update AAG10001 SET aaGLWorkDistID=0-ABS(aaGLWorkDistID)   Update AAG10002 SET aaGLWorkDistID=0-ABS(aaGLWorkDistID)   Update AAG10003 SET aaGLWorkDistID=0-ABS(aaGLWorkDistID)   UPDATE AAG10003 SET aaGLWorkDistID = a.ID FROM (  SELECT RANK() OVER (PARTITION BY aaGLWorkHdrID ORDER BY SQNCLINE,DEX_ROW_ID ASC) ID,aaGLWorkHdrID,aaGLWorkDistID from AAG10001 group by aaGLWorkHdrID,SQNCLINE,aaGLWorkDistID,DEX_ROW_ID  ) a INNER JOIN AAG10001 A1 ON A1.aaGLWorkHdrID = a.aaGLWorkHdrID AND A1.aaGLWorkDistID = a.aaGLWorkDistID  INNER JOIN AAG10003 A3 ON A3.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A3.aaGLWorkDistID = A1.aaGLWorkDistID    UPDATE AAG10002 SET aaGLWorkDistID = a.ID FROM (  SELECT RANK() OVER (PARTITION BY aaGLWorkHdrID ORDER BY SQNCLINE,DEX_ROW_ID ASC) ID,aaGLWorkHdrID,aaGLWorkDistID from AAG10001 group by aaGLWorkHdrID,SQNCLINE,aaGLWorkDistID,DEX_ROW_ID  ) a INNER JOIN AAG10001 A1 ON A1.aaGLWorkHdrID = a.aaGLWorkHdrID AND A1.aaGLWorkDistID = a.aaGLWorkDistID  INNER JOIN AAG10002 A2 ON A2.aaGLWorkHdrID = A1.aaGLWorkHdrID AND A2.aaGLWorkDistID = A1.aaGLWorkDistID    UPDATE AAG10001 SET aaGLWorkDistID = a.ID FROM (  SELECT RANK() OVER (PARTITION BY aaGLWorkHdrID ORDER BY SQNCLINE,DEX_ROW_ID ASC) ID,aaGLWorkHdrID,aaGLWorkDistID from AAG10001 group by aaGLWorkHdrID,SQNCLINE,aaGLWorkDistID,DEX_ROW_ID  ) a INNER JOIN AAG10001 A1 ON A1.aaGLWorkHdrID = a.aaGLWorkHdrID AND A1.aaGLWorkDistID = a.aaGLWorkDistID    EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Distribution Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10001.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10001.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10001.aaGLWorkHdrID)) ),-9999)  FROM AAG10001 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10001.aaGLWorkHdrID)')   DELETE AAG10001 FROM AAG10001 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkHdrID FROM AAG10000 WHERE AAG10000.aaGLWorkHdrID=AAG10001.aaGLWorkHdrID)  EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Assignment Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10002.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10002.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10002.aaGLWorkHdrID)) ),-9999)  FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)')   DELETE AAG10002 FROM AAG10002 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10002.aaGLWorkHdrID)   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY)   SELECT DISTINCT '+''''+@USERID + ''''+',''AA GL Work Code Table'',''AA GL Work Header ID=''+LTRIM(STR(AAG10003.aaGLWorkHdrID))+SPACE(3)+''AA GL Work Distribution ID=''+LTRIM(STR(AAG10003.aaGLWorkDistID)),6,1 ,ISNULL((SELECT TOP 1 JRNENTRY FROM AAG10000 WHERE aaGLWorkHdrID =LTRIM(STR(AAG10003.aaGLWorkHdrID)) ),-9999)  FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)')   DELETE AAG10003 FROM AAG10003 WHERE NOT EXISTS (SELECT DISTINCT aaGLWorkDistID FROM AAG10001 WHERE AAG10001.aaGLWorkHdrID=AAG10003.aaGLWorkHdrID)  EXEC('DECLARE @JRNENTRY bigint, @SQNCLINE INT,  @RCTRXSEQ numeric(19,5),   @TRXSORCE char(13),   @CRDTAMNT numeric(19,5),   @DEBITAMT numeric(19,5),  @TRXDATE datetime,  @CURNCYID CHAR(16),  @CURRNIDX SMALLINT,   @Ledger_ID INT,   @ACTINDX INT,  @SEQ1 INT   DECLARE C1 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, GL.RCTRXSEQ, GL1.CRDTAMNT, GL1.DEBITAMT,  GL.TRXDATE,GL.CURNCYID,GL.CURRNIDX, GL.Ledger_ID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY,GL.RCTRXSEQ ORDER BY GL1.SQNCLINE ASC) FROM GL10001 GL1 INNER JOIN GL10000 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C1  FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE, @RCTRXSEQ,  @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@CURRNIDX, @Ledger_ID, @ACTINDX,@SEQ1  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AA_CL_Status = 1   FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY AND A.RCTRXSEQ = @RCTRXSEQ   AND A1.ACTINDX = @ACTINDX AND A1.CRDTAMNT  = @CRDTAMNT AND A1.DEBITAMT = @DEBITAMT   AND A.GLPOSTDT = @TRXDATE AND A1.CURNCYID = @CURNCYID AND A1.CURRNIDX = @CURRNIDX AND A.Ledger_ID = @Ledger_ID  AND A1.SQNCLINE=@SQNCLINE AND A1.aaGLWorkDistID = @SEQ1   FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE, @RCTRXSEQ, @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@CURRNIDX, @Ledger_ID, @ACTINDX,@SEQ1  END   close C1  deallocate C1   DECLARE C1 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE,   case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C1  FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE,  @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID,@ACTINDX,@SEQ1  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AA_CL_Status = 1   FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY   AND A1.ACTINDX = @ACTINDX AND A1.CRDTAMNT  = @CRDTAMNT AND A1.DEBITAMT = @DEBITAMT   AND A.GLPOSTDT = @TRXDATE AND A1.CURNCYID = @CURNCYID   AND A1.SQNCLINE=@SQNCLINE AND A1.aaGLWorkDistID = @SEQ1   FETCH NEXT FROM C1 INTO @JRNENTRY, @SQNCLINE,  @CRDTAMNT, @DEBITAMT,  @TRXDATE,@CURNCYID, @ACTINDX,@SEQ1  END   close C1  deallocate C1   DECLARE @JRNENTRY2 bigint, @SQNCLINE2 INT,  @TRXSORCE2 char(13),   @CRDTAMNT2 numeric(19,5),   @DEBITAMT2 numeric(19,5),  @TRXDATE2 datetime,  @CURNCYID2 CHAR(16),  @ACTINDX2 INT,  @SEQ2 INT   DECLARE C2 CURSOR FAST_FORWARD FOR (SELECT GL1.JRNENTRY, GL1.SQNCLINE, case when GL1.TRXAMNT < 0 then 0 else GL1.TRXAMNT end as DEBITAMT,  case when GL1.TRXAMNT > 0  then 0 else abs(GL1.TRXAMNT) end as CRDTAMNT,  GL.TRXDATE,GL.CURNCYID, GL1.ACTINDX , RANK() OVER (PARTITION BY GL1.JRNENTRY ORDER BY GL1.SQNCLINE ASC)FROM GL10101 GL1 INNER JOIN GL10100 GL ON  GL1.JRNENTRY= GL.JRNENTRY)  OPEN C2  FETCH NEXT FROM C2 INTO @JRNENTRY2, @SQNCLINE2, @CRDTAMNT2, @DEBITAMT2,  @TRXDATE2,@CURNCYID2,@ACTINDX2, @SEQ2  while @@fetch_status = 0  Begin  UPDATE AAG10001 SET AA_CL_Status = 1  FROM AAG10001 A1 INNER JOIN AAG10000 A ON A1.aaGLWorkHdrID = A.aaGLWorkHdrID  WHERE A.JRNENTRY = @JRNENTRY2   AND A1.ACTINDX = @ACTINDX2 AND A1.CRDTAMNT  = @CRDTAMNT2 AND A1.DEBITAMT = @DEBITAMT2  AND A.GLPOSTDT = @TRXDATE2 AND A1.CURNCYID = @CURNCYID2 AND A1.aaGLWorkDistID = @SEQ2   FETCH NEXT FROM C2 INTO @JRNENTRY2, @SQNCLINE2, @CRDTAMNT2, @DEBITAMT2,  @TRXDATE2,@CURNCYID2,@ACTINDX2,@SEQ2  END   close C2  deallocate C2')  END  IF @Preview = 1  EXEC ('DECLARE @JRN INTEGER,@AAERMSG SMALLINT  DECLARE ABC CURSOR FAST_FORWARD FOR   SELECT JRNENTRY,AAERMSG FROM  '+@TBName+'  OPEN ABC   FETCH NEXT FROM ABC INTO @JRN,@AAERMSG  WHILE @@FETCH_STATUS = 0   BEGIN  IF @AAERMSG=15  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (6,9,10)  IF @AAERMSG=12  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (1,9,10)  IF @AAERMSG=9  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (10,6) AND AATBL IN (''AA GL Work Distribution Table'') AND AATBL NOT IN (''AA GL Work Assignment Table'')  IF @AAERMSG=1  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN (15,9,10)  IF @AAERMSG=17  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG <> 17  IF @AAERMSG=6  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG IN ( 10 ) AND AATBL IN (''AA GL Work Assignment Table'',''AA GL Work Code Table'')  IF @AAERMSG=10  DELETE FROM '+@TBName+' WHERE JRNENTRY=@JRN and AAERMSG NOT IN ( 10 ) AND AATBL IN (''AA GL Work Distribution Table'',''AA GL Work Assignment Table'')  FETCH NEXT FROM ABC INTO @JRN,@AAERMSG  END   CLOSE ABC   DEALLOCATE ABC')   EXEC ('DELETE FROM '+@TBName+' WHERE JRNENTRY=0')  EXEC ('UPDATE '+@TBName+' SET JRNENTRY=0 WHERE JRNENTRY=-9999')   EXEC ('SELECT DISTINCT USERID,AATBL,ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY INTO  ##Temp FROM '+@TBName+'  Truncate table '+@TBName+'  INSERT INTO '+@TBName +' SELECT USERID,AATBL,ERMSGTXT,AAERMSG,AAERTYP,JRNENTRY FROM ##Temp   DROP TABLE ##Temp')  IF @@ERROR <> 0  BEGIN  ROLLBACK TRANSACTION  END  ELSE  BEGIN  COMMIT TRANSACTION  END  SET NOCOUNT OFF  END    
GO
GRANT EXECUTE ON  [dbo].[aagGenericGLWorkTOD] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[SVC_CreateAPVoucher](  @BATCHNUM varchar(15)  = NULL,  @DOCNUM varchar(20) = NULL,  @DOCDATE datetime = NULL,  @DOCAMT numeric(19, 5) = 0,  @VENDORID varchar(15) = NULL,  @DOCTYPE      smallint        = 1,                     @TRXDESC      varchar(30)     = 'RE/MAX Front End transaction',  @USERID       varchar(15) = NULL,  @COID  varchar(5) = NULL,  @VOUCHER char(21) output,  @PORDNUMBR char(21) = '',  @STATUS integer output ) as  declare   @1099Type smallint,  @1099Amount numeric(19,5),  @cmdline char(255),  @today        varchar(20),  @doc_date     varchar(20),  @due_date     varchar(20),  @batch_source varchar(15),  @batch_type   smallint,  @checkbookid  varchar(15),  @voucher2     varchar(21),  @voucher_next varchar(21),  @voucher_neg  varchar(21),  @dex_row      integer,  @index        smallint,  @digit        char,  @carry        smallint,  @post_date    varchar(21),  @add_code     varchar(15),  @pay_term     varchar(15),  @tax_sched    varchar(15),  @ship_mtd     varchar(15),  @purc_sched   varchar(15),  @frei_sched   varchar(15),  @misc_sched   varchar(15)  select @1099Amount = @DOCAMT  select @batch_source = 'PM_Trxent' select @batch_type   = 1 select @checkbookid  = CHEKBKID,  @purc_sched   = PCHSCHID,   @frei_sched   = FRTSCHID,  @misc_sched   = MSCSCHID  from PM40100 where UNIQKEY = '1' select @today        = convert(varchar(12), getdate(), 101) + ' 12:00AM' select @doc_date     = convert(varchar(12), @DOCDATE, 101) + ' 12:00AM' select @due_date     = convert(varchar(12), dateadd(day, 30, @DOCDATE), 101) + ' 12:00AM' select @post_date    = @doc_date select @carry        = 1 select @1099Type = TEN99TYPE from PM00200 WHERE VENDORID = @VENDORID select @1099Type = IsNull(@1099Type,0) if @1099Type in (2,3,4)  select @1099Amount = @DOCAMT  else  select @1099Amount = 0  if @BATCHNUM = NULL or   @DOCNUM   = NULL or  @DOCDATE  = NULL or  @VENDORID = NULL or  @USERID   = NULL or  @COID     = NULL BEGIN   select @STATUS = -1  return  END   if @COID <> DB_NAME() BEGIN   select @STATUS = -2  return  END   if exists(select * from PM00200 where VENDORID = @VENDORID)  begin   if exists(select * from PM00200 where VENDORID = @VENDORID and VENDSTTS = 2)   BEGIN   select @STATUS = -6  return   END   else  select @add_code  = VADDCDPR,  @pay_term  = PYMTRMID,  @tax_sched = TAXSCHID,  @ship_mtd  = SHIPMTHD  from PM00200 where VENDORID = @VENDORID  end  else  BEGIN   select @STATUS = -5  return  END   if exists(select * from dbo.SY00500 where BACHNUMB = @BATCHNUM and SERIES = 4)  begin   if exists(select * from dbo.SY00500 where BACHNUMB = @BATCHNUM and SERIES = 4 and (MKDTOPST <> 0 or BCHSTTUS <> 0)) or   exists(select * from DYNAMICS.dbo.SY00800 where BACHNUMB = @BATCHNUM)  BEGIN   select @STATUS = -3  return   END   else  select @post_date = GLPOSTDT from dbo.SY00500 where BACHNUMB = @BATCHNUM and SERIES = 4  end else  begin   exec dbo.zDP_SY00500SI @doc_date,                    @batch_source,                    @BATCHNUM,                        4,                                0,                                0,                                0,                                0,                                0,                                1,                                '01/01/1900 12:00AM',             0,                                'RE/MAX Front End Interface',     0,                                0,                                0,                                @USERID,                          @checkbookid,                     0.00,                             0,                                0,                                @today,                           '',                               '',                               1,                                @today,                           @today,                           0,                                '',                               0,                                0,                                0.00,                             0,                                0,                                '01/01/1900 00:00:00',            '',                               @batch_type,                      0,                                0,                                @dex_row output  if @dex_row <= 0   return -4   end  select @voucher2 = NTVCHNUM from PM40100 where UNIQKEY = '1' select @voucher_next = '' select @voucher_neg  = reverse(@voucher2) select @index = 1 select @digit = substring(@voucher_neg, @index, 1) while(@digit > '')   begin  if @carry = 1   begin  if @digit <> '9' select @carry = 0   select @digit = case   when @digit = '0' then '1'   when @digit = '1' then '2'   when @digit = '2' then '3'   when @digit = '3' then '4'   when @digit = '4' then '5'   when @digit = '5' then '6'   when @digit = '6' then '7'   when @digit = '7' then '8'   when @digit = '8' then '9'   when @digit = '9' then '0'  else @digit  end  end  select @voucher_next = @digit + @voucher_next  select @digit = NULL  select @index = @index + 1  select @digit = substring(@voucher_neg, @index, 1)  end  update PM40100   set NTVCHNUM = @voucher_next  where UNIQKEY = '1'  exec dbo.zDP_PM10000SI @BATCHNUM,                        @batch_source,                    @voucher2,                         @VENDORID,                        @DOCNUM,                          @DOCTYPE,                         '',                               @DOCAMT,                          @doc_date,                        @post_date,                        @add_code,                        @pay_term,                        @tax_sched,                       @due_date,                        0.00,                             '01/01/1900 12:00AM',             @DOCAMT,                          @DOCAMT,                          0.00,                             '',                               '',                               '01/01/1900 12:00AM',             '',                                0.00,                             '',                               '01/01/1900 12:00AM',             '',                               0.00,                             '',                               '',                               '',                                '',                               '01/01/1900 12:00AM',             'Z-US$',                          @checkbookid,                     @TRXDESC,                          @1099Amount,                      0.00,                             0.00,                             0.00,                             @1099Amount,                      0.00,                             @PORDNUMBR,             @ship_mtd,   0.00,                             0.00,                             0.00,                      0.00,                             @DOCAMT,                          0,                                0,                                0,                                0.00,                             0.00,                             0.00,                             0.00,                             0,                                0.00,                             @voucher2,                         0,                                @today,                           @USERID,                          '01/01/1900 12:00AM',             '',                               0.00,                             0.00,                             0.00,                             0.00,                             @purc_sched,                      @frei_sched,                      @misc_sched,                      0,                                0,                                 0.00,                             0,            0,             0,            @dex_row output  if @dex_row <= 0  BEGIN   select @STATUS = -7  return  END   update SY00500  set NUMOFTRX = NUMOFTRX + 1,  BCHTOTAL = BCHTOTAL + @DOCAMT  where BACHNUMB = @BATCHNUM and SERIES = 4  select @VOUCHER = @voucher2  exec dbo.zDP_PM00400SI @voucher2,                         0,                                1,                                @DOCTYPE,                         @VENDORID,                        @DOCNUM,                          '',                               @checkbookid,                     @due_date,                        '01/01/1900 12:00AM',             @batch_source,                    @doc_date,                        @dex_row output if @dex_row <= 0  BEGIN   select @STATUS = -8  return  END  select @STATUS = 0 return     
GO
GRANT EXECUTE ON  [dbo].[SVC_CreateAPVoucher] TO [DYNGRP]
GO

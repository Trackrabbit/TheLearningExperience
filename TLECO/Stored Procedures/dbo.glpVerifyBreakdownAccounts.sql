SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpVerifyBreakdownAccounts]  @I_iSQLSessionID        int             = NULL,  @I_iAccountIndex        int             = NULL,  @I_mAmount              numeric(19,5)   = NULL,  @I_tPosting             tinyint  = NULL,           @I_sAllocationType      smallint        = NULL,  @I_iRelationID int  = NULL,  @I_sUserLevel smallint = NULL,  @I_iAccessAllAccounts int  = NULL,  @IO_bLineMessages       binary(4)       = NULL  output,  @O_bBreakdownsExist     tinyint  = NULL  output,  @O_iErrorState          int             = NULL  output as  declare  @TRUE                           tinyint,  @FALSE                          tinyint,  @POST_ACCT                      smallint,  @POST_ALLOC_ACCT                smallint,  @UNIT_ALLOC_ACCT                smallint,  @ALLOCATION                     smallint,  @RECONCILE                      smallint,  @MAINTENANCE                    smallint,  @iMsNoBreakdowns                int,  @MS_ITEM_2                      int,  @MS_ITEM_3                      int,  @MS_ITEM_7                      int,  @MS_ITEM_10                     int,  @MS_ITEM_11                     int,  @MS_ITEM_12                     int,  @MS_ITEM_17                     int,  @MS_ITEM_31                     int,  @iMsDistributionNotInFixedMSTR int,  @tNoBreakdownsForAllocation     tinyint,  @sAccountType                   smallint,  @iTypeCount                     int,  @tTransaction                   tinyint,  @iError                         int,  @iStatus                        int,  @tLoop                          tinyint,   @vAccountfiltertable varchar(255),  @vExecstring    varchar(255),  @vExecstring2    varchar(255),  @vExecstring3    varchar(255),  @vWhere1 varchar(255)  select   @O_bBreakdownsExist = 0,  @O_iErrorState = 0,  @iStatus = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID        is NULL or  @I_iAccountIndex        is NULL or  @I_mAmount              is NULL or  @I_tPosting             is NULL or  @I_sAllocationType      is NULL or  @I_iRelationID is NULL or  @I_sUserLevel is NULL or  @I_iAccessAllAccounts is NULL or  @IO_bLineMessages       is NULL  begin  select @O_iErrorState = 20129  break   end    select  @TRUE                   = 1,  @FALSE                  = 0,  @POST_ACCT              = 1,  @POST_ALLOC_ACCT        = 3,  @UNIT_ALLOC_ACCT        = 4,  @ALLOCATION             = 1,  @RECONCILE              = 4,  @MAINTENANCE            = 5,  @MS_ITEM_2  = power(2,25),  @MS_ITEM_3  = power(2,26),  @MS_ITEM_7              = power(2,30),  @MS_ITEM_10             = power(2,17),  @MS_ITEM_11             = power(2,18),  @MS_ITEM_12             = power(2,19),  @MS_ITEM_17             = power(2,8),  @MS_ITEM_31  = power(2,6)   if      @I_sAllocationType <> @ALLOCATION and  @I_sAllocationType <> @RECONCILE and  @I_sAllocationType <> @MAINTENANCE  begin  select @O_iErrorState = 20710  break  end   select @tNoBreakdownsForAllocation = @FALSE   if @I_iAccessAllAccounts = @TRUE  begin  select @vAccountfiltertable = 'GL00100 master '  select @vWhere1 = ''  end  else  begin  select @vWhere1 = ' and master.ACTINDX = acctfilter.ACTINDX and acctfilter.RELID = '   + str(@I_iRelationID)   select @vAccountfiltertable =   case when @I_sUserLevel = 0 then  'GL00100 master, GL00100F1 acctfilter '  else  'GL00100 master, GL00100F' + str(@I_sUserLevel,1) + ' acctfilter '  end  end   if @I_sAllocationType = @ALLOCATION   select   @iMsNoBreakdowns = @MS_ITEM_10,  @iMsDistributionNotInFixedMSTR =  @MS_ITEM_7  else   select   @iMsNoBreakdowns = @MS_ITEM_2,  @iMsDistributionNotInFixedMSTR = @MS_ITEM_3   insert   into  #Breakdowns (  SQLSessionID,  AllocationIndex,   DistributionIndex,  BreakdownIndex,  Percentage,  LineMessage,  AccountType,  Active,  Debit,  Credit,  AllocationType )  select   @I_iSQLSessionID,  var.ACTINDX,  var.DSTINDX,   var.BDNINDX,  0.0,  0,  @POST_ACCT,  @FALSE,  0.0,  0.0,  @I_sAllocationType  from   GL00104 var  where   var.ACTINDX = @I_iAccountIndex   if @@rowcount = 0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @iMsNoBreakdowns)   select @IO_bLineMessages = (@IO_bLineMessages | @MS_ITEM_31)   update #Distributions   set     LineMessage = (LineMessage | convert(int, @IO_bLineMessages))  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and AllocationType = @I_sAllocationType  if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20119  break  end    if @I_sAllocationType = @RECONCILE  select @tNoBreakdownsForAllocation = @TRUE  else  break  end   else  select @O_bBreakdownsExist = @TRUE   update #Distributions   set     #Distributions.LineMessage = (#Distributions.LineMessage | @iMsNoBreakdowns)  from   #Distributions   where  SQLSessionID = @I_iSQLSessionID   and     #Distributions.AllocationIndex = @I_iAccountIndex  and #Distributions.AllocationType = @I_sAllocationType  and     (#Distributions.LineMessage & @MS_ITEM_7) <> @MS_ITEM_7  and     #Distributions.DistributionIndex  not in (        select   var.DistributionIndex  from  #Breakdowns     var  where  var.SQLSessionID = @I_iSQLSessionID  and     var.AllocationIndex = @I_iAccountIndex  and var.AllocationType = @I_sAllocationType )   if @@rowcount > 0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @iMsNoBreakdowns)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20123  break  end     if @tNoBreakdownsForAllocation = @TRUE  break  end    update #Breakdowns  set     LineMessage = (LineMessage | @iMsDistributionNotInFixedMSTR)  from   #Breakdowns     var  where  var.SQLSessionID = @I_iSQLSessionID   and     var.AllocationIndex = @I_iAccountIndex  and var.AllocationType = @I_sAllocationType  and     var.DistributionIndex  not in (        select   fix.DistributionIndex  from  #Distributions  fix  where  fix.SQLSessionID = @I_iSQLSessionID  and     fix.AllocationIndex = @I_iAccountIndex  and fix.AllocationType = @I_sAllocationType )   if @@rowcount > 0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @iMsDistributionNotInFixedMSTR)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20122  break   end    end    select @vExecstring = 'update #Breakdowns set LineMessage = (LineMessage | ' +  str(@MS_ITEM_10) + ') where SQLSessionID = ' +  str(@I_iSQLSessionID) + ' and AllocationIndex = ' +  str(@I_iAccountIndex) + ' and AllocationType = '   select @vExecstring2 = str(@I_sAllocationType) + ' and BreakdownIndex not in ' +  '(select master.ACTINDX from ' +  @vAccountfiltertable + ' where master.ACTINDX = BreakdownIndex ' +  @vWhere1 + ')'   exec(@vExecstring + @vExecstring2)   if @@rowcount <> 0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @MS_ITEM_10)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20120  break   end    end    select @vExecstring = 'update #Breakdowns set #Breakdowns.AccountType = master.ACCTTYPE,  #Breakdowns.Active = master.ACTIVE from ' + @vAccountfiltertable    select @vExecstring2 = ' where  #Breakdowns.SQLSessionID = ' + str(@I_iSQLSessionID) +  ' and     #Breakdowns.AllocationIndex = ' + str(@I_iAccountIndex) +  ' and     #Breakdowns.BreakdownIndex = master.ACTINDX  and #Breakdowns.AllocationType = ' + str(@I_sAllocationType)   select @vExecstring3 = ' and     (#Breakdowns.LineMessage & ' + str(@MS_ITEM_10) +   ') <> ' + str(@MS_ITEM_10) +@vWhere1   exec(@vExecstring + @vExecstring2 + @vExecstring3)   if @@rowcount = 0  begin  if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20173  break  end    end    update #Breakdowns  set     LineMessage = (LineMessage | @MS_ITEM_11)  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and AllocationType = @I_sAllocationType   and     Active = @FALSE  and     (LineMessage & @MS_ITEM_10) <> @MS_ITEM_10   if @@rowcount > 0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @MS_ITEM_11)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20124  break   end    end    update #Breakdowns  set     LineMessage = (LineMessage | @MS_ITEM_17)  where  SQLSessionID = @I_iSQLSessionID   and     AllocationIndex = @I_iAccountIndex  and AllocationType = @I_sAllocationType   and     (AccountType = @POST_ALLOC_ACCT   or      AccountType = @UNIT_ALLOC_ACCT)   and     (LineMessage & @MS_ITEM_10) <> @MS_ITEM_10   if @@rowcount > 0  begin  select @IO_bLineMessages = (@IO_bLineMessages | @MS_ITEM_17)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20125  break  end    end    set rowcount 1   select   @sAccountType = AccountType  from   #Breakdowns   where  SQLSessionID = @I_iSQLSessionID   and     AllocationIndex = @I_iAccountIndex  and AllocationType = @I_sAllocationType   and     (LineMessage & @MS_ITEM_10) <> @MS_ITEM_10  order by   DistributionIndex   if @@rowcount <> 1  begin  if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20126  set rowcount 0    break  end    set rowcount 0   break    end    set rowcount 0   update #Breakdowns  set     LineMessage = (LineMessage | @MS_ITEM_12)  where  SQLSessionID = @I_iSQLSessionID  and     AllocationIndex = @I_iAccountIndex  and AllocationType = @I_sAllocationType   and     AccountType  <> @sAccountType   and     (LineMessage & @MS_ITEM_10) <> @MS_ITEM_10   if @@rowcount > 0   begin  select @IO_bLineMessages = (@IO_bLineMessages | @MS_ITEM_12)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20127  break   end   end  end   if @iStatus <> 0 or @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction  return (@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[glpVerifyBreakdownAccounts] TO [DYNGRP]
GO

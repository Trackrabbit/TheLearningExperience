SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taFSServiceCallMaster] @I_vSRVRECTYPE smallint,   @I_vCALLNBR char (11),    @I_vSRVSTAT char (3) = null,   @I_vSRVTYPE char (11) = null,   @I_vSVCDESCR char (61) = null,   @I_vpriorityLevel smallint = 0,   @I_vCUSTNMBR char (15),    @I_vCustomer_Reference char (21) = null,  @I_vADRSCODE char (15) = null,   @I_vCUSTNAME char (31) = null,   @I_vADDRESS1 char (31) = null,   @I_vADDRESS2 char (31) = null,   @I_vADDRESS3 char (31) = null,   @I_vCITY char (31) = null,   @I_vSTATE char (3) = null,   @I_vZIP char (11) = null,   @I_vCOUNTRY char (21) = null,   @I_vCNTCPRSN char (31) = null,   @I_vPHONE1 char (21) = null,   @I_vCKHOLD smallint = 0,   @I_vOFFID char (11) = null,   @I_vSVCAREA char (11) = null,   @I_vTECHID char (11) = null,   @I_vTIMEZONE char (3) = null,   @I_vCONTNBR char (11) = null,   @I_vPRICELVL char (15) = null,   @I_vENTDTE datetime = null,   @I_vENTTME datetime = null,   @I_vETADTE datetime = null,   @I_vETATME datetime = null,   @I_vDISPDTE datetime = null,   @I_vDISPTME datetime = null,   @I_vARRIVDTE datetime = null,   @I_vARRIVTME datetime = null,   @I_vCOMPDTE datetime = null,   @I_vCOMPTME datetime = null,   @I_vResponse_Date datetime = null,  @I_vResponse_Time datetime = null,  @I_vSLPRSNID char (15) = null,   @I_vPORDNMBR char (21) = null,   @I_vNOTETXT varchar(8000) = null,  @I_vUSERDEF1 char(21) = null,   @I_vUSERDEF2 char(21) = null,   @I_vUSRDEF03 char(21) = null,   @I_vUSRDEF04 char(21) = null,   @I_vUSRDEF05 char(21) = null,   @I_vSVC_On_Hold tinyint = null,   @I_vPYMTRMID char (21) = null,   @I_vSVC_FO_ID char (51) = null,   @I_vCURNCYID char(15) = null,   @I_vAutoCreateLabor tinyint = 0,  @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = null,   @I_vUSRDEFND2 char(50) = null,    @I_vUSRDEFND3 char(50) = null,   @I_vUSRDEFND4 varchar(8000) = null,  @I_vUSRDEFND5 varchar(8000) = null,  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @I_vNotify_Date datetime,  @I_vNotify_Time datetime,  @O_TODAY datetime,  @O_DUMMYDT datetime,  @O_NOW datetime,  @iValueExists smallint,  @I_vLABSTOTPRC numeric (19,5),  @I_vLABPCT numeric (19,5),  @I_vLABSTOTCST numeric (19,5),  @I_vPARSTOTPRC numeric (19,5),  @I_vPARTPCT numeric (19,5),  @I_vPARSTOTCST numeric (19,5),  @I_vMSCSTOTPRC numeric (19,5),  @I_vMISCPCT numeric (19,5),  @I_vMISSTOTCST numeric (19,5),  @I_vTAXSCHID char (15),  @I_vTAXEXMT1 char (25),  @I_vTAXEXMT2 char (25),  @I_vPRETAXTOT numeric (19,5),  @I_vTAXAMNT numeric (19,5),  @I_vTOTAL numeric (19,5),  @I_vInvoiced_Amount numeric (19,5),  @I_vMETER1 int,  @I_vMETER2 int,  @I_vMETER3 int,  @I_vNOTEINDX numeric (19,5),  @I_vNOTFYFLAG tinyint,  @I_vMSTRRECTYPE smallint,  @I_vMSTRCALLNBR char (11),  @I_vESCDATE datetime,  @I_vESCTIME datetime,  @I_vEscalation_Level int,  @I_vSPLTTERMS char (11),  @I_vCallback tinyint,  @I_vPROJCTID char (15),  @I_vProjectRef1_1 char (15),  @I_vProjectRef1_2 char (15),  @I_vProjectRef1_3 char (15),  @I_vProjectRef1_4 char (15),  @I_vCONSTS smallint,  @I_vSVC_Contract_Line_SEQ numeric (19,5),  @I_vETTR numeric (19,5),  @I_vPrint_to_Web tinyint,  @I_vMeters_1 int,  @I_vMeters_2 int,  @I_vMeters_3 int,  @I_vMeters_4 int,  @I_vMeters_5 int,  @I_vMeter_Internal_Uses_1 int,  @I_vMeter_Internal_Uses_2 int,  @I_vMeter_Internal_Uses_3 int,  @I_vMeter_Internal_Uses_4 int,  @I_vMeter_Internal_Uses_5 int,  @I_vBill_To_Customer char (15),  @I_vSVC_Bill_To_Address_Code char (15),  @I_vCURRNIDX smallint,  @I_vORIGMISSTOTCST numeric (19,5),  @I_vORIGMSCSTOTPRC numeric (19,5),  @I_vORIGLABSUBTOTCOST numeric (19,5),  @I_vORIGLABSTOTPRC numeric (19,5),  @I_vORIGPARSTOTCST numeric (19,5),  @I_vORIGPARSTOTPRC numeric (19,5),  @I_vORIGPRETAXTOT numeric (19,5),  @I_vORTAXAMT numeric (19,5),  @I_vORIGTOTAL numeric (19,5),  @I_vOrig_Invoiced_Amount numeric (19,5),  @I_vDECPLACS int,  @I_vRATECALC int,  @I_vVIEWMODE int,  @I_vDENXRATE numeric (19,5),  @I_vMCTRXSTT int,  @I_vSVC_Pre600 tinyint,  @I_vReplaces_1 int,  @I_vReplaces_2 int,  @I_vReplaces_3 int,  @I_vReplaces_4 int,  @I_vReplaces_5 int,  @iStatus int,  @iError int,  @iCustomState int,  @O_oErrorState int,  @iCustomErrString varchar(255),  @Line_Seq_Exists smallint,  @SRVTYPE char(11),  @TECHID char(11),  @CUSTNMBR char(15),  @HOLD smallint,  @INACTIVE smallint,  @NAME char(31),  @ADRSCODE char(15),  @CNTCPRSN char(31),  @PYMTRMID char (21),  @SVC_Sales_Only smallint,  @SLPRSNID char (15),  @PHONE1 char (21),  @PRBTADCD char(15),  @CURNCYID char(15),  @RATETPID char(15),  @ISMCTRX int,  @CURRNIDX int,  @FUNLCURR char (15),  @EXGTBLID char(15),  @iGetNextNoteIdxErrState int,  @CMPANYID smallint,  @OFFID char (11),  @SVCAREA char (11),  @AuditLNITMSEQ int,  @FRMSTAT char(3),  @AuditDesc char(31),  @UserID char(15),  @Backorder_Status char (3),  @Intransit_Status char (3),  @Dispatch_Status char (3),  @Arrival_Status char (3),  @Complete_Status char (3),  @SRVSTAT char (3),  @O_vSRVSTAT char(3),  @POSTAT char (3),  @TECHSTAT char(11),  @Tech_Available int,  @partsprice numeric(19,2),  @partscost numeric(19,2),  @partstax numeric(19,2),  @laborprice numeric(19,2),  @laborcost numeric(19,2),  @labortax numeric(19,2),  @miscprice numeric(19,2),  @misccost numeric(19,2),  @misctax numeric(19,2),  @origlinetotals numeric(19,2),  @origpartsprice numeric(19,2),  @origpartscost numeric(19,2),  @origpartstax numeric(19,2),  @origlaborprice numeric(19,2),  @origlaborcost numeric(19,2),  @origlabortax numeric(19,2),  @origmiscprice numeric(19,2),  @origmisccost numeric(19,2),  @origmisctax numeric(19,2),  @expenseprice numeric(19,2),  @expensecost numeric(19,2),  @expensetax numeric(19,2),  @origexpenseprice numeric(19,2),  @origexpensecost numeric(19,2),  @origexpensetax numeric(19,2),  @SLSRATETPID char(15),  @FINRATETPID char(15),  @PURRATETPID char(15),  @O_vXCHGRATE numeric(19,7),  @O_vRATETPID char(15),  @O_vEXCHDATE datetime,  @O_vTIME1 datetime,  @O_vEXPNDATE datetime,  @O_vEXGTBDSC char(30),  @O_vEXTBLSRC char(50),  @O_vRATEEXPR smallint,  @O_vDYSTINCR smallint,  @O_vRATEVARC numeric(19,7),  @O_vTRXDTDEF smallint,  @O_vRTCLCMTD smallint,  @O_vPRVDSLMT smallint,  @O_vDATELMTS smallint,  @LINEARRIVDTE datetime,  @LINEARRIVTME datetime,  @LINECOMPDTE datetime,  @LINECOMPTME datetime,  @iDefAutoCreateLabor smallint,  @TravelLaborItem char(31),  @TravelLaborItemUOFM char(9),  @LaborItem char(31),  @LaborItemLocation char(11),  @LaborItemUOFM char(9),  @ENTDTE datetime,  @ENTTME datetime,  @ETADTE datetime,  @ETATME datetime,  @CUSTPRICELVL char(15),  @PRICELVL char(15),  @DEFPRICELVL char(15),  @RMPRICELVL char(15),  @EQUIPID int,  @ITEMNMBR char(31),  @LineCount smallint,  @PREVCONTNBR char(11),  @EQPLINE int,  @LNITMSEQ bigint,  @LINITMTYP char(3),  @QTYSOLD numeric(19,5),  @UNITPRCE numeric(19,5),  @ORUNTPRC numeric(19,5),  @iBILLPCT numeric(19,5),  @O_ENTDISPDTE datetime,  @O_ENTARRIVDTE datetime,   @WORKFLOWENABLED smallint,     @Workflow_Approval_Status smallint,   @Workflow_Priority smallint,        @MultiTechExists tinyint  select  @oErrString = '',  @O_TODAY = convert(char(11), convert(datetime, getdate()), 101),  @O_DUMMYDT = convert(char(11), convert(datetime, '1900-01-01'), 101),  @O_NOW = convert(varchar(10), '12:00 AM', 108),  @iValueExists = 0,  @I_vNotify_Date = @O_DUMMYDT,  @I_vNotify_Time = @O_DUMMYDT,  @I_vLABSTOTPRC  = 0,  @I_vLABPCT  = 0,  @I_vLABSTOTCST  = 0,  @I_vPARSTOTPRC  = 0,  @I_vPARTPCT  = 0,  @I_vPARSTOTCST  = 0,  @I_vMSCSTOTPRC  = 0,  @I_vMISCPCT  = 0,  @I_vMISSTOTCST  = 0,  @I_vTAXSCHID = '',  @I_vTAXEXMT1 = '',  @I_vTAXEXMT2 = '',  @I_vPRETAXTOT  = 0,  @I_vTAXAMNT  = 0,  @I_vTOTAL  = 0,  @I_vInvoiced_Amount  = 0,  @I_vMETER1  = 0,  @I_vMETER2  = 0,  @I_vMETER3  = 0,  @I_vNOTEINDX  = 0,  @I_vNOTFYFLAG  = 0,  @I_vMSTRRECTYPE  = 0,  @I_vMSTRCALLNBR = '',  @I_vESCDATE = @O_DUMMYDT,  @I_vESCTIME = @O_DUMMYDT,  @I_vEscalation_Level  = 0,  @I_vSPLTTERMS = '',  @I_vCallback  = 0,  @I_vPROJCTID = '',  @I_vProjectRef1_1 = '',  @I_vProjectRef1_2 = '',  @I_vProjectRef1_3 = '',  @I_vProjectRef1_4 = '',  @I_vCONSTS  = 0,  @I_vSVC_Contract_Line_SEQ  = 0,  @I_vETTR  = 0,  @I_vPrint_to_Web  = 0,  @I_vMeters_1  = 0,  @I_vMeters_2  = 0,  @I_vMeters_3  = 0,  @I_vMeters_4  = 0,  @I_vMeters_5  = 0,  @I_vMeter_Internal_Uses_1  = 0,  @I_vMeter_Internal_Uses_2  = 0,  @I_vMeter_Internal_Uses_3  = 0,  @I_vMeter_Internal_Uses_4  = 0,  @I_vMeter_Internal_Uses_5  = 0,  @I_vBill_To_Customer = '',  @I_vSVC_Bill_To_Address_Code = '',  @I_vCURRNIDX  = 0,  @I_vORIGMISSTOTCST  = 0,  @I_vORIGMSCSTOTPRC  = 0,  @I_vORIGLABSUBTOTCOST  = 0,  @I_vORIGLABSTOTPRC  = 0,  @I_vORIGPARSTOTCST  = 0,  @I_vORIGPARSTOTPRC  = 0,  @I_vORIGPRETAXTOT  = 0,  @I_vORTAXAMT  = 0,  @I_vORIGTOTAL  = 0,  @I_vOrig_Invoiced_Amount = 0,   @I_vReplaces_1 = 0,  @I_vReplaces_2 = 0,  @I_vReplaces_3 = 0,  @I_vReplaces_4 = 0,  @I_vReplaces_5 = 0,  @I_vSVC_Pre600 = 0,  @iStatus = 0,  @iError = 0,  @iCustomState =  0,  @O_oErrorState = 0,  @iCustomErrString = '',  @Line_Seq_Exists = 0,  @SRVTYPE = '',  @TECHID = '',  @CUSTNMBR = '',  @HOLD = 0,  @INACTIVE = 0,  @NAME = '',  @ADRSCODE = '',  @CNTCPRSN = '',  @PYMTRMID = '',  @SVC_Sales_Only = 0,  @SLPRSNID = '',  @PHONE1 = '',  @PRBTADCD='',  @CURNCYID='',  @RATETPID='',  @ISMCTRX = 0,  @CURRNIDX = 0,  @FUNLCURR = '',  @I_vRATECALC = 0,  @I_vMCTRXSTT = 0,  @iGetNextNoteIdxErrState = 0,  @CMPANYID = 0,  @OFFID='',  @SVCAREA='',  @I_vDECPLACS = 1,  @I_vVIEWMODE = 3,  @I_vDENXRATE = 0,  @EXGTBLID='',  @AuditLNITMSEQ = 0,  @FRMSTAT = '',  @AuditDesc = 'Service Record Add/Update',  @UserID = 'eConnect',  @Backorder_Status = '',  @Intransit_Status = '',  @Dispatch_Status = '',  @Arrival_Status = '',  @Complete_Status = '',  @SRVSTAT = '',  @O_vSRVSTAT = '',  @POSTAT = '',  @TECHSTAT = '',  @Tech_Available = 0,  @O_iErrorState = 0,  @SLSRATETPID = '',  @FINRATETPID = '',  @PURRATETPID = '',  @O_vRATEEXPR = -1,  @O_vDYSTINCR = -1,  @O_vRATEVARC = 0,  @O_vTRXDTDEF = -1,  @O_vRTCLCMTD = -1,  @O_vPRVDSLMT = 0,  @O_vDATELMTS = 0,  @LINEARRIVDTE = '',  @LINEARRIVTME = '',  @LINECOMPDTE = '',  @LINECOMPTME = '',  @iDefAutoCreateLabor = 3,  @TravelLaborItem = '',  @TravelLaborItemUOFM = '',  @LaborItem = '',  @LaborItemLocation = '',  @LaborItemUOFM = '',  @ENTDTE = @O_DUMMYDT,  @ENTTME = @O_DUMMYDT,  @ETADTE = @O_DUMMYDT,  @ETATME = @O_DUMMYDT,  @CUSTPRICELVL = '',  @PRICELVL = '',  @DEFPRICELVL = '',  @RMPRICELVL = '',  @EQUIPID = 0,  @ITEMNMBR = '',  @LineCount = 0,  @PREVCONTNBR = '',  @EQPLINE = 0,  @LNITMSEQ = 0,  @LINITMTYP = '',  @QTYSOLD = 0,  @UNITPRCE = 0,  @ORUNTPRC = 0,  @O_ENTDISPDTE = @O_DUMMYDT,  @O_ENTARRIVDTE = @O_DUMMYDT,  @WORKFLOWENABLED = 0,  @Workflow_Approval_Status = 0,   @Workflow_Priority = 0,  @MultiTechExists = 0  exec @iStatus = taFSServiceCallMasterPre  @I_vCALLNBR output,  @I_vSRVRECTYPE output,  @I_vSRVSTAT output,  @I_vSRVTYPE output,  @I_vSVCDESCR output,  @I_vpriorityLevel output,  @I_vCUSTNMBR output,  @I_vCustomer_Reference output,  @I_vADRSCODE output,  @I_vCUSTNAME output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIP output,  @I_vCOUNTRY output,  @I_vCNTCPRSN output,  @I_vPHONE1 output,  @I_vCKHOLD output,  @I_vOFFID output,  @I_vSVCAREA output,  @I_vTECHID output,  @I_vTIMEZONE output,  @I_vCONTNBR output,  @I_vENTDTE output,  @I_vENTTME output,  @I_vETADTE output,  @I_vETATME output,  @I_vDISPDTE output,  @I_vDISPTME output,  @I_vARRIVDTE output,  @I_vARRIVTME output,  @I_vCOMPDTE output,  @I_vCOMPTME output,  @I_vResponse_Date output,  @I_vResponse_Time output,  @I_vSLPRSNID output,  @I_vPORDNMBR output,  @I_vNOTETXT output,  @I_vUSERDEF1 output,  @I_vUSERDEF2 output,  @I_vUSRDEF03 output,  @I_vUSRDEF04 output,  @I_vUSRDEF05 output,  @I_vSVC_On_Hold output,  @I_vPYMTRMID output,  @I_vSVC_FO_ID output,  @I_vCURNCYID output,  @I_vAutoCreateLabor output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1436     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vCALLNBR is NULL or  @I_vSRVRECTYPE is NULL or  @I_vCUSTNMBR is NULL or  @I_vADRSCODE is NULL   ) begin  select @O_iErrorState = 1437    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if( @I_vCALLNBR = '' or  @I_vSRVRECTYPE = 0 or  @I_vCUSTNMBR = '' ) begin  select @O_iErrorState = 1438    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vSRVRECTYPE < 0   ) begin  select @O_iErrorState = 1439    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vUpdateIfExists not in (0,1)) begin  set @O_iErrorState = 9901     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAutoCreateLabor not in (0,1)) begin  set @O_iErrorState = 9902     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vCURNCYID = UPPER(@I_vCURNCYID)  if (@I_vSRVRECTYPE < 1) or (@I_vSRVRECTYPE > 2) begin  select @O_iErrorState = 1440    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  set @iValueExists = 0 select @iValueExists = 1 from SVC30200 (nolock) where CALLNBR = @I_vCALLNBR and SRVRECTYPE = 3 if (@iValueExists <> 1)  select @iValueExists = 1 from SVC00200 (nolock) where CALLNBR = @I_vCALLNBR and SRVRECTYPE = 3  if (@iValueExists = 1) begin  select @O_iErrorState = 8957     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists(select 1 from SVC00215 (nolock) where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR and MKDTOPST = 1) begin  select @O_iErrorState = 1441    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @O_ENTDISPDTE = case  when @I_vDISPDTE is null or @I_vDISPDTE = '' or @I_vDISPDTE = @O_DUMMYDT then @O_DUMMYDT  else @I_vDISPDTE  end,  @O_ENTARRIVDTE = case  when @I_vARRIVDTE is null or @I_vARRIVDTE = '' or @I_vARRIVDTE = @O_DUMMYDT then @O_DUMMYDT  else @I_vARRIVDTE  end  set @Line_Seq_Exists = 0 select  @Line_Seq_Exists = 1,  @O_vSRVSTAT = case   when @I_vSRVSTAT is null then isnull(SRVSTAT, '')  else @I_vSRVSTAT  end,  @I_vSRVTYPE = case  when @I_vSRVTYPE is null then isnull(SRVTYPE, '')  else @I_vSRVTYPE  end,  @I_vSVCDESCR = case  when @I_vSVCDESCR is null then isnull(SVCDESCR, '')  else @I_vSVCDESCR  end,  @I_vpriorityLevel = case  when @I_vpriorityLevel is null then isnull(priorityLevel, 0)  else @I_vpriorityLevel  end,  @I_vCUSTNMBR = case  when @I_vCUSTNMBR is null then isnull(CUSTNMBR, '')  else @I_vCUSTNMBR  end,  @I_vCustomer_Reference = case   when @I_vCustomer_Reference is null then isnull(Customer_Reference, '')  else @I_vCustomer_Reference  end,  @I_vADRSCODE = case  when @I_vADRSCODE is null then isnull(ADRSCODE, '')  else @I_vADRSCODE  end,  @I_vCUSTNAME = case  when @I_vCUSTNAME is null then isnull(CUSTNAME, '')  else @I_vCUSTNAME  end,  @I_vADDRESS1 = case  when @I_vADDRESS1 is null then isnull(ADDRESS1, '')  else @I_vADDRESS1  end,  @I_vADDRESS2 = case  when @I_vADDRESS2 is null then isnull(ADDRESS2, '')  else @I_vADDRESS2  end,  @I_vADDRESS3 = case  when @I_vADDRESS3 is null then isnull(ADDRESS3, '')  else @I_vADDRESS3  end,  @I_vCITY = case   when @I_vCITY is null then isnull(CITY, '')  else @I_vCITY  end,  @I_vSTATE = case  when @I_vSTATE is null then isnull(STATE, '')  else @I_vSTATE  end,  @I_vZIP = case  when @I_vZIP is null then isnull(ZIP, '')  else @I_vZIP  end,  @I_vCOUNTRY = case  when @I_vCOUNTRY is null then isnull(COUNTRY, '')  else @I_vCOUNTRY  end,  @I_vCNTCPRSN = case  when @I_vCNTCPRSN is null then isnull(CNTCPRSN, '')  else @I_vCNTCPRSN  end,  @I_vPHONE1 = case  when @I_vPHONE1 is null then isnull(PHONE1, '')  else @I_vPHONE1  end,  @I_vOFFID = case  when @I_vOFFID is null then isnull(OFFID, '')  else @I_vOFFID  end,  @I_vSVCAREA = case  when @I_vSVCAREA is null then isnull(SVCAREA, '')  else @I_vSVCAREA  end,  @I_vTECHID = case  when @I_vTECHID is null then isnull(TECHID, '')  else @I_vTECHID  end,  @I_vTIMEZONE = case  when @I_vTIMEZONE is null then isnull(TIMEZONE, '')  else @I_vTIMEZONE  end,  @I_vENTDTE = case  when @I_vENTDTE is null then isnull(ENTDTE, @O_DUMMYDT)  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then isnull(ENTTME, @O_DUMMYDT)  else @I_vENTTME  end,  @I_vNotify_Date = case  when @I_vNotify_Date is null then isnull(Notify_Date, @O_DUMMYDT)  else @I_vNotify_Date  end,  @I_vNotify_Time = case  when @I_vNotify_Time is null then isnull(Notify_Time, @O_DUMMYDT)  else @I_vNotify_Time  end,  @I_vETADTE = case  when @I_vETADTE is null then isnull(ETADTE, @O_DUMMYDT)  else @I_vETADTE  end,  @I_vETATME = case  when @I_vETATME is null then isnull(ETATME, @O_DUMMYDT)  else @I_vETATME  end,  @I_vDISPDTE = case  when @I_vDISPDTE is null then isnull(DISPDTE, @O_DUMMYDT)  else @I_vDISPDTE  end,  @I_vDISPTME = case  when @I_vDISPTME is null then isnull(DISPTME, @O_DUMMYDT)  else @I_vDISPTME  end,  @I_vARRIVDTE = case  when @I_vARRIVDTE is null then isnull(ARRIVDTE, @O_DUMMYDT)  else @I_vARRIVDTE  end,  @I_vARRIVTME = case  when @I_vARRIVTME is null then isnull(ARRIVTME, @O_DUMMYDT)  else @I_vARRIVTME  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then isnull(COMPDTE, @O_DUMMYDT)  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then isnull(COMPTME, @O_DUMMYDT)  else @I_vCOMPTME  end,  @LINEARRIVDTE = isnull(ARRIVDTE, ''),  @LINEARRIVTME = isnull(ARRIVTME, ''),  @LINECOMPDTE = isnull(COMPDTE, ''),  @LINECOMPTME = isnull(COMPTME, ''),  @I_vResponse_Date = case  when @I_vResponse_Date is null then isnull(Response_Date, @O_DUMMYDT)  else @I_vResponse_Date  end,  @I_vResponse_Time = case  when @I_vResponse_Time is null then isnull(Response_Time, @O_DUMMYDT)  else @I_vResponse_Time  end,  @I_vPRICELVL = case  when @I_vPRICELVL is null then isnull(PRICELVL, '')  else @I_vPRICELVL  end,  @I_vPYMTRMID = case  when @I_vPYMTRMID is null then isnull(PYMTRMID, '')  else @I_vPYMTRMID  end,  @I_vSLPRSNID = case  when @I_vSLPRSNID is null then isnull(SLPRSNID, '')  else @I_vSLPRSNID  end,  @I_vLABSTOTPRC = case  when @I_vLABSTOTPRC is null then isnull(LABSTOTPRC, 100)  else @I_vLABSTOTPRC  end,  @I_vLABPCT = case  when @I_vLABPCT is null then isnull(LABPCT, 100)  else @I_vLABPCT  end,  @I_vLABSTOTCST = case  when @I_vLABSTOTCST is null then isnull(LABSTOTCST, 0)  else @I_vLABSTOTCST  end,  @I_vPARSTOTPRC = case  when @I_vPARSTOTPRC is null then isnull(PARSTOTPRC, 0)  else @I_vPARSTOTPRC  end,  @I_vPARTPCT = case  when @I_vPARTPCT is null then isnull(PARTPCT, 0)  else @I_vPARTPCT  end,  @I_vPARSTOTCST = case  when @I_vPARSTOTCST is null then isnull(PARSTOTCST, 0)  else @I_vPARSTOTCST  end,  @I_vMSCSTOTPRC = case  when @I_vMSCSTOTPRC is null then isnull(MSCSTOTPRC, 0)  else @I_vMSCSTOTPRC  end,  @I_vMISCPCT = case  when @I_vMISCPCT is null then isnull(MISCPCT, 100)  else @I_vMISCPCT  end,  @I_vMISSTOTCST = case  when @I_vMISSTOTCST is null then isnull(MISSTOTCST, 0)  else @I_vMISSTOTCST  end,  @I_vTAXSCHID = case  when @I_vTAXSCHID is null then isnull(TAXSCHID, '')  else @I_vTAXSCHID  end,  @I_vTAXEXMT1 = case  when @I_vTAXEXMT1 is null then isnull(TAXEXMT1, '')  else @I_vTAXEXMT1  end,  @I_vTAXEXMT2 = case  when @I_vTAXEXMT2 is null then isnull(TAXEXMT2, '')  else @I_vTAXEXMT2  end,  @I_vPRETAXTOT = case  when @I_vPRETAXTOT is null then isnull(PRETAXTOT, 0)  else @I_vPRETAXTOT  end,  @I_vTAXAMNT = case  when @I_vTAXAMNT is null then isnull(TAXAMNT, 0)  else @I_vTAXAMNT  end,  @I_vTOTAL = case  when @I_vTOTAL is null then isnull(TOTAL, 0)  else @I_vTOTAL  end,  @I_vInvoiced_Amount = case  when @I_vInvoiced_Amount is null then isnull(Invoiced_Amount, 0)  else @I_vInvoiced_Amount  end,  @I_vMETER1 = case  when @I_vMETER1 is null then isnull(METER1, 0)  else @I_vMETER1  end,  @I_vMETER2 = case  when @I_vMETER2 is null then isnull(METER2, 0)  else @I_vMETER2  end,  @I_vMETER3 = case  when @I_vMETER3 is null then isnull(METER3, 0)  else @I_vMETER3  end,  @I_vPORDNMBR = case  when @I_vPORDNMBR is null then isnull(PORDNMBR, '')  else @I_vPORDNMBR  end,  @I_vNOTEINDX = case  when @I_vNOTEINDX is null then isnull(NOTEINDX, 0)  else @I_vNOTEINDX  end,  @I_vNOTFYFLAG = case  when @I_vNOTFYFLAG is null then isnull(NOTFYFLAG, 0)  else @I_vNOTFYFLAG  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then isnull(USERDEF1, '')  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then isnull(USERDEF2, '')  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case  when @I_vUSRDEF03 is null then isnull(USRDEF03, '')  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then isnull(USRDEF04, '')  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then isnull(USRDEF05, '')  else @I_vUSRDEF05  end,  @I_vMSTRRECTYPE = case  when @I_vMSTRRECTYPE is null then isnull(MSTRRECTYPE, 0)  else @I_vMSTRRECTYPE  end,  @I_vMSTRCALLNBR = case  when @I_vMSTRCALLNBR is null then isnull(MSTRCALLNBR, '')  else @I_vMSTRCALLNBR  end,  @I_vESCDATE = case  when @I_vESCDATE is null then isnull(ESCDATE, @O_DUMMYDT)  else @I_vESCDATE  end,  @I_vESCTIME = case  when @I_vESCTIME is null then isnull(ESCTIME, @O_DUMMYDT)  else @I_vESCTIME  end,  @I_vEscalation_Level = case  when @I_vEscalation_Level is null then isnull(Escalation_Level, 1)  else @I_vEscalation_Level  end,  @I_vSPLTTERMS = case  when @I_vSPLTTERMS is null then isnull(SPLTTERMS, '')  else @I_vSPLTTERMS  end,  @I_vCallback = case  when @I_vCallback is null then isnull(Callback, 0)  else @I_vCallback  end,  @I_vPROJCTID = case  when @I_vPROJCTID is null then isnull(PROJCTID, '')  else @I_vPROJCTID  end,  @I_vProjectRef1_1 = case  when @I_vProjectRef1_1 is null then isnull(ProjectRef1_1, '')  else @I_vProjectRef1_1  end,  @I_vProjectRef1_2 = case  when @I_vProjectRef1_2 is null then isnull(ProjectRef1_2, '')  else @I_vProjectRef1_2  end,  @I_vProjectRef1_3 = case  when @I_vProjectRef1_3 is null then isnull(ProjectRef1_3, '')  else @I_vProjectRef1_3  end,  @I_vProjectRef1_4 = case  when @I_vProjectRef1_4 is null then isnull(ProjectRef1_4, '')  else @I_vProjectRef1_4  end,  @I_vCONSTS = case  when @I_vCONSTS is null then isnull(CONSTS, 0)  when CONSTS is not null then isnull(CONSTS, 0)  else @I_vCONSTS  end,  @I_vCONTNBR = case  when @I_vCONTNBR is null then isnull(CONTNBR, '')  else @I_vCONTNBR  end,  @PREVCONTNBR = isnull(CONTNBR, ''),  @I_vSVC_Contract_Line_SEQ = case  when @I_vSVC_Contract_Line_SEQ is null then isnull(SVC_Contract_Line_SEQ, 0)  when SVC_Contract_Line_SEQ is not null then isnull(SVC_Contract_Line_SEQ, 0)  else @I_vSVC_Contract_Line_SEQ  end,  @I_vETTR = case  when @I_vETTR is null then isnull(ETTR, 0)  else @I_vETTR  end,  @I_vSVC_On_Hold = case  when @I_vSVC_On_Hold is null then isnull(SVC_On_Hold, 0)  else @I_vSVC_On_Hold  end,  @I_vPrint_to_Web = case  when @I_vPrint_to_Web is null then isnull(Print_to_Web, 0)  else @I_vPrint_to_Web  end,  @I_vMeters_1 = case  when @I_vMeters_1 is null then isnull(Meters_1, 0)  else @I_vMeters_1  end,  @I_vMeters_2 = case  when @I_vMeters_2 is null then isnull(Meters_2, 0)  else @I_vMeters_2  end,  @I_vMeters_3 = case  when @I_vMeters_3 is null then isnull(Meters_3, 0)  else @I_vMeters_3  end,  @I_vMeters_4 = case  when @I_vMeters_4 is null then isnull(Meters_4, 0)  else @I_vMeters_4  end,  @I_vMeters_5 = case  when @I_vMeters_5 is null then isnull(Meters_5, 0)  else @I_vMeters_5  end,  @I_vMeter_Internal_Uses_1 = case  when @I_vMeter_Internal_Uses_1 is null then isnull(Meter_Internal_Uses_1, 0)  else @I_vMeter_Internal_Uses_1  end,  @I_vMeter_Internal_Uses_2 = case  when @I_vMeter_Internal_Uses_2 is null then isnull(Meter_Internal_Uses_2, 0)  else @I_vMeter_Internal_Uses_2  end,  @I_vMeter_Internal_Uses_3 = case  when @I_vMeter_Internal_Uses_3 is null then isnull(Meter_Internal_Uses_3, 0)  else @I_vMeter_Internal_Uses_3  end,  @I_vMeter_Internal_Uses_4 = case  when @I_vMeter_Internal_Uses_4 is null then isnull(Meter_Internal_Uses_4, 0)  else @I_vMeter_Internal_Uses_4  end,  @I_vMeter_Internal_Uses_5 = case  when @I_vMeter_Internal_Uses_5 is null then isnull(Meter_Internal_Uses_5, 0)  else @I_vMeter_Internal_Uses_5  end,  @I_vBill_To_Customer = case  when @I_vBill_To_Customer is null then isnull(Bill_To_Customer, '')  else @I_vBill_To_Customer  end,  @I_vCURNCYID = case  when @I_vCURNCYID is null then isnull(CURNCYID, '')  else @I_vCURNCYID  end,  @I_vSVC_Bill_To_Address_Code = case  when @I_vSVC_Bill_To_Address_Code is null then isnull(SVC_Bill_To_Address_Code, '')  else @I_vSVC_Bill_To_Address_Code  end,  @I_vCURRNIDX = isnull(CURRNIDX, 0),  @EXGTBLID = isnull(EXGTBLID, ''),  @I_vDECPLACS = isnull(DECPLACS, 1),  @I_vRATECALC = isnull(RATECALC, 0),  @I_vVIEWMODE = isnull(VIEWMODE, 1),  @ISMCTRX = isnull(ISMCTRX, 0),   @O_vRATETPID = case  when @O_vRATETPID is null then isnull(RATETPID, '')  else @O_vRATETPID  end,  @O_vXCHGRATE = case  when @O_vXCHGRATE is null then isnull(XCHGRATE, 0)  else @O_vXCHGRATE  end,  @O_vEXPNDATE = case   when @O_vEXPNDATE is null then @O_DUMMYDT  else @O_vEXPNDATE  end,   @O_vEXCHDATE = case  when @O_vEXCHDATE is null then @O_DUMMYDT  else @O_vEXCHDATE  end,  @O_vEXGTBDSC = case  when @O_vEXGTBDSC is null then ''  else @O_vEXGTBDSC  end,  @O_vEXTBLSRC = case  when @O_vEXTBLSRC is null then ''  else @O_vEXTBLSRC  end,  @O_vTIME1 = case  when @O_vTIME1 is null then @O_DUMMYDT  else @O_vTIME1  end,  @I_vDENXRATE = isnull(DENXRATE, 0),  @I_vMCTRXSTT = isnull(MCTRXSTT, 0),  @I_vORIGMISSTOTCST = isnull(ORIGMISSTOTCST, 0),  @I_vORIGMSCSTOTPRC = isnull(ORIGMSCSTOTPRC, 0),  @I_vORIGLABSUBTOTCOST = isnull(ORIGLABSUBTOTCOST, 0),  @I_vORIGLABSTOTPRC = isnull(ORIGLABSTOTPRC, 0),  @I_vORIGPARSTOTCST = isnull(ORIGPARSTOTCST, 0),  @I_vORIGPARSTOTPRC = isnull(ORIGPARSTOTPRC, 0),  @I_vORIGPRETAXTOT = isnull(ORIGPRETAXTOT, 0),  @I_vORTAXAMT = isnull(ORTAXAMT, 0),  @I_vORIGTOTAL = isnull(ORIGTOTAL, 0),  @I_vOrig_Invoiced_Amount = isnull(Orig_Invoiced_Amount, 0),  @I_vSVC_FO_ID = case  when @I_vSVC_FO_ID is null then isnull(SVC_FO_ID, '')  else @I_vSVC_FO_ID  end,  @I_vSVC_Pre600 = isnull(SVC_Pre600, 0),  @I_vReplaces_1 = isnull(Replaces_1, 0),  @I_vReplaces_2 = isnull(Replaces_2, 0),  @I_vReplaces_3 = isnull(Replaces_3, 0),  @I_vReplaces_4 = isnull(Replaces_4, 0),  @I_vReplaces_5 = isnull(Replaces_5, 0)   from SVC00200 (nolock)   where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR  if (@Line_Seq_Exists=1) and (@I_vUpdateIfExists = 0)  begin  select @O_iErrorState = 1442    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@Line_Seq_Exists=0)  begin  select @O_vSRVSTAT = case   when @I_vSRVSTAT is null then ''  else @I_vSRVSTAT  end,  @I_vSRVTYPE = case  when @I_vSRVTYPE is null then ''  else @I_vSRVTYPE  end,  @I_vSVCDESCR = case  when @I_vSVCDESCR is null then ''  else @I_vSVCDESCR  end,  @I_vpriorityLevel = case  when @I_vpriorityLevel is null then 0  else @I_vpriorityLevel  end,  @I_vCUSTNMBR = case  when @I_vCUSTNMBR is null then ''  else @I_vCUSTNMBR  end,  @I_vCustomer_Reference = case   when @I_vCustomer_Reference is null then ''  else @I_vCustomer_Reference  end,  @I_vADRSCODE = case  when @I_vADRSCODE is null then ''  else @I_vADRSCODE  end,  @I_vCUSTNAME = case  when @I_vCUSTNAME is null then ''  else @I_vCUSTNAME  end,  @I_vADDRESS1 = case  when @I_vADDRESS1 is null then ''  else @I_vADDRESS1  end,  @I_vADDRESS2 = case  when @I_vADDRESS2 is null then ''  else @I_vADDRESS2  end,  @I_vADDRESS3 = case  when @I_vADDRESS3 is null then ''  else @I_vADDRESS3  end,  @I_vCITY = case   when @I_vCITY is null then ''  else @I_vCITY  end,  @I_vSTATE = case  when @I_vSTATE is null then ''  else @I_vSTATE  end,  @I_vZIP = case  when @I_vZIP is null then ''  else @I_vZIP  end,  @I_vCOUNTRY = case  when @I_vCOUNTRY is null then ''  else @I_vCOUNTRY  end,  @I_vCNTCPRSN = case  when @I_vCNTCPRSN is null then ''  else @I_vCNTCPRSN  end,  @I_vPHONE1 = case  when @I_vPHONE1 is null then ''  else @I_vPHONE1  end,  @I_vOFFID = case  when @I_vOFFID is null then ''  else @I_vOFFID  end,  @I_vSVCAREA = case  when @I_vSVCAREA is null then ''  else @I_vSVCAREA  end,  @I_vTECHID = case  when @I_vTECHID is null then ''  else @I_vTECHID  end,  @I_vTIMEZONE = case  when @I_vTIMEZONE is null then ''  else @I_vTIMEZONE  end,  @I_vENTDTE = case  when @I_vENTDTE is null then @O_DUMMYDT  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then @O_DUMMYDT  else @I_vENTTME  end,  @I_vNotify_Date = case  when @I_vNotify_Date is null then @O_DUMMYDT  else @I_vNotify_Date  end,  @I_vNotify_Time = case  when @I_vNotify_Time is null then @O_DUMMYDT  else @I_vNotify_Time  end,  @I_vETADTE = case  when @I_vETADTE is null then @O_DUMMYDT  else @I_vETADTE  end,  @I_vETATME = case  when @I_vETATME is null then @O_DUMMYDT  else @I_vETATME  end,  @I_vDISPDTE = case  when @I_vDISPDTE is null then @O_DUMMYDT  else @I_vDISPDTE  end,  @I_vDISPTME = case  when @I_vDISPTME is null then @O_DUMMYDT  else @I_vDISPTME  end,  @I_vARRIVDTE = case  when @I_vARRIVDTE is null then @O_DUMMYDT  else @I_vARRIVDTE  end,  @I_vARRIVTME = case  when @I_vARRIVTME is null then @O_DUMMYDT  else @I_vARRIVTME  end,  @I_vCOMPDTE = case  when @I_vCOMPDTE is null then @O_DUMMYDT  else @I_vCOMPDTE  end,  @I_vCOMPTME = case  when @I_vCOMPTME is null then @O_DUMMYDT  else @I_vCOMPTME  end,  @I_vResponse_Date = case  when @I_vResponse_Date is null then @O_DUMMYDT  else @I_vResponse_Date  end,  @I_vResponse_Time = case  when @I_vResponse_Time is null then @O_DUMMYDT  else @I_vResponse_Time  end,  @I_vPRICELVL = case  when @I_vPRICELVL is null then ''  else @I_vPRICELVL  end,  @I_vPYMTRMID = case  when @I_vPYMTRMID is null then ''  else @I_vPYMTRMID  end,  @I_vSLPRSNID = case  when @I_vSLPRSNID is null then ''  else @I_vSLPRSNID  end,  @I_vLABSTOTPRC = case  when @I_vLABSTOTPRC is null then 100  else @I_vLABSTOTPRC  end,  @I_vLABPCT = case  when @I_vLABPCT is null then 100  else @I_vLABPCT  end,  @I_vLABSTOTCST = case  when @I_vLABSTOTCST is null then 0  else @I_vLABSTOTCST  end,  @I_vPARSTOTPRC = case  when @I_vPARSTOTPRC is null then 0  else @I_vPARSTOTPRC  end,  @I_vPARTPCT = case  when @I_vPARTPCT is null then 0  else @I_vPARTPCT  end,  @I_vPARSTOTCST = case  when @I_vPARSTOTCST is null then 0  else @I_vPARSTOTCST  end,  @I_vMSCSTOTPRC = case  when @I_vMSCSTOTPRC is null then 0  else @I_vMSCSTOTPRC  end,  @I_vMISCPCT = case  when @I_vMISCPCT is null then 100  else @I_vMISCPCT  end,  @I_vMISSTOTCST = case  when @I_vMISSTOTCST is null then 0  else @I_vMISSTOTCST  end,  @I_vTAXSCHID = case  when @I_vTAXSCHID is null then ''  else @I_vTAXSCHID  end,  @I_vTAXEXMT1 = case  when @I_vTAXEXMT1 is null then ''  else @I_vTAXEXMT1  end,  @I_vTAXEXMT2 = case  when @I_vTAXEXMT2 is null then ''  else @I_vTAXEXMT2  end,  @I_vPRETAXTOT = case  when @I_vPRETAXTOT is null then 0  else @I_vPRETAXTOT  end,  @I_vTAXAMNT = case  when @I_vTAXAMNT is null then 0  else @I_vTAXAMNT  end,  @I_vTOTAL = case  when @I_vTOTAL is null then 0  else @I_vTOTAL  end,  @I_vInvoiced_Amount = case  when @I_vInvoiced_Amount is null then 0  else @I_vInvoiced_Amount  end,  @I_vMETER1 = case  when @I_vMETER1 is null then 0  else @I_vMETER1  end,  @I_vMETER2 = case  when @I_vMETER2 is null then 0  else @I_vMETER2  end,  @I_vMETER3 = case  when @I_vMETER3 is null then 0  else @I_vMETER3  end,  @I_vPORDNMBR = case  when @I_vPORDNMBR is null then ''  else @I_vPORDNMBR  end,  @I_vNOTEINDX = case  when @I_vNOTEINDX is null then 0  else @I_vNOTEINDX  end,  @I_vNOTFYFLAG = case  when @I_vNOTFYFLAG is null then 0  else @I_vNOTFYFLAG  end,  @I_vUSERDEF1 = case  when @I_vUSERDEF1 is null then ''  else @I_vUSERDEF1  end,  @I_vUSERDEF2 = case  when @I_vUSERDEF2 is null then ''  else @I_vUSERDEF2  end,  @I_vUSRDEF03 = case  when @I_vUSRDEF03 is null then ''  else @I_vUSRDEF03  end,  @I_vUSRDEF04 = case  when @I_vUSRDEF04 is null then ''  else @I_vUSRDEF04  end,  @I_vUSRDEF05 = case  when @I_vUSRDEF05 is null then ''  else @I_vUSRDEF05  end,  @I_vMSTRRECTYPE = case  when @I_vMSTRRECTYPE is null then 0  else @I_vMSTRRECTYPE  end,  @I_vMSTRCALLNBR = case  when @I_vMSTRCALLNBR is null then ''  else @I_vMSTRCALLNBR  end,  @I_vESCDATE = case  when @I_vESCDATE is null then @O_DUMMYDT  else @I_vESCDATE  end,  @I_vESCTIME = case  when @I_vESCTIME is null then @O_DUMMYDT  else @I_vESCTIME  end,  @I_vEscalation_Level = case  when @I_vEscalation_Level is null then 1  else @I_vEscalation_Level  end,  @I_vSPLTTERMS = case  when @I_vSPLTTERMS is null then ''  else @I_vSPLTTERMS  end,  @I_vCallback = case  when @I_vCallback is null then 0  else @I_vCallback  end,  @I_vPROJCTID = case  when @I_vPROJCTID is null then ''  else @I_vPROJCTID  end,  @I_vProjectRef1_1 = case  when @I_vProjectRef1_1 is null then ''  else @I_vProjectRef1_1  end,  @I_vProjectRef1_2 = case  when @I_vProjectRef1_2 is null then ''  else @I_vProjectRef1_2  end,  @I_vProjectRef1_3 = case  when @I_vProjectRef1_3 is null then ''  else @I_vProjectRef1_3  end,  @I_vProjectRef1_4 = case  when @I_vProjectRef1_4 is null then ''  else @I_vProjectRef1_4  end,  @I_vCONSTS = case  when @I_vCONSTS is null then 0  else @I_vCONSTS  end,  @I_vCONTNBR = case  when @I_vCONTNBR is null then ''  else @I_vCONTNBR  end,  @I_vSVC_Contract_Line_SEQ = case  when @I_vSVC_Contract_Line_SEQ is null then 0  else @I_vSVC_Contract_Line_SEQ  end,  @I_vETTR = case  when @I_vETTR is null then 0  else @I_vETTR  end,  @I_vSVC_On_Hold = case  when @I_vSVC_On_Hold is null then 0  else @I_vSVC_On_Hold  end,  @I_vPrint_to_Web = case  when @I_vPrint_to_Web is null then 0  else @I_vPrint_to_Web  end,  @I_vMeters_1 = case  when @I_vMeters_1 is null then 0  else @I_vMeters_1  end,  @I_vMeters_2 = case  when @I_vMeters_2 is null then 0  else @I_vMeters_2  end,  @I_vMeters_3 = case  when @I_vMeters_3 is null then 0  else @I_vMeters_3  end,  @I_vMeters_4 = case  when @I_vMeters_4 is null then 0  else @I_vMeters_4  end,  @I_vMeters_5 = case  when @I_vMeters_5 is null then 0  else @I_vMeters_5  end,  @I_vMeter_Internal_Uses_1 = case  when @I_vMeter_Internal_Uses_1 is null then 0  else @I_vMeter_Internal_Uses_1  end,  @I_vMeter_Internal_Uses_2 = case  when @I_vMeter_Internal_Uses_2 is null then 0  else @I_vMeter_Internal_Uses_2  end,  @I_vMeter_Internal_Uses_3 = case  when @I_vMeter_Internal_Uses_3 is null then 0  else @I_vMeter_Internal_Uses_3  end,  @I_vMeter_Internal_Uses_4 = case  when @I_vMeter_Internal_Uses_4 is null then 0  else @I_vMeter_Internal_Uses_4  end,  @I_vMeter_Internal_Uses_5 = case  when @I_vMeter_Internal_Uses_5 is null then 0  else @I_vMeter_Internal_Uses_5  end,  @I_vBill_To_Customer = case  when @I_vBill_To_Customer is null then ''  else @I_vBill_To_Customer  end,  @I_vCURNCYID = case  when @I_vCURNCYID is null then ''  else @I_vCURNCYID  end,  @I_vSVC_Bill_To_Address_Code = case  when @I_vSVC_Bill_To_Address_Code is null then ''  else @I_vSVC_Bill_To_Address_Code  end,  @O_vRATETPID = case  when @O_vRATETPID is null then ''  else @O_vRATETPID  end,  @O_vXCHGRATE = case  when @O_vXCHGRATE is null then 0  else @O_vXCHGRATE  end,  @O_vEXPNDATE = case   when @O_vEXPNDATE is null then @O_DUMMYDT  else @O_vEXPNDATE  end,   @O_vEXCHDATE = case  when @O_vEXCHDATE is null then @O_DUMMYDT  else @O_vEXCHDATE  end,  @O_vEXGTBDSC = case  when @O_vEXGTBDSC is null then ''  else @O_vEXGTBDSC  end,  @O_vEXTBLSRC = case  when @O_vEXTBLSRC is null then ''  else @O_vEXTBLSRC  end,  @O_vTIME1 = case  when @O_vTIME1 is null then @O_DUMMYDT  else @O_vTIME1  end,  @I_vSVC_FO_ID = case  when @I_vSVC_FO_ID is null then ''  else @I_vSVC_FO_ID  end   select @ENTDTE = case  when (@I_vENTDTE is null or @I_vENTDTE = '' or @I_vENTDTE = @O_DUMMYDT) then @O_TODAY  else @I_vENTDTE  end,  @ENTTME = case   when @I_vENTTME is null then @O_NOW  else @I_vENTTME  end   select @ETADTE = case   when (@I_vETADTE is null or @I_vETADTE = '' or @I_vETADTE = @O_DUMMYDT) then @ENTDTE  else @I_vETADTE  end,  @ETATME = case   when @I_vETATME is null then @ENTTME  else @I_vETATME  end  if ((@ENTDTE + ' ' + @ENTTME) > (@ETADTE + ' ' + @ETATME))  select @ENTDTE = @ETADTE,  @ENTTME = @ETATME  select @I_vENTDTE = case  when @I_vENTDTE is null then @ENTDTE  else @I_vENTDTE  end,  @I_vENTTME = case  when @I_vENTTME is null then @ENTTME  else @I_vENTTME  end,  @I_vETADTE = case  when @I_vETADTE is null then @ETADTE  else @I_vETADTE  end,  @I_vETATME = case  when @I_vETATME is null then @ETATME  else @I_vETATME  end end  if @I_vCUSTNMBR <> '' begin  select  @CUSTNMBR=isnull(CUSTNMBR,''),  @HOLD=isnull(HOLD,0),  @INACTIVE=isnull(INACTIVE,0),  @PYMTRMID=isnull(PYMTRMID,''),  @NAME=isnull(CUSTNAME,''),  @ADRSCODE=isnull(ADRSCODE,''),  @SLPRSNID=isnull(SLPRSNID,''),  @I_vTAXEXMT1=isnull(TAXEXMT1,0),  @I_vTAXEXMT2=isnull(TAXEXMT2,''),  @PRBTADCD=isnull(PRBTADCD,''),  @CURNCYID=isnull(CURNCYID,''),  @RATETPID=isnull(RATETPID,''),  @CUSTPRICELVL = isnull(PRCLEVEL, '')  from RM00101 (nolock) where CUSTNMBR=@I_vCUSTNMBR   if (@CUSTNMBR='')  begin  select @O_iErrorState = 1443    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCKHOLD = 0) and (@HOLD=1)  begin  select @O_iErrorState = 1444    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else if (@I_vCKHOLD = 1) and (@HOLD=1)  begin  set @I_vSVC_On_Hold = 1  end   if (@INACTIVE=1)  begin   select @O_iErrorState = 1445    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCUSTNAME =   case  when @I_vCUSTNAME = '' then @NAME   else  @I_vCUSTNAME  end,  @I_vADRSCODE =   case  when @I_vADRSCODE = '' and @I_vADDRESS1 = '' and @I_vADDRESS2 = '' and @I_vADDRESS3 = '' and @I_vCITY = '' and @I_vSTATE = ''  and @I_vZIP = '' and @I_vCOUNTRY = ''then @ADRSCODE   else  @I_vADRSCODE  end,  @I_vSLPRSNID =   case  when @I_vSLPRSNID = '' then @SLPRSNID   else  @I_vSLPRSNID  end,  @I_vPYMTRMID =   case  when @I_vPYMTRMID = '' then @PYMTRMID   else  @I_vPYMTRMID  end,  @I_vCURNCYID =   case  when @I_vCURNCYID = '' then @CURNCYID   else  @I_vCURNCYID  end,  @O_vRATETPID =   case  when @O_vRATETPID = '' then @RATETPID   else  @O_vRATETPID  end,  @I_vBill_To_Customer = @I_vCUSTNMBR,  @I_vSVC_Bill_To_Address_Code = @PRBTADCD end  if (@I_vADRSCODE <> '') begin  select  @ADRSCODE=''   if (@I_vADDRESS1 = '' and @I_vADDRESS2 = '' and @I_vADDRESS3 = '' and @I_vCITY = '' and @I_vSTATE = ''  and @I_vZIP = '' and @I_vCOUNTRY = '')  begin  select  @ADRSCODE=isnull(ADRSCODE,''),  @I_vADDRESS1=isnull(ADDRESS1,''),  @I_vADDRESS2=isnull(ADDRESS2,''),  @I_vADDRESS3=isnull(ADDRESS3,''),  @I_vCOUNTRY=isnull(COUNTRY,''),  @I_vCITY=isnull(CITY,''),  @I_vSTATE=isnull(STATE,''),  @I_vZIP=isnull(ZIP,''),  @I_vTAXSCHID=isnull(TAXSCHID,''),  @CNTCPRSN=isnull(CNTCPRSN,0),  @PHONE1=isnull(PHONE1,'')  from RM00102 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if (@ADRSCODE='')  begin  select @O_iErrorState = 1446    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCNTCPRSN =   case  when @I_vCNTCPRSN = '' then @CNTCPRSN   else  @I_vCNTCPRSN  end,  @I_vPHONE1 =   case  when @I_vPHONE1 = '' then @PHONE1   else  @I_vPHONE1   end  end  else  begin  select  @ADRSCODE=isnull(ADRSCODE,''),  @I_vTAXSCHID=isnull(TAXSCHID,''),  @CNTCPRSN=isnull(CNTCPRSN,0),  @PHONE1=isnull(PHONE1,'')  from RM00102 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE   if (@ADRSCODE='')  begin  select @O_iErrorState = 5400    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @I_vCNTCPRSN =   case  when @I_vCNTCPRSN = '' then @CNTCPRSN   else  @I_vCNTCPRSN  end,  @I_vPHONE1 =   case  when @I_vPHONE1 = '' then @PHONE1   else  @I_vPHONE1   end   end end  select TOP 1 @EQUIPID = isnull(EQUIPID, 0),  @ITEMNMBR = isnull(ITEMNMBR, '')  from SVC00201 (nolock) where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR and ITEMNMBR <> '' and EQUIPID >= 0  if (@I_vCONTNBR = '') begin  if (@ITEMNMBR <> '')  begin  select TOP 1 @I_vCONTNBR = isnull(CONTNBR,''), @I_vSVC_Contract_Line_SEQ = isnull(LNSEQNBR, 0) from SVC00601 (nolock)   where CONSTS = 2 and Contract_Line_Status <> 'E'  and ITEMNMBR = @ITEMNMBR and ((@EQUIPID = 0 and (EQUIPID = @EQUIPID or EQUIPID <> 0)) or (EQUIPID = @EQUIPID))  and STRTDATE <= @I_vENTDTE and ENDDATE >= @I_vENTDTE  and CUSTNMBR = @I_vCUSTNMBR and (ADRSCODE = @I_vADRSCODE OR ADRSCODE = '')  if (@@error <> 0)  begin  select @O_iErrorState = 8961      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@I_vCONTNBR = '' or @I_vSVC_Contract_Line_SEQ = 0)  begin  set @I_vCONTNBR = ''  set @I_vSVC_Contract_Line_SEQ = 0  end  end end  if (@ITEMNMBR = '' and @I_vCONTNBR <> '' and rtrim(@I_vCONTNBR) <> '.')  begin  select @O_iErrorState = 9851     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vCONTNBR <> '' and rtrim(@I_vCONTNBR) <> '.')   begin   if (not exists(select 1 from SVC00600 (nolock) where CUSTNMBR = @I_vCUSTNMBR and CONSTS = 2 and CONTNBR = @I_vCONTNBR))  begin  select @O_iErrorState = 1489     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   set @iValueExists = 0  if (@EQUIPID = 0)  select @iValueExists = 1 from SVC00601 (nolock) where CUSTNMBR = @I_vCUSTNMBR and CONSTS = 2 and CONTNBR = @I_vCONTNBR and ITEMNMBR = @ITEMNMBR  else  select @iValueExists = 1 from SVC00601 (nolock) where CUSTNMBR = @I_vCUSTNMBR and CONSTS = 2 and CONTNBR = @I_vCONTNBR and EQUIPID = @EQUIPID and ITEMNMBR = @ITEMNMBR  if (@iValueExists <> 1)  begin  select @O_iErrorState = 9852     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (exists (select 1 from SVC00608 (nolock) where CUSTNMBR = @I_vCUSTNMBR and CONSTS = 2 and CONTNBR = @I_vCONTNBR and ADRSCODE = @I_vADRSCODE and Cover_All = 1))  begin  select  @I_vTAXEXMT1=isnull(TAXEXMT1,0),  @I_vTAXSCHID=isnull(TAXSCHID,''),  @I_vCURNCYID =   case  when @I_vCURNCYID = '' then @CURNCYID   else  @I_vCURNCYID  end,  @I_vBill_To_Customer = @I_vCUSTNMBR,  @I_vSRVTYPE=  case   when @I_vSRVTYPE = '' then isnull(SRVTYPE,'')  else  @I_vSRVTYPE  end,  @I_vLABPCT = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vLABPCT = 0 then isnull(LABPCT,0)  else @I_vLABPCT  end,  @I_vPARTPCT = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vPARTPCT = 0 then isnull(PARTPCT,0)  else @I_vPARTPCT  end,  @I_vMISCPCT = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vMISCPCT = 0 then isnull(MISCPCT,0)  else @I_vMISCPCT  end,  @I_vpriorityLevel = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vpriorityLevel < 0 then isnull(priorityLevel,99)  else @I_vpriorityLevel  end,  @I_vPORDNMBR = case  when @I_vPORDNMBR = '' then isnull(PORDNMBR,'')  else @I_vPORDNMBR  end  from SVC00608 (nolock)   where CUSTNMBR = @I_vCUSTNMBR and CONSTS = 2 and CONTNBR = @I_vCONTNBR and ADRSCODE = @I_vADRSCODE and Cover_All = 1  end  else   begin  select  @I_vTAXEXMT1=isnull(TAXEXMT1,0),  @I_vTAXSCHID=isnull(TAXSCHID,''),  @I_vCURNCYID =   case  when @I_vCURNCYID = '' then @CURNCYID   else  @I_vCURNCYID  end,  @I_vBill_To_Customer = @I_vCUSTNMBR,  @I_vSRVTYPE=  case   when @I_vSRVTYPE = '' then isnull(SRVTYPE,'')  else  @I_vSRVTYPE  end,  @I_vLABPCT = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vLABPCT = 0 then isnull(LABPCT,0)  else @I_vLABPCT  end,  @I_vPARTPCT = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vPARTPCT = 0 then isnull(PARTPCT,0)  else @I_vPARTPCT  end,  @I_vMISCPCT = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vMISCPCT = 0 then isnull(MISCPCT,0)  else @I_vMISCPCT  end,  @I_vpriorityLevel = case  when @PREVCONTNBR <> @I_vCONTNBR or @I_vpriorityLevel < 0 then isnull(priorityLevel,99)  else @I_vpriorityLevel  end,  @I_vPORDNMBR = case  when @I_vPORDNMBR = '' then isnull(PORDNMBR,'')  else @I_vPORDNMBR  end  from SVC00600 (nolock)   where CUSTNMBR = @I_vCUSTNMBR and CONSTS = 2 and CONTNBR = @I_vCONTNBR   if (@ITEMNMBR <> '')  begin  set @iValueExists = 0  select TOP 1 @iValueExists = 1,  @I_vLABPCT = case  when LABPCT is not null then isnull(LABPCT,0)  else @I_vLABPCT  end,  @I_vPARTPCT = case  when PARTPCT is not null then isnull(PARTPCT,0)  else @I_vPARTPCT  end,  @I_vMISCPCT = case  when MISCPCT is not null then isnull(MISCPCT,0)  else @I_vMISCPCT  end,  @I_vpriorityLevel = case  when priorityLevel is not null and priorityLevel <> 0 then isnull(priorityLevel,99)  else @I_vpriorityLevel  end  from SVC00601 (nolock)   where CONSTS = 2 and CONTNBR = @I_vCONTNBR and LNSEQNBR = @I_vSVC_Contract_Line_SEQ  end  end end else begin  select  @I_vLABPCT  = 100,  @I_vPARTPCT  = 100,  @I_vMISCPCT  = 100,  @I_vpriorityLevel =   case  when @I_vpriorityLevel < 0 then 99  else  @I_vpriorityLevel  end,  @I_vCONTNBR = '' end  select @I_vSVCAREA =  case  when @I_vSVCAREA = ''  then isnull(SVCAREA, '')  else @I_vSVCAREA  end,  @I_vOFFID=  case  when @I_vOFFID = ''  then isnull(OFFID, '')  else @I_vOFFID  end,  @I_vTECHID=  case  when @I_vTECHID = ''  then isnull(TECHID, '')  else @I_vTECHID  end,  @I_vSRVTYPE=  case  when @I_vSRVTYPE = ''  then isnull(SRVTYPE, '')  else @I_vSRVTYPE  end,  @I_vTIMEZONE=  case  when @I_vTIMEZONE = ''  then isnull(TIMEZONE, '')  else @I_vTIMEZONE  end  from SVC00950 (nolock) where CUSTNMBR=@I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE  select  @I_vSRVTYPE =  case  when @I_vSRVTYPE = ''  then isnull(SRVTYPE, '')  else @I_vSRVTYPE  end,  @I_vTIMEZONE =  case  when @I_vTIMEZONE = ''  then isnull(TIMEZONE, '')  else @I_vTIMEZONE  end,  @DEFPRICELVL = isnull(PRCLEVEL, ''),  @Backorder_Status = isnull(Backorder_Status, ''),  @Intransit_Status = isnull(Intransit_Status, ''),  @Dispatch_Status = isnull(Dispatch_Status, ''),  @Arrival_Status = isnull(Arrival_Status, ''),  @Complete_Status = isnull(Complete_Status, ''),  @SRVSTAT = isnull(SRVSTAT, ''),  @POSTAT = isnull(POSTAT, ''),  @iDefAutoCreateLabor = isnull(SVC_Auto_Create_Labor, 3)  from SVC00998 (nolock)  select @RMPRICELVL = isnull(PRCLEVEL,'') from RM40101 (nolock)  if (@I_vPRICELVL = '') begin  select @PRICELVL = case  when @PRICELVL is null then ''  else @PRICELVL  end   if (@I_vPRICELVL = '' and @CUSTPRICELVL <> '') and exists(select 1 from IV40800 (nolock) where PRCLEVEL = @CUSTPRICELVL)  begin  set @I_vPRICELVL = @CUSTPRICELVL  end   if (@I_vPRICELVL = '' and @RMPRICELVL <> '') and exists(select 1 from IV40800 (nolock) where PRCLEVEL = @RMPRICELVL)  begin  set @I_vPRICELVL = @RMPRICELVL  end   if (@I_vPRICELVL = '' and @DEFPRICELVL <> '') and exists(select 1 from IV40800 (nolock) where PRCLEVEL = @DEFPRICELVL)  begin  set @I_vPRICELVL = @DEFPRICELVL  end end else  begin  if not exists(select 1 from IV40800 where PRCLEVEL = @I_vPRICELVL)  begin  set @O_iErrorState = 8942     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if exists (select 1 from SVC00207 where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR) begin  select @MultiTechExists = 1 end  if (@I_vSRVTYPE = '')  set @I_vSRVTYPE = @SRVTYPE  if (@I_vSRVTYPE <> '') begin  select @SRVTYPE=isnull(SRVTYPE,''),  @TECHID=isnull(TECHID,''),  @SVC_Sales_Only=isnull(SVC_Sales_Only,0),  @LaborItem = isnull(LABITMST, ''),  @TravelLaborItem = case  when Travel_Labor_Item = '' then isnull(LABITMST, '')  else isnull(Travel_Labor_Item, '')  end  from SVC00920 (nolock) where SRVTYPE = @I_vSRVTYPE  if (@SRVTYPE='')  begin  select @O_iErrorState = 1447     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  if ((@I_vTECHID = '') and (@MultiTechExists = 0))  select @I_vTECHID = @TECHID   if (@SVC_Sales_Only=1)  select @I_vPARTPCT = 100  end end  if (@I_vAutoCreateLabor = 1) and (@LaborItem <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @LaborItemUOFM = isnull(SELNGUOM, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@LaborItem)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 9903     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vAutoCreateLabor = 1) and (@TravelLaborItem <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @TravelLaborItemUOFM = isnull(SELNGUOM, '')  from IV00101 (nolock) where ITEMNMBR=rtrim(@TravelLaborItem)  if (@iValueExists <> 1)  begin  set @O_iErrorState = 8943     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vPYMTRMID <> '') begin  if (not exists(select 1 from SY03300 a (nolock) where a.PYMTRMID = @I_vPYMTRMID))  begin  select @O_iErrorState = 1449      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @I_vPYMTRMID = @PYMTRMID end  if (@I_vTIMEZONE <> '') begin  if (not exists(select 1 from SVC00900 (nolock) where TIMEZONE = @I_vTIMEZONE))  begin  select @O_iErrorState = 1450      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vENTDTE = '')  select @I_vENTDTE = convert(varchar(12),getdate())  if (@I_vENTTME = '')  select @I_vENTTME = getdate()- convert(char(12),getdate(),12)  if not (datepart(day,@I_vENTTME) = 1 and datepart(month,@I_vENTTME) = 1 and datepart(year,@I_vENTTME) = 1900) begin  select @O_iErrorState = 1478      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if not (datepart(hour,@I_vENTDTE) = 0 and datepart(minute,@I_vENTDTE) = 0 and datepart(second,@I_vENTDTE) = 0   and datepart(millisecond,@I_vENTDTE) = 0) begin  select @O_iErrorState = 1479      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vETADTE <> '') begin  if not (datepart(day,@I_vETATME) = 1 and datepart(month,@I_vETATME) = 1 and datepart(year,@I_vETATME) = 1900)  begin  select @O_iErrorState = 1480     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vETADTE) = 0 and datepart(minute,@I_vETADTE) = 0 and datepart(second,@I_vETADTE) = 0   and datepart(millisecond,@I_vETADTE) = 0)  begin  select @O_iErrorState = 1481     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vETADTE < @I_vENTDTE)  begin  select @O_iErrorState = 1451      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vETADTE <= @I_vENTDTE) and (@I_vETATME < @I_vENTTME) )  begin  select @O_iErrorState = 1452      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @I_vETADTE=@I_vENTDTE, @I_vETATME=@I_vENTTME end  if (@I_vDISPDTE <> '') begin   if not (datepart(day,@I_vDISPTME) = 1 and datepart(month,@I_vDISPTME) = 1 and datepart(year,@I_vDISPTME) = 1900)  begin  select @O_iErrorState = 1482      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vDISPDTE) = 0 and datepart(minute,@I_vDISPDTE) = 0 and datepart(second,@I_vDISPDTE) = 0   and datepart(millisecond,@I_vDISPDTE) = 0)  begin  select @O_iErrorState = 1483      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vDISPDTE < @I_vENTDTE)  begin  select @O_iErrorState = 1453      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vDISPDTE = @I_vENTDTE) and (@I_vDISPTME < @I_vENTTME) )  begin  select @O_iErrorState = 1454      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @SRVSTAT = @Dispatch_Status end  if (((@I_vDISPDTE <> '') or (@I_vDISPTME <> '')) and (@I_vSRVRECTYPE = 1)) begin  select @O_iErrorState = 1455      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vARRIVDTE <> '') begin  if not (datepart(day,@I_vARRIVTME) = 1 and datepart(month,@I_vARRIVTME) = 1 and datepart(year,@I_vARRIVTME) = 1900)  begin  select @O_iErrorState = 1484      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vARRIVDTE) = 0 and datepart(minute,@I_vARRIVDTE) = 0 and datepart(second,@I_vARRIVDTE) = 0   and datepart(millisecond,@I_vARRIVDTE) = 0)  begin  select @O_iErrorState = 1485      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vARRIVDTE < @I_vDISPDTE)  begin  if (@O_ENTARRIVDTE <> @O_DUMMYDT)  begin  select @O_iErrorState = 1456      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  if ((@I_vARRIVDTE <= @I_vDISPDTE) and (@I_vARRIVTME < @I_vDISPTME) )  begin  if (@O_ENTARRIVDTE <> @O_DUMMYDT)  begin  select @O_iErrorState = 1457       exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @SRVSTAT = @Arrival_Status end  if (((@I_vARRIVDTE <> '') or (@I_vARRIVTME <> '')) and (@I_vSRVRECTYPE = 1)) begin  select @O_iErrorState = 1458      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vCOMPDTE <> '') begin  if not (datepart(day,@I_vCOMPTME) = 1 and datepart(month,@I_vCOMPTME) = 1 and datepart(year,@I_vCOMPTME) = 1900)  begin  select @O_iErrorState = 1721      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vCOMPDTE) = 0 and datepart(minute,@I_vCOMPDTE) = 0 and datepart(second,@I_vCOMPDTE) = 0   and datepart(millisecond,@I_vCOMPDTE) = 0)  begin  select @O_iErrorState = 1722      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vCOMPDTE < @I_vARRIVDTE)  begin  select @O_iErrorState = 1459      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((@I_vCOMPDTE <= @I_vARRIVDTE) and (@I_vCOMPTME < @I_vARRIVTME) )  begin  select @O_iErrorState = 1460      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @SRVSTAT = @Complete_Status end  if (((@I_vCOMPDTE <> '') or (@I_vCOMPTME <> '')) and (@I_vSRVRECTYPE = 1)) begin  select @O_iErrorState = 1461      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (((@I_vCOMPDTE <> '') or (@I_vCOMPTME <> '')) and ((@I_vSRVSTAT = @Backorder_Status) or (@I_vSRVSTAT = @Intransit_Status) or (@I_vSRVSTAT = @POSTAT))) begin  select @O_iErrorState = 1488      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vResponse_Date <> '') begin  if not (datepart(day,@I_vResponse_Time) = 1 and datepart(month,@I_vResponse_Time) = 1 and datepart(year,@I_vResponse_Time) = 1900)  begin  select @O_iErrorState = 1486      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if not (datepart(hour,@I_vResponse_Date) = 0 and datepart(minute,@I_vResponse_Date) = 0 and datepart(second,@I_vResponse_Date) = 0   and datepart(millisecond,@I_vResponse_Date) = 0)  begin  select @O_iErrorState = 1487      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if exists(select 1 from SVC00203 where CALLNBR = @I_vCALLNBR and SRVRECTYPE = @I_vSRVRECTYPE and LINITMTYP = 'P' and ITEMUSETYPE <> 'R' and SRVSTAT = @Backorder_Status) begin  select @SRVSTAT = @Backorder_Status  if (@I_vCOMPDTE <> '' or @I_vSRVSTAT = @Complete_Status)  begin  select @O_iErrorState = 8954     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @I_vSRVSTAT = case   when (@I_vSRVSTAT is null or @I_vSRVSTAT = '') and (@O_vSRVSTAT = '' or @O_vSRVSTAT <> @Complete_Status) and (@SRVSTAT = @Backorder_Status) then @SRVSTAT  when (@I_vSRVSTAT is null or @I_vSRVSTAT = '') and @SRVSTAT <> '' and (@SRVSTAT = @Complete_Status or @SRVSTAT = @Arrival_Status or @SRVSTAT = @Dispatch_Status) then @SRVSTAT  when (@I_vSRVSTAT is null or @I_vSRVSTAT = '') and @O_vSRVSTAT <> '' then @O_vSRVSTAT  when (@I_vSRVSTAT is null or @I_vSRVSTAT = '') and @SRVSTAT <> '' then @SRVSTAT  else isnull(@I_vSRVSTAT, @SRVSTAT)  end  if (@I_vCOMPDTE = '' and @I_vSRVSTAT = @Complete_Status) begin  select @O_iErrorState = 8955     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if @I_vSRVSTAT <> '' begin  if not exists(select 1 from SVC00913 (nolock) where SRVSTAT = @I_vSRVSTAT)  begin  select @O_iErrorState = 1448     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vSVC_On_Hold <> 0 and @I_vSVC_On_Hold <> 1) begin  select @O_iErrorState = 1462     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vTECHID <> '') begin  set @iValueExists = 0  select @iValueExists = 1,   @TECHID=isnull(TECHID,''),  @TECHSTAT=isnull(TECHSTAT,''),  @LaborItemLocation = isnull(LOCNCODE, '')  from SVC00100 (nolock) where TECHID = @I_vTECHID  if (@iValueExists <> 1)  begin  select @O_iErrorState = 1464     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @Tech_Available=isnull(Tech_Available,0) from SVC00905 (nolock) where TECHSTAT = @TECHSTAT  if (@Tech_Available=0)  begin  select @O_iErrorState = 1491     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vOFFID = '')  select @I_vOFFID = isnull(OFFID,'') from SVC00100 (nolock) where TECHID = @I_vTECHID end  if (@MultiTechExists = 1) and (@I_vTECHID <> '') begin  select @O_iErrorState = 11426     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vOFFID <> '') begin  set @iValueExists = 0  select @iValueExists = 1, @LaborItemLocation = case   when @LaborItemLocation = '' then isnull(LOCNCODE, '')  else @LaborItemLocation  end  from SVC00902 (nolock) where OFFID = @I_vOFFID   if (@iValueExists <> 1)  begin  select @O_iErrorState = 1463     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vSVCAREA <> '') begin  if (not exists(select 1 from SVC00909 (nolock) where SVCAREA = @I_vSVCAREA))  begin  select @O_iErrorState = 1465     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @AuditLNITMSEQ = count(CALLNBR) + 1 from SVC00210 (nolock) where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR  if (@Line_Seq_Exists=0) begin  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 c (nolock) where c.INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @O_mNoteIndex   = @I_vNOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error   if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,   @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  select @O_iErrorState = 1466   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @I_vNOTEINDX = isnull(NOTEINDX,0) from SVC00200 (nolock) where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR end  if (@I_vCURNCYID <> '') begin  if not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID)  begin  select @O_iErrorState = 1467     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @FUNLCURR = FUNLCURR, @SLSRATETPID = isnull(DEFSLSTP, ''), @FINRATETPID = isnull(DEFFINTP, ''), @PURRATETPID = isnull(DEFPURTP, '')  from MC40000 (nolock)  select @O_vRATETPID = case  when @O_vRATETPID = '' and @SLSRATETPID <> '' then @SLSRATETPID   when @O_vRATETPID = '' and @FINRATETPID <> '' then @FINRATETPID  when @O_vRATETPID = '' then @RATETPID  else @O_vRATETPID  end  if  (@O_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @O_vRATETPID))  begin  select @O_iErrorState = 1468     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @I_vDECPLACS = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  select  @I_vORIGMISSTOTCST=@I_vMISSTOTCST,       @I_vORIGMSCSTOTPRC=@I_vMSCSTOTPRC,       @I_vORIGLABSUBTOTCOST=@I_vLABSTOTCST,       @I_vORIGLABSTOTPRC=@I_vLABSTOTPRC,       @I_vORIGPARSTOTCST=@I_vPARSTOTCST,       @I_vORIGPARSTOTPRC=@I_vPARSTOTPRC,       @I_vORIGPRETAXTOT=@I_vPRETAXTOT,       @I_vORTAXAMT=@I_vTAXAMNT,        @I_vORIGTOTAL=@I_vTOTAL,        @I_vOrig_Invoiced_Amount=@I_vInvoiced_Amount  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @I_vCURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock) end else begin  select @I_vCURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if ((@I_vCURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 1469      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if  (@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR) begin   select @ISMCTRX = 1,@I_vVIEWMODE=4   if (@O_vEXCHDATE is null or @O_vEXCHDATE = '' or @O_vEXCHDATE = @O_DUMMYDT)  begin  select top 1 @O_vEXCHDATE = EXCHDATE from DYNAMICS..MC00100 (nolock)  where EXGTBLID = (select top 1 EXGTBLID from MC40301 where CURNCYID = @I_vCURNCYID AND RATETPID = @O_vRATETPID)  AND EXCHDATE <= @I_vENTDTE  order by EXCHDATE + TIME1 desc  end   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCUSTNMBR,  @I_vDOCDATE  = @I_vENTDTE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @O_vEXCHDATE,  @I_vEXGTBDSC = @O_vEXGTBDSC,  @I_vEXTBLSRC = @O_vEXTBLSRC,  @I_vRATEEXPR = @O_vRATEEXPR output,  @I_vDYSTINCR = @O_vDYSTINCR output,  @I_vRATEVARC = @O_vRATEVARC,  @I_vTRXDTDEF = @O_vTRXDTDEF,  @I_vPRVDSLMT = @O_vPRVDSLMT,  @I_vDATELMTS = @O_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @O_vTIME1 output,  @I_vXCHGRATE = @O_vXCHGRATE output,  @I_vEXPNDATE = @O_vEXPNDATE output,  @I_vRATETPID = @O_vRATETPID output,  @I_vRTCLCMTD = @O_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @O_iErrorState = 1470   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@@error <> 0)  begin  select @O_iErrorState = 1471   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else begin  select @ISMCTRX = 0,@O_vRATEEXPR=0,@O_vDYSTINCR=0,@O_vRTCLCMTD=0,@I_vVIEWMODE=3 end   if ( @ISMCTRX = 1) begin  if @O_vXCHGRATE = 0   begin  select @O_iErrorState = 1473     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @O_vRTCLCMTD = 0     begin  select   @I_vMISSTOTCST   = round(@I_vMISSTOTCST  * @O_vXCHGRATE, @I_vDECPLACS),  @I_vMSCSTOTPRC   = round(@I_vMSCSTOTPRC  * @O_vXCHGRATE, @I_vDECPLACS),  @I_vLABSTOTCST   = round(@I_vLABSTOTCST * @O_vXCHGRATE, @I_vDECPLACS),  @I_vLABSTOTPRC   = round(@I_vLABSTOTPRC * @O_vXCHGRATE, @I_vDECPLACS),  @I_vPARSTOTCST   = round(@I_vPARSTOTCST * @O_vXCHGRATE, @I_vDECPLACS),  @I_vPARSTOTPRC   = round(@I_vPARSTOTPRC * @O_vXCHGRATE, @I_vDECPLACS),  @I_vPRETAXTOT    = round(@I_vPRETAXTOT * @O_vXCHGRATE, @I_vDECPLACS),  @I_vTAXAMNT    = round(@I_vTAXAMNT * @O_vXCHGRATE, @I_vDECPLACS),  @I_vTOTAL    = round(@I_vTOTAL * @O_vXCHGRATE, @I_vDECPLACS),   @I_vInvoiced_Amount    = round(@I_vInvoiced_Amount * @O_vXCHGRATE, @I_vDECPLACS)  end  else if @O_vRTCLCMTD = 1    begin  select   @I_vMISSTOTCST   = round(@I_vMISSTOTCST  / @O_vXCHGRATE, @I_vDECPLACS),  @I_vMSCSTOTPRC   = round(@I_vMSCSTOTPRC  / @O_vXCHGRATE, @I_vDECPLACS),  @I_vLABSTOTCST   = round(@I_vLABSTOTCST / @O_vXCHGRATE, @I_vDECPLACS),  @I_vLABSTOTPRC   = round(@I_vLABSTOTPRC / @O_vXCHGRATE, @I_vDECPLACS),  @I_vPARSTOTCST   = round(@I_vPARSTOTCST / @O_vXCHGRATE, @I_vDECPLACS),  @I_vPARSTOTPRC   = round(@I_vPARSTOTPRC / @O_vXCHGRATE, @I_vDECPLACS),  @I_vPRETAXTOT    = round(@I_vPRETAXTOT / @O_vXCHGRATE, @I_vDECPLACS),  @I_vTAXAMNT    = round(@I_vTAXAMNT / @O_vXCHGRATE, @I_vDECPLACS),  @I_vTOTAL    = round(@I_vTOTAL / @O_vXCHGRATE, @I_vDECPLACS),   @I_vInvoiced_Amount    = round(@I_vInvoiced_Amount / @O_vXCHGRATE, @I_vDECPLACS)  end end  if (@oErrString <> '')  return (@O_iErrorState)  update SVC00950 set LSTSRVDTE = @I_vETADTE  WHERE CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vADRSCODE if @@error <> 0 begin  select @O_iErrorState = 5401     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vCONTNBR = case  when rtrim(@I_vCONTNBR) = '.' then ''  else @I_vCONTNBR  end if (@PREVCONTNBR <> @I_vCONTNBR) begin  declare SVCLines cursor   for  select EQPLINE, LNITMSEQ, LINITMTYP, QTYSOLD, UNITPRCE, ORUNTPRC from SVC00203  where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR  OPEN SVCLines  FETCH NEXT FROM SVCLines INTO @EQPLINE, @LNITMSEQ, @LINITMTYP, @QTYSOLD, @UNITPRCE, @ORUNTPRC  WHILE @@FETCH_STATUS = 0  begin  select @iBILLPCT = case  when @LINITMTYP = 'P' then isnull(@I_vPARTPCT, 100.00)/100.00  when @LINITMTYP = 'L' then isnull(@I_vLABPCT, 100.00)/100.00  else isnull(@I_vMISCPCT, 100.00)/100.00  end   update SVC00203 set  LABPCT = @I_vLABPCT,  PARTPCT = @I_vPARTPCT,  MISCPCT = @I_vMISCPCT,  XTNDPRCE = case  when ITEMUSETYPE = 'R' then (-1) * round(isnull(@iBILLPCT, 1.00) * (abs(@QTYSOLD) * @UNITPRCE), @I_vDECPLACS)  else round(isnull(@iBILLPCT, 1.00) * (abs(@QTYSOLD) * @UNITPRCE), @I_vDECPLACS)  end,  OXTNDPRC = case   when ITEMUSETYPE = 'R' then (-1) * round(isnull(@iBILLPCT, 1.00) * (abs(@QTYSOLD) * @ORUNTPRC), @I_vDECPLACS)  else round(isnull(@iBILLPCT, 1.00) * (abs(@QTYSOLD) * @ORUNTPRC), @I_vDECPLACS)  end  where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR and EQPLINE = @EQPLINE and LNITMSEQ = @LNITMSEQ and LINITMTYP = @LINITMTYP  if (@@ERROR <> 0)  begin  select @O_iErrorState = 8962     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  CLOSE SVCLines  DEALLOCATE SVCLines  return (@O_iErrorState)  end  FETCH NEXT FROM SVCLines INTO @EQPLINE, @LNITMSEQ, @LINITMTYP, @QTYSOLD, @UNITPRCE, @ORUNTPRC  end  CLOSE SVCLines  DEALLOCATE SVCLines end  select  @partsprice = SUM(XTNDPRCE), @partscost = SUM(EXTDCOST), @partstax = SUM(TAXAMNT), @origpartstax = SUM(ORTAXAMT),  @origpartsprice = SUM(OXTNDPRC), @origpartscost = SUM(OREXTCST)   from SVC00203 where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR and LINITMTYP = 'P' if (@@error <> 0) begin  select @O_iErrorState = 9897    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @laborprice = SUM(XTNDPRCE), @laborcost = SUM(EXTDCOST), @labortax = SUM(TAXAMNT), @origlabortax = SUM(ORTAXAMT),   @origlaborprice = SUM(OXTNDPRC), @origlaborcost = SUM(OREXTCST)   from SVC00203 where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR and LINITMTYP = 'L' if (@@error <> 0) begin  select @O_iErrorState = 9898    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @miscprice = SUM(XTNDPRCE), @misccost = SUM(EXTDCOST), @misctax = SUM(TAXAMNT), @origmisctax = SUM(ORTAXAMT),  @origmiscprice = SUM(OXTNDPRC), @origmisccost = SUM(OREXTCST)   from SVC00203 where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR     = @I_vCALLNBR and LINITMTYP = 'A' if (@@error <> 0) begin  select @O_iErrorState = 9899    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @expenseprice = SUM(XTNDPRCE), @expensecost = SUM(EXTDCOST), @expensetax = SUM(TAXAMNT), @origexpensetax = SUM(ORTAXAMT),  @origexpenseprice = SUM(OXTNDPRC), @origexpensecost = SUM(OREXTCST)  from SVC00203 where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR and LINITMTYP = 'E'  if (@@error <> 0) begin  select @O_iErrorState = 9900    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end   set @I_vPARSTOTPRC = IsNull(@partsprice,0) set @I_vPARSTOTCST = IsNull(@partscost,0) set @I_vLABSTOTPRC = IsNull(@laborprice,0) set @I_vLABSTOTCST = IsNull(@laborcost,0) set @I_vMSCSTOTPRC = IsNull(@miscprice,0) + IsNull(@expenseprice,0) set @I_vMISSTOTCST = IsNull(@misccost,0) + IsNull(@expensecost,0) set @I_vTAXAMNT = IsNull(@partstax,0) + IsNull(@labortax,0) + IsNull(@misctax,0) + IsNull(@expensetax,0)  set @I_vORIGPARSTOTPRC = IsNull(@origpartsprice,0) set @I_vORIGPARSTOTCST = IsNull(@origpartscost,0) set @I_vORIGLABSTOTPRC = IsNull(@origlaborprice,0) set @I_vORIGLABSUBTOTCOST = IsNull(@origlaborcost,0) set @I_vORIGMSCSTOTPRC = IsNull(@origmiscprice,0) + IsNull(@origexpenseprice,0) set @I_vORIGMISSTOTCST = IsNull(@origmisccost,0) + IsNull(@origexpensecost,0)  set @I_vORTAXAMT = IsNull(@origpartstax,0) + IsNull(@origlabortax,0) + IsNull(@origmisctax,0) + IsNull(@origexpensecost,0) +IsNull(@origexpensetax,0) set @I_vORIGTOTAL = @I_vORIGPARSTOTPRC + @I_vORIGLABSTOTPRC + @I_vORIGMSCSTOTPRC + @I_vORTAXAMT  if (@Line_Seq_Exists=0) begin  select @WORKFLOWENABLED = WORKFLOWENABLED from DYNAMICS..SY01500 where INTERID = db_name()  if (@WORKFLOWENABLED = 1)  begin  select @Workflow_Approval_Status = 1, @Workflow_Priority = 2  end  else  begin  select @Workflow_Approval_Status = 9, @Workflow_Priority = 2  end  insert into SVC00200(   CALLNBR,  SRVRECTYPE,  SRVSTAT,  SRVTYPE,  SVCDESCR,  priorityLevel,  CUSTNMBR,  Customer_Reference,  ADRSCODE,  CUSTNAME,  ADDRESS1,  ADDRESS2,  CITY,  STATE,  ZIP,  CNTCPRSN,  PHONE1,  OFFID,  SVCAREA,  TECHID,  TIMEZONE,  ENTDTE,  ENTTME,  Notify_Date,  Notify_Time,  ETADTE,  ETATME,  DISPDTE,  DISPTME,  ARRIVDTE,  ARRIVTME,  COMPDTE,  COMPTME,  Response_Date,  Response_Time,  PRICELVL,  PYMTRMID,  SLPRSNID,  LABSTOTPRC,  LABPCT,  LABSTOTCST,  PARSTOTPRC,  PARTPCT,  PARSTOTCST,  MSCSTOTPRC,  MISCPCT,  MISSTOTCST,  TAXSCHID,  TAXEXMT1,  TAXEXMT2,  PRETAXTOT,  TAXAMNT,  TOTAL,  Invoiced_Amount,  METER1,  METER2,  METER3,  PORDNMBR,  NOTEINDX,  NOTFYFLAG,  USERDEF1,  USERDEF2,  USRDEF03,  USRDEF04,  USRDEF05,  MSTRRECTYPE,  MSTRCALLNBR,  ESCDATE,  ESCTIME,  Escalation_Level,  SPLTTERMS,  Callback,  PROJCTID,  ProjectRef1_1,  ProjectRef1_2,  ProjectRef1_3,  ProjectRef1_4,  CONSTS,  CONTNBR,  SVC_Contract_Line_SEQ,  ETTR,  SVC_On_Hold,  Print_to_Web,  Meters_1,  Meters_2,  Meters_3,  Meters_4,  Meters_5,  Meter_Internal_Uses_1,  Meter_Internal_Uses_2,  Meter_Internal_Uses_3,  Meter_Internal_Uses_4,  Meter_Internal_Uses_5,  Bill_To_Customer,  CURNCYID,  SVC_Bill_To_Address_Code,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  DECPLACS,  TIME1,  RATECALC,  VIEWMODE,  ISMCTRX,  EXPNDATE,  DENXRATE,  MCTRXSTT,  ORIGMISSTOTCST,  ORIGMSCSTOTPRC,  ORIGLABSUBTOTCOST,  ORIGLABSTOTPRC,  ORIGPARSTOTCST,  ORIGPARSTOTPRC,  ORIGPRETAXTOT,  ORTAXAMT,  ORIGTOTAL,  Orig_Invoiced_Amount,  ADDRESS3,  COUNTRY,  SVC_Pre600,  SVC_FO_ID,  Replaces_1,  Replaces_2,  Replaces_3,  Replaces_4,  Replaces_5,  Workflow_Approval_Status,  Workflow_Priority  )  select  @I_vCALLNBR,  @I_vSRVRECTYPE,  @I_vSRVSTAT,  @I_vSRVTYPE,  @I_vSVCDESCR,  @I_vpriorityLevel,  @I_vCUSTNMBR,  @I_vCustomer_Reference,  @I_vADRSCODE,  @I_vCUSTNAME,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vCITY,  @I_vSTATE,  @I_vZIP,  @I_vCNTCPRSN,  @I_vPHONE1,  @I_vOFFID,  @I_vSVCAREA,  @I_vTECHID,  @I_vTIMEZONE,  @I_vENTDTE,  @I_vENTTME,  @I_vNotify_Date,  @I_vNotify_Time,  @I_vETADTE,  @I_vETATME,  @I_vDISPDTE,  @I_vDISPTME,  @I_vARRIVDTE,  @I_vARRIVTME,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vResponse_Date,  @I_vResponse_Time,  @I_vPRICELVL,  @I_vPYMTRMID,  @I_vSLPRSNID,  @I_vLABSTOTPRC,  @I_vLABPCT,  @I_vLABSTOTCST,  @I_vPARSTOTPRC,  @I_vPARTPCT,  @I_vPARSTOTCST,  @I_vMSCSTOTPRC,  @I_vMISCPCT,  @I_vMISSTOTCST,  @I_vTAXSCHID,  @I_vTAXEXMT1,  @I_vTAXEXMT2,  @I_vPRETAXTOT,  @I_vTAXAMNT,  @I_vTOTAL,  @I_vInvoiced_Amount,  @I_vMETER1,  @I_vMETER2,  @I_vMETER3,  @I_vPORDNMBR,  @I_vNOTEINDX,  @I_vNOTFYFLAG,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vMSTRRECTYPE,  @I_vMSTRCALLNBR,  @I_vESCDATE,  @I_vESCTIME,  @I_vEscalation_Level,  @I_vSPLTTERMS,  @I_vCallback,  @I_vPROJCTID,  @I_vProjectRef1_1,  @I_vProjectRef1_2,  @I_vProjectRef1_3,  @I_vProjectRef1_4,  @I_vCONSTS,  @I_vCONTNBR,  @I_vSVC_Contract_Line_SEQ,  @I_vETTR,  @I_vSVC_On_Hold,  @I_vPrint_to_Web,  @I_vMeters_1,  @I_vMeters_2,  @I_vMeters_3,  @I_vMeters_4,  @I_vMeters_5,  @I_vMeter_Internal_Uses_1,  @I_vMeter_Internal_Uses_2,  @I_vMeter_Internal_Uses_3,  @I_vMeter_Internal_Uses_4,  @I_vMeter_Internal_Uses_5,  @I_vBill_To_Customer,  @I_vCURNCYID,  @I_vSVC_Bill_To_Address_Code,  @I_vCURRNIDX,  @O_vRATETPID,  @EXGTBLID,  @O_vXCHGRATE,  @O_vEXCHDATE,  @I_vDECPLACS,  @O_vTIME1,  @I_vRATECALC,  @I_vVIEWMODE,  @ISMCTRX,  @O_vEXPNDATE,  @I_vDENXRATE,  @I_vMCTRXSTT,  @I_vORIGMISSTOTCST,  @I_vORIGMSCSTOTPRC,  @I_vORIGLABSUBTOTCOST,  @I_vORIGLABSTOTPRC,  @I_vORIGPARSTOTCST,  @I_vORIGPARSTOTPRC,  @I_vORIGPRETAXTOT,  @I_vORTAXAMT,  @I_vORIGTOTAL,  @I_vOrig_Invoiced_Amount,  @I_vADDRESS3,  @I_vCOUNTRY,  @I_vSVC_Pre600,  @I_vSVC_FO_ID,  @I_vReplaces_1,  @I_vReplaces_2,  @I_vReplaces_3,  @I_vReplaces_4,  @I_vReplaces_5,  @Workflow_Approval_Status,    @Workflow_Priority      if @@error <> 0  begin  select @O_iErrorState = 1720    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC00210  (CALLNBR,  SRVRECTYPE,  LNITMSEQ,  FRMSTAT,  TOSTAT,  TECHID,  DSCRIPTN,  USERID,  CREATDDT,  CREATETIME)  select  @I_vCALLNBR,  @I_vSRVRECTYPE,  @AuditLNITMSEQ,  @FRMSTAT,  @I_vSRVSTAT,  @I_vTECHID,  @AuditDesc,  @UserID,  convert(varchar(12),getdate()),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  select @O_iErrorState = 1474    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end else begin  if (@I_vUpdateIfExists > 0)  begin  select @WORKFLOWENABLED = WORKFLOWENABLED from DYNAMICS..SY01500 where INTERID = db_name()  if (@WORKFLOWENABLED = 1)  begin  if( exists(select 1 from SVC00200 where Workflow_Approval_Status = 4 and CALLNBR = @I_vCALLNBR and SRVRECTYPE = @I_vSRVRECTYPE))  begin  select @O_iErrorState = 11400     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  select @Workflow_Approval_Status = 1, @Workflow_Priority = 2  end  end  else  begin  select @Workflow_Approval_Status = 9, @Workflow_Priority = 2  end  update SVC00200 set  CALLNBR=@I_vCALLNBR,  SRVRECTYPE=@I_vSRVRECTYPE,  SRVSTAT=@I_vSRVSTAT,  SRVTYPE=@I_vSRVTYPE,  SVCDESCR=@I_vSVCDESCR,  priorityLevel=@I_vpriorityLevel,  CUSTNMBR=@I_vCUSTNMBR,  Customer_Reference=@I_vCustomer_Reference,  ADRSCODE=@I_vADRSCODE,  CUSTNAME=@I_vCUSTNAME,  ADDRESS1=@I_vADDRESS1,  ADDRESS2=@I_vADDRESS2,  CITY=@I_vCITY,  STATE=@I_vSTATE,  ZIP=@I_vZIP,  CNTCPRSN=@I_vCNTCPRSN,  PHONE1=@I_vPHONE1,  OFFID=@I_vOFFID,  SVCAREA=@I_vSVCAREA,  TECHID=@I_vTECHID,  TIMEZONE=@I_vTIMEZONE,  ENTDTE=@I_vENTDTE,  ENTTME=@I_vENTTME,  Notify_Date=@I_vNotify_Date,  Notify_Time=@I_vNotify_Time,  ETADTE=@I_vETADTE,  ETATME=@I_vETATME,  DISPDTE=@I_vDISPDTE,  DISPTME=@I_vDISPTME,  ARRIVDTE=@I_vARRIVDTE,  ARRIVTME=@I_vARRIVTME,  COMPDTE=@I_vCOMPDTE,  COMPTME=@I_vCOMPTME,  Response_Date=@I_vResponse_Date,  Response_Time=@I_vResponse_Time,  PRICELVL=@I_vPRICELVL,  PYMTRMID=@I_vPYMTRMID,  SLPRSNID=@I_vSLPRSNID,  LABSTOTPRC=@I_vLABSTOTPRC,  LABPCT=@I_vLABPCT,  LABSTOTCST=@I_vLABSTOTCST,  PARSTOTPRC=@I_vPARSTOTPRC,  PARTPCT=@I_vPARTPCT,  PARSTOTCST=@I_vPARSTOTCST,  MSCSTOTPRC=@I_vMSCSTOTPRC,  MISCPCT=@I_vMISCPCT,  MISSTOTCST=@I_vMISSTOTCST,  TAXSCHID=@I_vTAXSCHID,  TAXEXMT1=@I_vTAXEXMT1,  TAXEXMT2=@I_vTAXEXMT2,  PRETAXTOT=@I_vPRETAXTOT,  TAXAMNT=@I_vTAXAMNT,  TOTAL=@I_vTOTAL,  Invoiced_Amount=@I_vInvoiced_Amount,  METER1=@I_vMETER1,  METER2=@I_vMETER2,  METER3=@I_vMETER3,  PORDNMBR=@I_vPORDNMBR,  NOTEINDX=@I_vNOTEINDX,  NOTFYFLAG=@I_vNOTFYFLAG,  USERDEF1=@I_vUSERDEF1,  USERDEF2=@I_vUSERDEF2,  USRDEF03=@I_vUSRDEF03,  USRDEF04=@I_vUSRDEF04,  USRDEF05=@I_vUSRDEF05,  MSTRRECTYPE=@I_vMSTRRECTYPE,  MSTRCALLNBR=@I_vMSTRCALLNBR,  ESCDATE=@I_vESCDATE,  ESCTIME=@I_vESCTIME,  Escalation_Level=@I_vEscalation_Level,  SPLTTERMS=@I_vSPLTTERMS,  Callback=@I_vCallback,  PROJCTID=@I_vPROJCTID,  ProjectRef1_1=@I_vProjectRef1_1,  ProjectRef1_2=@I_vProjectRef1_2,  ProjectRef1_3=@I_vProjectRef1_3,  ProjectRef1_4=@I_vProjectRef1_4,  CONSTS=@I_vCONSTS,  CONTNBR=@I_vCONTNBR,  SVC_Contract_Line_SEQ=@I_vSVC_Contract_Line_SEQ,  ETTR=@I_vETTR,  SVC_On_Hold=@I_vSVC_On_Hold,  Print_to_Web=@I_vPrint_to_Web,  Meters_1=@I_vMeters_1,  Meters_2=@I_vMeters_2,  Meters_3=@I_vMeters_3,  Meters_4=@I_vMeters_4,  Meters_5=@I_vMeters_5,  Meter_Internal_Uses_1=@I_vMeter_Internal_Uses_1,  Meter_Internal_Uses_2=@I_vMeter_Internal_Uses_2,  Meter_Internal_Uses_3=@I_vMeter_Internal_Uses_3,  Meter_Internal_Uses_4=@I_vMeter_Internal_Uses_4,  Meter_Internal_Uses_5=@I_vMeter_Internal_Uses_5,  Bill_To_Customer=@I_vBill_To_Customer,  CURNCYID=@I_vCURNCYID,  SVC_Bill_To_Address_Code=@I_vSVC_Bill_To_Address_Code,  CURRNIDX=@I_vCURRNIDX,  RATETPID=@O_vRATETPID,  EXGTBLID=@EXGTBLID,  XCHGRATE=@O_vXCHGRATE,  EXCHDATE=@O_vEXCHDATE,  DECPLACS=@I_vDECPLACS,  TIME1=@O_vTIME1,  RATECALC=@I_vRATECALC,  VIEWMODE=@I_vVIEWMODE,  ISMCTRX=@ISMCTRX,  EXPNDATE=@O_vEXPNDATE,  DENXRATE=@I_vDENXRATE,  MCTRXSTT=@I_vMCTRXSTT,  ORIGMISSTOTCST=@I_vORIGMISSTOTCST,  ORIGMSCSTOTPRC=@I_vORIGMSCSTOTPRC,  ORIGLABSUBTOTCOST=@I_vORIGLABSUBTOTCOST,  ORIGLABSTOTPRC=@I_vORIGLABSTOTPRC,  ORIGPARSTOTCST=@I_vORIGPARSTOTCST,  ORIGPARSTOTPRC=@I_vORIGPARSTOTPRC,  ORIGPRETAXTOT=@I_vORIGPRETAXTOT,  ORTAXAMT=@I_vORTAXAMT,  ORIGTOTAL=@I_vORIGTOTAL,  Orig_Invoiced_Amount=@I_vOrig_Invoiced_Amount,  ADDRESS3=@I_vADDRESS3,  COUNTRY=@I_vCOUNTRY,  SVC_Pre600=@I_vSVC_Pre600,  SVC_FO_ID=@I_vSVC_FO_ID,  Replaces_1=@I_vReplaces_1,  Replaces_2=@I_vReplaces_2,  Replaces_3=@I_vReplaces_3,  Replaces_4=@I_vReplaces_4,  Replaces_5=@I_vReplaces_5,  Workflow_Approval_Status = @Workflow_Approval_Status,   Workflow_Priority = @Workflow_Priority  where SRVRECTYPE = @I_vSRVRECTYPE and CALLNBR = @I_vCALLNBR  if (@@error <> 0)  begin  select @O_iErrorState = 1475    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   insert into SVC00210  (CALLNBR,  SRVRECTYPE,  LNITMSEQ,  FRMSTAT,  TOSTAT,  TECHID,  DSCRIPTN,  USERID,  CREATDDT,  CREATETIME)  select  @I_vCALLNBR,  @I_vSRVRECTYPE,  @AuditLNITMSEQ,  @FRMSTAT,  @I_vSRVSTAT,  @I_vTECHID,  @AuditDesc,  @UserID,  convert(varchar(12),getdate()),  getdate()- convert(char(12),getdate(),12)  if @@error <> 0  begin  select @O_iErrorState = 1476    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  if (@I_vNOTETXT <> '') and (@I_vNOTEINDX > 0) begin  if exists(select 1 from SY03900 where NOTEINDX = @I_vNOTEINDX)  update SY03900 set TXTFIELD = @I_vNOTETXT,   DATE1 = @O_TODAY,   TIME1 = convert(char(12), getdate(), 108)   where NOTEINDX = @I_vNOTEINDX  else  insert into SY03900 (NOTEINDX,   DATE1,   TIME1,   TXTFIELD)   select @I_vNOTEINDX,   @O_TODAY,   convert(char(12), getdate(), 108),   @I_vNOTETXT end  select @I_vAutoCreateLabor = case  when @iDefAutoCreateLabor = 1 then @I_vAutoCreateLabor   when @iDefAutoCreateLabor = 2 then 1     else 0         end,  @SRVSTAT = case  when @Arrival_Status is null or @Arrival_Status = '' then @I_vSRVSTAT  else @Arrival_Status  end  if (@I_vAutoCreateLabor = 1) begin  select @LaborItemLocation = case  when @LaborItemLocation = '' then LOCNCODE  else @LaborItemLocation  end  FROM SOP40100 where SETUPKEY = 1   if (@LINEARRIVDTE = '' or @LINEARRIVTME = '')  and (@I_vDISPDTE <> '' and @I_vDISPDTE <> @O_DUMMYDT and @I_vDISPTME <> '')   and (@I_vARRIVDTE <> '' and @I_vARRIVDTE <> @O_DUMMYDT and @I_vARRIVTME <> '')  and (datediff(hh, (convert(varchar(12), @I_vDISPDTE, 101) + ' ' + convert(varchar(10), @I_vDISPTME, 108)), (convert(varchar(12), @I_vARRIVDTE, 101) + ' ' + convert(varchar(10), @I_vARRIVTME, 108))) < 24)  and (@TravelLaborItem <> '')  begin  exec @iStatus = taFSServiceCallLine  @I_vCALLNBR = @I_vCALLNBR,  @I_vSRVRECTYPE = @I_vSRVRECTYPE,  @I_vEQPLINE = 1,  @I_vLINITMTYP = 'L',  @I_vSRVSTAT = @SRVSTAT,   @I_vTECHID = @I_vTECHID,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vADRSCODE = @I_vADRSCODE,  @I_vITEMNMBR = @TravelLaborItem,  @I_vCKNORETURNS = 1,  @I_vLOCNCODE = @LaborItemLocation,  @I_vUOFM = @TravelLaborItemUOFM,  @I_vSTRTDATE = @I_vDISPDTE,  @I_vSTRTTIME = @I_vDISPTME,  @I_vENDDATE = @I_vARRIVDTE,  @I_vENDTME = @I_vARRIVTME,  @I_vCURNCYID = @I_vCURNCYID,  @I_vUpdateIfExists = 1,  @I_vRequesterTrx = 0,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output   set @iError = @@error   if (@O_iErrorState <> 0)  return (@O_iErrorState)  else if (@iStatus <> 0 or @iError <> 0)  begin  set @O_iErrorState = 9904     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@LINECOMPDTE = '' or @LINECOMPTME = '')  and (@I_vARRIVDTE <> '' and @I_vARRIVDTE <> @O_DUMMYDT and @I_vARRIVTME <> '')  and (@I_vCOMPDTE <> '' and @I_vCOMPDTE <> @O_DUMMYDT and @I_vCOMPTME <> '')  and (datediff(hh, (convert(varchar(12), @I_vARRIVDTE, 101) + ' ' + convert(varchar(10), @I_vARRIVTME, 108)), (convert(varchar(12), @I_vCOMPDTE, 101) + ' ' + convert(varchar(10), @I_vCOMPTME, 108))) < 24)  and (@LaborItem <> '')  begin  exec @iStatus = taFSServiceCallLine  @I_vCALLNBR = @I_vCALLNBR,  @I_vSRVRECTYPE = @I_vSRVRECTYPE,  @I_vEQPLINE = 1,  @I_vLINITMTYP = 'L',  @I_vSRVSTAT = @I_vSRVSTAT,   @I_vTECHID = @I_vTECHID,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vADRSCODE = @I_vADRSCODE,  @I_vITEMNMBR = @LaborItem,   @I_vCKNORETURNS = 1,  @I_vLOCNCODE = @LaborItemLocation,  @I_vUOFM = @LaborItemUOFM,  @I_vSTRTDATE = @I_vARRIVDTE,  @I_vSTRTTIME = @I_vARRIVTME,  @I_vENDDATE = @I_vCOMPDTE,  @I_vENDTME = @I_vCOMPTME,  @I_vCURNCYID = @I_vCURNCYID,  @I_vUpdateIfExists = 1,  @I_vRequesterTrx = 0,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output   set @iError = @@error   if (@O_iErrorState <> 0)  return (@O_iErrorState)  else if (@iStatus <> 0 or @iError <> 0)  begin  set @O_iErrorState = 9905     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end  exec @iStatus = taFSServiceCallMasterPost  @I_vCALLNBR,  @I_vSRVRECTYPE,  @I_vSRVSTAT,  @I_vSRVTYPE,  @I_vSVCDESCR,  @I_vpriorityLevel,  @I_vCUSTNMBR,  @I_vCustomer_Reference,  @I_vADRSCODE,  @I_vCUSTNAME,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIP,  @I_vCOUNTRY,  @I_vCNTCPRSN,  @I_vPHONE1,  @I_vCKHOLD,  @I_vOFFID,  @I_vSVCAREA,  @I_vTECHID,  @I_vTIMEZONE,  @I_vCONTNBR,  @I_vENTDTE,  @I_vENTTME,  @I_vETADTE,  @I_vETATME,  @I_vDISPDTE,  @I_vDISPTME,  @I_vARRIVDTE,  @I_vARRIVTME,  @I_vCOMPDTE,  @I_vCOMPTME,  @I_vResponse_Date,  @I_vResponse_Time,  @I_vSLPRSNID,  @I_vPORDNMBR,  @I_vNOTETXT,  @I_vUSERDEF1,  @I_vUSERDEF2,  @I_vUSRDEF03,  @I_vUSRDEF04,  @I_vUSRDEF05,  @I_vSVC_On_Hold,  @I_vPYMTRMID,  @I_vSVC_FO_ID,  @I_vCURNCYID,  @I_vAutoCreateLabor,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1477    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taFSServiceCallMaster] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE   procedure [dbo].[aagCreateDistForClearJrnl] @JRN int, @ORIGIN int, @BATCHNUM varchar(16) as   BEGIN   set nocount on   declare @CMPANYID smallint,   @aagGetHdrID int,   @Status int,   @JRNENTRY int,   @RCTRXSEQ numeric(19,5),   @OPENYEAR int,   @TRXSORCE char(13),   @TRXDATE datetime,  @strSql varchar(1500),   @aaTRXType as int   set @aaTRXType = 1   select  @CMPANYID = CMPANYID from DYNAMICS.dbo.SY01500 where INTERID = DB_NAME()    if @ORIGIN = 0   BEGIN  declare CGLOPEN cursor fast_forward for   select JRNENTRY, RCTRXSEQ,OPENYEAR,TRXSORCE,TRXDATE   from GL20000 where JRNENTRY = @JRN  group by OPENYEAR,JRNENTRY,RCTRXSEQ,TRXSORCE,TRXDATE   END  else if @ORIGIN = 2   BEGIN  declare CGLOPEN cursor fast_forward for   select JRNENTRY, RCTRXSEQ,OPENYEAR,TRXSORCE,TRXDATE   from GL10000 where BACHNUMB = @BATCHNUM  END  else if @ORIGIN = -1  BEGIN  declare CGLOPEN cursor fast_forward for   select  DISTINCT GL20000.JRNENTRY, GL10000.RCTRXSEQ, GL10000.OPENYEAR, GL10000.TRXSORCE, GL10000.TRXDATE   from DYNAMICS..SY00800 SY00800 INNER JOIN GL10000 ON SY00800.BACHNUMB = GL10000.BACHNUMB INNER JOIN GL20000 ON  GL20000.JRNENTRY = GL10000.JRNENTRY   WHERE  SY00800.BCHSOURC = 'GL_Clearing' AND NOT EXISTS(SELECT 1 FROM AAG30000 WHERE GL20000.JRNENTRY = AAG30000.JRNENTRY   AND GL20000.RCTRXSEQ = AAG30000.RCTRXSEQ )  END   open CGLOPEN   fetch next from CGLOPEN into @JRNENTRY,@RCTRXSEQ,@OPENYEAR,@TRXSORCE,@TRXDATE   WHILE @@fetch_status =0   BEGIN   if exists (select 1 from GL20000 where JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ) AND   NOT EXISTS(select JRNENTRY from AAG30000 where JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ)  BEGIN  select @JRNENTRY = JRNENTRY, @RCTRXSEQ = RCTRXSEQ, @OPENYEAR = OPENYEAR, @TRXSORCE = TRXSORCE, @TRXDATE = TRXDATE   from GL20000 where JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ  exec DYNAMICS..aagGetNextID 30000, @CMPANYID, @aagGetHdrID out, @Status    insert into AAG30000   (aaGLHdrID,JRNENTRY,RCTRXSEQ,YEAR1,aaTRXType,aaGLTRXSource,aaTRXSource,GLPOSTDT)   values(@aagGetHdrID,@JRNENTRY,@RCTRXSEQ,@OPENYEAR,1,@TRXSORCE,' ',@TRXDATE)    insert into AAG30001   (aaGLHdrID,  aaGLDistID, INTERID , CorrespondingUnit, ACTINDX, ACCTTYPE ,   aaBrowseType, DECPLACS, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1,   RTCLCMTD, DENXRATE, MCTRXSTT, SEQNUMBR,   aaCustID, aaVendID, aaSiteID, aaItemID, aaCopyStatus,aaChangeDate, aaChangeTime)   select @aagGetHdrID,   DEX_ROW_ID,   DB_NAME() ,CorrespondingUnit,ACTINDX, dbo.aagGetAccountType(ACTINDX),   0,2,  DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,   CURNCYID, CURRNIDX, RATETPID,  EXGTBLID, XCHGRATE, EXCHDATE,TIME1,   RTCLCMTD, DENXRATE, MCTRXSTT, SEQNUMBR,'',   '', '', '', 0,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108)   from GL20000 where JRNENTRY =  @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ   Update AAG30001 SET aaGLDistID=0-aaGLDistID where  aaGLHdrID = @aagGetHdrID    UPDATE AAG30001   SET aaGLDistID = (SELECT COUNT(1) FROM AAG30001 AA WHERE AAG30001.DEX_ROW_ID >= AA.DEX_ROW_ID AND AA.aaGLHdrID = AAG30001.aaGLHdrID)   where AAG30001.aaGLHdrID = @aagGetHdrID   insert into AAG30002   (aaGLHdrID,aaGLDistID,aaGLAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent,   DistRef,NOTEINDX)   select aaGLHdrID,aaGLDistID,1,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,10000,   ' ',0 from AAG30001  where aaGLHdrID = @aagGetHdrID  END   fetch next from CGLOPEN into @JRNENTRY,@RCTRXSEQ,@OPENYEAR,@TRXSORCE,@TRXDATE   END   close CGLOPEN   deallocate CGLOPEN   set nocount off  END     
GO
GRANT EXECUTE ON  [dbo].[aagCreateDistForClearJrnl] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateDepartment] @I_vDEPRTMNT char(6),    @I_vDSCRIPTN char(30),    @I_vUpdateIfExists tinyint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @CompanyID char(5),  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @O_oErrorState int,  @iError int      select  @O_iErrorState = 0,     @CompanyID = '',  @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateDepartmentPre  @I_vDEPRTMNT  output,  @I_vDSCRIPTN  output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3868    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vDEPRTMNT is NULL or  @I_vDSCRIPTN is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 3869    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vDEPRTMNT =UPPER(@I_vDEPRTMNT)  select @CompanyID = INTERID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if ( @I_vDEPRTMNT = '' ) begin  select @O_iErrorState = 3870    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vDSCRIPTN = '' ) begin  select @O_iErrorState = 3871    exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1 )  begin  select @O_iErrorState = 3664    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 3665    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4512   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  begin  if not exists( select 1 from UPR40300 (nolock) where DEPRTMNT = @I_vDEPRTMNT )  begin  insert UPR40300(  DEPRTMNT,  DSCRIPTN,  AddlDesc,  NOTEINDX,  CHANGEBY_I,  CHANGEDATE_I  )  select  @I_vDEPRTMNT,     @I_vDSCRIPTN,     '',      @nNextNoteIndex,    '',              ''             if @@error <> 0  begin  select @O_iErrorState = 3872    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if ( @I_vUpdateIfExists = 1 )  begin  update UPR40300   set DSCRIPTN =   case  WHEN @I_vDSCRIPTN = ''  THEN DSCRIPTN  ELSE @I_vDSCRIPTN  end   where  DEPRTMNT = @I_vDEPRTMNT   if @@error <> 0  begin  select @O_iErrorState = 3873    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'HRPMDP01') begin  if not exists( select 1 from DYNAMICS..HRPMDP01 (nolock) where DEPARTMENTCODE_I = @I_vDEPRTMNT and COMPANYCODE_I = @CompanyID)  begin  insert DYNAMICS..HRPMDP01(  COMPANYCODE_I,  DEPARTMENTCODE_I,  DEPARTMENTNAME_I  )  select  @CompanyID,      @I_vDEPRTMNT,     @I_vDSCRIPTN     if @@error <> 0  begin  select @O_iErrorState = 11727    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if ( @I_vUpdateIfExists = 1 )  begin  update DYNAMICS..HRPMDP01   set DEPARTMENTNAME_I =   case  WHEN @I_vDSCRIPTN = ''  THEN DEPARTMENTNAME_I  ELSE @I_vDSCRIPTN  end   where  DEPARTMENTCODE_I = @I_vDEPRTMNT and COMPANYCODE_I = @CompanyID  if @@error <> 0  begin  select @O_iErrorState = 11728    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateDepartmentPost  @I_vDEPRTMNT,  @I_vDSCRIPTN,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3874    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateDepartment] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[aagCreateGLWorkFARealTimePost]  @I_aaBatchNumber VARCHAR(17),  @I_nCompanyID SMALLINT AS BEGIN   DECLARE   @nGLWorkHdrID INTEGER,  @nDistID INTEGER,  @aaGLWorkAssignID INTEGER,   @FINANCIALINDX INTEGER,  @ASSETINDEX INTEGER,  @BOOKINDX INTEGER,  @FA_Doc_Number CHAR(17),  @ACTINDX INTEGER,  @ACCTTYPE SMALLINT,  @DECPLACS SMALLINT,  @SQNCLINE NUMERIC(19,5),  @CRDTAMNT NUMERIC(19,5),  @DEBITAMT NUMERIC(19,5),  @ORCRDAMT NUMERIC(19,5),  @ORDBTAMT NUMERIC(19,5),  @CURNCYID CHAR(15),  @CURRNIDX SMALLINT,  @Ledger_ID SMALLINT,  @OldaaSubLedgerHdrID INTEGER,  @OldaaSubLedgerDistID INTEGER,  @OldaaSubLedgerAssignID INTEGER,  @OldDEBITAMT NUMERIC(19,5),  @OldCRDTAMNT NUMERIC(19,5),  @OldORDBTAMT NUMERIC(19,5),  @OldORCRDAMT NUMERIC(19,5),  @OldaaAssignedPercent INTEGER,  @OldaaAliasID INTEGER,  @ClassID SMALLINT,  @oRequiredFieldEmpty SMALLINT,  @aaBrowseTypeNew SMALLINT,  @nStatus SMALLINT,  @aaAssetID VARCHAR(100),  @aaBookID VARCHAR(100),  @AcctLinked TINYINT,  @TrackCust     TINYINT,  @TrackVend     TINYINT,  @TrackItem     TINYINT,  @TrackSite     TINYINT,  @TrackEmpl     TINYINT,  @TrackAsset TINYINT,  @TrackBook     TINYINT,  @X_HdrID INTEGER,  @DSCRIPTN VARCHAR(31),  @JRNENTRY INTEGER   EXEC aagUpdateOriginalRec @I_aaBatchNumber   DECLARE JournalEnt CURSOR FAST_FORWARD FOR  SELECT JRNENTRY FROM GL10000 WHERE BACHNUMB = @I_aaBatchNumber  ORDER BY DEX_ROW_ID  OPEN JournalEnt  FETCH NEXT FROM JournalEnt   INTO @JRNENTRY  WHILE @@FETCH_STATUS = 0  BEGIN  SELECT @nDistID = 1,@nGLWorkHdrID = 0,@aaAssetID = '', @aaBookID = ''    EXEC DYNAMICS.dbo.aagGetNextID   10000,   @I_nCompanyID,   @nGLWorkHdrID OUT,   @nStatus OUT    INSERT INTO AAG10000(aaGLWorkHdrID, JRNENTRY, RCTRXSEQ, GLPOSTDT, aaTRXType, Ledger_ID)   SELECT @nGLWorkHdrID, @JRNENTRY,0,TRXDATE,1,Ledger_ID FROM GL10000 WHERE JRNENTRY = @JRNENTRY   DECLARE FAGLWorkLine CURSOR FAST_FORWARD FOR  SELECT FINANCIALINDX,ASSETINDEX,BOOKINDX,FA_Doc_Number,ACTINDX,DECPLACS,  GL1.SQNCLINE,CRDTAMNT,DEBITAMT,ORCRDAMT,ORDBTAMT,ACCTTYPE,(SELECT GL0.CURNCYID FROM GL10000 GL0 WHERE GL0.JRNENTRY = GL1.JRNENTRY),GL1.CURRNIDX,(SELECT GL0.Ledger_ID FROM GL10000 GL0 WHERE GL0.JRNENTRY = GL1.JRNENTRY)  FROM GL10001 GL1 INNER JOIN FA00902 ON GL1.BACHNUMB = FA00902.GLINTBTCHNUM AND GL1.OrigSeqNum = FA00902.FINANCIALINDX AND GL1.JRNENTRY = @JRNENTRY  ORDER BY SQNCLINE  OPEN FAGLWorkLine  FETCH NEXT FROM FAGLWorkLine   INTO @FINANCIALINDX,@ASSETINDEX,@BOOKINDX,@FA_Doc_Number,@ACTINDX,@DECPLACS,  @SQNCLINE,@CRDTAMNT,@DEBITAMT,@ORCRDAMT,@ORDBTAMT,@ACCTTYPE,@CURNCYID,@CURRNIDX,@Ledger_ID  WHILE @@FETCH_STATUS = 0  BEGIN  EXEC aagIsAcctLinkedToClass   @ACTINDX,   @AcctLinked OUT,   @TrackCust OUT,   @TrackVend OUT,   @TrackItem OUT,   @TrackSite OUT,  @TrackEmpl OUT,  @TrackAsset OUT,  @TrackBook OUT  SELECT @aaAssetID =CASE @TrackAsset WHEN 1 THEN  RTRIM(ASSETID) + '-' + CONVERT(VARCHAR(4),ASSETIDSUF) ELSE '' END FROM FA00100 WHERE ASSETINDEX = @ASSETINDEX   SELECT  @aaBookID = CASE @TrackBook WHEN 1 THEN BOOKID ELSE '' END FROM FA40200 WHERE FA40200.BOOKINDX = @BOOKINDX   INSERT INTO AAG10001(aaGLWorkHdrID, aaGLWorkDistID, INTERID, CorrespondingUnit, ACTINDX, ACCTTYPE, aaBrowseType, DECPLACS,   DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT, CURNCYID, CURRNIDX, SQNCLINE, aaAssetID, aaBookID)  VALUES(@nGLWorkHdrID, @nDistID,DB_NAME(), '', @ACTINDX,@ACCTTYPE, 0, @DECPLACS,   @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT,ISNULL(@CURNCYID,0), @CURRNIDX, @SQNCLINE,@aaAssetID, @aaBookID)   SET @aaGLWorkAssignID = 1   SELECT @OldaaSubLedgerHdrID = A0.aaSubLedgerHdrID,@OldaaSubLedgerDistID = A1.aaSubLedgerDistID FROM AAG20001 A1  INNER JOIN AAG20000 A0 ON A1.aaSubLedgerHdrID = A0.aaSubLedgerHdrID WHERE A0.SERIES = 2 AND A0.DOCTYPE <> 0 AND   A0.DOCNUMBR = @FA_Doc_Number AND  A1.TRXNUMBER = @FINANCIALINDX   UPDATE AAG20001 SET POSTED = 1, aaAssetID = CASE @TrackAsset WHEN 1 THEN aaAssetID ELSE '' END, aaBookID = CASE @TrackBook WHEN 1 THEN aaBookID ELSE '' END WHERE aaSubLedgerHdrID=@OldaaSubLedgerHdrID AND aaSubLedgerDistID = @OldaaSubLedgerDistID  EXEC aagGetClassIDBrowseType   @ACTINDX,   @ClassID OUTPUT,   @aaBrowseTypeNew OUTPUT    DECLARE Assign CURSOR FAST_FORWARD FOR  SELECT aaSubLedgerAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent,aaAliasID FROM AAG20002 WHERE aaSubLedgerHdrID = @OldaaSubLedgerHdrID AND aaSubLedgerDistID = @OldaaSubLedgerDistID  ORDER BY aaSubLedgerAssignID ASC  OPEN Assign  FETCH NEXT FROM Assign   INTO @OldaaSubLedgerAssignID,@OldDEBITAMT,@OldCRDTAMNT,@OldORDBTAMT,@OldORCRDAMT,@OldaaAssignedPercent,@OldaaAliasID   WHILE @@FETCH_STATUS = 0  BEGIN  INSERT INTO AAG10002 (aaGLWorkHdrID, aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,aaAssignedPercent,aaAliasID)  VALUES(@nGLWorkHdrID, @nDistID,@aaGLWorkAssignID,@OldDEBITAMT,@OldCRDTAMNT,@OldORDBTAMT,@OldORCRDAMT,@OldaaAssignedPercent,@OldaaAliasID)   IF @aaBrowseTypeNew <> 0   AND NOT EXISTS  (SELECT 1 FROM AAG10003  WHERE aaGLWorkHdrID = @nGLWorkHdrID  AND aaGLWorkDistID = @nDistID  AND aaGLWorkAssignID = @aaGLWorkAssignID)  BEGIN   EXEC aagGLWorkCodeUpdate   @nGLWorkHdrID,   @nDistID,   @aaGLWorkAssignID,   @ClassID,   @oRequiredFieldEmpty OUTPUT    UPDATE AAG10003 SET AAG10003.aaTrxCodeID = A2.aaTrxCodeID FROM AAG10003 INNER JOIN (SELECT aaSubLedgerAssignID,aaTrxDimID,aaTrxCodeID FROM AAG20003   WHERE aaSubLedgerHdrID = @OldaaSubLedgerHdrID AND aaSubLedgerDistID = @OldaaSubLedgerDistID AND aaSubLedgerAssignID=@OldaaSubLedgerAssignID) A2   ON AAG10003.aaGLWorkAssignID=A2.aaSubLedgerAssignID AND AAG10003.aaTrxDimID=A2.aaTrxDimID AND AAG10003.aaGLWorkHdrID=@nGLWorkHdrID AND aaGLWorkDistID = @nDistID   END    UPDATE AAG10001 SET aaBrowseType = @aaBrowseTypeNew WHERE aaGLWorkHdrID = @nGLWorkHdrID AND aaGLWorkDistID = @nDistID   SET @aaGLWorkAssignID = @aaGLWorkAssignID + 1  FETCH NEXT FROM Assign   INTO @OldaaSubLedgerAssignID,@OldDEBITAMT,@OldCRDTAMNT,@OldORDBTAMT,@OldORCRDAMT,@OldaaAssignedPercent,@OldaaAliasID  END  CLOSE Assign  DEALLOCATE Assign    SET @aaBrowseTypeNew = 0   SET @nDistID = @nDistID + 1  FETCH NEXT FROM FAGLWorkLine   INTO @FINANCIALINDX,@ASSETINDEX,@BOOKINDX,@FA_Doc_Number,@ACTINDX,@DECPLACS,  @SQNCLINE,@CRDTAMNT,@DEBITAMT,@ORCRDAMT,@ORDBTAMT,@ACCTTYPE,@CURNCYID,@CURRNIDX,@Ledger_ID  END  CLOSE FAGLWorkLine  DEALLOCATE FAGLWorkLine   FETCH NEXT FROM JournalEnt   INTO @JRNENTRY  END  CLOSE JournalEnt  DEALLOCATE JournalEnt  END   
GO
GRANT EXECUTE ON  [dbo].[aagCreateGLWorkFARealTimePost] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glPMatchPMTransactions]  @iGLTempTable varchar(50),  @iPMTempTable varchar(50),  @iPMPMatchTable varchar(50),  @iGLPMatchTable varchar(50) AS  DECLARE  @lSQLError int  EXEC(  'INSERT INTO ' +  @iPMPMatchTable +   ' (PSTGDATE,  VENDORID,  TRXSORCE,  ORTRXSRC,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  VendorIDDrillback,  DocumentNumberDrillback)  SELECT  PSTGDATE,  VENDORID,  TRXSORCE,  ORTRXSRC,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppVendorID(1,VENDORID),  case '+@iPMTempTable + '.HISTRX  when 1 then  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppPayablesTransactionNumber(1, '+@iPMTempTable + '.DOCTYPE,VCHRNMBR,3,1,-1,'''','''')  else  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppPayablesTransactionNumber(1, '+@iPMTempTable + '.DOCTYPE,VCHRNMBR,2,1,-1,'''','''')  end  FROM '  + @iPMTempTable + ' JOIN ' + @iGLTempTable + '  ON  TRXSORCE = ORTRXSRC  GROUP BY  PSTGDATE,  VENDORID,  TRXSORCE,  ORTRXSRC,  VCHRNMBR,   DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  '+@iPMTempTable + '.HISTRX,  '+@iPMTempTable + '.DOCTYPE ')  EXEC(  'INSERT INTO ' +  @iGLPMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ACCTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT  TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  SUM(CRDTAMNT - DEBITAMT),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,ACTINDX),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,RCTRXSEQ,YEAR1,TRXDATE)  FROM '  + @iGLTempTable + ' JOIN ' + @iPMTempTable + '  ON  ORTRXSRC = TRXSORCE   GROUP BY  TRXDATE,  JRNENTRY,  RCTRXSEQ,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  '+@iGLTempTable + '.HISTRX,  '+@iGLTempTable + '.YEAR1 ')  EXEC(  'DELETE   FROM ' +  @iPMTempTable +  ' WHERE ' +  @iPMTempTable + '.TRXSORCE IN  (SELECT   TRXSORCE  FROM ' +  @iPMPMatchTable + ')')  EXEC(  'DELETE   FROM ' +  @iGLTempTable +   ' WHERE ' +  @iGLTempTable + '.ORTRXSRC IN  (SELECT  ORTRXSRC  FROM ' +  @iGLPMatchTable + ')')  EXEC(  'SELECT  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,  DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  HISTRX  INTO  ##PMDetailTemp  FROM '  + @iPMTempTable +   ' GROUP BY  PSTGDATE,  VENDORID,  TRXSORCE,  VCHRNMBR,   DOCNUMBR,  DOCTYPE,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  HISTRX ')  EXEC(  'SELECT  TRXDATE,  JRNENTRY,  RCTRXSEQ,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  '+@iGLTempTable + '.HISTRX,  '+@iGLTempTable + '.YEAR1  INTO  ##GLDetailTemp  FROM '  + @iGLTempTable +   ' GROUP BY  TRXDATE,  JRNENTRY,  RCTRXSEQ,  ORTRXSRC,  ORCTRNUM,   ACTINDX,  DEBITAMT,  CRDTAMNT,  '+@iGLTempTable + '.HISTRX,  '+@iGLTempTable + '.YEAR1 ')  SELECT  PSTGDATE,  TRXSORCE,  SUM(ACCTAMNT)AS ACCTAMNT INTO  #PMSumProcess FROM  ##PMDetailTemp GROUP BY  PSTGDATE,  TRXSORCE  SELECT  TRXDATE,  ORTRXSRC,  (SUM(CRDTAMNT) - SUM(DEBITAMT)) AS GLACCTAMNT INTO  #GLSumProcess FROM  ##GLDetailTemp GROUP BY  TRXDATE,  ORTRXSRC  SELECT   #PMSumProcess.PSTGDATE,  #PMSumProcess.TRXSORCE,  #PMSumProcess.ACCTAMNT INTO  #PMSumTemp FROM  #PMSumProcess JOIN ##PMDetailTemp ON  #PMSumProcess.TRXSORCE = ##PMDetailTemp.TRXSORCE WHERE  1 = (SELECT  COUNT(PSTGDATE)   FROM  #PMSumProcess  WHERE  #PMSumProcess.TRXSORCE = ##PMDetailTemp.TRXSORCE) GROUP BY  #PMSumProcess.PSTGDATE,  #PMSumProcess.TRXSORCE,  #PMSumProcess.ACCTAMNT  SELECT   #GLSumProcess.TRXDATE,  #GLSumProcess.ORTRXSRC,  #GLSumProcess.GLACCTAMNT INTO  #GLSumTemp FROM  #GLSumProcess JOIN ##GLDetailTemp ON  #GLSumProcess.ORTRXSRC = ##GLDetailTemp.ORTRXSRC WHERE  1 = (SELECT  COUNT(TRXDATE)   FROM  #GLSumProcess  WHERE  #GLSumProcess.ORTRXSRC = ##GLDetailTemp.ORTRXSRC) GROUP BY  #GLSumProcess.TRXDATE,  #GLSumProcess.ORTRXSRC,  #GLSumProcess.GLACCTAMNT  SELECT  PSTGDATE,  TRXSORCE,  ACCTAMNT INTO  #PMProcess FROM   #PMSumTemp JOIN #GLSumTemp  ON  PSTGDATE = TRXDATE  AND  ACCTAMNT = GLACCTAMNT WHERE  1 = (SELECT   COUNT(TRXSORCE)  FROM  #PMSumTemp  WHERE  PSTGDATE = TRXDATE  AND  ACCTAMNT = GLACCTAMNT)  SELECT  TRXDATE,  ORTRXSRC,  GLACCTAMNT INTO  #GLProcess FROM   #GLSumTemp JOIN #PMSumTemp  ON  TRXDATE = PSTGDATE  AND  GLACCTAMNT = ACCTAMNT WHERE  1 = (SELECT   COUNT(ORTRXSRC)  FROM  #GLSumTemp  WHERE  TRXDATE = PSTGDATE  AND  GLACCTAMNT = ACCTAMNT)  SELECT  PSTGDATE,  TRXSORCE,  ORTRXSRC,  ACCTAMNT INTO  #PMMATCH FROM  #PMProcess JOIN #GLProcess ON  PSTGDATE = TRXDATE AND  ACCTAMNT = GLACCTAMNT  SELECT  TRXDATE,  ORTRXSRC,  GLACCTAMNT INTO  #GLMatch FROM  #GLProcess JOIN #PMProcess ON  TRXDATE = PSTGDATE AND  GLACCTAMNT = ACCTAMNT  EXEC(  'INSERT INTO ' +  @iPMPMatchTable +   ' (PSTGDATE,  VENDORID,  TRXSORCE,  ORTRXSRC,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ACCTAMNT,  CNTRLTYP,  VendorIDDrillback,  DocumentNumberDrillback)  SELECT   ##PMDetailTemp.PSTGDATE,  VENDORID,  ##PMDetailTemp.TRXSORCE,  #PMMATCH.ORTRXSRC,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ##PMDetailTemp.ACCTAMNT,  CNTRLTYP,  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppVendorID(1,VENDORID),  case HISTRX  when 1 then  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppPayablesTransactionNumber(1, DOCTYPE,VCHRNMBR,3,1,-1,'''','''')  else  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppPayablesTransactionNumber(1, DOCTYPE,VCHRNMBR,2,1,-1,'''','''')  end  FROM   ##PMDetailTemp JOIN #PMMATCH  ON  ##PMDetailTemp.TRXSORCE = #PMMATCH.TRXSORCE   GROUP BY  ##PMDetailTemp.PSTGDATE,  VENDORID,  ##PMDetailTemp.TRXSORCE,  #PMMATCH.ORTRXSRC,  VCHRNMBR,  DOCNUMBR,  STRVAL,  TRX_ID,  ##PMDetailTemp.ACCTAMNT,  CNTRLTYP,  HISTRX,  DOCTYPE ')  EXEC(  'INSERT INTO ' +  @iGLPMatchTable +  ' (TRXDATE,  JRNENTRY,  ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  ACCTAMNT,  AccountNumberDrillback,  JournalEntryDrillback)  SELECT   ##GLDetailTemp.TRXDATE,  JRNENTRY,  ##GLDetailTemp.ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  SUM(CRDTAMNT - DEBITAMT),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppAccountIndex(1,ACTINDX),  DYNAMICS.dbo.createBaseDrillBackUrlString(DB_NAME(),0)   + dbo.dgppJournalInquiry(1,JRNENTRY,RCTRXSEQ,YEAR1,##GLDetailTemp.TRXDATE)   FROM   ##GLDetailTemp JOIN #GLMatch  ON  ##GLDetailTemp.ORTRXSRC = #GLMatch.ORTRXSRC   GROUP BY  ##GLDetailTemp.TRXDATE,  JRNENTRY,  RCTRXSEQ,  ##GLDetailTemp.ORTRXSRC,  ORCTRNUM,  ACTINDX,  DEBITAMT,  CRDTAMNT,  HISTRX,  YEAR1 ')  EXEC(  'DELETE   FROM ' +  @iPMTempTable +  ' WHERE ' +  @iPMTempTable + '.TRXSORCE IN  (SELECT   TRXSORCE   FROM '  + @iPMPMatchTable + ')') EXEC(  'DELETE   FROM ' +  @iGLTempTable +   ' WHERE ' +  @iGLTempTable + '.ORTRXSRC IN  (SELECT  ORTRXSRC  FROM '  + @iGLPMatchTable + ')')  DROP TABLE  ##PMDetailTemp,  ##GLDetailTemp RETURN (@lSQLError)    
GO
GRANT EXECUTE ON  [dbo].[glPMatchPMTransactions] TO [DYNGRP]
GO

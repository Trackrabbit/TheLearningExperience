SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLTransactionLogicalTableGrp]   @I_cUserID char(15)    = NULL,  @I_cUserDate char(12)    = NULL,  @I_cFunctionalCurrency char(15)    = NULL,  @I_cTransactionWORK  varchar(40) = NULL,  @I_cPaymentWORK varchar(40) = NULL,  @I_cManualPaymentWORK varchar(40) = NULL,  @I_cTaxWORK varchar(40) = NULL,  @I_cDistributionWORKOPEN varchar(40) = NULL,  @I_cApplyToWORKOPEN varchar(40) = NULL,  @I_cTransactionOPEN varchar(40) = NULL,  @I_cApplyToOPENOPEN varchar(40) = NULL,  @I_cKeyMSTR varchar(40) = NULL,  @I_cBatchHeaders varchar(40) = NULL,  @I_cMCPMTransactions varchar(40) = NULL,  @I_cMCPMRevaluation varchar(40) = NULL,  @I_cPMTaxInvoices varchar(40) = NULL,  @I_cSchHdr varchar(40) = NULL,  @I_cSchLine varchar(40) = NULL,  @I_cEmailDetails varchar(40) = NULL,  @I_cEmailHistory varchar(40) = NULL,  @I_cOrigICID char(5) = NULL,  @I_tMDARegistered tinyint = NULL,  @I_tICRegistered tinyint = NULL,   @I_tMCRegistered tinyint = NULL,  @O_iErrorState int      = NULL output  as  declare  @iError int,    @iStatus int,    @cSearchString1 char(2),  @tLoop tinyint  select  @O_iErrorState = 0,  @iStatus  = 0,  @cSearchString1 = '%1'  while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cUserID is NULL  or @I_cUserDate is NULL  or @I_cFunctionalCurrency is NULL  or @I_cTransactionWORK is NULL  or @I_cPaymentWORK is NULL  or @I_cManualPaymentWORK is NULL  or @I_cTaxWORK is NULL  or @I_cDistributionWORKOPEN is NULL  or @I_cApplyToWORKOPEN is NULL  or @I_cTransactionOPEN is NULL  or @I_cApplyToOPENOPEN is NULL  or @I_cKeyMSTR is NULL  or @I_cMCPMTransactions is NULL  or @I_cMCPMRevaluation is NULL  or @I_cPMTaxInvoices is NULL  or   @I_cSchHdr is NULL  or @I_cSchLine is NULL  or @I_cEmailDetails is NULL  or  @I_cEmailHistory is NULL  or    @I_cOrigICID is NULL  or @I_tMDARegistered is NULL  or @I_tICRegistered is NULL   or  @I_tMCRegistered   is NULL  begin  select @O_iErrorState = 20850  break   end   create table #CNTRLNUMTEMP(  CNTRLNUM varchar(21) not null,  DOCTYPE smallint not null,  VENDORID varchar(15) not null )   exec @iStatus = pmCLTransactionWORK  @I_cUserID,  @I_cUserDate,  @I_cFunctionalCurrency,  @I_cKeyMSTR,  @I_cBatchHeaders,  @I_cTransactionWORK,  @I_cMCPMTransactions,  @cSearchString1,  @I_cOrigICID,  @I_tICRegistered,    @I_tMCRegistered,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLPaymentWORK  @I_cUserID,  @I_cUserDate,  @I_cFunctionalCurrency,  @I_cKeyMSTR,  @I_cBatchHeaders,  @I_cPaymentWORK,  @I_cMCPMTransactions,  @cSearchString1,  @I_tMCRegistered,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLManualPaymentWORK  @I_cUserID,  @I_cUserDate,  @I_cFunctionalCurrency,  @I_cKeyMSTR,  @I_cBatchHeaders,  @I_cManualPaymentWORK,  @I_cMCPMTransactions,  @cSearchString1,  @I_tMCRegistered,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLDistributionWORKOPEN  @I_cUserID,  @I_cDistributionWORKOPEN,  @cSearchString1,  @I_cOrigICID,   @I_tMDARegistered,  @I_tICRegistered,    @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLTaxWORK  @I_cUserID,  @I_cTaxWORK,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLApplyToWORKOPEN  @I_cUserID,  @I_cApplyToWORKOPEN,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLTransactionOPEN  @I_cUserID,  @I_cFunctionalCurrency,  @I_cTransactionOPEN,  @I_cMCPMTransactions,  @cSearchString1,  @I_tMCRegistered,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLMCTransactions  @I_cUserID,  @I_cMCPMTransactions,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLMCRevaluation  @I_cUserID,  @I_cMCPMRevaluation,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLTaxInvoices  @I_cUserID,  @I_cPMTaxInvoices,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLApplyToOPENOPEN  @I_cUserID,  @I_cApplyToOPENOPEN,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLMoveFullyApplied  @I_cUserID,  @I_cFunctionalCurrency,  @I_cTransactionOPEN,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLSchHdr  @I_cUserID,  @I_cSchHdr,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLSchLine  @I_cUserID,  @I_cSchLine,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLEmailDetails  @I_cUserID,  @I_cEmailDetails,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLEmailHistory  @I_cUserID,  @I_cEmailHistory,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = pmCLKeyMSTR  @I_cUserID,  @I_cKeyMSTR,  @cSearchString1,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[pmCLTransactionLogicalTableGrp] TO [DYNGRP]
GO

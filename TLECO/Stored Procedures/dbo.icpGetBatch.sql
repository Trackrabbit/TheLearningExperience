SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[icpGetBatch]  @I_cOrigIntercompanyID char(5)  = NULL,  @I_cOpenAuditTrailCode char(13) = NULL,  @I_cHistoryAuditTrailCode char(13) = NULL,  @I_sWindowType smallint = NULL,  @I_cUserID char(15) = NULL,  @I_cCompanyName char(64) = NULL,  @O_cBatchNumber          char(15)        = NULL output,  @O_iErrorState           int             = NULL  output as  declare  @TRUE tinyint,  @AVAILABLE smallint,  @RECEIVING smallint,  @GL_NORMAL char(15),  @GENERAL_ENTRY char(25),  @cBatchNumber char(15),  @cAuditTrailCode char(13),  @iCounter int,  @tTransaction tinyint,  @tLoop tinyint,  @iError int,  @iStatus int  select   @O_cBatchNumber = '',  @O_iErrorState = 0,  @iStatus = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if @I_cOrigIntercompanyID is NULL or  @I_cOpenAuditTrailCode is NULL or  @I_cHistoryAuditTrailCode is NULL or  @I_sWindowType is NULL or  @I_cUserID is NULL or  @I_cCompanyName is NULL  begin  select @O_iErrorState = 20874  break  end    if @I_cOpenAuditTrailCode = '' and  @I_cHistoryAuditTrailCode = ''  begin  select @O_iErrorState = 20931  break  end    select   @TRUE  = 1,  @AVAILABLE = 0,  @RECEIVING = 3,  @iCounter = 1   exec @iStatus = DYNAMICS..smGetConstantString  'GL_NORMAL_STR',   @GL_NORMAL output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   exec @iStatus = DYNAMICS..smGetConstantString  'TRX_SOURCE_GL_GENERAL_ENTRY',    @GENERAL_ENTRY output,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   while @iCounter <= 2 and @O_cBatchNumber = ''  begin  if @iCounter = 1   select @cAuditTrailCode = @I_cOpenAuditTrailCode  else  select @cAuditTrailCode = @I_cHistoryAuditTrailCode   select @iCounter = @iCounter + 1   if @cAuditTrailCode = ''  continue   select  @cBatchNumber = BACHNUMB  from  GL10000  where  ORTRXSRC = @cAuditTrailCode  and ORCOMID  = @I_cOrigIntercompanyID  and BCHSOURC = @GL_NORMAL   if @cBatchNumber is not NULL  begin  if exists(  select  1  from  SY00500  where  BACHNUMB = @cBatchNumber  and BCHSOURC = @GL_NORMAL  and BCHSTTUS = @RECEIVING )  begin  select @O_cBatchNumber = @cBatchNumber  end  else  begin  update  SY00500  set  BCHSTTUS = @RECEIVING  where  BACHNUMB = @cBatchNumber  and BCHSOURC = @GL_NORMAL  and BCHSTTUS = @AVAILABLE   if @@rowcount = 1  begin  select @O_cBatchNumber = @cBatchNumber   insert into  DYNAMICS.dbo.SY00800 (   WINTYPE,  USERID,  CMPNYNAM,  BCHSOURC,  BACHNUMB,  POSTING,  TRXSOURC )  values(   @I_sWindowType,  @I_cUserID,  @I_cCompanyName,  @GL_NORMAL,    @cBatchNumber,  @TRUE,     @GENERAL_ENTRY)     if @@rowcount <> 1  begin  select @O_iErrorState = 20946  break  end   end   end   end    end   end   if @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction end else if @tTransaction = 1  commit transaction   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[icpGetBatch] TO [DYNGRP]
GO

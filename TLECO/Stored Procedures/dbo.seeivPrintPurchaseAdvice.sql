SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 Create Procedure [dbo].[seeivPrintPurchaseAdvice]  @FromLocation Varchar(40),  @ToLocation Varchar(40),  @FromItemNumber Varchar(40),  @ToItemNumber Varchar(40),  @FromDescription Varchar(110),  @ToDescription Varchar(110),  @FromGenericDesc Varchar(11),  @ToGenericDesc Varchar(11),  @FromVendorID Varchar(50),  @ToVendorID Varchar(50),  @FromUSCATVLS_1 Varchar(11),  @ToUSCATVLS_1 Varchar(11),  @FromUSCATVLS_2 Varchar(11),  @ToUSCATVLS_2 Varchar(11),  @FromUSCATVLS_3 Varchar(11),  @ToUSCATVLS_3 Varchar(11),  @FromUSCATVLS_4 Varchar(11),  @ToUSCATVLS_4 Varchar(11),  @FromUSCATVLS_5 Varchar(11),  @ToUSCATVLS_5 Varchar(11),  @FromUSCATVLS_6 Varchar(11),  @ToUSCATVLS_6 Varchar(11),  @IncludeQtyReq Tinyint,  @IncludeZeroReorder Tinyint,  @CalcSuggestedQty Tinyint  As  Declare @SuggestedQty Money  Declare @ItemNumber Varchar(50)  Declare @QtyOnHand Numeric(19,5)  Declare @QtyAllocated Numeric(19,5)  Declare @QtyBackOrdered Numeric(19,5)  Declare @QtyOnOrder Numeric(19,5)  Declare @QtyRequisitioned Numeric(19,5)  Declare @OrderPointQty Numeric(19,5)  Declare @ReorderVariance Numeric(19,5)  Declare @OrderUpToLevel Numeric(19,5)  Declare @PrimaryVendor Varchar(50)  Declare @LocationCode Varchar(40)  Declare @QtyInBase Numeric(19,5)  Declare @QtyToOrder Money  Declare @PurchasingUoM Varchar(40)   Create Table #ttResult  ( [ItemNumber] Varchar(40) Null,  [QtyToOrder] Money Null,  [QtyInBaseUoM] Money Null,  [UofM] Varchar(40) Null,  [Location] Varchar(40) Null,  [RecordType] Int Null  )    Declare ItemCursor Cursor Local Forward_Only Static For   Select IV_ItemMaster.ITEMNMBR,  IV_ItemMasterQTY.QTYONHND,   IV_ItemMasterQTY.ATYALLOC,   IV_ItemMasterQTY.QTYBKORD,   IV_ItemMasterQTY.QTYONORD,  IV_ItemMasterQTY.QTYRQSTN,  IV_ItemMasterQTY.ORDRPNTQTY,   IV_ItemMasterQTY.REORDERVARIANCE,   IV_ItemMasterQTY.ORDRUPTOLVL,   IV_ItemMasterQTY.PRIMVNDR,   IV_ItemMasterQTY.LOCNCODE   From IV00101 As IV_ItemMaster  Left Join IV00102 As IV_ItemMasterQTY On IV_ItemMaster.ITEMNMBR = IV_ItemMasterQTY.ITEMNMBR  Where IV_ItemMaster.ITEMTYPE = 1  Order By IV_ItemMaster.ITEMNMBR, IV_ItemMasterQTY.LOCNCODE    Open ItemCursor   Fetch Next From ItemCursor   Into @ItemNumber,   @QtyOnHand,   @QtyAllocated,   @QtyBackOrdered,   @QtyOnOrder,   @QtyRequisitioned,   @OrderPointQty,   @ReorderVariance,   @OrderUpToLevel,   @PrimaryVendor,   @LocationCode   While (@@Fetch_Status = 0)   Begin  If ((@OrderPointQty > 0.00) Or (@IncludeZeroReorder = 1))  Begin  Select @SuggestedQty = @QtyOnHand - @QtyAllocated - @QtyBackOrdered + @QtyOnOrder   If @IncludeQtyReq = 1  Select @SuggestedQty = @SuggestedQty + @QtyRequisitioned   If (@SuggestedQty <= (@OrderPointQty + @ReorderVariance)) Or   ((@OrderPointQty = 0.00 )And (@IncludeZeroReorder = 1))  Begin  Select @SuggestedQty =  Case   When @CalcSuggestedQty = 1 Then @OrderPointQty - @SuggestedQty   Else @OrderUpToLevel - @SuggestedQty   End    If  ((@PrimaryVendor <> '') And (@SuggestedQty >= 0.00))  Begin  If (@SuggestedQty < (Select ECORDQTY From IV00103   Where ITEMNMBR = @ItemNumber And VENDORID = @PrimaryVendor))  Select @SuggestedQty = ECORDQTY From IV00103 Where ITEMNMBR = @ItemNumber And VENDORID = @PrimaryVendor   If (@SuggestedQty < (Select MINORQTY From IV00103   Where ITEMNMBR = @ItemNumber And VENDORID = @PrimaryVendor))  Select @SuggestedQty = MINORQTY From IV00103 Where ITEMNMBR = @ItemNumber And VENDORID = @PrimaryVendor  End    If (@SuggestedQty > 0.00 Or ((@SuggestedQty = 0.00) And @IncludeZeroReorder = 1)) And   ((Select UOMSCHDL From IV00101 Where ITEMNMBR = @ItemNumber) <> '')  Begin  Select @PurchasingUoM = PRCHSUOM From IV00101 Where ITEMNMBR = @ItemNumber  If (@PurchasingUoM = '')  Select @QtyInBase = 1.00   Else Begin   Select @QtyInBase = QTYBSUOM From IV40202   Inner Join IV00101 On IV40202.UOMSCHDL = IV00101.UOMSCHDL   And IV40202.UOFM = @PurchasingUoM   And IV00101.ITEMNMBR = @ItemNumber    If @QtyInBase = 0.00  Select @QtyInBase = 1.00  End    Select @QtyToOrder = Round(@SuggestedQty / @QtyInBase, 0, 1)   If (@SuggestedQty / @QtyInBase) > @SuggestedQty  Select @QtyToOrder = @QtyToOrder + 1  Insert Into #ttResult (ItemNumber, QtyToOrder, QtyInBaseUoM, UofM, Location, RecordType)  Values (@ItemNumber, @QtyToOrder, @QtyInBase, @PurchasingUoM,   Case When @LocationCode = '' Then 'ALL' Else @LocationCode End, 1)   End   End   End    Fetch Next From ItemCursor  Into @ItemNumber,   @QtyOnHand,   @QtyAllocated,   @QtyBackOrdered,   @QtyOnOrder,   @QtyRequisitioned,   @OrderPointQty,   @ReorderVariance,   @OrderUpToLevel,   @PrimaryVendor,   @LocationCode  End   Close ItemCursor  Deallocate ItemCursor    Select tt.ItemNumber,  tt.Location,  ItemQTYMaster.RCRDTYPE As RecordType,  ItemMaster.ITEMDESC As ItemDescription,  ItemMaster.ITMGEDSC As ItemGenericDesc,  ItemMaster.DECPLQTY As DecPointForQTY,   ItemMaster.DECPLCUR As DecPointForCurrency,  ItemQTYMaster.QTYONHND As QtyOnHand,  ItemQTYMaster.ATYALLOC As QtyAllocated,  (ItemQTYMaster.QTYONHND - ItemQTYMaster.ATYALLOC - ItemQTYMaster.QTYCOMTD) As QtyAvailable,  ItemQTYMaster.QTYBKORD As QtyBackOrder,  ItemQTYMaster.QTYONORD As QtyOnOrder,  ItemQTYMaster.ORDRPNTQTY As OrderPointQty,  ItemQTYMaster.REORDERVARIANCE As ReorderVariance,  ItemQTYMaster.ORDRUPTOLVL As OrderUpToLevel,  tt.QtyToOrder,  tt.UofM,  tt.QtyInBaseUoM,  CASE WHEN ItemVendor.ITMVNDTY = 1 THEN '*' ELSE '' END AS PrimaryVendor,  ItemVendor.VENDORID As VendorID,  ItemVendor.VENDNAME As VendorName,  ItemVendor.ECORDQTY As EconomicOrderQty,  ItemVendor.MINORQTY As MinOrderQty,  ItemVendor.AVRGLDTM As AverageLead,   ItemVendor.LRCPTCST As LastReceiptCost,  ItemMaster.USCATVLS_1,  ItemMaster.USCATVLS_2,  ItemMaster.USCATVLS_3,  ItemMaster.USCATVLS_4,  ItemMaster.USCATVLS_5,  ItemMaster.USCATVLS_6  From #ttResult As tt   Left Join IV00101 As ItemMaster on tt.ItemNumber = ItemMaster.ITEMNMBR  Left Join IV00102 As ItemQTYMaster on tt.ItemNumber = ItemQTYMaster.ITEMNMBR  And ItemQTYMaster.LOCNCODE = (Case When tt.Location = 'ALL' Then '' Else tt.Location End)  Left Join ( Select ITEMNMBR, Vendor.VENDORID, ITMVNDTY, ECORDQTY, MINORQTY, AVRGLDTM, LRCPTCST, VENDNAME  From IV00103 As Vendor  Left Join PM00200 As VendorMaster on Vendor.VENDORID = VendorMaster.VENDORID  Where ( (@FromVendorID = 'ALL') Or (Vendor.VENDORID >= @FromVendorID) )  And ( (@ToVendorID = 'ALL') Or (Vendor.VENDORID <= @ToVendorID) )) As ItemVendor   On tt.ItemNumber = ItemVendor.ITEMNMBR  Where ( (tt.Location >= @FromLocation) And (tt.Location <= @ToLocation) )  And ( (@FromItemNumber = 'ALL') Or (tt.ItemNumber >= @FromItemNumber) )  And ( (@ToItemNumber = 'ALL') Or (tt.ItemNumber <= @ToItemNumber) )  And ( (@FromDescription = 'ALL') Or (ItemMaster.ITEMDESC >= @FromDescription) )  And ( (@ToDescription = 'ALL') Or (ItemMaster.ITEMDESC <= @ToDescription) )  And ( (@FromGenericDesc = 'ALL') Or (ItemMaster.ITMGEDSC >= @FromGenericDesc) )  And ( (@ToGenericDesc = 'ALL') Or (ItemMaster.ITMGEDSC <= @ToGenericDesc) )  And ( (@FromUSCATVLS_1 = 'ALL') Or (ItemMaster.USCATVLS_1 >= @FromUSCATVLS_1) )  And ( (@ToUSCATVLS_1 = 'ALL') Or (ItemMaster.USCATVLS_1 <= @ToUSCATVLS_1) )  And ( (@FromUSCATVLS_2 = 'ALL') Or (ItemMaster.USCATVLS_2 >= @FromUSCATVLS_2) )  And ( (@ToUSCATVLS_2 = 'ALL') Or (ItemMaster.USCATVLS_2 <= @ToUSCATVLS_2) )  And ( (@FromUSCATVLS_3 = 'ALL') Or (ItemMaster.USCATVLS_3 >= @FromUSCATVLS_3) )  And ( (@ToUSCATVLS_3 = 'ALL') Or (ItemMaster.USCATVLS_3 <= @ToUSCATVLS_3) )  And ( (@FromUSCATVLS_4 = 'ALL') Or (ItemMaster.USCATVLS_4 >= @FromUSCATVLS_4) )  And ( (@ToUSCATVLS_4 = 'ALL') Or (ItemMaster.USCATVLS_4 <= @ToUSCATVLS_4) )  And ( (@FromUSCATVLS_5 = 'ALL') Or (ItemMaster.USCATVLS_5 >= @FromUSCATVLS_5) )  And ( (@ToUSCATVLS_5 = 'ALL') Or (ItemMaster.USCATVLS_5 <= @ToUSCATVLS_5) )  And ( (@FromUSCATVLS_6 = 'ALL') Or (ItemMaster.USCATVLS_6 >= @FromUSCATVLS_6) )  And ( (@ToUSCATVLS_6 = 'ALL') Or (ItemMaster.USCATVLS_6 <= @ToUSCATVLS_6) )  Order By tt.ItemNumber, tt.Location   Drop Table #ttResult   
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [DYNGRP]
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [rpt_materials manager]
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [rpt_operations manager]
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [rpt_power user]
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [rpt_production manager]
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [rpt_purchasing manager]
GO
GRANT EXECUTE ON  [dbo].[seeivPrintPurchaseAdvice] TO [rpt_warehouse manager]
GO

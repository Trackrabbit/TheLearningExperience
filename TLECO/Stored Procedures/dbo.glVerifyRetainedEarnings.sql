SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glVerifyRetainedEarnings]  @I_iDefaultREAccountIndex int  = NULL,  @I_iPnLAccountIndex int  = NULL,  @I_tDivisionalClosing tinyint  = NULL,  @I_iSQLSessionID int  = NULL,  @I_mDebit numeric(19,5) = NULL,  @I_mCredit numeric(19,5) = NULL,  @I_tBeforeSeg tinyint  = NULL,  @I_tSegLength tinyint  = NULL,  @I_tAfterSeg tinyint  = NULL,  @I_cDivSeg char(66) = NULL,  @I_sAllocationType smallint = NULL,  @I_tPosting tinyint  = NULL,  @I_tMCRegistered tinyint  = NULL,  @I_cCurrencyID char(15) = NULL,  @I_cFuncCurrencyID char(15) = NULL,  @I_sFuncDecimalPlaces smallint = NULL,  @I_sMCTransaction smallint = NULL,  @I_mOrigDebit numeric(19,5) = NULL,  @I_mOrigCredit numeric(19,5) = NULL,  @I_cOrigCurrencyID char(15) = NULL,  @I_sOrigDecimalPlaces smallint = NULL,  @I_iRelationID int  = NULL,  @I_sUserLevel smallint = NULL,  @I_iAccessAllAccounts int  = NULL,  @O_tAlreadyVerified tinyint  = NULL output,  @O_iError int   = NULL output,  @O_bLineMessages binary(4) = NULL output,  @O_bLineMessages2 binary(4) = NULL output,  @O_iREAccountIndex int  = NULL output,  @O_sREAccountType smallint = NULL output,  @O_tDistributionsExist tinyint  = NULL output,  @O_iErrorState int   = NULL output as  declare  @TRUE tinyint,   @FALSE    tinyint,  @cNonDivisional char(66),  @MC_TRANSACTION int,  @MS_ITEM_21 int,  @MS_ITEM_30 int,  @YEAR_END_CLOSE int,  @sPostingType smallint,   @tActive tinyint,   @sFixedOrVariable smallint,   @cPnLAccountString char(128),   @cREAccountString char(128),   @iStatus int,  @iError int,  @vAccountfiltertable varchar(255),  @vWhere1 varchar(255)  select  @FALSE  = 0,  @TRUE  = 1,  @cNonDivisional = 'NonDivisional',  @MC_TRANSACTION = 1,  @MS_ITEM_21 = power(2,12),  @MS_ITEM_30 = power(2,7),  @YEAR_END_CLOSE = 3   select   @O_tAlreadyVerified = @FALSE,  @O_iREAccountIndex = 0,  @O_sREAccountType = 0,  @O_bLineMessages = 0x00000000,  @O_bLineMessages2 = 0x00000000,  @O_iError = 0,  @O_tDistributionsExist = @FALSE,  @O_iErrorState = 0,  @cPnLAccountString = '',  @cREAccountString = ''  if @I_iDefaultREAccountIndex is NULL or  @I_iPnLAccountIndex is NULL or  @I_tDivisionalClosing is NULL or  @I_iSQLSessionID is NULL or  @I_mDebit is NULL or  @I_mCredit is NULL or  @I_tBeforeSeg is NULL or  @I_tSegLength is NULL or  @I_tAfterSeg is NULL or  @I_cDivSeg is NULL or  @I_tPosting is NULL or  @I_tMCRegistered is NULL or  @I_cCurrencyID is NULL or  @I_cFuncCurrencyID is NULL or  @I_sFuncDecimalPlaces is NULL or  @I_sMCTransaction is NULL or  @I_mOrigDebit is NULL or  @I_mOrigCredit is NULL or  @I_cOrigCurrencyID is NULL or  @I_sOrigDecimalPlaces   is NULL or  @I_iRelationID is NULL or  @I_sUserLevel is NULL or  @I_iAccessAllAccounts is NULL begin  select @O_iErrorState = 20068  return end  if @I_tDivisionalClosing = @TRUE begin   if @I_cDivSeg = ''  begin  select  @cPnLAccountString = ACTNUMST  from  GL00105  where  ACTINDX = @I_iPnLAccountIndex   if @@rowcount <> 1  begin  select @O_iError = 21  select @O_bLineMessages = (@O_bLineMessages | @MS_ITEM_30)  select @O_iErrorState = 20412  return  end   select @I_cDivSeg = substring( @cPnLAccountString, @I_tBeforeSeg + 1, @I_tSegLength )   end    select  @O_sREAccountType = sAccountType,  @O_iREAccountIndex = iAccountIndex,  @O_bLineMessages = bLineMessages,  @O_tDistributionsExist = tDistributionsExist  from  #RetainedEarn   where  cSegment = @I_cDivSeg  and cCurrencyID = @I_cCurrencyID  and tVerified = @TRUE   if @@rowcount = 1  begin  select @O_tAlreadyVerified = @TRUE   if @I_tMCRegistered = @TRUE  and @I_sMCTransaction = @MC_TRANSACTION  begin  select  @O_bLineMessages2 = bLineMessages2  from  #AcctCurrency  where  iAccountIndex = @O_iREAccountIndex  and cCurrencyID = @I_cCurrencyID  and tVerified = @TRUE   if @@rowcount <> 1  begin  select @O_iErrorState = 20791  return  end  end   end   else   begin   select  @cREAccountString = ACTNUMST  from  GL00105  where  ACTINDX = @I_iDefaultREAccountIndex  if @@rowcount <> 1  begin  select @O_iError = 1  select @O_bLineMessages = (@O_bLineMessages | @MS_ITEM_30)  select @O_iErrorState = 20413  return  end   select @cREAccountString =  substring( @cREAccountString, 1, @I_tBeforeSeg )  + substring(@I_cDivSeg, 1, @I_tSegLength)  + substring(@cREAccountString,@I_tBeforeSeg + @I_tSegLength + 1,@I_tAfterSeg)   end  end  else begin   select @I_cDivSeg = @cNonDivisional   select   @O_sREAccountType = sAccountType,  @O_iREAccountIndex = iAccountIndex,  @O_bLineMessages = bLineMessages,  @O_tDistributionsExist = tDistributionsExist  from  #RetainedEarn   where  cSegment = @I_cDivSeg  and cCurrencyID = @I_cCurrencyID  and tVerified = @TRUE   if @@rowcount = 1  begin  select @O_tAlreadyVerified = @TRUE   if @I_tMCRegistered = @TRUE  and @I_sMCTransaction = @MC_TRANSACTION  begin  select   @O_bLineMessages2 = bLineMessages2  from  #AcctCurrency  where  iAccountIndex = @O_iREAccountIndex  and  cCurrencyID = @I_cCurrencyID  and  tVerified = @TRUE   if @@rowcount <> 1  begin   select @O_iErrorState = 20792  return  end  end   end   else   begin  select  @cREAccountString = ACTNUMST  from  GL00105  where  ACTINDX = @I_iDefaultREAccountIndex  if @@rowcount <> 1  begin  select @O_iError = 1   select @O_bLineMessages = (@O_bLineMessages | @MS_ITEM_21)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20414  end   return  end  end   end   if @O_tAlreadyVerified = @FALSE begin  delete from #REAccount   if @I_iAccessAllAccounts = @TRUE  begin  select @vAccountfiltertable = ''  select @vWhere1 = ''  end  else  begin  select @vWhere1 =' and acct.ACTINDX = acctfilter.ACTINDX and acctfilter.RELID = '  + str(@I_iRelationID)   select @vAccountfiltertable =   case when @I_sUserLevel = 0 then  'GL00100F1 acctfilter, '  else  'GL00100F' + str(@I_sUserLevel,1) + ' acctfilter, '  end  end   delete #REAccount   exec('insert #REAccount select acct.ACCTTYPE, acct.PSTNGTYP, acct.ACTIVE,   acct.FXDORVAR,acct.ACTINDX from GL00100 acct, ' +  @vAccountfiltertable + ' GL00105 where acct.ACTINDX = GL00105.ACTINDX  and GL00105.ACTNUMST = ' + '''' + @cREAccountString + '''' + @vWhere1)   select   @O_sREAccountType = ACCTTYPE,  @sPostingType = PSTNGTYP,   @tActive = ACTIVE,   @sFixedOrVariable = FXDORVAR,  @O_iREAccountIndex = ACTINDX  from   #REAccount   if @@rowcount <> 1  begin  select @O_iError = 1   select @O_bLineMessages = (@O_bLineMessages | @MS_ITEM_21)   if @I_tPosting = @TRUE  begin  select @O_iErrorState = 20415  end   return  end   insert  into #RetainedEarn (  tVerified,  iSQLSessionID,  cSegment,  iAccountIndex,  sAccountType,  sPostingType,  tActive,  sFixedOrVariable,  bLineMessages,  tDistributionsExist,  cCurrencyID  ) values (   @FALSE,  @I_iSQLSessionID,  @I_cDivSeg,  @O_iREAccountIndex,  @O_sREAccountType,  @sPostingType,  @tActive,  @sFixedOrVariable,  @O_bLineMessages,  @O_tDistributionsExist,  @I_cCurrencyID  )   if @@rowcount <> 1  begin  select @O_iErrorState = 20416  return  end   execute @iStatus = glSetRetainedEarningsStatus  @I_iSQLSessionID,  @I_sAllocationType,  @I_tPosting,  @I_mDebit,  @I_mCredit,  @I_sFuncDecimalPlaces,  @I_sMCTransaction,  @I_mOrigDebit,  @I_mOrigCredit,  @I_cOrigCurrencyID,  @I_sOrigDecimalPlaces,  @O_iError output,  @O_bLineMessages output,  @O_bLineMessages2 output,  @O_tDistributionsExist output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus   if @I_tMCRegistered = @TRUE  and @I_sMCTransaction = @MC_TRANSACTION  and @I_sAllocationType <> @YEAR_END_CLOSE  begin  insert  into #AcctCurrency (  iAccountIndex,  cCurrencyID,  sCurrencyIndex,  sAccountType,  bLineMessages2,  mFuncDebit,  mFuncCredit,  mOrigDebit,  mOrigCredit,  sOrigDecimalPlaces,  sRateCalcMethod,  cRateTypeID,  cExchangeTableID,  tVerified  ) values (  @O_iREAccountIndex,  @I_cCurrencyID,  0,  @O_sREAccountType,   0x00000000,  0.0,  0.0,  0.0,  0.0,  0,  0,  '',  '',  @FALSE  )  execute @iStatus = glmcSetAccountCurrencyStatus  @I_iSQLSessionID,  @I_sAllocationType,  @I_tPosting,  @I_cFuncCurrencyID,  @O_bLineMessages2 output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if @O_iErrorState <> 0 or @iStatus <> 0  return @iStatus   end   end   return(@iStatus)    
GO
GRANT EXECUTE ON  [dbo].[glVerifyRetainedEarnings] TO [DYNGRP]
GO

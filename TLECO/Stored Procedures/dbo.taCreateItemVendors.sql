SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateItemVendors] @I_vITEMNMBR char(30),    @I_vVENDORID char(15),   @I_vVNDITNUM char(30) = null,  @I_vQTYRQSTN numeric(19,5) = 0,  @I_vAVRGLDTM int = 0,   @I_vNORCTITM smallint = 0,   @I_vMINORQTY numeric(19,5) = 0,  @I_vMAXORDQTY numeric(19,5) = 0,  @I_vECORDQTY numeric(19,5) = 0,  @I_vVNDITDSC char(100) = null,  @I_vLast_Originating_Cost numeric(19,5) = 0,  @I_vLast_Currency_ID char(15) = '',   @I_vFREEONBOARD smallint = 1,    @I_vPRCHSUOM char(8) = '',   @I_vPLANNINGLEADTIME smallint = 0,   @I_vORDERMULTIPLE numeric(19,5) = 1,  @I_vMNFCTRITMNMBR char(30) = '',   @I_vUpdateIfExists   tinyint = 1,   @I_vRequesterTrx   smallint = 0,   @I_vUSRDEFND1    char(50) = '',       @I_vUSRDEFND2    char(50) = '',       @I_vUSRDEFND3    char(50) = '',       @I_vUSRDEFND4    varchar(8000) = '',  @I_vUSRDEFND5    varchar(8000) = '',  @O_iErrorState    int output, @oErrString    varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @ITMVNDTY smallint,      @QTYONORD numeric(19,5),    @QTY_Drop_Shipped numeric(19,5),   @LSTORDDT datetime,     @LSORDQTY numeric(19,5),    @LRCPTQTY numeric(19,5),    @LSRCPTDT datetime,     @LRCPTCST numeric(19,5),    @CURRNIDX smallint,     @NOTEINDX numeric(19,5),    @CMPANYID smallint,     @ITEMDESC char(100),     @iGetNextNoteIdxErrState int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int      select  @ITMVNDTY = 2,       @QTYONORD = 0,      @QTY_Drop_Shipped = 0,     @LSTORDDT = '',      @LSORDQTY = 0,      @LRCPTQTY = 0,      @LSRCPTDT = '',      @LRCPTCST = 0,      @CURRNIDX = 0,      @NOTEINDX = 0,  @CMPANYID = 0,      @ITEMDESC = '',      @iGetNextNoteIdxErrState = 0,  @iStatus = 0,   @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateItemVendorsPre  @I_vITEMNMBR output,  @I_vVENDORID output,  @I_vVNDITNUM output,  @I_vQTYRQSTN output,  @I_vAVRGLDTM output,  @I_vNORCTITM output,  @I_vMINORQTY output,  @I_vMAXORDQTY output,  @I_vECORDQTY output,  @I_vVNDITDSC output,  @I_vLast_Originating_Cost output,  @I_vLast_Currency_ID output,  @I_vFREEONBOARD output,  @I_vPRCHSUOM output,  @I_vPLANNINGLEADTIME output,  @I_vORDERMULTIPLE output,  @I_vMNFCTRITMNMBR output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3246    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vITEMNMBR is NULL or  @I_vVENDORID is NULL or  @I_vQTYRQSTN is NULL or  @I_vAVRGLDTM is NULL or  @I_vNORCTITM is NULL or  @I_vMINORQTY is NULL or  @I_vMAXORDQTY is NULL or  @I_vECORDQTY is NULL or  @I_vLast_Originating_Cost is NULL or  @I_vLast_Currency_ID is NULL or  @I_vFREEONBOARD is NULL or  @I_vPRCHSUOM is NULL or  @I_vPLANNINGLEADTIME is NULL or  @I_vORDERMULTIPLE is NULL or  @I_vMNFCTRITMNMBR is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or   @I_vUSRDEFND1 is NULL or   @I_vUSRDEFND2 is NULL or   @I_vUSRDEFND3 is NULL or   @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 3247    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vMNFCTRITMNMBR = UPPER(@I_vMNFCTRITMNMBR),  @I_vLast_Currency_ID = UPPER(@I_vLast_Currency_ID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 3248   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vITEMNMBR = '' ) begin  select @O_iErrorState = 3249    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vITEMNMBR <> '' ) begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 3250    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vVNDITDSC is null) begin  select @ITEMDESC = ITEMDESC from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR end  if ( @I_vVENDORID = '' ) begin  select @O_iErrorState = 3251    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vVENDORID <> '' ) begin  if (not exists(select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID))  begin  select @O_iErrorState = 3252    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vITEMNMBR <> '' and @I_vVENDORID <> '' ) begin  if (not exists(select 1 from IV00102 (nolock) where ITEMNMBR = @I_vITEMNMBR and PRIMVNDR = @I_vVENDORID))  begin  select @ITMVNDTY = 2  end  else  begin  select @ITMVNDTY = 1  end end  if ( @I_vQTYRQSTN < 0 )  begin  select @O_iErrorState = 3253     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vAVRGLDTM < 0 ) begin  select @O_iErrorState = 3254     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vNORCTITM < 0 ) begin  select @O_iErrorState = 3255     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vMINORQTY < 0 ) begin  select @O_iErrorState = 3256     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vMAXORDQTY < 0 ) begin  select @O_iErrorState = 3257     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vECORDQTY < 0 ) begin  select @O_iErrorState = 3258     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vLast_Originating_Cost < 0 ) begin  select @O_iErrorState = 3259     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vLast_Currency_ID <> '')  begin  if (not exists(select 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vLast_Currency_ID))  begin  select @O_iErrorState = 3260     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vFREEONBOARD < 1 OR @I_vFREEONBOARD > 3 ) begin  select @O_iErrorState = 3261     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vPRCHSUOM <> '' ) begin  if (not exists(select 1 from IV00106 (nolock) where ITEMNMBR = @I_vITEMNMBR and UOFM = @I_vPRCHSUOM))  begin  select @O_iErrorState = 3262     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vPLANNINGLEADTIME < 0 ) begin  select @O_iErrorState = 3263     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vORDERMULTIPLE < 0 ) begin  select @O_iErrorState = 3264     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vMINORQTY > @I_vMAXORDQTY) and (@I_vMAXORDQTY <> 0)) begin  select @O_iErrorState = 3265     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vECORDQTY > @I_vMAXORDQTY) and (@I_vMAXORDQTY <> 0)) begin  select @O_iErrorState = 3266     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vORDERMULTIPLE > @I_vMAXORDQTY ) and ( @I_vMAXORDQTY <> 0 ) begin  select @O_iErrorState = 3267     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 ) begin  select @O_iErrorState = 3697     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @CURRNIDX = DECPLCUR + 6 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (@O_iErrorState = 0) begin  if not exists( select 1 from IV00103 (nolock) where  ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID )   begin  insert IV00103  (  ITEMNMBR,  VENDORID,  ITMVNDTY,  VNDITNUM,  QTYRQSTN,  QTYONORD,  QTY_Drop_Shipped,  LSTORDDT,  LSORDQTY,  LRCPTQTY,  LSRCPTDT,  LRCPTCST,  AVRGLDTM,  NORCTITM,  MINORQTY,  MAXORDQTY,  ECORDQTY,  VNDITDSC,  Last_Originating_Cost,  Last_Currency_ID,  FREEONBOARD,  PRCHSUOM,  CURRNIDX,  PLANNINGLEADTIME,  ORDERMULTIPLE,  MNFCTRITMNMBR  )  select  @I_vITEMNMBR,     @I_vVENDORID,     @ITMVNDTY,     case       when (@I_vVNDITNUM is null)  then @I_vITEMNMBR  else @I_vVNDITNUM  end,  @I_vQTYRQSTN,     @QTYONORD,      @QTY_Drop_Shipped,    @LSTORDDT,     @LSORDQTY,     @LRCPTQTY,     @LSRCPTDT,     @LRCPTCST,     @I_vAVRGLDTM * 100,    @I_vNORCTITM,     @I_vMINORQTY,     @I_vMAXORDQTY,     @I_vECORDQTY,     case       when (@I_vVNDITDSC is null)  then @ITEMDESC  else @I_vVNDITDSC  end,  @I_vLast_Originating_Cost,   @I_vLast_Currency_ID,    @I_vFREEONBOARD,    @I_vPRCHSUOM,     @CURRNIDX,     @I_vPLANNINGLEADTIME,    @I_vORDERMULTIPLE,    @I_vMNFCTRITMNMBR    if @@error <> 0  begin  select @O_iErrorState = 3268    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  if (@I_vUpdateIfExists > 0)  begin  update IV00103 set   VNDITNUM =   case  WHEN (@I_vVNDITNUM = '') or (@I_vVNDITNUM is null)    THEN VNDITNUM  ELSE @I_vVNDITNUM  end,  VNDITDSC =   case  WHEN (@I_vVNDITDSC = '') or (@I_vVNDITDSC is null)    THEN VNDITDSC  ELSE @I_vVNDITDSC  end,  MNFCTRITMNMBR =   case   WHEN @I_vMNFCTRITMNMBR = ''  THEN MNFCTRITMNMBR  ELSE @I_vMNFCTRITMNMBR   end,   QTYRQSTN =   case   WHEN @I_vQTYRQSTN = 0  THEN QTYRQSTN  ELSE @I_vQTYRQSTN   end,   MINORQTY =   case   WHEN @I_vMINORQTY = 0  THEN MINORQTY  ELSE @I_vMINORQTY   end,   MAXORDQTY =   case   WHEN @I_vMAXORDQTY = 0  THEN MAXORDQTY  ELSE @I_vMAXORDQTY   end,   ECORDQTY =   case   WHEN @I_vECORDQTY = 0  THEN ECORDQTY  ELSE @I_vECORDQTY   end,   Last_Originating_Cost =   case   WHEN @I_vLast_Originating_Cost = 0  THEN Last_Originating_Cost  ELSE @I_vLast_Originating_Cost  end,  Last_Currency_ID =   case   WHEN @I_vLast_Currency_ID = ''  THEN Last_Currency_ID  ELSE @I_vLast_Currency_ID  end,   ORDERMULTIPLE =   case   WHEN @I_vORDERMULTIPLE = 0  THEN ORDERMULTIPLE  ELSE @I_vORDERMULTIPLE  end,   AVRGLDTM =   case   WHEN @I_vAVRGLDTM = 0  THEN AVRGLDTM  ELSE @I_vAVRGLDTM * 100  end,   PLANNINGLEADTIME =   case   WHEN @I_vPLANNINGLEADTIME = 0  THEN PLANNINGLEADTIME  ELSE @I_vPLANNINGLEADTIME   end,   NORCTITM =   case  WHEN @I_vNORCTITM = 0   THEN NORCTITM  ELSE @I_vNORCTITM  end,  PRCHSUOM =   case  WHEN @I_vPRCHSUOM = ''  THEN PRCHSUOM  ELSE @I_vPRCHSUOM  end  from IV00103 (nolock) where ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  if (@@error <> 0)  begin  select @O_iErrorState = 3269    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  exec @iStatus = taCreateItemVendorsPost  @I_vITEMNMBR,  @I_vVENDORID,  @I_vVNDITNUM,  @I_vQTYRQSTN,  @I_vAVRGLDTM,  @I_vNORCTITM,  @I_vMINORQTY,  @I_vMAXORDQTY,  @I_vECORDQTY,  @I_vVNDITDSC,  @I_vLast_Originating_Cost,  @I_vLast_Currency_ID,  @I_vFREEONBOARD,  @I_vPRCHSUOM,  @I_vPLANNINGLEADTIME,  @I_vORDERMULTIPLE,  @I_vMNFCTRITMNMBR,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3270    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateItemVendors] TO [DYNGRP]
GO

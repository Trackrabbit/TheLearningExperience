SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPoHdr]  @I_vPOTYPE smallint = null,   @I_vPONUMBER char(17),     @I_vVENDORID char(15),    @I_vVENDNAME char(64) = null,   @I_vDOCDATE datetime = null,   @I_vBUYERID char(15) = null,   @I_vALLOWSOCMTS tinyint = null,   @I_vTRDISAMT numeric(19,5) = null,  @I_vFRTAMNT numeric(19,5) = null,  @I_vMSCCHAMT numeric(19,5) = null,  @I_vTAXAMNT numeric(19,5) = null,  @I_vSUBTOTAL numeric(19,5) = null,  @I_vCUSTNMBR char(15) = null,   @I_vPRSTADCD char(15) = null,   @I_vCMPNYNAM char(64) = null,   @I_vCONTACT char(60) = null,   @I_vADDRESS1 char(60) = null,   @I_vADDRESS2 char(60) = null,   @I_vADDRESS3 char(60) = null,   @I_vCITY char(35) = null,   @I_vSTATE char(29) = null,   @I_vZIPCODE char(10) = null,   @I_vCCode char(6) = null,   @I_vCOUNTRY char(60) = null,   @I_vPHONE1 char(21) = null,   @I_vPHONE2 char(21) = null,   @I_vPHONE3 char(21) = null,   @I_vFAX char(21) = null,   @I_vPrint_Phone_NumberGB smallint = null,     @I_vVADCDPAD char(15) = null,   @I_vPURCHCMPNYNAM char(64) = null,  @I_vPURCHCONTACT char(60) = null,  @I_vPURCHADDRESS1 char(60) = null,  @I_vPURCHADDRESS2 char(60) = null,  @I_vPURCHADDRESS3 char(60) = null,  @I_vPURCHCITY char(35) = null,   @I_vPURCHSTATE char(29) = null,   @I_vPURCHZIPCODE char(10) = null,  @I_vPURCHCCode char(6) = null,   @I_vPURCHCOUNTRY char(60) = null,  @I_vPURCHPHONE1 char(21) = null,  @I_vPURCHPHONE2 char(21) = null,  @I_vPURCHPHONE3 char(21) = null,  @I_vPURCHFAX char(21) = null,   @I_vPRBTADCD char(15) = null,   @I_vSHIPMTHD char(15) = null,   @I_vPYMTRMID char(20) = null,   @I_vDSCPCTAM numeric(19,2) = null,  @I_vDSCDLRAM numeric(19,5) = null,  @I_vDISAMTAV numeric(19,5) = null,  @I_vDUEDATE datetime = null,   @I_vDISCDATE datetime = null,   @I_vTXRGNNUM char(25) = null,   @I_vCONFIRM1 char(20) = null,   @I_vCOMMNTID char(15) = null,   @I_vCOMMENT_1 char(50) = null,   @I_vCOMMENT_2 char(50) = null,   @I_vCOMMENT_3 char(50) = null,   @I_vCOMMENT_4 char(50) = null,   @I_vHOLD tinyint = 0,    @I_vTAXSCHID char(15) = null,   @I_vPurchase_Freight_Taxable smallint=null, @I_vPurchase_Misc_Taxable smallint = null, @I_vFRTSCHID char(15) = null,   @I_vMSCSCHID char(15) = null,   @I_vFRTTXAMT numeric(19,5) = null,  @I_vMSCTXAMT numeric(19,5) = null,  @I_vBCKTXAMT numeric(19,5) = null,   @I_vBackoutFreightTaxAmt numeric(19,5)=null, @I_vBackoutMiscTaxAmt numeric(19,5)=null, @I_vBackoutTradeDiscTax numeric(19,5)=null, @I_vUSINGHEADERLEVELTAXES smallint = null, @I_vCURNCYID char(15) = null,   @I_vXCHGRATE numeric(19,7) = -1,  @I_vRATETPID char(15) = null,   @I_vEXPNDATE datetime = null,   @I_vEXCHDATE datetime = null,   @I_vEXGTBDSC char(30) = null,   @I_vEXTBLSRC char(50) = null,   @I_vRATEEXPR smallint = null,    @I_vDYSTINCR smallint = null,   @I_vRATEVARC numeric(19,7) = null,  @I_vTRXDTDEF smallint = null,   @I_vRTCLCMTD smallint = null,   @I_vPRVDSLMT smallint = null,   @I_vDATELMTS smallint = null,   @I_vTIME1 datetime = null,   @I_vUSERID char(15) = null,   @I_vPOSTATUS smallint = null,   @I_vCMMTTEXT varchar(500) = null,  @I_vPRMDATE datetime = null,   @I_vPRMSHPDTE datetime = null,   @I_vREQDATE datetime = null,   @I_vCONTENDDTE datetime = null,   @I_vCNTRLBLKTBY smallint = null,  @I_vREQTNDT datetime = null,   @I_vUpdateIfExists smallint = 0,   @I_vNOTETEXT  varchar(8000) = null,  @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @TRDDISCT numeric(19,5),  @CUSTNAME char(30),  @mylock tinyint,  @CMPANYID smallint,  @iStatement int,  @CURRNIDX int,  @TXRGNNUM char(25),  @CONFIRM1 char(20),  @REMSUBTO numeric(19,5),  @PONOTIDS_1 numeric(19,5),  @PONOTIDS_2 numeric(19,5),  @PONOTIDS_3 numeric(19,5),  @PONOTIDS_4 numeric(19,5),  @PONOTIDS_5 numeric(19,5),  @PONOTIDS_6 numeric(19,5),  @PONOTIDS_7 numeric(19,5),  @PONOTIDS_8 numeric(19,5),    @PONOTIDS_9 numeric(19,5),    @PONOTIDS_10 numeric(19,5),    @PONOTIDS_11 numeric(19,5),    @PONOTIDS_12 numeric(19,5),    @PONOTIDS_13 numeric(19,5),    @PONOTIDS_14 numeric(19,5),    @PONOTIDS_15 numeric(19,5),    @POPALWOP_3 tinyint,  @DSCPCTAM numeric(19,5),  @DSCDLRAM numeric(19,5),  @ODECPLCU smallint,  @dDUEDATE datetime,  @dDISCDATE datetime,  @TotalLineAmount numeric(19,5),  @CANCSUB numeric(19,5),  @ONHOLDDATE datetime,  @QUANTITY numeric (19,5),    @QTYCANCE numeric (19,5),    @TAXAMNTL numeric (19,5),  @TAXAMNTH numeric (19,5),  @FRTTXAMT numeric (19,5),  @ORFRTTAX numeric (19,5),  @MSCTXAMT numeric (19,5),  @ORMSCTAX numeric (19,5),  @FUNLCURR char(15),  @EXGTBLID char(15),  @ISMCTRX int,  @OREMSUBT numeric(19,5),  @ORSUBTOT numeric(19,5),  @Originating_Canceled_Sub numeric(19,5),  @ORTDISAM numeric(19,5),  @ORFRTAMT numeric(19,5),  @OMISCAMT numeric(19,5),  @ORTAXAMT numeric(19,5),  @ORDDLRAT numeric(19,5),  @ODISAMTAV numeric(19,5),  @OBTAXAMT numeric(19,5),  @OrigBackoutFreightTaxAmt numeric(19,5),  @OrigBackoutMiscTaxAmt numeric(19,5),  @OrigBackoutTradeDiscTax numeric(19,5),  @DECPLCUR int,  @LSTPRTDT datetime,  @linecount int,  @exists int,  @DISGRPER smallint,  @DUEGRPER smallint,  @MINORDER numeric(19,5),  @iGetNextNoteIdxErrState int,    @iCalcDueDateErrState int,  @iAddErrState int,  @iCustomState int,  @O_iCommentMstErrState int,  @iStatus int,  @iError int,  @O_oErrorState int,  @DECPLUSED int,  @SALPURCH smallint,  @DISCNTCB smallint,  @FREIGHT smallint,  @MISC smallint,  @TAX smallint,  @PymtTermAmnt numeric(19,5),  @DSCLCTYP smallint,  @VENDSTTS tinyint,  @MCINSTALLED smallint,  @POPHdrTbl char(18),  @DexRowID int,  @oExists int,  @OInsStatus int,  @DexLockErrorState int,  @cPOSTATUS smallint,  @cSUBTOTAL numeric(19,5),  @cCURNCYID char(15),  @cCOMMNTID char(15),  @cCMMTTEXT varchar(500),  @cPO_Status_Orig smallint,  @noteindex numeric(19,5),  @DISAMTAV numeric(19,5),  @cCOMMENT_1 char(50),  @cCOMMENT_2 char(50),  @cCOMMENT_3 char(50),  @cCOMMENT_4 char(50),  @existscomment smallint,  @TRDPCTPR numeric(25,0),  @TRDPCTPRNUM numeric(25,24),  @BACKOUTAMT numeric(19,5),  @INTERID char(5),  @itaProcessAnalyticsErrState int,  @itaProcessAnalyticsErrString varchar(8000),  @aaSubLedgerHdrID int,  @O_iErrorStateAASub int,  @O_iErrorStringAASub varchar(255),  @TRDISAMT numeric(19,5),  @CONTROLQTY numeric(19,5),  @CONTROLAMT numeric(19,5),        @Workflow_Status smallint,   @Workflow_Priority smallint,        @AllowReverseTaxes tinyint,  @DCSTATUS tinyint,  @SHIPTYPE tinyint,  @TAXPASSED tinyint,  @OnOrderAmount numeric(19,5),  @OrigOnOrderAmount numeric(19,5),  @Print_Phone_NumberGB smallint,  @CMPNYNAM_Source char (64),   @CNTCPRSN_Source char (60),   @ADDRESS1_Source char (60),   @ADDRESS2_Source char (60),   @ADDRESS3_Source char (60),  @CITY_Source char (35),   @STATE_Source char (29),   @ZIPCODE_Source char (10),   @CCODE_Source char (6),   @COUNTRY_Source char (60),   @PHONE1_Source char (21),  @PHONE2_Source char (21),   @PHONE3_Source char (21),   @FAX_Source char (21)  select  @TRDDISCT = 0,  @CUSTNAME = '',  @DexLockErrorState = 0,  @OInsStatus = 0,  @oExists = 0,  @mylock = 0,  @DexRowID = 0,  @POPHdrTbl = '',  @CMPANYID = 0,  @iStatement = 0,  @CURRNIDX = 0,  @TXRGNNUM = '',  @CONFIRM1 = '',  @REMSUBTO = 0,  @PONOTIDS_1 = 0,  @PONOTIDS_2 = 0,  @PONOTIDS_3 = 0,  @PONOTIDS_4 = 0,  @PONOTIDS_5 = 0,  @PONOTIDS_6 = 0,  @PONOTIDS_7 = 0,  @PONOTIDS_8 = 0,    @PONOTIDS_9 = 0,    @PONOTIDS_10 = 0,    @PONOTIDS_11 = 0,    @PONOTIDS_12 = 0,    @PONOTIDS_13 = 0,    @PONOTIDS_14 = 0,    @PONOTIDS_15 = 0,    @DSCPCTAM = 0,  @DSCDLRAM = 0,  @TotalLineAmount = 0,  @CANCSUB = 0,  @ONHOLDDATE = '',  @QUANTITY = 0,  @QTYCANCE = 0,  @TAXAMNTL = 0,  @TAXAMNTH = 0,  @FRTTXAMT = 0,  @ORFRTTAX = 0,  @MSCTXAMT = 0,  @ORMSCTAX = 0,  @FUNLCURR = '',  @EXGTBLID = '',  @ISMCTRX = 0,  @OREMSUBT = 0,  @ORSUBTOT = 0,  @Originating_Canceled_Sub = 0,  @ORTDISAM = 0,  @ORFRTAMT = 0,  @OMISCAMT = 0,  @ORTAXAMT = 0,  @ORDDLRAT = 0,  @ODISAMTAV = 0,  @OBTAXAMT = 0,  @OrigBackoutFreightTaxAmt = 0,  @OrigBackoutMiscTaxAmt = 0,  @OrigBackoutTradeDiscTax = 0,  @DECPLCUR = 0,  @LSTPRTDT = convert(varchar(12),getdate()),  @linecount = 0,  @exists = 0,  @existscomment = 0,  @DISGRPER = 0,  @DUEGRPER = 0,  @MINORDER = 0,  @iStatus = 0,  @O_oErrorState = 0,  @O_iErrorState = 0,  @oErrString = '',  @DECPLUSED = 0,  @SALPURCH = 1,  @DISCNTCB = 1,  @FREIGHT = 1,  @MISC = 1,  @TAX = 1,  @PymtTermAmnt = 0,  @DSCLCTYP = 0,  @VENDSTTS = 0,  @MCINSTALLED = 1,  @cPOSTATUS = 0,  @cSUBTOTAL = 0,  @cCURNCYID = '',  @cCOMMNTID = '',  @cCMMTTEXT = '',  @cPO_Status_Orig = 0,  @noteindex = 0,  @DISAMTAV = 0,  @cCOMMENT_1 = '',  @cCOMMENT_2 = '',  @cCOMMENT_3 = '',  @cCOMMENT_4 = '',  @TRDPCTPR = 0,  @TRDPCTPRNUM = 0,  @BACKOUTAMT = 0,  @O_iErrorStateAASub = 0,  @O_iErrorStringAASub = '',  @itaProcessAnalyticsErrState = 0,  @itaProcessAnalyticsErrString = '',  @aaSubLedgerHdrID = 0,  @TRDISAMT = 0,  @CONTROLQTY = 0,  @CONTROLAMT = 0,  @Workflow_Status = 0,      @Workflow_Priority = 0,  @AllowReverseTaxes = 0,  @DCSTATUS = 0,  @SHIPTYPE = 1,  @OnOrderAmount = 0,  @OrigOnOrderAmount = 0,  @TAXPASSED = 0,  @Print_Phone_NumberGB = 0,  @CNTCPRSN_Source = '',   @ADDRESS1_Source = '',   @ADDRESS2_Source = '',   @ADDRESS3_Source = '',  @CITY_Source = '',   @STATE_Source = '',   @ZIPCODE_Source = '',   @CCODE_Source = '',   @COUNTRY_Source = '',   @PHONE1_Source = '',  @PHONE2_Source = '',   @PHONE3_Source = '',   @FAX_Source = ''  exec @iStatus = taPoHdrPre  @I_vPOTYPE output,  @I_vPONUMBER output,  @I_vVENDORID output,  @I_vVENDNAME output,  @I_vDOCDATE output,  @I_vBUYERID output,  @I_vALLOWSOCMTS output,  @I_vTRDISAMT output,  @I_vFRTAMNT output,  @I_vMSCCHAMT output,  @I_vTAXAMNT output,  @I_vSUBTOTAL output,  @I_vCUSTNMBR output,  @I_vPRSTADCD output,  @I_vCMPNYNAM output,  @I_vCONTACT output,  @I_vADDRESS1 output,  @I_vADDRESS2 output,  @I_vADDRESS3 output,  @I_vCITY output,  @I_vSTATE output,  @I_vZIPCODE output,  @I_vCCode output,  @I_vCOUNTRY output,  @I_vPHONE1 output,  @I_vPHONE2 output,  @I_vPHONE3 output,  @I_vFAX output,  @I_vPrint_Phone_NumberGB output,  @I_vVADCDPAD output,  @I_vPURCHCMPNYNAM output,  @I_vPURCHCONTACT output,  @I_vPURCHADDRESS1 output,  @I_vPURCHADDRESS2 output,  @I_vPURCHADDRESS3 output,  @I_vPURCHCITY output,  @I_vPURCHSTATE output,  @I_vPURCHZIPCODE output,  @I_vPURCHCCode output,  @I_vPURCHCOUNTRY output,  @I_vPURCHPHONE1 output,  @I_vPURCHPHONE2 output,  @I_vPURCHPHONE3 output,  @I_vPURCHFAX output,  @I_vPRBTADCD output,  @I_vSHIPMTHD output,  @I_vPYMTRMID output,  @I_vDSCPCTAM output,  @I_vDSCDLRAM output,  @I_vDISAMTAV output,  @I_vDUEDATE output,  @I_vDISCDATE output,  @I_vTXRGNNUM output,  @I_vCONFIRM1 output,  @I_vCOMMNTID output,  @I_vCOMMENT_1 output,  @I_vCOMMENT_2 output,  @I_vCOMMENT_3 output,  @I_vCOMMENT_4 output,  @I_vHOLD output,  @I_vTAXSCHID output,  @I_vPurchase_Freight_Taxable output,  @I_vPurchase_Misc_Taxable output,  @I_vFRTSCHID output,  @I_vMSCSCHID output,  @I_vFRTTXAMT output,  @I_vMSCTXAMT output,  @I_vBCKTXAMT output,  @I_vBackoutFreightTaxAmt output,  @I_vBackoutMiscTaxAmt output,  @I_vBackoutTradeDiscTax output,  @I_vUSINGHEADERLEVELTAXES output,  @I_vCURNCYID output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vUSERID output,  @I_vPOSTATUS output,  @I_vCMMTTEXT output,  @I_vPRMDATE output,    @I_vPRMSHPDTE output,    @I_vREQDATE output,    @I_vCONTENDDTE output,    @I_vCNTRLBLKTBY output,   @I_vREQTNDT output,  @I_vUpdateIfExists output,  @I_vNOTETEXT output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 488    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vPONUMBER = upper(@I_vPONUMBER),  @I_vVENDORID = upper(@I_vVENDORID),  @I_vCUSTNMBR = upper(@I_vCUSTNMBR),  @I_vCOMMNTID = upper(@I_vCOMMNTID),  @I_vSHIPMTHD = upper(@I_vSHIPMTHD),  @I_vTAXSCHID = upper(@I_vTAXSCHID),  @I_vFRTSCHID = upper(@I_vFRTSCHID),  @I_vMSCSCHID = upper(@I_vMSCSCHID),  @I_vCURNCYID  = upper(@I_vCURNCYID),  @I_vRATETPID  = upper(@I_vRATETPID),  @I_vPRBTADCD = upper(@I_vPRBTADCD),  @I_vPRSTADCD = upper(@I_vPRSTADCD),  @I_vVADCDPAD = upper(@I_vVADCDPAD)  if @I_vTAXSCHID is not null begin   select @TAXPASSED = 1 end  if @I_vUpdateIfExists = 1 begin   if exists(select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER)  begin   select @exists = 1  end   select @POPHdrTbl = rtrim(db_name()) + '.dbo.POP10100'  select @DexRowID = DEX_ROW_ID from POP10100 (nolock) where PONUMBER = @I_vPONUMBER   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @POPHdrTbl and row_id = @DexRowID and session_id = @@spid))  begin  select @mylock = 1  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @POPHdrTbl,   @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 9184    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if exists(select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER)  begin   select  @cPO_Status_Orig = PO_Status_Orig,   @cSUBTOTAL = SUBTOTAL,  @cPOSTATUS = POSTATUS,  @I_vPOTYPE =  case  when @I_vPOTYPE is null  then POTYPE  else @I_vPOTYPE  end,   @I_vVENDORID =   case  when @I_vVENDORID is null  then VENDORID  else @I_vVENDORID  end,   @I_vVENDNAME =   case  when @I_vVENDNAME is null  then VENDNAME  else @I_vVENDNAME  end,  @I_vDOCDATE =   case  when @I_vDOCDATE is null  then DOCDATE  else @I_vDOCDATE  end,   @I_vBUYERID =   case  when @I_vBUYERID is null  then BUYERID  else @I_vBUYERID  end,  @I_vALLOWSOCMTS =   case  when @I_vALLOWSOCMTS is null  then ALLOWSOCMTS  else @I_vALLOWSOCMTS  end,  @I_vTRDISAMT =   case  when @I_vTRDISAMT is null  then TRDISAMT  else @I_vTRDISAMT  end,  @I_vFRTAMNT =   case  when @I_vFRTAMNT is null  then FRTAMNT  else @I_vFRTAMNT  end,  @I_vMSCCHAMT =   case  when @I_vMSCCHAMT is null  then MSCCHAMT  else @I_vMSCCHAMT  end,  @I_vTAXAMNT =   case  when @I_vTAXAMNT is null  then TAXAMNT  else @I_vTAXAMNT  end,  @I_vCUSTNMBR =   case  when @I_vCUSTNMBR is null and @I_vPOTYPE in (2,4)  then CUSTNMBR  when @I_vCUSTNMBR is null and @I_vPOTYPE in (1,3)  then ''  else @I_vCUSTNMBR  end,  @I_vPRSTADCD =  case  when @I_vPRSTADCD is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vPRSTADCD is null and @I_vPOTYPE = POTYPE   then PRSTADCD  else @I_vPRSTADCD  end,  @I_vCMPNYNAM =  case  when @I_vCMPNYNAM is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vCMPNYNAM is null and @I_vPOTYPE = POTYPE   then CMPNYNAM  else @I_vCMPNYNAM  end,  @I_vCONTACT =  case  when @I_vCONTACT is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vCONTACT is null and @I_vPOTYPE = POTYPE   then CONTACT  else @I_vCONTACT  end,   @I_vADDRESS1 =  case  when @I_vADDRESS1 is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vADDRESS1 is null and @I_vPOTYPE = POTYPE   then ADDRESS1  else @I_vADDRESS1  end,  @I_vADDRESS2 =  case  when @I_vADDRESS2 is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vADDRESS2 is null and @I_vPOTYPE = POTYPE   then ADDRESS2  else @I_vADDRESS2  end,   @I_vADDRESS3 =  case  when @I_vADDRESS3 is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vADDRESS3 is null and @I_vPOTYPE = POTYPE   then ADDRESS3  else @I_vADDRESS3  end,  @I_vCITY =  case  when @I_vCITY is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vCITY is null and @I_vPOTYPE = POTYPE   then CITY  else @I_vCITY  end,  @I_vSTATE =  case  when @I_vSTATE is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vSTATE is null and @I_vPOTYPE = POTYPE   then STATE  else @I_vSTATE  end,  @I_vZIPCODE =  case  when @I_vZIPCODE is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vZIPCODE is null and @I_vPOTYPE = POTYPE   then ZIPCODE  else @I_vZIPCODE  end,  @I_vCCode =  case  when @I_vCCode is null and @I_vPOTYPE <> POTYPE   then ''   when @I_vCCode is null and @I_vPOTYPE = POTYPE   then CCode   else @I_vCCode  end,  @I_vCOUNTRY =  case  when @I_vCOUNTRY is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vCOUNTRY is null and @I_vPOTYPE = POTYPE   then COUNTRY  else @I_vCOUNTRY  end,  @I_vPHONE1 =  case  when @I_vPHONE1 is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vPHONE1 is null and @I_vPOTYPE = POTYPE   then PHONE1  else @I_vPHONE1   end,  @I_vPHONE2 =  case  when @I_vPHONE2 is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vPHONE2 is null and @I_vPOTYPE = POTYPE   then PHONE2  else @I_vPHONE2  end,   @I_vPHONE3 =  case  when @I_vPHONE3 is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vPHONE3 is null and @I_vPOTYPE = POTYPE   then PHONE3  else @I_vPHONE3  end,  @I_vFAX =  case  when @I_vFAX is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vFAX is null and @I_vPOTYPE = POTYPE   then FAX  else @I_vFAX  end,  @I_vVADCDPAD =  case  when @I_vVADCDPAD is null  then VADCDPAD  else @I_vVADCDPAD  end,  @I_vPURCHCMPNYNAM =  case  when @I_vPURCHCMPNYNAM is null  then PURCHCMPNYNAM  else @I_vPURCHCMPNYNAM  end,  @I_vPURCHCONTACT =  case  when @I_vPURCHCONTACT is null  then PURCHCONTACT  else @I_vPURCHCONTACT  end,  @I_vPURCHADDRESS1 =  case  when @I_vPURCHADDRESS1 is null  then PURCHADDRESS1  else @I_vPURCHADDRESS1  end,  @I_vPURCHADDRESS2 =  case  when @I_vPURCHADDRESS2 is null  then PURCHADDRESS2  else @I_vPURCHADDRESS2  end,  @I_vPURCHADDRESS3 =  case  when @I_vPURCHADDRESS3 is null  then PURCHADDRESS3  else @I_vPURCHADDRESS3  end,  @I_vPURCHCITY =  case  when @I_vPURCHCITY is null  then PURCHCITY  else @I_vPURCHCITY  end,  @I_vPURCHSTATE =  case  when @I_vPURCHSTATE is null  then PURCHSTATE  else @I_vPURCHSTATE  end,   @I_vPURCHZIPCODE =  case  when @I_vPURCHZIPCODE is null  then PURCHZIPCODE  else @I_vPURCHZIPCODE  end,  @I_vPURCHCCode =  case  when @I_vPURCHCCode is null  then PURCHCCode  else @I_vPURCHCCode  end,   @I_vPURCHCOUNTRY =  case  when @I_vPURCHCOUNTRY is null  then PURCHCOUNTRY  else @I_vPURCHCOUNTRY  end,   @I_vPURCHPHONE1 =  case  when @I_vPURCHPHONE1 is null  then PURCHPHONE1  else @I_vPURCHPHONE1  end,  @I_vPURCHPHONE2 =  case  when @I_vPURCHPHONE2 is null  then PURCHPHONE2  else @I_vPURCHPHONE2  end,  @I_vPURCHPHONE3 =  case  when @I_vPURCHPHONE3 is null  then PURCHPHONE3  else @I_vPURCHPHONE3  end,  @I_vPURCHFAX =  case  when @I_vPURCHFAX is null  then PURCHFAX  else @I_vPURCHFAX  end,  @I_vPRBTADCD =  case  when @I_vPRBTADCD is null  then PRBTADCD  else @I_vPRBTADCD  end,  @I_vSHIPMTHD =  case  when @I_vSHIPMTHD is null  then SHIPMTHD  else @I_vSHIPMTHD  end,  @I_vPYMTRMID =  case  when @I_vPYMTRMID is null  then PYMTRMID  else @I_vPYMTRMID  end,  @I_vDSCPCTAM =  case  when @I_vDSCPCTAM is null  then DSCPCTAM/100  else @I_vDSCPCTAM  end,  @I_vDSCDLRAM =  case  when @I_vDSCDLRAM is null   then null  else @I_vDSCDLRAM  end,  @DISAMTAV = DISAMTAV,  @I_vDISAMTAV  =  case  when @I_vDISAMTAV is null and @I_vDSCPCTAM is null and @I_vDSCDLRAM is null  then DISAMTAV  when @I_vDISAMTAV is null and ( @I_vDSCPCTAM is not null or @I_vDSCDLRAM is not null )  then null  else @I_vDISAMTAV  end,  @I_vDUEDATE =  case  when @I_vDUEDATE is null  then DUEDATE  else @I_vDUEDATE  end,  @I_vDISCDATE =  case  when @I_vDISCDATE is null  then DISCDATE  else @I_vDISCDATE  end,   @I_vTXRGNNUM =  case  when @I_vTXRGNNUM is null  then TXRGNNUM  else @I_vTXRGNNUM  end,  @I_vCONFIRM1 =  case  when @I_vCONFIRM1 is null  then CONFIRM1  else @I_vCONFIRM1  end,  @I_vCOMMNTID =  case  when @I_vCOMMNTID is null  then COMMNTID  else @I_vCOMMNTID  end,  @I_vHOLD =  case  when @I_vHOLD is null  then HOLD  else @I_vHOLD  end,  @I_vTAXSCHID =  case  when @I_vTAXSCHID is null and @I_vPOTYPE <> POTYPE   then ''  when @I_vTAXSCHID is null and @I_vPOTYPE = POTYPE   then TAXSCHID  else @I_vTAXSCHID  end,  @I_vPurchase_Freight_Taxable =  case  when @I_vPurchase_Freight_Taxable is null  then Purchase_Freight_Taxable  else @I_vPurchase_Freight_Taxable  end,  @I_vPurchase_Misc_Taxable =  case  when @I_vPurchase_Misc_Taxable is null  then Purchase_Misc_Taxable  else @I_vPurchase_Misc_Taxable  end,  @I_vFRTSCHID =  case  when @I_vFRTSCHID is null  then FRTSCHID  else @I_vFRTSCHID  end,  @I_vMSCSCHID =  case  when @I_vMSCSCHID is null  then MSCSCHID  else @I_vMSCSCHID  end,  @I_vFRTTXAMT =  case  when @I_vFRTTXAMT is null  then FRTTXAMT  else @I_vFRTTXAMT  end,  @I_vMSCTXAMT =  case  when @I_vMSCTXAMT is null  then MSCTXAMT  else @I_vMSCTXAMT  end,  @I_vBCKTXAMT =  case  when @I_vBCKTXAMT is null  then BCKTXAMT  else @I_vBCKTXAMT  end,  @I_vBackoutFreightTaxAmt =  case  when @I_vBackoutFreightTaxAmt is null  then BackoutFreightTaxAmt  else @I_vBackoutFreightTaxAmt  end,  @I_vBackoutMiscTaxAmt =  case  when @I_vBackoutMiscTaxAmt is null  then BackoutMiscTaxAmt  else @I_vBackoutMiscTaxAmt  end,   @I_vBackoutTradeDiscTax =  case  when @I_vBackoutTradeDiscTax is null  then BackoutTradeDiscTax  else @I_vBackoutTradeDiscTax  end,  @cCURNCYID = CURNCYID,  @I_vCURNCYID =  case  when @I_vCURNCYID is null  then CURNCYID  else @I_vCURNCYID  end,  @I_vXCHGRATE =  case  when @I_vXCHGRATE = -1  then XCHGRATE  else @I_vXCHGRATE  end,  @I_vRATETPID =  case  when @I_vRATETPID is null  then RATETPID  else @I_vRATETPID  end,  @I_vEXPNDATE =  case  when @I_vEXPNDATE is null  then ''  else @I_vEXPNDATE  end,  @I_vEXCHDATE =  case  when @I_vEXCHDATE is null  then EXCHDATE  else @I_vEXCHDATE  end,  @I_vEXGTBDSC =  case  when @I_vEXGTBDSC is null  then ''  else @I_vEXGTBDSC  end,   @I_vEXTBLSRC =  case  when @I_vEXTBLSRC is null  then ''  else @I_vEXTBLSRC  end,  @I_vRATEEXPR =   case  when @I_vRATEEXPR is null  then -1  else @I_vRATEEXPR  end,  @I_vDYSTINCR =  case  when @I_vDYSTINCR is null  then -1  else @I_vDYSTINCR  end,  @I_vRATEVARC =  case  when @I_vRATEVARC is null  then 0  else @I_vRATEVARC  end,   @I_vTRXDTDEF =  case  when @I_vTRXDTDEF is null  then -1  else @I_vTRXDTDEF  end,  @I_vRTCLCMTD =  case  when @I_vRTCLCMTD is null  then -1  else @I_vRTCLCMTD  end,  @I_vPRVDSLMT =  case  when @I_vPRVDSLMT is null  then 0  else @I_vPRVDSLMT  end,  @I_vDATELMTS =  case  when @I_vDATELMTS is null  then 0  else @I_vDATELMTS  end,  @I_vTIME1 =  case  when @I_vTIME1 is null  then TIME1  else @I_vTIME1  end,  @I_vUSERID =  case  when @I_vUSERID is null  then USER2ENT  else @I_vUSERID  end,  @I_vPOSTATUS =  case  when @I_vPOSTATUS is null and exists (select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and POLNESTA = 3)  then 3  when @I_vPOSTATUS is null  then POSTATUS  else @I_vPOSTATUS  end,  @I_vPRMDATE =  case  when @I_vPRMDATE is null  then PRMDATE  else @I_vPRMDATE  end,  @I_vPRMSHPDTE =  case  when @I_vPRMSHPDTE is null  then PRMSHPDTE  else @I_vPRMSHPDTE  end,  @I_vREQDATE =  case  when @I_vREQDATE is null  then REQDATE  else @I_vREQDATE  end,  @I_vREQTNDT =  case  when @I_vREQTNDT is null  then REQTNDT  else @I_vREQTNDT  end,  @I_vCNTRLBLKTBY =  case   when @I_vCNTRLBLKTBY is null  then CNTRLBLKTBY  else @I_vCNTRLBLKTBY  end,  @I_vCONTENDDTE =  case  when @I_vCONTENDDTE is null  then CONTENDDTE  else @I_vCONTENDDTE  end,  @noteindex = PONOTIDS_11  from POP10100 (UPDLOCK)   where PONUMBER = @I_vPONUMBER    if @I_vCMMTTEXT is null or @I_vCOMMENT_1 is null or   @I_vCOMMENT_2 is null or   @I_vCOMMENT_3 is null or   @I_vCOMMENT_4 is null  begin  select @cCMMTTEXT =  convert(varchar(500),CMMTTEXT),  @cCOMMENT_1 = COMMENT_1,  @cCOMMENT_2 = COMMENT_2,  @cCOMMENT_3 = COMMENT_3,  @cCOMMENT_4 = COMMENT_4  from POP10150 (UPDLOCK)  where POPNUMBE = @I_vPONUMBER   end   if @cPOSTATUS in(4,5,6)  begin  select @O_iErrorState = 8249    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if @I_vCMMTTEXT is null and @I_vCOMMENT_1 is null and @I_vCOMMENT_2 is null and @I_vCOMMENT_3 is null and @I_vCOMMENT_4 is null  select @I_vCMMTTEXT = @cCMMTTEXT   else if @I_vCMMTTEXT is null  select @I_vCMMTTEXT = ''  if @I_vCMMTTEXT is null  begin  if @I_vCOMMENT_1 is null select @I_vCOMMENT_1 = @cCOMMENT_1  if @I_vCOMMENT_2 is null select @I_vCOMMENT_2 = @cCOMMENT_2   if @I_vCOMMENT_3 is null select @I_vCOMMENT_3 = @cCOMMENT_3   if @I_vCOMMENT_4 is null select @I_vCOMMENT_4 = @cCOMMENT_4   end  else  begin  if @I_vCOMMENT_1 is null select @I_vCOMMENT_1 = ''  if @I_vCOMMENT_2 is null select @I_vCOMMENT_2 = ''   if @I_vCOMMENT_3 is null select @I_vCOMMENT_3 = ''   if @I_vCOMMENT_4 is null select @I_vCOMMENT_4 = ''   end   if @cCURNCYID <> @I_vCURNCYID and exists(select 1 from POP10500 (nolock) where PONUMBER = @I_vPONUMBER )  begin  select @O_iErrorState = 9207     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if exists (select 1 from POP10170 (nolock) where PONUMBER = @I_vPONUMBER)  begin  select @O_iErrorState = 11968    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@I_vNOTETEXT is null)  begin  select @I_vNOTETEXT = TXTFIELD from SY03900 (nolock) where NOTEINDX = @noteindex  end end   if @I_vUpdateIfExists = 0 or @exists = 0 begin  if @I_vPOTYPE is NULL select @I_vPOTYPE = 1  if @I_vCUSTNMBR is NULL select @I_vCUSTNMBR = ''  if @I_vBUYERID is NULL select @I_vBUYERID = ''  if @I_vALLOWSOCMTS is NULL select @I_vALLOWSOCMTS = 0  if @I_vFRTAMNT is NULL select @I_vFRTAMNT = 0  if @I_vMSCCHAMT is NULL select @I_vMSCCHAMT = 0  if @I_vTAXAMNT is NULL select @I_vTAXAMNT = 0  if @I_vDUEDATE is NULL select @I_vDUEDATE = ''  if @I_vDISCDATE is NULL select @I_vDISCDATE = ''  if @I_vTXRGNNUM is NULL select @I_vTXRGNNUM = ''  if @I_vCONFIRM1 is NULL select @I_vCONFIRM1 = ''  if @I_vCOMMNTID is NULL select @I_vCOMMNTID = ''  if @I_vCOMMENT_1 is NULL select @I_vCOMMENT_1 = ''  if @I_vCOMMENT_2 is NULL select @I_vCOMMENT_2 = ''  if @I_vCOMMENT_3 is NULL select @I_vCOMMENT_3 = ''  if @I_vCOMMENT_4 is NULL select @I_vCOMMENT_4 = ''  if @I_vFRTTXAMT is NULL select @I_vFRTTXAMT = 0  if @I_vMSCTXAMT is NULL  select @I_vMSCTXAMT = 0  if @I_vBCKTXAMT is NULL select @I_vBCKTXAMT = 0  if @I_vBackoutFreightTaxAmt is NULL select @I_vBackoutFreightTaxAmt = 0  if @I_vBackoutMiscTaxAmt is NULL select @I_vBackoutMiscTaxAmt = 0  if @I_vBackoutTradeDiscTax is NULL select @I_vBackoutTradeDiscTax = 0  if @I_vCURNCYID is NULL select @I_vCURNCYID = ''  if @I_vXCHGRATE = -1 select @I_vXCHGRATE = 0  if @I_vRATETPID is NULL select @I_vRATETPID = ''  if @I_vEXPNDATE is NULL select @I_vEXPNDATE = ''  if @I_vEXCHDATE is NULL select @I_vEXCHDATE = ''  if @I_vEXGTBDSC is NULL select @I_vEXGTBDSC = ''  if @I_vEXTBLSRC is NULL select @I_vEXTBLSRC = ''  if @I_vRATEEXPR is NULL select @I_vRATEEXPR = -1  if @I_vDYSTINCR is NULL select @I_vDYSTINCR = -1  if @I_vRATEVARC is NULL select @I_vRATEVARC = 0  if @I_vTRXDTDEF is NULL select @I_vTRXDTDEF = -1  if @I_vRTCLCMTD is NULL select @I_vRTCLCMTD = -1  if @I_vPRVDSLMT is NULL select @I_vPRVDSLMT = 0  if @I_vDATELMTS is NULL select @I_vDATELMTS = 0  if @I_vTIME1 is NULL select @I_vTIME1 = ''  if @I_vUSERID is NULL select @I_vUSERID = ''  if @I_vPOSTATUS is NULL select @I_vPOSTATUS = 1  if @I_vCMMTTEXT is NULL select @I_vCMMTTEXT = ''  if @I_vCONTENDDTE is NULL select @I_vCONTENDDTE = ''    if @I_vPurchase_Freight_Taxable is NULL  begin   select @I_vPurchase_Freight_Taxable = Purchase_Freight_Taxable from POP40100 (nolock)  end   if @I_vPurchase_Misc_Taxable is NULL  begin   select @I_vPurchase_Misc_Taxable = Purchase_Misc_Taxable from POP40100 (nolock)  end   if @I_vFRTSCHID is NULL and (@I_vPurchase_Freight_Taxable = 1)  begin  select @I_vFRTSCHID = isnull(FRTSCHID,'') from POP40100 (nolock)  end  else  begin  if @I_vFRTSCHID is NULL  begin  select @I_vFRTSCHID = ''   end  end  if @I_vMSCSCHID is NULL  and (@I_vPurchase_Misc_Taxable = 1)   begin  select @I_vMSCSCHID = isnull(MSCSCHID,'') from POP40100 (nolock)  end  else  begin  if @I_vMSCSCHID is NULL  begin  select @I_vMSCSCHID = ''   end  end  if @I_vTAXSCHID is NULL   begin  select @I_vTAXSCHID = isnull(COPTXSCH,'') from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  end  else  begin  if @I_vTAXSCHID is NULL  begin  select @I_vTAXSCHID = ''   end  end  if @I_vDOCDATE is NULL select @I_vDOCDATE = convert(varchar(12),getdate())  if @I_vNOTETEXT is NULL select @I_vNOTETEXT = ''  if @I_vREQTNDT is NULL select @I_vREQTNDT = ''  if @I_vCNTRLBLKTBY is NULL select @I_vCNTRLBLKTBY = 0 end  if ( @I_vPOTYPE is null or  @I_vPONUMBER is null or  @I_vVENDORID is null or  @I_vDOCDATE is null or  @I_vBUYERID is null or  @I_vFRTAMNT is null or  @I_vMSCCHAMT is null or  @I_vCUSTNMBR is null or  @I_vTXRGNNUM is null or  @I_vCONFIRM1 is null or  @I_vCOMMNTID is NULL or  @I_vCOMMENT_1 is NULL or  @I_vCOMMENT_2 is NULL or  @I_vCOMMENT_3 is NULL or  @I_vCOMMENT_4 is NULL or  @I_vHOLD is NULL or  @I_vPOSTATUS is NULL or  @I_vCMMTTEXT is NULL or   @I_vCONTENDDTE is NULL or  @I_vCNTRLBLKTBY is NULL) begin  select @O_iErrorState = 208    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vDOCDATE = '' or  @I_vPONUMBER = '' or  @I_vVENDORID = '') begin  select @O_iErrorState = 209    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(CURNCYID,'') from PM00200 (nolock) where VENDORID  = @I_vVENDORID   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(FUNLCURR,''),  @CURRNIDX = isnull(FUNCRIDX,0)  from MC40000 (nolock)  end end  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  if ((@CURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 963    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vPYMTRMID = case when @I_vPYMTRMID is null then PYMTRMID else @I_vPYMTRMID end,  @I_vVENDNAME = case when @I_vVENDNAME is null then VENDNAME else @I_vVENDNAME end,  @I_vSHIPMTHD = case when @I_vSHIPMTHD is null and @I_vPOTYPE in (1,3)  then SHIPMTHD else @I_vSHIPMTHD end,  @I_vVADCDPAD = case when @I_vVADCDPAD is null then VADCDPAD else @I_vVADCDPAD end,  @I_vPURCHCMPNYNAM = case when @I_vPURCHCMPNYNAM is null then VENDNAME else @I_vPURCHCMPNYNAM end,  @TXRGNNUM = TXRGNNUM,  @DISGRPER = DISGRPER,  @DUEGRPER = DUEGRPER,  @MINORDER = MINORDER,  @I_vCURNCYID = case when @I_vCURNCYID = '' then CURNCYID else @I_vCURNCYID end,  @PONOTIDS_3  = NOTEINDX,  @VENDSTTS = VENDSTTS,  @TRDDISCT = TRDDISCT  from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@I_vPYMTRMID is null) select @I_vPYMTRMID = '' if (@I_vVENDNAME is null) select @I_vVENDNAME = '' if (@I_vSHIPMTHD is null) select @I_vSHIPMTHD = '' if (@I_vVADCDPAD is null) select @I_vVADCDPAD = '' if (@I_vPURCHCMPNYNAM is null) select @I_vPURCHCMPNYNAM = ''  if ((@FUNLCURR <> '') or (@I_vCURNCYID <> '')) begin  if (@I_vCURNCYID <> '')  select @DECPLUSED = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  else  select @DECPLUSED = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   if ( (@I_vTRDISAMT <> round(@I_vTRDISAMT, @DECPLUSED)) or  (@I_vFRTAMNT <> round(@I_vFRTAMNT, @DECPLUSED)) or  (@I_vMSCCHAMT <> round(@I_vMSCCHAMT,@DECPLUSED)) or  (@I_vTAXAMNT <> round(@I_vTAXAMNT,@DECPLUSED)) or  (@I_vSUBTOTAL <> round(@I_vSUBTOTAL,@DECPLUSED)) or  (@I_vDSCDLRAM <> round(@I_vDSCDLRAM, @DECPLUSED)) or  (@I_vDISAMTAV <> round(@I_vDISAMTAV,@DECPLUSED)))  begin  select @O_iErrorState = 6619     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vUpdateIfExists = 1) begin  if (@I_vPOSTATUS in (6) and exists(select 1 from POP10110   where PONUMBER = @I_vPONUMBER and POLNESTA in(4,5)))  begin  select @O_iErrorState = 9203     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPOSTATUS in (5) and not exists(select 1 from POP10110   where PONUMBER = @I_vPONUMBER and POLNESTA in(5)))  begin  select @O_iErrorState = 9204     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOSTATUS in (5) and exists(select 1 from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and Status = 0)   begin  select @O_iErrorState = 9210     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPOSTATUS in (4) and not exists(select 1 from POP10110   where PONUMBER = @I_vPONUMBER and POLNESTA in(4)))  begin  select @O_iErrorState = 9205     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOSTATUS in (4) and @I_vPOTYPE in (2,4)   begin  select @O_iErrorState = 9218     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @I_vPOSTATUS = 6  begin  update POP10110 set  POLNESTA = @I_vPOSTATUS,  QTYCANCE = QTYORDER   where PONUMBER = @I_vPONUMBER   if (@@error <> 0)  begin  select @O_iErrorState = 9187     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if @I_vPOSTATUS in (3)  begin  update POP10110 set   PO_Line_Status_Orig = POLNESTA,  POLNESTA = @I_vPOSTATUS   where PONUMBER = @I_vPONUMBER and QTYCANCE <> QTYORDER and POLNESTA in (6)   if (@@error <> 0)  begin  select @O_iErrorState = 9200     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if @I_vPOSTATUS in (2)  begin  update POP10110 set   PO_Line_Status_Orig = POLNESTA,  POLNESTA = @I_vPOSTATUS   where PONUMBER = @I_vPONUMBER and QTYCANCE <> QTYORDER and POLNESTA in (3,6)   if (@@error <> 0)  begin   select @O_iErrorState = 9202     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if @I_vUpdateIfExists = 1 and @cPOSTATUS = @I_vPOSTATUS and @cPOSTATUS = 2 begin  if exists(select 1 from POP10110   where PONUMBER = @I_vPONUMBER and POLNESTA in(3, 4, 5))   select @I_vPOSTATUS = 3 end  if @I_vPOTYPE in (3,4) begin  if exists( select 1 from POP10110 a (nolock), POP10110 b (nolock)  where a.PONUMBER = @I_vPONUMBER and a.POTYPE = @I_vPOTYPE and  b.PONUMBER = @I_vPONUMBER and b.POTYPE = @I_vPOTYPE and   a.ITEMNMBR <> b.ITEMNMBR)  begin  select @O_iErrorState = 8282     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vRATETPID <> '') begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vRATETPID))  begin  select @O_iErrorState = 960     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if @I_vCNTRLBLKTBY < 0 or @I_vCNTRLBLKTBY > 1 begin  select @O_iErrorState = 8283     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR) begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vVENDORID,  @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXCHDATE = @I_vEXCHDATE,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 0,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  begin  if (@O_iErrorState <> 0)  begin  exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 961    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  if (@@error <> 0)  begin  select @O_iErrorState = 962    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @ISMCTRX = 0, @I_vRATEEXPR = 0, @I_vDYSTINCR = 0, @I_vRTCLCMTD = 0 end  if (not exists(select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID)) begin  select @O_iErrorState = 490    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from POP30100 (nolock) where PONUMBER = @I_vPONUMBER)) or  (exists(select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER) and @I_vUpdateIfExists = 0) or   (exists(select 1 from POP10500 (nolock) where PONUMBER = @I_vPONUMBER) and @I_vUpdateIfExists = 0)    begin  select @O_iErrorState = 220    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @I_vPOTYPE < 1 or @I_vPOTYPE > 4 begin  select @O_iErrorState = 491    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @INTERID = INTERID, @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name() if (@I_vBUYERID <> '') begin  if (not exists(select 1 from POP00101 (nolock) where BUYERID = @I_vBUYERID))  begin  select @O_iErrorState = 269     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @TotalLineAmount = isnull(sum(OREXTCST),0),  @CANCSUB = isnull(round(sum(QTYCANCE * ORUNTCST),@DECPLUSED),0),   @QUANTITY = isnull(sum(QTYORDER * UMQTYINB),0), @QTYCANCE = isnull(sum(QTYCANCE * UMQTYINB),0)      from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and LineNumber <> 0  select @OnOrderAmount = isnull(sum(OREXTCST),0) - isnull(sum(OPOSTSUB),0)   from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and LineNumber <> 0 and POLNESTA not in (1,5)  select @OrigOnOrderAmount = isnull(sum(OREXTCST),0) - isnull(sum(OPOSTSUB),0)   from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and LineNumber <> 0  if @I_vPOTYPE in (3,4) begin  select @CONTROLQTY = isnull(QTYORDER - QTYCANCE,0) * UMQTYINB , @CONTROLAMT = isnull(OREXTCST,0) from POP10110 (nolock) where   PONUMBER = @I_vPONUMBER and LineNumber = 0   if @I_vCNTRLBLKTBY = 1 and @TotalLineAmount > @CONTROLAMT  begin  select @O_iErrorState = 8284     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  if @I_vCNTRLBLKTBY = 0 and @QUANTITY - @QTYCANCE > @CONTROLQTY  begin  select @O_iErrorState = 8245     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  if (@I_vTRDISAMT is null) begin  select @TRDISAMT = round(@TotalLineAmount*(@TRDDISCT/10000),@DECPLUSED) end  if (@I_vTRDISAMT < 0) begin  select @O_iErrorState = 365     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vTRDISAMT > @TotalLineAmount) and @I_vPOSTATUS <> 6 begin  select @O_iErrorState = 369     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@TotalLineAmount <> 0) begin  if (@I_vTRDISAMT is null)  begin  select @I_vTRDISAMT = @TRDISAMT   if (@I_vTRDISAMT = 0)  begin  select @TRDPCTPR = 0  end  else  begin   if @TRDDISCT <> 0  begin  select @TRDPCTPR = (@TRDDISCT * 100000000000000000)  end  else  begin  select @TRDPCTPR = 100000000000000000000  end     end  end  else  begin  if ((@I_vTRDISAMT = 0) and (@TRDISAMT = 0))  begin  select @TRDPCTPR = 0  end  else  begin  select @TRDPCTPRNUM = round(@I_vTRDISAMT / @TotalLineAmount,15)   if (@TRDPCTPRNUM < 1)  begin  select @TRDPCTPR = cast(substring(cast(@TRDPCTPRNUM as varchar(27)),3,21)as numeric(21,0))  end  else  begin  select @TRDPCTPR = cast(substring( cast(@TRDPCTPRNUM as varchar (27)),1,1) + substring( cast(@TRDPCTPRNUM as varchar(27)),3,20) as numeric(23,0))  end  end  end end else begin  if (@I_vTRDISAMT is null)  begin  select @I_vTRDISAMT = @TRDISAMT   end end  if exists(select 1 from POP10110 where PONUMBER = @I_vPONUMBER and POTYPE <> @I_vPOTYPE) begin  select @O_iErrorState = 7772     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if @I_vSUBTOTAL is null or ( @I_vUpdateIfExists = 1 and @I_vPOSTATUS = 6 ) begin  select @I_vSUBTOTAL = @TotalLineAmount end  if (@I_vSUBTOTAL <> @TotalLineAmount) and @I_vPOTYPE not in (3,4) begin  select @O_iErrorState = 370     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vFRTAMNT < 0) begin  select @O_iErrorState = 366     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vMSCCHAMT < 0) begin  select @O_iErrorState = 367     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @AllowReverseTaxes = abs(sign(isnull(Company_Options,0) & power(2,20))) from DYNAMICS..SY01500 (nolock) where INTERID = db_name() if ((@I_vTAXAMNT < 0 or @I_vFRTTXAMT < 0 or @I_vMSCTXAMT < 0) and (@AllowReverseTaxes = 0)) begin  select @O_iErrorState = 368     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vALLOWSOCMTS <> 0 and @I_vALLOWSOCMTS <> 1) begin  select @O_iErrorState = 373     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vCCode is not null) and (@I_vCCode <> '')) begin  if (not exists(select 1 from VAT10001 (nolock) where CCode = @I_vCCode))  begin  select @O_iErrorState = 6340     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vCUSTNMBR <> '' and @I_vPOTYPE not in (2,4)) begin  select @O_iErrorState = 374     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPOTYPE in (2,4)) begin  if (@I_vCUSTNMBR = '')  begin  select @O_iErrorState = 6341     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists (select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR))  begin  select @O_iErrorState = 376     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( (@I_vCMMTTEXT <> @cCMMTTEXT) and (@I_vCMMTTEXT <> '') and ( (@I_vCOMMENT_1 <> ''  ) or   (@I_vCOMMENT_2 <> '' ) or (@I_vCOMMENT_3 <> '') or (@I_vCOMMENT_4 <> '')  ) ) begin  select @O_iErrorState = 2294    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPOTYPE in (1,3)) begin  if (@I_vPRSTADCD is null)  begin  select @I_vPRSTADCD = LOCATNID from DYNAMICS..SY01500 (nolock) where CMPANYID = @CMPANYID  end   if (not exists (select 1 from SY00600 (nolock) where CMPANYID = @CMPANYID and LOCATNID = @I_vPRSTADCD) and @I_vPRSTADCD <> '')  begin  select @O_iErrorState = 375     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else if (@I_vPOTYPE in (2,4)) begin  select  @I_vPRSTADCD = case when @I_vPRSTADCD is null then PRSTADCD else @I_vPRSTADCD end,  @I_vSHIPMTHD = case when @I_vSHIPMTHD is null then SHIPMTHD else @I_vSHIPMTHD end,  @CUSTNAME = CUSTNAME  from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if (not exists (select 1 from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD))  begin  select @O_iErrorState = 379    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  if (@I_vSHIPMTHD is null) select @I_vSHIPMTHD = '' end  if (@I_vPRSTADCD is null) select @I_vPRSTADCD = ''  if (@I_vCCode <> '' and @I_vCCode is not null) and (@I_vCOUNTRY is null) begin  select @I_vCOUNTRY = CCodeDesc from VAT10001 (nolock) where CCode = @I_vCCode end  if (@I_vPRSTADCD <> '') begin  if (@I_vPOTYPE in (1,3))  begin  select  @I_vCMPNYNAM = case when @I_vCMPNYNAM is null then LOCATNNM else @I_vCMPNYNAM end,  @I_vCONTACT = case when @I_vCONTACT  is null then ADRCNTCT else @I_vCONTACT end,  @I_vADDRESS1 = case when @I_vADDRESS1 is null then ADDRESS1 else @I_vADDRESS1 end,  @I_vADDRESS2 = case when @I_vADDRESS2 is null then ADDRESS2 else @I_vADDRESS2 end,  @I_vADDRESS3 = case when @I_vADDRESS3 is null then ADDRESS3 else @I_vADDRESS3 end,  @I_vCITY = case when @I_vCITY  is null then CITY else @I_vCITY end,  @I_vSTATE = case when @I_vSTATE  is null then STATE else @I_vSTATE end,  @I_vZIPCODE = case when @I_vZIPCODE  is null then ZIPCODE else @I_vZIPCODE end,  @I_vCCode = case when @I_vCCode  is null then CCode else @I_vCCode end,  @I_vCOUNTRY = case when @I_vCOUNTRY  is null then COUNTRY else @I_vCOUNTRY end,  @I_vPHONE1 = case when @I_vPHONE1  is null then PHONE1 else @I_vPHONE1 end,  @I_vPHONE2 = case when @I_vPHONE2  is null then PHONE2 else @I_vPHONE2 end,  @I_vPHONE3 = case when @I_vPHONE3  is null then PHONE3 else @I_vPHONE3 end,  @I_vFAX  = case when @I_vFAX  is null then FAXNUMBR else @I_vFAX end  from SY00600 (nolock) where CMPANYID = @CMPANYID and LOCATNID = @I_vPRSTADCD  end  else  if (@I_vPOTYPE in (2,4))  begin  select @CUSTNAME = ShipToName from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD  select @I_vCMPNYNAM = case when @I_vCMPNYNAM is null then @CUSTNAME else @I_vCMPNYNAM end  select  @I_vCONTACT = case when @I_vCONTACT  is null then CNTCPRSN else @I_vCONTACT end,  @I_vADDRESS1 = case when @I_vADDRESS1 is null then ADDRESS1 else @I_vADDRESS1 end,  @I_vADDRESS2 = case when @I_vADDRESS2 is null then ADDRESS2 else @I_vADDRESS2 end,  @I_vADDRESS3 = case when @I_vADDRESS3 is null then ADDRESS3 else @I_vADDRESS3 end,  @I_vCITY = case when @I_vCITY  is null then CITY else @I_vCITY end,  @I_vSTATE = case when @I_vSTATE  is null then STATE else @I_vSTATE end,  @I_vZIPCODE = case when @I_vZIPCODE  is null then ZIP else @I_vZIPCODE end,  @I_vCCode = case when @I_vCCode  is null then CCode else @I_vCCode end,  @I_vCOUNTRY = case when @I_vCOUNTRY  is null then COUNTRY else @I_vCOUNTRY end,  @I_vPHONE1 = case when @I_vPHONE1  is null then PHONE1 else @I_vPHONE1 end,  @I_vPHONE2 = case when @I_vPHONE2  is null then PHONE2 else @I_vPHONE2 end,  @I_vPHONE3 = case when @I_vPHONE3  is null then PHONE3 else @I_vPHONE3 end,  @I_vFAX  = case when @I_vFAX  is null then FAX else @I_vFAX end  from RM00102 (nolock) where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD  end end  select  @I_vCMPNYNAM = case when @I_vCMPNYNAM is null then '' else @I_vCMPNYNAM end,  @I_vCONTACT = case when @I_vCONTACT  is null then '' else @I_vCONTACT end,  @I_vADDRESS1 = case when @I_vADDRESS1 is null then '' else @I_vADDRESS1 end,  @I_vADDRESS2 = case when @I_vADDRESS2 is null then '' else @I_vADDRESS2 end,  @I_vADDRESS3 = case when @I_vADDRESS3 is null then '' else @I_vADDRESS3 end,  @I_vCITY = case when @I_vCITY  is null then '' else @I_vCITY end,  @I_vSTATE = case when @I_vSTATE  is null then '' else @I_vSTATE end,  @I_vZIPCODE = case when @I_vZIPCODE  is null then '' else @I_vZIPCODE end,  @I_vCCode = case when @I_vCCode  is null then '' else @I_vCCode end,  @I_vCOUNTRY = case when @I_vCOUNTRY  is null then '' else @I_vCOUNTRY end,  @I_vPHONE1 = case when @I_vPHONE1  is null then '' else @I_vPHONE1 end,  @I_vPHONE2 = case when @I_vPHONE2  is null then '' else @I_vPHONE2 end,  @I_vPHONE3 = case when @I_vPHONE3  is null then '' else @I_vPHONE3 end,  @I_vFAX  = case when @I_vFAX  is null then '' else @I_vFAX end  if (@I_vPOTYPE in (2,4)) begin  if (@I_vPrint_Phone_NumberGB is null)  begin  select @I_vPrint_Phone_NumberGB = Print_Phone_NumberGB from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD  end  end else begin  select @I_vPrint_Phone_NumberGB = @Print_Phone_NumberGB end  if (@I_vPrint_Phone_NumberGB not in(0,1,2,3,4)) begin  select @O_iErrorState = 11767     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if (@VENDSTTS = 2) begin  select @O_iErrorState = 5416     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@ISMCTRX = 0) begin  if (exists(select distinct 1 from IV00105 a (nolock), POP10110 b (nolock) where   b.PONUMBER = @I_vPONUMBER and b.ITEMNMBR = a.ITEMNMBR))  begin  if (not exists(select 1 from IV00105 a (nolock), POP10110 b (nolock) where  b.PONUMBER = @I_vPONUMBER and b.ITEMNMBR = a.ITEMNMBR and a.CURNCYID <> ''))  begin  select @MCINSTALLED = 0, @CURRNIDX = 0   end  end  else  begin  if (not exists(select distinct 1 from IV00105 a (nolock) where CURNCYID <> ''))  begin  select @MCINSTALLED = 0, @CURRNIDX = 0   end  end end  if (exists(select 1 from POP10110 (nolock) where CURRNIDX <> @CURRNIDX and PONUMBER = @I_vPONUMBER)) begin  select @O_iErrorState = 7319     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vVADCDPAD <> '') begin  if (not exists (select 1 from PM00300 (nolock) where VENDORID = @I_vVENDORID and ADRSCODE = @I_vVADCDPAD))  begin  select @O_iErrorState = 380     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPURCHCCode <> '' and @I_vPURCHCCode is not null) and (@I_vPURCHCOUNTRY is null)  begin  select @I_vPURCHCOUNTRY = CCodeDesc from VAT10001 (nolock) where CCode = @I_vPURCHCCode  end   select  @I_vPURCHCONTACT  = case when @I_vPURCHCONTACT is null then VNDCNTCT else @I_vPURCHCONTACT end,  @I_vPURCHADDRESS1  = case when @I_vPURCHADDRESS1 is null then ADDRESS1 else @I_vPURCHADDRESS1 end,  @I_vPURCHADDRESS2  = case when @I_vPURCHADDRESS2 is null then ADDRESS2 else @I_vPURCHADDRESS2 end,  @I_vPURCHADDRESS3  = case when @I_vPURCHADDRESS3 is null then ADDRESS3 else @I_vPURCHADDRESS3 end,  @I_vPURCHCITY   = case when @I_vPURCHCITY is null then CITY  else @I_vPURCHCITY end,  @I_vPURCHSTATE   = case when @I_vPURCHSTATE is null then STATE else @I_vPURCHSTATE end,  @I_vPURCHZIPCODE = case when @I_vPURCHZIPCODE is null then ZIPCODE else @I_vPURCHZIPCODE end,  @I_vPURCHCCode  = case when @I_vPURCHCCode is null then CCode else @I_vPURCHCCode end,  @I_vPURCHCOUNTRY = case when @I_vPURCHCOUNTRY is null then COUNTRY else @I_vPURCHCOUNTRY end,  @I_vPURCHPHONE1  = case when @I_vPURCHPHONE1 is null then PHNUMBR1 else @I_vPURCHPHONE1 end,  @I_vPURCHPHONE2  = case when @I_vPURCHPHONE2 is null then PHNUMBR2 else @I_vPURCHPHONE2 end,  @I_vPURCHPHONE3  = case when @I_vPURCHPHONE3 is null then PHONE3 else @I_vPURCHPHONE3 end,  @I_vPURCHFAX  = case when @I_vPURCHFAX is null then FAXNUMBR else @I_vPURCHFAX end  from PM00300 (nolock) where VENDORID = @I_vVENDORID and ADRSCODE = @I_vVADCDPAD end  select  @I_vPURCHCONTACT  = case when @I_vPURCHCONTACT is null then '' else @I_vPURCHCONTACT end,  @I_vPURCHADDRESS1  = case when @I_vPURCHADDRESS1 is null then '' else @I_vPURCHADDRESS1 end,  @I_vPURCHADDRESS2  = case when @I_vPURCHADDRESS2 is null then '' else @I_vPURCHADDRESS2 end,  @I_vPURCHADDRESS3  = case when @I_vPURCHADDRESS3 is null then '' else @I_vPURCHADDRESS3 end,  @I_vPURCHCITY  = case when @I_vPURCHCITY is null then '' else @I_vPURCHCITY end,  @I_vPURCHSTATE   = case when @I_vPURCHSTATE is null then '' else @I_vPURCHSTATE end,  @I_vPURCHZIPCODE = case when @I_vPURCHZIPCODE is null then '' else @I_vPURCHZIPCODE end,  @I_vPURCHCCode  = case when @I_vPURCHCCode is null then '' else @I_vPURCHCCode end,  @I_vPURCHCOUNTRY = case when @I_vPURCHCOUNTRY is null then '' else @I_vPURCHCOUNTRY end,  @I_vPURCHPHONE1  = case when @I_vPURCHPHONE1 is null then '' else @I_vPURCHPHONE1 end,  @I_vPURCHPHONE2  = case when @I_vPURCHPHONE2 is null then '' else @I_vPURCHPHONE2 end,  @I_vPURCHPHONE3  = case when @I_vPURCHPHONE3 is null then '' else @I_vPURCHPHONE3 end,  @I_vPURCHFAX  = case when @I_vPURCHFAX is null then '' else @I_vPURCHFAX end  if (@I_vPRBTADCD is null) begin  select @I_vPRBTADCD = LOCATNID from DYNAMICS..SY01500 (nolock) where CMPANYID = @CMPANYID  if (@I_vPRBTADCD is null) select @I_vPRBTADCD = '' end  if (@I_vPRBTADCD <> '') begin  if (not exists (select 1 from SY00600 (nolock) where LOCATNID = @I_vPRBTADCD and CMPANYID = @CMPANYID))  begin  select @O_iErrorState = 381     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vSHIPMTHD <> '') begin  if (not exists (select 1 from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD))  begin  exec @iStatus = taCreateShippingMethod  @I_vSHIPMTHD  = @I_vSHIPMTHD,  @I_vUpdateIfExists = 0,  @O_iErrorState  = @iAddErrState output,  @oErrString  = @oErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iAddErrState <> 0)  begin  select @O_iErrorState = 382    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vSHIPMTHD <> '')  begin  select @SHIPTYPE = SHIPTYPE from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD  if (@SHIPTYPE = 0) and (@TAXPASSED = 0)  begin   select @I_vTAXSCHID = TAXSCHID from PM00300 where VENDORID = @I_vVENDORID and ADRSCODE = @I_vVADCDPAD  if (@I_vTAXSCHID = '' and @SHIPTYPE <> 0 )  begin   select @I_vTAXSCHID = isnull(COPTXSCH,'') from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  end  end end else  begin  select @I_vTAXSCHID = TAXSCHID from PM00200 (nolock) where VENDORID = @I_vVENDORID  begin   if @I_vTAXSCHID = ''  begin  select @I_vTAXSCHID = isnull(COPTXSCH,'') from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  end  end end  if (@I_vTXRGNNUM <> '') begin  select @TXRGNNUM = @I_vTXRGNNUM end  if (@I_vCONFIRM1 <> '') begin  select @CONFIRM1 = @I_vCONFIRM1 end  if (@I_vHOLD <> 0 and @I_vHOLD <> 1) begin  select @O_iErrorState = 378     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vHOLD = 1) begin  select @POPALWOP_3 = POPALWOP_3 from POP40100 (nolock) where INDEX1 = 1  if (@POPALWOP_3 is null)  begin  select @O_iErrorState = 359     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  if (@POPALWOP_3 <> 1)  begin  select @O_iErrorState = 358     exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  select @ONHOLDDATE = convert(varchar(12),getdate())  end end  if ((@I_vPOSTATUS not in (1,2,6))) and (@I_vUpdateIfExists = 0 or @exists = 0) begin  select @O_iErrorState = 2395     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPOSTATUS < 1) or (@I_vPOSTATUS > 6))  begin  select @O_iErrorState = 9219     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select PONUMBER from POP10110 (nolock) where PONUMBER = @I_vPONUMBER) begin  if not exists(select POLNESTA from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and POLNESTA in (1,2,3,4))   begin  select @I_vPOSTATUS = 5  end  else   if not exists(select POLNESTA from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and POLNESTA in (1,2,3,5))  begin  select @I_vPOSTATUS = 4  end end  if ((@QUANTITY = @QTYCANCE) and @QUANTITY <> 0) begin  select @I_vPOSTATUS = 6 end  if (@I_vHOLD = 1) and @I_vPOSTATUS in (5,6) begin  select @O_iErrorState = 357     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @I_vUpdateIfExists = 0 and (exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and POLNESTA <> @I_vPOSTATUS)) begin  select @O_iErrorState = 1521     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_Misc_Taxable < 0 or @I_vPurchase_Misc_Taxable > 3) begin  select @O_iErrorState = 947     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end else begin  if (@I_vPurchase_Misc_Taxable <> 1) select @I_vMSCSCHID = '' end  if (@I_vPurchase_Freight_Taxable < 0 or @I_vPurchase_Freight_Taxable > 3) begin  select @O_iErrorState = 948     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end else begin  if (@I_vPurchase_Freight_Taxable <> 1) select @I_vFRTSCHID = '' end  if (@I_vTAXSCHID <> '') begin  if not exists(select 1 from TX00102 (nolock) where TAXSCHID = @I_vTAXSCHID)  begin  select @O_iErrorState = 883     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @TAXAMNTL = ISNULL(sum(ORTAXAMT),0.00)+ISNULL(sum(ORFRTTAX),0.00)+ISNULL(sum(ORMSCTAX),0.00) from POP10160 (nolock)  where PONUMBER = @I_vPONUMBER and ORD = 0 and BKOUTTAX = 0  if (@TAXAMNTL <> @I_vTAXAMNT)  begin  select @O_iErrorState = 887     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @BACKOUTAMT = isnull(sum(TAXAMNT),0.00) from POP10160 (nolock) where PONUMBER = @I_vPONUMBER and ORD = 0 and BKOUTTAX = 1   if (@I_vUSINGHEADERLEVELTAXES = 0) begin  select @TAXAMNTH = ISNULL(sum(ORTAXAMT),0.00)+ISNULL(sum(ORFRTTAX),0.00)+ISNULL(sum(ORMSCTAX),0.00) from POP10160 (nolock)    where PONUMBER = @I_vPONUMBER and ORD <> 0 and BKOUTTAX = 0  if (@TAXAMNTH <> @I_vTAXAMNT)  begin  select @O_iErrorState = 888     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vFRTSCHID <> '') begin  if not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vFRTSCHID)  begin  select @O_iErrorState = 884     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vFRTTXAMT > 0.00)  begin  select @O_iErrorState = 889     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @FRTTXAMT = ISNULL(sum(FRTTXAMT),0), @ORFRTTAX = ISNULL(sum(ORFRTTAX),0) from POP10160 (nolock)  where PONUMBER = @I_vPONUMBER and ORD = 2147483646  if ((@I_vFRTTXAMT <> @FRTTXAMT) or (@I_vFRTTXAMT <> @ORFRTTAX)) begin  select @O_iErrorState = 892     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vMSCSCHID <> '') begin  if not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vMSCSCHID)  begin  select @O_iErrorState = 885     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (@I_vMSCTXAMT > 0.00)  begin  select @O_iErrorState = 893     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @MSCTXAMT = ISNULL(sum(MSCTXAMT),0), @ORMSCTAX = ISNULL(sum(ORMSCTAX),0) from POP10160 (nolock)   where PONUMBER = @I_vPONUMBER and ORD = 2147483645  if ((@I_vMSCTXAMT <> @MSCTXAMT) or (@I_vMSCTXAMT <> @ORMSCTAX)) begin  select @O_iErrorState = 894     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if @I_vUpdateIfExists = 1 and @exists = 1  begin  select @REMSUBTO = isnull(sum(ORUNTCST * (QTYORDER - QTYCANCE)),0) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and LineNumber <> 0  select @REMSUBTO = round(@REMSUBTO - isnull(sum((ORCPTCOST*QTYINVCD)),0),@DECPLUSED) from POP10500 (nolock) where PONUMBER = @I_vPONUMBER end else begin  select @REMSUBTO = isnull(sum(round(UNITCOST * (QTYORDER - QTYCANCE), @DECPLUSED)),0) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and LineNumber <> 0 end  if ((@I_vDSCPCTAM > 100) or (@I_vDSCPCTAM < 0)) begin  select @O_iErrorState = 388     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDISAMTAV > @REMSUBTO) and @I_vDISAMTAV <> @DISAMTAV begin  select @O_iErrorState = 389     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  while (@iStatement = 0) begin  if @I_vUpdateIfExists = 0 or @exists = 0  begin  select @linecount = count(PONUMBER)+2 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement = @linecount,  @O_mNoteIndex   = @PONOTIDS_1 output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 371    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement = @linecount,  @O_mNoteIndex   = @PONOTIDS_11 output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 5448    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @SALPURCH = SALPURCH,  @DISCNTCB = DISCNTCB,  @FREIGHT = FREIGHT,  @MISC = MISC,  @TAX = TAX  from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID   select @PymtTermAmnt = @PymtTermAmnt + (@I_vSUBTOTAL * @SALPURCH),  @PymtTermAmnt = @PymtTermAmnt - (@I_vTRDISAMT * @DISCNTCB),  @PymtTermAmnt = @PymtTermAmnt + (@I_vFRTAMNT * @FREIGHT),  @PymtTermAmnt = @PymtTermAmnt + (@I_vMSCCHAMT * @MISC),  @PymtTermAmnt = @PymtTermAmnt + ((@I_vTAXAMNT + @I_vFRTTXAMT + @I_vMSCTXAMT) * (@TAX))   if ((@I_vPYMTRMID = '') and (@I_vDISAMTAV is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null))  begin  select @I_vDISAMTAV = 0, @I_vDSCDLRAM = 0, @I_vDSCPCTAM = 0  end   if (((@I_vDISAMTAV is not null) and (@I_vDSCDLRAM is null or @I_vDSCDLRAM <> @I_vDISAMTAV)) and @I_vDSCPCTAM is null)   begin  select @I_vDSCDLRAM = @I_vDISAMTAV  end   if ((@I_vDISAMTAV is not null) and (@I_vDSCPCTAM is null or round((@I_vDSCPCTAM / 100) * @PymtTermAmnt, @DECPLUSED) <> @I_vDISAMTAV))  begin   select @I_vDSCPCTAM = 0  end   if ((@I_vDSCDLRAM is not null and @I_vDSCDLRAM <> 0) and (@I_vDSCPCTAM is not null and @I_vDSCPCTAM <> 0))  begin  select @O_iErrorState = 7035     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vDSCDLRAM is not null) and (@I_vDISAMTAV is null))  begin  select @I_vDISAMTAV = @I_vDSCDLRAM   if (@I_vDISAMTAV > @I_vSUBTOTAL-@I_vTRDISAMT+@I_vFRTAMNT+@I_vMSCCHAMT+@I_vTAXAMNT)  begin  select @I_vDISAMTAV = @I_vSUBTOTAL-@I_vTRDISAMT+@I_vFRTAMNT+@I_vMSCCHAMT+@I_vTAXAMNT  end   select @ODISAMTAV = @I_vDISAMTAV,  @I_vDSCPCTAM = 0  end   if ((@I_vDSCPCTAM is not null) and (@I_vDISAMTAV is null))  begin  select @I_vDISAMTAV = ((@I_vDSCPCTAM / 100) * @PymtTermAmnt)  select @ODISAMTAV = @I_vDISAMTAV,  @I_vDSCDLRAM = 0  end   if ((@I_vDSCPCTAM is not null) and (@I_vDISAMTAV is not null) and (@I_vDSCDLRAM is null))  begin   select @I_vDSCDLRAM = 0   end   select @DSCLCTYP = DSCLCTYP, @DSCDLRAM = DSCDLRAM, @DSCPCTAM = DSCPCTAM from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID   if ((@I_vPYMTRMID <> '') and (@I_vDISAMTAV is null) and (@I_vDSCDLRAM is null) and (@I_vDSCPCTAM is null))  begin  if (@DSCLCTYP = 1)   begin  select @I_vDSCPCTAM = @DSCPCTAM / 100.0,  @I_vDSCDLRAM = 0   if (@ISMCTRX = 1)   begin  select @ODISAMTAV = round((@I_vDSCPCTAM / 100.0) * @PymtTermAmnt, @DECPLUSED)  select @ORDDLRAT = 0  if (@I_vXCHGRATE <> 0)  begin  select @I_vDISAMTAV =  case  when (@I_vRTCLCMTD = 0)  then round(@ODISAMTAV * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ODISAMTAV / @I_vXCHGRATE, @DECPLCUR)  else 0  end  end  end  else  begin  select @I_vDISAMTAV = isnull(round((@I_vDSCPCTAM / 100.0) * @PymtTermAmnt, @DECPLCUR),0)  select @ODISAMTAV = @I_vDISAMTAV,  @ORDDLRAT = 0  end  end  else  if (@DSCLCTYP = 2)     begin  select @I_vDSCPCTAM = 0   if (@ISMCTRX = 1)   begin  select @I_vDISAMTAV = @DSCDLRAM,  @I_vDSCDLRAM = @DSCDLRAM   select @ODISAMTAV =  case  when (@I_vRTCLCMTD = 0)  then round(@I_vDISAMTAV / @I_vXCHGRATE, @DECPLUSED)  when (@I_vRTCLCMTD = 1)  then round(@I_vDISAMTAV * @I_vXCHGRATE, @DECPLUSED)  else 0  end   select @ORDDLRAT = @ODISAMTAV  end  else  begin  select @I_vDSCDLRAM = @DSCDLRAM,  @I_vDISAMTAV = @DSCDLRAM   select @ORDDLRAT = @I_vDISAMTAV,  @ODISAMTAV = @I_vDISAMTAV  end  end  end  else  if (@ISMCTRX = 1)    begin  select @ODISAMTAV = @I_vDISAMTAV  select @I_vDISAMTAV =   case   when (@I_vRTCLCMTD = 0)  then round(@ODISAMTAV * @I_vXCHGRATE, @DECPLCUR)  when (@I_vRTCLCMTD = 1)  then round(@ODISAMTAV / @I_vXCHGRATE, @DECPLCUR)  else 0  end   select @ODISAMTAV = round(@ODISAMTAV,@DECPLUSED)   if (@I_vDSCPCTAM = 0)  begin  select @ORDDLRAT = @ODISAMTAV,  @I_vDSCDLRAM = @I_vDISAMTAV  end   end  else  begin   select @I_vDISAMTAV = round(@I_vDISAMTAV,@DECPLCUR),  @ODISAMTAV = @I_vDISAMTAV   if (@I_vDSCPCTAM = 0)  begin  select @ORDDLRAT = @I_vDISAMTAV  end  end   if (@I_vPYMTRMID <> '')  begin  if (not exists (select 1 from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID))  begin  select @O_iErrorState = 383     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vPYMTRMID <> '') and (@I_vDUEDATE = '' or @I_vDISCDATE = ''))  begin  exec @iStatus = taCalcDueDatePM  @I_vVENDORID = @I_vVENDORID,  @I_vPYMTRMID = @I_vPYMTRMID,  @I_vDOCDATE  = @I_vDOCDATE,  @O_dDISCDATE = @dDISCDATE output,  @O_dDUEDATE  = @dDUEDATE output,  @O_iErrorState = @iCalcDueDateErrState output,  @oErrString = @oErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0) or (@iCalcDueDateErrState <> 0) or (@dDISCDATE is NULL) or (@dDUEDATE is NULL))  begin  select @O_iErrorState = 384    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vDUEDATE = '')  select @I_vDUEDATE = @dDUEDATE   if (@I_vDISCDATE = '')  select @I_vDISCDATE = @dDISCDATE  end   if ((@I_vDSCDLRAM <> @DSCDLRAM) or (@I_vDSCPCTAM <> @DSCPCTAM/100))  begin  select @I_vPYMTRMID = ''  end   select @PONOTIDS_2 = NOTEINDX from POP00101 (nolock) where BUYERID = @I_vBUYERID  select @PONOTIDS_4 = NOTEINDX from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID  select @PONOTIDS_5 = NOTEINDX from SY03300 (nolock) where PYMTRMID = @I_vPYMTRMID  select @PONOTIDS_6 = NOTEINDX from SY03000 (nolock) where SHIPMTHD = @I_vSHIPMTHD  select @PONOTIDS_8 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vTAXSCHID  select @PONOTIDS_9 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vFRTSCHID  select @PONOTIDS_10 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vMSCSCHID   select @OREMSUBT = @REMSUBTO,  @ORSUBTOT = @TotalLineAmount,  @Originating_Canceled_Sub = @CANCSUB,  @ORTDISAM = @I_vTRDISAMT,  @ORFRTAMT = @I_vFRTAMNT,  @OMISCAMT = @I_vMSCCHAMT,  @ORTAXAMT = @I_vTAXAMNT,  @OBTAXAMT = @I_vBCKTXAMT,  @OrigBackoutFreightTaxAmt = @I_vBackoutFreightTaxAmt,  @OrigBackoutMiscTaxAmt = @I_vBackoutMiscTaxAmt,  @OrigBackoutTradeDiscTax = @I_vBackoutTradeDiscTax,  @ORFRTTAX = @I_vFRTTXAMT,  @ORMSCTAX = @I_vMSCTXAMT   select @PONOTIDS_7 = NOTEINDX from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID   select @CMPNYNAM_Source = ShipToName, @CNTCPRSN_Source = CNTCPRSN, @ADDRESS1_Source = ADDRESS1, @ADDRESS2_Source = ADDRESS2, @ADDRESS3_Source = ADDRESS3,  @CITY_Source = CITY, @STATE_Source = STATE, @ZIPCODE_Source = ZIP, @CCODE_Source = CCode, @COUNTRY_Source = COUNTRY, @PHONE1_Source = PHONE1,  @PHONE2_Source = PHONE2, @PHONE3_Source = PHONE3, @FAX_Source = FAX from RM00102 where CUSTNMBR = @I_vCUSTNMBR and ADRSCODE = @I_vPRSTADCD   if (@I_vRequesterTrx=0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1283    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if (@ISMCTRX = 1)  begin  if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 964    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRTCLCMTD = 0)     begin  select   @REMSUBTO  = round(@REMSUBTO * @I_vXCHGRATE, @DECPLCUR),  @TotalLineAmount = round(@TotalLineAmount* @I_vXCHGRATE, @DECPLCUR),  @OnOrderAmount = round(@OnOrderAmount* @I_vXCHGRATE, @DECPLCUR),   @CANCSUB  = round(@CANCSUB * @I_vXCHGRATE, @DECPLCUR),  @I_vTRDISAMT  = round(@I_vTRDISAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vFRTAMNT  = round(@I_vFRTAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vMSCCHAMT  = round(@I_vMSCCHAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vTAXAMNT  = round(@I_vTAXAMNT * @I_vXCHGRATE, @DECPLCUR),  @I_vBCKTXAMT   = round(@I_vBCKTXAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vBackoutFreightTaxAmt= round(@I_vBackoutFreightTaxAmt* @I_vXCHGRATE, @DECPLCUR),  @I_vBackoutMiscTaxAmt = round(@I_vBackoutMiscTaxAmt * @I_vXCHGRATE, @DECPLCUR),  @I_vBackoutTradeDiscTax = round(@I_vBackoutTradeDiscTax * @I_vXCHGRATE, @DECPLCUR),  @I_vFRTTXAMT   = round(@I_vFRTTXAMT * @I_vXCHGRATE, @DECPLCUR),  @I_vMSCTXAMT   = round(@I_vMSCTXAMT * @I_vXCHGRATE, @DECPLCUR)  end  else  if @I_vRTCLCMTD = 1    begin  select  @REMSUBTO  = round(@REMSUBTO / @I_vXCHGRATE, @DECPLCUR),  @TotalLineAmount = round(@TotalLineAmount/ @I_vXCHGRATE, @DECPLCUR),  @OnOrderAmount = round(@OnOrderAmount/ @I_vXCHGRATE, @DECPLCUR),   @CANCSUB  = round(@CANCSUB / @I_vXCHGRATE, @DECPLCUR),  @I_vTRDISAMT  = round(@I_vTRDISAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vFRTAMNT  = round(@I_vFRTAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vMSCCHAMT  = round(@I_vMSCCHAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vTAXAMNT  = round(@I_vTAXAMNT / @I_vXCHGRATE, @DECPLCUR),  @I_vBCKTXAMT   = round(@I_vBCKTXAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vBackoutFreightTaxAmt= round(@I_vBackoutFreightTaxAmt/ @I_vXCHGRATE, @DECPLCUR),  @I_vBackoutMiscTaxAmt = round(@I_vBackoutMiscTaxAmt / @I_vXCHGRATE, @DECPLCUR),  @I_vBackoutTradeDiscTax = round(@I_vBackoutTradeDiscTax / @I_vXCHGRATE, @DECPLCUR),  @I_vFRTTXAMT   = round(@I_vFRTTXAMT / @I_vXCHGRATE, @DECPLCUR),  @I_vMSCTXAMT   = round(@I_vMSCTXAMT / @I_vXCHGRATE, @DECPLCUR)  end   if (@I_vRTCLCMTD = 0)   begin  update POP10110 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  RATECALC = @I_vRTCLCMTD,  DENXRATE = 0,  UNITCOST =   case  when UNITCOST = ORUNTCST     then round(UNITCOST * @I_vXCHGRATE, (DECPLCUR - 7))  else UNITCOST  end,    ORUNTCST =   case  when UNITCOST = ORUNTCST     then UNITCOST  else ORUNTCST  end,  EXTDCOST =   case   when UNITCOST = ORUNTCST  then round(EXTDCOST * @I_vXCHGRATE, @DECPLCUR)  else EXTDCOST  end,  OREXTCST =   case   when UNITCOST = ORUNTCST  then EXTDCOST  else OREXTCST  end,  TAXAMNT =   case   when TAXAMNT = ORTAXAMT  then round(TAXAMNT * @I_vXCHGRATE, @DECPLCUR)  else TAXAMNT  end,  ORTAXAMT =   case   when TAXAMNT = ORTAXAMT  then TAXAMNT  else ORTAXAMT  end,  BCKTXAMT =   case   when BCKTXAMT = OBTAXAMT  then round(BCKTXAMT * @I_vXCHGRATE, @DECPLCUR)  else BCKTXAMT  end,  OBTAXAMT =   case   when BCKTXAMT = OBTAXAMT   then BCKTXAMT  else OBTAXAMT  end,  BackoutTradeDiscTax =   case   when BackoutTradeDiscTax = OrigBackoutTradeDiscTax  then round(BackoutTradeDiscTax * @I_vXCHGRATE, @DECPLCUR)  else BackoutTradeDiscTax  end,  OrigBackoutTradeDiscTax =   case   when BackoutTradeDiscTax = OrigBackoutTradeDiscTax   then BackoutTradeDiscTax  else OrigBackoutTradeDiscTax  end  where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 965     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10160 set  TAXAMNT = round(TAXAMNT * @I_vXCHGRATE, @DECPLCUR),  ORTAXAMT = TAXAMNT,  FRTTXAMT = round(FRTTXAMT * @I_vXCHGRATE, @DECPLCUR),  ORFRTTAX = FRTTXAMT,  MSCTXAMT = round(MSCTXAMT * @I_vXCHGRATE, @DECPLCUR),  ORMSCTAX = MSCTXAMT,  TAXPURCH = round(TAXPURCH * @I_vXCHGRATE, @DECPLCUR),  ORGTXPCH = TAXPURCH,  TOTPURCH = round(TOTPURCH * @I_vXCHGRATE, @DECPLCUR),  ORTOTPUR = TOTPURCH,  TXDTOTTX = round(TXDTOTTX * @I_vXCHGRATE, @DECPLCUR),  OTTAXPON = TXDTOTTX,  CURRNIDX = @CURRNIDX  where PONUMBER = @I_vPONUMBER   if (@@error <> 0)  begin  select @O_iErrorState = 966     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  if (@I_vRTCLCMTD = 1)   begin  update POP10110 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX,  XCHGRATE = @I_vXCHGRATE,  RATECALC = @I_vRTCLCMTD,  DENXRATE = 0,  UNITCOST =   case  when UNITCOST = ORUNTCST     then round(UNITCOST / @I_vXCHGRATE, (DECPLCUR - 7))  else UNITCOST  end,    ORUNTCST =   case  when UNITCOST = ORUNTCST     then UNITCOST  else ORUNTCST  end,  EXTDCOST =   case   when UNITCOST = ORUNTCST  then round(EXTDCOST / @I_vXCHGRATE, @DECPLCUR)  else EXTDCOST  end,  OREXTCST =   case   when UNITCOST = ORUNTCST  then EXTDCOST  else OREXTCST  end,  TAXAMNT =   case   when TAXAMNT = ORTAXAMT  then round(TAXAMNT / @I_vXCHGRATE, @DECPLCUR)  else TAXAMNT  end,  ORTAXAMT =   case   when TAXAMNT = ORTAXAMT  then TAXAMNT  else ORTAXAMT  end,  BCKTXAMT =   case   when BCKTXAMT = OBTAXAMT  then round(BCKTXAMT / @I_vXCHGRATE, @DECPLCUR)  else BCKTXAMT  end,  OBTAXAMT =   case   when BCKTXAMT = OBTAXAMT   then BCKTXAMT  else OBTAXAMT  end,  BackoutTradeDiscTax =   case   when BackoutTradeDiscTax = OrigBackoutTradeDiscTax  then round(BackoutTradeDiscTax / @I_vXCHGRATE, @DECPLCUR)  else BackoutTradeDiscTax  end,  OrigBackoutTradeDiscTax =   case   when BackoutTradeDiscTax = OrigBackoutTradeDiscTax   then BackoutTradeDiscTax  else OrigBackoutTradeDiscTax  end  where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 967     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10160 set  TAXAMNT = round(TAXAMNT / @I_vXCHGRATE, @DECPLCUR),  ORTAXAMT = TAXAMNT,  FRTTXAMT = round(FRTTXAMT / @I_vXCHGRATE, @DECPLCUR),  ORFRTTAX = FRTTXAMT,  MSCTXAMT = round(MSCTXAMT / @I_vXCHGRATE, @DECPLCUR),  ORMSCTAX = MSCTXAMT,  TAXPURCH = round(TAXPURCH / @I_vXCHGRATE, @DECPLCUR),  ORGTXPCH = TAXPURCH,  TOTPURCH = round(TOTPURCH / @I_vXCHGRATE, @DECPLCUR),  ORTOTPUR = TOTPURCH,  TXDTOTTX = round(TXDTOTTX / @I_vXCHGRATE, @DECPLCUR),  OTTAXPON = TXDTOTTX,  CURRNIDX = @CURRNIDX  where PONUMBER = @I_vPONUMBER   if (@@error <> 0)  begin  select @O_iErrorState = 968     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @TotalLineAmount = sum(EXTDCOST),  @CANCSUB = sum(QTYCANCE * UNITCOST) from POP10110 (nolock) where PONUMBER = @I_vPONUMBER   select @TotalLineAmount = isnull(@TotalLineAmount,0),  @CANCSUB = isnull(@CANCSUB,0)   if (exists(select 1 from POP10110 d (nolock) left outer join IV00105 i (nolock) on d.ITEMNMBR = i.ITEMNMBR and d.CURNCYID = i.CURNCYID  where d.PONUMBER = @I_vPONUMBER and d.NONINVEN = 0 and i.DEX_ROW_ID is null))  begin  select @O_iErrorState = 1318    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin   if (not exists(select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID and (CURNCYID = @I_vCURNCYID or CURNCYID = '')))  begin  update POP10110 set  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 4021     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   update POP10160 set  CURRNIDX = @CURRNIDX  where PONUMBER = @I_vPONUMBER   if (@@error <> 0)  begin  select @O_iErrorState = 4022     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  if exists (select Workflow_Type_Name from  WF100001 where FormID = 829) and exists (select 1 from WF100002 where WF100002.ACTIVE = 1 and   Workflow_Type_Name = (select Workflow_Type_Name from WF100001 where FormID = 829 ))   select @Workflow_Status = 1 , @Workflow_Priority = 0   Else  select @Workflow_Status = 9 , @Workflow_Priority = 0    if @I_vUpdateIfExists = 0 or @exists = 0  begin  insert POP10100  (  PONUMBER,  POSTATUS,  STATGRP,  POTYPE,  USER2ENT,  CONFIRM1,  DOCDATE,  LSTEDTDT,  LSTPRTDT,  PRMDATE,  PRMSHPDTE,  REQDATE,  REQTNDT,  SHIPMTHD,  TXRGNNUM,  REMSUBTO,  SUBTOTAL,  TRDISAMT,  FRTAMNT,  MSCCHAMT,  TAXAMNT,  VENDORID,  VENDNAME,  MINORDER,  VADCDPAD,  CMPANYID,  PRBTADCD,  PRSTADCD,  CMPNYNAM,  CONTACT,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  CCode,  COUNTRY,  PHONE1,  PHONE2,  PHONE3,  FAX,  PYMTRMID,  DSCDLRAM,  DSCPCTAM,  DISAMTAV,  DISCDATE,  DUEDATE,  TRDPCTPR,  CUSTNMBR,  TIMESPRT,  CREATDDT,  MODIFDT,  PONOTIDS_1,  PONOTIDS_2,  PONOTIDS_3,  PONOTIDS_4,  PONOTIDS_5,  PONOTIDS_6,  PONOTIDS_7,  PONOTIDS_8,  PONOTIDS_9,  PONOTIDS_10,  PONOTIDS_11,  PONOTIDS_12,  PONOTIDS_13,  PONOTIDS_14,  PONOTIDS_15,  COMMNTID,  CANCSUB,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RATECALC,  DENXRATE,  MCTRXSTT,  OREMSUBT,  ORSUBTOT,  Originating_Canceled_Sub,  ORTDISAM,  ORFRTAMT,  OMISCAMT,  ORTAXAMT,  ORDDLRAT,  ODISAMTAV,  BUYERID,  ONORDAMT,  ORORDAMT,  HOLD,  ONHOLDDATE,  ONHOLDBY,  HOLDREMOVEDATE,  HOLDREMOVEBY,  ALLOWSOCMTS,  DISGRPER,  DUEGRPER,  Revision_Number,  Change_Order_Flag,  PO_Field_Changes,  PO_Status_Orig,  TAXSCHID,  TXSCHSRC,  TXENGCLD,  BSIVCTTL,  Purchase_Freight_Taxable,  Purchase_Misc_Taxable,  FRTSCHID,  MSCSCHID,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  BCKTXAMT,  OBTAXAMT,  BackoutFreightTaxAmt,  OrigBackoutFreightTaxAmt,  BackoutMiscTaxAmt,  OrigBackoutMiscTaxAmt,  Flags,  BackoutTradeDiscTax,  OrigBackoutTradeDiscTax,  POPCONTNUM,  CONTENDDTE,  CNTRLBLKTBY,  PURCHCMPNYNAM,  PURCHCONTACT,  PURCHADDRESS1,  PURCHADDRESS2,  PURCHADDRESS3,  PURCHCITY,  PURCHSTATE,  PURCHZIPCODE,  PURCHCCode,  PURCHCOUNTRY,  PURCHPHONE1,  PURCHPHONE2,  PURCHPHONE3,  PURCHFAX,  BLNKTLINEEXTQTYSUM,  CBVAT,  Workflow_Approval_Status,  Workflow_Priority,  Workflow_Status,  Print_Phone_NumberGB  )  select  @I_vPONUMBER,     @I_vPOSTATUS,     1,      @I_vPOTYPE,     @I_vUSERID,     @CONFIRM1,     @I_vDOCDATE,     convert(varchar(12),getdate()),   case      when @I_vPOSTATUS = 2  then @LSTPRTDT  else ''   end,  case       WHEN @I_vPRMDATE is null  THEN @I_vDOCDATE   ELSE @I_vPRMDATE  end,  case       WHEN @I_vPRMSHPDTE is null  THEN @I_vDOCDATE   ELSE @I_vPRMSHPDTE  end,  case      WHEN @I_vREQDATE is null  THEN @I_vDOCDATE   ELSE @I_vREQDATE  end,  @I_vREQTNDT,      @I_vSHIPMTHD,     @TXRGNNUM,     @REMSUBTO,     @TotalLineAmount,    @I_vTRDISAMT,     @I_vFRTAMNT,     @I_vMSCCHAMT,     @I_vTAXAMNT,     @I_vVENDORID,     @I_vVENDNAME,     @MINORDER,     @I_vVADCDPAD,     @CMPANYID,     @I_vPRBTADCD,     @I_vPRSTADCD,     @I_vCMPNYNAM,     @I_vCONTACT,     @I_vADDRESS1,     @I_vADDRESS2,     @I_vADDRESS3,     @I_vCITY,     @I_vSTATE,     @I_vZIPCODE,     @I_vCCode,     @I_vCOUNTRY,     @I_vPHONE1,     @I_vPHONE2,     @I_vPHONE3,     @I_vFAX,     @I_vPYMTRMID,     @I_vDSCDLRAM,     @I_vDSCPCTAM * 100,    @I_vDISAMTAV,     @I_vDISCDATE,     @I_vDUEDATE,     case      when @TotalLineAmount = 0  then 0  else @TRDPCTPR  end,  @I_vCUSTNMBR,     case      when @I_vPOSTATUS = 2  then 1  else 0  end,  @I_vDOCDATE,     @I_vDOCDATE,     @PONOTIDS_1,     @PONOTIDS_2,     @PONOTIDS_3,     @PONOTIDS_4,     @PONOTIDS_5,     @PONOTIDS_6,     @PONOTIDS_7,     @PONOTIDS_8,     @PONOTIDS_9,     @PONOTIDS_10,     @PONOTIDS_11,     @PONOTIDS_12,     @PONOTIDS_13,     @PONOTIDS_14,     @PONOTIDS_15,     @I_vCOMMNTID,     @CANCSUB,     case      when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  case      when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  @I_vRATETPID,     @EXGTBLID,     @I_vXCHGRATE,     @I_vEXCHDATE,     @I_vTIME1,     @I_vRTCLCMTD,     0,      0,      @OREMSUBT,     @ORSUBTOT,     @Originating_Canceled_Sub,   @ORTDISAM,     @ORFRTAMT,     @OMISCAMT,     @ORTAXAMT,     @ORDDLRAT,     @ODISAMTAV,     @I_vBUYERID,     case      when @I_vPOSTATUS = 2  then @TotalLineAmount  else 0  end,  case      when @I_vPOSTATUS = 2  then @ORSUBTOT   else 0  end,  @I_vHOLD,     @ONHOLDDATE,     case      when @I_vHOLD = 1  then @I_vUSERID  else ''  end,  '',      '',      @I_vALLOWSOCMTS,    @DISGRPER,     @DUEGRPER,     0,      0,      0,      case      when @I_vPOSTATUS = 2  then 1  else 0  end,  @I_vTAXSCHID,     0,      0,      0,      @I_vPurchase_Freight_Taxable,   @I_vPurchase_Misc_Taxable,   @I_vFRTSCHID,     @I_vMSCSCHID,     @I_vFRTTXAMT,     @ORFRTTAX,     @I_vMSCTXAMT,     @ORMSCTAX,     case      when @I_vBCKTXAMT = 0 and @BACKOUTAMT > 0   then @BACKOUTAMT  else @I_vBCKTXAMT  end,   case      when @OBTAXAMT = 0 and @BACKOUTAMT > 0   then @BACKOUTAMT  else @OBTAXAMT  end,   @I_vBackoutFreightTaxAmt,   @OrigBackoutFreightTaxAmt,   @I_vBackoutMiscTaxAmt,    @OrigBackoutMiscTaxAmt,    case       when (@I_vCMMTTEXT <> '' or @I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> '')  then 2   when (@I_vPOTYPE in (2,4) and (@I_vCMPNYNAM<>@CMPNYNAM_Source or @I_vCONTACT<>@CNTCPRSN_Source or @I_vADDRESS1<>@ADDRESS1_Source or @I_vADDRESS2<>@ADDRESS2_Source or @I_vADDRESS3<>@ADDRESS3_Source or @I_vCITY<>@CITY_Source or @I_vSTATE<>@STATE_Source or @I_vZIPCODE<>@ZIPCODE_Source or @I_vCCode<>@CCODE_Source or @I_vCOUNTRY<>@COUNTRY_Source or @I_vPHONE1<>@PHONE1_Source or   @I_vPHONE2<>@PHONE2_Source or @I_vPHONE3<>@PHONE3_Source or @I_vFAX<>@FAX_Source))   then 1   else 0  end,  @I_vBackoutTradeDiscTax,   @OrigBackoutTradeDiscTax,   '',      @I_vCONTENDDTE,     @I_vCNTRLBLKTBY,    @I_vPURCHCMPNYNAM,    @I_vPURCHCONTACT,    @I_vPURCHADDRESS1,    @I_vPURCHADDRESS2,    @I_vPURCHADDRESS3,    @I_vPURCHCITY,     @I_vPURCHSTATE,     @I_vPURCHZIPCODE,    @I_vPURCHCCode,     @I_vPURCHCOUNTRY,    @I_vPURCHPHONE1,    @I_vPURCHPHONE2,    @I_vPURCHPHONE3,    @I_vPURCHFAX,     case       when @I_vPOTYPE in (3,4)  then @QUANTITY - @CANCSUB  else 0   end,   0,      0,    @Workflow_Priority,  @Workflow_Status,   @I_vPrint_Phone_NumberGB    if (@@error <> 0)  begin  select @O_iErrorState = 236     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if exists (select Workflow_Type_Name from  WF100001 where FormID = 829) and exists (select 1 from WF100002 where WF100002.ACTIVE = 1 and   Workflow_Type_Name = (select Workflow_Type_Name from WF100001 where FormID = 829 ))   Begin  if(exists(select 1 from POP10100 where Workflow_Status not in(1,9) and PONUMBER = @I_vPONUMBER)) or  (exists(select 1 from POP10100 where Workflow_Status in(1,9) and PONUMBER = @I_vPONUMBER)   and (@I_vPOSTATUS <> @cPOSTATUS))  Begin  select @O_iErrorState = 9006     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  End  end  update POP10100   set   POTYPE = @I_vPOTYPE,  POSTATUS = @I_vPOSTATUS,  STATGRP =   case   when @I_vPOSTATUS = 6  then 2  else 1  end,  USER2ENT = @I_vUSERID,  CONFIRM1 = @CONFIRM1,  DOCDATE = @I_vDOCDATE,  LSTEDTDT = convert(varchar(12),getdate()),  LSTPRTDT = case   when @I_vPOSTATUS = 2  then @LSTPRTDT  else ''   end,  PRMDATE = case   WHEN @I_vPRMDATE is null  THEN @I_vDOCDATE   ELSE @I_vPRMDATE  end,  PRMSHPDTE = case   WHEN @I_vPRMSHPDTE is null  THEN @I_vDOCDATE   ELSE @I_vPRMSHPDTE  end,  REQDATE = case   WHEN @I_vREQDATE is null  THEN @I_vDOCDATE   ELSE @I_vREQDATE  end,  REQTNDT = @I_vREQTNDT,  SHIPMTHD = @I_vSHIPMTHD,  TXRGNNUM = @TXRGNNUM,  REMSUBTO = @REMSUBTO,  SUBTOTAL = @TotalLineAmount,  TRDISAMT = @I_vTRDISAMT,  FRTAMNT = @I_vFRTAMNT,  MSCCHAMT = @I_vMSCCHAMT,  TAXAMNT = @I_vTAXAMNT,  VENDORID = @I_vVENDORID,  VENDNAME = @I_vVENDNAME,  MINORDER = @MINORDER,  VADCDPAD = @I_vVADCDPAD,  CMPANYID = @CMPANYID,  PRBTADCD = @I_vPRBTADCD,  PRSTADCD = @I_vPRSTADCD,  CMPNYNAM = @I_vCMPNYNAM,  CONTACT = @I_vCONTACT,  ADDRESS1 = @I_vADDRESS1,  ADDRESS2 = @I_vADDRESS2,  ADDRESS3 = @I_vADDRESS3,  CITY = @I_vCITY,  STATE = @I_vSTATE,  ZIPCODE = @I_vZIPCODE,  CCode = @I_vCCode,  COUNTRY = @I_vCOUNTRY,  PHONE1 = @I_vPHONE1,  PHONE2 = @I_vPHONE2,  PHONE3 = @I_vPHONE3,  FAX = @I_vFAX,  PYMTRMID = @I_vPYMTRMID,  DSCDLRAM = @I_vDSCDLRAM,  DSCPCTAM = @I_vDSCPCTAM * 100,  DISAMTAV = @I_vDISAMTAV,  DISCDATE = @I_vDISCDATE,  DUEDATE = @I_vDUEDATE,  TRDPCTPR = case   when @TotalLineAmount = 0  then 0  else @TRDPCTPR  end,  CUSTNMBR = @I_vCUSTNMBR,  TIMESPRT = case   when @I_vPOSTATUS = 2 and TIMESPRT = 0  then 1  else 0  end,  CREATDDT = @I_vDOCDATE,  MODIFDT = @I_vDOCDATE,   COMMNTID = @I_vCOMMNTID,  CANCSUB = @CANCSUB,  CURNCYID = case   when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  CURRNIDX = case   when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  RATETPID = @I_vRATETPID,  EXGTBLID = @EXGTBLID,  XCHGRATE = @I_vXCHGRATE,  EXCHDATE = @I_vEXCHDATE,  TIME1 = @I_vTIME1,  RATECALC = @I_vRTCLCMTD,   OREMSUBT = @OREMSUBT,  ORSUBTOT = @ORSUBTOT,  Originating_Canceled_Sub = @Originating_Canceled_Sub,  ORTDISAM = @ORTDISAM,  ORFRTAMT = @ORFRTAMT,  OMISCAMT = @OMISCAMT,  ORTAXAMT = @ORTAXAMT,  ORDDLRAT = @ORDDLRAT,  ODISAMTAV = @ODISAMTAV,  BUYERID = @I_vBUYERID,  ONORDAMT = case   when @I_vPOSTATUS in (2)  then @TotalLineAmount  when @I_vPOSTATUS in (3,4)  then @OnOrderAmount  else 0  end,  ORORDAMT = case   when @I_vPOSTATUS in (2)  then @ORSUBTOT   when @I_vPOSTATUS in (3,4) and @ISMCTRX = 0  then @OnOrderAmount  when @I_vPOSTATUS in (3,4) and @ISMCTRX = 1   then @OrigOnOrderAmount  else 0  end,  HOLD = @I_vHOLD,  ONHOLDDATE = @ONHOLDDATE,   ONHOLDBY = case   when @I_vHOLD = 1  then @I_vUSERID  else ''  end,   ALLOWSOCMTS = @I_vALLOWSOCMTS,  DISGRPER = @DISGRPER,  DUEGRPER = @DUEGRPER,  Revision_Number = Revision_Number + 1,  Change_Order_Flag = case  when @I_vPOSTATUS = 3   then 1  else 0  end,  PO_Status_Orig = @cPOSTATUS,  TAXSCHID = @I_vTAXSCHID,   Purchase_Freight_Taxable = @I_vPurchase_Freight_Taxable,  Purchase_Misc_Taxable = @I_vPurchase_Misc_Taxable,  FRTSCHID = @I_vFRTSCHID,  MSCSCHID = @I_vMSCSCHID,  FRTTXAMT = @I_vFRTTXAMT,  ORFRTTAX = @ORFRTTAX,  MSCTXAMT = @I_vMSCTXAMT,  ORMSCTAX = @ORMSCTAX,  BCKTXAMT = @I_vBCKTXAMT,  OBTAXAMT = @OBTAXAMT,  BackoutFreightTaxAmt = @I_vBackoutFreightTaxAmt,  OrigBackoutFreightTaxAmt = @OrigBackoutFreightTaxAmt,  BackoutMiscTaxAmt = @I_vBackoutMiscTaxAmt,  OrigBackoutMiscTaxAmt = @OrigBackoutMiscTaxAmt,  Flags = case   when (@I_vCMMTTEXT <> '' or @I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or @I_vCOMMENT_4 <> '')  then 2   when (@I_vPOTYPE in (2,4) and (@I_vCMPNYNAM<>@CMPNYNAM_Source or @I_vCONTACT<>@CNTCPRSN_Source or @I_vADDRESS1<>@ADDRESS1_Source or @I_vADDRESS2<>@ADDRESS2_Source or @I_vADDRESS3<>@ADDRESS3_Source or @I_vCITY<>@CITY_Source or @I_vSTATE<>@STATE_Source or @I_vZIPCODE<>@ZIPCODE_Source or @I_vCCode<>@CCODE_Source or @I_vCOUNTRY<>@COUNTRY_Source or @I_vPHONE1<>@PHONE1_Source or   @I_vPHONE2<>@PHONE2_Source or @I_vPHONE3<>@PHONE3_Source or @I_vFAX<>@FAX_Source))   then 1   else 0  end,   BackoutTradeDiscTax = @I_vBackoutTradeDiscTax,  OrigBackoutTradeDiscTax = @OrigBackoutTradeDiscTax,  CONTENDDTE = @I_vCONTENDDTE,  PURCHCMPNYNAM = @I_vPURCHCMPNYNAM,  PURCHCONTACT = @I_vPURCHCONTACT,  PURCHADDRESS1 = @I_vPURCHADDRESS1,  PURCHADDRESS2 = @I_vPURCHADDRESS2,  PURCHADDRESS3 = @I_vPURCHADDRESS3,  PURCHCITY = @I_vPURCHCITY,  PURCHSTATE = @I_vPURCHSTATE,  PURCHZIPCODE = @I_vPURCHZIPCODE,  PURCHCCode = @I_vPURCHCCode,  PURCHCOUNTRY = @I_vPURCHCOUNTRY,  PURCHPHONE1 = @I_vPURCHPHONE1,  PURCHPHONE2 = @I_vPURCHPHONE2,  PURCHPHONE3 = @I_vPURCHPHONE3,  PURCHFAX = @I_vPURCHFAX,  Workflow_Approval_Status = 0,   Workflow_Priority = @Workflow_Priority,   Workflow_Status = @Workflow_Status,   Print_Phone_NumberGB = @I_vPrint_Phone_NumberGB  where PONUMBER = @I_vPONUMBER   if (@@error <> 0)  begin  select @O_iErrorState = 9182     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  if (@I_vPOSTATUS in (2)) and @cPOSTATUS not in (2)   begin  update PM00201 set ONORDAMT = ONORDAMT + @TotalLineAmount where VENDORID = @I_vVENDORID  if (@@error <> 0)  begin  select @O_iErrorState = 1641     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  if (@I_vPOSTATUS in (2,3)) and @cPOSTATUS in (2,3)  begin  update PM00201 set ONORDAMT = ONORDAMT + @TotalLineAmount - @cSUBTOTAL where VENDORID = @I_vVENDORID  if (@@error <> 0)  begin  select @O_iErrorState = 9201     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  if exists(select 1 from dbo.sysobjects (nolock) where name  = 'PA01901')  if exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER) and  not exists (select 1 from PA01901 (nolock) where PATranType = 6 and PADocnumber20 = @I_vPONUMBER) begin  select @DCSTATUS = 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ProjNum <> '' and CostCatID <> ''  insert PA01901  (  PATranType,  DOCNUMBR,  CUSTNMBR,  PADOCDT,  PACOSTOWNER,  RMDTYPAL,  PABILLTRXT,  PADocnumber20,  DCSTATUS  )  select  6,       '',       '',       '',       '',       0,       0,       @I_vPONUMBER,    @DCSTATUS     if (@@error <> 0)  begin  select @O_iErrorState = 11455    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end   select @existscomment = isnull(1,0) from POP10150 (nolock) where POPNUMBE = @I_vPONUMBER   if (@I_vCOMMNTID <> '') and ( @cCOMMNTID <> @I_vCOMMNTID or @I_vCOMMENT_1 <> @cCOMMENT_1 or   @I_vCOMMENT_2 <> @cCOMMENT_2 or @I_vCOMMENT_3 <> @cCOMMENT_3 or @I_vCOMMENT_4 <> @cCOMMENT_4 )  begin  if ((@I_vCMMTTEXT = '') and (@I_vCOMMENT_1 = '') and (@I_vCOMMENT_2 = '') and (@I_vCOMMENT_3 = '') and (@I_vCOMMENT_4 = ''))  begin  if (exists(select 1 from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID))  begin  select @I_vCMMTTEXT = CMMTTEXT from SY04200 (nolock) where COMMNTID = @I_vCOMMNTID   exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 2284    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if @I_vUpdateIfExists = 0 or @existscomment = 0  begin  insert POP10150  (  POPNUMBE,  COMMNTID,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select @I_vPONUMBER,  @I_vCOMMNTID,  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vCMMTTEXT  if (@@error <> 0)  begin  select @O_iErrorState = 385     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  update POP10150 set  COMMENT_1 = @I_vCOMMENT_1,  COMMENT_2 = @I_vCOMMENT_2,  COMMENT_3 = @I_vCOMMENT_3,  COMMENT_4 = @I_vCOMMENT_4,  CMMTTEXT = @I_vCMMTTEXT  where POPNUMBE = @I_vPONUMBER and COMMNTID = @I_vCOMMNTID  if (@@error <> 0)  begin  select @O_iErrorState = 9183     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  else  begin  exec @iStatus = taCreateCommentMaster  4,  @I_vCOMMNTID,  @I_vCMMTTEXT,  @O_iErrorState = @O_iCommentMstErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iCommentMstErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @O_iCommentMstErrState  select @O_iErrorState = 386    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  else  begin   if (@I_vCMMTTEXT <> '')   begin  exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output  select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 2285    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @I_vCMMTTEXT =  rtrim(@I_vCOMMENT_1) + char(13) +  rtrim(@I_vCOMMENT_2) + char(13) +  rtrim(@I_vCOMMENT_3) + char(13) +  rtrim(@I_vCOMMENT_4)  end  if @I_vUpdateIfExists = 0 or @existscomment = 0  begin  insert POP10150  (  POPNUMBE,  COMMNTID,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select @I_vPONUMBER,  @I_vCOMMNTID,  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vCMMTTEXT  if (@@error <> 0)  begin  select @O_iErrorState = 2286     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin   update POP10150 set  COMMENT_1 = @I_vCOMMENT_1,  COMMENT_2 = @I_vCOMMENT_2,  COMMENT_3 = @I_vCOMMENT_3,  COMMENT_4 = @I_vCOMMENT_4,  CMMTTEXT = @I_vCMMTTEXT  where POPNUMBE = @I_vPONUMBER and COMMNTID = @I_vCOMMNTID  if (@@error <> 0)  begin  select @O_iErrorState = 9220     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  exec @iStatus = taCreateCommentMaster  4,  @I_vCOMMNTID,  @I_vCMMTTEXT,  @O_iErrorState = @O_iCommentMstErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iCommentMstErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @O_iCommentMstErrState  select @O_iErrorState = 3417    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end  else  begin  if ((@cCMMTTEXT <> @I_vCMMTTEXT and @I_vUpdateIfExists = 1 and @existscomment = 0 ))  or ((@I_vUpdateIfExists = 0) and (@I_vCOMMENT_1 <> '' or @I_vCOMMENT_2 <> '' or @I_vCOMMENT_3 <> '' or   @I_vCOMMENT_4 <> '' or @I_vCMMTTEXT <> '')  or (@I_vUpdateIfExists = 1 or @existscomment = 1) and (@cCOMMENT_1 <> @I_vCOMMENT_1 or @cCOMMENT_2 <> @I_vCOMMENT_2  or @cCOMMENT_3 <> @I_vCOMMENT_3 or @cCOMMENT_4 <> @I_vCOMMENT_4 or @cCMMTTEXT <> @I_vCMMTTEXT))  begin  if (@I_vCMMTTEXT <> '') and (@cCOMMENT_1 = @I_vCOMMENT_1 or @cCOMMENT_2 = @I_vCOMMENT_2  or @cCOMMENT_3 = @I_vCOMMENT_3 or @cCOMMENT_4 = @I_vCOMMENT_4 or @cCMMTTEXT <> @I_vCMMTTEXT)  begin  exec @iStatus = taParseCommentText  @I_vCMMTTEXT = @I_vCMMTTEXT,  @O_COMMENT_1 = @I_vCOMMENT_1 output,  @O_COMMENT_2 = @I_vCOMMENT_2 output,  @O_COMMENT_3 = @I_vCOMMENT_3 output,  @O_COMMENT_4 = @I_vCOMMENT_4 output   select @iError = @@error  if ((@iStatus <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 9288    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   else  begin  if @I_vCMMTTEXT = ''  begin  select @I_vCMMTTEXT =  rtrim(@I_vCOMMENT_1) + char(13) +  rtrim(@I_vCOMMENT_2) + char(13) +  rtrim(@I_vCOMMENT_3) + char(13) +  rtrim(@I_vCOMMENT_4)  end  end   if @I_vUpdateIfExists = 0 or @existscomment = 0  begin  insert POP10150  (  POPNUMBE,  COMMNTID,  COMMENT_1,  COMMENT_2,  COMMENT_3,  COMMENT_4,  CMMTTEXT  )  select @I_vPONUMBER,  @I_vCOMMNTID,  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vCMMTTEXT  if (@@error <> 0)  begin  select @O_iErrorState = 2288     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  update POP10150 set  COMMENT_1 = isnull(@I_vCOMMENT_1,''),  COMMENT_2 = isnull(@I_vCOMMENT_2,''),  COMMENT_3 = isnull(@I_vCOMMENT_3,''),  COMMENT_4 = isnull(@I_vCOMMENT_4,''),  CMMTTEXT = isnull(@I_vCMMTTEXT,'')  where POPNUMBE = @I_vPONUMBER and COMMNTID = @I_vCOMMNTID  if (@@error <> 0)  begin  select @O_iErrorState = 9221     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  end   break end  if (@I_vNOTETEXT <> '') begin  if not exists(select 1 from SY03900 (nolock) where NOTEINDX = @PONOTIDS_1)  begin  insert SY03900   (  NOTEINDX,   DATE1,   TIME1,   TXTFIELD  )   select   @PONOTIDS_1,  convert(varchar(12),getdate()),  substring(convert(varchar(25),getdate()),12,12),  @I_vNOTETEXT  if (@@error <> 0)  begin  select @O_iErrorState = 5873    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  update SY03900 set   DATE1 = convert(varchar(12),getdate()),   TIME1 = substring(convert(varchar(25),getdate()),12,12),   TXTFIELD = @I_vNOTETEXT  where NOTEINDX = @PONOTIDS_1  if (@@error <> 0)  begin  select @O_iErrorState = 5874    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end end else begin  delete SY03900 where NOTEINDX = @PONOTIDS_1  if (@@error <> 0)  begin  select @O_iErrorState = 5875    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'AAG00102') begin  if exists(select 1 from DYNAMICS..AAG00102 (nolock) where CMPANYID = @CMPANYID)  begin   exec @iStatus = aagCreateSubWorkDist  @aaSubLedgerHdrID out,  0,   0,   @I_vPONUMBER,  '',   10110,  12,   @CMPANYID,   0,  @I_vCURNCYID,   @CURRNIDX,   @I_vRATETPID,   @EXGTBLID,   @I_vXCHGRATE,   @I_vEXCHDATE,   @I_vTIME1,  @I_vRTCLCMTD,   0,  0,   @DECPLUSED,   1,   @INTERID,   0,   0,  '',  @O_iErrorStateAASub output,  @O_iErrorStringAASub output   if (@@error <> 0)   begin  select @O_iErrorState = 8299    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  if @aaSubLedgerHdrID <> 0  begin  exec @iStatus = taProcessAnalytics  @I_vDOCNMBR = @I_vPONUMBER,  @I_vKey = @I_vPONUMBER,  @I_vDOCTYPE = 0,  @O_iErrorState = @itaProcessAnalyticsErrState output,  @oErrString = @itaProcessAnalyticsErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@itaProcessAnalyticsErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @itaProcessAnalyticsErrString  select @O_iErrorState = 8300    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return(@O_iErrorState)  end  end  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPoHdrPost  @I_vPOTYPE,  @I_vPONUMBER,  @I_vVENDORID,  @I_vVENDNAME,  @I_vDOCDATE,  @I_vBUYERID,  @I_vALLOWSOCMTS,  @I_vTRDISAMT,  @I_vFRTAMNT,  @I_vMSCCHAMT,  @I_vTAXAMNT,  @I_vSUBTOTAL,  @I_vCUSTNMBR,  @I_vPRSTADCD,  @I_vCMPNYNAM,  @I_vCONTACT,  @I_vADDRESS1,  @I_vADDRESS2,  @I_vADDRESS3,  @I_vCITY,  @I_vSTATE,  @I_vZIPCODE,  @I_vCCode,  @I_vCOUNTRY,  @I_vPHONE1,  @I_vPHONE2,  @I_vPHONE3,  @I_vFAX,  @I_vPrint_Phone_NumberGB,  @I_vVADCDPAD,  @I_vPURCHCMPNYNAM,  @I_vPURCHCONTACT,  @I_vPURCHADDRESS1,  @I_vPURCHADDRESS2,  @I_vPURCHADDRESS3,  @I_vPURCHCITY,  @I_vPURCHSTATE,  @I_vPURCHZIPCODE,  @I_vPURCHCCode,  @I_vPURCHCOUNTRY,  @I_vPURCHPHONE1,  @I_vPURCHPHONE2,  @I_vPURCHPHONE3,  @I_vPURCHFAX,  @I_vPRBTADCD,  @I_vSHIPMTHD,  @I_vPYMTRMID,  @I_vDSCPCTAM,  @I_vDSCDLRAM,  @I_vDISAMTAV,  @I_vDUEDATE,  @I_vDISCDATE,  @I_vTXRGNNUM,  @I_vCONFIRM1,  @I_vCOMMNTID,  @I_vCOMMENT_1,  @I_vCOMMENT_2,  @I_vCOMMENT_3,  @I_vCOMMENT_4,  @I_vHOLD,  @I_vTAXSCHID,  @I_vPurchase_Freight_Taxable,  @I_vPurchase_Misc_Taxable,  @I_vFRTSCHID,  @I_vMSCSCHID,  @I_vFRTTXAMT,  @I_vMSCTXAMT,  @I_vBCKTXAMT,  @I_vBackoutFreightTaxAmt,  @I_vBackoutMiscTaxAmt,  @I_vBackoutTradeDiscTax,  @I_vUSINGHEADERLEVELTAXES,  @I_vCURNCYID,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vUSERID,  @I_vPOSTATUS,  @I_vCMMTTEXT,  @I_vPRMDATE,    @I_vPRMSHPDTE,    @I_vREQDATE,    @I_vCONTENDDTE,    @I_vCNTRLBLKTBY,   @I_vREQTNDT,  @I_vUpdateIfExists,  @I_vNOTETEXT,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 489     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1284    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@mylock = 1) begin  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,   @I_vtable_path_name = @POPHdrTbl,   @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 9222    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPoHdr] TO [DYNGRP]
GO

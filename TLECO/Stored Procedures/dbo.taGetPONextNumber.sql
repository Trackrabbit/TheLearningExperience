SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taGetPONextNumber]  @I_vInc_Dec tinyint = NULL, @O_vPONUMBER varchar(17) = NULL output, @O_iErrorState int = NULL output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare @Loop int,  @iError int,  @iStatus int,  @PONUMBER varchar(21),  @DocExists tinyint   select @O_vPONUMBER  = '',  @O_iErrorState  = 0,  @iStatus = 0,  @Loop = 0,  @DocExists = 1  if  @I_vInc_Dec is NULL begin  select @O_iErrorState = 1614     return (@O_iErrorState) end  select @O_vPONUMBER = PONUMBER from POP40100 WITH (TABLOCKX HOLDLOCK) where INDEX1 = 1 if (@@rowcount <> 1) begin  select @O_iErrorState = 1615    return (@O_iErrorState) end  select @PONUMBER = @O_vPONUMBER   while (@Loop < 1000) begin  select @Loop = @Loop + 1  select @DocExists = 0   exec @iStatus = ivNumber_Inc_Dec  @I_vInc_Dec,  @PONUMBER output,  @O_iErrorState output  select @iError = @@error  if (@iError <> 0 or @iStatus <> 0 or @O_iErrorState <> 0)  begin  select @O_iErrorState = 4057    select @DocExists = 0  break  end   if (exists (select 1 from POP30100 (nolock) where PONUMBER = @PONUMBER  union select 1 from POP10100 (nolock) where PONUMBER = @PONUMBER))  begin  select @DocExists = 1  end  else  begin  if (exists (select 1 from POP30100 (nolock) where PONUMBER = @O_vPONUMBER  union select 1 from POP10100 (nolock) where PONUMBER = @O_vPONUMBER))  begin  select @O_vPONUMBER = @PONUMBER  end  else  begin  select @DocExists = 0  break  end  end end  if (@DocExists = 1) begin  select @O_iErrorState = 4058   end  if (@O_iErrorState = 0) begin  update POP40100 set PONUMBER= @PONUMBER where INDEX1 = 1  if (@@error <> 0)  begin  select @O_iErrorState = 1617    end end else begin  select @O_vPONUMBER = '' end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taGetPONextNumber] TO [DYNGRP]
GO

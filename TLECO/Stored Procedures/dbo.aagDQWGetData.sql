SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE procedure [dbo].[aagDQWGetData] (  @iSelLineTemp varchar(100),  @iSelCodeTemp varchar(100),  @iJoinTemp varchar(100),  @iWhereTemp varchar(100),  @iOrderByTemp varchar(100),  @tempCol varchar(50),  @iWhereCondn varchar(50)  ) as  Begin  declare @HistLineSelCmd varchar(8000)  declare @HistLineFromCmd varchar(8000)  declare @HistJoinCmd varchar(8000)  declare @HistLineWhereCmd varchar(8000)   declare @HistLineOrderCmd varchar(8000)  declare @find int  declare @TempOrderBy varchar(10)   declare @LineWhereCmd varchar(8000)   declare @LineOrderCmd varchar(8000)  declare @CodeSelCmd_TrxDimID varchar(8000)  declare @JoinCmd varchar(8000)  declare @cmdExec1 varchar(8000)  declare @cmdExec2 varchar(8000)  declare @LineSelCmd varchar(8000)  declare @aaTrxDimID int  declare @aaDataType smallint  declare @DECPLACS smallint  declare @aaPhysName varchar(70)  declare @cmdRemoveField varchar(5000)  declare @cmdExecTemp varchar(4000)  declare @SQLCRTRIA varchar(260)  declare @FUNLCURR char(15)  declare @aaOrder int  declare @TempTable varchar(50)  declare @TempTableNote varchar(50)  declare @n_dIDRow integer  declare @n_CntOrder integer  declare @ColumnName char(99)  set nocount on   select top 1 @FUNLCURR = FUNLCURR from MC40000   set @cmdExecTemp = ''  set @cmdExecTemp = 'Declare cWhere cursor fast_forward for '   set @cmdExecTemp =  @cmdExecTemp  + ' Select SQLCRTRIA from ' + @iWhereTemp + ' Order By DEX_ROW_ID'  set @cmdExecTemp =  @cmdExecTemp  + ' Open cWhere'  exec (@cmdExecTemp)  fetch next from cWhere into @SQLCRTRIA  set @LineWhereCmd = ''  while @@fetch_status = 0  begin  set @LineWhereCmd = @LineWhereCmd + rtrim(@SQLCRTRIA)  fetch next from cWhere into @SQLCRTRIA  end  close cWhere  deallocate cWhere  if @LineWhereCmd <> '' set @LineWhereCmd = ' Where ' + @LineWhereCmd + @iWhereCondn    set @cmdExecTemp = ''  set @cmdExecTemp = 'Declare cOrder cursor fast_forward for '   set @cmdExecTemp =  @cmdExecTemp  + ' Select aaSQLCmd from ' + @iOrderByTemp + ' Order By DEX_ROW_ID'  set @cmdExecTemp =  @cmdExecTemp  + ' Open cOrder'  exec (@cmdExecTemp)  fetch next from cOrder into @SQLCRTRIA  set @LineOrderCmd = ''  while @@fetch_status = 0  begin  set @TempOrderBy = ''  select @SQLCRTRIA = ltrim(rtrim(@SQLCRTRIA))  if substring(UPPER(ltrim(rtrim(@SQLCRTRIA))),1,8) = UPPER('order by')  begin  select @TempOrderBy = ' order by '  select @SQLCRTRIA = right(ltrim(@SQLCRTRIA), len(ltrim(@SQLCRTRIA))- 8)  end  else  begin  select @TempOrderBy = ', '  end   select @find = CHARINDEX('.', @SQLCRTRIA)  select @SQLCRTRIA = @TempOrderBy + right(@SQLCRTRIA, len(@SQLCRTRIA)-@find)  set @LineOrderCmd = @LineOrderCmd + rtrim(@SQLCRTRIA)  fetch next from cOrder into @SQLCRTRIA  end  close cOrder  deallocate cOrder  if @LineOrderCmd =''   begin  select @LineOrderCmd = ' order by DEX_ROW_ID '  end   select @TempTable = '##TempDQW' +  REPLACE(system_user,'''','') + db_name()  select @cmdExec1 = 'if exists (select * from tempdb..sysobjects where name = ''' + @TempTable + ''' and xtype = ''U'') drop table ['  + @TempTable + ']'  exec (@cmdExec1)  select @TempTable = '[' + @TempTable + ']'  select @cmdExec1 = 'declare selcmd cursor fast_forward for '    select @cmdExec1 = @cmdExec1 + ' select aaPhysName, aaDataType, Sel.aaOrder, COLUMNAM from ' + ltrim(rtrim(@tempCol)) +   ' Col Inner Join ' + @iSelLineTemp + ' Sel on Col.aaColumn = Sel.aaColumn ' +  ' Order by Sel.aaOrder '   select @cmdExec1 = @cmdExec1 + ' Open selcmd'  exec (@cmdExec1)   set @LineSelCmd = ''  set @cmdRemoveField =''   fetch next from selcmd into @aaPhysName, @aaDataType, @aaOrder, @ColumnName  while @@fetch_status = 0  begin  if @aaPhysName = 'acct.ACCTTYPE'   begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case ' + rtrim(@aaPhysName) + ' when 1 then ''Posting Account'' when 2 then ''Unit Account'' when 3 then ''Posting Allocation Account'' when 4 then ''Unit Allocation Account'' end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end   else if @aaPhysName = 'hdr.Ledger_ID'   begin  set @LineSelCmd = @LineSelCmd + ', (select Ledger_Name from GL40001 where Ledger_ID = ' + rtrim(@aaPhysName) + ') as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end   else if @aaPhysName = 'acct.PSTNGTYP'   begin  set @LineSelCmd = @LineSelCmd + ', case acct.ACCTTYPE when 1 then ' + 'case ' + rtrim(@aaPhysName) + ' when 1 then ''Profit and Loss'' when 0 then ''Balance Sheet'' end else '''' end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.RTCLCMTD'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case ' + rtrim(@aaPhysName) + ' when 1 then ''Divide'' when 0 then ''Multiply'' else Null end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.CURNCYID'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then ' + rtrim(@aaPhysName) + ' Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'assign.ORDBTAMT'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = 0 then Null else ' + rtrim(@aaPhysName) + ' end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'assign.ORCRDAMT'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = 0 then Null else ' + rtrim(@aaPhysName) + ' end  Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.RATETPID'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then ' + rtrim(@aaPhysName) + ' Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.EXGTBLID'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then ' + rtrim(@aaPhysName) + ' Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.XCHGRATE'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = 0 then Null else ' + rtrim(@aaPhysName) + ' end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.EXCHDATE'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = ''1900-01-01 00:00:00.000'' then Null else ' + rtrim(@aaPhysName) + ' end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.TIME1'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = ''1900-01-01 00:00:00.000'' then Null else ' + rtrim(@aaPhysName) + ' end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.DENXRATE'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = 0 then Null else ' + rtrim(@aaPhysName) + ' end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaPhysName = 'dist.MCTRXSTT'  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when dist.CURNCYID <> ''' + @FUNLCURR + ''' and acct.ACCTTYPE <> 2 then case when ' + rtrim(@aaPhysName) + ' = 0 then Null else ' + rtrim(@aaPhysName) + ' end Else Null end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaDataType = 4 or @aaDataType = 5  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when ' + rtrim(@aaPhysName) + ' = ''1900-01-01 00:00:00.000'' then Null else ' + rtrim(@aaPhysName) + ' end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if @aaDataType = 2  begin  set @LineSelCmd = @LineSelCmd + ', ' + 'case when ' + rtrim(@aaPhysName) + ' = 0 then Null else ' + rtrim(@aaPhysName) + ' end as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  else if RTRIM(@ColumnName) = 'Asset ID'  begin  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName) + ' as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName) + ' as ASSETID '  set @cmdRemoveField = @cmdRemoveField + ', ASSETID'  end  else  begin  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName) + ' as [' + ltrim(rtrim(@aaOrder)) + '_]'  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  end  fetch next from selcmd into @aaPhysName, @aaDataType, @aaOrder ,@ColumnName  end   close selcmd  deallocate selcmd   select @cmdExec1 = 'declare selcmd cursor fast_forward for '   select @cmdExec1 = @cmdExec1 + ' select aaPhysName from ' + ltrim(rtrim(@tempCol)) +   ' Col Inner Join ' + @iOrderByTemp  + ' Ord on Col.aaColumn = Ord.aaColumn ' +  ' where Ord.aaColumn not in (Select aaColumn from ' + @iSelLineTemp + ')' +  ' Order by Ord.aaOrder '   select @cmdExec1 = @cmdExec1 + ' Open selcmd'  exec (@cmdExec1)  fetch next from selcmd into @aaPhysName  while @@fetch_status = 0  begin  set @LineSelCmd = @LineSelCmd + ', ' + rtrim(@aaPhysName)  set @cmdRemoveField = @cmdRemoveField + ', ' + substring(rtrim(@aaPhysName), charindex('.', rtrim(@aaPhysName)) + 1 ,len(rtrim(@aaPhysName)))  fetch next from selcmd into @aaPhysName  end   close selcmd  deallocate selcmd   set @cmdExecTemp = ''  set @cmdExecTemp = 'Declare cJoin cursor fast_forward for '   set @cmdExecTemp =  @cmdExecTemp  + ' Select rtrim(SQLCRTRIA) from ' + @iJoinTemp + ' Order By aaOrder'  set @cmdExecTemp =  @cmdExecTemp  + ' Open cJoin'  exec (@cmdExecTemp)  fetch next from cJoin into @SQLCRTRIA  set @JoinCmd = ''  while @@fetch_status = 0  begin  set @JoinCmd = @JoinCmd + rtrim(@SQLCRTRIA)  fetch next from cJoin into @SQLCRTRIA  end  close cJoin  deallocate cJoin   set @cmdRemoveField = @cmdRemoveField + ', aaTablefrom'  select @cmdExec1 = ''  select @LineSelCmd = ' Select DISTINCT assign.DEX_ROW_ID as DEX_ROW_ID, hdr.aaGLHdrID as hdrid, ''AAG30000'' as aaTablefrom' + @LineSelCmd   select @cmdExec1 = @cmdExec1 + ' from AAG30000 hdr join AAG30001 dist on dist.aaGLHdrID = hdr.aaGLHdrID '  select @cmdExec1 = @cmdExec1 + ' join AAG30002 assign on dist.aaGLHdrID = assign.aaGLHdrID   and dist.aaGLDistID = assign.aaGLDistID '   select @cmdExec1 = @cmdExec1 + ' join AAG00500 dates on dates.DATE1 = hdr.GLPOSTDT join GL00105 acctIdx on acctIdx.ACTINDX = dist.ACTINDX '  select @cmdExec1 = @cmdExec1 + ' join GL00100 acct on acct.ACTINDX = acctIdx.ACTINDX left join GL00102 acctCatg on acct.ACCATNUM = acctCatg.ACCATNUM '   select @cmdExec1 = @cmdExec1 + ' left join AAG30003 code on assign.aaGLHdrID = code.aaGLHdrID   and assign.aaGLDistID = code.aaGLDistID '   select @cmdExec1 = @cmdExec1 + '    and assign.aaGLAssignID = code.aaGLAssignID '   select @cmdExec1 = @cmdExec1 + ' left join AAG00400 trxDim on code.aaTrxDimID = trxDim.aaTrxDimID '   select @cmdExec1 = @cmdExec1 + ' left join AAG00401 trxDimCode on code.aaTrxDimID = trxDimCode.aaTrxDimID '   select @cmdExec1 = @cmdExec1 + '    and code.aaTrxCodeID = trxDimCode.aaTrxDimCodeID '   select @cmdExec1 = @cmdExec1 + ' left join AAG00402 trxDimCodeNum on code.aaTrxDimID = trxDimCodeNum.aaTrxDimID '   select @cmdExec1 = @cmdExec1 + '    and code.aaTrxCodeID = trxDimCodeNum.aaTrxDimCodeNumID '   select @cmdExec1 = @cmdExec1 + ' left join AAG00403 trxDimCodeBool on code.aaTrxDimID = trxDimCodeBool.aaTrxDimID '   select @cmdExec1 = @cmdExec1 + '    and code.aaTrxCodeID = trxDimCodeBool.aaTrxDimCodeBoolID '   select @cmdExec1 = @cmdExec1 +  ' left join AAG00404 trxDimCodeDate on code.aaTrxDimID = trxDimCodeDate.aaTrxDimID '   select @cmdExec1 = @cmdExec1 + '    and code.aaTrxCodeID = trxDimCodeDate.aaTrxDimCodeDateID '   select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v2 on dist.aaCustID = v2.aaMasterID and v2.aaLinkType = 2 '   select @cmdExec1 = @cmdExec1 + ' left join RM00101 cust on cust.CUSTNMBR = v2.aaMasterID and v2.aaLinkType = 2 '   select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v3 on dist.aaVendID = v3.aaMasterID and v3.aaLinkType = 6 '   select @cmdExec1 = @cmdExec1 + ' left join PM00200 vend on vend.VENDORID = v3.aaMasterID and v3.aaLinkType = 6 '   select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v4 on dist.aaItemID = v4.aaMasterID and v4.aaLinkType = 4 '   select @cmdExec1 = @cmdExec1 + ' left join IV00101 item on item.ITEMNMBR = v4.aaMasterID and v4.aaLinkType = 4 '   select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v5 on dist.aaSiteID = v5.aaMasterID and v5.aaLinkType = 5 '   select @cmdExec1 = @cmdExec1 + ' left join IV40700 site on site.LOCNCODE = v5.aaMasterID and v5.aaLinkType = 5 '    select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v6 on dist.EMPLOYID = v6.aaMasterID and v6.aaLinkType = 3 '   select @cmdExec1 = @cmdExec1 + ' left join UPR00100 emp on emp.EMPLOYID = v6.aaMasterID and v6.aaLinkType = 3 '    select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v7 on dist.aaAssetID = v7.aaMasterID and v7.aaLinkType = 7 '  select @cmdExec1 = @cmdExec1 + ' left join FA00100 asset on v7.aaMasterID = RTRIM(asset.ASSETID)+''-''+convert(varchar(15),asset.ASSETIDSUF) and v7.aaLinkType = 7 '  select @cmdExec1 = @cmdExec1 + ' left join AAG00800V v8 on dist.aaBookID = v8.aaMasterID and v8.aaLinkType = 8 '  select @cmdExec1 = @cmdExec1 + ' left join FA40200 book on book.BOOKID= v8.aaMasterID and v8.aaLinkType = 8 '   select @LineWhereCmd = ' ' + rtrim(ltrim(@LineWhereCmd))  select @LineOrderCmd = ' ' + rtrim(ltrim(@LineOrderCmd))   select @HistLineSelCmd  = replace(@LineSelCmd, 'AAG3000', 'AAG4000')  select @HistLineFromCmd  = replace(@cmdExec1, 'AAG3000', 'AAG4000')  select @HistJoinCmd   = replace(@JoinCmd, 'AAG3000', 'AAG4000')  select @HistLineWhereCmd = replace(@LineWhereCmd, 'AAG3000', 'AAG4000')  select @HistLineOrderCmd = replace(@LineOrderCmd, 'AAG3000', 'AAG4000')   exec ('Select * into ' + @TempTable + ' from (' +  @LineSelCmd + @cmdExec1 + @JoinCmd + @LineWhereCmd + ' Union All ' +  @HistLineSelCmd + @HistLineFromCmd + @HistJoinCmd + @HistLineWhereCmd + ') DQW '  + @LineOrderCmd)   set @cmdExec2 = 'declare CodeField cursor fast_forward for'  set @cmdExec2 = @cmdExec2 + ' Select CdSel.aaOrder, aaTrxDimID, aaDataType, DECPLACS FROM ' + ltrim(rtrim(@tempCol ))  set @cmdExec2 = @cmdExec2 + ' CdCol Inner Join ' + @iSelCodeTemp + ' CdSel On CdCol.aaColumn = CdSel.aaColumn '  set @cmdExec2 = @cmdExec2 + ' Order By CdSel.DEX_ROW_ID '  set @cmdExec2 = @cmdExec2 + ' open CodeField '  exec (@cmdExec2)   fetch next from CodeField into @aaOrder, @aaTrxDimID, @aaDataType, @DECPLACS  while @@fetch_status = 0   BEGIN  select @cmdExec1 = 'alter table ' + @TempTable + ' add [' + ltrim(rtrim(@aaOrder)) + '_]'   if @aaDataType = 1   BEGIN  select @cmdExec1 = @cmdExec1 + ' varchar(31)'  select @cmdExec2 = ' Update ' + @TempTable + ' set [' + ltrim(rtrim(@aaOrder)) + '_]' +  ' = ltrim(rtrim(trxDimCode.aaTrxDimCode)) from ' + @TempTable   END  else if @aaDataType = 2   begin  select @cmdExec1 = @cmdExec1 + ' numeric(19,5)'  select @cmdExec2 = ' Update ' + @TempTable + ' set [' + ltrim(rtrim(@aaOrder)) +   '_] = trxDimCodeNum.aaTrxDimCodeNum from ' + @TempTable   end  else if @aaDataType = 3   BEGIN  select @cmdExec1 = @cmdExec1 + ' varchar(5)'  select @cmdExec2 = ' Update ' + @TempTable + ' set [' + ltrim(rtrim(@aaOrder)) +   '_] = case trxDimCodeBool.aaTrxDimCodeBool when 1 then ''Yes'' else ''No'' end from ' + @TempTable   END  else if @aaDataType = 4   begin  select @cmdExec1 = @cmdExec1 + ' datetime'  select @cmdExec2 = ' Update ' + ltrim(rtrim(@TempTable)) + ' set [' + ltrim(rtrim(@aaOrder)) +   '_] = trxDimCodeDate.aaTrxDimCodeDate from ' + ltrim(rtrim(@TempTable))   end  select @cmdExec2 = @cmdExec2 + ' as tmp join AAG30002 assign on tmp.DEX_ROW_ID = assign.DEX_ROW_ID and tmp.aaTablefrom = ''AAG30000'' join AAG30003 code on assign.aaGLHdrID = code.aaGLHdrID  and assign.aaGLDistID = code.aaGLDistID   and assign.aaGLAssignID = code.aaGLAssignID   join AAG00400 trxDim on code.aaTrxDimID = trxDim.aaTrxDimID   left join AAG00401 trxDimCode on code.aaTrxDimID = trxDimCode.aaTrxDimID  and code.aaTrxCodeID = trxDimCode.aaTrxDimCodeID   left join AAG00402 trxDimCodeNum on code.aaTrxDimID = trxDimCodeNum.aaTrxDimID  and code.aaTrxCodeID = trxDimCodeNum.aaTrxDimCodeNumID   left join AAG00403 trxDimCodeBool on code.aaTrxDimID = trxDimCodeBool.aaTrxDimID  and code.aaTrxCodeID = trxDimCodeBool.aaTrxDimCodeBoolID   left join AAG00404 trxDimCodeDate on code.aaTrxDimID = trxDimCodeDate.aaTrxDimID  and code.aaTrxCodeID = trxDimCodeDate.aaTrxDimCodeDateID   where trxDim.aaTrxDimID = ' + ltrim(rtrim(@aaTrxDimID))  exec (@cmdExec1)  exec (@cmdExec2)   set @cmdExec2 = replace(@cmdExec2, 'AAG3000', 'AAG4000')  exec (@cmdExec2)   fetch next from CodeField into @aaOrder, @aaTrxDimID, @aaDataType, @DECPLACS  END  close CodeField  deallocate CodeField   select @cmdExec1 = ''  select @cmdExec1 = ' alter table '  + @TempTable + ' ADD RowInc INTEGER, dRowID INTEGER IDENTITY(1,1) '  exec (@cmdExec1)   select @cmdExec1 = '', @LineOrderCmd = ''  select @cmdExec1 = 'Declare cFetchOrderBy cursor static for   SELECT substring(aaSQLCmd, CHARINDEX(''.'', aaSQLCmd) + 1, len(aaSQLCmd) - CHARINDEX(''.'', aaSQLCmd)) from ' + @iOrderByTemp +  ' open cFetchOrderBy '  exec (@cmdExec1)   fetch next from cFetchOrderBy into @SQLCRTRIA   while @@fetch_status = 0  begin  if ltrim(rtrim(@LineOrderCmd)) = ''  begin  select @LineOrderCmd = ' Order By ' + @SQLCRTRIA  end  else  begin  select @LineOrderCmd = @LineOrderCmd + ', ' + @SQLCRTRIA  end  fetch next from cFetchOrderBy into @SQLCRTRIA   end  close cFetchOrderBy  deallocate cFetchOrderBy   if ltrim(rtrim(@LineOrderCmd )) = ''  begin  select @LineOrderCmd = 'Order by hdrid, DEX_ROW_ID'  end   select @cmdExec1 = '', @n_CntOrder = 1  select @cmdExec1 = 'Declare cUpdateOrderBy cursor static for   SELECT dRowID from ' + @TempTable + @LineOrderCmd +  ' open cUpdateOrderBy '   exec (@cmdExec1)  fetch next from cUpdateOrderBy into @n_dIDRow  while @@fetch_status = 0  begin  select @cmdExec2 = 'Update ' + @TempTable + ' set RowInc = ' + ltrim(@n_CntOrder) + ' where dRowID = ' + ltrim(@n_dIDRow)  exec(@cmdExec2)  select @n_CntOrder = @n_CntOrder + 1  fetch next from cUpdateOrderBy into @n_dIDRow  end  close cUpdateOrderBy  deallocate cUpdateOrderBy   set @cmdExec1 = 'Alter table ' + @TempTable + ' drop column DEX_ROW_ID, dRowID, hdrid'   exec (@cmdExec1 + @cmdRemoveField)   select @TempTableNote = ''  select @TempTableNote = '##TempDQWNote' + REPLACE(system_user,'''','') + db_name()    select @cmdExec1 = 'if exists (select * from tempdb..sysobjects where name = ''' + @TempTableNote + ''' and xtype = ''U'') drop table ['  + @TempTableNote + ']'  exec (@cmdExec1)  select @TempTableNote = '[' + @TempTableNote + ']'  select @cmdExec1 = ''  select @cmdExec1 = ' create table ' + @TempTableNote  + ' (aaRowNum Numeric not null, ' +  + ' aaColNum Numeric not Null, ' +  + ' aaComments varchar(255) Null)'  exec (@cmdExec1)   select @cmdExec1 = '', @cmdExec2 = ''  select @cmdExec1 = 'Declare ComLine cursor fast_forward for '  select @cmdExec1 =  @cmdExec1 + ' select aaPhysName, Sel.aaOrder from ' + ltrim(rtrim(@tempCol)) +   ' Col Inner Join ' + @iSelLineTemp + ' Sel on Col.aaColumn = Sel.aaColumn ' +  ' where Sel.aaColumn in (114, 115, 116, 117, 118) ' +  ' Order by Sel.aaOrder '   select @cmdExec1 = @cmdExec1 + ' Open ComLine'  exec (@cmdExec1)  fetch next from ComLine into @aaPhysName, @aaOrder  while @@fetch_status = 0  begin  select @cmdExec2 = 'Insert into ' + @TempTableNote + ' Select (tt.RowInc + 1), ' + ltrim(rtrim(@aaOrder ))    if @aaPhysName = 'cust.CUSTNMBR'  select @cmdExec2 = @cmdExec2 + ', cust.CUSTNAME from RM00101 cust Inner Join ' + @TempTable   + ' tt On tt.[' + ltrim(rtrim(@aaOrder )) + '_] = cust.CUSTNMBR'  else if @aaPhysName = 'vend.VENDORID'  select @cmdExec2 = @cmdExec2 + ', vend.VENDNAME from PM00200 vend Inner Join ' + @TempTable   + ' tt On tt.[' + ltrim(rtrim(@aaOrder )) + '_] = vend.VENDORID'  else if @aaPhysName = 'item.ITEMNMBR'  select @cmdExec2 = @cmdExec2 + ', item.ITEMDESC from IV00101 item Inner Join ' + @TempTable   + ' tt On tt.[' + ltrim(rtrim(@aaOrder )) + '_] = item.ITEMNMBR'  else if @aaPhysName = 'site.LOCNCODE'  select @cmdExec2 = @cmdExec2 + ', site.LOCNDSCR from IV40700 site Inner Join ' + @TempTable   + ' tt On tt.[' + ltrim(rtrim(@aaOrder )) + '_] = site.LOCNCODE'  else if @aaPhysName = 'emp.EMPLOYID'  select @cmdExec2 = @cmdExec2 + ', ltrim(rtrim(emp.LASTNAME))+ '', '' + ' + 'ltrim(rtrim(emp.FRSTNAME)) + ' +   'case when ltrim(rtrim(emp.MIDLNAME)) <> ''''   then substring(ltrim(rtrim(emp.MIDLNAME)),1,1) + ''.'' ' +  'else '''' end from UPR00100 emp Inner Join ' + @TempTable   + ' tt On tt.[' + ltrim(rtrim(@aaOrder )) + '_] = emp.EMPLOYID'  exec (@cmdExec2)  fetch next from ComLine into @aaPhysName, @aaOrder  end  close ComLine  deallocate ComLine   select @cmdExec1 = '', @cmdExec2 = ''  select @cmdExec1 = 'Declare ComCode cursor fast_forward for '  select @cmdExec1 =  @cmdExec1 + ' select aaPhysName, Sel.aaOrder, Col.aaTrxDimID from ' + ltrim(rtrim(@tempCol)) +   ' Col Inner Join ' + @iSelCodeTemp + ' Sel on Col.aaColumn = Sel.aaColumn ' +  ' where Col.aaDataType = 1 ' +   ' Order by Sel.aaOrder '   select @cmdExec1 = @cmdExec1 + ' Open ComCode'  exec (@cmdExec1)  fetch next from ComCode into @aaPhysName, @aaOrder, @aaTrxDimID  while @@fetch_status = 0  begin  select @cmdExec2 = 'Insert into ' + @TempTableNote + ' Select (tt.RowInc + 1), ' + ltrim(rtrim(@aaOrder ))   select @cmdExec2 = @cmdExec2 + ', dimen.aaTrxDimCodeDescr from AAG00401 dimen Inner Join ' + @TempTable   + ' tt On tt.[' + ltrim(rtrim(@aaOrder )) + '_] = dimen.aaTrxDimCode Where dimen.aaTrxDimID = ' + ltrim(rtrim(@aaTrxDimID))  exec (@cmdExec2)  fetch next from ComCode into @aaPhysName, @aaOrder, @aaTrxDimID  end  close ComCode  deallocate ComCode   return  set nocount off End    
GO
GRANT EXECUTE ON  [dbo].[aagDQWGetData] TO [DYNGRP]
GO

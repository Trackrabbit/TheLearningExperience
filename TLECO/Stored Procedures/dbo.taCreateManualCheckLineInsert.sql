SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateManualCheckLineInsert] @I_vMLCHKTYP smallint=0,   @I_vPYADNMBR int,    @I_vEMPLOYID char(15),    @I_vMLTRXNBR int=0,    @I_vMLTRXTYP smallint=1,    @I_vUPRTRXCD char(6),     @I_vTRXBEGDT datetime='',   @I_vTRXENDDT datetime='',   @I_vMLTRXAMT numeric(19,5),   @I_vMLTRXHRS numeric(19,5)=0,    @I_vRECEIPTS numeric(19,5)=0,   @I_vDEPRTMNT char(6)='',   @I_vJOBTITLE char(6)='',   @I_vSTATECD char(2)='',    @I_vLOCALTAX char(6)='',   @I_vWRKRCOMP char(6)='',   @I_vSUTASTAT char(2)='',   @I_vDAYSWRDK numeric(19,5)=0,    @I_vWKSWRKD numeric(19,5)=0,    @I_vSHFTCODE char(6)='',   @I_vTXBLWAGS numeric(19,5)=0,   @I_vRequesterTrx smallint = 0,   @I_vUSERID char(15) = '',   @I_vEFICAMT numeric(19,5)= 0,  @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare @SHFTPREM numeric(19,5),  @SHFTTYPE int,  @PAYRTAMT numeric(19,5),  @PYADVTKN numeric(19,5),  @SBJTSTTX tinyint,     @SBJTLTAX tinyint,     @sCompanyID int,  @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @iGetNextUPRManualTrxNumberErrState int,  @O_oErrorState int,  @iError int      select @SHFTPREM = 0,  @SHFTTYPE = 0,  @PAYRTAMT = 0,  @PYADVTKN = 0,  @SBJTSTTX = 0,      @SBJTLTAX = 0,      @O_iErrorState = 0,     @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @nNextNoteIndex = 0,  @iGetNextNoteIdxErrState = 0,  @iAddCodeErrState = 0,  @iGetNextUPRManualTrxNumberErrState = 0,  @iError = 0  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateManualCheckLineInsertPre  @I_vMLCHKTYP output,  @I_vPYADNMBR output,  @I_vEMPLOYID output,  @I_vMLTRXNBR output,  @I_vMLTRXTYP output,  @I_vUPRTRXCD output,  @I_vTRXBEGDT output,  @I_vTRXENDDT output,  @I_vMLTRXAMT output,  @I_vMLTRXHRS output,  @I_vRECEIPTS output,  @I_vDEPRTMNT output,  @I_vJOBTITLE output,  @I_vSTATECD output,  @I_vLOCALTAX output,  @I_vWRKRCOMP output,  @I_vSUTASTAT output,  @I_vDAYSWRDK output,  @I_vWKSWRKD output,  @I_vSHFTCODE output,  @I_vTXBLWAGS output,  @I_vRequesterTrx output,   @I_vUSERID output,  @I_vEFICAMT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 1187    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vMLCHKTYP is NULL or  @I_vPYADNMBR is NULL or  @I_vEMPLOYID is NULL or  @I_vMLTRXNBR is NULL or  @I_vMLTRXTYP is NULL or  @I_vUPRTRXCD is NULL or  @I_vTRXBEGDT is NULL or  @I_vTRXENDDT is NULL or  @I_vMLTRXAMT is NULL or  @I_vMLTRXHRS is NULL or  @I_vRECEIPTS is NULL or  @I_vDEPRTMNT is NULL or  @I_vJOBTITLE is NULL or  @I_vSTATECD is NULL or  @I_vLOCALTAX is NULL or  @I_vWRKRCOMP is NULL or  @I_vSUTASTAT is NULL or  @I_vDAYSWRDK is NULL or  @I_vWKSWRKD is NULL or  @I_vSHFTCODE is NULL or  @I_vTXBLWAGS is NULL or   @I_vRequesterTrx is NULL or  @I_vUSERID is NULL or   @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 1188    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vEMPLOYID = UPPER(@I_vEMPLOYID),  @I_vUPRTRXCD = UPPER(@I_vUPRTRXCD),  @I_vDEPRTMNT = UPPER(@I_vDEPRTMNT),  @I_vJOBTITLE = UPPER(@I_vJOBTITLE),  @I_vSTATECD = UPPER(@I_vSTATECD),  @I_vLOCALTAX = UPPER(@I_vLOCALTAX),  @I_vWRKRCOMP = UPPER(@I_vWRKRCOMP),  @I_vSUTASTAT = UPPER(@I_vSUTASTAT),  @I_vSHFTCODE = UPPER(@I_vSHFTCODE)  if ( @I_vPYADNMBR = 0 )  begin  select @O_iErrorState = 2386    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID = '' ) begin  select @O_iErrorState = 4108    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vUPRTRXCD = '' ) and (@I_vMLTRXTYP = 1 or @I_vMLTRXTYP = 2 or @I_vMLTRXTYP = 3 or @I_vMLTRXTYP = 7 or @I_vMLTRXTYP = 8 or @I_vMLTRXTYP = 9 or @I_vMLTRXTYP = 10 ) begin  select @O_iErrorState = 4109    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID <> '' ) begin  if (not exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID ))  begin  select @O_iErrorState = 4118    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vMLTRXNBR <> 0 )  begin  if (exists (select 1 from UPR10308 (nolock) where MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR and MLTRXNBR = @I_vMLTRXNBR))   begin  select @O_iErrorState = 2385     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vMLTRXNBR = 0 ) begin  exec @iStatus = taGetUPRNextManualTrxNumber  @I_vInc_Dec = 1,  @O_vMLTRXNBR = @I_vMLTRXNBR output,  @O_vPYADNMBR = @I_vPYADNMBR,  @O_iErrorState = @iGetNextUPRManualTrxNumberErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextUPRManualTrxNumberErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextUPRManualTrxNumberErrState  select @O_iErrorState = 2378   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ( @I_vTRXBEGDT = '' ) begin  select @I_vTRXBEGDT = convert(varchar(12),getdate()) end  if ( @I_vTRXENDDT = '' ) begin  select @I_vTRXENDDT = convert(varchar(12),getdate()) end  if ( @I_vDEPRTMNT = '' ) begin  select @I_vDEPRTMNT = DEPRTMNT from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID end  if ( @I_vJOBTITLE = '' ) begin  select @I_vJOBTITLE = JOBTITLE from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID end  if ( @I_vSTATECD = '' and @I_vMLTRXTYP = 1 ) begin  select @I_vSTATECD = STATECD from UPR00300 (nolock) where EMPLOYID = @I_vEMPLOYID     end  if ( @I_vLOCALTAX = '' and @I_vMLTRXTYP = 1 ) begin  select @I_vLOCALTAX = LOCALTAX from UPR00300 (nolock) where EMPLOYID = @I_vEMPLOYID     end   if ( @I_vSUTASTAT = '' and @I_vMLTRXTYP = 1 ) begin  select @I_vSUTASTAT = SUTASTAT from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD end  if ( @I_vWRKRCOMP = '' and @I_vMLTRXTYP = 1 ) begin  select @I_vWRKRCOMP = WRKRCOMP from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD end  if ( @I_vSHFTCODE = '' and @I_vMLTRXTYP = 1 ) begin  select @I_vSHFTCODE = isnull(SHFTCODE,'') from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD end  if ( @I_vDEPRTMNT = '' ) begin  select @O_iErrorState = 4112     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vJOBTITLE = '' ) begin  select @O_iErrorState = 4113     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vMLCHKTYP < 0 or @I_vMLCHKTYP > 2 ) begin  select @O_iErrorState = 4114     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vMLTRXTYP < 1 or @I_vMLTRXTYP > 15 ) begin  select @O_iErrorState = 4115     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vTRXENDDT < @I_vTRXBEGDT ) begin  select @O_iErrorState = 4116     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID <> '' and @I_vUPRTRXCD <> '' and @I_vMLTRXTYP = 1 ) begin  if (not exists (select 1 from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD))  begin  select @O_iErrorState = 4117    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  else  begin  select @SBJTSTTX = SBJTSTTX, @SBJTLTAX = SBJTLTAX from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD  end end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 2 )  begin  if (not exists (select 1 from UPR00500 (nolock) where EMPLOYID = @I_vEMPLOYID and DEDUCTON = @I_vUPRTRXCD))  begin  select @O_iErrorState = 4110    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 3 )  begin  if (not exists (select 1 from UPR00600 (nolock) where EMPLOYID = @I_vEMPLOYID and BENEFIT = @I_vUPRTRXCD))  begin  select @O_iErrorState = 2374    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vMLTRXTYP = 1)  begin  if (exists (select 1 from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD and INACTIVE = 1))  begin  select @O_iErrorState = 9508    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end   if (@I_vMLTRXTYP = 2)  begin  if (exists (select 1 from UPR00500 (nolock) where EMPLOYID = @I_vEMPLOYID and DEDUCTON = @I_vUPRTRXCD and INACTIVE = 1))  begin  select @O_iErrorState = 9509    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vMLTRXTYP = 3)  begin  if (exists (select 1 from UPR00600 (nolock) where EMPLOYID = @I_vEMPLOYID and BENEFIT = @I_vUPRTRXCD and INACTIVE = 1))  begin  select @O_iErrorState = 9510    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 4 ) begin  select @I_vUPRTRXCD = 'FED' end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 5 ) begin  select @I_vUPRTRXCD = 'FICASS' end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 6 ) begin  select @I_vUPRTRXCD = 'FICAM' end  if ( @I_vEMPLOYID <> '') and (@I_vMLTRXTYP = 1) and (@I_vSTATECD <> '') begin  if (not exists (select 1 from UPR00700 (nolock) where EMPLOYID = @I_vEMPLOYID and STATECD = @I_vSTATECD))  begin  select @O_iErrorState = 2375     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vUPRTRXCD = '') and (@I_vMLTRXTYP = 7) begin  if (not exists (select 1 from UPR00700 (nolock) where EMPLOYID = @I_vEMPLOYID and STATECD = @I_vUPRTRXCD))  begin  select @O_iErrorState = 3603     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '') and (@I_vMLTRXTYP = 1) and (@I_vLOCALTAX <> '') begin  if (not exists (select 1 from UPR00800 (nolock) where EMPLOYID = @I_vEMPLOYID and LOCALTAX = @I_vLOCALTAX))  begin  select @O_iErrorState = 2376     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vUPRTRXCD <> '' and @I_vMLTRXTYP = 8 ) begin  if (not exists (select 1 from UPR00800 (nolock) where EMPLOYID = @I_vEMPLOYID and LOCALTAX = @I_vUPRTRXCD))  begin  select @O_iErrorState = 3604     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 9 ) begin  if (not exists (select 1 from UPR00400 (nolock) where PAYTYPE = 2 or PAYTYPE = 4 and EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD ))  begin  select @O_iErrorState = 2390    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 10 ) begin  if (not exists (select 1 from UPR00400 (nolock) where PAYTYPE = 2 or PAYTYPE = 4 and EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD ))   begin  select @O_iErrorState = 2391    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 11 ) begin  select @I_vUPRTRXCD = 'FICASST' end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 12 ) begin  select @I_vUPRTRXCD = 'FICAMT' end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 13 ) begin  select @I_vUPRTRXCD = 'FEDT' end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 14 ) begin  select @I_vUPRTRXCD = 'UFICAS' end  if ( @I_vEMPLOYID <> '' and @I_vMLTRXTYP = 15 ) begin  select @I_vUPRTRXCD = 'UFICAM' end  if (@I_vEFICAMT <> 0) and ((@I_vMLCHKTYP in (0,2) and @I_vMLTRXTYP not in(5,6,11,12)) or (@I_vMLCHKTYP = 1 and @I_vMLTRXTYP not in(1,2,3))) begin  select @O_iErrorState = 11600     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if ( @I_vDEPRTMNT <> '' ) begin  if (not exists (select 1 from UPR40300 (nolock) where DEPRTMNT = @I_vDEPRTMNT ))  begin  select @O_iErrorState = 4121     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vJOBTITLE <> '' ) begin  if (not exists (select 1 from UPR40301 (nolock) where JOBTITLE = @I_vJOBTITLE ))  begin  select @O_iErrorState = 4122     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vLOCALTAX <> '' ) begin  if (not exists (select 1 from UPR41400 (nolock) where LOCALTAX = @I_vLOCALTAX ))  begin  select @O_iErrorState = 4125     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vWRKRCOMP <> '' ) begin  if (not exists (select 1 from UPR40700 (nolock) where WRKRCOMP = @I_vWRKRCOMP ))  begin  select @O_iErrorState = 4126     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vSTATECD <> '' ) begin  if (not exists (select 1 from UPR41100 (nolock) where STATECD = @I_vSTATECD ))  begin  select @O_iErrorState = 2377     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vSUTASTAT <> '' ) begin  if (not exists (select 1 from UPR41100 (nolock) where STATECD = @I_vSUTASTAT ))  begin  select @O_iErrorState = 4127     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vSHFTCODE <> '' ) begin  if (not exists (select 1 from UPR41500 (nolock) where SHFTCODE = @I_vSHFTCODE ))  begin  select @O_iErrorState = 4128     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  if (exists (select 1 from UPR41500 (nolock) where SHFTCODE = @I_vSHFTCODE and INACTIVE = 1))  begin  select @O_iErrorState = 9526     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if ( @I_vSHFTCODE <> '' and ( @I_vMLTRXTYP <> 1 and @I_vMLTRXTYP <> 9 and @I_vMLTRXTYP <> 10) )  begin  select @O_iErrorState = 2392     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vMLTRXTYP <> 9 )  begin  if (exists (select 1 from UPR10308 (nolock) where PYADNMBR = @I_vPYADNMBR and MLTRXTYP = 9 ))  begin  select @O_iErrorState = 2393    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vMLTRXTYP = 9 )  begin  if (exists (select 1 from UPR10308 (nolock) where PYADNMBR = @I_vPYADNMBR and MLTRXTYP <> 9 ))  begin  select @O_iErrorState = 2394    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vMLTRXTYP = 10 ) begin  select @PYADVTKN = PYADVTKN from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD end  if ( @I_vMLTRXTYP = 10 and @I_vMLTRXAMT > @PYADVTKN ) begin  select @O_iErrorState = 2987     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 4119     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSHFTCODE <> '' ) begin  select @SHFTTYPE = SHFTTYPE from UPR41500 (nolock) where SHFTCODE = @I_vSHFTCODE end  if ( @I_vMLTRXTYP = 1 or @I_vMLTRXTYP = 9 or @I_vMLTRXTYP = 10 )  begin  select @PAYRTAMT = PAYRTAMT from UPR00400 (nolock) where EMPLOYID = @I_vEMPLOYID and PAYRCORD = @I_vUPRTRXCD end  if ( @I_vSHFTCODE <> '' and @SHFTTYPE = 0 ) and ( @I_vMLTRXTYP = 1 or @I_vMLTRXTYP = 9 or @I_vMLTRXTYP = 10 ) begin  select @SHFTPREM = SHFTAMT from UPR41500 (nolock) where SHFTCODE = @I_vSHFTCODE end  if ( @I_vSHFTCODE <> '' and @SHFTTYPE = 1 ) and ( @I_vMLTRXTYP = 1 or @I_vMLTRXTYP = 9 or @I_vMLTRXTYP = 10 ) begin  select @SHFTPREM = @PAYRTAMT * SHFTPCT/100 from UPR41500 (nolock) where SHFTCODE = @I_vSHFTCODE end  if (@I_vTXBLWAGS not between -999999999.99999 and 999999999.99999) begin  select @O_iErrorState = 8092     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vTXBLWAGS > 0) and (@I_vMLTRXTYP in (1,2,3,9,10,14,15)) begin  select @O_iErrorState = 8093     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4120   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists( select 1 from UPR10309 (nolock) where PYRLCTYP = 2 and PYRLCNBR = @I_vMLTRXNBR ) begin  insert UPR10309(  PYRLCTYP,  PYRLCNBR,  USERID  )  select   2,      @I_vMLTRXNBR,    @I_vUSERID    if @@error <> 0  begin  select @O_iErrorState = 5369    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end else begin  select @O_iErrorState = 5370    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  begin  if not exists( select 1 from UPR10308 (nolock) where MLCHKTYP = @I_vMLCHKTYP and PYADNMBR = @I_vPYADNMBR and MLTRXNBR = @I_vMLTRXNBR )  begin  insert UPR10308(  MLCHKTYP,  PYADNMBR,  EMPLOYID,  MLTRXNBR,  MLTRXTYP,  UPRTRXCD,  TRXBEGDT,  TRXENDDT,  HRLYPYRT,  MLTRXAMT,  MLTRXHRS,  TXBLWAGS,    RECEIPTS,  DEPRTMNT,  JOBTITLE,  STATECD,  LOCALTAX,  WRKRCOMP,  SUTASTAT,  DAYSWRDK,  WKSWRKD,  LASTUSER,  LSTDTEDT,  NOTEINDX,  SHFTCODE,  SHFTPREM,  EFICAMT  )  select  @I_vMLCHKTYP,    @I_vPYADNMBR,    @I_vEMPLOYID,    @I_vMLTRXNBR,    @I_vMLTRXTYP,    case      WHEN @I_vMLTRXTYP = 11    THEN 'FICASST'  ELSE @I_vUPRTRXCD  end,  @I_vTRXBEGDT,    @I_vTRXENDDT,    0,     @I_vMLTRXAMT,    case     WHEN @I_vMLTRXTYP = 1  THEN @I_vMLTRXHRS * 100  ELSE 0  end,  @I_vTXBLWAGS,    @I_vRECEIPTS,    case     WHEN @I_vMLTRXTYP = 1  THEN @I_vDEPRTMNT  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1  THEN @I_vJOBTITLE  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1 and @SBJTSTTX = 1  THEN @I_vSTATECD  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1 and @SBJTLTAX = 1  THEN @I_vLOCALTAX  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1  THEN @I_vWRKRCOMP  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1  THEN @I_vSUTASTAT  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1  THEN @I_vDAYSWRDK * 100  ELSE 0  end,  case     WHEN @I_vMLTRXTYP = 1  THEN @I_vWKSWRKD * 100  ELSE 0  end,  @I_vUSERID,    convert(varchar(12),getdate()),   @nNextNoteIndex,   case     WHEN @I_vMLTRXTYP = 1  THEN @I_vSHFTCODE  ELSE ''  end,  case     WHEN @I_vMLTRXTYP = 1 or @I_vMLTRXTYP = 9 or @I_vMLTRXTYP = 10  THEN @SHFTPREM  ELSE 0  end,  @I_vEFICAMT  if @@error <> 0  begin  select @O_iErrorState = 4123    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateManualCheckLineInsertPost  @I_vMLCHKTYP,  @I_vPYADNMBR,  @I_vEMPLOYID ,  @I_vMLTRXNBR,  @I_vMLTRXTYP,  @I_vUPRTRXCD,  @I_vTRXBEGDT,  @I_vTRXENDDT,  @I_vMLTRXAMT,  @I_vMLTRXHRS,  @I_vRECEIPTS,  @I_vDEPRTMNT,  @I_vJOBTITLE,  @I_vSTATECD,  @I_vLOCALTAX,  @I_vWRKRCOMP,  @I_vSUTASTAT,  @I_vDAYSWRDK,  @I_vWKSWRKD,  @I_vSHFTCODE,  @I_vTXBLWAGS,   @I_vRequesterTrx ,  @I_vUSERID,  @I_vEFICAMT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4124    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateManualCheckLineInsert] TO [DYNGRP]
GO

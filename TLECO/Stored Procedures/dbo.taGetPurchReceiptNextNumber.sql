SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taGetPurchReceiptNextNumber]  @I_vInc_Dec tinyint = NULL, @O_vPOPRCTNM varchar(17) = NULL output, @O_iErrorState int = NULL output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare @Loop int,  @iError int,  @iStatus int,  @POPRCTNM varchar(21),  @DocExists tinyint   select @O_vPOPRCTNM  = '',  @O_iErrorState  = 0,  @iStatus = 0,  @Loop = 0,  @DocExists = 1  if  @I_vInc_Dec is NULL begin  select @O_iErrorState = 7905     return (@O_iErrorState) end  select @O_vPOPRCTNM = POPRCTNM from POP40100 WITH (TABLOCKX HOLDLOCK) where INDEX1 = 1 if (@@rowcount <> 1) begin  select @O_iErrorState = 9212    return (@O_iErrorState) end  select @POPRCTNM = @O_vPOPRCTNM   while (@Loop < 1000) begin  select @Loop = @Loop + 1  select @DocExists = 0   exec @iStatus = ivNumber_Inc_Dec  @I_vInc_Dec,  @POPRCTNM output,  @O_iErrorState output  select @iError = @@error  if (@iError <> 0 or @iStatus <> 0 or @O_iErrorState <> 0)  begin  select @O_iErrorState = 7904    select @DocExists = 0  break  end   if (exists (select 1 from POP30300 (nolock) where POPRCTNM = @POPRCTNM  union select 1 from POP10300 (nolock) where POPRCTNM = @POPRCTNM))  begin  select @DocExists = 1  end  else  begin  if (exists (select 1 from POP30300 (nolock) where POPRCTNM = @O_vPOPRCTNM  union select 1 from POP10300 (nolock) where POPRCTNM = @O_vPOPRCTNM))  begin  select @O_vPOPRCTNM = @POPRCTNM  end  else  begin  select @DocExists = 0  break  end  end end  if (@DocExists = 1) begin  select @O_iErrorState = 7903   end  if (@O_iErrorState = 0) begin  update POP40100 set POPRCTNM= @POPRCTNM where INDEX1 = 1  if (@@error <> 0)  begin  select @O_iErrorState = 9215    end end else begin  select @O_vPOPRCTNM = '' end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taGetPurchReceiptNextNumber] TO [DYNGRP]
GO

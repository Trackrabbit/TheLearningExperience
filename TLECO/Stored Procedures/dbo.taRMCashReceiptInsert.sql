SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMCashReceiptInsert] @I_vCUSTNMBR char(15),     @I_vDOCNUMBR char(20),     @I_vDOCDATE  datetime,    @I_vORTRXAMT numeric(19,5),   @I_vGLPOSTDT datetime,    @I_vBACHNUMB char (15),    @I_vCSHRCTYP smallint,    @I_vCHEKBKID char (15) = '',   @I_vCHEKNMBR char (20) = '',   @I_vCRCARDID char (15) = '',   @I_vTRXDSCRN char(30) = '',   @I_vLSTUSRED char(15) = '',   @I_vBatchCHEKBKID char(15) = '',  @I_vCURNCYID char(15) = '',   @I_vXCHGRATE numeric(19,7)=0,   @I_vRATETPID char(15) = '',   @I_vEXPNDATE datetime = '',   @I_vEXCHDATE datetime = '',   @I_vEXGTBDSC char(30) = '',   @I_vEXTBLSRC char(50) = '',   @I_vRATEEXPR smallint = -1,    @I_vDYSTINCR smallint = -1,   @I_vRATEVARC numeric(19,7) = 0,   @I_vTRXDTDEF smallint = -1,   @I_vRTCLCMTD smallint = -1,   @I_vPRVDSLMT smallint = 0,   @I_vDATELMTS smallint = 0,   @I_vTIME1 datetime = '',   @I_vCREATEDIST smallint = 1,   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @INTERID char(5),  @CMPANYID smallint,  @RMDTYPAL smallint,    @iStatus int,     @iAddBatchErrState int,    @CURRNIDX smallint,    @iUpdDistErrState int,    @iError int,     @O_oErrorState int,  @iCustomState int,  @iCustomErrString varchar(255),  @iCreateBatchErrString varchar(255),   @DBName char(50),    @FUNLCURR char(15),    @EXGTBLID char(15),    @ISMCTRX int,     @ORCTRXAM numeric(19,5),   @ORCCDAMT numeric(19,5),   @ORCASAMT numeric(19,5),   @ORCHKAMT numeric(19,5),   @DECPLCUR smallint,    @MCINSTALLED smallint,    @O_iInitErrorState int,    @oInitErrString varchar(255)   select  @INTERID = '',  @RMDTYPAL = 9,     @FUNLCURR = '',     @EXGTBLID = '',     @ISMCTRX = 0,     @ORCTRXAM = 0,     @ORCCDAMT = 0,     @ORCASAMT = 0,     @ORCHKAMT = 0,     @MCINSTALLED = 1,    @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  select @DBName = DB_Name()  exec @iStatus = taRMCashReceiptInsertPre  @I_vCUSTNMBR output,  @I_vDOCNUMBR output,  @I_vDOCDATE output,  @I_vORTRXAMT output,  @I_vGLPOSTDT output,  @I_vBACHNUMB output,  @I_vCSHRCTYP output,  @I_vCHEKBKID output,  @I_vCHEKNMBR output,  @I_vCRCARDID output,  @I_vTRXDSCRN output,  @I_vLSTUSRED output,  @I_vBatchCHEKBKID output,  @I_vCURNCYID output,  @I_vXCHGRATE output,  @I_vRATETPID output,  @I_vEXPNDATE output,  @I_vEXCHDATE output,  @I_vEXGTBDSC output,  @I_vEXTBLSRC output,  @I_vRATEEXPR output,  @I_vDYSTINCR output,  @I_vRATEVARC output,  @I_vTRXDTDEF output,  @I_vRTCLCMTD output,  @I_vPRVDSLMT output,  @I_vDATELMTS output,  @I_vTIME1 output,  @I_vCREATEDIST output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 159    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  while 1=1 begin  if ( @I_vCUSTNMBR is null or  @I_vDOCNUMBR is null or  @I_vDOCDATE is null or  @I_vORTRXAMT is null or  @I_vGLPOSTDT is null or  @I_vBACHNUMB is null or  @I_vCSHRCTYP is null or  @I_vCHEKBKID is null or  @I_vCHEKNMBR is null or  @I_vCRCARDID is null or  @I_vTRXDSCRN is null or  @I_vCURNCYID is null or  @I_vXCHGRATE is null or  @I_vRATETPID is null or  @I_vEXPNDATE is null or  @I_vEXCHDATE is null or  @I_vEXGTBDSC is null or  @I_vEXTBLSRC is null or  @I_vRATEEXPR is null or  @I_vDYSTINCR is null or  @I_vRATEVARC is null or  @I_vTRXDTDEF is null or  @I_vRTCLCMTD is null or  @I_vPRVDSLMT is null or  @I_vDATELMTS is null or  @I_vTIME1 is null or  @I_vLSTUSRED is null or  @I_vCREATEDIST is null or   @I_vRequesterTrx is null)  begin  select @O_iErrorState = 1    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR),  @I_vBACHNUMB = UPPER(@I_vBACHNUMB),  @I_vCHEKBKID = UPPER(@I_vCHEKBKID),  @I_vBatchCHEKBKID = UPPER(@I_vBatchCHEKBKID),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vRATETPID = UPPER(@I_vRATETPID)   if ( (not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> '')))  begin  select @MCINSTALLED = 0  end   select @INTERID = INTERID, @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()   if (@I_vRATETPID <> '')  begin  if (not exists(select 1 from MC40100 (nolock) where RATETPID = @I_vRATETPID))  begin  select @O_iErrorState = 225     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if(@I_vCUSTNMBR = '')  begin  select @O_iErrorState = 2    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists (select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR))  begin  select @O_iErrorState = 24    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vDOCNUMBR = '')  begin  select @O_iErrorState = 3    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (LEN(@I_vDOCNUMBR) > 17)  begin  select @O_iErrorState = 12004    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if exists(select 1 from RM00401 (nolock) where RMDTYPAL = @RMDTYPAL and DOCNUMBR = @I_vDOCNUMBR) or  exists(select 1 from RM10201 (nolock) where RMDTYPAL = @RMDTYPAL and DOCNUMBR = @I_vDOCNUMBR) or  exists(select 1 from RM20101 (nolock) where RMDTYPAL = @RMDTYPAL and DOCNUMBR = @I_vDOCNUMBR) or  exists(select 1 from RM30101 (nolock) where RMDTYPAL = @RMDTYPAL and DOCNUMBR = @I_vDOCNUMBR)  begin  select @O_iErrorState = 7    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vXCHGRATE < 0)  begin   select @O_iErrorState = 5629     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vRATEVARC < 0)  begin   select @O_iErrorState = 5630     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vBACHNUMB = '')  begin  select @O_iErrorState = 5     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (exists(select 1 from SY00500 (nolock) where BACHNUMB = @I_vBACHNUMB and MKDTOPST <> 0 and BCHSOURC = 'RM_Cash'))  begin  select @O_iErrorState = 25     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ( @I_vBACHNUMB <> '' )   begin  if exists(select 1 from SY00500 a (nolock) where a.BACHNUMB = @I_vBACHNUMB and APPROVL = 1)  begin  select @O_iErrorState = 5627     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vBatchCHEKBKID <> '')  begin  if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID))  begin  select @O_iErrorState = 362     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vBatchCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9513     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vCSHRCTYP = 0) or (@I_vCSHRCTYP = 1))   begin  if (@I_vCHEKBKID = '')  begin  select @I_vCHEKBKID = isnull(CHEKBKID,'') from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if (@I_vCHEKBKID = '')  begin  select @I_vCHEKBKID = isnull(CHEKBKID,'') from RM40101 (nolock)  end  end   if (@I_vCHEKBKID = '')  begin  select @O_iErrorState = 6     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID))  begin  select @O_iErrorState = 12     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9512     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vCSHRCTYP not in (0,1,2))  begin  select @O_iErrorState = 14    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vCHEKNMBR <> '') and (@I_vCSHRCTYP = 1))  begin  select @O_iErrorState = 22     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vCRCARDID = '') and (@I_vCSHRCTYP = 2))  begin  select @O_iErrorState = 16     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select 1 from SY03100 (nolock) where CARDNAME = @I_vCRCARDID and CBRCVBLE = 1) and (@I_vCSHRCTYP = 2))  begin  select @O_iErrorState = 17     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vCRCARDID <> '') and (@I_vCSHRCTYP <> 2))  begin  select @O_iErrorState = 23     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ( @I_vCSHRCTYP = 2 ) and ( @I_vCHEKNMBR = '' )  begin  select @I_vCHEKNMBR = CRCRDNUM from RM00101 where CUSTNMBR = @I_vCUSTNMBR and CRCARDID = @I_vCRCARDID  end   if ( @I_vCREATEDIST < 0 or @I_vCREATEDIST > 1 )  begin  select @O_iErrorState = 5654     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 3722     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   If ((@I_vCSHRCTYP = 0) and (@I_vCHEKNMBR <> '') and (exists(select 1 from RM00401 where CUSTNMBR = @I_vCUSTNMBR and CHEKNMBR = @I_vCHEKNMBR)))   begin  select @O_iErrorState = 11481     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@O_iErrorState <> 0)  begin  break  end   select @FUNLCURR = FUNLCURR from MC40000 (nolock)   select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(CURNCYID,'') from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  if (@I_vCURNCYID <> '')  begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end  else  begin  select @I_vCURNCYID = isnull(FUNLCURR,''), @CURRNIDX = isnull(FUNCRIDX,0) from MC40000 (nolock)  end  end  else  begin  select @CURRNIDX = isnull(CURRNIDX,0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end   if ((@CURRNIDX = 0) or (@I_vCURNCYID = ''))  begin  select @O_iErrorState = 232     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select @ORCTRXAM = @I_vORTRXAMT,  @ORCCDAMT = case when @I_vCSHRCTYP = 2 then @I_vORTRXAMT else 0 end,  @ORCASAMT = case when @I_vCSHRCTYP = 1 then @I_vORTRXAMT else 0 end,  @ORCHKAMT = case when @I_vCSHRCTYP = 0 then @I_vORTRXAMT else 0 end   if (@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR)  begin  select @ISMCTRX = 1   exec @iStatus = taMCCurrencyValidate  @I_vMASTERID = @I_vCUSTNMBR,  @I_vDOCDATE = @I_vDOCDATE,  @I_vCURNCYID = @I_vCURNCYID,  @I_vEXGTBDSC = @I_vEXGTBDSC,  @I_vEXTBLSRC = @I_vEXTBLSRC,  @I_vRATEEXPR = @I_vRATEEXPR output,  @I_vDYSTINCR = @I_vDYSTINCR output,  @I_vRATEVARC = @I_vRATEVARC,  @I_vTRXDTDEF = @I_vTRXDTDEF,  @I_vPRVDSLMT = @I_vPRVDSLMT,  @I_vDATELMTS = @I_vDATELMTS,  @I_vMODULE = 1,  @I_vEXCHDATE = @I_vEXCHDATE output,  @I_vTIME1 = @I_vTIME1 output,  @I_vXCHGRATE = @I_vXCHGRATE output,  @I_vEXPNDATE = @I_vEXPNDATE output,  @I_vRATETPID = @I_vRATETPID output,  @I_vRTCLCMTD = @I_vRTCLCMTD output,  @I_vEXGTBLID = @EXGTBLID output,  @oErrString = @oErrString output,  @O_iErrorState = @iUpdDistErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@iUpdDistErrState <> 0)  begin  select @O_iErrorState = 774   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@@error <> 0)  begin  select @O_iErrorState = 544   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   else  begin  select @ISMCTRX = 0, @I_vRATEEXPR=0, @I_vDYSTINCR=0, @I_vXCHGRATE = 1  end    if (@ISMCTRX = 1)  begin  insert MC020102  (  CURNCYID,  CURRNIDX,  CUSTNMBR,  DCSTATUS,  DENXRATE,  DOCDATE,  DOCNUMBR,  EXCHDATE,  EXGTBLID,  MCTRXSTT,  ORBKTFRT,  ORBKTMSC,  ORBKTSLS,  ORCASAMT,  ORCCDAMT,  ORCHKAMT,  ORCOMAMT,  ORCSTAMT,  ORCTRXAM,  ORDATKN,  ORDAVAMT,  ORDDLRAT,  ORDISRTD,  ORDISTKN,  ORFRTAMT,  ORMISCAMT,  ORORGTRX,  ORSLSAMT,  ORTAXAMT,  ORTDISAM,  ORWROFAM,  RATETPID,  RMDTYPAL,  RTCLCMTD,  TIME1,  UNGANLOS,  XCHGRATE,  TRXSORCE,  ORAPPAMT,  OrigBackoutTradeDisc  )  select  @I_vCURNCYID,    @CURRNIDX,    @I_vCUSTNMBR,    1,     0,     @I_vDOCDATE,    @I_vDOCNUMBR,    @I_vEXCHDATE,    @EXGTBLID,    0,     0,     0,     0,     0,     0,     0,     0,     0,     @ORCTRXAM,    0,     0,     0,     0,     0,     0,     0,     @ORCTRXAM,    0,     0,     0,     0,     @I_vRATETPID,    9,     @I_vRTCLCMTD,    @I_vTIME1,    0,     @I_vXCHGRATE,    '',     0,     0     if (@@error <> 0)  begin  select @O_iErrorState = 545    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@I_vXCHGRATE = 0)  begin  select @O_iErrorState = 546     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@I_vRTCLCMTD = 0)     begin  select @I_vORTRXAMT = round(@I_vORTRXAMT * @I_vXCHGRATE, @DECPLCUR)   update RM10101 set  DEBITAMT = round(DEBITAMT * @I_vXCHGRATE, @DECPLCUR), ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT * @I_vXCHGRATE, @DECPLCUR), ORCRDAMT = CRDTAMNT,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @RMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 8115    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@I_vRTCLCMTD = 1)   begin  select @I_vORTRXAMT = round(@I_vORTRXAMT / @I_vXCHGRATE, @DECPLCUR)   update RM10101 set  DEBITAMT = round(DEBITAMT / @I_vXCHGRATE, @DECPLCUR), ORDBTAMT = DEBITAMT,  CRDTAMNT = round(CRDTAMNT / @I_vXCHGRATE, @DECPLCUR), ORCRDAMT = CRDTAMNT,  CURNCYID = @I_vCURNCYID,  CURRNIDX = @CURRNIDX  where RMDTYPAL = @RMDTYPAL and DOCNUMBR = @I_vDOCNUMBR  if (@@error <> 0)  begin  select @O_iErrorState = 8116    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  end   insert RM00401  (  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  BCHSOURC,  TRXSORCE,  CUSTNMBR,  CHEKNMBR,  DOCDATE,  NEGQTYSOPINV  )  select  @I_vDOCNUMBR,    9,       1,       'RM_Cash',     '',       @I_vCUSTNMBR,    case        WHEN @I_vCSHRCTYP = 2   THEN ''  ELSE @I_vCHEKNMBR   end,  @I_vDOCDATE,    0       if (@@error <> 0)  begin  select @O_iErrorState = 18    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update RM00103 set UNPSTDCA = UNPSTDCA + @I_vORTRXAMT   where CUSTNMBR = @I_vCUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 19    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@I_vCSHRCTYP = 0)   begin  exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL = 9,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX,  @I_vCURNCYID = @I_vCURNCYID,  @I_vDOCAMNT = @I_vORTRXAMT,  @I_vORCTRXAM = @ORCTRXAM,     @I_vCashCHEKBKID = @I_vCHEKBKID,  @I_vCheckCHEKBKID = @I_vCHEKBKID,  @I_vCASHAMT = 0,  @I_vORCASAMT = 0,      @I_vCHECKAMT = @I_vORTRXAMT,  @I_vORCHKAMT = @ORCHKAMT,     @I_vCRCRDAMT = 0,  @I_vORCCDAMT = 0,      @I_vCRCRDNAM = '',  @I_vCMPANYID = @CMPANYID,  @I_vINTERID  = @INTERID,  @I_vRTCLCMTD = @I_vRTCLCMTD,  @I_vXCHGRATE = @I_vXCHGRATE,  @I_vFNDECPLCUR = @DECPLCUR,  @I_vCREATEDIST = @I_vCREATEDIST,  @O_iErrorState = @iUpdDistErrState output,  @oErrString = @oErrString output  end  else  begin  if (@I_vCSHRCTYP = 1)   begin  exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL = 9,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX,  @I_vCURNCYID = @I_vCURNCYID,  @I_vDOCAMNT = @I_vORTRXAMT,  @I_vORCTRXAM = @ORCTRXAM,     @I_vCashCHEKBKID = @I_vCHEKBKID,  @I_vCheckCHEKBKID = @I_vCHEKBKID,  @I_vCASHAMT = @I_vORTRXAMT,  @I_vORCASAMT = @ORCASAMT,     @I_vCHECKAMT = 0,  @I_vORCHKAMT = 0,      @I_vCRCRDAMT = 0,  @I_vORCCDAMT = 0,      @I_vCRCRDNAM = '',  @I_vCMPANYID = @CMPANYID,  @I_vINTERID  = @INTERID,  @I_vRTCLCMTD = @I_vRTCLCMTD,  @I_vXCHGRATE = @I_vXCHGRATE,  @I_vFNDECPLCUR = @DECPLCUR,  @I_vCREATEDIST = @I_vCREATEDIST,  @O_iErrorState = @iUpdDistErrState output,  @oErrString = @oErrString output  end  else  begin  exec @iStatus = taRMDistributionCreate  @I_vRMDTYPAL = 9,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vCURRNIDX = @CURRNIDX,  @I_vCURNCYID = @I_vCURNCYID,  @I_vDOCAMNT = @I_vORTRXAMT,  @I_vORCTRXAM = @ORCTRXAM,     @I_vCashCHEKBKID = @I_vCHEKBKID,  @I_vCheckCHEKBKID = @I_vCHEKBKID,  @I_vCASHAMT = 0,  @I_vORCASAMT = 0,      @I_vCHECKAMT = 0,  @I_vORCHKAMT = 0,      @I_vCRCRDAMT = @I_vORTRXAMT,  @I_vORCCDAMT = @ORCCDAMT,     @I_vCRCRDNAM = @I_vCRCARDID,  @I_vCMPANYID = @CMPANYID,  @I_vINTERID  = @INTERID,  @I_vRTCLCMTD = @I_vRTCLCMTD,  @I_vXCHGRATE = @I_vXCHGRATE,  @I_vFNDECPLCUR = @DECPLCUR,  @I_vCREATEDIST = @I_vCREATEDIST,  @O_iErrorState = @iUpdDistErrState output,  @oErrString  = @oErrString output  end  end  select @iError = @@error  if ((@iStatus <> 0) or (@iUpdDistErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@oErrString))  select @O_iErrorState = 20   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vRequesterTrx=0)  begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Cash_Receipt',  @I_vINDEX1  = 9,  @I_vINDEX2  = @I_vDOCNUMBR,  @I_vINDEX3  = '',  @I_vINDEX4  = '',  @I_vINDEX5  = '',  @I_vINDEX6  = '',  @I_vINDEX7  = '',  @I_vINDEX8  = '',  @I_vINDEX9  = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete  = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1296   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   insert RM10201  (  BACHNUMB,  BCHSOURC,  DOCNUMBR,  CUSTNMBR,  RMDTYPAL,  DOCDATE,  CSHRCTYP,  CHEKNMBR,  CHEKBKID,  CRCARDID,  DISAMCHK,  NDSTAMNT,  ONHOLD,   POSTED,  LSTEDTDT,  LSTUSRED,  ORTRXAMT,  CURTRXAM,  WROFAMNT,   DISTKNAM,   DISAVTKN,   PPSAMDED,   GSTDSAMT,   GLPOSTDT,  CURNCYID,  TRXDSCRN,  PSTGSTUS,  EFTFLAG  )  select  @I_vBACHNUMB,    'RM_Cash',    @I_vDOCNUMBR,    @I_vCUSTNMBR,    9,     @I_vDOCDATE,    @I_vCSHRCTYP,    case     when (@I_vCSHRCTYP = 0 or @I_vCSHRCTYP = 2)   then @I_vCHEKNMBR  else ''  end,  case     when (@I_vCSHRCTYP <> 2)  then @I_vCHEKBKID  else ''  end,  @I_vCRCARDID,    0,       0,       0,       0,       convert(varchar(12),getdate()),   isnull(@I_vLSTUSRED,''),  @I_vORTRXAMT,    @I_vORTRXAMT,    0,       0,       0,       0,       0,       @I_vGLPOSTDT,    case          when  @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  isnull(@I_vTRXDSCRN,''),  20,     0     if (@@error <> 0)  begin  select @O_iErrorState = 21    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   exec @iStatus = taCreateUpdateBatchHeaderRcd  @I_vBACHNUMB = @I_vBACHNUMB,  @I_vSERIES   = 3,  @I_vGLPOSTDT = @I_vGLPOSTDT,  @I_vBCHSOURC = 'RM_Cash',  @I_vDOCAMT   = @I_vORTRXAMT,  @I_vORIGIN   = 2,  @I_vNUMOFTRX = 1,  @I_vCHEKBKID = @I_vBatchCHEKBKID,  @I_vUSERID   = @I_vLSTUSRED,      @O_iErrorState = @iAddBatchErrState output,  @oErrString = @iCreateBatchErrString output  if ((@iAddBatchErrState <> 0) or (@iStatus <> 0))  begin  if (@iAddBatchErrState = 12012)   begin  exec @iStatus = taUpdateString   @iAddBatchErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @O_iErrorState = 13   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  break end   if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taRMCashReceiptInsertPost  @I_vCUSTNMBR,  @I_vDOCNUMBR,  @I_vDOCDATE,  @I_vORTRXAMT,  @I_vGLPOSTDT,  @I_vBACHNUMB,  @I_vCSHRCTYP,  @I_vCHEKBKID,  @I_vCHEKNMBR,  @I_vCRCARDID,  @I_vTRXDSCRN,  @I_vLSTUSRED,  @I_vBatchCHEKBKID,  @I_vCURNCYID,  @I_vXCHGRATE,  @I_vRATETPID,  @I_vEXPNDATE,  @I_vEXCHDATE,  @I_vEXGTBDSC,  @I_vEXTBLSRC,  @I_vRATEEXPR,  @I_vDYSTINCR,  @I_vRATEVARC,  @I_vTRXDTDEF,  @I_vRTCLCMTD,  @I_vPRVDSLMT,  @I_vDATELMTS,  @I_vTIME1,  @I_vCREATEDIST,   @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 160    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'Cash_Receipt',  @I_vINDEX1  = 9,  @I_vINDEX2  = @I_vDOCNUMBR,  @I_vINDEX3  = '',  @I_vINDEX4  = '',  @I_vINDEX5  = '',  @I_vINDEX6  = '',  @I_vINDEX7  = '',  @I_vINDEX8  = '',  @I_vINDEX9  = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete  = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @O_iErrorState = 1297   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMCashReceiptInsert] TO [DYNGRP]
GO

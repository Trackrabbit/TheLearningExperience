SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glCLMcAccountMSTRVerifyLedger]  @I_cUser_ID char(15)  = NULL,  @I_SumMstrName char(255)  = NULL,  @I_SumHistMaster char(255)  = NULL,  @I_ErrorMsg char(255)  = NULL,  @IO_UseReportingLedgers binary(4)  = NULL OUTPUT as   DECLARE   @BaseLedger int,  @IfrsLedger int,  @LocalLedger int  if (  @I_cUser_ID is NULL or  @I_SumMstrName is NULL or  @I_SumHistMaster is NULL or  @I_ErrorMsg is NULL or  @IO_UseReportingLedgers is NULL   )  begin  return end  CREATE TABLE #Errors(  [USERID] [char](15) NOT NULL,  [INDXLONG] [int] IDENTITY(1,1) NOT NULL,  [FILENAME] [char](45) NOT NULL,  [ERMSGTXT] [char](255) NOT NULL)  select @BaseLedger  = power (2,24), @IfrsLedger  = power (2,25), @LocalLedger = power (2,26)  insert into  #Errors  select  @I_cUser_ID,  @I_SumMstrName,  REPLACE(@I_ErrorMsg, '%1', ltrim(rtrim(str(Invalid.ACTINDX))))  from (select distinct MC00201.ACTINDX from MC00201  where Ledger_ID not in (1,2,3))Invalid  Update MC00201 set Ledger_ID = 1 where Ledger_ID not in (1,2,3) and ACTINDX not in (select ACTINDX from MC00201 a where a.ACTINDX = MC00201.ACTINDX and a.OPENYEAR = MC00201.OPENYEAR and a.PERIODID = MC00201.PERIODID and a.Ledger_ID = 1 and a.CURNCYID = MC00201.CURNCYID)  Update MC00201 set ORIGAMT = total.ORIGAMT, FUNCTAMT = total.FUNCTAMT from (select ACTINDX, OPENYEAR, PERIODID, CURNCYID, SUM(ORIGAMT) as ORIGAMT, SUM(FUNCTAMT) as FUNCTAMT  from MC00201 where Ledger_ID not in (2,3) group by ACTINDX, OPENYEAR, PERIODID, CURNCYID) total where total.ACTINDX = MC00201.ACTINDX and total.OPENYEAR = MC00201.OPENYEAR and total.PERIODID = MC00201.PERIODID and total.CURNCYID = MC00201.CURNCYID and MC00201.Ledger_ID = 1  delete from MC00201 where Ledger_ID not in (1,2,3)  insert into  #Errors  select  @I_cUser_ID,  @I_SumHistMaster,  REPLACE(@I_ErrorMsg, '%1', ltrim(rtrim(str(Invalid.ACTINDX))))  from (select distinct MC30001.ACTINDX from MC30001  where Ledger_ID not in (1,2,3))Invalid  Update MC30001 set Ledger_ID = 1 where Ledger_ID not in (1,2,3) and ACTINDX not in (select ACTINDX from MC30001 a where a.ACTINDX = MC30001.ACTINDX and a.HSTYEAR = MC30001.HSTYEAR and a.PERIODID = MC30001.PERIODID and a.Ledger_ID = 1 and a.CURNCYID = MC30001.CURNCYID)  Update MC30001 set ORIGAMT = total.ORIGAMT, FUNCTAMT = total.FUNCTAMT from (select ACTINDX, HSTYEAR, PERIODID, CURNCYID, SUM(ORIGAMT) as ORIGAMT, SUM(FUNCTAMT) as FUNCTAMT  from MC30001 where Ledger_ID not in (2,3) group by ACTINDX, HSTYEAR, PERIODID, CURNCYID) total where total.ACTINDX = MC30001.ACTINDX and total.HSTYEAR = MC30001.HSTYEAR and total.PERIODID = MC30001.PERIODID and total.CURNCYID = MC30001.CURNCYID and MC30001.Ledger_ID = 1  delete from MC30001 where Ledger_ID not in (1,2,3)  insert into  SY03400  select  USERID,  INDXLONG,  FILENAME,  ERMSGTXT,  '' as ERMSGTXT2  from #Errors  select @IO_UseReportingLedgers = (@IO_UseReportingLedgers | @BaseLedger)  if (select COUNT(*)   from (  select Ledger_ID   from MC00201 where Ledger_ID in (2, 3)  union   select Ledger_ID   from MC00201 where Ledger_ID in (2, 3)) Ledgers  ) > 0 begin  select @IO_UseReportingLedgers = (@IO_UseReportingLedgers | @IfrsLedger)  select @IO_UseReportingLedgers = (@IO_UseReportingLedgers | @LocalLedger) end    
GO
GRANT EXECUTE ON  [dbo].[glCLMcAccountMSTRVerifyLedger] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpGetAuditTrailCodes]  @I_cBatchSource                 char(15)        = NULL,  @I_cBatchNumber          char(15)        = NULL,  @I_sTransactionType             smallint        = NULL,  @I_tICRegistered tinyint  = NULL,  @O_cAuditTrailCode              char(13)        = NULL output,  @O_cHistoryAuditTrailCode       char(13)        = NULL output,  @O_cICAuditTrailCode            char(13)        = NULL output,  @O_cICHistoryAuditTrailCode     char(13)        = NULL output,  @O_iErrorState                  int             = NULL output as  declare  @BUSINESS_FORM  smallint,  @CLEARING_TRX   smallint,  @NORMAL_TRX     smallint,  @BUDGET_TRX     smallint,    @TRUE tinyint,  @cPrefix        char(5),  @cDBName char(5),  @iError         int,  @iStatus        int,  @tLoop          tinyint  select  @O_cAuditTrailCode              = '',  @O_cHistoryAuditTrailCode       = '',  @O_cICAuditTrailCode            = '',  @O_cICHistoryAuditTrailCode     = '',  @O_iErrorState                  = 0,  @iStatus                        = 0  select @cDBName = db_name()  set rowcount 1  while (@tLoop is NULL) begin   select @tLoop = 1   if      @I_cBatchSource         is NULL or  @I_cBatchNumber  is NULL or  @I_sTransactionType     is NULL or  @I_tICRegistered is NULL  begin     select @O_iErrorState = 20670  break  end    select   @BUSINESS_FORM  = 5,  @BUDGET_TRX = 4,     @CLEARING_TRX   = 2,  @NORMAL_TRX     = 1,  @TRUE  = 1   if      @I_sTransactionType <> @BUSINESS_FORM   and  @I_sTransactionType <> @CLEARING_TRX    and  @I_sTransactionType <> @BUDGET_TRX and    @I_sTransactionType <> @NORMAL_TRX  begin  select @O_iErrorState = 20672  break  end    if @I_sTransactionType = @BUSINESS_FORM  begin  exec @iStatus = DYNAMICS..smGetMsgString  182,                              @cDBName,  @cPrefix                output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select   @O_cAuditTrailCode = TRXSORCE  from  GL10100 with (NOLOCK)  where  BSNSFMID = @I_cBatchNumber  and     substring(TRXSORCE,1,5) =  @cPrefix   if @@rowcount <> 1  select @O_cAuditTrailCode = ''   exec @iStatus = DYNAMICS..smGetMsgString  181,              @cDBName,  @cPrefix        output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select   @O_cHistoryAuditTrailCode = TRXSORCE  from  GL10100 with (NOLOCK)  where  BSNSFMID = @I_cBatchNumber  and     substring(TRXSORCE,1,5) =  @cPrefix   if @@rowcount <> 1  select @O_cHistoryAuditTrailCode = ''   end    else if @I_sTransactionType = @BUDGET_TRX  begin  select @iError = @@error  end   else  begin  if @I_sTransactionType = @CLEARING_TRX  begin  exec @iStatus = DYNAMICS..smGetMsgString  180,                              @cDBName,  @cPrefix                output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  break  end   else if @I_sTransactionType = @NORMAL_TRX   begin  exec @iStatus = DYNAMICS..smGetMsgString  184,                              @cDBName,  @cPrefix                output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break    end    select   @O_cAuditTrailCode = TRXSORCE  from  GL10000 with (NOLOCK)  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     substring(TRXSORCE,1,5) =  @cPrefix   if @@rowcount <> 1  select @O_cAuditTrailCode = ''   if @I_sTransactionType <> @CLEARING_TRX  begin  exec @iStatus = DYNAMICS..smGetMsgString  183,                              @cDBName,  @cPrefix                output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select   @O_cHistoryAuditTrailCode = TRXSORCE  from  GL10000 with (NOLOCK)  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     substring(TRXSORCE,1,5) =  @cPrefix   if @@rowcount <> 1  select @O_cHistoryAuditTrailCode = ''   end    if @I_sTransactionType = @NORMAL_TRX and  @I_tICRegistered = @TRUE  begin  exec @iStatus = DYNAMICS..smGetMsgString  18671,                              @cDBName,  @cPrefix        output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select   @O_cICAuditTrailCode = TRXSORCE  from  GL10000 with (NOLOCK)  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     substring(TRXSORCE,1,5) =  @cPrefix   if @@rowcount <> 1  select @O_cICAuditTrailCode = ''   exec @iStatus = DYNAMICS..smGetMsgString  18670,                              @cDBName,  @cPrefix                output,  @O_iErrorState  output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select   @O_cICHistoryAuditTrailCode = TRXSORCE  from  GL10000 with (NOLOCK)  where  BCHSOURC = @I_cBatchSource  and     BACHNUMB = @I_cBatchNumber  and     substring(TRXSORCE,1,5) =  @cPrefix   if @@rowcount <> 1  select @O_cICHistoryAuditTrailCode = ''  end    end   end   set rowcount 0  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpGetAuditTrailCodes] TO [DYNGRP]
GO

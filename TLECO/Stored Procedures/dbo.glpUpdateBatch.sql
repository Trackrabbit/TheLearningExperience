SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpUpdateBatch]  @I_iSQLSessionID         int             = NULL,  @I_cBatchSource    char(15)        = NULL,  @I_cBatchNumber    char(15)        = NULL,  @I_sTransactionType      smallint        = NULL,  @I_sBatchFrequency         smallint        = NULL,  @I_tDeleteBatch            tinyint   = NULL,  @I_sMiscBatchDays          smallint  = NULL,  @I_iControlTransactions    int    = NULL,  @I_mControlTotal            numeric(19,5) = NULL,  @I_mNoteIndex               numeric(19,5) = NULL,  @I_dLastRecurringPostedDate datetime  = NULL,  @I_sActualPostings          smallint        = NULL,  @I_iNumberOfTransactions int    = NULL,  @I_tCalculateGLTaxes tinyint   = NULL,  @I_bBatchValid           binary(4)  = NULL,  @I_mBatchTotal           numeric(19,5) = NULL,  @O_sBatchStatus int    = NULL output,  @O_iErrorState           int             = NULL output as  declare  @TRUE tinyint,   @FALSE tinyint,  @BATCH_RECURRING_INCOMPLETE     smallint,  @BATCH_POSTED_WITH_ERROR        smallint,  @POSTED                         smallint,  @UNPOSTED                       smallint,  @POSTED_WITH_ERROR              smallint,  @RECURRING_POSTED               smallint,  @PRINT_COMPLETE     smallint,  @SINGLE_USE                     smallint,  @DEFAULT_DATE                   datetime,  @OKAY                           tinyint,  @MS_ITEM_4                      int,  @iUnpostedTransactions          int,  @iPostedWithError     int,  @mUnpostedBatchTotal            numeric(19,5),  @tTransaction                   tinyint,  @tLoop                          tinyint,  @iError                         int,  @iStatus                        int,  @sDefaultDate char(12),  @tDeleteBatch tinyint,  @dMinDate datetime,  @MS_ITEM_13                     int,  @TRXSORCE char(13),  @Workflow_Name char(51),  @WfBusObjKey char(201),  @BACHNUMB char(15),  @BCHSOURC char(15),  @CREATDDT datetime,  @TIME1 datetime,  @nwfStatus smallint  select  @iStatus   = 0,  @O_sBatchStatus = 0,  @O_iErrorState  = 0  exec @iStatus = smGetMinDate @dMinDate output  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_iSQLSessionID        is NULL or  @I_cBatchSource   is NULL or  @I_cBatchNumber   is NULL or  @I_sTransactionType     is NULL or   @I_sBatchFrequency         is NULL or  @I_tDeleteBatch            is NULL or  @I_sMiscBatchDays          is NULL or  @I_iControlTransactions    is NULL or  @I_mControlTotal            is NULL or  @I_mNoteIndex               is NULL or  @I_dLastRecurringPostedDate is NULL or  @I_sActualPostings          is NULL or  @I_iNumberOfTransactions is NULL or  @I_tCalculateGLTaxes is NULL or  @I_bBatchValid           is NULL or  @I_mBatchTotal           is NULL   begin  select @O_iErrorState = 20491  break  end    select  @TRUE      = 1,  @FALSE      = 0,  @BATCH_RECURRING_INCOMPLETE = 10,  @BATCH_POSTED_WITH_ERROR = 11,  @POSTED      = 2,  @UNPOSTED     = 1,  @POSTED_WITH_ERROR  = 3,  @RECURRING_POSTED  = 4,  @PRINT_COMPLETE   = 2,  @SINGLE_USE    = 1,  @DEFAULT_DATE   = @dMinDate,  @OKAY     = 0,  @MS_ITEM_4    = power(2,27),  @MS_ITEM_13    = power(2,20)   select   @iUnpostedTransactions  = 0,  @iPostedWithError  = 0,  @tDeleteBatch   = @I_tDeleteBatch,  @mUnpostedBatchTotal = 0.00   select  @iUnpostedTransactions = count(JRNENTRY)  from  GL10000 with (NOLOCK)  where  BCHSOURC = @I_cBatchSource   and     BACHNUMB        = @I_cBatchNumber  and     (PSTGSTUS       <> @POSTED   and PSTGSTUS <> @RECURRING_POSTED  and PSTGSTUS <> @POSTED_WITH_ERROR)   if @I_sBatchFrequency > @SINGLE_USE  update   GL10000  set  PSTGSTUS = @RECURRING_POSTED  from  GL10000 A join PJOURNAL B on (A.JRNENTRY = B.JRNENTRY)  where  A.BCHSOURC  = @I_cBatchSource   and  A.BACHNUMB  = @I_cBatchNumber  and  A.GLHDRMSG  = 0x00000000  and  A.GLHDRMS2  = 0x00000000  and  (B.GLLINMSG & @MS_ITEM_13) = @MS_ITEM_13  and  B.GLLINMS2  = 0x00000000  and  PSTGSTUS  = @POSTED_WITH_ERROR   exec @iStatus = smGetDefaultDate @sDefaultDate output   update   GL10000  set  PSTGSTUS        = @UNPOSTED,  GLHDRMSG        = 0x00000000,  GLHDRMS2  = 0x00000000  where  BCHSOURC        = @I_cBatchSource   and     BACHNUMB        = @I_cBatchNumber  and     PSTGSTUS        = @POSTED_WITH_ERROR   select @iPostedWithError = @@rowcount   select @iUnpostedTransactions = @iUnpostedTransactions + @iPostedWithError    if  @I_sBatchFrequency > @SINGLE_USE and  @I_tDeleteBatch = @FALSE   begin  if @iUnpostedTransactions = 0  begin   if @I_cBatchSource in ('GL_Normal','GL_Clearing','GL_Budget')  begin  if @I_cBatchSource in ('GL_Normal','GL_Clearing')  begin  select @TRXSORCE = (select top 1 TRXSORCE  from GL10000 with (NOLOCK)  where BCHSOURC = @I_cBatchSource and   BACHNUMB     = @I_cBatchNumber)  end  else   begin  select @TRXSORCE = (select top 1 TRXSORCE  from GL12000 with (NOLOCK)  where BCHSOURC = @I_cBatchSource and   BACHNUMB     = @I_cBatchNumber)  end  end   exec @iStatus = glpUpdateRecurringBatch  @I_iSQLSessionID,  @I_cBatchSource,  @I_cBatchNumber,  @I_sBatchFrequency,  @I_sMiscBatchDays,  @O_iErrorState          output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   select @I_mBatchTotal = COALESCE((sum(CRDTAMNT + DEBITAMT)),0)  from GL10000   inner join GL10001   on GL10000.JRNENTRY = GL10001. JRNENTRY  where  GL10000.BCHSOURC  = @I_cBatchSource   and GL10000.BACHNUMB  = @I_cBatchNumber  and GL10001.ACCTTYPE <> 2  and GL10000.ICDISTS = 0   end    end     else    begin     if @I_tDeleteBatch = @TRUE  begin  exec @iStatus = glpDeleteBatch  @I_iSQLSessionID,  @I_cBatchSource,  @I_cBatchNumber,  @I_sBatchFrequency,  @I_sTransactionType,  @I_mNoteIndex,  @iUnpostedTransactions,  @I_tCalculateGLTaxes,  @mUnpostedBatchTotal output,  @tDeleteBatch output,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError   if @iStatus <> 0 or @O_iErrorState <> 0  break   end   end    if  @tDeleteBatch = @FALSE  begin  select @I_bBatchValid = @I_bBatchValid & ~(@MS_ITEM_4)   if @I_sBatchFrequency <> @SINGLE_USE  begin     if @iUnpostedTransactions = 0  begin  select   @I_sActualPostings = @I_sActualPostings + 1,  @O_sBatchStatus  = @OKAY,  @I_dLastRecurringPostedDate = @sDefaultDate   end    else  begin      select  @I_iControlTransactions = 0,  @O_sBatchStatus = @BATCH_RECURRING_INCOMPLETE   if @I_tDeleteBatch = @TRUE  select  @I_mControlTotal = 0.0,  @I_iNumberOfTransactions = @iUnpostedTransactions,  @I_mBatchTotal = @mUnpostedBatchTotal   update  GL10000   set  PRNTSTUS = @PRINT_COMPLETE  where  BCHSOURC = @I_cBatchSource   and     BACHNUMB = @I_cBatchNumber  and PSTGSTUS = @RECURRING_POSTED   end    end    else      begin   select   @I_iControlTransactions = 0,  @I_mControlTotal = 0.0,  @I_iNumberOfTransactions = @iUnpostedTransactions,  @I_mBatchTotal = @mUnpostedBatchTotal,  @O_sBatchStatus = @BATCH_POSTED_WITH_ERROR   end    if @I_sBatchFrequency > @SINGLE_USE and  @I_tDeleteBatch = @FALSE and  @iUnpostedTransactions = 0  begin   if ((select isnull((select top 1 KPGTRXHS from GL40000),0))=1 and @I_cBatchSource in ('GL_Normal','GL_Clearing')) or  ((select isnull((select top 1 KPBUDTRXHIST from GL40000),0))=1 and @I_cBatchSource in ('GL_Budget'))  begin  if (select count(Workflow_Name) from WF100002 where Workflow_Type_Name='General Ledger Batch Approval' and ACTIVE=1)>0  begin   if @TRXSORCE <>''   begin  insert into SY30500  select BCHSOURC,BACHNUMB,CREATDDT,TIME1,GLPOSTDT,SERIES,NUMOFTRX,case NOFPSTGS  when 0 then 1  else NOFPSTGS  end ,BCHCOMNT,  RVRSBACH,USERID,CHEKBKID,BCHTOTAL,BACHDATE,MODIFDT,CURNCYID,CNTRLTRX,CNTRLTOT,  APPROVL,APPRVLDT,APRVLUSERID,ORIGIN,  @TRXSORCE,  Workflow_Status, CARDNAME   from SY00500  where  BACHNUMB        = @I_cBatchNumber  and     BCHSOURC        = @I_cBatchSource   end  end  end  end   if (select count(Workflow_Name) from WF100002 where Workflow_Type_Name='General Ledger Batch Approval' and ACTIVE=1)>0  select @nwfStatus=1  else  select @nwfStatus=9   update SY00500  set  MKDTOPST        = @FALSE,  RCLPSTDT        = @I_dLastRecurringPostedDate,  NOFPSTGS        = @I_sActualPostings,  NUMOFTRX        = @I_iNumberOfTransactions,  BCHTOTAL        = @I_mBatchTotal,  DELBACH         = @FALSE,  USERID          = ' ',  BCHSTTUS        = @O_sBatchStatus,  CNTRLTRX        = @I_iControlTransactions,  CNTRLTOT        = @I_mControlTotal,  APPROVL         = @FALSE,  APPRVLDT        = @DEFAULT_DATE,  APRVLUSERID     = ' ',  GLBCHVAL        = @I_bBatchValid,  CREATDDT  = cast(SYSDATETIME() as date),  TIME1   = cast(SYSDATETIME() as time),  Workflow_Status = @nwfStatus  where  BCHSOURC        = @I_cBatchSource   and     BACHNUMB        = @I_cBatchNumber   if @@rowcount <> 1  begin  select @O_iErrorState = 20493  break  end   end  end   if @iStatus <> 0 or @O_iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return (@iStatus)   
GO
GRANT EXECUTE ON  [dbo].[glpUpdateBatch] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taRMVoidTransaction]  @I_vCUSTNMBR char(15) = null,  @I_vDOCNUMBR char(20),    @I_vVOIDSTTS smallint,   @I_vRMDTYPAL smallint,   @I_vVOIDDATE datetime,   @I_vGLPOSTDT datetime,   @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output,   @oErrString  varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @iCustomState int,  @iCustomErrString varchar(255),  @iStatus int,  @O_iInitErrorState int,  @oInitErrString varchar(255),  @O_oErrorState int,  @iError int,  @iAddCodeErrState int  select  @iError = 0,  @O_oErrorState = 0,  @oInitErrString = '',  @O_iInitErrorState = 0,  @iStatus = 0,  @O_iErrorState = 0,  @iAddCodeErrState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taRMVoidTransactionPre  @I_vCUSTNMBR output,  @I_vDOCNUMBR output,  @I_vVOIDSTTS  output,  @I_vRMDTYPAL output,  @I_vVOIDDATE output,  @I_vGLPOSTDT output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6206    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vDOCNUMBR is null or  @I_vVOIDSTTS is null or  @I_vRMDTYPAL is null or  @I_vVOIDDATE is null or  @I_vGLPOSTDT is null) begin  select @O_iErrorState = 6207      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vDOCNUMBR = UPPER(@I_vDOCNUMBR)  if (@I_vDOCNUMBR = '') begin  select @O_iErrorState = 6210    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if not exists(select 1 from RM20101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR)  begin  select @O_iErrorState = 6211    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if exists(select 1 from RM20101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and VOIDSTTS <> 0)  begin  select @O_iErrorState = 6212     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vRMDTYPAL < 7 or @I_vRMDTYPAL > 9) begin  select @O_iErrorState = 6224    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if exists(select 1 from RM20101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and CSHRCTYP <> 0 and @I_vVOIDSTTS = 2)  begin  select @O_iErrorState = 9496     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vCUSTNMBR is null)  begin  select @I_vCUSTNMBR = UPPER(CUSTNMBR) from RM00401 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @I_vRMDTYPAL end  if (@I_vCUSTNMBR = '') begin  select @O_iErrorState = 6208    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (not exists (select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR)) begin  select @O_iErrorState = 6209    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vVOIDSTTS > 3 or @I_vVOIDSTTS < 1) begin  select @O_iErrorState = 6253     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vVOIDSTTS = 3) begin  select @O_iErrorState = 9494     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vVOIDSTTS = 2) and (@I_vRMDTYPAL <> 9) begin  select @O_iErrorState = 9495     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if exists(select 1 from RM20101 (nolock) where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and DOCDATE > @I_vVOIDDATE)  begin  select @O_iErrorState = 21007     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState <> 0) begin  return(@O_iErrorState) end  update RM20101 set  VOIDSTTS = @I_vVOIDSTTS,   VOIDDATE = @I_vGLPOSTDT,     BCHSOURC =  case  when RMDTYPAL = 8   then 'XRM_Sales'   when RMDTYPAL = 9 and @I_vVOIDSTTS = 2        then 'RM_Cash'  else 'XRM_Cash'  end  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and VOIDSTTS = 0 if (@@error <> 0) begin  select @O_iErrorState = 6216    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return(@O_iErrorState) end  exec @iStatus = taRMUnapplyTransaction  @I_vCUSTNMBR = @I_vCUSTNMBR,  @I_vDOCNUMBR = @I_vDOCNUMBR,  @I_vRMDTYPAL = @I_vRMDTYPAL,  @I_vGLPOSTDT = @I_vGLPOSTDT,  @O_iErrorState = @O_iErrorState output,  @oErrString = @oErrString output if (@@error <> 0 or @O_iErrorState <> 0 or @iStatus <> 0) begin  select @O_iErrorState = 6240   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return(@O_iErrorState) end  update RM20101 set  DINVPDOF = @I_vVOIDDATE  where RMDTYPAL = @I_vRMDTYPAL and DOCNUMBR = @I_vDOCNUMBR and VOIDSTTS = 1 if (@@error <> 0) begin  select @O_iErrorState = 8167    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return(@O_iErrorState) end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = taRMVoidTransactionPost  @I_vCUSTNMBR,  @I_vDOCNUMBR,  @I_vVOIDSTTS,  @I_vRMDTYPAL,  @I_vVOIDDATE,  @I_vGLPOSTDT,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6223    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taRMVoidTransaction] TO [DYNGRP]
GO

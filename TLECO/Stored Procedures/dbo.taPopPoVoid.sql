SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopPoVoid] @I_vPONUMBER char(17),     @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,    @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @DexLockErrorState int,  @DexRowID int,  @iCustomState int,  @iCustomErrString varchar(255),  @iError int,  @iStatus int,  @mylock tinyint,  @oExists int,  @O_oErrorState int,  @OInsStatus int,  @POHIST tinyint,  @POPTbl char(18),  @POSTATUS tinyint,  @REPRNTNT tinyint,  @taPopPoVoidPostErrState int,  @taPopPoVoidPostErrString char(255),  @TRXSORCE char(25),  @iTrxSorceErrState int,  @Workflow_Approval_Status smallint   select  @O_iErrorState = 0,  @DexLockErrorState = 0,  @DexRowID = 0,  @iCustomState = 0,  @iCustomErrString = '',  @iError = 0,  @iStatus = 0,  @mylock = 0,  @O_oErrorState = 0,  @OInsStatus = 0,  @oErrString = '',  @oExists = 0,  @POHIST = 1,  @POPTbl = '',  @POSTATUS = 0,  @REPRNTNT = 1,  @taPopPoVoidPostErrState = 0,  @taPopPoVoidPostErrString = '',  @TRXSORCE = '',  @iTrxSorceErrState = 0,  @Workflow_Approval_Status = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopPoVoidPre  @I_vPONUMBER output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 3845    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vPONUMBER is null) or (@I_vRequesterTrx is null)) begin  select @O_iErrorState = 3846    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 3847     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vPONUMBER = UPPER(@I_vPONUMBER)  select @POSTATUS = POSTATUS, @Workflow_Approval_Status = Workflow_Approval_Status from POP10100 (nolock) where PONUMBER = @I_vPONUMBER select @REPRNTNT = REPRNTNT from SY01000 (nolock) where SERIES = 4 and TRXSRCPX = 'POPVT' select @POHIST = POHIST from POP40100 (nolock) where INDEX1 = 1  if (@POSTATUS <> 1) begin  select @O_iErrorState = 3848    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@Workflow_Approval_Status in (4,5)) begin  select @O_iErrorState = 20167    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from SOP60100 (nolock) where PONUMBER = @I_vPONUMBER)) begin  select @O_iErrorState = 3849    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists (select 1 from POP10170 (nolock) where PONUMBER = @I_vPONUMBER) begin  select @O_iErrorState = 11969    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists (select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER and Workflow_Status  not in (1,9)) begin  select @O_iErrorState = 12007    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 3850   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  while (1=1) begin  select @POPTbl = rtrim(db_name()) + '.dbo.POP10100'  select @DexRowID = DEX_ROW_ID from POP10100 (nolock) where PONUMBER = @I_vPONUMBER   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @POPTbl and row_id = @DexRowID and session_id = @@spid))  begin  select @mylock = 1   if (@POSTATUS <> 1)  begin  select @O_iErrorState = 3851    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   exec DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @POPTbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 3852   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (exists (select 1 from sysobjects (nolock) where name = 'CPO10110'))  begin  delete CPO10110 where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3853    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (exists (select 1 from sysobjects (nolock) where name = 'POA40003'))  begin  delete POA40003 where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3854    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   delete POP10550 where POPNUMBE = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3855    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   exec @iStatus = taGetTrxSourceNumber  4,  'POPVT',  1,  @TRXSORCE output,  @iTrxSorceErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iTrxSorceErrState <> 0 or @TRXSORCE = ''))  begin  if (@iTrxSorceErrState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iTrxSorceErrState  end  select @O_iErrorState = 3856   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@REPRNTNT = 1) or (@POHIST = 1))  begin  insert POP30100   (  PONUMBER,  POSTATUS,  STATGRP,  POTYPE,  USER2ENT,  CONFIRM1,  DOCDATE,  LSTEDTDT,  LSTPRTDT,  PRMDATE,  PRMSHPDTE,  REQDATE,  REQTNDT,  SHIPMTHD,  TXRGNNUM,  REMSUBTO,  SUBTOTAL,  TRDISAMT,  TRDPCTPR,  FRTAMNT,  MSCCHAMT,  TAXAMNT,  VENDORID,  VENDNAME,  MINORDER,  VADCDPAD,  CMPANYID,  PRBTADCD,  PRSTADCD,  CMPNYNAM,  CONTACT,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  CCode,      COUNTRY,  PHONE1,  PHONE2,  PHONE3,  FAX,  PYMTRMID,  DSCDLRAM,  DSCPCTAM,  DISAMTAV,  DISCDATE,  DUEDATE,  CUSTNMBR,  TIMESPRT,  CREATDDT,  MODIFDT,  PONOTIDS_1,  PONOTIDS_2,  PONOTIDS_3,  PONOTIDS_4,  PONOTIDS_5,  PONOTIDS_6,  PONOTIDS_7,  PONOTIDS_8,  PONOTIDS_9,  PONOTIDS_10,  TRXSORCE,  COMMNTID,  CANCSUB,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RATECALC,  DENXRATE,  MCTRXSTT,  OREMSUBT,  ORSUBTOT,  Originating_Canceled_Sub,  ORTDISAM,  ORFRTAMT,  OMISCAMT,  ORTAXAMT,  ORDDLRAT,  ODISAMTAV,  BUYERID,  ALLOWSOCMTS,  DISGRPER,  DUEGRPER,  Revision_Number,  TAXSCHID,  TXSCHSRC,     BSIVCTTL,  Purchase_Freight_Taxable,  Purchase_Misc_Taxable,  FRTSCHID,  MSCSCHID,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  BCKTXAMT,  OBTAXAMT,  BackoutFreightTaxAmt,  OrigBackoutFreightTaxAmt,  BackoutMiscTaxAmt,  OrigBackoutMiscTaxAmt,  Flags,  POPCONTNUM,     CONTENDDTE,     CNTRLBLKTBY,     PURCHCMPNYNAM,     PURCHCONTACT,     PURCHADDRESS1,     PURCHADDRESS2,     PURCHADDRESS3,     PURCHCITY,     PURCHSTATE,     PURCHZIPCODE,     PURCHCCode,     PURCHCOUNTRY,     PURCHPHONE1,     PURCHPHONE2,     PURCHPHONE3,     PURCHFAX,     BLNKTLINEEXTQTYSUM,    Workflow_Approval_Status,  Workflow_Priority  )  select  PONUMBER,  POSTATUS,  STATGRP,  POTYPE,  USER2ENT,  CONFIRM1,  DOCDATE,  LSTEDTDT,  LSTPRTDT,  PRMDATE,  PRMSHPDTE,  REQDATE,  REQTNDT,  SHIPMTHD,  TXRGNNUM,  REMSUBTO,  SUBTOTAL,  TRDISAMT,  TRDPCTPR,  FRTAMNT,  MSCCHAMT,  TAXAMNT,  VENDORID,  VENDNAME,  MINORDER,  VADCDPAD,  CMPANYID,  PRBTADCD,  PRSTADCD,  CMPNYNAM,  CONTACT,  ADDRESS1,  ADDRESS2,  ADDRESS3,  CITY,  STATE,  ZIPCODE,  CCode,      COUNTRY,  PHONE1,  PHONE2,  PHONE3,  FAX,  PYMTRMID,  DSCDLRAM,  DSCPCTAM,  DISAMTAV,  DISCDATE,  DUEDATE,  CUSTNMBR,  TIMESPRT,  CREATDDT,  MODIFDT,  PONOTIDS_1,  PONOTIDS_2,  PONOTIDS_3,  PONOTIDS_4,  PONOTIDS_5,  PONOTIDS_6,  PONOTIDS_7,  PONOTIDS_8,  PONOTIDS_9,  PONOTIDS_10,  @TRXSORCE,  COMMNTID,  CANCSUB,  CURNCYID,  CURRNIDX,  RATETPID,  EXGTBLID,  XCHGRATE,  EXCHDATE,  TIME1,  RATECALC,  DENXRATE,  MCTRXSTT,  OREMSUBT,  ORSUBTOT,  Originating_Canceled_Sub,  ORTDISAM,  ORFRTAMT,  OMISCAMT,  ORTAXAMT,  ORDDLRAT,  ODISAMTAV,  BUYERID,  ALLOWSOCMTS,  DISGRPER,  DUEGRPER,  Revision_Number,  TAXSCHID,  TXSCHSRC,     BSIVCTTL,  Purchase_Freight_Taxable,  Purchase_Misc_Taxable,  FRTSCHID,  MSCSCHID,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  BCKTXAMT,  OBTAXAMT,  BackoutFreightTaxAmt,  OrigBackoutFreightTaxAmt,  BackoutMiscTaxAmt,  OrigBackoutMiscTaxAmt,  Flags,  POPCONTNUM,     CONTENDDTE,     CNTRLBLKTBY,     PURCHCMPNYNAM,     PURCHCONTACT,     PURCHADDRESS1,     PURCHADDRESS2,     PURCHADDRESS3,     PURCHCITY,     PURCHSTATE,     PURCHZIPCODE,     PURCHCCode,     PURCHCOUNTRY,     PURCHPHONE1,     PURCHPHONE2,     PURCHPHONE3,     PURCHFAX,     BLNKTLINEEXTQTYSUM,    Workflow_Approval_Status,  Workflow_Priority  from POP10100 (nolock) where PONUMBER = @I_vPONUMBER  if @@error <> 0  begin  select @O_iErrorState = 3857    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  insert POP30110  (  PONUMBER,  ORD,  POLNESTA,  POTYPE,  ITEMNMBR,  ITEMDESC,  VENDORID,  VNDITNUM,  VNDITDSC,  NONINVEN,  LOCNCODE,  UOFM,  UMQTYINB,  QTYORDER,  QTYCANCE,  UNITCOST,  EXTDCOST,  INVINDX,  REQDATE,  PRMDATE,  PRMSHPDTE,  REQSTDBY,  COMMNTID,  DOCTYPE,  POLNEARY_1,  POLNEARY_2,  POLNEARY_3,  POLNEARY_4,  POLNEARY_5,  POLNEARY_6,  POLNEARY_7,  POLNEARY_8,  DECPLCUR,  DECPLQTY,  BRKFLD1,  JOBNUMBR,  COSTCODE,  COSTTYPE,  CURRNIDX,  ORUNTCST,  OREXTCST,  LINEORIGIN,  FREEONBOARD,  ODECPLCU,  Product_Indicator,  Source_Document_Number,  Source_Document_Line_Num,  RELEASEBYDATE,  Released_Date,  Purchase_IV_Item_Taxable,  Purchase_Item_Tax_Schedu,  Purchase_Site_Tax_Schedu,  PURCHSITETXSCHSRC,     BSIVCTTL,  TAXAMNT,  ORTAXAMT,  BCKTXAMT,  OBTAXAMT,  Landed_Cost_Group_ID,  SHIPMTHD,  LineNumber,       ORIGPRMDATE,      FSTRCPTDT,      LSTRCPTDT,      RELEASE,      ADRSCODE,      CMPNYNAM,      CONTACT,      ADDRESS1,      ADDRESS2,       ADDRESS3,      CITY,       STATE,       ZIPCODE,      CCode,        COUNTRY,      PHONE1,       PHONE2,       PHONE3,       FAX,        ADDRSOURCE,      Flags        )  select  PONUMBER,  ORD,  POLNESTA,  POTYPE,  ITEMNMBR,  ITEMDESC,  VENDORID,  VNDITNUM,  VNDITDSC,  NONINVEN,  LOCNCODE,  UOFM,  UMQTYINB,  QTYORDER,  QTYCANCE,  UNITCOST,  EXTDCOST,  INVINDX,  REQDATE,  PRMDATE,  PRMSHPDTE,  REQSTDBY,  COMMNTID,  DOCTYPE,  POLNEARY_1,  POLNEARY_2,  POLNEARY_3,  POLNEARY_4,  POLNEARY_5,  POLNEARY_6,  POLNEARY_7,  POLNEARY_8,  DECPLCUR,  DECPLQTY,  BRKFLD1,  JOBNUMBR,  COSTCODE,  COSTTYPE,  CURRNIDX,  ORUNTCST,  OREXTCST,  LINEORIGIN,  FREEONBOARD,  ODECPLCU,  Product_Indicator,  Source_Document_Number,  Source_Document_Line_Num,  RELEASEBYDATE,  Released_Date,  Purchase_IV_Item_Taxable,  Purchase_Item_Tax_Schedu,  Purchase_Site_Tax_Schedu,  PURCHSITETXSCHSRC,     BSIVCTTL,  TAXAMNT,  ORTAXAMT,  BCKTXAMT,  OBTAXAMT,  Landed_Cost_Group_ID,  SHIPMTHD,  LineNumber,       ORIGPRMDATE,      FSTRCPTDT,      LSTRCPTDT,      RELEASE,      ADRSCODE,      CMPNYNAM,      CONTACT,      ADDRESS1,      ADDRESS2,       ADDRESS3,      CITY,       STATE,       ZIPCODE,      CCode,        COUNTRY,      PHONE1,       PHONE2,       PHONE3,       FAX,        ADDRSOURCE,      Flags        from POP10110 (nolock) where PONUMBER = @I_vPONUMBER  if @@error <> 0  begin  select @O_iErrorState = 3858    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  insert POP30160  (  PONUMBER,  ORD,  TAXDTLID,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXPURCH,  ORGTXPCH,  TOTPURCH,  ORTOTPUR,  TXDTOTTX,  OTTAXPON,  TRXSORCE,  POP_Tax_Note_ID_Array_1,  POP_Tax_Note_ID_Array_2,  CURRNIDX  )  select  PONUMBER,  ORD,  TAXDTLID,  BKOUTTAX,  TAXAMNT,  ORTAXAMT,  FRTTXAMT,  ORFRTTAX,  MSCTXAMT,  ORMSCTAX,  TAXPURCH,  ORGTXPCH,  TOTPURCH,  ORTOTPUR,  TXDTOTTX,  OTTAXPON,  TRXSORCE,  POP_Tax_Note_ID_Array_1,  POP_Tax_Note_ID_Array_2,  CURRNIDX  from POP10160 (nolock) where PONUMBER = @I_vPONUMBER  if @@error <> 0  begin  select @O_iErrorState = 3859    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@POHIST = 0)  begin  delete POP10150 where POPNUMBE = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3860    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   delete POP10100 where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3861    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete POP10110 where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3862    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete POP10160 where PONUMBER = @I_vPONUMBER  if (@@error <> 0)  begin  select @O_iErrorState = 3863    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete POP10550 where POPNUMBE = @I_vPONUMBER  if (@@error <> 0)  begin   select @O_iErrorState = 3864    exec @iStatus = taUpdateString   @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  break end  if (@mylock = 1) begin  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,  @I_vtable_path_name = @POPTbl,    @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 3865   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taPopPoVoidPost  @I_vPONUMBER,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @taPopPoVoidPostErrState output,  @oErrString = @taPopPoVoidPostErrString output select @iError = @@error if ((@iStatus <> 0) or (@taPopPoVoidPostErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @taPopPoVoidPostErrString  select @O_iErrorState = 3866    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Purchase_Order_Transaction',  @I_vINDEX1=@I_vPONUMBER,  @I_vINDEX2='',  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 3867   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopPoVoid] TO [DYNGRP]
GO

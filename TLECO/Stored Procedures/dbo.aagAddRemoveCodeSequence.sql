SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE      PROCEDURE [dbo].[aagAddRemoveCodeSequence] (  @Table_Name NVARCHAR (25)  ,  @aaCodeSequence INTEGER   ,  @aaCodeSequenceAdded INTEGER   ,  @AddOrRemove INTEGER  ) AS   BEGIN  DECLARE @ExecString VARCHAR (8000),  @TempTableAAG00904 VARCHAR(50),  @TempTableAAG00905 VARCHAR(50)   select @TempTableAAG00904 = '##Backup_AAG00904'  + REPLACE(system_user,'''','') + db_name()   select @TempTableAAG00905 = '##Backup_AAG00905'  + REPLACE(system_user,'''','') + db_name()   IF @AddOrRemove = 0   BEGIN  SELECT @ExecString = ' DECLARE @aaCodeSequenceNext INTEGER DECLARE @aaCodeSequenceNext1 INTEGER DECLARE @aaCodeSequenceNext2 INTEGER DECLARE @aaBudgetTreeID INTEGER  SELECT TOP 1 @aaBudgetTreeID = aaBudgetTreeID FROM ' + @Table_Name + '  SELECT @aaCodeSequenceNext = MAX(aaCodeSequence) + 100  FROM   ' + @Table_Name + ' WHERE aaLvlCodeString LIKE   ( SELECT LTRIM(RTRIM(aaLvlCodeString)) + '',%'' FROM ' + @Table_Name + ' WHERE   aaCodeSequence = ' + CONVERT (VARCHAR, @aaCodeSequence) + ') AND   aaCodeSequence <> ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + '  if @aaCodeSequenceNext is null  BEGIN  set @aaCodeSequenceNext = ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + ' + 99  SELECT @aaCodeSequenceNext1 = aaLevel  FROM   ' + @Table_Name + '  WHERE aaCodeSequence = ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + '  if @aaCodeSequenceNext1 = 1  SELECT @aaCodeSequenceNext2 = MAX(aaCodeSequence) + 100 FROM  ' + @Table_Name + '  WHERE aaLvlCodeString LIKE   ( SELECT LTRIM(RTRIM(aaLvlCodeString)) + '',%''  FROM  ' + @Table_Name + '  WHERE   aaCodeSequence = (select max(aaCodeSequence)FROM  ' + @Table_Name + '  WHERE aaLevel = 1 AND aaCodeSequence <> ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + ' ) )  AND aaCodeSequence <> ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + '   if @aaCodeSequenceNext2 is not null  set @aaCodeSequenceNext = @aaCodeSequenceNext2  END  IF EXISTS (SELECT aaCodeSequence FROM ' + @Table_Name + ' WHERE aaCodeSequence = @aaCodeSequenceNext)  BEGIN  UPDATE ' + @Table_Name + ' SET aaCodeSequence  =  aaCodeSequence + 100 WHERE aaCodeSequence >= @aaCodeSequenceNext   if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00904 + ''' and type = ''U'')  UPDATE ['+ @TempTableAAG00904 + '] SET aaCodeSequence  =  (aaCodeSequence + 1) WHERE aaCodeSequence >= @aaCodeSequenceNext / 100   if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00905 + ''' and type = ''U'')  UPDATE ['+ @TempTableAAG00905 + '] SET aaCodeSequence  =  (aaCodeSequence + 1) WHERE aaCodeSequence >= @aaCodeSequenceNext /100  UPDATE ' + @Table_Name + ' SET aaCodeSequence  =  @aaCodeSequenceNext WHERE aaCodeSequence = ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + '  END  ELSE  BEGIN  UPDATE ' + @Table_Name + ' SET aaCodeSequence  = @aaCodeSequenceNext WHERE aaCodeSequence = ' + CONVERT (VARCHAR, @aaCodeSequenceAdded) + '  END  if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00904 + ''' and type = ''U'')  INSERT INTO ['+ @TempTableAAG00904 + '] (aaBudgetID, aaCodeSequence,PERIODDT, aaFiscalPeriod, aaActualPriliminary, Balance, QUANTITY,YEAR1,DEX_ROW_TS)  SELECT aaBudgetID, @aaCodeSequenceNext / 100, PERIODDT,aaFiscalPeriod, 0 AS aaActualPriliminary, 0.00 AS Balance, 0.00 AS QUANTITY,(SELECT TOP 1 aaFiscalYear FROM AAG00500 WHERE AAG00500.DATE1=ISNULL((SELECT  top 1 DATE1 from AAG00500 WHERE DATE1 =A.PERIODDT),DATEADD(MONTH, 1, A.PERIODDT))) AS YEAR1,GETUTCDATE() FROM AAG00904 A   WHERE aaCodeSequence = (SELECT MIN(aaCodeSequence) FROM AAG00904 B WHERE A.aaBudgetID = B.aaBudgetID)   AND aaBudgetID IN (SELECT aaBudgetID FROM AAG00903 WHERE aaBudgetTreeID = @aaBudgetTreeID)   GROUP BY aaBudgetID, aaCodeSequence, PERIODDT, aaFiscalPeriod'   EXEC ( @ExecString )  END  ELSE   BEGIN  SELECT @ExecString = 'DECLARE @nCount INTEGER DECLARE @aaBudgetTreeID INTEGER  DECLARE @rowid INTEGER   if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00905 + ''' and type = ''U'')  Begin   DELETE FROM ['+ @TempTableAAG00905 + '] WHERE aaCodeSequence NOT IN (SELECT aaCodeSequence / 100 FROM ' + @Table_Name + ')  select @rowid = min(aaCodeSequence) from  ' + @Table_Name + ' where aaCodeSequence > ' + CONVERT (VARCHAR, @aaCodeSequence) + '   select  @nCount = @rowid - ' + CONVERT (VARCHAR, @aaCodeSequence) + '  if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00905 + ''' and type = ''U'')  UPDATE ['+ @TempTableAAG00905 + '] SET aaCodeSequence = aaCodeSequence - @nCount/100 WHERE aaCodeSequence >= @rowid/100  END'  EXEC ( @ExecString )  SELECT @ExecString = ' DECLARE @nCount INTEGER DECLARE @aaBudgetTreeID INTEGER  DECLARE @rowid INTEGER   if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00904 + ''' and type = ''U'')  DELETE FROM ['+ @TempTableAAG00904 + '] WHERE aaCodeSequence NOT IN (SELECT aaCodeSequence / 100 FROM ' + @Table_Name + ')  select @rowid = min(aaCodeSequence) from  ' + @Table_Name + ' where aaCodeSequence > ' + CONVERT (VARCHAR, @aaCodeSequence) + '   select  @nCount = @rowid - ' + CONVERT (VARCHAR, @aaCodeSequence) + '  if exists(select name from tempdb..sysobjects where name = '''+ @TempTableAAG00904 + ''' and type = ''U'')  UPDATE ['+ @TempTableAAG00904 + '] SET aaCodeSequence = aaCodeSequence - @nCount/100 WHERE aaCodeSequence >= @rowid/100  UPDATE ' + @Table_Name + ' SET aaCodeSequence = aaCodeSequence - @nCount where aaCodeSequence >= @rowid'  EXEC ( @ExecString )  END END    
GO
GRANT EXECUTE ON  [dbo].[aagAddRemoveCodeSequence] TO [DYNGRP]
GO

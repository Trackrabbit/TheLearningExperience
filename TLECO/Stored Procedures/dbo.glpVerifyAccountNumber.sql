SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glpVerifyAccountNumber]   @I_tValidAccountNumber  tinyint         = NULL,  @I_tActive                              tinyint         = NULL,  @I_sFixedOrVariable             smallint        = NULL,  @I_sBalanceForCalculation       smallint        = NULL,  @I_sPostingType                 smallint        = NULL,  @I_tQuickOffset                 tinyint         = NULL,  @I_tTransactionHistory          tinyint         = NULL,  @I_tReversingHistory            tinyint         = NULL,  @IO_sAccountType                smallint        = NULL  output,  @IO_bMessages                   binary(4)       = NULL  output,  @O_iErrorState                  int             = NULL  output as  declare  @TRUE                   tinyint,  @POST_ACCT              smallint,  @UNIT_ACCT              smallint,  @POST_ALLOC_ACCT        smallint,  @UNIT_ALLOC_ACCT        smallint,  @FIXED                  smallint,  @VARIABLE               smallint,  @BAL_SHEET              smallint,  @PROFIT_AND_LOSS        smallint,  @MS_ITEM_1              int,  @MS_ITEM_2              int,  @MS_ITEM_4              int,  @MS_ITEM_5              int,  @MS_ITEM_10             int,  @MS_ITEM_13             int,  @iInvalidAccount                int,  @iInactiveAccount       int,  @iInvalidHistory                int,  @tTransaction           tinyint,  @tLoop                  tinyint  select  @O_iErrorState  = 0  if @@trancount = 0 begin  select @tTransaction = 1  begin transaction end   while (@tLoop is NULL) begin  select @tLoop = 1   if      @I_tValidAccountNumber  is NULL or  @I_tActive                              is NULL or  @I_sFixedOrVariable             is NULL or  @I_sBalanceForCalculation       is NULL or  @I_sPostingType                 is NULL or  @I_tQuickOffset                 is NULL or  @I_tTransactionHistory          is NULL or  @I_tReversingHistory            is NULL or  @IO_sAccountType                is NULL or  @IO_bMessages                   is NULL   begin  select @O_iErrorState = 20027  break  end    select  @TRUE                   = 1,  @POST_ACCT              = 1,  @UNIT_ACCT              = 2,  @POST_ALLOC_ACCT        = 3,  @UNIT_ALLOC_ACCT        = 4,  @FIXED                  = 1,  @VARIABLE               = 2,  @BAL_SHEET              = 0,  @PROFIT_AND_LOSS        = 1,  @MS_ITEM_1              = power (2,24),  @MS_ITEM_2              = power (2,25),  @MS_ITEM_4              = power (2,27),  @MS_ITEM_5              = power (2,28),  @MS_ITEM_10             = power (2,17),  @MS_ITEM_13             = power (2,20)   if @I_tQuickOffset = @TRUE     select  @iInvalidAccount                = @MS_ITEM_4,  @iInactiveAccount       = @MS_ITEM_5,  @iInvalidHistory                = @MS_ITEM_10  else     select  @iInvalidAccount                = @MS_ITEM_1,  @iInactiveAccount       = @MS_ITEM_2,  @iInvalidHistory                = @MS_ITEM_5    if @I_tValidAccountNumber <> @TRUE  begin  select  @IO_sAccountType = @POST_ACCT,  @IO_bMessages = (@IO_bMessages | @iInvalidAccount)   break   end   else   begin  if @I_tActive <> @TRUE  begin  if @I_tQuickOffset = @TRUE  begin  select @IO_bMessages = (@IO_bMessages | @iInactiveAccount)  end  else  begin   if @IO_sAccountType = @POST_ACCT        or  @IO_sAccountType = @UNIT_ACCT  select @IO_bMessages = (@IO_bMessages | @iInactiveAccount)  else  select @IO_bMessages = (@IO_bMessages | @MS_ITEM_4)  end   end    if @I_tQuickOffset = @TRUE  begin   if @IO_sAccountType = @UNIT_ACCT        or  @IO_sAccountType = @UNIT_ALLOC_ACCT  select @IO_bMessages = (@IO_bMessages | @MS_ITEM_13)  end   if      (@I_tTransactionHistory = @TRUE                         or  @I_tReversingHistory = @TRUE)                   and  (@IO_sAccountType = @POST_ALLOC_ACCT    or   @IO_sAccountType = @UNIT_ALLOC_ACCT)    and  @I_sFixedOrVariable = @VARIABLE  begin  select @IO_bMessages = (@IO_bMessages | @iInvalidHistory)  end   end    if @IO_sAccountType <>  @POST_ACCT                      and  @IO_sAccountType <>  @UNIT_ACCT                      and  @IO_sAccountType <>  @POST_ALLOC_ACCT        and   @IO_sAccountType <>  @UNIT_ALLOC_ACCT   begin  select   @IO_sAccountType = @POST_ACCT,  @IO_bMessages = (@IO_bMessages | @iInvalidAccount)   break  end    if @IO_sAccountType = @POST_ALLOC_ACCT  or  @IO_sAccountType = @UNIT_ALLOC_ACCT   begin  if @I_sFixedOrVariable <> @FIXED and  @I_sFixedOrVariable  <> @VARIABLE  begin  select  @IO_sAccountType = @POST_ACCT,  @IO_bMessages = (@IO_bMessages | @iInvalidAccount)   break  end   end    if @IO_sAccountType = @POST_ACCT and  (@I_sPostingType <> @BAL_SHEET and  @I_sPostingType <> @PROFIT_AND_LOSS)   begin  select @IO_bMessages = (@IO_bMessages | @iInvalidAccount)  break  end   end   if  @O_iErrorState <> 0 begin  if @tTransaction = 1  rollback transaction  end else if @tTransaction = 1  commit transaction  return     
GO
GRANT EXECUTE ON  [dbo].[glpVerifyAccountNumber] TO [DYNGRP]
GO

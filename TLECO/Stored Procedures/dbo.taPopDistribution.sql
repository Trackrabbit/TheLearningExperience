SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopDistribution]  @I_vPOPTYPE smallint,    @I_vPOPRCTNM char(17),     @I_vSEQNUMBR int = 0,     @I_vACTINDX int = 0,    @I_vACTNUMST varchar(75) = '',   @I_vCRDTAMNT numeric(19,5) = 0,   @I_vDEBITAMT numeric(19,5) = 0,   @I_vDistRef char (30) = '',   @I_vDISTTYPE smallint,     @I_vVENDORID char(15),    @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @CURNCYID char(15),  @CURRNIDX int,  @DECPLCUR tinyint,  @DOCDATE datetime,  @DTAREF char(25),  @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @MCINSTALLED smallint,  @ACCTENTR tinyint  select  @CURNCYID = '',  @CURRNIDX = 0,  @DECPLCUR = 2,  @DOCDATE = '',  @DTAREF = '',  @iStatus = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @O_iErrorState = 0,  @MCINSTALLED = 1  exec @iStatus = taPopDistributionPre  @I_vPOPTYPE output,  @I_vPOPRCTNM output,  @I_vSEQNUMBR output,  @I_vACTINDX output,  @I_vACTNUMST output,  @I_vCRDTAMNT output,  @I_vDEBITAMT output,  @I_vDistRef output,  @I_vDISTTYPE output,  @I_vVENDORID output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 6640    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPTYPE is null or  @I_vPOPRCTNM is null or  @I_vSEQNUMBR is null or  @I_vACTINDX is null or  @I_vACTNUMST is null or  @I_vCRDTAMNT is null or  @I_vDEBITAMT is null or  @I_vDistRef is null or  @I_vDISTTYPE is null or  @I_vVENDORID is null or  @I_vRequesterTrx is null) begin  select @O_iErrorState = 9160    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (  @I_vPOPRCTNM = '' or  @I_vVENDORID = '') begin  select @O_iErrorState = 9161     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRequesterTrx not in (0,1)) begin  select @O_iErrorState = 9162     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vPOPRCTNM = upper(@I_vPOPRCTNM),  @I_vVENDORID = upper(@I_vVENDORID)  select @CURNCYID = CURNCYID from PM00200 (nolock) where VENDORID = @I_vVENDORID  if (@CURNCYID <> '') begin  select @CURRNIDX = CURRNIDX, @DECPLCUR = (DECPLCUR - 1) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = FUNLCURR, @CURRNIDX = FUNCRIDX from MC40000 (nolock)  select @DECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end  if (@I_vSEQNUMBR <= 0) begin  select @I_vSEQNUMBR = isnull(max(SEQNUMBR),0) + 16384 from POP10390 (nolock) where POPRCTNM = @I_vPOPRCTNM end  if (@I_vPOPTYPE not in (1,2,3)) begin  select @O_iErrorState = 9163     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPTYPE = 1 and @I_vDISTTYPE not in (1,2,3,4,5,6,7,8,9,13,14,15,16,17,18,19,20) or  @I_vPOPTYPE = 2 and @I_vDISTTYPE not in (1,2,3,4,5,6,7,8,9) or  @I_vPOPTYPE = 3 and @I_vDISTTYPE not in (1,2,3,4,5,6,7,8,13,14,15,16,17,18,19,20)) begin  select @O_iErrorState = 9164     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vACTNUMST <> '') begin  select @I_vACTINDX = 0  select @I_vACTINDX = ACTINDX from GL00105 (nolock) where ACTNUMST = @I_vACTNUMST  if (@I_vACTINDX = 0)  begin  select @O_iErrorState = 9165     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if not exists(select 1 from GL00105 (nolock) where ACTINDX = @I_vACTINDX)  begin  select @O_iErrorState = 9166     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  select @ACCTENTR = ACCTENTR from GL00100 (nolock) where ACTINDX = @I_vACTINDX  if (@ACCTENTR = 0) begin  select @O_iErrorState = 9566     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDEBITAMT > 0) and (@I_vCRDTAMNT > 0)) begin  select @O_iErrorState = 9167     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vDEBITAMT < 0) or (@I_vCRDTAMNT < 0)) begin  select @O_iErrorState = 9168     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vDEBITAMT = 0) and (@I_vCRDTAMNT = 0)) begin  select @O_iErrorState = 9169     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (not exists (select 1 from PM00200 (nolock) where VENDORID = @I_vVENDORID)) begin  select @O_iErrorState = 9170     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists (select 1 from POP10390 (nolock) where POPRCTNM = @I_vPOPRCTNM and SEQNUMBR = @I_vSEQNUMBR) begin  select @O_iErrorState = 9171     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 9172    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if ( (not exists(select top 1 CURNCYID from IV00105 (nolock) where CURNCYID <> '')) and  (not exists(select top 1 CURNCYID from CM00100 (nolock) where CURNCYID <> ''))) begin  select @MCINSTALLED = 0 end  insert POP10390  (  POPRCTNM,  SEQNUMBR,  ACTINDX,  CRDTAMNT,  ORCRDAMT,  DEBITAMT,  ORDBTAMT,  DistRef,  DISTTYPE,  TRXSORCE,  CURRNIDX,  XCHGRATE,  VENDORID,  CURNCYID,  RATETPID,  EXGTBLID,  EXCHDATE,  TIME1,  RATECALC,  DENXRATE,  MCTRXSTT  )  select  @I_vPOPRCTNM,   @I_vSEQNUMBR,   @I_vACTINDX,   @I_vCRDTAMNT,   @I_vCRDTAMNT,   @I_vDEBITAMT,   @I_vDEBITAMT,   @I_vDistRef,   @I_vDISTTYPE,   '',    case    when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  0,    @I_vVENDORID,   case    when @MCINSTALLED = 1  then @CURNCYID  else ''  end,  '',    '',    '',    '',    0,    0,    0   if (@@error <> 0) begin  select @O_iErrorState = 9173    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if exists (select 1 from DTA00300 (nolock) where ACTINDX = @I_vACTINDX) begin  exec @iStatus = taMdaInsert  @I_vDOCNUMBR = @I_vPOPRCTNM,  @I_vRMDTYPAL = 0,  @I_vDTASERIES = 12,  @I_vACTINDX = @I_vACTINDX,  @I_vSEQNUMBR = @I_vSEQNUMBR,  @I_vDEBITAMT = @I_vDEBITAMT,  @I_vCRDTAMNT = @I_vCRDTAMNT,  @I_vTRXDATE = '',  @I_vDECPLCUR = @DECPLCUR,  @I_vUpdated = 0,  @O_iErrorState  = @O_iErrorState output,  @oErrString  = @oErrString output  if ((@O_iErrorState <> 0) or (@@error <> 0) or (@iStatus <> 0))  begin  select @O_iErrorState = 9174    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taPopDistributionPost  @I_vPOPTYPE,  @I_vPOPRCTNM,  @I_vSEQNUMBR,  @I_vACTINDX,  @I_vACTNUMST,  @I_vCRDTAMNT,  @I_vDEBITAMT,  @I_vDistRef,  @I_vDISTTYPE,  @I_vVENDORID,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus = 0) and (@iError <> 0)) begin  select @iStatus = @iError end if ((@iStatus <> 0) or (@iCustomState <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 7049    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 7050    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopDistribution] TO [DYNGRP]
GO

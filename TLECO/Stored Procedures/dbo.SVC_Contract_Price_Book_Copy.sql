SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE Procedure [dbo].[SVC_Contract_Price_Book_Copy] (@PRICSHED char (11),  @PRICSHEDTemp char (11),  @PRSCHDSCTemp char (30),  @ITMCLSCD char (11),  @ITMCLSCDTemp char (11),  @ITEMNMBR char (31),  @ITEMNMBRTemp char (31),  @CUSTCLAS char (15),  @CUSTCLASTemp char (15),  @CUSTNMBR char (15),  @CUSTNMBRTemp char (15),  @COPYOPTIONS bit,  @Base_Price_List integer,  @Base_Cost_List integer,  @Base_Price_Adj1 numeric(19,5),  @Base_Price_Adj2 numeric(19,5),  @Base_Cost_Adj1 numeric(19,5),  @Base_Cost_Adj2 numeric(19,5)) as declare @CHECKUNITCOST numeric (19,5), @CHECKUNITPRCE NUMERIC (19,5), @NewPriceBook tinyint, @UnitPrice numeric (19,5), @CHECKITMCLSCD CHAR(11),  @CHECKITEMNMBR char (31),@CHECKCUSTCLAS char (15), @CHECKCUSTNMBR  char (15) select @NewPriceBook = 0  if not exists (select * from SVC00650 where PRICSHED = @PRICSHEDTemp) begin  insert SVC00650  values (@PRICSHEDTemp, @PRSCHDSCTemp) end if @PRICSHED = @PRICSHEDTemp  begin  update SVC00654   set UNITPRCE = case  when @Base_Price_List = 1 then (UNITPRCE * (1+(@Base_Price_Adj1/10000)))  when @Base_Price_List = 2 then (UNITPRCE - (UNITPRCE *(@Base_Price_Adj1/10000)))  when @Base_Price_List = 3 then UNITPRCE + @Base_Price_Adj2  when @Base_Price_List = 4 then UNITPRCE - @Base_Price_Adj2  end,   UNITCOST = case  when @Base_Cost_List = 1 then (UNITCOST * (1+(@Base_Cost_Adj1/10000)))  when @Base_Cost_List = 2 then (UNITCOST - (UNITCOST *(@Base_Cost_Adj1/10000)))  when @Base_Cost_List = 3 then UNITCOST + @Base_Cost_Adj2  when @Base_Cost_List = 4 then UNITCOST - @Base_Cost_Adj2  end   where  (PRICSHED = @PRICSHED) and  (( @ITMCLSCDTemp != '' and ITMCLSCD >= @ITMCLSCD and ITMCLSCD <= @ITMCLSCDTemp) or  (@ITEMNMBRTemp != '' and ITEMNMBR >= @ITEMNMBR and ITEMNMBR <= @ITEMNMBRTemp) or  ( @CUSTCLASTemp != '' and CUSTCLAS >= @CUSTCLAS and CUSTCLAS <= @CUSTCLASTemp) or  (@CUSTNMBRTemp != '' and CUSTNMBR >= @CUSTNMBR and CUSTNMBR <= @CUSTNMBRTemp)) end else  BEGIN declare  LineCheck CURSOR for select ITMCLSCD,ITEMNMBR,CUSTCLAS,CUSTNMBR,UNITCOST,UNITPRCE from SVC00654   where (PRICSHED = @PRICSHED) and  ((@ITMCLSCDTemp != '' and ITMCLSCD >= @ITMCLSCD and ITMCLSCD <= @ITMCLSCDTemp) or  (@ITEMNMBRTemp != '' and ITEMNMBR >= @ITEMNMBR and ITEMNMBR <= @ITEMNMBRTemp) or  (@CUSTCLASTemp != '' and CUSTCLAS >= @CUSTCLAS and CUSTCLAS <= @CUSTCLASTemp) or  (@CUSTNMBRTemp != '' and CUSTNMBR >= @CUSTNMBR and CUSTNMBR <= @CUSTNMBRTemp)) open LineCheck fetch next from LineCheck into  @CHECKITMCLSCD,@CHECKITEMNMBR,@CHECKCUSTCLAS,@CHECKCUSTNMBR,@CHECKUNITCOST,@CHECKUNITPRCE while (@@FETCH_status <> -1) begin  if not exists(select * from  SVC00654   where (PRICSHED = @PRICSHEDTemp) and  ITMCLSCD = @CHECKITMCLSCD and  ITEMNMBR = @CHECKITEMNMBR and  CUSTCLAS = @CHECKCUSTCLAS and   CUSTNMBR = @CHECKCUSTNMBR) BEGIN   insert SVC00654 (PRICSHED,ITMCLSCD,ITEMNMBR,CUSTCLAS,CUSTNMBR,UNITCOST,UNITPRCE)  values (@PRICSHEDTemp,@CHECKITMCLSCD,@CHECKITEMNMBR,@CHECKCUSTCLAS,  @CHECKCUSTNMBR,  case  when @Base_Cost_List = 1 then (@CHECKUNITCOST * (1+(@Base_Cost_Adj1/10000)))  when @Base_Cost_List = 2 then (@CHECKUNITCOST - (@CHECKUNITCOST *(@Base_Cost_Adj1/10000)))  when @Base_Cost_List = 3 then @CHECKUNITCOST + @Base_Cost_Adj2  when @Base_Cost_List = 4 then @CHECKUNITCOST - @Base_Cost_Adj2  end,   case  when @Base_Price_List = 1 then (@CHECKUNITPRCE * (1+(@Base_Price_Adj1/10000)))  when @Base_Price_List = 2 then (@CHECKUNITPRCE - (@CHECKUNITPRCE *(@Base_Price_Adj1/10000)))  when @Base_Price_List = 3 then @CHECKUNITPRCE + @Base_Price_Adj2  when @Base_Price_List = 4 then @CHECKUNITPRCE - @Base_Price_Adj2  end)  end else  begin  update SVC00654   set UNITCOST = case  when @Base_Cost_List = 1 then (@CHECKUNITCOST * (1+(@Base_Cost_Adj1/10000)))  when @Base_Cost_List = 2 then (@CHECKUNITCOST - (@CHECKUNITCOST *(@Base_Cost_Adj1/10000)))   when @Base_Cost_List = 3 then @CHECKUNITCOST + @Base_Cost_Adj2  when @Base_Cost_List = 4 then @CHECKUNITCOST - @Base_Cost_Adj2  end,   UNITPRCE = case  when @Base_Price_List = 1 then (@CHECKUNITPRCE * (1+(@Base_Price_Adj1/10000)))  when @Base_Price_List = 2 then (@CHECKUNITPRCE - (@CHECKUNITPRCE *(@Base_Price_Adj1/10000)))  when @Base_Price_List = 3 then @CHECKUNITPRCE + @Base_Price_Adj2  when @Base_Price_List = 4 then @CHECKUNITPRCE - @Base_Price_Adj2  end where (PRICSHED = @PRICSHEDTemp) and  ITMCLSCD = @CHECKITMCLSCD and  ITEMNMBR = @CHECKITEMNMBR and  CUSTCLAS = @CHECKCUSTCLAS and   CUSTNMBR = @CHECKCUSTNMBR  end  fetch next from LineCheck into @CHECKITMCLSCD,@CHECKITEMNMBR,@CHECKCUSTCLAS,  @CHECKCUSTNMBR,@CHECKUNITCOST,@CHECKUNITPRCE end  deallocate LineCheck END  if  @COPYOPTIONS = 1      begin  declare @NEWUNITPRCT numeric(19, 5) ,  @NEWContract_Price_Percent smallint ,  @NEWOPTTYPE char(11) ,  @NEWContract_Cumulative_Pric tinyint ,  @NEWITMCLSCD char(11) ,  @NEWUNITPRCE numeric(19, 5) ,  @NEWUNITCOST numeric(19, 5) ,  @NEWITEMNMBR char(31) ,  @NEWCUSTCLAS char(15),  @NEWCUSTNMBR char(15) declare  LineOptions INSENSITIVE CURSOR for select UNITPRCT,Contract_Price_Percent,OPTTYPE,Contract_Cumulative_Pric,ITMCLSCD,  UNITPRCE,UNITCOST,ITEMNMBR,CUSTCLAS,CUSTNMBR  from SVC00651   where (PRICSHED = @PRICSHED) and  ((@ITMCLSCDTemp != '' and ITMCLSCD >= @ITMCLSCD and ITMCLSCD <= @ITMCLSCDTemp) or  (@ITEMNMBRTemp != '' and ITEMNMBR >= @ITEMNMBR and ITEMNMBR <= @ITEMNMBRTemp) or  (@CUSTCLASTemp != '' and CUSTCLAS >= @CUSTCLAS and CUSTCLAS <= @CUSTCLASTemp) or  (@CUSTNMBRTemp != '' and CUSTNMBR >= @CUSTNMBR and CUSTNMBR <= @CUSTNMBRTemp)) open LineOptions fetch next from LineOptions into  @NEWUNITPRCT,@NEWContract_Price_Percent,@NEWOPTTYPE,@NEWContract_Cumulative_Pric,  @NEWITMCLSCD, @NEWUNITPRCE,@NEWUNITCOST,@NEWITEMNMBR,@NEWCUSTCLAS,@NEWCUSTNMBR while (@@FETCH_status <> -1) begin if not exists(select * from  SVC00651 where (PRICSHED = @PRICSHEDTemp) and  UNITPRCT = @NEWUNITPRCT and  Contract_Price_Percent = @NEWContract_Price_Percent  and  OPTTYPE = @NEWOPTTYPE and  Contract_Cumulative_Pric = @NEWContract_Cumulative_Pric and  ITMCLSCD = @NEWITMCLSCD and  UNITPRCE = @NEWUNITPRCE and  UNITCOST = @NEWUNITCOST and  ITEMNMBR = @NEWITEMNMBR and  CUSTCLAS = @NEWCUSTCLAS and  CUSTNMBR = @NEWCUSTNMBR)  insert SVC00651  (UNITPRCT,Contract_Price_Percent,OPTTYPE,Contract_Cumulative_Pric,ITMCLSCD,  UNITPRCE,UNITCOST,ITEMNMBR,CUSTCLAS,CUSTNMBR,PRICSHED)  values(@NEWUNITPRCT,@NEWContract_Price_Percent,@NEWOPTTYPE,@NEWContract_Cumulative_Pric,  @NEWITMCLSCD, @NEWUNITPRCE,@NEWUNITCOST,@NEWITEMNMBR,@NEWCUSTCLAS,@NEWCUSTNMBR,@PRICSHEDTemp)  fetch next from LineOptions into @NEWUNITPRCT,@NEWContract_Price_Percent,@NEWOPTTYPE,@NEWContract_Cumulative_Pric,  @NEWITMCLSCD, @NEWUNITPRCE,@NEWUNITCOST,@NEWITEMNMBR,@NEWCUSTCLAS,@NEWCUSTNMBR end  deallocate LineOptions END   
GO
GRANT EXECUTE ON  [dbo].[SVC_Contract_Price_Book_Copy] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[svcGetCancelProratedDue] (  @CONSTS                 smallint,  @CONTNBR                char(11),  @LNSEQNBR               numeric(19,5),  @ADRSCODE char(15),  @CANCELDATE             datetime,  @AmountDue numeric(19,5) output,  @OrigAmountDue numeric(19,5) output )  AS  declare @DR                     numeric(19,5),   @OrigDR                 numeric(19,2),  @ContractLineStartDate  datetime,  @ContractLineEndDate   datetime,  @CoverageStartDate datetime,  @CoverageEndDate datetime,  @LINECOUNTER            numeric(19,2),  @NumberOfDays           numeric(19,2),  @LIABILITY              smallint,  @TOTAL                  numeric(19,2),  @ORIGTOTAL              numeric(19,2),  @BP                     integer,  @msg                    varchar(120),  @monthsavail            integer,  @tempday                integer,  @MA                     numeric(19,2),  @NEXTBILLDATE           datetime,  @BILLAMOUNT             numeric(19,2),  @CNUMOFINV              integer,  @MAC                    numeric(19,2),  @MDIV                   integer,  @LIABILITYAMOUNT        numeric(19,2) ,  @WholeCredits           numeric(19,2),  @DiscountPercent        smallint,  @DiscountAmount         numeric(19,2),  @NewDocumentAmount      numeric(19,2),  @OrigNewDocumentAmount  numeric(19,2),  @LINECREDIT             numeric(19,2),  @LINEBILLED             numeric(19,2),  @OrigLINEBILLED         numeric(19,2),  @OrigDiscountAmount     numeric(19,2),  @OrigWholeCredits       numeric(19,2),  @ORIGBILLAMOUNT         numeric(19,2),  @ORIGLIABILITYAMOUNT    numeric(19,2),  @ORIGLIABMONTHAMT       numeric(19,2),  @ErrorCondition         integer,  @UserID                 char(30),   @I_sRateCalcMethod      smallint ,           @I_sViewMode            smallint,            @I_nExchangeRate        numeric(15,7),       @I_nDenomExchangeRate   numeric(15,7),       @I_sMCTrxState          smallint,            @I_sDecimalPlaces       smallint,            @O_iErrorState          int,  @OrigDistAmount         numeric(19,2),  @DistAmount             numeric(19,2),  @BillCycle smallint,  @Rate numeric(19,5),  @OrigTotalInvoiced      numeric(19,2), @OrigDiffAmount numeric(19,2),  @TotalInvoiced          numeric(19,2), @DiffAmount numeric(19,2) declare @Posted tinyint,  @DexRowID int,  @Evergreen tinyint  select  @I_sViewMode = 3, @UserID = SUSER_SNAME(), @LINECREDIT = 0.0 select @Evergreen = SVC_Evergreen_Contract from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   if @ADRSCODE > ''  Begin  select  @LIABILITY = SVC_Liability_Type,  @BillCycle = BILCYC,  @ContractLineStartDate = STRTDATE,  @ContractLineEndDate = ENDDATE,  @DiscountPercent = DSCPCTAM,  @TOTAL          = TOTAL,  @ORIGTOTAL = ORIGTOTAL,  @I_sRateCalcMethod = RATECALC,   @I_sViewMode = 3,            @I_sDecimalPlaces = DECPLACS,   @I_nDenomExchangeRate = DENXRATE,   @I_nExchangeRate = XCHGRATE,  @I_sMCTrxState = MCTRXSTT  from SVC00608 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and ADRSCODE = @ADRSCODE   select @OrigTotalInvoiced = sum(ORIGPSTDAMNT), @TotalInvoiced = sum(PSTDAMNT)  from SVC00603 left join SVC00601 on SVC00601.CONSTS = SVC00603.CONSTS and SVC00601.CONTNBR = SVC00603.CONTNBR and SVC00601.LNSEQNBR = SVC00603.LNSEQNBR  left join SVC00608 on SVC00601.CONSTS = SVC00608.CONSTS and SVC00601.CONTNBR = SVC00608.CONTNBR and SVC00601.ADRSCODE = SVC00608.ADRSCODE  where SVC00603.CONSTS = @CONSTS and SVC00603.CONTNBR = @CONTNBR and SVC00603.POSTED = 1 and SVC00608.ADRSCODE = @ADRSCODE   select @OrigTotalInvoiced = isnull(@OrigTotalInvoiced,0), @TotalInvoiced = isnull(@TotalInvoiced,0)   select @NumberOfDays = DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate) + 1.0  select @OrigDR = @ORIGTOTAL / @NumberOfDays, @DR = @TOTAL/@NumberOfDays  select @LINECOUNTER = DATEDIFF(dd,@ContractLineStartDate,@CANCELDATE)+1    if @ContractLineStartDate = @CANCELDATE  select @LINECOUNTER = 0    select @Rate = @LINECOUNTER / (DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate)+1 )   if @LIABILITY > 1  select @LIABILITYAMOUNT = sum(Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigTransactionAmount)  from SVC00604 left join SVC00601 on SVC00601.CONSTS = SVC00604.CONSTS and SVC00601.CONTNBR = SVC00604.CONTNBR and SVC00601.LNSEQNBR = SVC00604.LNSEQNBR  left join SVC00608 on SVC00601.CONSTS = SVC00608.CONSTS and SVC00601.CONTNBR = SVC00608.CONTNBR and SVC00601.ADRSCODE = SVC00608.ADRSCODE  where SVC00604.CONSTS = @CONSTS and SVC00604.CONTNBR = @CONTNBR and SVC00604.Source_Trx_Document_Type <> 'CAL' and SVC00608.ADRSCODE = @ADRSCODE  if @LIABILITY > 1 and @LIABILITYAMOUNT > 0 and @TOTAL > 0   Begin   select @NewDocumentAmount = @TOTAL - @LIABILITYAMOUNT ,  @OrigNewDocumentAmount = @ORIGTOTAL - @ORIGLIABILITYAMOUNT  select @NewDocumentAmount = (@NewDocumentAmount * @Rate) + @LIABILITYAMOUNT,  @OrigNewDocumentAmount = (@OrigNewDocumentAmount * @Rate) + @ORIGLIABILITYAMOUNT   End   else  select @NewDocumentAmount = (@TOTAL * @Rate) , @OrigNewDocumentAmount = (@ORIGTOTAL * @Rate)   if (select ENDDATE from SVC00608 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and ADRSCODE = @ADRSCODE) = @CANCELDATE  select @NewDocumentAmount = @TOTAL, @OrigNewDocumentAmount = @ORIGTOTAL    select @AmountDue = isnull((@NewDocumentAmount - @TotalInvoiced),0),  @OrigAmountDue = isnull((@OrigNewDocumentAmount - @OrigTotalInvoiced),0)  End  ELSE if @LNSEQNBR > 0  Begin  select  @LIABILITY = SVC_Liability_Type,  @BillCycle = BILCYC,  @ContractLineStartDate = STRTDATE,  @ContractLineEndDate = ENDDATE,  @DiscountPercent = DSCPCTAM,  @TOTAL          = TOTAL,  @ORIGTOTAL = ORIGTOTAL,  @I_sRateCalcMethod = RATECALC,   @I_sViewMode = 3,            @I_sDecimalPlaces = DECPLACS,   @I_nDenomExchangeRate = DENXRATE,   @I_nExchangeRate = XCHGRATE,  @I_sMCTrxState = MCTRXSTT  from SVC00601 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR   select @OrigTotalInvoiced = sum(ORIGPSTDAMNT), @TotalInvoiced = sum(PSTDAMNT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR and POSTED = 1  select @OrigTotalInvoiced = isnull(@OrigTotalInvoiced,0), @TotalInvoiced = isnull(@TotalInvoiced,0)   if not exists(select * from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR)  select @I_nExchangeRate = XCHGRATE from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   select @NumberOfDays = DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate) + 1.0   select @OrigDR = @ORIGTOTAL / @NumberOfDays, @DR = @TOTAL/@NumberOfDays   select @LINECOUNTER = DATEDIFF(dd,@ContractLineStartDate,@CANCELDATE)+1    if @ContractLineStartDate = @CANCELDATE  select @LINECOUNTER = 0    select @Rate = @LINECOUNTER / (DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate)+1 )   if @LIABILITY > 1  select @LIABILITYAMOUNT = sum(Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  and Source_Trx_Document_Type <> 'CAL'   if @Evergreen = 1   begin  select @DR = isnull(max(SVC_Daily_Rate),0) from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and LNSEQNBR = @LNSEQNBR  exec SVC_Convert_Amount @I_sRateCalcMethod, 3,@I_nExchangeRate,  @I_nDenomExchangeRate,@I_sMCTrxState,@I_sDecimalPlaces,  @DR, @OrigDR OUTPUT, @O_iErrorState OUTPUT    select @NewDocumentAmount = (@DR * @LINECOUNTER), @OrigNewDocumentAmount = (@OrigDR * @LINECOUNTER)  end  else  Begin  if @LIABILITY > 1 and @LIABILITYAMOUNT > 0 and @TOTAL > 0   Begin   select @NewDocumentAmount = (@TOTAL * @Rate),  @OrigNewDocumentAmount = (@ORIGTOTAL * @Rate)  if @NewDocumentAmount < @LIABILITYAMOUNT   select @NewDocumentAmount = @LIABILITYAMOUNT, @OrigNewDocumentAmount = @ORIGLIABILITYAMOUNT   if (select ENDDATE from SVC00601 where CONSTS=@CONSTS and CONTNBR = @CONTNBR and LNSEQNBR =@LNSEQNBR) = @CANCELDATE  select @NewDocumentAmount = @TOTAL, @OrigNewDocumentAmount = @ORIGTOTAL    End  else  select @NewDocumentAmount = (@TOTAL * @Rate), @OrigNewDocumentAmount = (@ORIGTOTAL * @Rate)  End   select @AmountDue = isnull((@NewDocumentAmount - @TotalInvoiced),0),  @OrigAmountDue = isnull((@OrigNewDocumentAmount - @OrigTotalInvoiced),0) End  ELSE   Begin   select  @LIABILITY = SVC_Liability_Type,  @BillCycle = BILCYC,  @ContractLineStartDate = STRTDATE,  @ContractLineEndDate = ENDDATE,  @DiscountPercent = DSCPCTAM,  @TOTAL          = TOTAL,  @ORIGTOTAL = ORIGTOTAL,  @I_sRateCalcMethod = RATECALC,   @I_sViewMode = 3,            @I_sDecimalPlaces = DECPLACS,   @I_nDenomExchangeRate = DENXRATE,   @I_nExchangeRate = XCHGRATE,  @I_sMCTrxState = MCTRXSTT  from SVC00600 where CONSTS = @CONSTS and CONTNBR = @CONTNBR    select @OrigTotalInvoiced = sum(ORIGPSTDAMNT), @TotalInvoiced = sum(PSTDAMNT)  from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR and POSTED = 1  select @OrigTotalInvoiced = isnull(@OrigTotalInvoiced,0), @TotalInvoiced = isnull(@TotalInvoiced,0)   select @NumberOfDays = DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate) + 1.0  select @OrigDR = @ORIGTOTAL / @NumberOfDays, @DR = @TOTAL/@NumberOfDays  select @LINECOUNTER = DATEDIFF(dd,@ContractLineStartDate,@CANCELDATE)+1    if @ContractLineStartDate = @CANCELDATE  select @LINECOUNTER = 0    select @Rate = @LINECOUNTER / (DATEDIFF(dd,@ContractLineStartDate,@ContractLineEndDate)+1 )   if @Evergreen = 1   begin  select @CoverageEndDate = isnull(max(SVC_Coverage_End_Date),@ContractLineEndDate),  @CoverageStartDate = isnull(min(SVC_Coverage_Start_Date), @ContractLineStartDate)   from SVC00603 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   select @NumberOfDays = DATEDIFF(dd,@CoverageStartDate,@CoverageEndDate) + 1.0  if @NumberOfDays = 0 or @NumberOfDays is null  select @NumberOfDays = 1  select @NewDocumentAmount = (@TOTAL * @LINECOUNTER/@NumberOfDays ) ,  @OrigNewDocumentAmount = (@ORIGTOTAL * @LINECOUNTER/@NumberOfDays)   end   else  begin  if @LIABILITY > 1  select @LIABILITYAMOUNT = sum(Transaction_Amount), @ORIGLIABILITYAMOUNT = sum(OrigTransactionAmount)  from SVC00604 where CONSTS = @CONSTS and CONTNBR = @CONTNBR   and Source_Trx_Document_Type <> 'CAL'  if @LIABILITY > 1 and @LIABILITYAMOUNT > 0 and @TOTAL > 0   Begin   select @NewDocumentAmount = (@TOTAL * @Rate),  @OrigNewDocumentAmount = (@ORIGTOTAL * @Rate)  if @NewDocumentAmount < @LIABILITYAMOUNT   select @NewDocumentAmount = @LIABILITYAMOUNT, @OrigNewDocumentAmount = @ORIGLIABILITYAMOUNT   End   else  select @NewDocumentAmount = (@TOTAL * @Rate) , @OrigNewDocumentAmount = (@ORIGTOTAL * @Rate)   if (select ENDDATE from SVC00600 where CONSTS=@CONSTS and CONTNBR = @CONTNBR ) = @CANCELDATE  select @NewDocumentAmount = @TOTAL, @OrigNewDocumentAmount = @ORIGTOTAL    end   select @AmountDue = isnull((@NewDocumentAmount - @TotalInvoiced),0),  @OrigAmountDue = isnull((@OrigNewDocumentAmount - @OrigTotalInvoiced),0)  End return   
GO
GRANT EXECUTE ON  [dbo].[svcGetCancelProratedDue] TO [DYNGRP]
GO

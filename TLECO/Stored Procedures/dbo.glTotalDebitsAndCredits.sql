SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[glTotalDebitsAndCredits] @I_tOpenOrHistory tinyint  = NULL, @I_sHistoryYearStart smallint = NULL, @I_sHistoryYearEnd smallint =  NULL, @I_iJournalEntry int  = NULL, @O_mDebitTotal numeric(19,5) = NULL output, @O_mCreditTotal numeric(19,5) = NULL output, @I_sPOST_ACCT smallint = NULL, @I_sPOST_ALLOC_ACCT smallint = NULL, @I_iSQLSessionID int  = NULL, @I_sViewMode smallint = NULL, @I_sRateCalcMethod smallint = NULL, @I_nExchangeRate numeric(15,7) =  NULL, @I_sRptDecPlaces smallint = NULL, @I_mStartRange numeric(19,5) = NULL output,  @I_mEndRange numeric(19,5) = NULL output,  @O_iErrorState int  = NULL output  as  if @I_tOpenOrHistory is NULL or  @I_sHistoryYearStart is NULL  or  @I_sHistoryYearEnd is NULL  or  @I_iJournalEntry is NULL or  @I_sPOST_ACCT is NULL or  @I_sPOST_ALLOC_ACCT is NULL or  @I_iSQLSessionID is NULL or  @I_sViewMode is NULL or  @I_sRateCalcMethod is NULL or  @I_nExchangeRate is NULL or  @I_sRptDecPlaces is NULL  begin  select  @O_iErrorState = - 20453  return end  select  @O_iErrorState  = 0,  @O_mDebitTotal = 0.00,  @O_mCreditTotal = 0.00  if @I_tOpenOrHistory = 1   begin  if @I_sViewMode = 1   begin  select  @O_mDebitTotal = sum(YTD.DEBITAMT),  @O_mCreditTotal = sum(YTD.CRDTAMNT)  from  GL20000 YTD,  GL00100 MSTR  where  (YTD.JRNENTRY = @I_iJournalEntry and  YTD.ACTINDX = MSTR.ACTINDX and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end   else if @I_sViewMode = 2   begin   select  @O_mDebitTotal = sum(YTD.ORDBTAMT),  @O_mCreditTotal = sum(YTD.ORCRDAMT)  from  GL20000 YTD,  GL00100 MSTR  where  (YTD.JRNENTRY = @I_iJournalEntry and  YTD.ACTINDX = MSTR.ACTINDX and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end     else if @I_sViewMode = 3   begin   select  @O_mDebitTotal =   case @I_sRateCalcMethod   when 1   then round(sum(YTD.DEBITAMT) * @I_nExchangeRate,@I_sRptDecPlaces)  else   round(sum(YTD.DEBITAMT)/ @I_nExchangeRate,@I_sRptDecPlaces)   end,   @O_mCreditTotal =   case @I_sRateCalcMethod   when 1   then round(sum(YTD.CRDTAMNT) * @I_nExchangeRate,@I_sRptDecPlaces)  else   round(sum(YTD.CRDTAMNT) / @I_nExchangeRate,@I_sRptDecPlaces)  end  from   GL20000 YTD,  GL00100 MSTR  where  (YTD.JRNENTRY = @I_iJournalEntry and  YTD.ACTINDX = MSTR.ACTINDX and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end     end else if @I_tOpenOrHistory = 3   begin   if @I_sViewMode = 1   begin  select  @O_mDebitTotal = sum(Work.DEBITAMT),  @O_mCreditTotal = sum(Work.CRDTAMNT)  from  GL10001 Work,  GL00100 MSTR,  GL10000   where  (Work.JRNENTRY = @I_iJournalEntry and  Work.ACTINDX = MSTR.ACTINDX and  Work.JRNENTRY = GL10000.JRNENTRY and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end   else if @I_sViewMode = 2   begin   select  @O_mDebitTotal = sum(Work.ORDBTAMT),  @O_mCreditTotal = sum(Work.ORCRDAMT)  from  GL10001 Work,  GL00100 MSTR,  GL10000   where  (Work.JRNENTRY = @I_iJournalEntry and  Work.ACTINDX = MSTR.ACTINDX and  Work.JRNENTRY = GL10000.JRNENTRY and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end     else if @I_sViewMode = 3   begin   select  @O_mDebitTotal =   case @I_sRateCalcMethod   when 1   then round(sum(Work.DEBITAMT) * @I_nExchangeRate,@I_sRptDecPlaces)  else   round(sum(Work.DEBITAMT)/ @I_nExchangeRate,@I_sRptDecPlaces)   end,   @O_mCreditTotal =   case @I_sRateCalcMethod   when 1   then round(sum(Work.CRDTAMNT) * @I_nExchangeRate,@I_sRptDecPlaces)  else   round(sum(Work.CRDTAMNT) / @I_nExchangeRate,@I_sRptDecPlaces)  end  from   GL10001 Work,  GL00100 MSTR,  GL10000   where  (Work.JRNENTRY = @I_iJournalEntry and  Work.ACTINDX = MSTR.ACTINDX and  Work.JRNENTRY = GL10000.JRNENTRY and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end    end else   begin  if @I_sViewMode = 1   begin  select  @O_mDebitTotal = sum(HIST.DEBITAMT),  @O_mCreditTotal = sum(HIST.CRDTAMNT)  from  GL30000 HIST,  GL00100 MSTR  where  (HIST.JRNENTRY = @I_iJournalEntry and  HIST.HSTYEAR >= @I_sHistoryYearStart and  HIST.HSTYEAR <= @I_sHistoryYearEnd and  HIST.ACTINDX = MSTR.ACTINDX and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end  else if @I_sViewMode = 2   begin   select  @O_mDebitTotal = sum(HIST.ORDBTAMT),  @O_mCreditTotal = sum(HIST.ORCRDAMT)  from  GL30000 HIST,  GL00100 MSTR  where  (HIST.JRNENTRY = @I_iJournalEntry and  HIST.HSTYEAR >= @I_sHistoryYearStart and  HIST.HSTYEAR <= @I_sHistoryYearEnd and  HIST.ACTINDX = MSTR.ACTINDX and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )  end     else if @I_sViewMode = 3   begin   select  @O_mDebitTotal =   case @I_sRateCalcMethod   when 1   then round(sum(HIST.DEBITAMT) * @I_nExchangeRate,@I_sRptDecPlaces)  else   round(sum(HIST.DEBITAMT)/ @I_nExchangeRate,@I_sRptDecPlaces)   end,   @O_mCreditTotal =   case @I_sRateCalcMethod   when 1   then round(sum(HIST.CRDTAMNT) * @I_nExchangeRate,@I_sRptDecPlaces)  else   round(sum(HIST.CRDTAMNT) / @I_nExchangeRate,@I_sRptDecPlaces)  end  from   GL30000 HIST,  GL00100 MSTR  where  (HIST.JRNENTRY = @I_iJournalEntry and  HIST.HSTYEAR >= @I_sHistoryYearStart and  HIST.HSTYEAR <= @I_sHistoryYearEnd and  HIST.ACTINDX = MSTR.ACTINDX and  (MSTR.ACCTTYPE = @I_sPOST_ACCT   or  MSTR.ACCTTYPE = @I_sPOST_ALLOC_ACCT )) and  (RCTRXSEQ  >=  @I_mStartRange and  RCTRXSEQ  <=  @I_mEndRange )   end      end  if @O_mDebitTotal is NULL begin  select  @O_mDebitTotal  = 0.00 end  if @O_mCreditTotal is NULL begin  select  @O_mCreditTotal  = 0.00 end  return    
GO
GRANT EXECUTE ON  [dbo].[glTotalDebitsAndCredits] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[aagUpdateoffSetAcctOpt]  @aaGLWorkHdrID   int,  @JRNENTRY int,  @aaGLWorkDistID int output,  @CURNCYID char(15),   @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime ,   @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,  @DECPLACS   smallint,   @CompanyID int,  @SqlSessionID int,  @BalAmt numeric(19,5),  @INTERID char(5),  @Post int,  @OFFINDX int  as begin  declare @amt  numeric(19,5),   @OFFACTYP smallint,  @SQNCLINE numeric(19,5),  @Flag smallint,  @Cnt int ,  @DEBITAMT numeric(19,5),  @CRDTAMNT numeric(19,5),  @ORDBTAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @ClassID int,  @aaBrowseType int,  @aaGLWorkAssignID int,  @OFFXVAR int,  @DistID int   Select @amt   =0,  @OFFACTYP  =0,  @SQNCLINE  =0,  @Flag  =0,  @Cnt   =0,  @DEBITAMT =0,  @CRDTAMNT =0,  @ORDBTAMT =0,  @ORCRDAMT =0,  @ClassID =0,  @aaBrowseType =0,  @aaGLWorkAssignID =0,  @OFFXVAR =0,  @DistID = 0  Select   @OFFACTYP= GL10100.OFFACTYP,  @SQNCLINE = GL10100.SQNCLINE, @OFFXVAR= GL10100.OFFXVAR, @amt =  sum(isnull(GL10101.TRXAMNT,0))  from GL10100, GL10101  where  GL10101.JRNENTRY = GL10100.JRNENTRY and  GL10101.JRNENTRY = @JRNENTRY and  GL10101.SQNCLINE >= 0  group by GL10100.OFFINDX, GL10100.OFFACTYP, GL10100.SQNCLINE, GL10100.OFFXVAR   if @Post =1   begin   if @BalAmt = 0  begin  set @BalAmt = @amt  end    end   if @BalAmt <> 0  begin   Select  @DEBITAMT = DEBITAMT, @CRDTAMNT = CRDTAMNT  from AAG10001  where aaGLWorkHdrID = @aaGLWorkHdrID and   aaGLWorkDistID > 0 and  aaOFFSETAcct  = 1   if @BalAmt < 0   begin  if @DEBITAMT <> abs(@BalAmt)  set @Cnt = 0   else   set @Cnt = 1   end   else if @BalAmt > 0  begin  if @CRDTAMNT <> abs(@BalAmt)   set @Cnt = 0   else   set @Cnt = 1   end   end   if  @Cnt = 0   begin  Select  @DistID = aaGLWorkDistID  from AAG10001  where  aaGLWorkHdrID = @aaGLWorkHdrID and   aaGLWorkDistID > 0 and aaOFFSETAcct = 1  exec aagGLWorkDistDelete @aaGLWorkHdrID, @DistID, 0   end   if  @BalAmt <> 0  and @Cnt = 0  begin  if @BalAmt < 0   begin  select  @DEBITAMT = abs(@BalAmt),  @CRDTAMNT = 0,  @ORDBTAMT = abs(@BalAmt) ,  @ORCRDAMT =0  end  if @BalAmt > 0  begin  select  @DEBITAMT = 0,  @CRDTAMNT = abs(@BalAmt),  @ORDBTAMT = 0,  @ORCRDAMT = abs(@BalAmt)  end   exec aagGetClassIDBrowseType @OFFINDX, @ClassID output, @aaBrowseType output    insert into AAG10001   (aaGLWorkHdrID,  aaGLWorkDistID,  INTERID ,  ACTINDX, ACCTTYPE ,  aaBrowseType, DECPLACS, FXDORVAR, DEBITAMT, CRDTAMNT, ORDBTAMT, ORCRDAMT,  CURNCYID,CURRNIDX, SQNCLINE, aaCustID, aaVendID, aaSiteID,   aaItemID, aaCopyStatus, aaWinWasOpen, aaOFFSETAcct, aaDistErrors,aaChangeDate, aaChangeTime )  values (@aaGLWorkHdrID, @aaGLWorkDistID ,@INTERID, @OFFINDX, @OFFACTYP,  @aaBrowseType,@DECPLACS, @OFFXVAR, @DEBITAMT, @CRDTAMNT, @ORDBTAMT, @ORCRDAMT,  @CURNCYID, @CURRNIDX, 1200.00000,  '', '', '', '', 8, 0, 1, 0,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108))    exec aagGLAssignUpdate @aaGLWorkHdrID, @aaGLWorkDistID,@aaGLWorkAssignID, @CompanyID, @ClassID, @SqlSessionID,@Flag  end  end     
GO
GRANT EXECUTE ON  [dbo].[aagUpdateoffSetAcctOpt] TO [DYNGRP]
GO

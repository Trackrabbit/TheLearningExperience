SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagProcessPOPRequisition]  @PONumber CHAR(17),  @POType SMALLINT,  @ORD INT,  @l_ErrorCode SMALLINT = NULL OUTPUT AS  BEGIN   DECLARE   @POPRequisitionNumber CHAR(17),  @aaSubLedgerHdrID INT,  @LNITMSEQ INT,  @OLDaaSubLedgerHdrID INT,  @OLDaaSubLedgerDistID INT,  @OLDaaSubLedgerAssignID INT,  @aaSubLedgerAssignID INT,  @aaSubLedgerDistID INT,  @ACTINDX INT,  @ClassID INT,  @OLDaaBrowseType SMALLINT,  @aaBrowseType SMALLINT,  @ORDBTAMT NUMERIC(19,7),  @DEBITAMT NUMERIC(19,7),  @UNITCOST NUMERIC(19,7),  @ORUNITCOST NUMERIC(19,7),  @QTYCOST NUMERIC(19,7),  @ORQTYCOST NUMERIC(19,7),  @RemainingDbtAmt NUMERIC(19,7),  @RemainingOrgDbtAmt NUMERIC(19,7),  @Flag TINYINT,  @AssignPercent INT,  @MaintReqHist INT,  @OStatus INT  SELECT @OLDaaSubLedgerHdrID = 0, @OLDaaSubLedgerDistID = 0, @Flag = 0, @OLDaaSubLedgerAssignID = 0, @UNITCOST = 0, @ORUNITCOST = 0,  @aaSubLedgerHdrID = aaSubLedgerHdrID FROM AAG20000 WHERE DOCNUMBR = @PONumber AND DOCTYPE = @POType AND SERIES = 12   SELECT @UNITCOST = UNITCOST, @ORUNITCOST = ORUNTCST, @ACTINDX = INVINDX FROM POP10110 WHERE PONUMBER = @PONumber AND ORD = @ORD   DECLARE Cursor1 CURSOR LOCAL FAST_FORWARD FOR  SELECT SOPNUMBE,LNITMSEQ, QTYONPO * @UNITCOST, QTYONPO * @ORUNITCOST FROM SOP60100 WHERE PONUMBER = @PONumber AND ORD = @ORD ORDER BY ORD ASC  OPEN Cursor1  FETCH NEXT FROM Cursor1 INTO @POPRequisitionNumber, @LNITMSEQ, @QTYCOST, @ORQTYCOST  WHILE @@FETCH_STATUS = 0  BEGIN  IF @QTYCOST >0 or @ORQTYCOST > 0  BEGIN  SELECT @OLDaaSubLedgerHdrID = aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 12 AND DOCTYPE = 21 AND DOCNUMBR = @POPRequisitionNumber  SELECT @OLDaaSubLedgerDistID = aaSubLedgerDistID, @OLDaaBrowseType = aaBrowseType FROM AAG20001 WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND SEQNUMBR = @LNITMSEQ   IF @OLDaaSubLedgerDistID > 0 AND @OLDaaBrowseType NOT IN (0, 3)  BEGIN  SELECT @aaSubLedgerDistID = aaSubLedgerDistID, @aaBrowseType = aaBrowseType, @DEBITAMT = DEBITAMT, @ORDBTAMT = ORDBTAMT FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND SEQNUMBR = @ORD  IF @aaBrowseType NOT IN (0, 3) AND (@DEBITAMT > 0 OR @ORDBTAMT > 0)  BEGIN  IF @Flag = 0  BEGIN  DELETE FROM AAG20003 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID  DELETE FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID  SET @Flag = 1  END   DECLARE Cursor2 CURSOR LOCAL FAST_FORWARD FOR  SELECT aaSubLedgerAssignID FROM AAG20002 WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID=@OLDaaSubLedgerDistID  OPEN Cursor2  FETCH NEXT FROM Cursor2 INTO @OLDaaSubLedgerAssignID  WHILE @@FETCH_STATUS = 0  BEGIN  SELECT @aaSubLedgerAssignID = ISNULL(MAX(aaSubLedgerAssignID),0)+1 FROM AAG20002   WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   INSERT INTO AAG20002  (aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, CRDTAMNT,   ORDBTAMT, ORCRDAMT, aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID)  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @QTYCOST*aaAssignedPercent/10000, CRDTAMNT,   @ORQTYCOST*aaAssignedPercent/10000, ORCRDAMT, aaAssignedPercent, DistRef, NOTEINDX, aaAssignErrors, aaAliasID   FROM AAG20002  WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID = @OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID    INSERT INTO AAG20003 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [aaTrxDimID], [aaTrxCodeID], [aaCodeErrors])  SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, [aaTrxDimID], [aaTrxCodeID], [aaCodeErrors]  FROM AAG20003  WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID = @OLDaaSubLedgerDistID AND aaSubLedgerAssignID = @OLDaaSubLedgerAssignID   FETCH NEXT FROM Cursor2 INTO @OLDaaSubLedgerAssignID  END  CLOSE Cursor2  DEALLOCATE Cursor2  END  END  END  UPDATE AAG20001 SET POSTED = 1 WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND aaSubLedgerDistID = @OLDaaSubLedgerDistID  SELECT @MaintReqHist = RequisitionMaintainHist FROM POP40100   IF NOT EXISTS (SELECT TOP 1 1 FROM AAG20001 WHERE aaSubLedgerHdrID = @OLDaaSubLedgerHdrID AND POSTED = 0) AND @MaintReqHist = 0  BEGIN  EXEC aagDelSubLedgerHdr @OLDaaSubLedgerHdrID, @OStatus OUT, 1  CLOSE Cursor1  DEALLOCATE Cursor1  RETURN  END   FETCH NEXT FROM Cursor1 INTO @POPRequisitionNumber, @LNITMSEQ, @QTYCOST, @ORQTYCOST  END  CLOSE Cursor1  DEALLOCATE Cursor1   UPDATE AAG20002 SET aaAssignedPercent = CASE ORDBTAMT WHEN 0 THEN DEBITAMT * 10000 / @DEBITAMT ELSE ORDBTAMT * 10000 / @ORDBTAMT END  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID    SELECT @AssignPercent = SUM(aaAssignedPercent), @RemainingDbtAmt = @DEBITAMT - SUM(DEBITAMT), @RemainingOrgDbtAmt = @ORDBTAMT - SUM(ORDBTAMT) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID   IF @AssignPercent BETWEEN 1 and 9900  BEGIN  SELECT @AssignPercent = 10000 - @AssignPercent   SELECT @aaSubLedgerAssignID = MAX(aaSubLedgerAssignID) + 1 FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID  INSERT INTO AAG20002 ([aaSubLedgerHdrID], [aaSubLedgerDistID], [aaSubLedgerAssignID], [DEBITAMT], [ORDBTAMT], [CRDTAMNT],  [ORCRDAMT], [aaAssignedPercent])  VALUES( @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @RemainingDbtAmt, @RemainingOrgDbtAmt, 0, 0, @AssignPercent)  EXEC aagGetClassIDBrowseType  @ACTINDX,  @ClassID OUTPUT,  @aaBrowseType OUTPUT   IF @aaBrowseType <> 0  AND NOT EXISTS  (SELECT 1 FROM AAG20003  WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID  AND aaSubLedgerDistID = @aaSubLedgerDistID  AND aaSubLedgerAssignID = @aaSubLedgerAssignID)  BEGIN  EXEC aagSubWorkCodeUpdate  @aaSubLedgerHdrID,  @aaSubLedgerDistID,  @aaSubLedgerAssignID,  @ClassID,  0  END  END  SELECT @AssignPercent = 0   SET @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID = @aaSubLedgerDistID)   IF @AssignPercent <> 0 AND @AssignPercent > 9900 and @AssignPercent <> 10000  BEGIN  UPDATE AAG20002 SET aaAssignedPercent = aaAssignedPercent + (10000 - @AssignPercent),  DEBITAMT= DEBITAMT+(SELECT @DEBITAMT - SUM(DEBITAMT) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID=@aaSubLedgerDistID),  ORDBTAMT= ORDBTAMT+(SELECT @ORDBTAMT - SUM(ORDBTAMT) FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND aaSubLedgerDistID=@aaSubLedgerDistID)  FROM AAG20002 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND   aaSubLedgerDistID = @aaSubLedgerDistID AND aaSubLedgerAssignID = @aaSubLedgerAssignID   END  END   
GO
GRANT EXECUTE ON  [dbo].[aagProcessPOPRequisition] TO [DYNGRP]
GO

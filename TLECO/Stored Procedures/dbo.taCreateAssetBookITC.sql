SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateAssetBookITC]  @I_vASSETID char(15),    @I_vASSETIDSUF smallint = 1,    @I_vBOOKID char(15),   @I_vORGCOSTBASIS numeric(19,5) = null,  @I_vSECT179EXPDED numeric(19,5) = null,  @I_vITCCODEREDAMT numeric(19,5) = null,  @I_vMISCCOSTADJ numeric(19,5) = null,  @I_vTEFRAFLAG smallint = null,  @I_vITCAMTTAKEN numeric(19,5) = null,  @I_vITCAMTALLOWED numeric(19,5) = null,  @I_vITCRECAPTURE numeric(19,5) = null,  @I_vUSERWHOENTERED char(15)=null,   @I_vUpdateIfExists  tinyint = 0,   @I_vUSRDEFND1   char(50) = '',       @I_vUSRDEFND2   char(50) = '',       @I_vUSRDEFND3   char(50) = '',       @I_vUSRDEFND4   varchar(8000) = '',  @I_vUSRDEFND5   varchar(8000) = '',  @O_iErrorState   int output,   @oErrString   varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @ASSETINDEX int,    @BOOKINDX int,     @NOTEINDX numeric(19,5),   @CMPANYID smallint,    @ActualTime datetime,    @exists tinyint,    @ORGCOSTBASIS numeric(19,5),   @NETCOSTBASIS numeric(19,5),   @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,    @O_iNumErrorState int,   @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @ASSETINDEX = 0,    @BOOKINDX = 0,     @NOTEINDX = 0,     @CMPANYID = 0,     @ActualTime = '',    @exists = 0,      @ORGCOSTBASIS = 0,   @NETCOSTBASIS =0,     @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateAssetBookITCPre  @I_vASSETID output,   @I_vASSETIDSUF output,   @I_vBOOKID output,   @I_vORGCOSTBASIS output,  @I_vSECT179EXPDED output,  @I_vITCCODEREDAMT output,  @I_vMISCCOSTADJ output,   @I_vTEFRAFLAG output,   @I_vITCAMTTAKEN output,   @I_vITCAMTALLOWED output,  @I_vITCRECAPTURE output,   @I_vUSERWHOENTERED output,   @I_vUpdateIfExists output,   @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 10344    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vASSETID is NULL or  @I_vASSETIDSUF is NULL or  @I_vBOOKID is NULL or   @I_vUpdateIfExists is NULL or   @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 10345    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vASSETID = UPPER(@I_vASSETID),  @I_vBOOKID = UPPER(@I_vBOOKID)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select @ActualTime = ltrim(substring(convert(varchar(25),getdate()),12,12))  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 10346   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vASSETID = '') begin  select @O_iErrorState = 10347     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vASSETIDSUF < 1 and @I_vASSETIDSUF > 999)  begin   select @O_iErrorState = 10348     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vASSETID <> '') begin  if (not exists(select 1 from FA00100 (nolock) where ASSETID = @I_vASSETID and ASSETIDSUF = @I_vASSETIDSUF))  begin  select @O_iErrorState = 10349     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if (@I_vASSETID <> '') begin  select @ASSETINDEX = ASSETINDEX from FA00100 (nolock) where ASSETID = @I_vASSETID and ASSETIDSUF = @I_vASSETIDSUF end  if (@I_vBOOKID = '')  begin  select @O_iErrorState = 10350     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vBOOKID <> '') begin  if (not exists(select 1 from FA40200 (nolock) where BOOKID = @I_vBOOKID))  begin  select @O_iErrorState = 10351     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end   if (@I_vBOOKID <> '') begin  select @BOOKINDX = BOOKINDX from FA40200 (nolock) where BOOKID = @I_vBOOKID end  if (not exists(select 1 from FA00200 (nolock) where @ASSETINDEX = ASSETINDEX and @BOOKINDX = BOOKINDX)) begin  select @O_iErrorState = 10358    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end   select @ORGCOSTBASIS = COSTBASIS from FA00200 (nolock) where ASSETINDEX = @ASSETINDEX and BOOKINDX = @BOOKINDX  if (exists(select top 1 ASSETINDEX from FA00300 (nolock) where ASSETINDEX = @ASSETINDEX and BOOKINDX = @BOOKINDX)) begin  select @exists = 1 end  if (@exists = 1) begin  select @O_iErrorState = 10440     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end   if (@exists = 0) begin  select  @I_vTEFRAFLAG =       case  when @I_vTEFRAFLAG is null  then 1  else @I_vTEFRAFLAG  end,   @I_vITCAMTTAKEN =               case  when @I_vITCAMTTAKEN is null   then 0  else @I_vITCAMTTAKEN  end,  @I_vITCAMTALLOWED =                case   when @I_vITCAMTALLOWED is null  then 0   else @I_vITCAMTALLOWED  end,  @I_vITCRECAPTURE =          case  when @I_vITCRECAPTURE is null  then 0   else @I_vITCRECAPTURE  end,  @I_vORGCOSTBASIS =        case  when @I_vORGCOSTBASIS is null  then @ORGCOSTBASIS  else @I_vORGCOSTBASIS  end,   @I_vSECT179EXPDED =         case  when @I_vSECT179EXPDED is null  then 0   else @I_vSECT179EXPDED  end,  @I_vITCCODEREDAMT =       case  when @I_vITCCODEREDAMT is null  then 0  else @I_vITCCODEREDAMT  end,   @I_vMISCCOSTADJ =          case   when @I_vMISCCOSTADJ is null  then 0   else @I_vMISCCOSTADJ  end,   @I_vUSERWHOENTERED =      case  when @I_vUSERWHOENTERED is null  then ''  else @I_vUSERWHOENTERED  end end  if (@I_vORGCOSTBASIS <> @ORGCOSTBASIS) begin  select @O_iErrorState = 10441     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vTEFRAFLAG not in (1,2,3,4))  begin  select @O_iErrorState = 10353     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vUpdateIfExists = 1) begin  select @O_iErrorState = 8687     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vUpdateIfExists not in (0,1)) begin  select @O_iErrorState = 10354     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @NETCOSTBASIS = @I_vORGCOSTBASIS - @I_vSECT179EXPDED - @I_vITCCODEREDAMT + @I_vMISCCOSTADJ  if ( @I_vORGCOSTBASIS <> @NETCOSTBASIS) begin  select @O_iErrorState = 10442     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if not exists(select 1 from FA00300 (nolock) where ASSETINDEX = @ASSETINDEX and BOOKINDX = @BOOKINDX)   begin  insert FA00300 ( ASSETINDEX,  BOOKINDX,  TEFRAFLAG,   ITCAMTTAKEN,   ITCAMTALLOWED,   ITCRECAPTURE,   ORGCOSTBASIS,   SECT179EXPDED,   ITCCODEREDAMT,   MISCCOSTADJ,   NETCOSTBASIS,   NOTEINDX,   LASTMNTDDATE,   LASTMNTDTIME,   LASTMNTDUSERID  )  select   @ASSETINDEX,     @BOOKINDX,     @I_vTEFRAFLAG,      @I_vITCAMTTAKEN,              @I_vITCAMTALLOWED,             @I_vITCRECAPTURE,       @I_vORGCOSTBASIS,     @I_vSECT179EXPDED,       @I_vITCCODEREDAMT,     @I_vMISCCOSTADJ,       @NETCOSTBASIS,       @NOTEINDX,        convert(varchar(12),getdate()),    @ActualTime,        @I_vUSERWHOENTERED     if @@error <> 0  begin  select @O_iErrorState = 10355    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 10356    exec @iStatus = taUpdateString  @O_iErrorState,   @oErrString,  @oErrString output,  @iAddCodeErrState output  end   end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taCreateAssetBookITCPost  @I_vASSETID,   @I_vASSETIDSUF,   @I_vBOOKID,   @I_vORGCOSTBASIS,  @I_vSECT179EXPDED,  @I_vITCCODEREDAMT,  @I_vMISCCOSTADJ,   @I_vTEFRAFLAG,   @I_vITCAMTTAKEN,   @I_vITCAMTALLOWED,  @I_vITCRECAPTURE,   @I_vUSERWHOENTERED,   @I_vUpdateIfExists,   @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 10357    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateAssetBookITC] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taSopLineDelete]  @I_vSOPTYPE  smallint,   @I_vSOPNUMBE   char(21),    @I_vLNITMSEQ   int = 0,   @I_vITEMNMBR   char(30),   @I_vRequesterTrx smallint = 0,   @I_vRecreateDist smallint = 0,   @I_vCMPNTSEQ  int = 0,   @I_vDeleteType  smallint,   @I_vUSRDEFND1  char(50) = '',   @I_vUSRDEFND2  char(50) = '',   @I_vUSRDEFND3  char(50) = '',   @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output, @oErrString  varchar(255) output  with encryption as  set deadlock_priority low  set transaction isolation level read uncommitted set nocount on  declare  @CUSTNMBR  char(15),  @iStatus  int,  @DOCDATE  datetime,  @BACHNUMB  char(15),  @ITMTRKOP  smallint,  @iError  int,  @O_oErrorState  int,  @iUpdtBthErrState int,  @iUpdDistErrState int,  @iCreateBatchErrString varchar(255),  @SOPHdrTbl  char(18),  @DexRowID  int,  @oExists  int,  @CURRNIDX  int,  @ORTDISAM  numeric(19,5),  @DISTKNAM  numeric(19,5),  @PYMTRCVD  numeric(19,5),  @FRTAMNT  numeric(19,5),  @MISCAMNT  numeric(19,5),  @TAXAMNT  numeric(19,5),  @LineCount  int,  @ITEMTYPE  smallint,  @ACCTAMNT  numeric(19,5),  @DISAVAMT  numeric(19,5),  @ORNCMAMT  numeric(19,5),  @OXTNDPRC  numeric(19,5),  @ORSUBTOT  numeric(19,5),  @ORMSCTAX  numeric(19,5),  @OREXTCST  numeric(19,5),  @OInsStatus  int,  @iCustomState  int,  @iCustomErrString varchar(255),  @FUNLCURR  char(15),  @CURNCYID  char(15),  @mylock  tinyint,  @DexLockErrorState int,  @TOTALTAX  numeric(19,5),  @taSopLineDeletePostErrState int,  @taSopLineDeletePostErrString char(255),  @taSopHdrRecalcErrState int,  @taSopHdrRecalcErrString char(255),  @QTYPRBAC  numeric(19,5),  @QTYPRBOO  numeric(19,5),  @QTYPRINV  numeric(19,5),  @QTYPRORD  numeric(19,5),  @ISMCTRX  integer,  @CALCKITC  tinyint,    @KITITEM  char(30),  @KITPRCLEVEL  char(11),  @KITPRICMTHD  tinyint,  @KITUOMPRICE  numeric(19,5),  @KITUOFM  char(9),  @KITQUANTITY  numeric(19,5),  @DOCAMTNEG  numeric(19,5),  @ENABLEMULTIBIN smallint,  @SEROVQTY numeric(19,5),  @LOTOVQTY numeric(19,5),  @LOCNCODE  char(10),  @ITEMNMBR  char(30),  @SUBTOTAL numeric(19,5),  @TRADEPCT numeric(19,5),  @OTRADPCT numeric(19,5),  @DeleteType int,  @ORTDISAML numeric(19,5),  @ISTRADEAPERCENT int,  @TRDISPCT numeric(19,5),  @PYMTRMID char(20),  @DUEDATE datetime,  @DISCDATE datetime,  @UNITPRCE numeric(19,5),  @KITXTNDPRCE numeric(19,5),  @FUNDECPLCUR int,  @EDITDECPLCUR int,  @USEUNITPRCE numeric(19,5),  @XCHGRATE numeric(19,7),  @RTCLCMTD smallint,  @ODECPLCU int,  @DECPLCUR int,  @XTNDPRCEExst numeric(19,5),  @XTNDPRCECHG numeric(19,5),  @DSCPCTAM  numeric(19,5),  @KITEXTDCOST numeric(19,5),  @KITUNITCOST numeric(19,5),  @KITITEMFUNCTDEC int,  @fieldupdate tinyint,  @NONINVEN tinyint,  @XTNDPRCE numeric(19,5),  @stoprecalc tinyint,  @CHGAMNT numeric(19,5),  @PRSTADCD char(15),  @SUMSERLTQTY numeric(19,5),  @SHIPMTHD char(15),  @ADDRESS1 char(60),  @ADDRESS2 char(60),  @ADDRESS3 char(60),  @CNTCPRSN char(60),  @FAXNUMBR char(21),  @CITY char(35),  @STATE char(29),  @ZIPCODE char(10),  @COUNTRY char(60),  @PHNUMBR1 char(21),  @PHNUMBR2 char(21),  @PHNUMBR3 char(21)  select  @DOCDATE = '',  @CUSTNMBR = '',  @O_oErrorState = 0,  @O_iErrorState = 0,  @iStatus = 0,  @BACHNUMB = '',  @ITMTRKOP = 0,  @oErrString = '',  @iUpdtBthErrState = 0,  @iUpdDistErrState = 0,  @iCreateBatchErrString = '',  @SOPHdrTbl = '',  @DexRowID = 0,  @oExists = 0,  @CURRNIDX = 0,  @ORTDISAM = 0,  @DISTKNAM = 0,  @PYMTRCVD = 0,  @FRTAMNT = 0,  @MISCAMNT = 0,  @TAXAMNT = 0,  @LineCount = 0,  @ITEMTYPE = 0,  @OInsStatus = 0,  @DISAVAMT = 0,  @ORNCMAMT = 0,  @OXTNDPRC = 0,  @ORSUBTOT = 0,  @ORMSCTAX = 0,  @OREXTCST = 0,  @FUNLCURR = '',  @CURNCYID = '',  @mylock = 0,  @DexLockErrorState = 0,  @TOTALTAX = 0,  @taSopLineDeletePostErrState = 0,  @taSopLineDeletePostErrString = '',  @taSopHdrRecalcErrState = 0,  @taSopHdrRecalcErrString = '',  @QTYPRBAC = 0,  @QTYPRBOO = 0,  @QTYPRINV = 0,  @QTYPRORD = 0,  @ISMCTRX = 0,  @CALCKITC = 0,  @KITITEM = '',  @KITPRCLEVEL = '',  @KITPRICMTHD = 0,  @KITUOMPRICE = 0,  @KITUOFM = '',  @KITQUANTITY = 0,  @DOCAMTNEG = 0,  @ENABLEMULTIBIN = 0,  @SEROVQTY = 0,  @LOTOVQTY = 0,  @LOCNCODE = '',  @ITEMNMBR = '',  @SUBTOTAL = 0,  @TRADEPCT = 0,  @OTRADPCT = 0,  @DeleteType = 0,  @ORTDISAML = 0,  @ISTRADEAPERCENT = 0,  @TRDISPCT = 0,  @PYMTRMID = '',  @DUEDATE = '',  @DISCDATE = '',  @UNITPRCE = 0,  @KITXTNDPRCE = 0,  @FUNDECPLCUR = 2,  @EDITDECPLCUR = 2,  @USEUNITPRCE = 0,  @XCHGRATE = 0,  @RTCLCMTD = 0,  @ODECPLCU = 0,  @DECPLCUR = 0,  @XTNDPRCEExst = 0,  @XTNDPRCECHG = 0,  @DSCPCTAM = 0,  @KITEXTDCOST = 0,  @KITUNITCOST = 0,  @KITITEMFUNCTDEC = 0,  @fieldupdate = 0,  @NONINVEN = 0,  @XTNDPRCE = 0,  @stoprecalc = 0,   @CHGAMNT = 0,  @PRSTADCD = '',  @SUMSERLTQTY = 0,  @SHIPMTHD = '',  @ADDRESS1 = '',  @ADDRESS2 = '',  @ADDRESS3 = '',  @CNTCPRSN = '',  @FAXNUMBR = '',  @CITY = '',  @STATE = '',  @ZIPCODE = '',  @COUNTRY = '',  @PHNUMBR1 = '',  @PHNUMBR2 = '',  @PHNUMBR3 = ''  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taSopLineDeletePre  @I_vSOPTYPE output,  @I_vSOPNUMBE output,  @I_vLNITMSEQ output,  @I_vITEMNMBR output,  @I_vRequesterTrx output,  @I_vRecreateDist output,  @I_vCMPNTSEQ output,  @I_vDeleteType output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 798    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( (@I_vSOPTYPE is null) or  (@I_vSOPNUMBE is null) or  (@I_vLNITMSEQ is null) or  (@I_vITEMNMBR is null) or  (@I_vRequesterTrx is null) or  (@I_vRecreateDist is null) or  (@I_vCMPNTSEQ is null) or  (@I_vDeleteType is null)) begin  select @O_iErrorState = 407    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDeleteType = 999)   begin  select @DeleteType = 999,  @I_vDeleteType = 1 end  if (@I_vDeleteType = 998) begin  select @DeleteType = 999,  @I_vDeleteType = 2 end  if (@I_vDeleteType = 997)   begin  select @DeleteType = 997,  @I_vDeleteType = 1 end  if ((@I_vSOPTYPE < 1) or (@I_vSOPTYPE > 6)) begin  select @O_iErrorState = 411     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRequesterTrx < 0) or (@I_vRequesterTrx > 1)) begin  select @O_iErrorState = 2220     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPNUMBE = '') or (@I_vITEMNMBR = '')) begin  select @O_iErrorState = 408     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRecreateDist < 0) or (@I_vRecreateDist > 1)) begin  select @O_iErrorState = 752     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vDeleteType < 1) or (@I_vDeleteType > 2)) begin  select @O_iErrorState = 3566     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE),  @I_vITEMNMBR = UPPER(@I_vITEMNMBR)  select @ENABLEMULTIBIN = ENABLEMULTIBIN from IV40100 (nolock)  select @FUNLCURR = FUNLCURR from MC40000 (nolock) select @CURNCYID = CURNCYID from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if ((@CURNCYID <> '') and (@CURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1 end  select @FUNDECPLCUR = DECPLCUR from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if (@ISMCTRX = 1) begin  select @EDITDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @EDITDECPLCUR = @FUNDECPLCUR - 1 end  select @LineCount = count(*) from SOP10200 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and ITEMNMBR = @I_vITEMNMBR  if ((@LineCount > 1) and (((@I_vLNITMSEQ = 0) and (@I_vDeleteType = 1)) or (((@I_vLNITMSEQ = 0) or (@I_vCMPNTSEQ = 0)) and (@I_vDeleteType = 2)))) begin  select @O_iErrorState = 796     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end else if (@LineCount = 1) begin  if (@I_vLNITMSEQ = 0)  begin  select @I_vLNITMSEQ = LNITMSEQ from SOP10200 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and ITEMNMBR = @I_vITEMNMBR  end   if (@I_vCMPNTSEQ = 0)  begin  select @I_vCMPNTSEQ = CMPNTSEQ from SOP10200 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and ITEMNMBR = @I_vITEMNMBR  end end  select @ITEMTYPE = ITEMTYPE,  @ITMTRKOP = ITMTRKOP  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  if (not exists(select ITEMNMBR from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR)) begin  select @NONINVEN = 1 end  select @QTYPRBAC = QTYPRBAC,  @QTYPRBOO = QTYPRBOO,  @QTYPRINV = QTYPRINV,  @QTYPRORD = QTYPRORD,  @LOCNCODE = LOCNCODE  from SOP10200 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ and ITEMNMBR = @I_vITEMNMBR  if (@I_vDeleteType = 2) begin  select @KITITEM = ITEMNMBR,  @KITPRCLEVEL = PRCLEVEL,  @KITUOFM = UOFM,  @KITQUANTITY = QUANTITY  from SOP10200 (nolock)  where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0   select @KITPRICMTHD = PRICMTHD from IV00101 (nolock) where ITEMNMBR = @KITITEM   select @KITUOMPRICE = UOMPRICE from IV00108 (nolock)  where ITEMNMBR = @KITITEM and CURNCYID = @CURNCYID and PRCLEVEL = @KITPRCLEVEL and UOFM = @KITUOFM and @KITQUANTITY = FROMQTY and @KITQUANTITY <= TOQTY   if (@KITPRICMTHD > 2)  begin  select @CALCKITC = CALCKITC from SOP40100 (nolock) where SETUPKEY = 1  end  else  begin  select @CALCKITC = 0  end end  if (@DeleteType not in(997,999)) begin  if (exists(select 1 from SOP60100 (nolock) where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ))  begin  select @O_iErrorState = 2091    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @DexRowID = DEX_ROW_ID from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if ((@DexRowID = 0) or (@DexRowID is null)) begin  select @O_iErrorState = 409     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vDeleteType = 1) begin  if (not exists(select 1 from SOP10200 (nolock)  where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and @I_vITEMNMBR = ITEMNMBR and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0))  begin  select @O_iErrorState = 999    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end else begin  if (not exists(select 1 from SOP10200 (nolock)  where SOPNUMBE = @I_vSOPNUMBE and SOPTYPE = @I_vSOPTYPE and @I_vITEMNMBR = ITEMNMBR and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ))  begin  select @O_iErrorState = 3449    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@ITEMTYPE = 3)  begin  select @O_iErrorState = 3456     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 3542    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  while (1=1) begin  select @SOPHdrTbl = rtrim(db_name()) + '.dbo.SOP10100'   select @DexRowID = DEX_ROW_ID from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (not exists(select 1 from tempdb..DEX_LOCK (nolock) where table_path_name = @SOPHdrTbl and row_id = @DexRowID and session_id = @@spid))  begin  select @mylock = 1   if ((@QTYPRBAC > 0) or (@QTYPRBOO > 0) or (@QTYPRINV > 0) or (@QTYPRORD > 0))  begin  select @O_iErrorState = 2254    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   exec DYNAMICS..taDEXLOCKS  @I_vOperation = 1,  @I_vtable_path_name = @SOPHdrTbl,   @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@OInsStatus <> 1) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 7017    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if ((@ITEMTYPE = 3) or ((@I_vDeleteType = 2) and (@CALCKITC = 1)))  begin  select  @CUSTNMBR = b.CUSTNMBR,  @OXTNDPRC = a.OXTNDPRC,  @OREXTCST = a.OREXTCST,  @ORTDISAML = a.ORTDISAM,     @ORSUBTOT = b.ORSUBTOT,      @XCHGRATE = b.XCHGRATE,  @RTCLCMTD = b.RTCLCMTD,  @ODECPLCU = a.ODECPLCU,  @DECPLCUR = a.DECPLCUR,  @XTNDPRCEExst = a.XTNDPRCE  from SOP10200 a (nolock), SOP10100 b (nolock)   where a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE and a.LNITMSEQ = @I_vLNITMSEQ and a.CMPNTSEQ = 0 and   a.SOPTYPE = b.SOPTYPE and a.SOPNUMBE = b.SOPNUMBE   if (@NONINVEN = 0)  begin  if (@ISMCTRX = 1)  begin  select @KITITEMFUNCTDEC = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @KITITEM and CURNCYID = @FUNLCURR  end  else  begin  select @KITITEMFUNCTDEC = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @KITITEM and (CURNCYID = '' or CURNCYID = @FUNLCURR)  end  end  end  else  begin  select @CUSTNMBR = b.CUSTNMBR,  @OXTNDPRC = a.OXTNDPRC,  @OREXTCST = a.OREXTCST,  @ORTDISAML = a.ORTDISAM,     @ORSUBTOT = b.ORSUBTOT,      @XTNDPRCEExst = a.XTNDPRCE  from SOP10200 a (nolock), SOP10100 b (nolock)   where a.SOPTYPE = @I_vSOPTYPE and a.SOPNUMBE = @I_vSOPNUMBE and a.LNITMSEQ = @I_vLNITMSEQ and a.CMPNTSEQ = @I_vCMPNTSEQ and  a.SOPTYPE = b.SOPTYPE and a.SOPNUMBE = b.SOPNUMBE  end   if (@I_vSOPTYPE = 5)  begin  update a set  a.QTYBKORD = a.QTYBKORD - (b.QTYTORDR * b.QTYBSUOM) - (b.QTYTOINV * b.QTYBSUOM)  from IV00102 a (updlock), SOP10200 b (nolock), IV00101 c (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = b.LOCNCODE and  b.ITEMNMBR = c.ITEMNMBR and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  b.CMPNTSEQ = @I_vCMPNTSEQ   if (@@error <> 0)  begin  select @O_iErrorState = 4766    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update a set  a.QTYBKORD = a.QTYBKORD - (b.QTYTORDR * b.QTYBSUOM) - (b.QTYTOINV * b.QTYBSUOM)  from IV00102 a (updlock), SOP10200 b (nolock), IV00101 c (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = '' and  b.ITEMNMBR = c.ITEMNMBR and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  b.CMPNTSEQ = @I_vCMPNTSEQ   if (@@error <> 0)  begin  select @O_iErrorState = 7219    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end    end    if (@I_vSOPTYPE in (2,3,6))   begin  if (@I_vDeleteType = 2)  begin  update a set  a.ATYALLOC = a.ATYALLOC - (b.ATYALLOC * b.QTYBSUOM),  a.QTYBKORD = a.QTYBKORD - (b.QTYTBAOR * b.QTYBSUOM)  from IV00102 a (updlock), SOP10200 b (nolock), IV00101 c (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = b.LOCNCODE and  b.ITEMNMBR = c.ITEMNMBR and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  b.CMPNTSEQ = @I_vCMPNTSEQ and  (c.ITEMTYPE = 1 or c.ITEMTYPE = 2)  if (@@error <> 0)  begin  select @O_iErrorState = 7195    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update a set  a.ATYALLOC = a.ATYALLOC - (b.ATYALLOC * b.QTYBSUOM),  a.QTYBKORD = a.QTYBKORD - (b.QTYTBAOR * b.QTYBSUOM)  from IV00102 a (updlock), SOP10200 b (nolock), IV00101 c (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = '' and  b.ITEMNMBR = c.ITEMNMBR and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  b.CMPNTSEQ = @I_vCMPNTSEQ and  (c.ITEMTYPE = 1 or c.ITEMTYPE = 2)  if (@@error <> 0)  begin  select @O_iErrorState = 7196    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@ITMTRKOP = 1) and (@ENABLEMULTIBIN = 1))  begin  update a set a.ATYALLOC = a.ATYALLOC - b.QUANTITY  from IV00112 a (updlock), SOP10203 b (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = b.LOCNCODE and  a.BIN = b.BIN and  a.QTYTYPE = b.QTYTYPE and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  b.CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 7197    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  if ((@ITMTRKOP in (2,3)) and (@ENABLEMULTIBIN = 1))  begin  update a set a.ATYALLOC = a.ATYALLOC - b.SERLTQTY  from IV00112 a (updlock), SOP10201 b (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.BIN = b.BIN and  a.QTYTYPE = b.QTYTYPE and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and   a.LOCNCODE = @LOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 9312    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   end  else  begin  update a set  a.ATYALLOC = a.ATYALLOC - (b.ATYALLOC * b.QTYBSUOM),  a.QTYBKORD = a.QTYBKORD - (b.QTYTBAOR * b.QTYBSUOM)  from IV00102 a (updlock), SOP10200 b (nolock), IV00101 c (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = b.LOCNCODE and  b.ITEMNMBR = c.ITEMNMBR and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  (c.ITEMTYPE = 1 or c.ITEMTYPE = 2)  if (@@error <> 0)  begin  select @O_iErrorState = 413    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update a set  a.ATYALLOC = a.ATYALLOC - (b.ATYALLOC * b.QTYBSUOM),  a.QTYBKORD = a.QTYBKORD - (b.QTYTBAOR * b.QTYBSUOM)  from IV00102 a (updlock), SOP10200 b (nolock), IV00101 c (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = '' and  b.ITEMNMBR = c.ITEMNMBR and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  (c.ITEMTYPE = 1 or c.ITEMTYPE = 2)  if (@@error <> 0)  begin  select @O_iErrorState = 414    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@ITMTRKOP = 1) and (@ENABLEMULTIBIN = 1))  begin  update a set a.ATYALLOC = a.ATYALLOC - b.QUANTITY  from IV00112 a (updlock), SOP10203 b (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.LOCNCODE = b.LOCNCODE and  a.BIN = b.BIN and  a.QTYTYPE = b.QTYTYPE and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 5991    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  if ((@ITMTRKOP in (2,3)) and (@ENABLEMULTIBIN = 1)and (@DeleteType <> 999))  begin  update a set a.ATYALLOC = a.ATYALLOC - b.SERLTQTY  from IV00112 a (updlock), SOP10201 b (nolock)  where a.ITEMNMBR = b.ITEMNMBR and  a.BIN = b.BIN and  a.QTYTYPE = b.QTYTYPE and  b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and   a.LOCNCODE = @LOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 9311    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   end   if ((@ITMTRKOP = 2) and (@DeleteType <> 999))  begin  update IV00200 set SERLNSLD = 0 from IV00200 (updlock) where ITEMNMBR = @I_vITEMNMBR and SERLNMBR in   (select SERLTNUM from SOP10201 (nolock)  where  SOPTYPE = @I_vSOPTYPE and   SOPNUMBE = @I_vSOPNUMBE and   LNITMSEQ = @I_vLNITMSEQ)  if (@@error <> 0)  begin  select @O_iErrorState = 422    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if exists(select 1 from SOP10201 (nolock)  where  SOPTYPE = @I_vSOPTYPE and   SOPNUMBE = @I_vSOPNUMBE and   LNITMSEQ = @I_vLNITMSEQ and  OVRSERLT = 1)  begin  delete IV00200 where SERLNMBR in  (select SERLTNUM from SOP10201 (nolock)  where  SOPTYPE = @I_vSOPTYPE and   SOPNUMBE = @I_vSOPNUMBE and   LNITMSEQ = @I_vLNITMSEQ and  OVRSERLT = 1)  if (@@error <> 0)  begin  select @O_iErrorState = 6511    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select @SEROVQTY = 0   select @SEROVQTY = sum(SERLTQTY)  from SOP10201  where SOPTYPE = @I_vSOPTYPE and  SOPNUMBE = @I_vSOPNUMBE and  LNITMSEQ = @I_vLNITMSEQ and  OVRSERLT = 1   update IV00102 set  QTYONHND = QTYONHND - @SEROVQTY  from IV00102 (updlock)  where ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = @LOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 6512    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set  QTYONHND = QTYONHND - @SEROVQTY  from IV00102 (updlock)  where ITEMNMBR = @I_vITEMNMBR and  LOCNCODE = ''  if (@@error <> 0)  begin  select @O_iErrorState = 6513    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if ((@ITMTRKOP = 3) and (@DeleteType <> 999))  begin  update a set a.ATYALLOC = a.ATYALLOC - c.SERLTQTY, a.LTNUMSLD = 0  from IV00300 a (updlock), SOP10201 b (nolock),  (select a.ITEMNMBR, a.LOCNCODE, a.QTYTYPE, a.DATERECD, a.DTSEQNUM, sum(b.SERLTQTY) as 'SERLTQTY'  from IV00300 a (nolock), SOP10201 b (nolock)  where b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  a.DATERECD = b.DATERECD and  a.DTSEQNUM = b.DTSEQNUM and  a.LOTNUMBR = b.SERLTNUM and  a.LOCNCODE = @LOCNCODE and  a.ITEMNMBR = b.ITEMNMBR and  a.QTYTYPE = b.QTYTYPE  group by a.ITEMNMBR, a.LOCNCODE, a.QTYTYPE, a.DATERECD, a.DTSEQNUM) c  where b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  b.LNITMSEQ = @I_vLNITMSEQ and  a.DATERECD = b.DATERECD and  a.DTSEQNUM = b.DTSEQNUM and  a.LOTNUMBR = b.SERLTNUM and  a.LOCNCODE = @LOCNCODE and  a.ITEMNMBR = b.ITEMNMBR and  a.QTYTYPE = b.QTYTYPE and  c.ITEMNMBR = a.ITEMNMBR and  c.LOCNCODE = a.LOCNCODE and  c.QTYTYPE = a.QTYTYPE and  c.DATERECD = a.DATERECD and  c.DTSEQNUM = a.DTSEQNUM  if (@@error <> 0)  begin  select @O_iErrorState = 423    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if exists(select 1 from SOP10201 (nolock)  where  SOPTYPE = @I_vSOPTYPE and  SOPNUMBE = @I_vSOPNUMBE and  LNITMSEQ = @I_vLNITMSEQ and  OVRSERLT = 1)  begin  delete IV00300 where LOTNUMBR in  (select SERLTNUM from SOP10201 (nolock)  where  SOPTYPE = @I_vSOPTYPE and  SOPNUMBE = @I_vSOPNUMBE and  LNITMSEQ = @I_vLNITMSEQ and  OVRSERLT = 1)  if (@@error <> 0)  begin  select @O_iErrorState = 6514    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select @LOTOVQTY = 0   select @LOTOVQTY = sum(SERLTQTY)  from SOP10201  where SOPTYPE = @I_vSOPTYPE and   SOPNUMBE = @I_vSOPNUMBE and   LNITMSEQ = @I_vLNITMSEQ and  OVRSERLT = 1   update IV00102 set  QTYONHND = QTYONHND - @LOTOVQTY  from IV00102 (updlock)  where ITEMNMBR = @ITEMNMBR and  LOCNCODE = @LOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 6515    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set  QTYONHND = QTYONHND - @LOTOVQTY  from IV00102 (updlock)  where ITEMNMBR = @ITEMNMBR and  LOCNCODE = ''  if (@@error <> 0)  begin  select @O_iErrorState = 6516    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if ((@ITEMTYPE = 3) and (@DeleteType <> 999) and (select count(a.ITEMNMBR) from SOP10200 a (nolock)  join IV00101 b (nolock)on a.ITEMNMBR = b.ITEMNMBR  where a.SOPNUMBE = @I_vSOPNUMBE and a.SOPTYPE = @I_vSOPTYPE and a.LNITMSEQ = @I_vLNITMSEQ and  a.CMPNTSEQ <> 0 and b.ITMTRKOP = 2)  > 0 )  begin     DECLARE  @KitSerSOPNUMBE char(21),  @KitSerSOPTYPE smallint,  @KitSerLNITMSEQ int,  @KitSerCMPNTSEQ int,  @KitSerITEMNMBR char(30),  @KitSerLOCNCODE char(10);  DECLARE Kit_Ser CURSOR  for (select a.SOPNUMBE, a.SOPTYPE, a.LNITMSEQ, a.CMPNTSEQ, a.ITEMNMBR, a.LOCNCODE from SOP10200 a (nolock)  join IV00101 b (nolock) on a.ITEMNMBR = b.ITEMNMBR  where a.SOPNUMBE = @I_vSOPNUMBE and a.SOPTYPE = @I_vSOPTYPE and a.LNITMSEQ = @I_vLNITMSEQ and  a.CMPNTSEQ <> 0 and b.ITMTRKOP = 2);  OPEN Kit_Ser;  FETCH NEXT FROM Kit_Ser  INTO @KitSerSOPNUMBE, @KitSerSOPTYPE, @KitSerLNITMSEQ, @KitSerCMPNTSEQ, @KitSerITEMNMBR, @KitSerLOCNCODE;  WHILE @@FETCH_STATUS = 0  BEGIN   update IV00200 set SERLNSLD = 0 from IV00200 (updlock) where ITEMNMBR = @KitSerITEMNMBR and SERLNMBR in   (select SERLTNUM from SOP10201 (nolock)  where  SOPTYPE = @KitSerSOPTYPE and   SOPNUMBE = @KitSerSOPNUMBE and   LNITMSEQ = @KitSerLNITMSEQ and  CMPNTSEQ = @KitSerCMPNTSEQ)  if (@@error <> 0)  begin  select @O_iErrorState = 11858    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if exists(select 1 from SOP10201 (nolock)  where  SOPTYPE = @KitSerSOPTYPE and   SOPNUMBE = @KitSerSOPNUMBE and   LNITMSEQ = @KitSerLNITMSEQ and  CMPNTSEQ = @KitSerCMPNTSEQ and  OVRSERLT = 1)  begin  delete IV00200 where SERLNMBR in  (select SERLTNUM from SOP10201 (nolock)  where  SOPTYPE = @KitSerSOPTYPE and   SOPNUMBE = @KitSerSOPNUMBE and   LNITMSEQ = @KitSerLNITMSEQ and  CMPNTSEQ = @KitSerCMPNTSEQ and  OVRSERLT = 1)  if (@@error <> 0)  begin  select @O_iErrorState = 11859    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select @SEROVQTY = 0   select @SEROVQTY = sum(SERLTQTY)  from SOP10201  where SOPTYPE = @KitSerSOPTYPE and  SOPNUMBE = @KitSerSOPNUMBE and  LNITMSEQ = @KitSerLNITMSEQ and  CMPNTSEQ = @KitSerCMPNTSEQ and  OVRSERLT = 1   update IV00102 set  QTYONHND = QTYONHND - @SEROVQTY  from IV00102 (updlock)  where ITEMNMBR = @KitSerITEMNMBR and  LOCNCODE = @KitSerLOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 11860    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set  QTYONHND = QTYONHND - @SEROVQTY  from IV00102 (updlock)  where ITEMNMBR = @KitSerITEMNMBR and  LOCNCODE = ''  if (@@error <> 0)  begin  select @O_iErrorState = 11861    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   FETCH NEXT FROM Kit_Ser INTO @KitSerSOPNUMBE, @KitSerSOPTYPE, @KitSerLNITMSEQ, @KitSerCMPNTSEQ, @KitSerITEMNMBR, @KitSerLOCNCODE;   end   CLOSE Kit_Ser;  DEALLOCATE Kit_Ser;   end   if ((@ITEMTYPE = 3) and (@DeleteType <> 999) and (select count(a.ITEMNMBR) from SOP10200 a (nolock)  join IV00101 b (nolock)  on a.ITEMNMBR = b.ITEMNMBR  where a.SOPNUMBE = @I_vSOPNUMBE and a.SOPTYPE = @I_vSOPTYPE and a.LNITMSEQ = @I_vLNITMSEQ and  a.CMPNTSEQ <> 0 and b.ITMTRKOP = 3)  > 0 )  begin  DECLARE  @KitLotSOPNUMBE char(21),  @KitLotSOPTYPE smallint,  @KitLotLNITMSEQ int,  @KitLotCMPNTSEQ int,  @KitLotITEMNMBR char(30),  @KitLotLOCNCODE char(10);  DECLARE Kit_Lot CURSOR  for (select a.SOPNUMBE, a.SOPTYPE, a.LNITMSEQ, a.CMPNTSEQ, a.ITEMNMBR, a.LOCNCODE from SOP10200 a (nolock)  join IV00101 b (nolock) on a.ITEMNMBR = b.ITEMNMBR  where a.SOPNUMBE = @I_vSOPNUMBE and a.SOPTYPE = @I_vSOPTYPE and a.LNITMSEQ = @I_vLNITMSEQ and  a.CMPNTSEQ <> 0 and b.ITMTRKOP = 3);  OPEN Kit_Lot;  FETCH NEXT FROM Kit_Lot  INTO @KitLotSOPNUMBE, @KitLotSOPTYPE, @KitLotLNITMSEQ, @KitLotCMPNTSEQ, @KitLotITEMNMBR, @KitLotLOCNCODE;  WHILE @@FETCH_STATUS = 0  BEGIN   update a set a.ATYALLOC = a.ATYALLOC - c.SERLTQTY, a.LTNUMSLD = 0  from IV00300 a (updlock), SOP10201 b (nolock),  (select a.ITEMNMBR, a.LOCNCODE, a.QTYTYPE, a.DATERECD, a.DTSEQNUM, sum(b.SERLTQTY) as 'SERLTQTY'  from IV00300 a (nolock), SOP10201 b (nolock)  where b.SOPTYPE = @KitLotSOPTYPE and  b.SOPNUMBE = @KitLotSOPNUMBE and  b.LNITMSEQ = @KitLotLNITMSEQ and  b.CMPNTSEQ = @KitLotCMPNTSEQ and  a.DATERECD = b.DATERECD and  a.DTSEQNUM = b.DTSEQNUM and  a.LOTNUMBR = b.SERLTNUM and  a.LOCNCODE = @KitSerLOCNCODE and  a.ITEMNMBR = b.ITEMNMBR and  a.QTYTYPE = b.QTYTYPE  group by a.ITEMNMBR, a.LOCNCODE, a.QTYTYPE, a.DATERECD, a.DTSEQNUM) c  where b.SOPTYPE = @KitLotSOPTYPE and  b.SOPNUMBE = @KitLotSOPNUMBE and  b.LNITMSEQ = @KitLotLNITMSEQ and  b.CMPNTSEQ = @KitLotCMPNTSEQ and   a.DATERECD = b.DATERECD and  a.DTSEQNUM = b.DTSEQNUM and  a.LOTNUMBR = b.SERLTNUM and  a.LOCNCODE = @KitSerLOCNCODE and  a.ITEMNMBR = b.ITEMNMBR and  a.QTYTYPE = b.QTYTYPE and  c.ITEMNMBR = a.ITEMNMBR and  c.LOCNCODE = a.LOCNCODE and  c.QTYTYPE = a.QTYTYPE and  c.DATERECD = a.DATERECD and  c.DTSEQNUM = a.DTSEQNUM  if (@@error <> 0)  begin  select @O_iErrorState = 11862    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if exists(select 1 from SOP10201 (nolock)  where  SOPTYPE = @KitLotSOPTYPE and  SOPNUMBE = @KitLotSOPNUMBE and  LNITMSEQ = @KitLotLNITMSEQ and  CMPNTSEQ = @KitLotCMPNTSEQ and   OVRSERLT = 1)  begin  delete IV00300 where LOTNUMBR in  (select SERLTNUM from SOP10201 (nolock)  where  SOPTYPE = @KitLotSOPTYPE and  SOPNUMBE = @KitLotSOPNUMBE and  LNITMSEQ = @KitLotLNITMSEQ and  CMPNTSEQ = @KitLotCMPNTSEQ and  OVRSERLT = 1)  if (@@error <> 0)  begin  select @O_iErrorState = 11863    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   select @LOTOVQTY = 0   select @LOTOVQTY = sum(SERLTQTY)  from SOP10201  where SOPTYPE = @KitLotSOPTYPE and   SOPNUMBE = @KitLotSOPNUMBE and   LNITMSEQ = @KitLotLNITMSEQ and  CMPNTSEQ = @KitLotCMPNTSEQ and  OVRSERLT = 1   update IV00102 set  QTYONHND = QTYONHND - @LOTOVQTY  from IV00102 (updlock)  where ITEMNMBR = @KitLotITEMNMBR and  LOCNCODE = @KitSerLOCNCODE  if (@@error <> 0)  begin  select @O_iErrorState = 11864    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update IV00102 set  QTYONHND = QTYONHND - @LOTOVQTY  from IV00102 (updlock)  where ITEMNMBR = @KitLotITEMNMBR and  LOCNCODE = ''  if (@@error <> 0)  begin  select @O_iErrorState = 11865    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  FETCH NEXT FROM Kit_Lot INTO @KitLotSOPNUMBE, @KitLotSOPTYPE, @KitLotLNITMSEQ, @KitLotCMPNTSEQ, @KitLotITEMNMBR, @KitLotLOCNCODE;   end   CLOSE Kit_Lot;  DEALLOCATE Kit_Lot;   end  end   if (@I_vDeleteType = 1)  begin  delete SOP10105 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 420    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete SOP10202 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 751    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   delete SOP10200 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 419    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@ENABLEMULTIBIN = 1)  begin  delete SOP10203 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 5999    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@DeleteType <> 999)  begin  delete SOP10201 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 421    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  else  begin  delete SOP10200 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 3454    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@ENABLEMULTIBIN = 1)  begin  delete SOP10203 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 3563    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@DeleteType <> 999)  begin  delete SOP10201 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = @I_vCMPNTSEQ  if (@@error <> 0)  begin  select @O_iErrorState = 3455    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (@I_vSOPTYPE in (1,2,3,6))   begin  if ((@I_vDeleteType = 2) and (@CALCKITC = 1) and (@mylock = 1))  begin  select @KITEXTDCOST = round(sum(EXTDCOST), @FUNDECPLCUR - 1)  from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ > 0   select @KITQUANTITY = QUANTITY  from SOP10200 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0   if (@KITQUANTITY = 0)  begin  select @KITUNITCOST = 0  end  else  begin  select @KITUNITCOST =  abs(isnull(round(sum(UNITCOST * QUANTITY)/@KITQUANTITY, @KITITEMFUNCTDEC),0))  from SOP10200 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ <> 0  end   if (@KITPRICMTHD in(3,4,5,6))  begin  select @fieldupdate = 1   select @KITUOMPRICE = UOMPRICE/100 from IV00108 (nolock)  where ITEMNMBR = @KITITEM and  CURNCYID = @FUNLCURR and  PRCLEVEL = @KITPRCLEVEL and  UOFM = @KITUOFM and  FROMQTY <= @KITQUANTITY and  TOQTY >= @KITQUANTITY   if (@KITPRICMTHD = 3)  begin  select @UNITPRCE = round(round((sum(b.CURRCOST * a.QUANTITY)/@KITQUANTITY), @KITITEMFUNCTDEC) * isnull(round(1 + @KITUOMPRICE, @KITITEMFUNCTDEC), 0), @KITITEMFUNCTDEC)  from SOP10200 a, IV00101 b, IV40202 c  where a.ITEMNMBR = b.ITEMNMBR and  a.LNITMSEQ = @I_vLNITMSEQ and  a.SOPTYPE = @I_vSOPTYPE and  a.SOPNUMBE = @I_vSOPNUMBE and  a.CMPNTSEQ > 0 and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.UOFM  end  else  begin  if (@KITPRICMTHD = 4)  begin  select @UNITPRCE = round(round((sum(b.STNDCOST * a.QUANTITY)/@KITQUANTITY), @KITITEMFUNCTDEC) * isnull(round(1 + @KITUOMPRICE, @KITITEMFUNCTDEC), 0), @KITITEMFUNCTDEC)  from SOP10200 a, IV00101 b, IV40202 c  where a.ITEMNMBR = b.ITEMNMBR and  a.LNITMSEQ = @I_vLNITMSEQ and  a.SOPTYPE = @I_vSOPTYPE and  a.SOPNUMBE = @I_vSOPNUMBE and  a.CMPNTSEQ > 0 and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.UOFM  end  else  begin  if (@KITPRICMTHD = 5)  begin  select @UNITPRCE = round(round((sum(b.CURRCOST * a.QUANTITY)/@KITQUANTITY), @KITITEMFUNCTDEC) / isnull(round(1 - @KITUOMPRICE, @KITITEMFUNCTDEC), 0), @KITITEMFUNCTDEC)  from SOP10200 a, IV00101 b, IV40202 c  where a.ITEMNMBR = b.ITEMNMBR and  a.LNITMSEQ = @I_vLNITMSEQ and  a.SOPTYPE = @I_vSOPTYPE and  a.SOPNUMBE = @I_vSOPNUMBE and  a.CMPNTSEQ > 0 and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.UOFM  end  else  begin  if (@KITPRICMTHD = 6)  begin  select @UNITPRCE = round(round((sum(b.STNDCOST * a.QUANTITY)/@KITQUANTITY), @KITITEMFUNCTDEC) / isnull(round(1 - @KITUOMPRICE, @KITITEMFUNCTDEC), 0), @KITITEMFUNCTDEC)  from SOP10200 a, IV00101 b, IV40202 c  where a.ITEMNMBR = b.ITEMNMBR and  a.LNITMSEQ = @I_vLNITMSEQ and  a.SOPTYPE = @I_vSOPTYPE and  a.SOPNUMBE = @I_vSOPNUMBE and  a.CMPNTSEQ > 0 and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.UOFM  end  end  end  if (@UNITPRCE is null)  begin  select @UNITPRCE = 0  end  end   if (@ISMCTRX = 1)  begin  if (@RTCLCMTD = 0)   begin  select @USEUNITPRCE = round(round(@UNITPRCE / @XCHGRATE, (@ODECPLCU - 1)) * @XCHGRATE, (@DECPLCUR - 1))  end  else  begin  select @USEUNITPRCE = round(round(@UNITPRCE * @XCHGRATE, (@ODECPLCU - 1)) / @XCHGRATE, (@DECPLCUR - 1))  end  end   select @KITXTNDPRCE = isnull(round(QUANTITY * (@USEUNITPRCE - MRKDNAMT), @FUNDECPLCUR), 0)  from SOP10200 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0   select @XTNDPRCECHG = @XTNDPRCEExst - @KITXTNDPRCE,  @stoprecalc = 1   update RM00103 set ONORDAMT = ONORDAMT - @XTNDPRCECHG  from RM00103 (updlock)  where CUSTNMBR = @CUSTNMBR  if (@@error <> 0)  begin  select @O_iErrorState = 3447    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   select @XTNDPRCE = isnull(round(QUANTITY * (@USEUNITPRCE - MRKDNAMT), @FUNDECPLCUR), 0)  from SOP10200 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0   update SOP10200 set  UNITCOST =  case     when @fieldupdate = 1  then @KITUNITCOST  else 0  end,  ORUNTCST =  case     when @fieldupdate = 1 and @ISMCTRX = 1  then 0  else @KITUNITCOST  end,  EXTDCOST =  case     when @fieldupdate = 1  then @KITEXTDCOST  else 0  end,  OREXTCST =  case     when @fieldupdate = 1 and @ISMCTRX = 1  then 0  else @KITEXTDCOST  end,  UNITPRCE =  case     when @fieldupdate = 1  then @UNITPRCE  else UNITPRCE  end,  ORUNTPRC = case     when @fieldupdate = 1 and @ISMCTRX = 1  then 0  else ORUNTPRC  end,  XTNDPRCE =  case     when @fieldupdate = 1  then @XTNDPRCE  else XTNDPRCE  end,  OXTNDPRC =  case     when @fieldupdate = 1 and @ISMCTRX = 1  then 0  else OXTNDPRC  end,  REMPRICE =  case     when @fieldupdate = 1  then @XTNDPRCE  else REMPRICE  end,  OREPRICE =  case     when @fieldupdate = 1  then @XTNDPRCE  else OREPRICE  end  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and LNITMSEQ = @I_vLNITMSEQ and CMPNTSEQ = 0  if (@@error <> 0)  begin  select @O_iErrorState = 3450    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (@mylock = 1)  begin  select @ORTDISAM = ORTDISAM,  @TRDISPCT = TRDISPCT,  @PYMTRMID = PYMTRMID,  @DUEDATE = DUEDATE,  @DISCDATE = DISCDATE,  @DSCPCTAM = DSCPCTAM / 100,  @CHGAMNT = SUBTOTAL,  @PRSTADCD = PRSTADCD,  @ADDRESS1 = ADDRESS1,  @ADDRESS2 = ADDRESS2,  @ADDRESS3 = ADDRESS3,  @CNTCPRSN = CNTCPRSN,  @FAXNUMBR = FAXNUMBR,  @CITY = CITY,  @STATE = STATE,  @ZIPCODE = ZIPCODE,  @COUNTRY = COUNTRY,  @PHNUMBR1 = PHNUMBR1,  @PHNUMBR2 = PHNUMBR2,  @PHNUMBR3 = PHONE3,  @SHIPMTHD = SHIPMTHD  from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@TRDISPCT > 0)  begin  select @TRDISPCT = @TRDISPCT / 100.00,  @ORTDISAM = null  end   if (@TRDISPCT = 0)  begin  select @ORTDISAM = @ORTDISAM,  @TRDISPCT = null  end   update SOP10100 set Flags = Flags | 8 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if (@@error <> 0)  begin  select @O_iErrorState = 5340    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   exec @iStatus = taSopHdrRecalc  @I_vSOPTYPE = @I_vSOPTYPE,  @I_vSOPNUMBE = @I_vSOPNUMBE,  @I_vSHIPMTHD = @SHIPMTHD,  @I_vPYMTRMID = @PYMTRMID,  @I_vPRSTADCD = @PRSTADCD,  @I_vADDRESS1 = @ADDRESS1,  @I_vADDRESS2 = @ADDRESS2,  @I_vADDRESS3 = @ADDRESS3,  @I_vCNTCPRSN = @CNTCPRSN,  @I_vFAXNUMBR = @FAXNUMBR,  @I_vCITY = @CITY,  @I_vSTATE = @STATE,  @I_vZIPCODE = @ZIPCODE,  @I_vCOUNTRY = @COUNTRY,  @I_vPHNUMBR1 = @PHNUMBR1,  @I_vPHNUMBR2 = @PHNUMBR2,  @I_vPHNUMBR3 = @PHNUMBR3,  @I_vDUEDATE = @DUEDATE,  @I_vDISCDATE = @DISCDATE,  @I_vTRDISAMT = @ORTDISAM,  @I_vTRADEPCT = @TRDISPCT,  @I_vRECREATEDIST = @I_vRecreateDist,  @I_vRECREATECOMM = 1,  @I_vRECREATETAXES = 1,  @I_vRECALCBTCHTOT = @stoprecalc,   @I_vDSCPCTAM = @DSCPCTAM,  @I_vCHGAMNT = @CHGAMNT,  @O_iErrorState = @taSopHdrRecalcErrState output,  @oErrString = @taSopHdrRecalcErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@taSopHdrRecalcErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @taSopHdrRecalcErrString  select @O_iErrorState = 2263    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  break end  if (@mylock = 1) begin  exec @iStatus = DYNAMICS..taDEXLOCKS  @I_vOperation = 3,   @I_vtable_path_name = @SOPHdrTbl,   @I_vrow_id = @DexRowID,     @O_oExists = @oExists output,    @O_oInsertStatus = @OInsStatus output,   @O_iErrorState = @DexLockErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@DexLockErrorState <> 0) or (@iError <> 0))  begin  if (@DexLockErrorState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + @DexLockErrorState  end  select @O_iErrorState = 2223    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = taSopLineDeletePost  @I_vSOPTYPE,  @I_vSOPNUMBE,  @I_vLNITMSEQ,  @I_vITEMNMBR,  @I_vRequesterTrx,  @I_vRecreateDist,  @I_vCMPNTSEQ,  @I_vDeleteType,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @taSopLineDeletePostErrState output,  @oErrString = @taSopLineDeletePostErrString output select @iError = @@error if ((@iStatus <> 0) or (@taSopLineDeletePostErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @taSopLineDeletePostErrString  select @O_iErrorState = 785    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx=0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE='Sales_Transaction',  @I_vINDEX1=@I_vSOPNUMBE,  @I_vINDEX2=@I_vSOPTYPE,  @I_vINDEX3='',  @I_vINDEX4='',  @I_vINDEX5='',  @I_vINDEX6='',  @I_vINDEX7='',  @I_vINDEX8='',  @I_vINDEX9='',  @I_vINDEX10='',  @I_vINDEX11='',  @I_vINDEX12='',  @I_vINDEX13='',  @I_vINDEX14='',  @I_vINDEX15='',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 2783    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taSopLineDelete] TO [DYNGRP]
GO

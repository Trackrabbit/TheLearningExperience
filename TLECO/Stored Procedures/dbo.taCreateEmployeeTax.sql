SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateEmployeeTax] @I_vEMPLOYID char(15),    @I_vFDFLGSTS char(6)='',   @I_vFEDEXMPT smallint=0,   @I_vADFDWHDG numeric(19,5)=0,   @I_vESTFEDWH numeric(19,5)=0,   @I_vSTATECD char(2)='',    @I_vLOCALTAX char(6)='',   @I_vW2BF942E tinyint=0,    @I_vW2BFDCSD tinyint=0,    @I_vW2BFDCMP tinyint=0,    @I_vW2BFLREP tinyint=0,    @I_vW2BFPPLN tinyint=0,    @I_vW2BFSTEM tinyint=0,    @I_vMCRQGEMP tinyint=0,    @I_vEICFLGST char(6)='',    @I_vNYTXDiff tinyint=0,    @I_vUpdateIfExists tinyint=1,   @I_vRequesterTrx smallint=0,   @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @iCustomState int,  @iStatus int,  @O_oErrorState int,  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iError int,      @DBName char(50),     @iAddCodeErrState int  select  @O_iErrorState = 0,     @O_oErrorState = 0,  @sCompanyID = CMPANYID from DYNAMICS..SY01500 where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateEmployeeTaxPre  @I_vEMPLOYID output,  @I_vFDFLGSTS output,  @I_vFEDEXMPT output,  @I_vADFDWHDG output,  @I_vESTFEDWH output,  @I_vSTATECD output,  @I_vLOCALTAX output,  @I_vW2BF942E output,  @I_vW2BFDCSD output,  @I_vW2BFDCMP output,  @I_vW2BFLREP output,  @I_vW2BFPPLN output,  @I_vW2BFSTEM output,  @I_vMCRQGEMP output,  @I_vEICFLGST output,  @I_vNYTXDiff output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString  output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 4096    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vEMPLOYID is NULL or  @I_vFDFLGSTS is NULL or  @I_vFEDEXMPT is NULL or  @I_vADFDWHDG is NULL or  @I_vESTFEDWH is NULL or  @I_vSTATECD is NULL or  @I_vLOCALTAX is NULL or  @I_vW2BF942E is NULL or  @I_vW2BFDCSD is NULL or  @I_vW2BFDCMP is NULL or  @I_vW2BFLREP is NULL or  @I_vW2BFPPLN is NULL or  @I_vW2BFSTEM is NULL or  @I_vMCRQGEMP is NULL or  @I_vEICFLGST is NULL or  @I_vNYTXDiff is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 4594    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vEMPLOYID =UPPER(@I_vEMPLOYID),  @I_vFDFLGSTS = UPPER(@I_vFDFLGSTS),  @I_vEICFLGST = UPPER(@I_vEICFLGST),  @I_vSTATECD = UPPER(@I_vSTATECD),  @I_vLOCALTAX = UPPER(@I_vLOCALTAX)  if ( @I_vEMPLOYID = '' ) begin  select @O_iErrorState = 1569    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vEMPLOYID <> '' ) begin  if (not exists (select 1 from UPR00100 (nolock) where EMPLOYID = @I_vEMPLOYID ))  begin  select @O_iErrorState = 1570    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vFEDEXMPT < 0 )  begin  select @O_iErrorState = 1571     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vESTFEDWH < 0 ) begin  select @O_iErrorState = 1572     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vSTATECD <> '' )  begin  if (not exists (select 1 from UPR41100 (nolock) where STATECD = @I_vSTATECD ))  begin  select @O_iErrorState = 1573     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vLOCALTAX <> '' )  begin  if (not exists (select 1 from UPR41400 (nolock) where LOCALTAX = @I_vLOCALTAX ))  begin  select @O_iErrorState = 1574     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  if ( @I_vW2BF942E < 0 or @I_vW2BF942E > 1 )  begin  select @O_iErrorState = 1575     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vW2BFDCSD < 0 or @I_vW2BFDCSD > 1 )  begin  select @O_iErrorState = 1576     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if( @I_vW2BFDCMP < 0 or @I_vW2BFDCMP > 1 ) begin  select @O_iErrorState = 1577     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vW2BFLREP < 0 or @I_vW2BFLREP > 1 ) begin  select @O_iErrorState = 1578     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vW2BFPPLN < 0 or @I_vW2BFPPLN > 1 ) begin  select @O_iErrorState = 1579     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vW2BFSTEM < 0 or @I_vW2BFSTEM > 1 ) begin  select @O_iErrorState = 1580    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vMCRQGEMP < 0 or @I_vMCRQGEMP > 1 ) begin  select @O_iErrorState = 4088     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vNYTXDiff < 0 or @I_vNYTXDiff > 1 ) begin  select @O_iErrorState = 4089     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vFDFLGSTS <> '' and @I_vFDFLGSTS <> 'SINGLE' and @I_vFDFLGSTS <> 'MAR' and @I_vFDFLGSTS <> 'NRA' ) begin  select @O_iErrorState = 4094     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vEICFLGST <> '' and @I_vEICFLGST <> 'MAR' and @I_vEICFLGST <> 'SINGLE' and @I_vEICFLGST <> 'MAR2' ) begin  select @O_iErrorState = 4095     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 3690     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 3691     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4090   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if not exists(select 1 from UPR00300 where EMPLOYID = @I_vEMPLOYID) begin  insert UPR00300(  NOTEINDX,  EMPLOYID,  EXMFRFED,  FDFLGSTS,  FEDEXMPT,  ADFDWHDG,  ESTFEDWH,  STATECD,  LOCALTAX,  W2BF942E,  W2BFDCSD,  W2BFDCMP,  W2BFLREP,  W2BFPPLN,  W2BFSTEM,  MCRQGEMP,  EICFLGST,  NYTXDiff  )  select  @nNextNoteIndex,   @I_vEMPLOYID,    0,     @I_vFDFLGSTS,    @I_vFEDEXMPT,    @I_vADFDWHDG,    @I_vESTFEDWH,    @I_vSTATECD,    @I_vLOCALTAX,    @I_vW2BF942E,    @I_vW2BFDCSD,    @I_vW2BFDCMP,    @I_vW2BFLREP,    @I_vW2BFPPLN,    @I_vW2BFSTEM,    @I_vMCRQGEMP,    @I_vEICFLGST,    @I_vNYTXDiff    if (@@error <> 0)  begin  select @O_iErrorState = 4091     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end else if ( @I_vUpdateIfExists = 1 ) begin  update UPR00300 set  FDFLGSTS = @I_vFDFLGSTS,  FEDEXMPT = @I_vFEDEXMPT,  ADFDWHDG = @I_vADFDWHDG,  ESTFEDWH = @I_vESTFEDWH,  STATECD = @I_vSTATECD,  LOCALTAX = @I_vLOCALTAX,  W2BF942E = @I_vW2BF942E,  W2BFDCSD = @I_vW2BFDCSD,  W2BFDCMP = @I_vW2BFDCMP,  W2BFLREP = @I_vW2BFLREP,  W2BFPPLN = @I_vW2BFPPLN,  W2BFSTEM = @I_vW2BFSTEM,  MCRQGEMP = @I_vMCRQGEMP,  EICFLGST = @I_vEICFLGST,  NYTXDiff = @I_vNYTXDiff  where EMPLOYID = @I_vEMPLOYID  if (@@error <> 0)  begin  select @O_iErrorState = 4092     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end end  exec @iStatus = taCreateEmployeeTaxPost  @I_vEMPLOYID,  @I_vFDFLGSTS,  @I_vFEDEXMPT,  @I_vADFDWHDG,  @I_vESTFEDWH,  @I_vSTATECD,  @I_vLOCALTAX,  @I_vW2BF942E,  @I_vW2BFDCSD,  @I_vW2BFDCMP,  @I_vW2BFLREP,  @I_vW2BFPPLN,  @I_vW2BFSTEM,  @I_vMCRQGEMP,  @I_vEICFLGST,  @I_vNYTXDiff,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @oErrString  output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @O_iErrorState = 4093     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateEmployeeTax] TO [DYNGRP]
GO

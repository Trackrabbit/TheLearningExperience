SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateSopPaymentInsertRecord]  @I_vSOPTYPE  smallint,    @I_vSOPNUMBE char(21),     @I_vCUSTNMBR char(15),     @I_vCUSTNAME char(64) = '',   @I_vDOCDATE datetime = '',    @I_vDOCAMNT numeric(19,5) = 0,   @I_vCHEKBKID char(15) = '',   @I_vCARDNAME char(15) = '',   @I_vCHEKNMBR char(20) = '',   @I_vRCTNCCRD char (20) = '',   @I_vAUTHCODE char(15) = '',   @I_vEXPNDATE datetime = '',    @I_vPYMTTYPE int = 1,    @I_vDOCNUMBR char(20) = '',       @I_vAction smallint = null,   @I_vSEQNUMBR int = null,   @I_vMDFUSRID char(15) = '',   @I_vVOIDDATE datetime = '',    @I_vPROCESSELECTRONICALLY tinyint = 0,  @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @nNextNoteIndex numeric(19,5),   @CMDNUMWK numeric(19,5),  @SEQNUMBR int,  @CREATEKEY int,  @CURNCYID char(15),  @CURRNIDX int,  @DECPLCUR smallint,  @JRNENTRY int,  @O_tOUTOK tinyint,  @RCVBGRBX int,  @CASHINDEX int,  @CASHINDEXExisting int,  @DEPINDEX int,  @sCompanyID smallint,  @sINTERID char(5),    @TRXSORCE char(13),  @iStatus int,  @iError int,  @O_oErrorState int,  @iJrnlEntryErrState int,  @iNxtPymntErrState int,  @iTrxSorceErrState int,  @iGLTransErrState int,  @iGLTransErrString varchar(255),  @dtDEFAULT datetime,  @iGetNextNoteIdxErrState int,  @USER2ENT char(15),  @Reverse smallint,  @RMDTYPAL smallint,  @AUDITTRAIL char(13),  @OLDCMDNUMWK numeric(19,5),  @CHEKBKID char(15),  @AMNTPAID numeric(19,5),  @OAMTPAID numeric(19,5),  @DOCDATE datetime,  @RTCLCMTD smallint,  @ISMCTRX smallint,  @FUNLCURR char(15),  @FUNLCURRINDX smallint,   @FUNLDECPLCUR smallint,  @DOCNUMBR char(20),  @PYMTTYPE smallint,  @CurrDate char(12),  @NumPayments int,  @iCreateSopPaymentErrState int,  @iCreateSopPaymentErrString varchar(255),  @NewReceipt tinyint,  @DEFCACTY tinyint,  @CASHIDX int,  @use_checkbook int,  @CCRDXPDT datetime,  @CHEKNMBR char(20),  @iCustomState int,  @iCustomErrString varchar(255),  @CreateOrUpdate int,   @SopHdrUpdateState int,  @SopHdrUpdateErrString varchar(255),  @ORTDISAM numeric(19,5),  @TRDISPCT numeric(19,5),  @PYMTRMID char(20),  @DUEDATE datetime,  @DISCDATE datetime,  @DSCPCTAM numeric(19,5),  @PRSTADCD char(15),  @deposited tinyint,  @NumberPayments int,  @RECALCBTCHTOT tinyint,  @MCRTCLCMTD smallint,  @XCHGRATE numeric(19,5),  @SHIPMTHD char(15),  @icmGetLastJournalNumberErrState int,  @MAXLNITMSEQ int,  @ADDRESS1 char(60),  @ADDRESS2 char(60),  @ADDRESS3 char(60),  @CNTCPRSN char(60),  @FAXNUMBR char(21),  @CITY char(30),  @STATE char(29),  @ZIPCODE char(10),  @COUNTRY char(60),  @PHNUMBR1 char(21),  @PHNUMBR2 char(21),  @PHNUMBR3 char(21),  @SALSTERR char(15),  @SLPRSNID char(15),  @UPSZONE char(3),  @TAXEXMT1 char(25),  @TAXEXMT2 char(25),  @TXRGNNUM char(25),  @do_installed tinyint,  @do_active tinyint,  @cc_processelectronically tinyint  select @use_checkbook = 0,  @iGetNextNoteIdxErrState = 0,  @sCompanyID = 0,  @dtDEFAULT = '',  @DECPLCUR = 0,  @JRNENTRY = 0,  @CMDNUMWK = 0,  @SEQNUMBR = 0,  @RCVBGRBX  = 0,  @CREATEKEY = 0,  @DEPINDEX = 0,  @CURNCYID = '',  @CURRNIDX = 0,  @CASHINDEX = 0,  @CASHINDEXExisting = 0,  @O_iErrorState = 0,  @iStatus = 0,  @O_tOUTOK = 0,  @O_oErrorState = 0,  @TRXSORCE = '',  @iJrnlEntryErrState = 0,  @iNxtPymntErrState = 0,  @iTrxSorceErrState = 0,  @iGLTransErrState = 0,  @USER2ENT = '',        @nNextNoteIndex = 0,  @Reverse = 0,  @RMDTYPAL = 0,  @AUDITTRAIL = '',  @OLDCMDNUMWK = 0,  @CHEKBKID = '',  @AMNTPAID = 0,  @OAMTPAID = 0,  @DOCDATE = '',  @RTCLCMTD = 0,  @ISMCTRX = 0,  @FUNLCURR = '',  @FUNLCURRINDX = 0,  @FUNLDECPLCUR = 0,  @DOCNUMBR = '',  @PYMTTYPE = 0,  @CurrDate = convert(varchar(12),getdate()),  @NumPayments = 0,  @NumPayments = 0,  @iCreateSopPaymentErrState = 0,  @iCreateSopPaymentErrString = '',  @iGLTransErrString = '',  @iError = 0,  @NewReceipt = 0,  @CASHIDX = 0,  @CCRDXPDT = '',  @CHEKNMBR = '',  @iCustomState = 0,  @iCustomErrString = '',  @CreateOrUpdate = 0,  @SopHdrUpdateState = 0,  @SopHdrUpdateErrString = '',  @ORTDISAM = 0,  @TRDISPCT = 0,  @PYMTRMID = '',  @DUEDATE = '',  @DISCDATE = '',  @DSCPCTAM = 0,  @PRSTADCD = '',  @deposited = 0,  @NumberPayments = 0,  @RECALCBTCHTOT = 0,  @MCRTCLCMTD = -1,  @XCHGRATE = 0,  @SHIPMTHD = '',  @icmGetLastJournalNumberErrState = 0,  @MAXLNITMSEQ = 0,  @ADDRESS1 = '',  @ADDRESS2 = '',  @ADDRESS3 = '',  @CNTCPRSN = '',  @FAXNUMBR = '',  @CITY = '',  @STATE = '',  @ZIPCODE = '',  @COUNTRY = '',  @PHNUMBR1 = '',  @PHNUMBR2 = '',  @PHNUMBR3 = '',  @SALSTERR = '',  @SLPRSNID = '',  @UPSZONE = '',  @TAXEXMT1 = '',  @TAXEXMT2 = '',  @TXRGNNUM = '',  @do_installed = 0,  @do_active = 0,  @cc_processelectronically = 0  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateSopPaymentInsertRecordPre  @I_vSOPTYPE  output,  @I_vSOPNUMBE output,  @I_vCUSTNMBR output,  @I_vCUSTNAME output,  @I_vDOCDATE output,  @I_vDOCAMNT output,  @I_vCHEKBKID output,  @I_vCARDNAME output,  @I_vCHEKNMBR output,  @I_vRCTNCCRD output,  @I_vAUTHCODE output,  @I_vEXPNDATE output,  @I_vPYMTTYPE output,  @I_vDOCNUMBR output,  @I_vAction output,  @I_vSEQNUMBR output,  @I_vMDFUSRID output,  @I_vVOIDDATE output,  @I_vPROCESSELECTRONICALLY output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7749    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (exists(select 1 from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE)) begin  select @CURNCYID = CURNCYID,  @RTCLCMTD = RTCLCMTD,  @XCHGRATE = XCHGRATE   from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   select @CreateOrUpdate = 1 end else begin  select @CURNCYID = CURNCYID from RM00101 (nolock) where CUSTNMBR  = @I_vCUSTNMBR end  select  @DEFCACTY = DEFCACTY,  @CASHIDX = @CASHIDX  from RM00101 (nolock) where RM00101.CUSTNMBR = @I_vCUSTNMBR  if (@CURNCYID <> '') begin  select @CURRNIDX = isnull(CURRNIDX, 0), @DECPLCUR = isnull(DECPLCUR, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end else begin  select @CURNCYID = isnull(FUNLCURR, ''), @CURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock)  select @DECPLCUR = isnull(DECPLCUR, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @CURNCYID end  select @FUNLCURR = FUNLCURR from MC40000 (nolock) select  @FUNLCURRINDX = CURRNIDX,  @FUNLDECPLCUR = DECPLCUR - 1  from DYNAMICS..MC40200 (nolock) where CURNCYID = @FUNLCURR  if ((@CURNCYID <> @FUNLCURR) and (@CURNCYID <> '')) begin  select @ISMCTRX = 1 end  select @sCompanyID = CMPANYID,  @sINTERID = INTERID  from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@DECPLCUR <> 0 )  select @DECPLCUR = @DECPLCUR - 1  if ( @I_vSOPTYPE is null or  @I_vSOPNUMBE is null or  @I_vCUSTNMBR is null or  @I_vDOCDATE is null or  @I_vDOCAMNT is null or  @I_vCHEKNMBR is null or  @I_vCHEKBKID is null or  @I_vCARDNAME is null or  @I_vRCTNCCRD is null or  @I_vEXPNDATE is null or  @I_vPYMTTYPE is null or  @I_vDOCNUMBR is null or  @I_vPROCESSELECTRONICALLY is null) begin  select @O_iErrorState = 35    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vSOPNUMBE = UPPER(@I_vSOPNUMBE),  @I_vCUSTNMBR = UPPER(@I_vCUSTNMBR),  @I_vCHEKBKID = UPPER(@I_vCHEKBKID)  if (@I_vAction is null) begin  if (@I_vSEQNUMBR is not null)  begin  if (exists(select top 1 1 from SOP10103 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @I_vSEQNUMBR and PYMTTYPE = @I_vPYMTTYPE))  begin  select @I_vAction = 3  end  else  begin  select @I_vAction = 1  end  end  else  begin  if (exists(select top 1 1 from SOP10103 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and DOCNUMBR = @I_vDOCNUMBR and PYMTTYPE = @I_vPYMTTYPE))  begin  select @I_vAction = 3  end  else  begin  select @I_vAction = 1  end  end end  if ((@I_vSOPTYPE in(2,5)) and (@I_vDOCNUMBR <> '') and (@I_vPYMTTYPE = 6)) begin  select @O_iErrorState = 6618     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'DO40100') begin  select @do_installed = 1, @do_active = PSACTIVE from DYNAMICS..DO40100 (nolock) where CMPANYID = @sCompanyID end  if ((@do_installed = 1) and (@I_vPYMTTYPE in (3, 6))) begin  select @cc_processelectronically = PROCESSELECTRONICALLY from DO03100 (nolock) where CARDNAME = @I_vCARDNAME end  if (@I_vAction = 3) begin  if (@I_vSEQNUMBR is not null)  begin  select @NumberPayments = count(SEQNUMBR) from SOP10103 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and PYMTTYPE = @I_vPYMTTYPE  if (@NumberPayments = 0)  begin  select @O_iErrorState = 4614     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @NumberPayments = count(SEQNUMBR) from SOP10103 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and DOCNUMBR = @I_vDOCNUMBR and PYMTTYPE = @I_vPYMTTYPE   if (@NumberPayments = 0)  begin  select @O_iErrorState = 4615      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  if (@NumberPayments > 1)  begin  select @O_iErrorState = 8144     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   if (@I_vSEQNUMBR is null)  begin  select @I_vSEQNUMBR = SEQNUMBR from SOP10103 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and DOCNUMBR = @I_vDOCNUMBR and PYMTTYPE = @I_vPYMTTYPE  end   if (@do_installed = 1)   begin   if (exists(select 1 from DO10100 (nolock) where SOPTYPE = @I_vSOPTYPE and DOCNUMBR = @I_vSOPNUMBE and SEQNUMBR = @I_vSEQNUMBR))  begin  select @O_iErrorState = 11460     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  exec @iStatus = taCreateSopPaymentInsertRecord  @I_vSOPTYPE = @I_vSOPTYPE,   @I_vSOPNUMBE = @I_vSOPNUMBE,   @I_vCUSTNMBR = @I_vCUSTNMBR,   @I_vPYMTTYPE = @I_vPYMTTYPE,   @I_vCARDNAME = @I_vCARDNAME,   @I_vDOCNUMBR = @I_vDOCNUMBR,      @I_vAction = 2,     @I_vSEQNUMBR = @I_vSEQNUMBR,   @O_iErrorState = @iCreateSopPaymentErrState output,  @oErrString = @iCreateSopPaymentErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iCreateSopPaymentErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCreateSopPaymentErrString  select @O_iErrorState = 4616     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @NewReceipt = 1   select @I_vAction = 1 end  if ((@I_vCUSTNMBR = '') or (@I_vSOPNUMBE = '')) begin  select @O_iErrorState = 36      exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCUSTNAME = '') begin  select @I_vCUSTNAME = isnull(CUSTNAME,'') from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR end  if @I_vDOCDATE = ''  begin  select @I_vDOCDATE = convert(varchar(12),getdate())  end else  select @I_vDOCDATE = cast(@I_vDOCDATE as varchar(12))  if (@I_vPYMTTYPE not in(1,2,3,4,5,6)) begin  select @O_iErrorState = 3426     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (((@I_vAction < 1) or (@I_vAction > 3)) and (@I_vAction <> 9)) begin  select @O_iErrorState = 3427     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vSOPTYPE < 2) or (@I_vSOPTYPE > 6)) begin  select @O_iErrorState = 581     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPROCESSELECTRONICALLY not in(0,1)) begin  select @O_iErrorState = 11456     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPROCESSELECTRONICALLY = 1 and (@do_installed = 0 or @do_active = 0)) begin  select @O_iErrorState = 11458     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPROCESSELECTRONICALLY = 1) and (@I_vPYMTTYPE not in(3, 6))) begin  select @O_iErrorState = 11457     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPROCESSELECTRONICALLY = 1) and (@cc_processelectronically = 0) and (@I_vPYMTTYPE in(3, 6))) begin  select @O_iErrorState = 11464     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAction = 2 and @I_vPYMTTYPE in(1,2,3) and @I_vDOCNUMBR = '') begin  select @O_iErrorState = 3428     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vAction = 1) and (@I_vDOCAMNT <= 0)) begin  select @O_iErrorState = 109     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAction in(2,9)) begin  if (@I_vSEQNUMBR is not null)  begin  if (not exists (select 1 from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @I_vSEQNUMBR))  begin  select @O_iErrorState = 3552     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @I_vSEQNUMBR = SEQNUMBR from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and PYMTTYPE = @I_vPYMTTYPE and DOCNUMBR = @I_vDOCNUMBR  select @NumPayments = @@rowcount   if (@NumPayments > 1)  begin  select @O_iErrorState = 1524    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  if (@NumPayments = 0)  begin  select @O_iErrorState = 3767    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end   if ((((@I_vSOPTYPE = 2) or (@I_vSOPTYPE = 5)) and (exists(select 1 from SOP10103 (nolock) where SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and SEQNUMBR = @I_vSEQNUMBR and OAMNTREM > 0 and PYMTTYPE <> 6))) or  (((@I_vSOPTYPE = 3) or (@I_vSOPTYPE = 4) or (@I_vSOPTYPE = 6)) and (exists(select 1 from SOP10103 (nolock) where SOPNUMBE = @I_vSOPNUMBE and  SOPTYPE = @I_vSOPTYPE and SEQNUMBR = @I_vSEQNUMBR and TRXSORCE <> ''))))   begin  select @Reverse = 1  end end  if ((@I_vAction = 2) or (@I_vAction = 9)) begin  select @RMDTYPAL = RMDTYPAL,  @AUDITTRAIL = TRXSORCE,  @AMNTPAID = AMNTPAID,  @OAMTPAID = OAMTPAID,  @DOCDATE = DOCDATE,  @CASHINDEXExisting = CASHINDEX,  @DEPINDEX = DEPINDEX,  @PYMTTYPE = PYMTTYPE,  @CHEKNMBR = CHEKNMBR  from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and DOCNUMBR = @I_vDOCNUMBR and SEQNUMBR = @I_vSEQNUMBR end  if ((@I_vAction in(2,9)) and (@I_vCHEKNMBR = '')) begin  select @DOCNUMBR = @CHEKNMBR end  if ((@I_vAction in(2,9)) and (@I_vCHEKNMBR <> '')) begin  if not exists(select 1 from SOP10103 (nolock)  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and DOCNUMBR = @I_vDOCNUMBR and SEQNUMBR = @I_vSEQNUMBR and CHEKNMBR = @I_vCHEKNMBR)  begin  select @O_iErrorState = 5524     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @DOCNUMBR = @I_vCHEKNMBR  end end  if (@PYMTTYPE = 2) begin  select @OLDCMDNUMWK = CMDNUMWK,  @CHEKBKID = CHEKBKID  from CM20100 (nolock) where CMTrxNum = @DOCNUMBR and AUDITTRAIL = @AUDITTRAIL and VOIDED = 0 end else begin  select @OLDCMDNUMWK = CMDNUMWK,  @CHEKBKID = CHEKBKID  from CM20100 (nolock) where CMTrxNum = @I_vDOCNUMBR and AUDITTRAIL = @AUDITTRAIL and VOIDED = 0 end  if (exists(select top 1 CMRECNUM from CM20300 (nolock) where CMRECNUM = @OLDCMDNUMWK and VOIDED = 0 and DEPOSITED = 1 and depositnumber <> '')) begin  select @deposited = 1 end  if (@I_vPYMTTYPE in(3,6)) begin  select @RCVBGRBX = isnull(RCVBGRBX, 0), @CASHINDEX = isnull(ACTINDX, 0) from SY03100 (nolock) where CARDNAME = @I_vCARDNAME end  if (@I_vAction = 1) begin  if ((@I_vSOPTYPE in(3,4,6)) and @I_vPYMTTYPE not in(4,5,6))   begin  select @O_iErrorState = 3640     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vSOPTYPE = 2 or @I_vSOPTYPE = 5) and @I_vPYMTTYPE not in(1,2,3,6))  begin  select @O_iErrorState = 4006     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vPYMTTYPE = 2 or @I_vPYMTTYPE = 5) and (@I_vCHEKNMBR = ''))  begin  select @O_iErrorState = 753     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPYMTTYPE in(1,2,4,5)) or ((@I_vPYMTTYPE = 3) and (@RCVBGRBX = 0))  begin  if (@I_vPYMTTYPE in(1,2,4,5)) and (@I_vCHEKBKID = '')  begin  select @I_vCHEKBKID = CHEKBKID from SOP40100 (nolock) where SETUPKEY = 1   if (@I_vCHEKBKID = '')  begin  select @I_vCHEKBKID = CHEKBKID from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR  end  end   if ((@I_vPYMTTYPE = 3) and (@RCVBGRBX = 0) and (@I_vCHEKBKID = ''))  begin  select @I_vCHEKBKID = CKBKNUM1 FROM SY03100 (nolock) where CARDNAME = @I_vCARDNAME  end   if (@I_vCHEKBKID = '')  begin  select @O_iErrorState = 214     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID))  begin  select @O_iErrorState = 212     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCHEKBKID <> '')   begin  if (exists(select 1 from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID and INACTIVE = 1))  begin  select @O_iErrorState = 9528     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   end  else  begin  if ((@I_vCHEKBKID <> '') and (@RCVBGRBX = 1))  begin  select @O_iErrorState = 4007     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vPYMTTYPE in(3,6))  begin  if (not exists(select 1 from SY03100 (nolock) where CARDNAME = @I_vCARDNAME))  begin  select @O_iErrorState = 48     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end  if (@I_vEXPNDATE = '') begin  select @CCRDXPDT = CCRDXPDT from RM00101 (nolock) where CRCARDID = @I_vCARDNAME and CUSTNMBR = @I_vCUSTNMBR end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (((@I_vSOPTYPE in(2,5)) and (@I_vPYMTTYPE <> 6)) or (@Reverse = 1)) begin  exec @iStatus = glGetNextJournalEntry  1,  0,  @JRNENTRY output,  @O_tOUTOK output,  @iJrnlEntryErrState output  select @iError = @@error   if ((@iStatus <> 0) or (@iJrnlEntryErrState <> 0) or (@O_tOUTOK <> 1) or (@iError <> 0))  begin  select @O_iErrorState = 37    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vSOPTYPE in(2,3,5,6))  begin  if (((@I_vDOCNUMBR = '') and (@I_vAction = 1) and (@I_vSOPTYPE in(3,6))) or   ((@I_vDOCNUMBR = '') and (@I_vAction = 1) and (@I_vSOPTYPE in(2,5)) and (@I_vPYMTTYPE <> 6)) or  (@NewReceipt = 1))  begin  exec @iStatus = taGetPaymentNumber  9,  1,  @I_vDOCNUMBR output,  @iNxtPymntErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iNxtPymntErrState <> 0) or (@I_vDOCNUMBR = '') or (@I_vDOCNUMBR is NULL) or (@iError <> 0))  begin  select @O_iErrorState = 38    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (((@I_vSOPTYPE in(2,5)) and (@I_vPYMTTYPE <> 6)) or (@I_vSOPTYPE in (3,6)))   begin  select @CREATEKEY = 1  end  end  else  begin  if ((exists(select 1 from RM00401 (nolock) where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = 9)) and (@I_vAction = 1))  begin  select @O_iErrorState = 42     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if ((((@I_vSOPTYPE in(2,5)) and (@I_vPYMTTYPE <> 6)) or (@I_vSOPTYPE in (3,6))) and (@I_vAction = 1))   begin  select @CREATEKEY = 1  end  end   if (((@I_vSOPTYPE in(2,5)) and (@I_vPYMTTYPE <> 6)) or (@Reverse = 1))  begin  exec @iStatus = taGetTrxSourceNumber  3,  'SLSDP',  1,  @TRXSORCE output,  @iTrxSorceErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iTrxSorceErrState <> 0) or (@TRXSORCE = '') or (@TRXSORCE is NULL) or (@iError <> 0))  begin  select @O_iErrorState = 15    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   if ((@I_vPYMTTYPE in(3,6)) and exists(select 1 from SY03100 where CARDNAME = @I_vCARDNAME) and (@I_vAction = 1))  begin  if @RCVBGRBX = 1  begin  select @CASHINDEX = isnull(ACTINDX,0) from SY03100 where CARDNAME = @I_vCARDNAME  end  else  begin  select @use_checkbook = 1  end  end   if (@DEFCACTY = 1) and (@I_vPYMTTYPE not in(3,6))  begin  select @CASHINDEX = @CASHIDX   if @CASHINDEX = 0  begin  select @CASHINDEX = isnull(ACTINDX, 0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 50  end  end  else  if (((@I_vPYMTTYPE not in(3,6)) and (@DEFCACTY = 0)) or (@use_checkbook = 1))  begin  select @CASHINDEX = isnull(ACTINDX, 0) from CM00100 (nolock) where CHEKBKID = @I_vCHEKBKID  end   if @CASHINDEX = 0  begin  select @CASHINDEX = isnull(ACTINDX, 0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 50  end   if (@I_vAction = 1)  begin  select @DEPINDEX = isnull(ACTINDX, 0) from SY01100 (nolock) where SERIES = 3 and SEQNUMBR = 2500  end end  if ((@I_vSEQNUMBR = 0) or (@I_vSEQNUMBR is null)) begin  select @I_vSEQNUMBR = isnull(max(SEQNUMBR), 0) + 16384 from SOP10103 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE end  while 1 = 1 begin  if (@I_vAction = 1)  begin  insert into SOP10103  (  OAMNTREM,  AMNTREMA,  SOPTYPE,   SOPNUMBE,  SEQNUMBR,  PYMTTYPE,  DOCNUMBR,  RMDTYPAL,  CHEKBKID,  CHEKNMBR,  CARDNAME,  RCTNCCRD,  AUTHCODE,  AMNTPAID,  OAMTPAID,  DOCDATE,  EXPNDATE,  CURNCYID,  CURRNIDX,  TRXSORCE,  DEPSTATS,  DELETE1,  GLPOSTDT,  CASHINDEX,  DEPINDEX,  EFTFLAG  )  select  @I_vDOCAMNT,    @I_vDOCAMNT,    @I_vSOPTYPE,    @I_vSOPNUMBE,    @I_vSEQNUMBR,    @I_vPYMTTYPE,    case      when ((@I_vSOPTYPE in(2,5)) and @I_vPYMTTYPE <> 6)  or (@I_vSOPTYPE in (3,6))  then @I_vDOCNUMBR  when  @I_vSOPTYPE = 4 and @I_vDOCNUMBR is not null   then @I_vDOCNUMBR  else ''  end,   case     when (@I_vSOPTYPE = 4)  then 0  else 9  end,  case     when (@I_vPYMTTYPE in(1,2,4,5))   then @I_vCHEKBKID  else ''  end,  case     when (@I_vPYMTTYPE in(2,5))   then @I_vCHEKNMBR  else ''  end,  case      when (@I_vPYMTTYPE in (3,6))  then @I_vCARDNAME  else ''  end,  @I_vRCTNCCRD,    @I_vAUTHCODE,    @I_vDOCAMNT,    @I_vDOCAMNT,    @I_vDOCDATE,    case      when (@I_vPYMTTYPE in (3,6))   then @I_vEXPNDATE  else ''  end,  @CURNCYID,    @CURRNIDX,    case     when (@I_vSOPTYPE in(2,5) and @I_vPYMTTYPE <> 6)  then @TRXSORCE  else ''  end,  0,     0,     case     when @I_vSOPTYPE in(3,4,6) or @I_vPYMTTYPE = 6   then ''   else @I_vDOCDATE  end,  case     when @I_vSOPTYPE in(3,4,6) or @I_vPYMTTYPE = 6   then 0   else @CASHINDEX  end,  case     when @I_vSOPTYPE in(3,4,6)   then 0   else @DEPINDEX  end,  0      if @@error <> 0  begin  select @O_iErrorState = 39    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if ((@do_installed = 1) and (@I_vPYMTTYPE = 3 or @I_vPYMTTYPE = 6) and (@cc_processelectronically = 1))  begin  insert into DO10103  (  SOPTYPE,   SOPNUMBE,  SEQNUMBR,  PROCESSELECTRONICALLY  )  select  @I_vSOPTYPE,  @I_vSOPNUMBE,  @I_vSEQNUMBR,  @I_vPROCESSELECTRONICALLY  if @@error <> 0  begin  select @O_iErrorState = 11459    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  else  begin  if ((@I_vAction = 2) or ((@I_vAction = 9) and @I_vPYMTTYPE in(1,2,3,4,5,6)))     begin  delete SOP10103 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @I_vSEQNUMBR  if @@error <> 0  begin  select @O_iErrorState = 3431     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if (@do_installed = 1)  begin  if (exists(select 1 from DO10100 where SOPTYPE = @I_vSOPTYPE and DOCNUMBR = @I_vSOPNUMBE and SEQNUMBR = @I_vSEQNUMBR))  begin  select @O_iErrorState = 11461     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  else  begin  delete DO10103 where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and SEQNUMBR = @I_vSEQNUMBR  if @@error <> 0  begin  select @O_iErrorState = 11462    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  end  end   if ((@I_vSOPTYPE in(2,5)) or (@I_vAction = 2))  begin  if ((@I_vAction = 1) or ((@Reverse = 1) and (@deposited = 1)))  begin  exec @iStatus = cmGetLastJournalNumber @CMDNUMWK output, @icmGetLastJournalNumberErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@icmGetLastJournalNumberErrState <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 10447    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   select @CMDNUMWK = @CMDNUMWK + 1  end   if (@I_vAction = 1)  begin  if (@I_vPYMTTYPE = 1 or @I_vPYMTTYPE = 2 or (@I_vPYMTTYPE = 3 and @RCVBGRBX = 0))  begin  insert into CM20100  (  AUDITTRAIL,  CHEKBKID,  CMDNUMWK,  CMTrxNum,  CMTrxType,  CNTRLTYP,  RecNumControl  )  select  @TRXSORCE,      @I_vCHEKBKID,     @CMDNUMWK,      case       when @I_vPYMTTYPE = 2  then @I_vCHEKNMBR  else @I_vDOCNUMBR  end,  2,        2,        @CMDNUMWK      end  end  else  begin  if (@Reverse = 1)  begin  if (@I_vPYMTTYPE = 1 or @I_vPYMTTYPE = 2 or (@I_vPYMTTYPE = 3 and @RCVBGRBX = 0))  begin  if (@deposited = 0)  begin  insert into CM20100  (  AUDITTRAIL,  CHEKBKID,  CMDNUMWK,  CMTrxNum,  CMTrxType,  CNTRLTYP,  RecNumControl,  VOIDED  )  select  @AUDITTRAIL,  @CHEKBKID,  @OLDCMDNUMWK,  case  when @PYMTTYPE = 2  then @DOCNUMBR  else @I_vDOCNUMBR  end,  2,  2,  -@OLDCMDNUMWK,  1  end  else  begin  insert into CM20100  (  AUDITTRAIL,  CHEKBKID,  CMDNUMWK,  CMTrxNum,  CMTrxType,  CNTRLTYP,  RecNumControl,  VOIDED  )  select  @TRXSORCE,  @CHEKBKID,  @CMDNUMWK,  case  when @PYMTTYPE = 2  then @DOCNUMBR  else @I_vDOCNUMBR  end,  2,  2,  @CMDNUMWK,  0  end  end  end  end  if @@error <> 0  begin  select @O_iErrorState = 776    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (((@I_vAction = 1) and (@I_vPYMTTYPE = 1 or @I_vPYMTTYPE = 2 or (@I_vPYMTTYPE = 3 and @RCVBGRBX = 0))) or  ((@I_vAction = 2) and (@Reverse = 1) and (@deposited = 1)))  begin  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGetNextNoteIdxErrState  select @O_iErrorState = 998    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vAction = 1)  begin  if (@I_vPYMTTYPE = 1 or @I_vPYMTTYPE = 2 or (@I_vPYMTTYPE = 3 and @RCVBGRBX = 0))  begin  insert into CM20300 (  AUDITTRAIL,  BANKNAME,  BNKBRNCH,  CARDNAME,  Cash_Account_Index,  Checkbook_Amount,  CHEKBKID,  CMLinkID,  CMRECNUM,  CNTRLTYP,  CURNCYID,  CURRNIDX,  DECPLCUR,  DEPOSITED,  depositnumber,  DSCRIPTN,  EXCHDATE,  EXGTBLID,  EXPNDATE,  GLPOSTDT,  MDFUSRID,  MODIFDT,  NOTEINDX,  ORIGAMT,  POSTEDDT,  PTDUSRID,  RATETPID,  RCPTAMT,  RCPTNMBR,  RcpType,  RCRDSTTS,  RcvdFrom,  RCVGRATETPID,  RCVGRTCLCMTD,  Realized_GL_Account_Inde,  receiptdate,  Receiving_MC_Transaction,  RTCLCMTD,  SOURCDOC,  SRCDOCNUM,  SRCDOCTYP,  sRecNum,  TIME1,  USERDEF1,  USERDEF2,  VOIDDATE,  VOIDDESC,  VOIDED,  VOIDPDATE,  DENXRATE,     MCTRXSTT,     Receiving_DenomEXRate,  PMNTNMBR,  EFTFLAG  )  select  @TRXSORCE,    '',      '',      case       when (@I_vPYMTTYPE in(3,6))  then @I_vCARDNAME  else ''  end,  0,      @I_vDOCAMNT,   @I_vCHEKBKID,   @I_vCUSTNMBR,   @CMDNUMWK,    0,     @CURNCYID,   @CURRNIDX,    @DECPLCUR,   0,    '',    case       WHEN @I_vSOPTYPE = 2  THEN ('Order ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 3   THEN ('Invoice ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 4   THEN ('Return ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 5   THEN ('Back Order ' + @I_vSOPNUMBE)  end,  @dtDEFAULT,   '',    @dtDEFAULT,   @I_vDOCDATE,   case       WHEN @I_vMDFUSRID = ''  THEN @USER2ENT  ELSE @I_vMDFUSRID  end,  @I_vDOCDATE,   @nNextNoteIndex,   @I_vDOCAMNT,   convert(varchar(12),getdate()),      case       WHEN @I_vMDFUSRID = ''  THEN @USER2ENT  ELSE @I_vMDFUSRID  end,  '',    @I_vDOCAMNT,   case    when @I_vPYMTTYPE = 1 or @I_vPYMTTYPE = 3  then @I_vDOCNUMBR  else @I_vCHEKNMBR  end,  case    when @I_vPYMTTYPE = 1  then 2  when @I_vPYMTTYPE = 2  then 1  else 3  end,  40,    substring(@I_vCUSTNAME,1,31),   '',    0,    0,    @I_vDOCDATE,   0,    0,    'SLSTE',   @I_vSOPNUMBE,   @I_vSOPTYPE,   @CMDNUMWK,   @dtDEFAULT,   '',    '',    case    WHEN @I_vVOIDDATE = ''  THEN @dtDEFAULT  ELSE @I_vVOIDDATE  end,  '',    0,    case     WHEN @I_vVOIDDATE = ''  THEN @dtDEFAULT  ELSE @I_vVOIDDATE  end,  0,    0,    0,    '',    0    end  end  else  begin  if (@Reverse = 1)  begin  if (@deposited = 1)  begin  insert into CM20300  (  CMRECNUM,  sRecNum,  CNTRLTYP,  DEPOSITED,  MDFUSRID,  MODIFDT,  CHEKBKID,  depositnumber,  RCPTNMBR,  receiptdate,  RCPTAMT,  RcpType,  CARDNAME,  CURNCYID,  BANKNAME,  BNKBRNCH,  GLPOSTDT,  POSTEDDT,  PTDUSRID,  CMLinkID,  RcvdFrom,  DSCRIPTN,  VOIDED,  VOIDDATE,  VOIDPDATE,  VOIDDESC,  USERDEF1,  USERDEF2,  NOTEINDX,  RCRDSTTS,  SOURCDOC,  SRCDOCNUM,  SRCDOCTYP,  AUDITTRAIL,  ORIGAMT,  Checkbook_Amount,  RATETPID,  RCVGRATETPID,  EXGTBLID,  XCHGRATE,  Receiving_Exchange_Rate,  EXCHDATE,  TIME1,  RTCLCMTD,  RCVGRTCLCMTD,  EXPNDATE,  CURRNIDX,  DECPLCUR,  RLGANLOS,  Cash_Account_Index,  Realized_GL_Account_Inde,  DENXRATE,  MCTRXSTT,  Receiving_DenomEXRate,  Receiving_MC_Transaction,  PMNTNMBR,  EFTFLAG  )  select  @CMDNUMWK,    @CMDNUMWK,    CNTRLTYP,    0,     @I_vMDFUSRID,    @CurrDate,    CHEKBKID,    '',     RCPTNMBR,    receiptdate,    -RCPTAMT,    RcpType,    CARDNAME,    CURNCYID,    BANKNAME,    BNKBRNCH,    GLPOSTDT,    POSTEDDT,    PTDUSRID,    CMLinkID,    RcvdFrom,    DSCRIPTN,    VOIDED,     VOIDDATE,    VOIDPDATE,    VOIDDESC,    USERDEF1,    USERDEF2,    @nNextNoteIndex,   RCRDSTTS,    SOURCDOC,    SRCDOCNUM,    SRCDOCTYP,    @TRXSORCE,    -ORIGAMT,    case     when XCHGRATE <> 0 and RLGANLOS <> 0  then (Checkbook_Amount - RLGANLOS) * -1  else -Checkbook_Amount  end,  '',     RCVGRATETPID,    EXGTBLID,    Receiving_Exchange_Rate,  Receiving_Exchange_Rate,  EXCHDATE,    TIME1,  RTCLCMTD,    0,     '',     CURRNIDX,    DECPLCUR,    0,     0,     0,     0,     0,     0,     0,     '',     0     from CM20300 (nolock) where CMRECNUM = @OLDCMDNUMWK and VOIDED = 0 and DEPOSITED = 1 and depositnumber <> ''  if @@error <> 0  begin  select @O_iErrorState = 8142    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@I_vPYMTTYPE = 1 or @I_vPYMTTYPE = 2 or (@I_vPYMTTYPE = 3 and @RCVBGRBX = 0))  begin  if (@PYMTTYPE = 2)  begin  update CM20300 set  VOIDED = 1,  VOIDDATE =       case   WHEN @I_vVOIDDATE = ''  THEN @CurrDate  ELSE @I_vVOIDDATE  end,  VOIDPDATE =       case  WHEN @I_vVOIDDATE = ''  THEN @CurrDate  ELSE @I_vVOIDDATE  end,  VOIDDESC =       case   WHEN @I_vSOPTYPE = 2  THEN ('Order ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 3   THEN ('Invoice ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 4   THEN ('Return ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 5   THEN ('Back Order ' + @I_vSOPNUMBE)  end,  RCRDSTTS = 40  where RCPTNMBR = @DOCNUMBR and SRCDOCNUM = @I_vSOPNUMBE  end  else  begin  update CM20300 set  VOIDED = 1,  VOIDDATE =       case  WHEN @I_vVOIDDATE = ''  THEN @CurrDate   ELSE @I_vVOIDDATE  end,  VOIDPDATE =       case  WHEN @I_vVOIDDATE = ''  THEN @CurrDate  ELSE @I_vVOIDDATE  end,  VOIDDESC =       case   WHEN @I_vSOPTYPE = 2  THEN ('Order ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 3   THEN ('Invoice ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 4   THEN ('Return ' + @I_vSOPNUMBE)  WHEN @I_vSOPTYPE = 5   THEN ('Back Order ' + @I_vSOPNUMBE)  end,  RCRDSTTS = 40  where RCPTNMBR = @I_vDOCNUMBR and SRCDOCNUM = @I_vSOPNUMBE  end  end  end  end  end  if @@error <> 0  begin  select @O_iErrorState = 777    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (((@I_vAction = 1) and (@I_vPYMTTYPE in(1,2,3))) or (@Reverse = 1))  begin  insert into SOP30100 (  TRXSORCE,  BCHSOURC,  BACHNUMB,  BCHCOMNT,  CHEKBKID,  GLPOSTDT,  APPROVL,  APPRVLDT,  APRVLUSERID,  BCHTOTAL,  CNTRLTOT,  NUMOFTRX,  CNTRLTRX,  REPRNTNT,  USERID,  NOTEINDX,  TRXMISNG  )  select  @TRXSORCE,    'Sales Deposits',   'eConnect',    '',     '',     @dtDEFAULT,    0,     @dtDEFAULT,    '',     0,     0,     1,     0,     0,     '',     0,     0     end  if @@error <> 0  begin  select @O_iErrorState = 3421    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@I_vAction = 1)  begin  select @SEQNUMBR = isnull(max(LNITMSEQ) ,0) + 1 from SOP30201 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end   if (@I_vAction in(2,9))  begin  select @SEQNUMBR = isnull(max(LNITMSEQ) ,0) + 1,  @MAXLNITMSEQ = max(LNITMSEQ)  from SOP30201 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  end   if ((@I_vAction = 1) and (@I_vPYMTTYPE in(1,2,3)))  begin  insert into SOP30201  (  SOPTYPE,  SOPNUMBE,  LNITMSEQ,  CUSTNMBR,  CUSTNAME,  DOCDATE,  DOCNUMBR,  RMDTYPAL,  PYMTTYPE,  AMNTPAID,  OAMTPAID,  CHEKBKID,  CHEKNMBR,  CARDNAME,  RCTNCCRD,  EXPNDATE,  AUTHCODE,  PYMNTDAT,  GLPOSTDT,  CASHINDEX,  DEPINDEX,  DELETE1,  CURNCYID,  CURRNIDX,  XCHGRATE,  DENXRATE,  RATETPID,  RTCLCMTD,  EXGTBLID,  EXCHDATE,  MCTRXSTT,  TRXSORCE   )  select   @I_vSOPTYPE,    @I_vSOPNUMBE,    @SEQNUMBR,    @I_vCUSTNMBR,    @I_vCUSTNAME,    @I_vDOCDATE,    @I_vDOCNUMBR,    9,     @I_vPYMTTYPE,    @I_vDOCAMNT,    @I_vDOCAMNT,    case      when (@I_vPYMTTYPE in (3,6))  then ''  else @I_vCHEKBKID  end,  @I_vCHEKNMBR,    @I_vCARDNAME,    @I_vRCTNCCRD,    @I_vEXPNDATE,    @I_vAUTHCODE,    @I_vDOCDATE,    @I_vDOCDATE,    @CASHINDEX,    @DEPINDEX,    0,     @CURNCYID,    @CURRNIDX,    0,     0,     '',     0,     '',     '',     0,     @TRXSORCE    end  else  begin  if ((@Reverse = 1) and (@I_vPYMTTYPE in(1,2,3)))  begin  insert into SOP30201  (  SOPTYPE,  SOPNUMBE,  LNITMSEQ,  CUSTNMBR,  CUSTNAME,  DOCDATE,  DOCNUMBR,  RMDTYPAL,  PYMTTYPE,  AMNTPAID,  OAMTPAID,  CHEKBKID,  CHEKNMBR,  CARDNAME,  RCTNCCRD,  EXPNDATE,  AUTHCODE,  PYMNTDAT,  GLPOSTDT,  CASHINDEX,  DEPINDEX,  DELETE1,  CURNCYID,  CURRNIDX,  XCHGRATE,  DENXRATE,  RATETPID,  RTCLCMTD,  EXGTBLID,  EXCHDATE,  MCTRXSTT,  TRXSORCE  )  select   SOPTYPE,    SOPNUMBE,    @SEQNUMBR,    CUSTNMBR,    CUSTNAME,    DOCDATE,    DOCNUMBR,    RMDTYPAL,    PYMTTYPE,    AMNTPAID,    OAMTPAID,    CHEKBKID,    CHEKNMBR,    CARDNAME,    RCTNCCRD,    EXPNDATE,    AUTHCODE,    PYMNTDAT,    GLPOSTDT,    CASHINDEX,    DEPINDEX,    1,     CURNCYID,    CURRNIDX,    XCHGRATE,    DENXRATE,    RATETPID,    RTCLCMTD,    EXGTBLID,    EXCHDATE,    MCTRXSTT,    @TRXSORCE    from SOP30201 (nolock)  where TRXSORCE = @AUDITTRAIL and SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE and  DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @RMDTYPAL AND LNITMSEQ = @MAXLNITMSEQ   end  end  if @@error <> 0  begin  select @O_iErrorState = 40    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@CREATEKEY = 1)  begin  insert RM00401  (  DOCNUMBR,  RMDTYPAL,  DCSTATUS,  CUSTNMBR,  DOCDATE  )  select  @I_vDOCNUMBR,    9,     0,     @I_vCUSTNMBR,    @I_vDOCDATE    if @@error <> 0  begin  select @O_iErrorState = 45    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@I_vAction in(2,9))  begin  delete RM00401 where DOCNUMBR = @I_vDOCNUMBR and RMDTYPAL = @RMDTYPAL  if @@error <> 0  begin  select @O_iErrorState = 2937    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end    if (@I_vAction in(2,9))  begin  if ((@I_vPYMTTYPE in(1,2,3)) and (@I_vAction = 2))  begin  update SOP10100 set  DEPRECVD =  case  when DEPRECVD - @AMNTPAID >= 0  then DEPRECVD - @AMNTPAID  else 0  end,  ORDEPRVD =  case  when ORDEPRVD - @OAMTPAID >= 0 and @I_vPYMTTYPE in(1,2,3)  then ORDEPRVD - @OAMTPAID  else 0  end  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if @@error <> 0  begin  select @O_iErrorState = 9145    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if ((@I_vPYMTTYPE in(4,5,6)) and (@I_vAction = 2))  begin  update SOP10100 set  PYMTRCVD =  case  when PYMTRCVD - @AMNTPAID >= 0 and @I_vPYMTTYPE in(4,5,6)  then PYMTRCVD - @AMNTPAID  else 0  end,  ORPMTRVD =  case  when ORPMTRVD - @OAMTPAID >= 0 and @I_vPYMTTYPE in(4,5,6)  then ORPMTRVD - @OAMTPAID  else 0  end  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if @@error <> 0  begin  select @O_iErrorState = 9146    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if (@I_vAction = 2)  begin  update SOP10100 set  ACCTAMNT = ACCTAMNT + @AMNTPAID,  ORACTAMT = ORACTAMT + @OAMTPAID  where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE  if @@error <> 0  begin  select @O_iErrorState = 3432    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vPYMTTYPE in(1,2,3))  begin  update RM00103 set  DEPRECV = DEPRECV - @AMNTPAID  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if @@error <> 0  begin  select @O_iErrorState = 4600    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   if (@I_vPYMTTYPE in(4)) and (@I_vSOPTYPE in (3,6))  begin  update RM00103 set   UNPSTOCA = UNPSTOCA - @AMNTPAID  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if @@error <> 0  begin  select @O_iErrorState = 9371    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   end   if (@I_vAction = 1)  begin  if (@I_vSOPTYPE in(3,6))  begin  update RM00103 set   UNPSTOCA = UNPSTOCA + @I_vDOCAMNT  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if @@error <> 0  begin  select @O_iErrorState = 8148    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@I_vSOPTYPE = 4)  begin  update RM00103 set   UNPSTOCA = UNPSTOCA - @I_vDOCAMNT  from RM00103 (updlock)  where CUSTNMBR = @I_vCUSTNMBR  if @@error <> 0  begin  select @O_iErrorState = 8149    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end  end   if ((@I_vSOPTYPE in(2,5)) and (@Reverse = 0) and (@I_vPYMTTYPE <> 6))  begin  exec @iStatus = taCreateGlTransaction  @I_vINTERID   = @sINTERID,   @I_vDTAControlNum = @I_vSOPNUMBE,  @I_vORMSTRID  = @I_vCUSTNMBR,  @I_vCUSTNAME  = @I_vCUSTNAME,  @I_vCURNCYID  = @CURNCYID,  @I_vCURRNIDX  = @CURRNIDX,  @I_vDECPLCUR  = @DECPLCUR,  @I_vTRXDATE  = @I_vDOCDATE,  @I_vDEBITAMT  = @I_vDOCAMNT,  @I_vJRNENTRY  = @JRNENTRY,  @I_vCASHINDEX    = @CASHINDEX,  @I_vDEPINDEX  = @DEPINDEX,  @I_vTRXSORCE  = @TRXSORCE,  @I_vDENXRATE  = 0,  @I_vMCTRXSTT   = 0,  @I_vDOCDATE  = '',  @I_vORTRXDESC  = '',  @I_vORTRXTYP  = @I_vSOPTYPE,  @O_iErrorState  = @iGLTransErrState output,  @oErrString    = @iGLTransErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iGLTransErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGLTransErrString  select @O_iErrorState = 2560    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   update SY00500 set BCHCOMNT = 'Sales Deposits' where BACHNUMB = @TRXSORCE and BCHSOURC = 'GL_Normal'  if @@error <> 0  begin  select @O_iErrorState = 8294    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@Reverse = 1)  begin  if (@ISMCTRX = 1)  begin  select @MCRTCLCMTD = @RTCLCMTD  end  else  begin  select @MCRTCLCMTD = -1  end   exec @iStatus = taCreateReverseGlTransaction  @I_vINTERID   = @sINTERID,   @I_vDTAControlNum = @I_vSOPNUMBE,  @I_vORMSTRID  = @I_vCUSTNMBR,  @I_vCUSTNAME  = @I_vCUSTNAME,  @I_vCURNCYID  = @CURNCYID,  @I_vCURRNIDX  = @CURRNIDX,  @I_vRTCLCMTD  = @MCRTCLCMTD,  @I_vDECPLCUR  = @DECPLCUR,  @I_vTRXDATE  = @DOCDATE,  @I_vDEBITAMT  = @OAMTPAID,  @I_vJRNENTRY  = @JRNENTRY,  @I_vCASHINDEX    = @CASHINDEXExisting,  @I_vDEPINDEX  = @DEPINDEX,  @I_vTRXSORCE  = @TRXSORCE,  @I_vDENXRATE  = 0,  @I_vMCTRXSTT   = 0,  @I_vDOCDATE  = '',  @I_vORTRXDESC  = '',  @I_vORTRXTYP  = @I_vSOPTYPE,  @I_vUSWHPSTD  = @I_vMDFUSRID,        @I_vBATCHTOTAL  = @AMNTPAID,        @I_vXCHGRATE  = @XCHGRATE,        @O_iErrorState  = @iGLTransErrState output,  @oErrString    = @iGLTransErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iGLTransErrState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iGLTransErrString  select @O_iErrorState = 41    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  end   if ((@Reverse = 1) and (@ISMCTRX = 1))  begin  update a set  a.CURRNIDX = b.CURRNIDX,  a.CURNCYID = b.CURNCYID,  a.RATETPID = b.RATETPID,  a.XCHGRATE = b.XCHGRATE,  a.TIME1 = b.TIME1,  a.RTCLCMTD = b.RTCLCMTD,  a.EXCHDATE = b.EXCHDATE,  a.EXGTBLID = b.EXGTBLID       from GL10000 a, SOP10100 b (nolock)  where b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  a.JRNENTRY = @JRNENTRY  if @@error <> 0  begin  select @O_iErrorState = 3433    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@RTCLCMTD = 0)  begin  update a set  a.CURRNIDX = @FUNLCURRINDX,   a.DECPLACS = @FUNLDECPLCUR,   a.EXGTBLID = b.EXGTBLID,  a.XCHGRATE = b.XCHGRATE,  a.RATETPID = b.RATETPID,  a.EXCHDATE = b.EXCHDATE,  a.TIME1 = b.TIME1,  a.RTCLCMTD = b.RTCLCMTD,  a.CRDTAMNT = round(ORCRDAMT * b.XCHGRATE, @FUNLDECPLCUR),  a.DEBITAMT = round(ORDBTAMT * b.XCHGRATE, @FUNLDECPLCUR)  from GL10001 a, SOP10100 b (nolock)  where b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  a.JRNENTRY = @JRNENTRY   end  else  begin  if (@RTCLCMTD = 1)  begin  update a set  a.CURRNIDX = @FUNLCURRINDX,   a.DECPLACS = @FUNLDECPLCUR,  a.EXGTBLID = b.EXGTBLID,  a.XCHGRATE = b.XCHGRATE,  a.RATETPID = b.RATETPID,  a.EXCHDATE = b.EXCHDATE,  a.TIME1 = b.TIME1,  a.RTCLCMTD = b.RTCLCMTD,  a.CRDTAMNT = round(ORCRDAMT / b.XCHGRATE, @FUNLDECPLCUR),  a.DEBITAMT = round(ORDBTAMT / b.XCHGRATE, @FUNLDECPLCUR)  from GL10001 a, SOP10100 b (nolock)  where b.SOPTYPE = @I_vSOPTYPE and  b.SOPNUMBE = @I_vSOPNUMBE and  a.JRNENTRY = @JRNENTRY   end  if @@error <> 0  begin  select @O_iErrorState = 3434    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  end   if(@CreateOrUpdate = 1)  begin  select @ORTDISAM = ORTDISAM,  @TRDISPCT = TRDISPCT,  @PYMTRMID = PYMTRMID,  @DUEDATE = DUEDATE,  @DISCDATE = DISCDATE,  @DSCPCTAM = DSCPCTAM / 100,  @PRSTADCD = PRSTADCD,  @ADDRESS1 = ADDRESS1,  @ADDRESS2 = ADDRESS2,  @ADDRESS3 = ADDRESS3,  @CNTCPRSN = CNTCPRSN,  @FAXNUMBR = FAXNUMBR,  @CITY = CITY,  @STATE = STATE,  @ZIPCODE = ZIPCODE,  @COUNTRY = COUNTRY,  @PHNUMBR1 = PHNUMBR1,  @PHNUMBR2 = PHNUMBR2,  @PHNUMBR3 = PHONE3,  @SHIPMTHD = SHIPMTHD,    @SALSTERR = SALSTERR,  @SLPRSNID = SLPRSNID,  @UPSZONE = UPSZONE,  @TAXEXMT1 = TAXEXMT1,  @TAXEXMT2 = TAXEXMT2,  @TXRGNNUM = TXRGNNUM  from SOP10100 (nolock) where SOPTYPE = @I_vSOPTYPE and SOPNUMBE = @I_vSOPNUMBE   if (@TRDISPCT > 0)  begin  select @TRDISPCT = @TRDISPCT / 100.00,  @ORTDISAM = null  end   if (@TRDISPCT = 0)  begin  select @ORTDISAM = @ORTDISAM,  @TRDISPCT = null  end   if (@I_vAction = 1)  begin  select @RECALCBTCHTOT = 1     end  else  begin  if (@I_vAction in (2,9))  begin  select @RECALCBTCHTOT = 3    end  end   exec @iStatus = taSopHdrRecalc  @I_vSOPTYPE  = @I_vSOPTYPE,  @I_vSOPNUMBE = @I_vSOPNUMBE,  @I_vSHIPMTHD = @SHIPMTHD,     @I_vPYMTRMID = @PYMTRMID,  @I_vPRSTADCD = @PRSTADCD,  @I_vADDRESS1 = @ADDRESS1,  @I_vADDRESS2 = @ADDRESS2,  @I_vADDRESS3 = @ADDRESS3,  @I_vCNTCPRSN = @CNTCPRSN,  @I_vFAXNUMBR = @FAXNUMBR,  @I_vCITY = @CITY,  @I_vSTATE = @STATE,  @I_vZIPCODE = @ZIPCODE,  @I_vCOUNTRY = @COUNTRY,  @I_vPHNUMBR1 = @PHNUMBR1,  @I_vPHNUMBR2 = @PHNUMBR2,  @I_vPHNUMBR3 = @PHNUMBR3,  @I_vDUEDATE = @DUEDATE,  @I_vDISCDATE = @DISCDATE,  @I_vTRDISAMT = @ORTDISAM,  @I_vTRADEPCT = @TRDISPCT,  @I_vSALSTERR = @SALSTERR,  @I_vSLPRSNID = @SLPRSNID,  @I_vUPSZONE = @UPSZONE,  @I_vTAXEXMT1 = @TAXEXMT1,  @I_vTAXEXMT2 = @TAXEXMT2,  @I_vTXRGNNUM = @TXRGNNUM,  @I_vRECALCBTCHTOT = @RECALCBTCHTOT,    @I_vDSCPCTAM = @DSCPCTAM,  @I_vRECREATEDIST = 1,  @O_iErrorState = @SopHdrUpdateState output,  @oErrString = @SopHdrUpdateErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@SopHdrUpdateState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @SopHdrUpdateErrString  select @O_iErrorState = 8140     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  break end  exec @iStatus = taCreateSopPaymentInsertRecordPost  @I_vSOPTYPE ,  @I_vSOPNUMBE,  @I_vCUSTNMBR,  @I_vCUSTNAME,  @I_vDOCDATE,  @I_vDOCAMNT,  @I_vCHEKBKID,  @I_vCARDNAME,  @I_vCHEKNMBR,  @I_vRCTNCCRD,  @I_vAUTHCODE,  @I_vEXPNDATE,  @I_vPYMTTYPE,  @I_vDOCNUMBR,  @I_vAction,  @I_vSEQNUMBR,  @I_vMDFUSRID,  @I_vVOIDDATE,  @I_vPROCESSELECTRONICALLY,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7750    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateSopPaymentInsertRecord] TO [DYNGRP]
GO

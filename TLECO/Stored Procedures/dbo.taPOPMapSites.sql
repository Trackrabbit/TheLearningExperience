SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPOPMapSites] @I_vLOCNCODE  char(10),    @I_vADRSCODE  char(15),   @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1  char(50) = '',   @I_vUSRDEFND2  char(50) = '',   @I_vUSRDEFND3  char(50) = '',   @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState int output,   @oErrString varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @CMPANYID smallint,  @iAddCodeErrState int,    @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @CMPANYID = 0,  @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taPOPMapSitesPre  @I_vLOCNCODE output,  @I_vADRSCODE output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4714    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vLOCNCODE is NULL or  @I_vADRSCODE is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or   @I_vUSRDEFND2 is NULL or   @I_vUSRDEFND3 is NULL or   @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL) begin  select @O_iErrorState = 4715    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vLOCNCODE = UPPER(@I_vLOCNCODE),  @I_vADRSCODE = UPPER(@I_vADRSCODE)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@I_vLOCNCODE = '') begin  select @O_iErrorState = 4716    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vLOCNCODE <> '') begin  if (not exists(select 1 from IV40700 (nolock) where LOCNCODE = @I_vLOCNCODE))  begin  select @O_iErrorState = 4717    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vADRSCODE = '') begin  select @O_iErrorState = 4718    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vADRSCODE <> '') begin  if (not exists(select 1 from SY00600 (nolock) where LOCATNID = @I_vADRSCODE and CMPANYID = @CMPANYID))  begin  select @O_iErrorState = 4719    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vRequesterTrx < 0 or @I_vRequesterTrx > 1) begin  select @O_iErrorState = 4720     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if not exists( select 1 from POP40800 (nolock) where LOCNCODE = @I_vLOCNCODE )   begin  insert POP40800  (  LOCNCODE,  ADRSCODE  )  select   @I_vLOCNCODE,   @I_vADRSCODE   if @@error <> 0  begin  select @O_iErrorState = 4721    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 4722    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPOPMapSitesPost  @I_vLOCNCODE,  @I_vADRSCODE,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4723    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPOPMapSites] TO [DYNGRP]
GO

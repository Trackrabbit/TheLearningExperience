SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateLocationID]  @I_vLOCATNID char(15),    @I_vSTATEDESCR char(30) = '',   @I_vCOUNTYDESCR char(30) = '',   @I_vCITYDESCR char(30) = '',   @I_vSTATEABBREV char(2) = '',   @I_vSTATECD char(2) = '',   @I_vCOUNTYCODE char(3) = '',   @I_vCITYCODE char(4) = '',   @I_vLASTMNTDDATE datetime = null,  @I_vLASTMNTDUSERID char(15) = '',  @I_vUSRDEFND1  char(50) = '',       @I_vUSRDEFND2  char(50) = '',       @I_vUSRDEFND3  char(50) = '',       @I_vUSRDEFND4  varchar(8000) = '',  @I_vUSRDEFND5  varchar(8000) = '',  @O_iErrorState  int output,   @oErrString  varchar(255) output   with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @LOCATIONINDX int,    @NOTEINDX numeric(19,5),  @CMPANYID smallint,  @iGetNextNoteIdxErrState int,  @iAddCodeErrState int,    @O_iNumErrorState int,   @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @iError int     select  @LOCATIONINDX = 0,    @CMPANYID = 0,  @iStatus = 0,   @O_iErrorState = 0    if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateLocationIDPre  @I_vLOCATNID output,  @I_vSTATEDESCR output,  @I_vCOUNTYDESCR output,  @I_vCITYDESCR output,  @I_vSTATEABBREV output,  @I_vSTATECD output,  @I_vCOUNTYCODE output,  @I_vCITYCODE output,  @I_vLASTMNTDDATE output,  @I_vLASTMNTDUSERID output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3150    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if(  @I_vLOCATNID is NULL or  @I_vSTATEDESCR is NULL or  @I_vCOUNTYDESCR is NULL or  @I_vCITYDESCR is NULL or  @I_vSTATEABBREV is NULL or  @I_vSTATECD is NULL or  @I_vCOUNTYCODE is NULL or  @I_vCITYCODE is NULL or  @I_vLASTMNTDUSERID is NULL or   @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   )  begin  select @O_iErrorState = 3151    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vLOCATNID = UPPER(@I_vLOCATNID),  @I_vSTATEABBREV = UPPER(@I_vSTATEABBREV),  @I_vCOUNTYCODE = UPPER(@I_vCOUNTYCODE),  @I_vCITYCODE = UPPER(@I_vCITYCODE)  select @CMPANYID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@LOCATIONINDX = 0)     begin  exec @iStatus = taGetLocationIndex  @I_tInc_Dec = 1,   @O_vLocationIndex = @LOCATIONINDX output,  @O_iErrorState = @O_iNumErrorState output  select @iError = @@error  if ((@iStatus <> 0) or (@O_iNumErrorState <> 0) or (@iError <> 0))  begin  select @O_iErrorState = 5362    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 3152   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if  ( @I_vLOCATNID = '' ) begin  select @O_iErrorState = 3153    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@O_iErrorState = 0) begin  if not exists( select 1 from FA41100 (nolock) where  LOCATNID = @I_vLOCATNID )   begin  insert into FA41100 ( LOCATIONINDX,  LOCATNID,  STATEDESCR,  COUNTYDESCR,  CITYDESCR,  STATEABBREV,  STATECD,  COUNTYCODE,  CITYCODE,  NOTEINDX,  LASTMNTDDATE,  LASTMNTDTIME,  LASTMNTDUSERID  )  select   @LOCATIONINDX,      @I_vLOCATNID,      @I_vSTATEDESCR,      @I_vCOUNTYDESCR,     @I_vCITYDESCR,      @I_vSTATEABBREV,     @I_vSTATECD,       @I_vCOUNTYCODE,      @I_vCITYCODE,      @NOTEINDX,      case       WHEN @I_vLASTMNTDDATE is null  THEN convert(varchar(12),getdate())  ELSE @I_vLASTMNTDDATE  end,   '',       @I_vLASTMNTDUSERID      if @@error <> 0  begin  select @O_iErrorState = 3154    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end  else  begin  select @O_iErrorState = 3155    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  end  end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taCreateLocationIDPost  @I_vLOCATNID,  @I_vSTATEDESCR,  @I_vCOUNTYDESCR,  @I_vCITYDESCR,  @I_vSTATEABBREV,  @I_vSTATECD,   @I_vCOUNTYCODE,  @I_vCITYCODE,  @I_vLASTMNTDDATE,  @I_vLASTMNTDUSERID,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 3156    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateLocationID] TO [DYNGRP]
GO

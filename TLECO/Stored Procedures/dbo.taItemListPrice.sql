SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taItemListPrice]  @I_vCUSTNMBR char(15) = '',    @I_vDOCDATE datetime = '',   @I_vITEMNMBR char(30),    @I_vQUANTITY numeric(19,5) = 1 output,   @I_vPRCLEVEL char(10) = '' output,  @I_vNONINVEN smallint = 0,        @I_vCURNCYID char(15) = '' output,  @I_vIncludePromo smallint = 0,   @I_vUOFM char(8) = '' output,   @I_vUNITPRCE numeric(19,5) = 0 output,   @I_vITEMDESC char(101) = '' output,  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @PRCLEVEL char(10),  @iCustomState int,  @iCustomErrString varchar(255),  @EXPRINST int,  @sCompanyID int,  @iStatus int,  @O_oErrorState int,  @STNDCOST numeric(19,5),  @CURRCOST numeric(19,5),  @PRICMTHD smallint,  @UOMSCHDL char(10),  @PriceGroup char(10),  @DECPLCUR smallint,  @CURRNIDX int,  @UOFMBASE char(8),  @QTYBSUOM numeric(19,5),  @DECPLCURMINUS1 smallint,  @tCURNCYID char(15),  @LISTPRCE numeric(19,5),  @FUNLCURR char(15),  @ISMCTRX smallint,  @ROUNDTO smallint,  @ROUNDHOW smallint,  @RNDGAMNT numeric(19,5),  @iError int,  @piST_DorP char(1),  @poIN_PromFound integer,  @poIN_PromType integer,  @poDE_PromPrice decimal(19,5),  @poST_SchemeCode char(15),  @poST_SchemeItemType char(1),  @poST_SchemeGroup char(31),  @poDE_QtyFrom decimal (19,5),  @poDE_QtyTo decimal (19,5),  @poIN_CurrPriceFound integer,  @Description char(50),  @StartDate datetime,  @EndDate datetime,   @QuantityFree decimal(19,5),  @QuantityFrom decimal(19,5),  @QuantityTo decimal(19,5),  @PriceSheetID char(15),  @Prices_Not_Required_In_Pr tinyint,  @CALCKITC tinyint,  @ITEMTYPE tinyint,  @UOMPRICE numeric(19,5)  select   @PRCLEVEL = '',  @piST_DorP = 'C',  @poIN_PromFound = 0,  @poIN_PromType = 0,  @poDE_PromPrice = 0,  @poST_SchemeCode = '',  @poST_SchemeItemType = '',  @poST_SchemeGroup = '',  @poDE_QtyFrom = 0,  @poDE_QtyTo = 0,  @poIN_CurrPriceFound = 0,  @iCustomState = 0,  @iCustomErrString = '',  @EXPRINST = 0,  @O_oErrorState = 0,  @STNDCOST = 0,  @CURRCOST = 0,  @PRICMTHD = 0,  @UOMSCHDL = '',  @PriceGroup = '',  @UOFMBASE = '',  @QTYBSUOM = 0,  @tCURNCYID = '',  @LISTPRCE = 0,  @FUNLCURR = '',  @ISMCTRX = 0,  @ROUNDTO = 0,  @ROUNDHOW = 0,  @RNDGAMNT = 0,  @iError = 0,  @Description = '',  @StartDate = '',   @EndDate = '',   @QuantityFree = 0,  @O_iErrorState = 0,  @I_vUNITPRCE = 0,  @QuantityFrom = 0,  @QuantityTo = 0,  @PriceSheetID = '',  @Prices_Not_Required_In_Pr = 0,  @CALCKITC = 0,  @ITEMTYPE = 0,  @UOMPRICE = 0  if (@oErrString is null) begin  select @oErrString = '' end  if @I_vDOCDATE = ''  select @I_vDOCDATE = convert(varchar(12),getdate())  exec @iStatus = taItemListPricePre  @I_vCUSTNMBR output,  @I_vDOCDATE output,  @I_vITEMNMBR output,  @I_vQUANTITY output,  @I_vPRCLEVEL output,  @I_vNONINVEN output,  @I_vCURNCYID output,  @I_vUOFM output,  @I_vIncludePromo output,  @I_vUNITPRCE output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7304     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vITEMNMBR is null or  @I_vCUSTNMBR is null or  @I_vDOCDATE is null or  @I_vITEMNMBR is null or  @I_vQUANTITY is null or  @I_vPRCLEVEL is null or  @I_vNONINVEN is null or  @I_vCURNCYID is null or  @I_vIncludePromo is null or  @I_vUOFM is null or  @I_vUNITPRCE is null   ) begin  select @O_iErrorState = 7305    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vITEMNMBR = UPPER(@I_vITEMNMBR)  select @sCompanyID = CMPANYID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  select @EXPRINST = EXPRINST from DYNAMICS..SY05501 (nolock) where CMPANYID = @sCompanyID  if ((@I_vNONINVEN < 0) or (@I_vNONINVEN > 1)) begin  select @O_iErrorState = 7306     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vCUSTNMBR <> '') begin  if (not exists(select 1 from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR))  begin  select @O_iErrorState = 7307     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vNONINVEN = 1) begin  if (exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 7308     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vNONINVEN = 0) begin  select  @STNDCOST = STNDCOST,  @CURRCOST = CURRCOST,  @PRCLEVEL =  case  when @I_vPRCLEVEL = ''  then PRCLEVEL  else @I_vPRCLEVEL  end,  @PRICMTHD = PRICMTHD,  @I_vUOFM =  case  when @I_vUOFM = ''  then SELNGUOM  else @I_vUOFM  end,  @UOMSCHDL = UOMSCHDL,  @PriceGroup = PriceGroup,  @I_vITEMDESC = ITEMDESC,  @ITEMTYPE = ITEMTYPE  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR end else begin  select  @DECPLCUR = DECPLCUR  from SOP40100 (nolock) where SETUPKEY = 1   if (@I_vUOFM = '')  begin  select @I_vUOFM = 'Each'  end   select @I_vPRCLEVEL = '' end  if (@I_vCURNCYID = '') begin  select @I_vCURNCYID = isnull(CURNCYID, '') from RM00101 (nolock) where CUSTNMBR  = @I_vCUSTNMBR   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(FUNLCURR, '') from MC40000 (nolock)  end end else begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID end  if ((@CURRNIDX = 0) or (@I_vCURNCYID = '')) begin  select @O_iErrorState = 7309     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @UOFMBASE = BASEUOFM from IV40201 (nolock) where UOMSCHDL = @UOMSCHDL select @QTYBSUOM = QTYBSUOM from IV40202 (nolock) where UOMSCHDL = @UOMSCHDL and EQUIVUOM = @UOFMBASE and UOFM = @I_vUOFM  if (@I_vUOFM = '') begin  select @O_iErrorState = 7310     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  if ((@I_vCURNCYID <> '') and ( @I_vCURNCYID <> @FUNLCURR)) begin  select @ISMCTRX = 1 end  if (@I_vNONINVEN = 0) begin  if (@ISMCTRX = 1)  begin  select @DECPLCUR = DECPLCUR, @LISTPRCE = LISTPRCE from IV00105 (nolock)  where ITEMNMBR = @I_vITEMNMBR and CURNCYID = @I_vCURNCYID  end  else  begin  select @DECPLCUR = DECPLCUR, @LISTPRCE = LISTPRCE from IV00105 (nolock)  where ITEMNMBR = @I_vITEMNMBR and (CURNCYID = '' or CURNCYID = @I_vCURNCYID)  end end  if exists(select top 1 1 from IV00108 (nolock) where ITEMNMBR = @I_vITEMNMBR and CURNCYID <> '') begin  select @tCURNCYID = @I_vCURNCYID end else begin  select @tCURNCYID = '' end  select @Prices_Not_Required_In_Pr = Prices_Not_Required_In_Pr,  @CALCKITC = CALCKITC  from SOP40100 (nolock)  if (@I_vNONINVEN = 0) begin  if (not exists(select 1 from IV40202 (nolock) where UOFM = @I_vUOFM and UOMSCHDL = @UOMSCHDL))  begin  select @O_iErrorState = 7311     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPRCLEVEL = '' and @EXPRINST = 0)  begin  select @I_vPRCLEVEL = PRCLEVEL from RM00101 (nolock) where CUSTNMBR = @I_vCUSTNMBR   if ((@I_vPRCLEVEL <> '') and (@Prices_Not_Required_In_Pr = 0) and  (not exists(select 1 from IV00108 (nolock)  where ITEMNMBR = @I_vITEMNMBR and PRCLEVEL = @I_vPRCLEVEL and CURNCYID = @tCURNCYID and UOFM = @I_vUOFM)))  begin  select @I_vPRCLEVEL = ''  end   if (@I_vPRCLEVEL = '')  begin  select @I_vPRCLEVEL = PRCLEVEL from RM40101 (nolock)   if ((@I_vPRCLEVEL <> '') and (@Prices_Not_Required_In_Pr = 0)  and (not exists(select 1 from IV00108 (nolock)  where ITEMNMBR = @I_vITEMNMBR and PRCLEVEL = @I_vPRCLEVEL and CURNCYID = @tCURNCYID and UOFM = @I_vUOFM)))  begin  select @I_vPRCLEVEL = ''  end  end   if (@I_vPRCLEVEL = '')  begin   if (@Prices_Not_Required_In_Pr = 0)   select @I_vPRCLEVEL = @PRCLEVEL  end  end  else if (@I_vPRCLEVEL = '' and @EXPRINST = 1)  begin  select @I_vPRCLEVEL = PRCLEVEL from RM40101 (nolock)   if @I_vPRCLEVEL = ''  begin  select @I_vPRCLEVEL = 'EXTPRCLVL'  end  end end  if (@I_vPRCLEVEL <> '') begin  if (not exists(select 1 from IV40800 (nolock) where PRCLEVEL = @I_vPRCLEVEL))  begin  select @O_iErrorState = 7312     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  select @DECPLCURMINUS1 = @DECPLCUR - 1  if (@EXPRINST = 0) begin   if ((@PRICMTHD in(3,4,5,6)) and (@ITEMTYPE = 3) and (@CALCKITC = 1))  begin  select @UOMPRICE = UOMPRICE/100 from IV00108 (nolock)  where ITEMNMBR = @I_vITEMNMBR and  CURNCYID = @FUNLCURR and  PRCLEVEL = @I_vPRCLEVEL and  UOFM = @I_vUOFM and  FROMQTY <= @I_vQUANTITY and  TOQTY >= @I_vQUANTITY   if (@PRICMTHD = 3)  begin  select @I_vUNITPRCE = round(round(sum(CURRCOST * CMPITQTY), @DECPLCURMINUS1) * isnull(round(1 + @UOMPRICE, @DECPLCURMINUS1), 0), @DECPLCURMINUS1)  from IV00104 a, IV00101 b, IV40202 c  where a.CMPTITNM = b.ITEMNMBR and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.CMPITUOM and  a.ITEMNMBR = @I_vITEMNMBR  end  else  begin  if (@PRICMTHD = 4)  begin  select @I_vUNITPRCE = round(round(sum(STNDCOST * CMPITQTY), @DECPLCURMINUS1) * isnull(round(1 + @UOMPRICE, @DECPLCURMINUS1), 0), @DECPLCURMINUS1)  from IV00104 a, IV00101 b, IV40202 c  where a.CMPTITNM = b.ITEMNMBR and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.CMPITUOM and  a.ITEMNMBR = @I_vITEMNMBR  end  else  begin  if (@PRICMTHD = 5)  begin  select @I_vUNITPRCE = round(round(sum(CURRCOST * CMPITQTY), @DECPLCURMINUS1) / isnull(1 - @UOMPRICE, 0), @DECPLCURMINUS1)  from IV00104 a, IV00101 b, IV40202 c  where a.CMPTITNM = b.ITEMNMBR and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.CMPITUOM and  a.ITEMNMBR = @I_vITEMNMBR  end  else  begin  if (@PRICMTHD = 6)  begin  select @I_vUNITPRCE = round(round(sum(STNDCOST * CMPITQTY), @DECPLCURMINUS1) / isnull(1 - @UOMPRICE, 0), @DECPLCURMINUS1)  from IV00104 a, IV00101 b, IV40202 c  where a.CMPTITNM = b.ITEMNMBR and  c.UOMSCHDL = b.UOMSCHDL and  c.UOFM = a.CMPITUOM and  a.ITEMNMBR = @I_vITEMNMBR  end  end  end  end  if (@I_vUNITPRCE is null)  begin  select @I_vUNITPRCE = 0  end  end  else  begin  select @I_vUNITPRCE =  case   when @PRICMTHD = 1 then isnull(UOMPRICE,0)  when @PRICMTHD = 2 then isnull(round( ( @LISTPRCE * @QTYBSUOM ) * ( UOMPRICE / 100 ), @DECPLCUR - 1 ) , 0 )  when @PRICMTHD = 3 then isnull(round( ( @CURRCOST * @QTYBSUOM ) * ( 1 + ( UOMPRICE / 100 ) ), @DECPLCUR - 1  ), 0 )  when @PRICMTHD = 4 then isnull(round( ( @STNDCOST * @QTYBSUOM ) * ( 1 + ( UOMPRICE / 100 ) ), @DECPLCUR - 1  ), 0 )  when @PRICMTHD = 5 then isnull(round( ( @CURRCOST * @QTYBSUOM ) / ( 1 - ( UOMPRICE / 100 ) ), @DECPLCUR - 1  ), 0 )  when @PRICMTHD = 6 then isnull(round( ( @STNDCOST * @QTYBSUOM ) / ( 1 - ( UOMPRICE / 100 ) ), @DECPLCUR - 1  ), 0 )  else 0  end  from IV00108 (nolock) where  ITEMNMBR = @I_vITEMNMBR and  CURNCYID = @tCURNCYID and  PRCLEVEL = @I_vPRCLEVEL and  UOFM = @I_vUOFM and  QTYBSUOM = @QTYBSUOM and  FROMQTY <= @I_vQUANTITY and  TOQTY >= @I_vQUANTITY  end   select  @RNDGAMNT = isnull(RNDGAMNT,0),  @ROUNDHOW = isnull(ROUNDHOW,0),  @ROUNDTO = isnull(ROUNDTO,0)   from IV00107 (nolock) where  ITEMNMBR = @I_vITEMNMBR and  CURNCYID = @tCURNCYID and  PRCLEVEL = @I_vPRCLEVEL and  UOFM = @I_vUOFM and  QTYBSUOM = @QTYBSUOM   if (@ROUNDTO > 1 and @ROUNDTO < 5)  begin  exec @iStatus = taPricingGetRoundPrice  @ROUNDTO,  @ROUNDHOW,  @RNDGAMNT,  @I_vUNITPRCE OUTPUT  select @iError = @@error  if (@iError <> 0) or (@iStatus <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + 'Round Pricing error'  select @O_iErrorState = 7313     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end end else begin  if(@tCURNCYID = '')  begin  select @tCURNCYID = @FUNLCURR    end   exec sopExtPricingGetPrice  @piST_DorP,  @I_vCUSTNMBR,  @I_vITEMNMBR,  @I_vUOFM,  @I_vDOCDATE,  @I_vQUANTITY,  @I_vIncludePromo,  @tCURNCYID,  @I_vUNITPRCE OUTPUT,  @poIN_PromFound OUTPUT,  @poIN_PromType OUTPUT,  @poDE_PromPrice OUTPUT,  @poST_SchemeCode OUTPUT,  @poST_SchemeItemType OUTPUT,  @poST_SchemeGroup OUTPUT,  @poDE_QtyFrom OUTPUT,  @poDE_QtyTo OUTPUT,  @poIN_CurrPriceFound OUTPUT,  @Description OUTPUT,  @StartDate OUTPUT,  @EndDate OUTPUT,  @QuantityFree OUTPUT,  @QuantityFrom OUTPUT,   @QuantityTo OUTPUT,  @PriceSheetID OUTPUT  select @iError = @@error  if (@iError <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + 'Extending Pricing error'  select @O_iErrorState = 7314     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if @poIN_PromFound = 1  begin  select @I_vUNITPRCE = @poDE_PromPrice  end end  if (@O_iErrorState <> 0)  return (@O_iErrorState)   exec @iStatus = taItemListPricePost  @I_vCUSTNMBR,  @I_vDOCDATE,  @I_vITEMNMBR,  @I_vQUANTITY,  @I_vPRCLEVEL,  @I_vNONINVEN,  @I_vCURNCYID,  @I_vUOFM,  @I_vIncludePromo,  @I_vUNITPRCE,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomErrString  select @O_iErrorState = 7315    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taItemListPrice] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE PROCEDURE [dbo].[aagCorrectAADist]  @JRNENTRY INT AS  BEGIN   DECLARE   @aaGLWorkHdrID INT,   @aaGLWorkDistID INT,   @aaGLWorkAssignID INT,  @DSCRIPTN VARCHAR(100),   @GLDEBITAMT NUMERIC(19,7),   @GLCRDTAMNT NUMERIC(19,7),   @GLORCRDAMT NUMERIC(19,7),   @GLORDBTAMT NUMERIC(19,7),  @AssignPercent INT,  @RoundStr VARCHAR(255)   SELECT @RoundStr = SQL_MSG FROM DYNAMICS..MESSAGES WHERE MSGNUM = 6514 and Language_ID = 0   DECLARE Assign CURSOR LOCAL FOR   SELECT A.aaGLWorkHdrID, A1.aaGLWorkDistID, G.DSCRIPTN, G.DEBITAMT,G.CRDTAMNT,G.ORCRDAMT, G.ORDBTAMT FROM AAG10001 A1  INNER JOIN AAG10000 A ON A.aaGLWorkHdrID = A1.aaGLWorkHdrID  INNER JOIN GL10001 G on G.JRNENTRY = A.JRNENTRY AND A1.SQNCLINE = G.SQNCLINE AND  (A1.DEBITAMT <> G.DEBITAMT OR A1.CRDTAMNT <> G.CRDTAMNT OR A1.ORCRDAMT <> G.ORCRDAMT OR A1.ORDBTAMT <> G.ORDBTAMT) WHERE A.JRNENTRY = @JRNENTRY   OPEN Assign  FETCH NEXT FROM Assign INTO @aaGLWorkHdrID, @aaGLWorkDistID, @DSCRIPTN, @GLDEBITAMT, @GLCRDTAMNT, @GLORCRDAMT, @GLORDBTAMT  WHILE @@FETCH_STATUS = 0   BEGIN   IF @GLDEBITAMT + @GLORDBTAMT = 0  BEGIN  IF @DSCRIPTN <> @RoundStr  BEGIN  UPDATE AAG10001 SET CRDTAMNT = @GLCRDTAMNT, ORCRDAMT = @GLORCRDAMT  WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID   UPDATE AAG10002 SET CRDTAMNT = ROUND(@GLCRDTAMNT * aaAssignedPercent / 10000,2), ORCRDAMT = ROUND(@GLORCRDAMT * aaAssignedPercent / 10000,2) FROM AAG10002  WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID  SELECT @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID)  SELECT @aaGLWorkAssignID = MAX(aaGLWorkAssignID) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID  IF @AssignPercent = 10000  UPDATE AAG10002 SET   CRDTAMNT= CRDTAMNT+(SELECT a1.CRDTAMNT - SUM(a2.CRDTAMNT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.CRDTAMNT),  ORCRDAMT= ORCRDAMT+(SELECT a1.ORCRDAMT - SUM(a2.ORCRDAMT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.ORCRDAMT)  FROM AAG10002   WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaGLWorkAssignID   END  END  ELSE  BEGIN  IF @DSCRIPTN <> @RoundStr  BEGIN  UPDATE AAG10001 SET DEBITAMT= @GLDEBITAMT, ORDBTAMT = @GLORDBTAMT  WHERE AAG10001.aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID  UPDATE AAG10002 SET DEBITAMT= ROUND(@GLDEBITAMT * aaAssignedPercent / 10000,2), ORDBTAMT = ROUND(@GLORDBTAMT * aaAssignedPercent / 10000,2) FROM AAG10002  WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID   SELECT @AssignPercent = (SELECT SUM(aaAssignedPercent) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID)  SELECT @aaGLWorkAssignID = MAX(aaGLWorkAssignID) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID  IF @AssignPercent = 10000  UPDATE AAG10002 SET   DEBITAMT= DEBITAMT+(SELECT a1.DEBITAMT - SUM(a2.DEBITAMT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.DEBITAMT),  ORDBTAMT= ORDBTAMT+(SELECT a1.ORDBTAMT - SUM(a2.ORDBTAMT) FROM AAG10002 a2 INNER JOIN AAG10001 a1 ON a2.aaGLWorkHdrID = a1.aaGLWorkHdrID AND a2.aaGLWorkDistID = a1.aaGLWorkDistID AND a2.aaGLWorkHdrID = @aaGLWorkHdrID AND a2.aaGLWorkDistID=@aaGLWorkDistID GROUP BY a1.ORDBTAMT)  FROM AAG10002   WHERE aaGLWorkHdrID = @aaGLWorkHdrID AND aaGLWorkDistID = @aaGLWorkDistID AND aaGLWorkAssignID = @aaGLWorkAssignID   END  END  FETCH NEXT FROM Assign INTO @aaGLWorkHdrID, @aaGLWorkDistID, @DSCRIPTN, @GLDEBITAMT, @GLCRDTAMNT, @GLORCRDAMT, @GLORDBTAMT  END  CLOSE Assign  DEALLOCATE Assign END   
GO
GRANT EXECUTE ON  [dbo].[aagCorrectAADist] TO [DYNGRP]
GO

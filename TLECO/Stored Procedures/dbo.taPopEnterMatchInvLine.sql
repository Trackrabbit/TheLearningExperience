SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taPopEnterMatchInvLine]  @I_vPOPRCTNM char(17),     @I_vPOPMtchShpRcpt char(17) = '',   @I_vShipRCPTLNNM int = 0,    @I_vPONUMBER char(17) = '',    @I_vQTYINVCD numeric(19,5) = 0,    @I_vRevalue_Inventory smallint = null,   @I_vITEMNMBR char(30) = '',    @I_vVENDORID char(15),     @I_vRCPTLNNM int = 0,     @I_vVNDITNUM char(30) = '',    @I_vVNDITDSC char(100) = '',    @I_vVarianceAccount varchar(75) = '',   @I_vUOFM char(8) = '',     @I_vUNITCOST numeric(19,5),    @I_vEXTDCOST numeric(19,5),    @I_vNONINVEN smallint = 0,    @I_vAUTOCOST int = 0,     @I_vPurchase_IV_Item_Taxable smallint = 2,  @I_vPurchase_Item_Tax_Schedu char(15) = '',  @I_vPurchase_Site_Tax_Schedu char(15) = '',  @I_vTAXAMNT numeric (19,5) = 0,    @I_vRequesterTrx smallint = 0,    @I_vPOLNENUM int = 0,     @I_vAutoInvoice smallint = 0,    @I_vCURNCYID char(15) = '',    @I_vLandedCost smallint = 0,    @I_vProjNum char(15) = null,    @I_vCostCatID char(15) = null,    @I_vTrackedDropShipped smallint = 0,     @I_vUSRDEFND1 char(50) = '',    @I_vUSRDEFND2 char(50) = '',    @I_vUSRDEFND3 char(50) = '',    @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output, @oErrString varchar(255) output  with encryption as   set transaction isolation level read uncommitted set nocount on  declare @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @LOCNCODEREG char(10),     @ShipRCPTLNNMcount int,  @QTYSHPPDRem numeric(19,5),  @QTYINVCDMtch numeric(19,5),  @POLinecount int,  @ISMCTRX smallint,  @FUNLCURR char(15),  @DECPLCURItem smallint,  @FUNDECPLCUR smallint,  @EDITDECPLCUR smallint,  @ITEMDESC char(100),  @VNDITDSC char(100),  @UOFM char(8),  @INVINDX int,  @JOBNUMBR char(17),  @Capital_Item tinyint,  @DECPLCUR smallint,  @DECPLQTY smallint,  @ODECPLCU smallint,  @LOCNCODE char(10),  @UMQTYINB numeric(19,5),  @UNITCOST numeric(19,5),  @ORUNTCST numeric(19,5),  @POLNESTA smallint,     @POTYPE smallint,  @VENDORID char(15),  @ITEMNMBR char(30),  @CURNCYID char(15),  @CURRNIDX int,  @PRCHSUOM char(8),  @UOMSCHDL char(10),  @ITEMTYPE int,  @ITMTRKOP smallint,  @Revalue_Inventory int,  @SHIPMTHD char(15),     @VADCDPAD char(15),     @PURPVIDX int,      @VCTNMTHD smallint,  @RcptLineNoteIDArray_1 numeric(19,5),  @RcptLineNoteIDArray_2 numeric(19,5),  @RcptLineNoteIDArray_3 numeric(19,5),  @RcptLineNoteIDArray_4 numeric(19,5),  @RcptLineNoteIDArray_5 numeric(19,5),  @RcptLineNoteIDArray_6 numeric(19,5),  @RcptLineNoteIDArray_7 numeric(19,5),  @COMMNTID char(15),  @Product_Indicator smallint,  @TRXSORCE char(13),  @POCount int,  @OSTDCOST numeric(19,5),  @XCHGRATE numeric(19,5),  @RATETPID char(15),  @Tolerance_Percentage int,  @QTYRem numeric(19,5),  @OrigQTYORDER numeric(19,5),  @Remaining_AP_Amount numeric(19,5),  @OREXTCST numeric(19,5),  @Invoice_Match smallint,  @ACPURIDX int,  @RUPPVAMT numeric(19,5),  @UPPVIDX int,  @MCINSTALLED smallint,  @QTYSubtract numeric(19,5),  @count int,  @MAXSEG int,  @Location_Segment char(67),  @ACSGFLOC smallint,  @ACTINDX int,  @ACCNT_STRING char(100),  @NEW_ACCNT_STRING varchar(100),  @LOFSGMNT int,  @LOFSGMNTEND int,  @LOFSGMNTALL int,  @POVNDITNUM char(30),  @itemNumber char(30),  @SERLTQTY numeric(19,5)  select @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @LOCNCODEREG = '',     @ShipRCPTLNNMcount = 0,  @QTYSHPPDRem = 0,  @QTYINVCDMtch = 0,  @POLinecount = 0,  @ISMCTRX = 0,  @FUNLCURR = '',  @DECPLCURItem = 0,  @FUNDECPLCUR = 0,  @EDITDECPLCUR = 0,  @ITEMDESC = '',  @VNDITDSC = '',  @UOFM = '',  @INVINDX = 0,  @JOBNUMBR = '',  @Capital_Item = 0,  @DECPLCUR = 0,  @DECPLQTY = 0,  @ODECPLCU = 0,  @LOCNCODE = '',  @UMQTYINB = 0,  @UNITCOST = 0,  @ORUNTCST = 0,  @POLNESTA = 0,      @POTYPE = 0,  @VENDORID = '',  @ITEMNMBR = '',  @CURNCYID = '',  @CURRNIDX = 0,  @PRCHSUOM = '',  @UOMSCHDL = '',  @ITEMTYPE = 0,  @ITMTRKOP = 0,  @Revalue_Inventory = 0,  @SHIPMTHD = '',      @VADCDPAD = '',      @PURPVIDX = 0,      @VCTNMTHD = 0,  @RcptLineNoteIDArray_1 = 0,  @RcptLineNoteIDArray_2 = 0,  @RcptLineNoteIDArray_3 = 0,  @RcptLineNoteIDArray_4 = 0,  @RcptLineNoteIDArray_5 = 0,  @RcptLineNoteIDArray_6 = 0,  @RcptLineNoteIDArray_7 = 0,  @COMMNTID = '',  @Product_Indicator = 0,  @TRXSORCE = '',  @POCount = 0,  @OSTDCOST = 0,  @XCHGRATE = 0,  @RATETPID = '',  @Tolerance_Percentage = 0,  @QTYRem = 0,  @OrigQTYORDER = 0,  @Remaining_AP_Amount = 0,  @OREXTCST = 0,  @Invoice_Match = 0,  @ACPURIDX = 0,  @RUPPVAMT = 0,  @UPPVIDX = 0,  @MCINSTALLED = 1,  @O_iErrorState = 0,  @QTYSubtract = 0,  @count = 0,  @MAXSEG = 0,  @Location_Segment = '',  @ACSGFLOC = 0,  @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = '',  @LOFSGMNT = 0,  @LOFSGMNTEND = 0,  @LOFSGMNTALL = 0,  @POVNDITNUM = '',  @itemNumber = '',  @SERLTQTY =0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taPopEnterMatchInvLinePre  @I_vPOPRCTNM output,  @I_vPOPMtchShpRcpt output,  @I_vShipRCPTLNNM output,  @I_vPONUMBER output,  @I_vQTYINVCD output,  @I_vRevalue_Inventory output,  @I_vITEMNMBR output,  @I_vVENDORID output,  @I_vRCPTLNNM output,  @I_vVNDITNUM output,  @I_vVNDITDSC output,  @I_vVarianceAccount output,  @I_vUOFM output,  @I_vUNITCOST output,  @I_vEXTDCOST output,  @I_vNONINVEN output,  @I_vAUTOCOST output,  @I_vPurchase_IV_Item_Taxable output,  @I_vPurchase_Item_Tax_Schedu output,  @I_vPurchase_Site_Tax_Schedu output,  @I_vTAXAMNT output,  @I_vRequesterTrx output,  @I_vPOLNENUM output,  @I_vAutoInvoice output,  @I_vCURNCYID output,  @I_vLandedCost output,  @I_vProjNum output,  @I_vCostCatID output,  @I_vTrackedDropShipped output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4831    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vPOPRCTNM is null or  @I_vPOPMtchShpRcpt is null or  @I_vShipRCPTLNNM is null or  @I_vPONUMBER is null or  @I_vQTYINVCD is null or  @I_vITEMNMBR is null or  @I_vVENDORID is null or  @I_vRCPTLNNM is null or  @I_vVNDITNUM is null or  @I_vVNDITDSC is null or  @I_vVarianceAccount is null or  @I_vUOFM is null or  @I_vUNITCOST is null or  @I_vEXTDCOST is null or  @I_vNONINVEN is null or  @I_vAUTOCOST is null or  @I_vPurchase_IV_Item_Taxable is null or  @I_vPurchase_Item_Tax_Schedu is null or  @I_vPurchase_Site_Tax_Schedu is null or  @I_vTAXAMNT is null or  @I_vRequesterTrx is null or  @I_vPOLNENUM is null or  @I_vAutoInvoice is null or  @I_vCURNCYID is null or  @I_vLandedCost is null) begin  select @O_iErrorState = 4832    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vPOPRCTNM = '' or @I_vVENDORID = '') begin  select @O_iErrorState = 4833     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @I_vPOPRCTNM = UPPER(@I_vPOPRCTNM),  @I_vPOPMtchShpRcpt = UPPER(@I_vPOPMtchShpRcpt),  @I_vPONUMBER = UPPER(@I_vPONUMBER),  @I_vITEMNMBR = UPPER(@I_vITEMNMBR),  @I_vVENDORID = UPPER(@I_vVENDORID),  @I_vCURNCYID = UPPER(@I_vCURNCYID),  @I_vLandedCost = UPPER(@I_vLandedCost)  if ((@I_vAUTOCOST = 1) and ((@I_vUNITCOST > 0) or (@I_vEXTDCOST > 0))) begin  select @O_iErrorState = 4834     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPONUMBER <> '') begin  if not exists(select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER)  begin  select @O_iErrorState = 4835     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vLandedCost = 1)  begin  select @O_iErrorState = 7018     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vProjNum <> '') or (@I_vCostCatID <> '') begin  select @O_iErrorState = 11486     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end   if ( (@I_vQTYINVCD < 0) or  (@I_vRCPTLNNM < 0) or  (@I_vUNITCOST < 0) or  (@I_vEXTDCOST < 0) or  (@I_vTAXAMNT < 0) or  (@I_vPOLNENUM < 0)) begin  select @O_iErrorState = 4836    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vRevalue_Inventory not in(0,1)) and (@I_vRevalue_Inventory is not null)) begin  select @O_iErrorState = 4837     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vNONINVEN not in(0,1)) begin  select @O_iErrorState = 4838     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAUTOCOST not in(0,1)) begin  select @O_iErrorState = 4839     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vPurchase_IV_Item_Taxable not in(1,2,3)) begin  select @O_iErrorState = 4840     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vRequesterTrx not in(0,1)) begin  select @O_iErrorState = 4841     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vAutoInvoice not in(0,1)) begin  select @O_iErrorState = 4842     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vShipRCPTLNNM > 0) and (@I_vPOPMtchShpRcpt = '')) begin  select @O_iErrorState = 4843     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ((@I_vPOLNENUM > 0) and (@I_vPONUMBER = '')) begin  select @O_iErrorState = 4844     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vLandedCost not in(0,1)) begin  select @O_iErrorState = 5310     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (exists(select 1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER and POSTATUS in (5,6))) begin  select @O_iErrorState = 5307     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if exists (select 1 from POP10170 (nolock) where PONUMBER = @I_vPONUMBER) begin  select @O_iErrorState = 11972    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ((@I_vNONINVEN = 1) and (@I_vLandedCost = 0)) begin  if (exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 4813     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if ((@I_vLandedCost = 1) and (@I_vITEMNMBR = '')) begin  select @O_iErrorState = 5312     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if ( (exists(select 1 from POP10300 (nolock) where POPRCTNM = @I_vPOPRCTNM)) or  (exists(select 1 from POP30300 (nolock) where POPRCTNM = @I_vPOPRCTNM))) begin  select @O_iErrorState = 7125     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAutoInvoice = 1) begin  if ((@I_vUNITCOST <> 0) or (@I_vEXTDCOST <> 0))  begin  select @O_iErrorState = 4845     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vPONUMBER = '')  begin  select @O_iErrorState = 4846     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @I_vAUTOCOST = 1 end  select @FUNLCURR = FUNLCURR from MC40000 (nolock)  if (@FUNLCURR = '') begin  select @O_iErrorState = 5885    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  select @FUNDECPLCUR = DECPLCUR - 1 from MC40000 a (nolock), DYNAMICS..MC40200 b (nolock)  where a.FUNCRIDX = b.CURRNIDX and a.FUNLCURR = b.CURNCYID  if (@I_vAutoInvoice = 0) begin  if (@I_vPurchase_IV_Item_Taxable <> 1)   begin  select @I_vPurchase_Item_Tax_Schedu = ''  end   if (@I_vPurchase_Item_Tax_Schedu <> '')  begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Item_Tax_Schedu))  begin  select @O_iErrorState = 4847     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vPurchase_Site_Tax_Schedu <> '')  begin  if (not exists(select 1 from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Site_Tax_Schedu))  begin  select @O_iErrorState = 4848     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if ((@I_vITEMNMBR = '') and (@I_vVNDITNUM = ''))  begin  select @O_iErrorState = 4849     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vLandedCost = 1)  begin  select @I_vNONINVEN = 1  end   if ((@I_vNONINVEN = 0) and (@I_vLandedCost = 0))  begin  if (@I_vVNDITNUM = '')  begin  select @I_vVNDITNUM = VNDITNUM from IV00103 (nolock) where ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  end   if (@I_vITEMNMBR = '')  begin  select @count = count(ITEMNMBR) from IV00103 (nolock) where VNDITNUM = @I_vVNDITNUM and VENDORID = @I_vVENDORID  if (@count > 1)  begin  select @O_iErrorState = 8157     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  select @I_vITEMNMBR = ITEMNMBR from IV00103 (nolock) where VNDITNUM = @I_vVNDITNUM and VENDORID = @I_vVENDORID  end  end   if (not exists(select 1 from IV00103 (nolock)  where VNDITNUM = @I_vVNDITNUM and VENDORID = @I_vVENDORID))  begin  if (@I_vPONUMBER <> '')  begin  select top 1 @itemNumber = IsNull(ITEMNMBR,'') from POP10110 (nolock)  where PONUMBER = @I_vPONUMBER and VENDORID = @I_vVENDORID and VNDITNUM = @I_vVNDITNUM  if (@itemNumber <> '')  begin  if (@I_vITEMNMBR = '')  begin  select @I_vITEMNMBR = @itemNumber  end  if (@itemNumber <> @I_vITEMNMBR)  begin  select @O_iErrorState = 8295     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  else  begin  select @POVNDITNUM = VNDITNUM from IV00103 where ITEMNMBR = @itemNumber and VENDORID = @I_vVENDORID  end  end  end  end  else  begin  select @POVNDITNUM = @I_vVNDITNUM  end    if (not exists(select 1 from IV00103 (nolock)  where ITEMNMBR = @I_vITEMNMBR and VNDITNUM = @POVNDITNUM and VENDORID = @I_vVENDORID))   begin  select @O_iErrorState = 4850     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   select @POVNDITNUM = ''   if ((@I_vNONINVEN = 1) and (@I_vVNDITNUM = ''))  begin  select @I_vVNDITNUM = @I_vITEMNMBR  end   if ((@I_vNONINVEN = 0) and (@I_vLandedCost = 0) and (@I_vAutoInvoice = 0))  begin  if (not exists(select 1 from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  select @O_iErrorState = 7039     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vPOPMtchShpRcpt <> '')  begin  if (@I_vShipRCPTLNNM = 0)  begin  select @ShipRCPTLNNMcount = count(*) from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in(1,3) and Status = 1   if (@ShipRCPTLNNMcount > 1)  begin  select @O_iErrorState = 4851     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @I_vShipRCPTLNNM = RCPTLNNM from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and ITEMNMBR = @I_vITEMNMBR and  VENDORID = @I_vVENDORID and POPTYPE in(1,3)and Status = 1  end  end   if (not exists(select 1 from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and RCPTLNNM = @I_vShipRCPTLNNM and  ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in(1,3) and Status = 1))  begin  select @O_iErrorState = 4852     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  if (@I_vLandedCost = 0)  begin  select @QTYSHPPDRem = QTYSHPPD - QTYMATCH from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and RCPTLNNM = @I_vShipRCPTLNNM and  ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in(1,3) and Status = 1   if (@QTYSHPPDRem < @I_vQTYINVCD)  begin  select @QTYINVCDMtch = @QTYSHPPDRem  end  else  begin  select @QTYINVCDMtch = @I_vQTYINVCD  end   if (@QTYINVCDMtch = 0)  begin  select @O_iErrorState = 7124     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @OREXTCST = OREXTCST from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POPRCTNM = @I_vPOPMtchShpRcpt and RCPTLNNM = @I_vShipRCPTLNNM and  ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and POPTYPE in (1,3)and Status = 1   if (@I_vEXTDCOST < @OREXTCST)  begin  select @O_iErrorState = 7033     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @QTYINVCDMtch = @I_vQTYINVCD  end  end  end   if (@I_vPONUMBER <> '')  begin  if (@I_vPOLNENUM = 0)  begin  select @POLinecount = count(*) from POP10110 (nolock)  where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID   if (@POLinecount > 1)  begin  select @O_iErrorState = 4853     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @I_vPOLNENUM = ORD from POP10110 (nolock)  where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID  end  end   if (exists(select 1 from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and ORD = @I_vPOLNENUM and POLNESTA in (5,6)))  begin  select @O_iErrorState = 5308     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (not exists(select 1 from POP10110 (nolock)  where PONUMBER = @I_vPONUMBER and ITEMNMBR = @I_vITEMNMBR and VENDORID = @I_vVENDORID and ORD = @I_vPOLNENUM))  begin  select @O_iErrorState = 4854     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  else  begin  select @ITEMDESC = ITEMDESC,  @VNDITDSC = VNDITDSC,  @UOFM = UOFM,  @INVINDX = INVINDX,  @JOBNUMBR = JOBNUMBR,  @Capital_Item = Capital_Item,  @DECPLCUR = DECPLCUR,  @DECPLQTY = DECPLQTY,  @ODECPLCU = ODECPLCU,  @OrigQTYORDER = QTYORDER - QTYCANCE,  @LOCNCODE = LOCNCODE,  @UMQTYINB = UMQTYINB,  @POLNESTA = POLNESTA,  @POTYPE = POTYPE,  @VENDORID = VENDORID,  @ITEMNMBR = ITEMNMBR,  @POVNDITNUM = VNDITNUM,  @CURNCYID = CURNCYID,  @CURRNIDX = CURRNIDX,  @UNITCOST = UNITCOST,  @ORUNTCST = ORUNTCST,  @I_vProjNum =   case   when @I_vProjNum is null  then ProjNum  else @I_vProjNum  end,  @I_vCostCatID =   case   when @I_vCostCatID is null  then CostCatID  else @I_vCostCatID  end  from POP10110 (nolock)  where  PONUMBER = @I_vPONUMBER and  ORD = @I_vPOLNENUM  end   if (@I_vUOFM <> '')  begin  if (@I_vUOFM <> @UOFM)  begin  select @O_iErrorState = 4855     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@I_vVENDORID <> @VENDORID)  begin  select @O_iErrorState = 4856     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if ((@I_vCURNCYID <> '') and (@I_vCURNCYID <> @CURNCYID))  begin  select @O_iErrorState = 4857     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = @CURNCYID  end   if (@I_vUOFM = '')  begin  select @I_vUOFM = @UOFM  end   if (@I_vVNDITDSC = '')  begin  select @I_vVNDITDSC = @VNDITDSC  end  end   if (@I_vPONUMBER = '')  begin  if ((@I_vNONINVEN = 0) and (@I_vLandedCost = 0))  begin  select @DECPLCUR = ((DECPLCUR - 1) + 7),  @ODECPLCU = (DECPLCUR - 1),  @DECPLQTY = ((DECPLQTY - 1) + 1),  @OSTDCOST = STNDCOST,  @INVINDX = IVIVINDX  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if (@I_vUOFM <> '')  begin  if not exists(select 1 from IV00106 (nolock) where ITEMNMBR = @I_vITEMNMBR and UOFM = @I_vUOFM)  begin  select @O_iErrorState = 9375     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  select @PRCHSUOM = PRCHSUOM from IV00103 (nolock) where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR   if (@PRCHSUOM) = ''  begin  select @PRCHSUOM = PRCHSUOM from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  end   if (@PRCHSUOM = '')  begin  select @O_iErrorState = 9376     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   select @I_vUOFM = @PRCHSUOM  end   select @UMQTYINB = QTYBSUOM from IV00106 (nolock) where ITEMNMBR = @I_vITEMNMBR and UOFM = @I_vUOFM   if (@I_vVNDITDSC = '')  begin  select @I_vVNDITDSC = VNDITDSC from IV00103 (nolock) where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR  end   if ((@I_vUNITCOST = 0) and (@I_vAUTOCOST = 1))  begin  select @ORUNTCST = Last_Originating_Cost from IV00103 (nolock) where VENDORID = @I_vVENDORID and ITEMNMBR = @I_vITEMNMBR  end  end  else  if ((@I_vNONINVEN = 1) and (@I_vLandedCost = 0))  begin  select  @DECPLQTY = DECPLQTY,  @DECPLCUR = ((DECPLCUR - 1) + 7),  @ODECPLCU = (DECPLCUR - 1)  from POP40100 (nolock) where INDEX1 = 1   select @INVINDX = PMPRCHIX from PM00200 (nolock) where VENDORID = @I_vVENDORID   if (@I_vUOFM = '')  begin  select @I_vUOFM = 'Each'  end   select @ITEMDESC = @I_vVNDITDSC  end  else  if ((@I_vNONINVEN = 1) and (@I_vLandedCost = 1))  begin  select  @DECPLCUR = ((DECPLCUR - 1) + 7),  @ODECPLCU = (DECPLCUR - 1),  @I_vVNDITDSC = Long_Description,  @ITEMDESC = Long_Description,  @I_vVNDITNUM = @I_vITEMNMBR,  @Revalue_Inventory = Revalue_Inventory,  @Tolerance_Percentage = Tolerance_Percentage,  @Invoice_Match = Invoice_Match,  @ACPURIDX = ACPURIDX  from IV41100 (nolock) where Landed_Cost_ID = @I_vITEMNMBR and VENDORID = @I_vVENDORID   select  @DECPLQTY = DECPLQTY  from POP40100 (nolock) where INDEX1 = 1   if (@I_vUOFM = '')  begin  select @I_vUOFM = 'Each'  end  end   if (@I_vCURNCYID = '')  begin  select @I_vCURNCYID = isnull(CURNCYID, '') from PM00200 (nolock) where VENDORID = @I_vVENDORID  end   if (@I_vCURNCYID <> '')  begin  select @CURRNIDX = isnull(CURRNIDX, 0) from DYNAMICS..MC40200 (nolock) where CURNCYID = @I_vCURNCYID  end  else  begin  select @I_vCURNCYID = isnull(FUNLCURR, ''), @CURRNIDX = isnull(FUNCRIDX, 0) from MC40000 (nolock)  end   if (@I_vLandedCost = 0)  begin  select @Remaining_AP_Amount = @I_vEXTDCOST  end  else  begin  select @Remaining_AP_Amount = (@I_vEXTDCOST - @OREXTCST)  end  end   if ((@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR))  begin  select @ISMCTRX = 1  end   select top 1 @LOCNCODEREG = LOCNCODE from IV40700 (nolock) where LOCNCODE <> ''   if ((@I_vNONINVEN = 0) and (@LOCNCODEREG <> '') and (@I_vLandedCost = 0) and (@I_vPONUMBER <> ''))  begin  select @UOMSCHDL = UOMSCHDL from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if (not exists(select 1 from IV40202 (nolock) where UOFM = @I_vUOFM and UOMSCHDL = @UOMSCHDL))  begin  select @O_iErrorState = 4858     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end   if (@ISMCTRX = 0)  begin  if (exists(select distinct 1 from IV00105 a (nolock) where ITEMNMBR = @I_vITEMNMBR))  begin  if (not exists(select 1 from IV00105 a (nolock) where ITEMNMBR = @I_vITEMNMBR and a.CURNCYID <> ''))  begin  select @MCINSTALLED = 0  end  end  else  begin  if (not exists(select distinct 1 from IV00105 a (nolock) where CURNCYID <> ''))  begin  select @MCINSTALLED = 0  end  end  end   if ((@I_vNONINVEN = 0) and (@I_vLandedCost = 0))  begin  if (@ISMCTRX = 1)  begin  select @DECPLCURItem = DECPLCUR - 1,  @ODECPLCU = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and CURNCYID = @I_vCURNCYID  end  else  begin  select @DECPLCURItem = DECPLCUR - 1,  @ODECPLCU = DECPLCUR - 1  from IV00105 (nolock) where ITEMNMBR = @I_vITEMNMBR and (CURNCYID = '' or CURNCYID = @I_vCURNCYID)  end  end  else  begin  if (@MCINSTALLED = 0)  begin  select @DECPLCURItem = DECPLCUR - 1 from POP40100 (nolock) where INDEX1 = 1  end  else  begin  select @DECPLCURItem = DECPLCUR - 1 from POP40600 (nolock) where CURNCYID = @I_vCURNCYID  end  end   select @FUNDECPLCUR = DECPLCUR - 1 from MC40000 a (nolock), DYNAMICS..MC40200 b (nolock)  where a.FUNCRIDX = b.CURRNIDX and a.FUNLCURR = b.CURNCYID   if (@ISMCTRX = 1)  begin  select @EDITDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock)  where CURNCYID = @I_vCURNCYID  end  else  begin  select @EDITDECPLCUR = @FUNDECPLCUR  end   if (((@I_vPONUMBER <> '') and (@I_vPOPMtchShpRcpt <> '')) or (not exists(select top 1 1 from POP10600 (nolock) where POPIVCNO = @I_vPOPRCTNM)) and (@I_vLandedCost = 0))  begin   if (@I_vQTYINVCD > @QTYSHPPDRem)  begin  if (@I_vUNITCOST <> @ORUNTCST)  begin  select @Remaining_AP_Amount = round((((@I_vQTYINVCD - @QTYSHPPDRem) * @I_vUNITCOST) + (@QTYSHPPDRem * (@I_vUNITCOST - @ORUNTCST))),@EDITDECPLCUR)  end  else  begin  select @Remaining_AP_Amount = round(((@I_vQTYINVCD - @QTYSHPPDRem) * @I_vUNITCOST),@EDITDECPLCUR)  end  end  end   if (round(@I_vUNITCOST, @DECPLCURItem) <> (@I_vUNITCOST))  begin  select @O_iErrorState = 4859    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (round(@I_vEXTDCOST, @EDITDECPLCUR) <> (@I_vEXTDCOST))  begin  select @O_iErrorState = 4860    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vAUTOCOST = 0)  begin  if (@I_vQTYINVCD = 0)  begin  if (@I_vEXTDCOST > 0)  begin  select @O_iErrorState = 4861     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  else  begin  if ((round(abs((@I_vUNITCOST) - round((@I_vEXTDCOST / @I_vQTYINVCD), @DECPLCURItem)) * @I_vQTYINVCD, @EDITDECPLCUR)) <> 0)  begin  if ((round(abs(round((@I_vUNITCOST) * @I_vQTYINVCD, @EDITDECPLCUR) - @I_vEXTDCOST) * @I_vQTYINVCD, @EDITDECPLCUR)) <> 0)  begin  select @O_iErrorState = 4862    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  end  end  end end  if (@I_vLandedCost = 1) begin  if (not exists(select 1 from IV41100 (nolock) where Landed_Cost_ID = @I_vITEMNMBR and VENDORID = @I_vVENDORID and ((CURNCYID = @I_vCURNCYID) or (CURNCYID = ''))))  begin  select @O_iErrorState = 5311     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vTrackedDropShipped not in (0,1)) begin  select @O_iErrorState = 11782     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 0,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 4863     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vAutoInvoice = 1) begin  select @POCount = count(*) from POP10500 a (nolock), POP10110 b (nolock)  where a.PONUMBER = @I_vPONUMBER and a.POPTYPE = 1 and a.VENDORID = @I_vVENDORID and a.QTYSHPPD - a.QTYREJ - a.QTYMATCH > 0  and a.PONUMBER = b.PONUMBER and a.POLNENUM = b.ORD and b.POLNESTA not in(5,6)   if (@POCount = 0)  begin  select @O_iErrorState = 5309     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  select @POCount = 1 end  while (@POCount > 0) begin  if (@I_vRCPTLNNM = 0)  begin  select @I_vRCPTLNNM = isnull(max(RCPTLNNM), 0) + 16384 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM  end   if (exists(select 1 from POP10310 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vRCPTLNNM))  begin  select @O_iErrorState = 4864     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@I_vAutoInvoice = 1)  begin  select top 1  @I_vPOPMtchShpRcpt = a.POPRCTNM,  @I_vShipRCPTLNNM = a.RCPTLNNM,  @I_vPOLNENUM = a.POLNENUM,  @I_vQTYINVCD = a.QTYSHPPD - a.QTYREJ - a.QTYMATCH,  @I_vITEMNMBR = a.ITEMNMBR,  @UMQTYINB = a.UMQTYINB,  @JOBNUMBR = a.JOBNUMBR,  @I_vUOFM = a.UOFM,  @LOCNCODE = a.TRXLOCTN,  @I_vCURNCYID = a.CURNCYID,  @CURRNIDX = a.CURRNIDX,  @Capital_Item = a.Capital_Item,  @Product_Indicator = a.Product_Indicator,  @I_vProjNum =   case   when @I_vProjNum is null  then ProjNum  else @I_vProjNum  end,  @I_vCostCatID =   case   when @I_vCostCatID is null  then CostCatID  else @I_vCostCatID  end  from POP10500 a (nolock), POP10110 b (nolock)  where a.PONUMBER = @I_vPONUMBER and a.POPTYPE = 1 and a.VENDORID = @I_vVENDORID and a.QTYSHPPD - a.QTYREJ - a.QTYMATCH > 0  and a.PONUMBER = b.PONUMBER and a.POLNENUM = b.ORD and b.POLNESTA not in(5,6)   select @UNITCOST = UNITCOST,  @ORUNTCST = ORUNTCST,  @POVNDITNUM = VNDITNUM,  @I_vVNDITDSC = VNDITDSC,  @DECPLCUR = DECPLCUR,  @DECPLQTY = DECPLQTY,  @ODECPLCU = ODECPLCU,  @OrigQTYORDER = QTYORDER - QTYCANCE,  @I_vNONINVEN = NONINVEN,  @I_vPurchase_IV_Item_Taxable = Purchase_IV_Item_Taxable,  @I_vPurchase_Item_Tax_Schedu = Purchase_Item_Tax_Schedu,  @I_vPurchase_Site_Tax_Schedu = Purchase_Site_Tax_Schedu,  @I_vTAXAMNT = ORTAXAMT,  @DECPLCURItem = DECPLCUR - 7,  @INVINDX = INVINDX,  @I_vProjNum =   case   when @I_vProjNum is null  then ProjNum  else @I_vProjNum  end,  @I_vCostCatID =   case   when @I_vCostCatID is null  then CostCatID  else @I_vCostCatID  end  from POP10110 (nolock) where PONUMBER = @I_vPONUMBER and VENDORID = @I_vVENDORID and ORD = @I_vPOLNENUM   select @QTYINVCDMtch = @I_vQTYINVCD   if ((@I_vCURNCYID <> '') and (@I_vCURNCYID <> @FUNLCURR))  begin  select @ISMCTRX = 1  end   if (@ISMCTRX = 1)  begin  select @EDITDECPLCUR = DECPLCUR - 1 from DYNAMICS..MC40200 (nolock)  where CURNCYID = @I_vCURNCYID  end  else  begin  select @EDITDECPLCUR = @FUNDECPLCUR  end   end   if (@I_vNONINVEN = 0)  begin  select  @ITEMDESC = ITEMDESC,  @ITEMTYPE = ITEMTYPE,  @ITMTRKOP = ITMTRKOP,  @VCTNMTHD = VCTNMTHD,  @OSTDCOST = STNDCOST,  @Tolerance_Percentage = Tolerance_Percentage  from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if ((@ITEMTYPE = 1) or (@ITEMTYPE = 2))  begin   select @Revalue_Inventory = 1  end  end  else  begin  select @UMQTYINB = 1,  @ITMTRKOP = 1   if (@INVINDX = 0)and @I_vLandedCost = 0   begin  select  @INVINDX = PMPRCHIX from PM00200 (nolock) where VENDORID = @I_vVENDORID  end  end   if (@POTYPE = 2)  begin  select @Remaining_AP_Amount =  case  when (@I_vAUTOCOST = 0)  then @I_vEXTDCOST  else round(@ORUNTCST * @I_vQTYINVCD, @EDITDECPLCUR)  end  end   if ((@I_vTrackedDropShipped = 1 and @POTYPE in (1,3)))  begin  select @O_iErrorState = 11783    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  if ((@I_vTrackedDropShipped = 1 and @ITMTRKOP not in (2,3)))  begin  select @O_iErrorState = 11806    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if ((@I_vTrackedDropShipped = 1 and @ITMTRKOP in (2,3)))  begin  select @SERLTQTY = isnull(sum(SERLTQTY),0) from POP10330 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vRCPTLNNM   if ((@I_vQTYINVCD * @UMQTYINB) <> @SERLTQTY)  begin  select @O_iErrorState = 11784    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  if (@I_vTrackedDropShipped = 0)  begin  if exists (select 1 from POP10330 (nolock) where POPRCTNM = @I_vPOPRCTNM and RCPTLNNM = @I_vRCPTLNNM)  begin  select @O_iErrorState = 11982    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   end   if (@VCTNMTHD in (4,5))  begin  if (@ISMCTRX = 0)  begin  if (@I_vAUTOCOST = 0)  begin  select @RUPPVAMT = round(((@I_vUNITCOST - (@OSTDCOST * @UMQTYINB)) * @I_vQTYINVCD), @EDITDECPLCUR)  end  else  begin  select @RUPPVAMT = round(((@ORUNTCST - (@OSTDCOST * @UMQTYINB)) * @I_vQTYINVCD), @EDITDECPLCUR)  end  end  else  begin  select @RUPPVAMT = 0  end   end   if (@I_vNONINVEN = 1)  begin  select @PURPVIDX = isnull(PURPVIDX, 0) from IV41100 where Landed_Cost_ID = @I_vITEMNMBR  if (@PURPVIDX = 0)   begin   select @PURPVIDX = isnull(PURPVIDX, 0) from PM00200 (nolock) where VENDORID = @I_vVENDORID  end   if (@PURPVIDX = 0)   begin   select @PURPVIDX = ACTINDX from SY01100 (nolock) where SERIES = 4 and SEQNUMBR = 1400  end  end  else  begin  select @PURPVIDX = isnull(PURPVIDX, 0) from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR   if (@PURPVIDX = 0)   begin   select @PURPVIDX = ACTINDX from SY01100 (nolock) where SERIES = 5 and SEQNUMBR = 1200  end  end   select @MAXSEG = max(SGMTNUMB) from SY00300 (nolock)  select @Location_Segment = isnull(Location_Segment, '') from IV40700 (nolock) where LOCNCODE = @LOCNCODE  select @ACSGFLOC = ACSGFLOC from IV40100 (nolock) where SETUPKEY = 1   if ((@PURPVIDX <> 0) and (@Location_Segment <> '') and (@ACSGFLOC <> 0))  begin  select @ACTINDX = 0,  @ACCNT_STRING = '',  @NEW_ACCNT_STRING = ''   select @ACCNT_STRING = ACTNUMST from GL00105 (nolock) where ACTINDX = @PURPVIDX   if (@ACSGFLOC < @MAXSEG)  begin  select @LOFSGMNT = sum(LOFSGMNT) + (@MAXSEG - @ACSGFLOC) from SY00300 (nolock) where SGMTNUMB >= @ACSGFLOC  select @LOFSGMNTEND = sum(LOFSGMNT) + (@MAXSEG - @ACSGFLOC) from SY00300 (nolock) where SGMTNUMB > @ACSGFLOC  end  else  begin  select @LOFSGMNT = sum(LOFSGMNT) from SY00300 (nolock) where SGMTNUMB = @ACSGFLOC  end   select @LOFSGMNTALL = sum(LOFSGMNT) + (@MAXSEG - 1) from SY00300 (nolock)    if (@ACSGFLOC = @MAXSEG)  begin  select @NEW_ACCNT_STRING = substring(@ACCNT_STRING, 1, @LOFSGMNTALL - @LOFSGMNT) + rtrim(ltrim(@Location_Segment))  end  else  begin  select @NEW_ACCNT_STRING = substring(@ACCNT_STRING, 1, @LOFSGMNTALL - @LOFSGMNT ) + rtrim(ltrim(@Location_Segment)) +  substring(@ACCNT_STRING, @LOFSGMNTALL - @LOFSGMNTEND + 1, @LOFSGMNTALL )  end   select @ACTINDX = isnull(ACTINDX, 0) from GL00105 (nolock) where ACTNUMST = @NEW_ACCNT_STRING   if (@ACTINDX <> 0)  begin  select @PURPVIDX = @ACTINDX  end  end   if (@I_vPONUMBER <> '')  begin  select @SHIPMTHD = SHIPMTHD from POP10100 (nolock) where PONUMBER = @I_vPONUMBER  end  else  begin  select @VADCDPAD = VADCDPAD from PM00200 (nolock) where VENDORID = @I_vVENDORID  select @SHIPMTHD = SHIPMTHD from PM00300 (nolock) where VENDORID = @I_vVENDORID and ADRSCODE = @VADCDPAD  end   select @RcptLineNoteIDArray_1 = NOTEINDX from IV00101 (nolock) where ITEMNMBR = @I_vITEMNMBR  select @RcptLineNoteIDArray_2 = NOTEINDX from IV40700 (nolock) where LOCNCODE = @LOCNCODE  select @RcptLineNoteIDArray_3 = NOTEINDX from GL00100 (nolock) where ACTINDX = @INVINDX  select @RcptLineNoteIDArray_4 = 0  select @RcptLineNoteIDArray_5 = PONOTIDS_1 from POP10100 (nolock) where PONUMBER = @I_vPONUMBER  select @RcptLineNoteIDArray_6 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Item_Tax_Schedu  select @RcptLineNoteIDArray_7 = NOTEINDX from TX00101 (nolock) where TAXSCHID = @I_vPurchase_Site_Tax_Schedu   if ((@I_vLandedCost = 0) and (@I_vPONUMBER <> '') and (@I_vPOPMtchShpRcpt = ''))  begin  select @QTYRem = @OrigQTYORDER - isnull(sum(QTYINVCD), 0) from POP10500 (nolock)  where PONUMBER = @I_vPONUMBER and POLNENUM = @I_vPOLNENUM   if (@QTYRem < @I_vQTYINVCD)  begin  select @QTYSubtract = @QTYRem  end  else  begin  select @QTYSubtract = @I_vQTYINVCD  end   update POP10100 set   REMSUBTO = REMSUBTO - round((@UNITCOST * @QTYSubtract), @EDITDECPLCUR),  OREMSUBT = OREMSUBT - round((@ORUNTCST * @QTYSubtract), @EDITDECPLCUR)  where PONUMBER = @I_vPONUMBER  if @@error <> 0  begin  select @O_iErrorState = 5882    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end  end   insert POP10310  (  POPRCTNM,  RCPTLNNM,  PONUMBER,  ITEMNMBR,  ITEMDESC,  VNDITNUM,  VNDITDSC,  UMQTYINB,  ACTLSHIP,  COMMNTID,  INVINDX,  UOFM,  UNITCOST,  EXTDCOST,  LOCNCODE,  RcptLineNoteIDArray_1,  RcptLineNoteIDArray_2,  RcptLineNoteIDArray_3,  RcptLineNoteIDArray_4,  RcptLineNoteIDArray_5,  RcptLineNoteIDArray_6,  RcptLineNoteIDArray_7,  RcptLineNoteIDArray_8,  NONINVEN,  DECPLCUR,  DECPLQTY,  ITMTRKOP,  VCTNMTHD,  TRXSORCE,  JOBNUMBR,  COSTCODE,  COSTTYPE,  CURNCYID,  CURRNIDX,  RATETPID,  XCHGRATE,  RATECALC,  DENXRATE,  ORUNTCST,  OREXTCST,  ODECPLCU,  BOLPRONUMBER,  Capital_Item,  Product_Indicator,  Purchase_IV_Item_Taxable,  Purchase_Item_Tax_Schedu,  Purchase_Site_Tax_Schedu,  BSIVCTTL,  TAXAMNT,  ORTAXAMT,  BCKTXAMT,  OBTAXAMT,  Revalue_Inventory,  Tolerance_Percentage,  PURPVIDX,  Remaining_AP_Amount,  SHIPMTHD,  Landed_Cost_Group_ID,  Landed_Cost_Warnings,  BackoutTradeDiscTax,  OrigBackoutTradeDiscTax,  Landed_Cost,  Invoice_Match,  RCPTRETNUM,  RCPTRETLNNUM,  INVRETNUM,  INVRETLNNUM,  ISLINEINTRA,  ProjNum,  CostCatID,  TrackedDropShipped  )  select  @I_vPOPRCTNM,     @I_vRCPTLNNM,     @I_vPONUMBER,     @I_vITEMNMBR,     @ITEMDESC,      case     when @I_vLandedCost = 1 and @I_vVNDITNUM <> ''  then @I_vVNDITNUM  when @I_vLandedCost = 1 and @I_vITEMNMBR <> ''  then @I_vITEMNMBR  else @POVNDITNUM  end,   @I_vVNDITDSC,     @UMQTYINB,     '',      @COMMNTID,     @INVINDX,     @I_vUOFM,     case      when (@I_vAUTOCOST = 0)  then @I_vUNITCOST  else @ORUNTCST  end,  case      when (@I_vAUTOCOST = 0)  then @I_vEXTDCOST  else round(@ORUNTCST * @I_vQTYINVCD, @EDITDECPLCUR)  end,  @LOCNCODE,     @RcptLineNoteIDArray_1,    @RcptLineNoteIDArray_2,    @RcptLineNoteIDArray_3,    @RcptLineNoteIDArray_4,    @RcptLineNoteIDArray_5,    @RcptLineNoteIDArray_6,    @RcptLineNoteIDArray_7,    0,      @I_vNONINVEN,     @DECPLCUR,     @DECPLQTY,     @ITMTRKOP,     @VCTNMTHD,     @TRXSORCE,     @JOBNUMBR,     '',      0,      case  when @MCINSTALLED = 1  then @I_vCURNCYID  else ''  end,  case  when @MCINSTALLED = 1  then @CURRNIDX  else 0  end,  '',      0,      0,      0,      case      when (@I_vAUTOCOST = 0)  then @I_vUNITCOST  else @ORUNTCST  end,  case      when (@I_vAUTOCOST = 0)  then @I_vEXTDCOST  else round(@ORUNTCST * @I_vQTYINVCD, @EDITDECPLCUR)  end,  @ODECPLCU,     '',      @Capital_Item,     @Product_Indicator,    @I_vPurchase_IV_Item_Taxable,   @I_vPurchase_Item_Tax_Schedu,   @I_vPurchase_Site_Tax_Schedu,   0,      @I_vTAXAMNT,     @I_vTAXAMNT,     0,      0,      @Revalue_Inventory,    @Tolerance_Percentage,    @PURPVIDX,     @Remaining_AP_Amount,    @SHIPMTHD,     '',      0,      0,      0,      @I_vLandedCost,     @Invoice_Match,     '',      0,      '',      0,      0,      case       when @I_vProjNum is null  then ''  else @I_vProjNum  end,  case       when @I_vCostCatID is null  then ''  else @I_vCostCatID  end,  @I_vTrackedDropShipped   if (@@error <> 0)  begin  select @O_iErrorState = 4867    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   insert POP10500  (  PONUMBER,  POLNENUM,  POPRCTNM,  RCPTLNNM,  QTYSHPPD,  QTYINVCD,  QTYREJ,  QTYMATCH,  QTYRESERVED,  QTYINVRESERVE,  Status,  UMQTYINB,  OLDCUCST,  JOBNUMBR,  COSTCODE,  COSTTYPE,  ORCPTCOST,  OSTDCOST,  APPYTYPE,  POPTYPE,  VENDORID,  ITEMNMBR,  UOFM,  TRXLOCTN,  DATERECD,  RCTSEQNM,  SPRCTSEQ,  PCHRPTCT,  SPRCPTCT,  OREXTCST,  RUPPVAMT,  ACPURIDX,  INVINDX,  UPPVIDX,  NOTEINDX,  CURNCYID,  CURRNIDX,  XCHGRATE,  RATECALC,  DENXRATE,  RATETPID,  EXGTBLID,  Capital_Item,  Product_Indicator,  Total_Landed_Cost_Amount,  QTYTYPE,  Posted_LC_PPV_Amount,  QTYREPLACED,  QTYINVADJ  )  select  @I_vPONUMBER,    @I_vPOLNENUM,    @I_vPOPRCTNM,    @I_vRCPTLNNM,    0,     @I_vQTYINVCD,    0,     0,     0,     0,     0,     @UMQTYINB,    0,     @JOBNUMBR,    '',     0,     case     when (@I_vAUTOCOST = 0)  then @I_vUNITCOST  else @ORUNTCST  end,  @OSTDCOST,    3,     2,     @I_vVENDORID,    @I_vITEMNMBR,    @I_vUOFM,    @LOCNCODE,    '',     0,     0,     0,     0,     case     when (@I_vAUTOCOST = 0)  then @I_vEXTDCOST  else round(@ORUNTCST * @I_vQTYINVCD, @EDITDECPLCUR)  end,  @RUPPVAMT,    @ACPURIDX,    @INVINDX,    @UPPVIDX,    0,     @I_vCURNCYID,    @CURRNIDX,    @XCHGRATE,    0,     0,     @RATETPID,    '',     @Capital_Item,    @Product_Indicator,   0,     1,     0,     0,     0     if (@@error <> 0)  begin  select @O_iErrorState = 4868    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end   if (@I_vPOPMtchShpRcpt <> '')  begin  exec @iStatus = taPopEnterMatchInvToShpMultiLine  @I_vPOPRCTNM = @I_vPOPRCTNM,  @I_vPOPMtchShpRcpt = @I_vPOPMtchShpRcpt,  @I_vPONUMBER = @I_vPONUMBER,  @I_vQTYINVCD = @QTYINVCDMtch,  @I_vRevalue_Inventory = @I_vRevalue_Inventory,  @I_vITEMNMBR = @I_vITEMNMBR,  @I_vShipRCPTLNNM = @I_vShipRCPTLNNM,  @I_vVENDORID = @I_vVENDORID,  @I_vVNDITNUM = @I_vVNDITNUM,  @I_vVarianceAccount = @I_vVarianceAccount,  @I_vIVCLINNO = @I_vRCPTLNNM,  @I_vLandedCost = @I_vLandedCost,  @I_vNONINVEN = @I_vNONINVEN,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4869    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   select @POCount = @POCount - 1,  @I_vRCPTLNNM = 0 end  if (@O_iErrorState <> 0)  return (@O_iErrorState)  exec @iStatus = taPopEnterMatchInvLinePost  @I_vPOPRCTNM,  @I_vPOPMtchShpRcpt,  @I_vShipRCPTLNNM,  @I_vPONUMBER,  @I_vQTYINVCD,  @I_vRevalue_Inventory,  @I_vITEMNMBR,  @I_vVENDORID,  @I_vRCPTLNNM,  @I_vVNDITNUM,  @I_vVNDITDSC,  @I_vVarianceAccount,  @I_vUOFM,  @I_vUNITCOST,  @I_vEXTDCOST,  @I_vNONINVEN,  @I_vAUTOCOST,  @I_vPurchase_IV_Item_Taxable,  @I_vPurchase_Item_Tax_Schedu,  @I_vPurchase_Site_Tax_Schedu,  @I_vTAXAMNT,  @I_vRequesterTrx,  @I_vPOLNENUM,  @I_vAutoInvoice,  @I_vCURNCYID,  @I_vLandedCost,  @I_vProjNum,   @I_vCostCatID,   @I_vTrackedDropShipped,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4870    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vRequesterTrx = 0) begin  exec @iStatus = eConnectOutVerify  @I_vDOCTYPE = 'PO_Receiving_Transaction',  @I_vINDEX1 = @I_vPOPRCTNM,  @I_vINDEX2 = '',  @I_vINDEX3 = '',  @I_vINDEX4 = '',  @I_vINDEX5 = '',  @I_vINDEX6 = '',  @I_vINDEX7 = '',  @I_vINDEX8 = '',  @I_vINDEX9 = '',  @I_vINDEX10 = '',  @I_vINDEX11 = '',  @I_vINDEX12 = '',  @I_vINDEX13 = '',  @I_vINDEX14 = '',  @I_vINDEX15 = '',  @I_vDelete = 1,  @O_iErrorState = @iCustomState output  select @iError = @@error  if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0))  begin  select @oErrString = rtrim(@oErrString) + ' ' + @iCustomState  select @O_iErrorState = 4871     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taPopEnterMatchInvLine] TO [DYNGRP]
GO

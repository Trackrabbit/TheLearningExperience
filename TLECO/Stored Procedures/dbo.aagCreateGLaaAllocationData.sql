SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create      procedure [dbo].[aagCreateGLaaAllocationData]  @JRNENTRY    int,  @RCTRXSEQ int,   @fHist    tinyint,  @nYear    smallint,  @CompanyID int as begin  declare @aaGLWorkHdrID int ,   @GLPOSTDT Datetime,   @BalAmt numeric(19,5),  @CURNCYID char(15),  @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime ,   @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,  @DECPLACS   smallint,  @TableName   varchar(50),   @SqlSessionID int,  @INTERID char(5) ,  @Post int,  @OFFINDX int,   @FUNLCURR char(15),  @Ledger_ID smallint  select @BalAmt = 0, @Ledger_ID = 0   IF @fHist = 0  BEGIN  SELECT top 1 @GLPOSTDT = TRXDATE, @CURNCYID = CURNCYID, @CURRNIDX = CURRNIDX, @RATETPID = RATETPID, @EXGTBLID = EXGTBLID, @XCHGRATE = XCHGRATE,  @EXCHDATE = EXCHDATE, @TIME1 = TIME1, @RTCLCMTD = RTCLCMTD, @DENXRATE = DENXRATE, @MCTRXSTT = MCTRXSTT, @INTERID = ORCOMID, @Ledger_ID = Ledger_ID  FROM GL20000 where JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ  SELECT @TableName = 'GL20000'  END  ELSE  IF @fHist = 1  BEGIN  SELECT top 1 @GLPOSTDT = TRXDATE, @CURNCYID = CURNCYID, @CURRNIDX = CURRNIDX, @RATETPID = RATETPID, @EXGTBLID = EXGTBLID, @XCHGRATE = XCHGRATE,  @EXCHDATE = EXCHDATE, @TIME1 = TIME1, @RTCLCMTD = RTCLCMTD, @DENXRATE = DENXRATE, @MCTRXSTT = MCTRXSTT, @INTERID = ORCOMID, @Ledger_ID = Ledger_ID  FROM GL30000 where JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ AND HSTYEAR = @nYear  SELECT @TableName = 'GL30000'  END    if exists (select aaGLWorkHdrID from AAG10000 where JRNENTRY = @JRNENTRY and aaTRXType = 2)  and not exists(select 1 from GL20000 where JRNENTRY = @JRNENTRY AND RCTRXSEQ = @RCTRXSEQ and VOIDED = 1)  begin   return  end    if exists (select top 1 AAG10001.aaGLWorkHdrID from AAG10001 Inner join AAG10000   on AAG10000.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID   where AAG10000.JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ and AAG10001.ACCTTYPE > 2) or  ((select isnull(count(1),0) from AAG10001 Inner join AAG10000   on AAG10000.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID   where AAG10000.JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ) <>   (select isnull(count(1),0) from GL10001 Inner join GL10000   on GL10000.JRNENTRY = GL10001.JRNENTRY   where GL10000.JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ))  begin  exec aagCreateGLWorkDist   @JRNENTRY,  @aaGLWorkHdrID,   @RCTRXSEQ,  @GLPOSTDT ,   @BalAmt,   @CURNCYID,  @CURRNIDX,  @RATETPID,  @EXGTBLID,  @XCHGRATE,  @EXCHDATE,  @TIME1,   @RTCLCMTD,  @DENXRATE,  @MCTRXSTT,  2,   @TableName,  @CompanyID,  2,   @INTERID,  1,  0,  @Ledger_ID  end   else  begin  select @FUNLCURR = ''  select @FUNLCURR = FUNLCURR from MC40000  if  @FUNLCURR = @CURNCYID or len(ltrim(rtrim(@CURNCYID))) = 0  begin  update AAG10001 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = (Select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ) and aaGLWorkDistID > 0  update AAG10002 set ORCRDAMT = CRDTAMNT , ORDBTAMT = DEBITAMT where  aaGLWorkHdrID = (Select aaGLWorkHdrID from AAG10000 where AAG10000.JRNENTRY = @JRNENTRY and RCTRXSEQ = @RCTRXSEQ) and aaGLWorkDistID > 0  and aaGLWorkAssignID > 0  end   end end     
GO
GRANT EXECUTE ON  [dbo].[aagCreateGLaaAllocationData] TO [DYNGRP]
GO

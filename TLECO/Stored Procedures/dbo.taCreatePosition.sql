SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreatePosition] @I_vJOBTITLE char(6),      @I_vDSCRIPTN char(30),      @I_vEEOCLASS_I  smallint = 0,     @I_vFLSASTATUS smallint = 0,    @I_vREPORTSTOPOS char(7)='',    @I_vREVIEWSETUPNAME_I char(31)='',   @I_vSKILLSET_I char(31)='',     @I_vTXTFIELD varchar(8000)='',    @I_vCHANGEBY_I char(15) = '',    @I_vCHANGEDATE_I datetime = null,   @I_vUpdateIfExists tinyint = 1,    @I_vRequesterTrx smallint = 0,    @I_vUSRDEFND1 char(50) = '',       @I_vUSRDEFND2 char(50) = '',       @I_vUSRDEFND3 char(50) = '',       @I_vUSRDEFND4 varchar(8000) = '',   @I_vUSRDEFND5 varchar(8000) = '',   @O_iErrorState int output,     @oErrString varchar(255) output     with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @sCompanyID int,  @CompanyID char(7),  @SKILLSETNUMBER_I smallint,     @REVIEWSETUPCODE_I char(31),   @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex numeric(19,5),    @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @O_oErrorState int,  @iError int      select  @O_iErrorState = 0,     @CompanyID = '',  @SKILLSETNUMBER_I = 0,  @REVIEWSETUPCODE_I = '',  @sCompanyID = CMPANYID from DYNAMICS..SY01500 where INTERID = db_name()  if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreatePositionPre  @I_vJOBTITLE  output,  @I_vDSCRIPTN  output,  @I_vEEOCLASS_I  output,   @I_vFLSASTATUS output,   @I_vREPORTSTOPOS output,   @I_vREVIEWSETUPNAME_I output,   @I_vSKILLSET_I output,   @I_vTXTFIELD output,   @I_vCHANGEBY_I output,  @I_vCHANGEDATE_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4464    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vJOBTITLE is NULL or  @I_vDSCRIPTN is NULL or  @I_vEEOCLASS_I is NULL or   @I_vFLSASTATUS is NULL or  @I_vREPORTSTOPOS is NULL or   @I_vREVIEWSETUPNAME_I is NULL or   @I_vSKILLSET_I is NULL or   @I_vTXTFIELD is NULL or   @I_vCHANGEBY_I is NULL or   @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL  ) begin  select @O_iErrorState = 4465    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vJOBTITLE = UPPER(@I_vJOBTITLE)  select @CompanyID = INTERID from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if ( @I_vJOBTITLE = '' ) begin  select @O_iErrorState = 4466    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if ( @I_vDSCRIPTN = '' ) begin  select @O_iErrorState = 4467    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vEEOCLASS_I < 0 or @I_vEEOCLASS_I > 10) begin  select @O_iErrorState = 11254     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vFLSASTATUS < 0 or @I_vFLSASTATUS > 3) begin  select @O_iErrorState = 11255     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vREPORTSTOPOS <> '') and (@I_vREPORTSTOPOS = @I_vJOBTITLE) begin  select @O_iErrorState = 11256     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vREPORTSTOPOS <> '')  begin  if (not exists(select top 1 JOBTITLE from UPR40301 (nolock) where JOBTITLE = @I_vREPORTSTOPOS))  begin  select @O_iErrorState = 11257     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vSKILLSET_I <> '') begin  if (not exists(select top 1 SKILLSET_I from DYNAMICS..HR2SKL05 (nolock) where UPPER(SKILLSET_I) = UPPER(@I_vSKILLSET_I)))  begin  select @O_iErrorState = 11258     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else  begin  select @SKILLSETNUMBER_I = SKILLSETNUMBER_I from DYNAMICS..HR2SKL05 (nolock) where UPPER(SKILLSET_I) = UPPER(@I_vSKILLSET_I)  end end  if (@I_vREVIEWSETUPNAME_I <> '')  begin  if (not exists(select top 1 REVIEWSETUPNAME_I from RV020121 (nolock) where UPPER(REVIEWSETUPNAME_I) = UPPER(@I_vREVIEWSETUPNAME_I)))  begin  select @O_iErrorState = 11259     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else  begin  select @REVIEWSETUPCODE_I = REVIEWSETUPCODE_I from RV020121 (nolock) where UPPER(REVIEWSETUPNAME_I) = UPPER(@I_vREVIEWSETUPNAME_I)  end end  if ( @I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 3671     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 3672     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @sCompanyID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @nNextNoteIndex output,  @O_iErrorState  = @iGetNextNoteIdxErrState output select @iError = @@error if ((@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iGetNextNoteIdxErrState))  select @O_iErrorState = 4513   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  begin  if not exists( select 1 from UPR40301 (nolock) where JOBTITLE = @I_vJOBTITLE )  begin  insert UPR40301 (  JOBTITLE,  DSCRIPTN,  EEOCLASS_I,  FLSASTATUS,  REPORTSTOPOS,  REVIEWSETUPCODE_I,  SKILLSETNUMBER_I,  CHANGEBY_I,  CHANGEDATE_I,  NOTEINDX,  NOTEINDX2,  TXTFIELD  )  select  @I_vJOBTITLE,     @I_vDSCRIPTN,     @I_vEEOCLASS_I,     @I_vFLSASTATUS,     @I_vREPORTSTOPOS,    @REVIEWSETUPCODE_I,    @SKILLSETNUMBER_I,    @I_vCHANGEBY_I,     case       WHEN @I_vCHANGEDATE_I is null   THEN convert(varchar(12),getdate())  ELSE @I_vCHANGEDATE_I  end,   @nNextNoteIndex,    0,        @I_vTXTFIELD     if @@error <> 0  begin  select @O_iErrorState = 4468    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if ( @I_vUpdateIfExists = 1 )  begin  update UPR40301  set DSCRIPTN =  case  WHEN @I_vDSCRIPTN = ''  THEN DSCRIPTN  ELSE @I_vDSCRIPTN  end,  EEOCLASS_I =   case  WHEN @I_vEEOCLASS_I = 0   THEN EEOCLASS_I  ELSE @I_vEEOCLASS_I  end,  FLSASTATUS =   case  WHEN @I_vFLSASTATUS = 0   THEN FLSASTATUS  ELSE @I_vFLSASTATUS  end,  REPORTSTOPOS =   case  WHEN @I_vREPORTSTOPOS = ''  THEN REPORTSTOPOS  ELSE @I_vREPORTSTOPOS  end,  REVIEWSETUPCODE_I =   case  WHEN @I_vREVIEWSETUPNAME_I = ''  THEN REVIEWSETUPCODE_I  ELSE @REVIEWSETUPCODE_I  end,  SKILLSETNUMBER_I =   case  WHEN @I_vSKILLSET_I = ''  THEN SKILLSETNUMBER_I  ELSE @SKILLSETNUMBER_I  end,  CHANGEBY_I =   case   WHEN @I_vCHANGEBY_I = ''  THEN CHANGEBY_I  ELSE @I_vCHANGEBY_I  end,  CHANGEDATE_I =   case   WHEN @I_vCHANGEDATE_I is null  THEN CHANGEDATE_I  ELSE @I_vCHANGEDATE_I  end,  TXTFIELD =   case  WHEN @I_vTXTFIELD is null  THEN TXTFIELD  ELSE @I_vTXTFIELD   end   from UPR40301 where JOBTITLE = @I_vJOBTITLE  if @@error <> 0  begin  select @O_iErrorState = 4469    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  if exists(select 1 from DYNAMICS..sysobjects (nolock) where name  = 'HRPMPS01') begin   if not exists( select 1 from DYNAMICS..HRPMPS01 (nolock) where POSITIONCODE_I = @I_vJOBTITLE and COMPANYCODE_I = @CompanyID)  begin  insert DYNAMICS..HRPMPS01(  COMPANYCODE_I,  POSITIONCODE_I,  POSITION_I  )  select  @CompanyID,      @I_vJOBTITLE,     @I_vDSCRIPTN     if @@error <> 0  begin  select @O_iErrorState = 11252    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if ( @I_vUpdateIfExists = 1 )  begin  update DYNAMICS..HRPMPS01   set POSITION_I =   case  WHEN @I_vDSCRIPTN = ''  THEN POSITIONCODE_I  ELSE @I_vDSCRIPTN  end   from DYNAMICS..HRPMPS01 where POSITIONCODE_I = @I_vJOBTITLE and COMPANYCODE_I = @CompanyID  if @@error <> 0  begin  select @O_iErrorState = 11253    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreatePositionPost  @I_vJOBTITLE,  @I_vDSCRIPTN,  @I_vEEOCLASS_I,   @I_vFLSASTATUS,   @I_vREPORTSTOPOS,   @I_vREVIEWSETUPNAME_I,   @I_vSKILLSET_I,   @I_vTXTFIELD,  @I_vCHANGEBY_I,  @I_vCHANGEDATE_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 4470    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreatePosition] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateUpdateBatchHeaderRcd]  @I_vBACHNUMB char(15),  @I_vBCHCOMNT char(60) = '',  @I_vSERIES int, @I_vGLPOSTDT datetime = '', @I_vBCHSOURC char(15), @I_vDOCAMT numeric(19,5), @I_vORIGIN int, @I_vNUMOFTRX int, @I_vCHEKBKID char(15) = '', @I_vCNTRLTOT numeric(19,5) = null,  @I_vCNTRLTRX int = NULL,   @I_vPOSTTOGL smallint = 0,   @I_vPmtMethod smallint = 0,   @I_vEFTFileFormat smallint = 0,   @I_vRequesterTrx smallint = 0,   @I_vBRKDNALL tinyint = 0, @I_vUSERID char(15) = '', @I_vBACHFREQ tinyint = null,   @I_vRECPSTGS smallint = null,   @I_vMSCBDINC smallint = null,   @I_vAPPROVL tinyint = 0,    @I_vAPPRVLDT datetime = '',    @I_vAPRVLUSERID char(15) = '',   @I_vTRXSOURC char(25) = '',    @I_vUSRDEFND1 char(50) = '',   @I_vUSRDEFND2 char(50) = '',   @I_vUSRDEFND3 char(50) = '',   @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int = NULL output,  @oErrString varchar(255) output    with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @CHEKBKID char(15),     @sCompanyName char(65),     @NOTEINDX numeric(19,5),  @CMPANYID smallint,  @iGetNextNoteIdxErrState int,   @iStatus int,  @iError int,  @iCustomState int,  @iCustomErrString varchar(255),  @O_oErrorState int,  @BatchExists tinyint,  @NOFPSTGS smallint,  @BACHFREQExisting tinyint,  @RECPSTGSExisting smallint,  @MSCBDINCExisting smallint,  @lock char(15),  @WORKFLOWENABLED smallint,     @Workflow_Approval_Status smallint,   @Workflow_Priority smallint,    @Workflow_Status smallint,  @ActiveWorkflow smallint   select  @O_iErrorState = 0,  @CHEKBKID = '',  @sCompanyName = '',  @NOTEINDX = 0,  @CMPANYID = 0,  @iGetNextNoteIdxErrState = 0,  @iStatus = 0,  @iError = 0,  @iCustomState = 0,  @iCustomErrString = '',  @O_oErrorState = 0,  @BatchExists = 0,  @BACHFREQExisting = 0,  @RECPSTGSExisting = 0,  @MSCBDINCExisting = 0,  @lock = '',  @WORKFLOWENABLED = 0,   @Workflow_Approval_Status = 0,   @Workflow_Priority = 0,  @Workflow_Status = 0,   @ActiveWorkflow = 0  exec @iStatus = taCreateUpdateBatchHeaderRcdPre  @I_vBACHNUMB output,  @I_vBCHCOMNT output,  @I_vSERIES output,  @I_vGLPOSTDT output,  @I_vBCHSOURC output,  @I_vDOCAMT output,  @I_vORIGIN output,  @I_vNUMOFTRX output,  @I_vCHEKBKID output,  @I_vCNTRLTOT output,  @I_vCNTRLTRX output,  @I_vPOSTTOGL output,  @I_vPmtMethod output,  @I_vEFTFileFormat output,  @I_vRequesterTrx output,  @I_vBRKDNALL output,  @I_vUSERID output,  @I_vBACHFREQ output,  @I_vRECPSTGS output,  @I_vMSCBDINC output,  @I_vAPPROVL output,  @I_vAPPRVLDT output,  @I_vAPRVLUSERID output,  @I_vTRXSOURC output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if @iStatus = 0 and @iError <> 0 begin  select @iStatus = @iError end if (@iStatus <> 0) or (@iCustomState <> 0) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 558    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vBACHNUMB is NULL or  @I_vBCHCOMNT is NULL or  @I_vSERIES is NULL or  @I_vGLPOSTDT is NULL or  @I_vBCHSOURC is NULL or  @I_vNUMOFTRX is NULL or  @I_vDOCAMT is NULL or   @I_vORIGIN is NULL or  @I_vNUMOFTRX is NULL or  @I_vCHEKBKID is NULL or  @I_vPmtMethod is Null or  @I_vEFTFileFormat is Null or  @I_vRequesterTrx is NULL  ) begin  select @O_iErrorState = 31    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @CMPANYID = CMPANYID,  @sCompanyName = CMPNYNAM  from DYNAMICS..SY01500 (nolock) where INTERID = db_name()  if (@I_vBRKDNALL < 0 or @I_vBRKDNALL > 1) begin  select @O_iErrorState = 5342     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vPOSTTOGL < 0 or @I_vPOSTTOGL > 1) begin  select @O_iErrorState = 199     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 5623     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select  @I_vBACHNUMB = UPPER(@I_vBACHNUMB)  if (@I_vCHEKBKID <> '')  select @CHEKBKID = @I_vCHEKBKID else begin  if ((@I_vBCHSOURC = 'Sales Entry') and (@CHEKBKID = ''))  begin  select @CHEKBKID = CHEKBKID from SOP40100 (nolock) where SETUPKEY = 1  end  if ((@I_vBCHSOURC = 'RM_Sales') and (@CHEKBKID = ''))  begin  select @CHEKBKID = CHEKBKID from RM40101 (nolock) where SETUPKEY = 1  end  if ((@I_vBCHSOURC = 'PM_Trxent') and (@CHEKBKID = ''))  begin  select @CHEKBKID = CHEKBKID from PM40100 (nolock) where UNIQKEY = '1'  end end  if ( @I_vBACHNUMB = '' or  @I_vSERIES = 0 or  @I_vBCHSOURC = ''  ) begin  select @O_iErrorState = 26    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vSERIES < 2 or @I_vSERIES > 7) begin  select @O_iErrorState = 5382     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAPPROVL not in (0,1)) begin  select @O_iErrorState = 20161     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAPPROVL = 1) and (@I_vAPRVLUSERID = '')  begin  select @O_iErrorState = 20163     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAPPROVL = 1) and (@I_vAPRVLUSERID <> '')  begin  if (not exists(select 1 from DYNAMICS..SY01400 (nolock) where USERID = @I_vAPRVLUSERID))  begin  select @O_iErrorState = 20162     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end   if (@I_vAPPROVL = 1) and (@I_vAPPRVLDT = '')  begin   select @I_vAPPRVLDT = convert(varchar(12),getdate()) end   if (@I_vAPPROVL = 1) and (@I_vTRXSOURC = '')  begin  select @O_iErrorState = 20164     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vTRXSOURC <> '')  begin   if (not exists(select 1 from SY02300 (nolock) where SERIES = @I_vSERIES and UPPER(TRXSOURC) = UPPER(@I_vTRXSOURC)))  begin  select @O_iErrorState = 20165     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end   if (@I_vTRXSOURC <> '')  begin   if (not exists(select 1 from SY02300 (nolock) where SERIES = @I_vSERIES and UPPER(TRXSOURC) = UPPER(@I_vTRXSOURC) and REQBAPRV = 1))  begin  select @O_iErrorState = 20166     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end   if (@I_vAPPROVL = 0) begin   select  @I_vAPPRVLDT = '',  @I_vAPRVLUSERID = '',  @I_vTRXSOURC = '' end  select  @NOFPSTGS = NOFPSTGS,  @BACHFREQExisting = BACHFREQ,  @RECPSTGSExisting = RECPSTGS  from SY00500 (nolock) where BACHNUMB = @I_vBACHNUMB and BCHSOURC = @I_vBCHSOURC  if (@NOFPSTGS is not null) begin  select @BatchExists = 1   select @lock = BACHNUMB from SY00500 (updlock) where BCHSOURC = @I_vBCHSOURC and BACHNUMB = @I_vBACHNUMB end  if (@I_vBACHFREQ is not null) begin  if (@I_vBACHFREQ  < 1 or @I_vBACHFREQ  > 8)  begin  select @O_iErrorState = 5383     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vBCHSOURC not in ('Invoice Entry','RM_Sales','IV_Trxent','IV_Trans','ASMENT','GL_Normal','GL_Clearing','PM_Trxent','XPM_Cchecks','PM_Payment','RM_Cash'))    begin  select @O_iErrorState = 5385     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@BatchExists = 1 and @BACHFREQExisting <> 1 and @I_vBACHFREQ = 1 and @NOFPSTGS > 0)  begin  select @O_iErrorState = 5384     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if (@BatchExists = 0)  begin  select @I_vBACHFREQ = 1  end  else  begin  select @I_vBACHFREQ = @BACHFREQExisting  end end  if (@I_vRECPSTGS is not null) begin  if ((@I_vBACHFREQ < 2 or @I_vBACHFREQ > 8) and (@I_vRECPSTGS <> 0))  begin  select @O_iErrorState = 5386     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRECPSTGS < 0)  begin  select @O_iErrorState = 5387     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vRECPSTGS > 999)  begin  select @O_iErrorState = 5388     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if (@BatchExists = 0)  begin  select @I_vRECPSTGS = 0  end  else  begin  select @I_vRECPSTGS = @RECPSTGSExisting  end end  if (@I_vMSCBDINC is not null) begin  if ((@I_vBACHFREQ <> 8) and (@I_vMSCBDINC <> 0))  begin  select @O_iErrorState = 5389     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vMSCBDINC < 0)  begin  select @O_iErrorState = 5390     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end   if (@I_vMSCBDINC > 999)  begin  select @O_iErrorState = 5391     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end else begin  if (@BatchExists = 0)  begin  select @I_vMSCBDINC = 0  end  else  begin  select @I_vMSCBDINC = @MSCBDINCExisting  end end  if (@I_vBACHFREQ = 1) begin  select @I_vRECPSTGS = 0, @I_vMSCBDINC = 0 end  if ( @I_vSERIES = 5 ) or ( @I_vSERIES = 3 and @I_vBCHSOURC = 'Sales Entry' ) or ( @I_vSERIES = 4 and @I_vBCHSOURC = 'Rcvg Trx Entry' )  begin   if exists(select 1 from DYNAMICS..SY00800 (nolock) where BCHSOURC = 'Utility' and TRXSOURC = 'Reconcile' and  CMPNYNAM = @sCompanyName)  begin  select @O_iErrorState = 2246    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  while (1 = 1) begin  if (@BatchExists = 0)  begin  exec @iStatus = DYNAMICS..tasmGetNextNoteIndex  @I_sCompanyID   = @CMPANYID,  @I_iSQLSessionID = 0,  @I_noteincrement  = 1,  @O_mNoteIndex   = @NOTEINDX output,  @O_iErrorState  = @iGetNextNoteIdxErrState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iGetNextNoteIdxErrState <> 0)  begin  if (@iGetNextNoteIdxErrState <> 0)  begin  exec @iStatus = taUpdateString  @iGetNextNoteIdxErrState,  @oErrString,  @oErrString output,  @O_oErrorState output  end  select @O_iErrorState = 6343   exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end   if (@I_vBCHSOURC in ('GL_Normal','GL_Clearing', 'RM_Sales','RM_Cash', 'PM_Trxent', 'PM_Payment', 'XPM_Cchecks'))  begin  if @I_vBCHSOURC = 'GL_Normal'   Begin  if (exists(select 1 from WF100001 where FormID = 34)) and (exists (select 1 from WF100002 where WF100002.ACTIVE = 1))  select @Workflow_Status = 1, @Workflow_Priority = 0  else  select @Workflow_Status = 9, @Workflow_Priority = 0  End  if @I_vBCHSOURC in ('PM_Payment','PM_Trxent')   Begin  if (exists(select 1 from WF100001 where FormID = 221)) and (exists (select 1 from WF100002 where WF100002.ACTIVE = 1))  select @Workflow_Status = 1, @Workflow_Priority = 0  else  select @Workflow_Status = 9, @Workflow_Priority = 0  End   if @I_vBCHSOURC in ('RM_Sales','RM_Cash')  Begin  if (exists(select 1 from WF100001 where FormID = 382)) and (exists (select 1 from WF100002 where WF100002.ACTIVE = 1))  select @Workflow_Status = 1, @Workflow_Priority = 0  else  select @Workflow_Status = 9, @Workflow_Priority = 0  End   else  Begin  select @WORKFLOWENABLED = WORKFLOWENABLED from DYNAMICS..SY01500 where INTERID = db_name()  if(@WORKFLOWENABLED = 1)  begin  select @Workflow_Approval_Status = 1, @Workflow_Priority = 2  end  else  begin  select @Workflow_Approval_Status = 9, @Workflow_Priority = 2  end  end  end   insert SY00500 (  GLPOSTDT,  BCHSOURC,  BACHNUMB,  BCHCOMNT,  SERIES,  MKDTOPST,  NUMOFTRX,  DELBACH,  BACHFREQ,  RCLPSTDT,  NOFPSTGS,  CHKSPRTD,  RVRSBACH,  CHEKBKID,  BCHTOTAL,  BACHDATE,  POSTTOGL,  MODIFDT,  CREATDDT,  ORIGIN,  NOTEINDX,  CURNCYID,  BCHSTTUS,  CNTRLTOT,  CNTRLTRX,  PETRXCNT,  APPROVL,  APPRVLDT,  APRVLUSERID,  Computer_Check_Doc_Date,  Sort_Checks_By,  SEPRMTNC,  REPRNTED,  CHKFRMTS,  TRXSORCE,  PmtMethod,  EFTFileFormat,  BRKDNALL,  USERID,  RECPSTGS,  MSCBDINC,  Workflow_Approval_Status,  Workflow_Status,  Workflow_Priority,  TIME1  )  select   case  WHEN @I_vSERIES = 2  THEN ''  ELSE @I_vGLPOSTDT  end,  @I_vBCHSOURC,  @I_vBACHNUMB,  @I_vBCHCOMNT,  @I_vSERIES,  0,    @I_vNUMOFTRX,  0,    @I_vBACHFREQ,   '',    0,    0,    0,    @CHEKBKID,  @I_vDOCAMT,  '',    @I_vPOSTTOGL,  convert(varchar(12),getdate()),   convert(varchar(12),getdate()),   @I_vORIGIN,  @NOTEINDX,       '',    0,    case  when @I_vCNTRLTOT is not null  then @I_vCNTRLTOT  else 0  end,  case  when @I_vCNTRLTRX is not null  then @I_vCNTRLTRX  else 0  end,  0,    @I_vAPPROVL,    case      when @I_vAPPROVL = 0   then ''  else @I_vAPPRVLDT  end,   case      when @I_vAPPROVL = 0   then ''  else @I_vAPRVLUSERID  end,   '',    0,    0,    0,    0,    '',    @I_vPmtMethod,  @I_vEFTFileFormat,  @I_vBRKDNALL,   @I_vUSERID,  @I_vRECPSTGS,   @I_vMSCBDINC,   @Workflow_Approval_Status,  @Workflow_Status ,  @Workflow_Priority,  ''     if (@@error <> 0)  begin  select @O_iErrorState = 575     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end  else  begin  if (@I_vBCHSOURC in ('GL_Normal','GL_Clearing', 'RM_Sales','RM_Cash', 'PM_Trxent', 'PM_Payment', 'XPM_Cchecks'))  begin  if @I_vBCHSOURC in ('GL_Normal','PM_Trxent','RM_Sales','PM_Payment','RM_Cash')   begin  if @I_vBCHSOURC = 'GL_Normal'  Begin   if (exists(select 1 from WF100001 where FormID = 34)) and  exists(select Workflow_Type_Name from WF100002 where ACTIVE = 1 and Workflow_Type_Name=(select Workflow_Type_Name from WF100001   where FormID = 34))  select @ActiveWorkflow = 1  End  if @I_vBCHSOURC in ('PM_Trxent' , 'PM_Payment')  Begin  if (exists(select 1 from WF100001 where FormID = 221)) and  exists(select Workflow_Type_Name from WF100002 where ACTIVE = 1 and Workflow_Type_Name=(select Workflow_Type_Name from WF100001   where FormID = 221))  select @ActiveWorkflow = 1  End  if @I_vBCHSOURC in ('RM_Sales','RM_Cash')  Begin   if (exists(select 1 from WF100001 where FormID = 382)) and  exists(select Workflow_Type_Name from WF100002 where ACTIVE = 1 and Workflow_Type_Name=(select Workflow_Type_Name from WF100001   where FormID = 382))  select @ActiveWorkflow = 1   End  if @ActiveWorkflow = 1  begin   select  @Workflow_Status = Workflow_Status from SY00500 where BACHNUMB = @I_vBACHNUMB  and BCHSOURC = @I_vBCHSOURC  if @Workflow_Status not in(1,9)  begin  select @O_iErrorState = 12012    break  end  end  End  Else  Begin  select @WORKFLOWENABLED = WORKFLOWENABLED from DYNAMICS..SY01500 where INTERID = db_name()  if(@WORKFLOWENABLED = 1)  begin  if(exists(select Workflow_Approval_Status from SY00500 where Workflow_Approval_Status = 4 and BCHSOURC = @I_vBCHSOURC and BACHNUMB = @I_vBACHNUMB))  begin  select @O_iErrorState = 9007    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  else  begin  select @Workflow_Approval_Status = 1, @Workflow_Priority = 2  end  end  else  begin  select @Workflow_Approval_Status = 9, @Workflow_Priority = 2  end  End  end   update SY00500 set NUMOFTRX = NUMOFTRX + @I_vNUMOFTRX,  BCHTOTAL = BCHTOTAL + @I_vDOCAMT,  BCHCOMNT =  case  when @I_vBCHCOMNT <> ''  then @I_vBCHCOMNT  else BCHCOMNT  end,  CNTRLTOT =   case   when @I_vCNTRLTOT is not null  then @I_vCNTRLTOT  else CNTRLTOT  end,  CNTRLTRX =  case  when @I_vCNTRLTRX is not null  then @I_vCNTRLTRX  else CNTRLTRX  end,  PmtMethod = @I_vPmtMethod,  EFTFileFormat = @I_vEFTFileFormat,  BACHFREQ = @I_vBACHFREQ,  RECPSTGS = @I_vRECPSTGS,  MSCBDINC = @I_vMSCBDINC,  Workflow_Approval_Status = @Workflow_Approval_Status,  Workflow_Priority = @Workflow_Priority,  APPROVL = @I_vAPPROVL,       APPRVLDT =   case        when @I_vAPPROVL = 0   then ''  else @I_vAPPRVLDT  end,   APRVLUSERID =   case        when @I_vAPPROVL = 0   then ''  else @I_vAPRVLUSERID  end  from SY00500  where BCHSOURC = @I_vBCHSOURC and BACHNUMB = @I_vBACHNUMB  if (@@error <> 0)  begin  select @O_iErrorState = 576    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  end   exec @iStatus = taCreateUpdateBatchHeaderRcdPost  @I_vBACHNUMB,  @I_vBCHCOMNT,  @I_vSERIES,  @I_vGLPOSTDT,  @I_vBCHSOURC,  @I_vDOCAMT,  @I_vORIGIN,  @I_vNUMOFTRX,  @I_vCHEKBKID,  @I_vCNTRLTOT,  @I_vCNTRLTRX,  @I_vPOSTTOGL,  @I_vPmtMethod,  @I_vEFTFileFormat,  @I_vRequesterTrx,  @I_vBRKDNALL,  @I_vUSERID,  @I_vBACHFREQ,  @I_vRECPSTGS,  @I_vMSCBDINC,  @I_vAPPROVL,  @I_vAPPRVLDT,  @I_vAPRVLUSERID,  @I_vTRXSOURC,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end  if (@iStatus <> 0) or (@iCustomState <> 0)  begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 559    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  break  end  break end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateUpdateBatchHeaderRcd] TO [DYNGRP]
GO

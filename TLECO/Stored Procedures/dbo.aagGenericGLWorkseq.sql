SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 CREATE  PROCEDURE [dbo].[aagGenericGLWorkseq] @USERID CHAR(15), @TBName varchar(25), @Preview SMALLINT, @O_SQL_Error_State int = NULL  output AS Begin  set nocount on  Declare @execStr varchar(8000),  @JRNENTRY bigint,  @aaGLWorkHdrID   bigint,  @count int,  @counter int,  @CntGP int,  @CntAA int,  @Cnt int,  @i bigint,  @j   int,  @k int,  @l int   Declare @ACTINDX int,  @DEBITAMT numeric(19,5),  @CRDTAMNT numeric(19,5),  @ORDBTAMT numeric(19,5),  @ORCRDAMT numeric(19,5),  @SQNCLINE bigint,  @lJRNENTRY bigint   Declare @CMPANYID smallint,  @aagGetHdrID int,  @Status  int,  @OPENYEAR int,  @TRXSORCE char(13)   Declare @DistID int,@seqnumber bigint   Select @i =1  declare CGLWorkseq cursor fast_forward  for   (Select Distinct A.JRNENTRY from AAG10000 A inner join AAG10001 A1 on A1.aaGLWorkHdrID = A.aaGLWorkHdrID  inner join (select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  union all select JRNENTRY, ACTINDX,  case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101) B on  A.JRNENTRY = B.JRNENTRY where (A1.SQNCLINE = B.SQNCLINE and   (A1.ACTINDX<>B.ACTINDX or  A1.DEBITAMT<>B.DEBITAMT or A1.CRDTAMNT<>B.CRDTAMNT or A1.ORDBTAMT<>B.ORDBTAMT or   A1.ORCRDAMT<> B.ORCRDAMT)))  for read only   EXEC ('INSERT INTO '+@TBName +'(USERID,  AATBL , ERMSGTXT,AAERMSG,AAERTYP)   SELECT DISTINCT '+''''+@USERID + ''''+',''aaGLDist'',''Journal Entry=''+LTRIM(STR(A.JRNENTRY))+SPACE(3)+''aaGLWorkHdrID=''+LTRIM(STR(A.aaGLWorkHdrID))+SPACE(3)+''aaGLWorkDistID=''+LTRIM(STR(A1.aaGLWorkDistID)) ,7,1   from AAG10000 A inner join AAG10001 A1 on A1.aaGLWorkHdrID = A.aaGLWorkHdrID  inner join (select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  union all select JRNENTRY, ACTINDX,  case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101) B on  A.JRNENTRY = B.JRNENTRY where (A1.SQNCLINE = B.SQNCLINE and   (A1.ACTINDX<>B.ACTINDX or  A1.DEBITAMT<>B.DEBITAMT or A1.CRDTAMNT<>B.CRDTAMNT or A1.ORDBTAMT<>B.ORDBTAMT or   A1.ORCRDAMT<> B.ORCRDAMT))')   open CGLWorkseq  fetch next from CGLWorkseq into @JRNENTRY  while @@fetch_status = 0  begin  Select Distinct @aaGLWorkHdrID=  aaGLWorkHdrID from AAG10000 where JRNENTRY=@JRNENTRY    set @count=0  Begin    Update AAG10001 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID=@aaGLWorkHdrID  Update AAG10002 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID=@aaGLWorkHdrID  Update AAG10003 SET aaGLWorkDistID=0-aaGLWorkDistID where aaGLWorkHdrID=@aaGLWorkHdrID  UPDATE AAG10002   SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = A1.aaGLWorkHdrID) from AAG10001 A1 where AAG10002.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10002.aaGLWorkDistID=A1.aaGLWorkDistID and A1.aaGLWorkHdrID=@aaGLWorkHdrID  UPDATE AAG10003  SET aaGLWorkDistID = (SELECT COUNT(1) FROM AAG10001 AA WHERE A1.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = A1.aaGLWorkHdrID) from AAG10001 A1 where AAG10003.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10003.aaGLWorkDistID=A1.aaGLWorkDistID and A1.aaGLWorkHdrID=@aaGLWorkHdrID  UPDATE AAG10001   SET aaGLWorkDistID =  (SELECT COUNT(1) FROM AAG10001 AA WHERE AAG10001.DEX_ROW_ID >= AA.DEX_ROW_ID and AA.aaGLWorkHdrID = AAG10001.aaGLWorkHdrID ) where AAG10001.aaGLWorkHdrID=@aaGLWorkHdrID   set @Cnt=0  Select  @CntGP= count(GL.JRNENTRY) from (select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  where  JRNENTRY=@JRNENTRY  group by SQNCLINE,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT  union all   select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101 where  JRNENTRY=@JRNENTRY group by SQNCLINE,JRNENTRY, ACTINDX,TRXAMNT) GL where GL.JRNENTRY = @JRNENTRY   Select  @CntAA= count(aaGLWorkHdrID) from AAG10001 where aaGLWorkHdrID=@aaGLWorkHdrID   if @CntGP>=@CntAA  Begin  SET @l=1  declare lCGLW cursor fast_forward for  select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  where  JRNENTRY=@JRNENTRY  group by SQNCLINE,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT  union all   select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101 where  JRNENTRY=@JRNENTRY group by SQNCLINE,JRNENTRY, ACTINDX,TRXAMNT  for read only  open lCGLW  fetch next from lCGLW into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SQNCLINE  while @@fetch_status = 0  Begin  Update AAG10001 set SQNCLINE=@SQNCLINE  where aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID = @l  set @l=@l+1  fetch next from lCGLW into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SQNCLINE  end   close lCGLW  deallocate lCGLW  End   Create table #AAGLWDistID(DistID int,rowID int not null identity)  SET @k=1  While  @CntAA>=@k  Begin   if @Cnt=@CntGP Break  SET @l=1  declare lCGLW cursor fast_forward for  select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  where  JRNENTRY=@JRNENTRY  group by SQNCLINE,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT  union all   select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101 where  JRNENTRY=@JRNENTRY group by SQNCLINE,JRNENTRY, ACTINDX,TRXAMNT  for read only  open lCGLW  fetch next from lCGLW into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SQNCLINE  while @@fetch_status = 0 and  @CntAA >= @l  Begin  set @counter=0  if @k = 1  Begin  select @counter=count(*)  from AAG10001 A1 inner join AAG10000 A on A1.aaGLWorkHdrID=A.aaGLWorkHdrID   left join (select JRNENTRY,ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  union all select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101) B on B.JRNENTRY =A.JRNENTRY where   A1.ACTINDX = B.ACTINDX and A1.DEBITAMT=B.DEBITAMT and A1.CRDTAMNT=B.CRDTAMNT and A1.ORDBTAMT=B.ORDBTAMT  and A1.ORCRDAMT= B.ORCRDAMT and B.SQNCLINE=@SQNCLINE and B.ACTINDX=@ACTINDX and B.DEBITAMT=@DEBITAMT and B.CRDTAMNT=@CRDTAMNT and   B.ORDBTAMT=@ORDBTAMT and B.ORCRDAMT=@ORCRDAMT and B.JRNENTRY=@lJRNENTRY and A1.aaGLWorkDistID = @k  end   else  begin   select @counter=count(*)  from AAG10001 A1 inner join AAG10000 A on A1.aaGLWorkHdrID=A.aaGLWorkHdrID   left join (select JRNENTRY,ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  union all select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101) B on B.JRNENTRY =A.JRNENTRY where   A1.ACTINDX = B.ACTINDX and A1.DEBITAMT=B.DEBITAMT and A1.CRDTAMNT=B.CRDTAMNT and A1.ORDBTAMT=B.ORDBTAMT  and A1.ORCRDAMT= B.ORCRDAMT and B.SQNCLINE=@SQNCLINE and B.ACTINDX=@ACTINDX and B.DEBITAMT=@DEBITAMT and B.CRDTAMNT=@CRDTAMNT and   B.ORDBTAMT=@ORDBTAMT and B.ORCRDAMT=@ORCRDAMT and B.JRNENTRY=@lJRNENTRY and A1.aaGLWorkDistID = @k   and B.SQNCLINE not in (select SQNCLINE from AAG10001 where aaGLWorkDistID in (select DistID from #AAGLWDistID)   and aaGLWorkHdrID =@aaGLWorkHdrID)  end   if @counter = 1   Begin  insert into #AAGLWDistID(DistID) VALUES(@l)  Select @Cnt = @Cnt + 1   Break  end   SET  @l = @l + 1  fetch next from lCGLW into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SQNCLINE  end   close lCGLW  deallocate lCGLW  SET  @k = @k + 1  End   SET @j=1  Update AAG10001 SET aaGLWorkDistID=0-aaGLWorkDistID  where aaGLWorkHdrID=@aaGLWorkHdrID  Update AAG10002 SET aaGLWorkDistID=0-aaGLWorkDistID  where aaGLWorkHdrID=@aaGLWorkHdrID  Update AAG10003 SET aaGLWorkDistID=0-aaGLWorkDistID  where aaGLWorkHdrID=@aaGLWorkHdrID  declare lCGLW cursor fast_forward for  select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  where  JRNENTRY=@JRNENTRY  group by SQNCLINE,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT  union all   select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101 where  JRNENTRY=@JRNENTRY group by SQNCLINE,JRNENTRY, ACTINDX,TRXAMNT  for read only  open lCGLW  fetch next from lCGLW into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SQNCLINE  while @@fetch_status = 0 and @CntAA>=@j  Begin   Select  @DistID=ltrim(rtrim(STR(rowID)))  from  #AAGLWDistID where DistID=@j  Update AAG10001 SET SQNCLINE=ltrim(rtrim(str(@SQNCLINE)))where aaGLWorkHdrID=ltrim(rtrim(str(@aaGLWorkHdrID))) and aaGLWorkDistID=(-@DistID)  Update AAG10001 SET aaGLWorkDistID=ltrim(rtrim(str(@j))) where aaGLWorkHdrID=ltrim(rtrim(str(@aaGLWorkHdrID))) and aaGLWorkDistID=(-@DistID)  Update AAG10002 SET aaGLWorkDistID=ltrim(rtrim(str(@j))) where aaGLWorkHdrID=ltrim(rtrim(str(@aaGLWorkHdrID))) and aaGLWorkDistID=(-@DistID)  Update AAG10003 SET aaGLWorkDistID=ltrim(rtrim(str(@j))) where aaGLWorkHdrID=ltrim(rtrim(str(@aaGLWorkHdrID))) and aaGLWorkDistID=(-@DistID)   SET  @j = @j + 1  fetch next from lCGLW into @lJRNENTRY, @ACTINDX,@DEBITAMT,@CRDTAMNT,@ORDBTAMT,@ORCRDAMT,@SQNCLINE  end   Drop table #AAGLWDistID  close lCGLW  deallocate lCGLW  Update AAG10001 SET aaGLWorkDistID=@CntGP-aaGLWorkDistID  where aaGLWorkHdrID=@aaGLWorkHdrID and aaGLWorkDistID < 0  Update AAG10002 SET aaGLWorkDistID=@CntGP-aaGLWorkDistID  where aaGLWorkHdrID=@aaGLWorkHdrID and aaGLWorkDistID < 0  Update AAG10003 SET aaGLWorkDistID=@CntGP-aaGLWorkDistID  where aaGLWorkHdrID=@aaGLWorkHdrID and aaGLWorkDistID < 0   UPDATE AAG10002   SET aaGLWorkDistID = @CntGP+(SELECT COUNT(1) FROM AAG10001 AA WHERE A1.SQNCLINE >= AA.SQNCLINE and AA.aaGLWorkHdrID = A1.aaGLWorkHdrID) from AAG10001 A1 where AAG10002.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10002.aaGLWorkDistID=A1.aaGLWorkDistID  and AAG10002.aaGLWorkHdrID = @aaGLWorkHdrID and AAG10002.aaGLWorkDistID>@CntGP  UPDATE AAG10003  SET aaGLWorkDistID = @CntGP+(SELECT COUNT(1) FROM AAG10001 AA WHERE A1.SQNCLINE >= AA.SQNCLINE and AA.aaGLWorkHdrID = A1.aaGLWorkHdrID) from AAG10001 A1 where AAG10003.aaGLWorkHdrID=A1.aaGLWorkHdrID and AAG10003.aaGLWorkDistID=A1.aaGLWorkDistID  and AAG10003.aaGLWorkHdrID = @aaGLWorkHdrID and AAG10003.aaGLWorkDistID>@CntGP  if (select Distinct count(aaGLWorkDistID) from AAG10002 where aaGLWorkHdrID=@aaGLWorkHdrID) =   (select count(GL.JRNENTRY) from (select JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,SQNCLINE   from GL10001  where  JRNENTRY=@JRNENTRY  group by SQNCLINE,JRNENTRY, ACTINDX,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT  union all   select JRNENTRY, ACTINDX,case when GL10101.TRXAMNT < 0 then 0 else GL10101.TRXAMNT end as DEBITAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as CRDTAMNT,  case when GL10101.TRXAMNT < 0 then 0  else GL10101.TRXAMNT end as ORDBTAMT,  case when GL10101.TRXAMNT > 0  then 0 else abs(GL10101.TRXAMNT) end as ORCRDAMT,  SQNCLINE from GL10101 where  JRNENTRY=@JRNENTRY group by SQNCLINE,JRNENTRY, ACTINDX,TRXAMNT) GL where GL.JRNENTRY = @JRNENTRY )  Begin  SET @k=1  SET  @j = 0  Select  @CntAA= count(aaGLWorkHdrID) FROM AAG10002 WHERE aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID>@CntGP  While  @CntAA > @k  Begin  if exists(select (aaGLWorkDistID) from AAG10002 where aaGLWorkHdrID=@aaGLWorkHdrID and aaGLWorkDistID=@k+@j)  Begin  SET @j=@j+1  continue   end   else  Begin  UPDATE AAG10002   SET aaGLWorkDistID = @k+@j  WHERE aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID=@CntGP+@k  UPDATE AAG10003  SET aaGLWorkDistID = @k+@j  WHERE aaGLWorkHdrID = @aaGLWorkHdrID and aaGLWorkDistID=@CntGP+@k  SET @k=@k+1   end   End  End   End   fetch next from CGLWorkseq into @JRNENTRY  End   CLOSE CGLWorkseq  DEALLOCATE CGLWorkseq  Begin   Delete AAG10001 where aaGLWorkHdrID in (select Distinct aaGLWorkHdrID from AAG10000) and   aaGLWorkDistID >  (select count(B.JRNENTRY) from AAG10001 A1 inner join AAG10000 A on A1.aaGLWorkHdrID=A.aaGLWorkHdrID   right join (select JRNENTRY,SQNCLINE,ACTINDX from GL10001 union all select JRNENTRY,SQNCLINE,ACTINDX from GL10101) B   on B.JRNENTRY =A.JRNENTRY and A1.SQNCLINE = B.SQNCLINE and A1.ACTINDX = B.ACTINDX where B.JRNENTRY is not null and  A.aaGLWorkHdrID= AAG10001.aaGLWorkHdrID)   Delete AAG10002 from AAG10002 A2 where A2.aaGLWorkDistID not in (select A1.aaGLWorkDistID from   AAG10001 A1 where A1.aaGLWorkHdrID=A2.aaGLWorkHdrID)    Delete AAG10003  from AAG10003 A3 where A3.aaGLWorkDistID not in (select A1.aaGLWorkDistID from   AAG10001 A1 where A1.aaGLWorkHdrID=A3.aaGLWorkHdrID)   End   set nocount off End     
GO
GRANT EXECUTE ON  [dbo].[aagGenericGLWorkseq] TO [DYNGRP]
GO

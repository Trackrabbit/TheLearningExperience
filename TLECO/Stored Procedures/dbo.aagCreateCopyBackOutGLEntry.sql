SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[aagCreateCopyBackOutGLEntry]  @JRNENTRYFR int,  @RCTRXSEQ numeric(19,5),  @YEAR1 smallint,  @JRNENTRYTO int,  @GLPOSTDT datetime,   @CompanyID smallint,  @InterID char(5),  @SqlSessionID int,  @USERID char(15),  @TRXTYPE int as begin  declare @aaGLHdrID int,  @aaGLWorkHdrID int,  @lSeqNumber int,  @NewlSeqNumber int,  @LedgerID smallint,  @ACTINDX INT,  @CURRNIDX smallint,  @RATETPID char(15),  @EXGTBLID char(15),  @XCHGRATE numeric(19,7),  @EXCHDATE datetime,  @TIME1 datetime ,   @RTCLCMTD smallint,  @DENXRATE numeric(19,7),  @MCTRXSTT smallint,  @CURNCYID char(15)   select  @aaGLHdrID = 0,  @aaGLWorkHdrID  = 0,  @LedgerID = 0   if @TRXTYPE = 1   begin   if exists(select 1 from SY40101 where YEAR1 = @YEAR1 and HISTORYR = 1)  begin  Select @aaGLHdrID = aaGLHdrID  from AAG40000  where JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and  YEAR1 = @YEAR1  select @LedgerID = Ledger_ID from GL30000    where JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and   HSTYEAR = @YEAR1  end  else  begin  Select @aaGLHdrID = aaGLHdrID  from AAG30000  where JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and  YEAR1 = @YEAR1  select @LedgerID = Ledger_ID from GL20000    where JRNENTRY = @JRNENTRYFR and   RCTRXSEQ = @RCTRXSEQ and   OPENYEAR= @YEAR1  end  exec aagGLWorkHdrUpdate  @JRNENTRYTO,   0,  @GLPOSTDT,  @LedgerID,   @aaGLWorkHdrID output,  @CompanyID   update AAG10000 set aaTRXType = 2   where aaGLWorkHdrID = @aaGLWorkHdrID   if exists(select 1 from SY40101 where YEAR1 = @YEAR1 and HISTORYR = 1)  begin  select @NewlSeqNumber = 500  declare  TrxOpenCursor  cursor local for   select  SEQNUMBR, ACTINDX  from  AAG40001  where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 order by  SEQNUMBR  open TrxOpenCursor  fetch next   from   TrxOpenCursor  into  @lSeqNumber, @ACTINDX  while @@fetch_status = 0   begin   insert into AAG10001   (aaGLWorkHdrID,aaGLWorkDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,FXDORVAR,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  SQNCLINE,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,aaWinWasOpen,  aaOFFSETAcct,aaDistErrors,aaChangeDate, aaChangeTime)  select @aaGLWorkHdrID,aaGLDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,dbo.aagFixedOrVar(ACTINDX),CRDTAMNT,DEBITAMT,ORCRDAMT,ORDBTAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  @NewlSeqNumber,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,1,  0,0,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108) from AAG40001   where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and SEQNUMBR = @lSeqNumber AND ACTINDX = @ACTINDX  select  @NewlSeqNumber = @NewlSeqNumber + 500   fetch next   from   TrxOpenCursor  into  @lSeqNumber, @ACTINDX  end  close TrxOpenCursor  deallocate TrxOpenCursor   insert into AAG10002   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,  ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors,aaAliasID)  select @aaGLWorkHdrID,aaGLDistID,aaGLAssignID,CRDTAMNT,DEBITAMT,ORCRDAMT,  ORDBTAMT,aaAssignedPercent,DistRef,NOTEINDX,0,0 from AAG40002  where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and aaGLAssignID > 0   insert into AAG10003   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,aaTrxDimID,aaTrxCodeID,aaCodeErrors)  select @aaGLWorkHdrID,aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID,0  from AAG40003 where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and aaGLAssignID > 0   and aaTrxDimID > 0  end  else  begin  declare  TrxOpenCursor  cursor local for   select  SEQNUMBR, ACTINDX  from  AAG30001  where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 order by  SEQNUMBR  open TrxOpenCursor  fetch next   from   TrxOpenCursor  into  @lSeqNumber, @ACTINDX  select @NewlSeqNumber = 500  while @@fetch_status = 0   begin   insert into AAG10001   (aaGLWorkHdrID,aaGLWorkDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,FXDORVAR,DEBITAMT,CRDTAMNT,ORDBTAMT,ORCRDAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  SQNCLINE,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,aaWinWasOpen,  aaOFFSETAcct,aaDistErrors,aaChangeDate, aaChangeTime)  select @aaGLWorkHdrID,aaGLDistID,INTERID,CorrespondingUnit,ACTINDX,ACCTTYPE,  aaBrowseType,DECPLACS,dbo.aagFixedOrVar(ACTINDX),CRDTAMNT,DEBITAMT,ORCRDAMT,ORDBTAMT,CURNCYID,  CURRNIDX,RATETPID,EXGTBLID,XCHGRATE,EXCHDATE,TIME1,RTCLCMTD,DENXRATE,MCTRXSTT,  @NewlSeqNumber,aaCustID,aaVendID,aaSiteID,aaItemID,EMPLOYID,aaCopyStatus,1,  0,0,convert(char(12), getdate(), 102), convert(char(12), getdate(), 108) from AAG30001   where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and SEQNUMBR = @lSeqNumber AND ACTINDX = @ACTINDX  select  @NewlSeqNumber = @NewlSeqNumber + 500   fetch next   from   TrxOpenCursor  into  @lSeqNumber, @ACTINDX  end  close TrxOpenCursor  deallocate TrxOpenCursor   insert into AAG10002   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,DEBITAMT,CRDTAMNT,ORDBTAMT,  ORCRDAMT,aaAssignedPercent,DistRef,NOTEINDX,aaAssignErrors,aaAliasID)  select @aaGLWorkHdrID,aaGLDistID,aaGLAssignID,CRDTAMNT,DEBITAMT,ORCRDAMT,  ORDBTAMT,aaAssignedPercent,DistRef,NOTEINDX,0,aaAliasID from AAG30002  where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and aaGLAssignID > 0   insert into AAG10003   (aaGLWorkHdrID,aaGLWorkDistID,aaGLWorkAssignID,aaTrxDimID,aaTrxCodeID,aaCodeErrors)  select @aaGLWorkHdrID,aaGLDistID,aaGLAssignID,aaTrxDimID,aaTrxCodeID,0  from AAG30003 where aaGLHdrID = @aaGLHdrID and aaGLDistID > 0 and aaGLAssignID > 0   and aaTrxDimID > 0  end  end   else   begin   exec aagCreateDefaultAAForGLWork  @JRNENTRYTO,  @InterID,  @SqlSessionID,  @USERID   IF EXISTS(SELECT TOP 1 1 FROM GL10000 WHERE JRNENTRY = @JRNENTRYFR AND LTRIM(RTRIM(SOURCDOC))<>'' AND LTRIM(RTRIM(BCHSOURC))<>'')  BEGIN  SELECT @CURNCYID = CURNCYID, @CURRNIDX = CURRNIDX, @RATETPID = RATETPID, @EXGTBLID = EXGTBLID,   @XCHGRATE = XCHGRATE, @EXCHDATE = EXCHDATE, @TIME1 = TIME1, @RTCLCMTD = RTCLCMTD,   @DENXRATE = DENXRATE, @MCTRXSTT = MCTRXSTT from GL10000 where JRNENTRY = @JRNENTRYFR   UPDATE AAG10001  SET CURNCYID = ISNULL(@CURNCYID,''),   CURRNIDX = ISNULL(@CURRNIDX,0),   RATETPID = ISNULL(@RATETPID, ''),   EXGTBLID = ISNULL(@EXGTBLID, ''),   XCHGRATE = ISNULL(@XCHGRATE, 0),   EXCHDATE = ISNULL(@EXCHDATE,  '1900-01-01 00:00:00.000'),  TIME1 = ISNULL(@TIME1,   '1900-01-01 00:00:00.000'),  RTCLCMTD = ISNULL(@RTCLCMTD, 0),   DENXRATE = ISNULL(@DENXRATE, 0),   MCTRXSTT = ISNULL(@MCTRXSTT, 0),   DECPLACS =ISNULL((SELECT A.DECPLCUR-1 FROM DYNAMICS..MC40200 A WHERE A.CURNCYID = @CURNCYID ) ,0)   WHERE aaGLWorkHdrID =  (SELECT aaGLWorkHdrID FROM AAG10000 WHERE JRNENTRY = @JRNENTRYTO)   END  ELSE  BEGIN  SELECT @CURNCYID = CURNCYID, @CURRNIDX = CURRNIDX, @RATETPID = RATETPID, @EXGTBLID = EXGTBLID,   @XCHGRATE = XCHGRATE, @EXCHDATE = EXCHDATE, @TIME1 = TIME1, @RTCLCMTD = RTCLCMTD,   @DENXRATE = DENXRATE, @MCTRXSTT = MCTRXSTT FROM GL20000 WHERE JRNENTRY = @JRNENTRYFR   UPDATE AAG10001  SET CURNCYID = ISNULL(@CURNCYID,''),   CURRNIDX = ISNULL(@CURRNIDX,0),   RATETPID = ISNULL(@RATETPID, ''),   EXGTBLID = ISNULL(@EXGTBLID, ''),   XCHGRATE = ISNULL(@XCHGRATE, 0),   EXCHDATE = ISNULL(@EXCHDATE,  '1900-01-01 00:00:00.000'),  TIME1 = ISNULL(@TIME1,   '1900-01-01 00:00:00.000'),  RTCLCMTD = ISNULL(@RTCLCMTD, 0),   DENXRATE = ISNULL(@DENXRATE, 0),   MCTRXSTT = ISNULL(@MCTRXSTT, 0),   DECPLACS =ISNULL((SELECT A.DECPLCUR-1 FROM DYNAMICS..MC40200 A WHERE A.CURNCYID = @CURNCYID ) ,0)   WHERE aaGLWorkHdrID =  (SELECT aaGLWorkHdrID FROM AAG10000 WHERE JRNENTRY = @JRNENTRYTO)   END  end end     
GO
GRANT EXECUTE ON  [dbo].[aagCreateCopyBackOutGLEntry] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[pmCLHistoryLogicalTableGroup]  @I_cUserID char(15) = NULL,  @I_cCompanyID int  = NULL,  @I_cFunctionalCurrency char(15) = NULL,  @I_cFileName1 varchar(30) = NULL,  @I_cFileName2 varchar(30) = NULL,  @I_cFileName3 varchar(30) = NULL,  @I_cFileName4 varchar(30) = NULL,  @I_cFileName5 varchar(30) = NULL,  @I_cFileName6 varchar(30) = NULL,  @I_cFileName7 varchar(30) = NULL,  @I_cFileName8 varchar(30) = NULL,  @I_tMCRegistered tinyint  = NULL,  @O_iErrorState int  = NULL output as  declare  @iError int,    @iStatus int,    @cOriginalMessage char(255),   @cReplacement char(255),   @cSearchString1 char(2),  @iRowCount int,  @PM_DOC_SCHEDULE smallint  if @I_cUserID is NULL  or @I_cFunctionalCurrency is NULL  or @I_cFileName1 is NULL  or @I_cFileName2 is NULL  or @I_cFileName3 is NULL  or @I_cFileName4 is NULL  or @I_cFileName5 is NULL  or @I_cFileName6 is NULL  or @I_tMCRegistered is NULL begin  select @O_iErrorState = 20830  return end  create table #CNTRLNUMTEMP(  CNTRLNUM varchar(21) not null,  DOCTYPE smallint not null,  VENDORID varchar(15) not null )  select   @O_iErrorState = 0,  @iStatus  = 0,  @cSearchString1 = '%1'  exec @iStatus = DYNAMICS.dbo.smGetConstantInt  'PM_DOC_SCHEDULE',   @PM_DOC_SCHEDULE output,   @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if (@iStatus <> 0) or (@O_iErrorState <> 0)  return(@iStatus)  update  PM30200 set  CNTRLTYP =   case  when DOCTYPE <> 6  then 0  when DOCTYPE = 6 and VCHRNMBR like '%Alignment%'  then 2  else 1  end  insert into   #CNTRLNUMTEMP  (CNTRLNUM,  DOCTYPE,  VENDORID) select  VCHRNMBR,  DOCTYPE,  VENDORID from  MC020103 where  MC020103.DCSTATUS = 3 and  NOT EXISTS(  select  1  from  PM30200  where  MC020103.DOCTYPE  = PM30200.DOCTYPE  and MC020103.VCHRNMBR = PM30200.VCHRNMBR)  if @@rowcount <> 0  begin  delete from  MC020103  where  MC020103.DCSTATUS = 3  and  NOT EXISTS(  select  1  from  PM30200  where  MC020103.DOCTYPE  = PM30200.DOCTYPE  and MC020103.VCHRNMBR = PM30200.VCHRNMBR)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName5,   NULL,  17638,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return (@iStatus) end  if @I_tMCRegistered = 1 begin  insert into   #CNTRLNUMTEMP  (CNTRLNUM,  DOCTYPE,  VENDORID)  select  VCHRNMBR,  DOCTYPE,  VENDORID  from  PM30200  where  PM30200.CURNCYID <> ''  and  PM30200.CURNCYID <> @I_cFunctionalCurrency  and  NOT EXISTS(  select  1  from  MC020103  where  PM30200.DOCTYPE  = MC020103.DOCTYPE  and PM30200.VCHRNMBR = MC020103.VCHRNMBR)  and  PM30200.CNTRLTYP < 2   if @@rowcount <> 0   begin  delete from  PM30600  from  #CNTRLNUMTEMP  where  PM30600.VCHRNMBR = #CNTRLNUMTEMP.CNTRLNUM  and PM30600.DOCTYPE  = #CNTRLNUMTEMP.DOCTYPE   delete from  PM30200  from  #CNTRLNUMTEMP  where  PM30200.VCHRNMBR = #CNTRLNUMTEMP.CNTRLNUM  and PM30200.DOCTYPE  = #CNTRLNUMTEMP.DOCTYPE   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName4,   NULL,  17638,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return (@iStatus)  end end else begin  update  PM30200  set  PM30200.CURNCYID  = ''  from  PM30200  where  PM30200.CURNCYID <> ''  and PM30200.CURNCYID <> @I_cFunctionalCurrency  and  NOT EXISTS(  select  1  from  MC020103  where  PM30200.DOCTYPE  = MC020103.DOCTYPE  and PM30200.VCHRNMBR = MC020103.VCHRNMBR)  and  PM30200.CNTRLTYP < 2 end  insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID ) select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID from   PM30401 where   not exists  (select   1  from   PM20401  where   PM30401.SCHEDULE_NUMBER = PM20401.SCHEDULE_NUMBER)  if @@rowcount <> 0 begin  delete  PM30401  where   not exists  (select   1  from   PM20401  where   PM30401.SCHEDULE_NUMBER = PM20401.SCHEDULE_NUMBER)  exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName6,  NULL,  4918,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return(@iStatus) end   insert into  #CNTRLNUMTEMP(  CNTRLNUM,  DOCTYPE,  VENDORID ) select   SCHEDULE_NUMBER,  @PM_DOC_SCHEDULE,  VENDORID from   PM30401 where   not exists  (select   1  from   PM30200  where   PM30401.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE) if @@rowcount <> 0 begin  delete  PM30401  where   not exists  (select   1  from   PM30200  where   PM30401.SCHEDULE_NUMBER = PM30200.VCHRNMBR  and  PM30200.DOCTYPE = @PM_DOC_SCHEDULE)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName6,  NULL,  4909,  @O_iErrorState output   select @iError = @@error   if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return(@iStatus) end   insert into  #CNTRLNUMTEMP  (CNTRLNUM,  DOCTYPE,  VENDORID) select  CNTRLNUM,  DOCTYPE,  VENDORID from  PM00400 where  NOT EXISTS  (select   1  from  PM30200  where  PM00400.CNTRLNUM = PM30200.VCHRNMBR  and PM00400.DOCTYPE  = PM30200.DOCTYPE) and  NOT EXISTS  (select  1  from  PM30600  where  PM00400.CNTRLNUM = PM30600.VCHRNMBR  and PM00400.CNTRLTYP = PM30600.CNTRLTYP) and  DCSTATUS = 3  if @@rowcount <> 0 begin  delete from  PM00400  where  NOT EXISTS  (select   1  from  PM30200  where  PM00400.CNTRLNUM = PM30200.VCHRNMBR  and PM00400.DOCTYPE  = PM30200.DOCTYPE)  and  NOT EXISTS  (select  1  from  PM30600  where  PM00400.CNTRLNUM = PM30600.VCHRNMBR  and PM00400.CNTRLTYP = PM30600.CNTRLTYP)  and  DCSTATUS = 3   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  NULL,  10345,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return @iStatus end  update PM00400 set  DCSTATUS = 3,  DOCTYPE = TRX.DOCTYPE,  VENDORID = TRX.VENDORID,  DOCDATE = TRX.DOCDATE,  DUEDATE = TRX.DUEDATE,  DISCDATE = TRX.DISCDATE,  BCHSOURC = TRX.BCHSOURC,  CHEKBKID = TRX.CHEKBKID,  TRXSORCE = TRX.TRXSORCE from  PM30200 TRX where  TRX.CNTRLTYP = PM00400.CNTRLTYP and TRX.VCHRNMBR = PM00400.CNTRLNUM and   (PM00400.DCSTATUS <> 3  or PM00400.DOCTYPE <> TRX.DOCTYPE  or PM00400.VENDORID <> TRX.VENDORID  or PM00400.DOCDATE <> TRX.DOCDATE  or PM00400.DUEDATE <> TRX.DUEDATE  or PM00400.DISCDATE <> TRX.DISCDATE  or PM00400.BCHSOURC <> TRX.BCHSOURC  or PM00400.CHEKBKID <> TRX.CHEKBKID  or PM00400.TRXSORCE <> TRX.TRXSORCE )  insert into   #CNTRLNUMTEMP  (CNTRLNUM,  DOCTYPE,  VENDORID) select  VCHRNMBR,  DOCTYPE,  VENDORID from  PM30200 where  NOT EXISTS  (select  1  from  PM00400  where  PM30200.CNTRLTYP = PM00400.CNTRLTYP  and PM30200.VCHRNMBR = PM00400.CNTRLNUM)  if @@rowcount <> 0  begin  insert into   PM00400  (DOCNUMBR,  DCSTATUS,  DOCTYPE,  VENDORID,  DOCDATE,  DUEDATE,  DISCDATE,  BCHSOURC,  CHEKBKID,  TRXSORCE,  CNTRLTYP,  CNTRLNUM)  select  DOCNUMBR,  3,  DOCTYPE,  VENDORID,  DOCDATE,  DUEDATE,  DISCDATE,  BCHSOURC,  CHEKBKID,  TRXSORCE,  CNTRLTYP,  VCHRNMBR  from  PM30200  where  NOT EXISTS  (select  1  from  PM00400  where  PM30200.CNTRLTYP = PM00400.CNTRLTYP  and PM30200.VCHRNMBR = PM00400.CNTRLNUM)   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName1,  @cSearchString1,  10350,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return (@iStatus) end  insert into  #CNTRLNUMTEMP  (CNTRLNUM,  DOCTYPE,  VENDORID) select distinct  VCHRNMBR,  0,  VENDORID from  PM30700 where  NOT EXISTS  (select  1  from  PM30200  where  PM30200.VCHRNMBR = PM30700.VCHRNMBR   and  DOCTYPE < 6 )  if @@rowcount <> 0 begin  delete  PM30700  from  PM30700  where  NOT EXISTS  (select  1  from  PM30200  where  PM30200.VCHRNMBR = PM30700.VCHRNMBR   and DOCTYPE < 6 )   exec @iStatus = smCreateErrorLogRecord  @I_cUserID,  @I_cFileName3,  @cSearchString1,  10351,  @O_iErrorState output   select @iError = @@error  if @iStatus = 0 and @iError <> 0  begin  select @iStatus = @iError  end   if @iStatus <> 0 or @O_iErrorState <> 0  begin  return @iStatus  end end  exec @iStatus = pmCLEmailDetails  @I_cUserID,  @I_cFileName7,  @cSearchString1,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return @iStatus  exec @iStatus = pmCLEmailHistory  @I_cUserID,  @I_cFileName8,  @cSearchString1,  @O_iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if @iStatus <> 0 or @O_iErrorState <> 0  return @iStatus  return    
GO
GRANT EXECUTE ON  [dbo].[pmCLHistoryLogicalTableGroup] TO [DYNGRP]
GO

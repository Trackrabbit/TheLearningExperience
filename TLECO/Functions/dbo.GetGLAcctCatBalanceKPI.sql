SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[GetGLAcctCatBalanceKPI] (  @UserDate datetime,   @TimeUnit varchar(15),  @BalanceType varchar(15),  @AcctCat int ) RETURNS @Balances TABLE (  AcctCat int,  CurrentBalance Numeric(19,5),  PreviousBalance Numeric(19,5),  LastYearBalance Numeric(19,5) ) AS BEGIN  DECLARE @sdc datetime DECLARE @edc datetime DECLARE @sdp datetime DECLARE @edp datetime DECLARE @sdly datetime DECLARE @edly datetime  SELECT @UserDate = dbo.GetDateStripTime(@UserDate)  SELECT   @sdc = SDCurrent,   @edc = EDCurrent,   @sdp = SDPrevious,   @edp = EDPrevious,   @sdly = SDLastYear,   @edly = EDLastYear  FROM   dbo.GetKPIDates(@UserDate, 'Fiscal', @TimeUnit)   IF @BalanceType = 'YTD' OR @BalanceType = 'Average' BEGIN  INSERT INTO @Balances (AcctCat, CurrentBalance, PreviousBalance)  SELECT @AcctCat, CASE   WHEN @BalanceType = 'YTD' THEN dbo.GetGLAcctCatBalanceYTD(@edc, @AcctCat)  WHEN @BalanceType = 'Average' THEN dbo.GetGLAcctCatBalanceAvg(@edc, @TimeUnit, @AcctCat)  END,  CASE  WHEN @BalanceType = 'YTD' THEN dbo.GetGLAcctCatBalanceYTD(@edp, @AcctCat)  WHEN @BalanceType = 'Average' THEN dbo.GetGLAcctCatBalanceAvg(@edp, @TimeUnit, @AcctCat)  END  IF @TimeUnit <> 'Year'  UPDATE @Balances SET LastYearBalance =   (SELECT CASE   WHEN @BalanceType = 'YTD' THEN dbo.GetGLAcctCatBalanceYTD(@edly, @AcctCat)  WHEN @BalanceType = 'Average' THEN dbo.GetGLAcctCatBalanceAvg(@edly, @TimeUnit, @AcctCat)  END) END  ELSE IF @BalanceType = 'NetChange' BEGIN  INSERT INTO @Balances (AcctCat, CurrentBalance, PreviousBalance)  SELECT @AcctCat,   dbo.GetGLAcctCatBalanceNetChange(@sdc, @edc, @AcctCat),  dbo.GetGLAcctCatBalanceNetChange(@sdp, @edp, @AcctCat)  IF @TimeUnit <> 'Year'  UPDATE @Balances SET LastYearBalance = (SELECT dbo.GetGLAcctCatBalanceNetChange(@sdly, @edly, @AcctCat)) END  RETURN END   
GO
GRANT SELECT ON  [dbo].[GetGLAcctCatBalanceKPI] TO [DYNGRP]
GO

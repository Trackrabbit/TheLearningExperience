SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[mcFuncGetDenExchRate]  (  @RptCurrencyID varchar(15),  @RateCalcMethod smallint  )  RETURNS numeric(19,7) AS  BEGIN   declare  @DENXRATE numeric(19,7),  @FALSE int,  @TRUE int,  @O_SQL_Error_State int,  @iStatus int,  @iError int,  @cFunctionalCurrency char(15),  @cEuroCurrency char(15),  @tEuroEnabled tinyint,  @tFunctionalEnabled tinyint   select @FALSE = 0  select @TRUE = 1   select @tEuroEnabled = isnull((select ENABLED from MC60400 where ENABLED = @TRUE), @FALSE)   if @tEuroEnabled=@FALSE   begin  select @DENXRATE=0.0  return(@DENXRATE)  end   select @cEuroCurrency = Euro_Currency_ID from DYNAMICS..MC40400    select @cFunctionalCurrency = MC40000.FUNLCURR from MC40000   select @tFunctionalEnabled = isnull((select ENABLED from MC60400 where DENOMCURR = @cFunctionalCurrency), @FALSE)  select @DENXRATE=0.0   if @RateCalcMethod=0   begin  select @DENXRATE =   case  when (@FALSE = @tFunctionalEnabled)   and (@FALSE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cEuroCurrency != @RptCurrencyID)  and (@cEuroCurrency != @cFunctionalCurrency) then  0.0  when (@FALSE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cEuroCurrency = @cFunctionalCurrency) then  0.0  when (@TRUE = @tFunctionalEnabled)   and (@FALSE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@RptCurrencyID != @cEuroCurrency) then  isnull((select DENXRATE from DYNAMICS..MC40401 where DENOMCURR = @cFunctionalCurrency), 0.0)  when (@FALSE = @tFunctionalEnabled)   and (@TRUE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cEuroCurrency != @cFunctionalCurrency) then  isnull((select DENXRATE from DYNAMICS..MC40401 where DENOMCURR = @RptCurrencyID),0.0)  when (@FALSE = @tFunctionalEnabled)   and (@TRUE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE )) then  isnull((select DENXRATE from DYNAMICS..MC40401 where DENOMCURR = @cFunctionalCurrency), 0.0)  when (@TRUE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cFunctionalCurrency = @cEuroCurrency) then  0.0  when (@TRUE = @tFunctionalEnabled)   and (@RptCurrencyID = @cEuroCurrency) then  0.0  when (@FALSE = @tFunctionalEnabled)   and (@cFunctionalCurrency != @cEuroCurrency)  and (@RptCurrencyID = @cEuroCurrency) then  0.0  else   -1  end  end  else if @RateCalcMethod=1   begin  select @DENXRATE =   case  when (@FALSE = @tFunctionalEnabled)   and (@FALSE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE )) then  0.0  when (@FALSE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cEuroCurrency = @cFunctionalCurrency) then  0.0  when (@TRUE = @tFunctionalEnabled)   and (@FALSE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@RptCurrencyID != @cEuroCurrency) then  isnull((select DENXRATE from DYNAMICS..MC40401 where DENOMCURR = @cFunctionalCurrency), 0.0)  when (@FALSE = @tFunctionalEnabled)   and (@TRUE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cEuroCurrency != @cFunctionalCurrency) then  isnull((select DENXRATE from DYNAMICS..MC40401 where DENOMCURR = @RptCurrencyID),0.0)  when (@TRUE = @tFunctionalEnabled)   and (@TRUE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE )) then  isnull((select DENXRATE from DYNAMICS..MC40401 where DENOMCURR = @cFunctionalCurrency), 0.0)  when (@TRUE = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE ))   and (@cFunctionalCurrency = @cEuroCurrency) then  0.0  when (@TRUE = @tFunctionalEnabled)   and (@RptCurrencyID = @cEuroCurrency) then  0.0  when (@FALSE = @tFunctionalEnabled)   and (@cFunctionalCurrency != @cEuroCurrency)  and (@RptCurrencyID = @cEuroCurrency) then  0.0  else   -1  end  end   RETURN(@DENXRATE) END   
GO
GRANT EXECUTE ON  [dbo].[mcFuncGetDenExchRate] TO [DYNGRP]
GO

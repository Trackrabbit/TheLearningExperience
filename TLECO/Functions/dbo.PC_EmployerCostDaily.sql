SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
Create Function [dbo].[PC_EmployerCostDaily]( @v_Plan char(15), @v_HistProj tinyint)   Returns @BudgetActual table (  PlanCode char(15),  PlanDesc char(31),  Position char(6),  PosDescription char(31),  Department char(6),  DepDescription char(31),  StartDate datetime,  EndDate datetime,  SeatNumber int,  SeatDesc char(31),  TempSeat bit,  EmployeeID char(15),  EmployeeName char(41),  Date datetime,  WageAmount numeric(19,5),  BenefitsAmount numeric(19,5),  TaxAmount numeric(19,5)) As  Begin   Declare  @Seat int,  @SeatDesc char(31),  @PYADNMBR int,  @AUCTRLCD char(13),  @PlanDSCRIPTN char(31),  @JobDSCRIPTN char(31),  @DEPRTMNT char(6),  @DeptDSCRIPTN char(31),  @JobTitle char(6),  @PosStartDate datetime,  @PosEndDate  datetime,  @SSTaxTotalOnCheck numeric(19,5),  @MedTaxTotalOnCheck numeric(19,5),  @SSWageTotalOnCheck numeric(19,5),  @MedWageTotalOnCheck numeric(19,5),  @EmployID char(15),  @EmployeeName char(45),  @SSTaxPos numeric(19,5),  @MedTaxPos numeric(19,5),  @BenefitPos numeric(19,5),  @PayPos numeric(19,5),  @TotalSSTaxPos numeric(19,5),  @TotalMedTaxPos numeric(19,5),  @TotalBenefitPos numeric(19,5),  @TotalPayPos numeric(19,5),  @PostedDate datetime,  @TaxPos numeric(19,5),  @CurrentDate datetime,  @Counter int,  @DayPayPos numeric(19,5),  @DayBenefitPos numeric(19,5),  @DayTaxPos numeric(19,5),  @StartDate datetime,  @EndDate datetime,  @BUGETBENPERCENT numeric(19,5),   @BUDGETTAXPERCENT numeric(19,5),   @BUDGETBENAMOUNT numeric(19,5),   @BUDGETTAXAMOUNT numeric(19,5),  @PAYRATEBASEDON smallint,  @PAYRATESeat numeric(19,5),  @PAYRATE numeric(19,5),  @HireDate datetime,  @DaysRemaining int,  @AdjHireDate datetime,  @SENIORITYDATE_I datetime,  @INHERITSTATUS smallint,  @WKHRPRYR smallint   Select @PlanDSCRIPTN = DSCRIPTN  from PC40300 a  Where PLANCODE = @v_Plan   Declare Positions Cursor For   Select a.JOBTITLE,  max(BUGETBENPERCENT/100),  max(BUDGETTAXPERCENT/100),  max(BUDGETBENAMOUNT),  max(BUDGETTAXAMOUNT),  min(case  When a.PLANCODE = '*CURRENT' Then  a.DSCRIPTN  else  ''  End),  min(case  When a.PLANCODE = '*CURRENT' Then  a.DEPRTMNT  else  ''  End),  min(case  When a.PLANCODE = '*CURRENT' Then  b.DSCRIPTN  else  ''  End),  min(case  When a.PLANCODE = '*CURRENT' Then  c.STRTDATE  else  ''  End),  min(case  When a.PLANCODE = '*CURRENT' Then  c.ENDDATE  else  ''  End)  From PC40301 a  inner join UPR40300 b On a.DEPRTMNT = b.DEPRTMNT  left outer join PC40306 c On a.PLANCODE = c.PLANCODE and a.JOBTITLE = c.JOBTITLE  Group by a.JOBTITLE  Open Positions  Fetch Next From Positions  Into @JobTitle, @BUGETBENPERCENT, @BUDGETTAXPERCENT, @BUDGETBENAMOUNT, @BUDGETTAXAMOUNT,   @JobDSCRIPTN, @DEPRTMNT, @DeptDSCRIPTN, @PosStartDate, @PosEndDate  WHILE @@FETCH_STATUS = 0  BEGIN  if @v_HistProj = 1 or @v_HistProj = 0  Begin     Declare CheckRcd Cursor For  Select   a.PYADNMBR,  a.AUCTRLCD,  min(a.EMPLOYID),  min(rtrim(LASTNAME) + ', ' + rtrim(FRSTNAME) + ' ' + rtrim(MIDLNAME)),  sum(FCASWPR + FICSTPTX) as 'SS Tax',   Sum(FICAMWPR + FICMTPTX) as 'Med Tax',   sum(FICASSWP + FICASS_TipsPay_Run) as 'SS Wage',  sum(FICAMWGP + FICAMed_TipsPay_Run) as 'Med Wage',  min(a.POSTEDDT)  From UPR30100 a   inner join (Select PYADNMBR, AUCTRLCD From UPR30300 Where PYRLRTYP = 1 and JOBTITLE = @JobTitle   Group By PYADNMBR, AUCTRLCD) f on a.PYADNMBR = f.PYADNMBR and a.AUCTRLCD = f.AUCTRLCD   inner join UPR00100 b On a.EMPLOYID = b.EMPLOYID  Where VOIDED = 0   Group By a.PYADNMBR, a.AUCTRLCD   Open CheckRcd  Fetch Next From CheckRcd  Into @PYADNMBR, @AUCTRLCD, @EmployID, @EmployeeName, @SSTaxTotalOnCheck, @MedTaxTotalOnCheck,   @SSWageTotalOnCheck, @MedWageTotalOnCheck, @PostedDate  WHILE @@FETCH_STATUS = 0  BEGIN   Insert Into @BudgetActual (  PlanCode,  PlanDesc,  Position,  PosDescription,  Department,  DepDescription,  StartDate,  EndDate,  SeatNumber,  SeatDesc,  EmployeeID,  EmployeeName,  Date,  WageAmount,  BenefitsAmount,  TaxAmount)  Select  @v_Plan,   @PlanDSCRIPTN,   @JobTitle,   @JobDSCRIPTN,   @DEPRTMNT,   @DeptDSCRIPTN,   @PosStartDate,   @PosEndDate,   0,   '',   @EmployID,   @EmployeeName,   @PostedDate,   PayPos,   BenefitPos,   SSTaxPos + MedTaxPos  From dbo.PC_ProcessCheckAmounts(  @PYADNMBR,   @AUCTRLCD,   @EmployID,   @SSTaxTotalOnCheck,   @MedTaxTotalOnCheck,   @SSWageTotalOnCheck,   @MedWageTotalOnCheck,  @JobTitle)   Fetch NEXT From CheckRcd  Into @PYADNMBR, @AUCTRLCD, @EmployID, @EmployeeName, @SSTaxTotalOnCheck, @MedTaxTotalOnCheck,   @SSWageTotalOnCheck, @MedWageTotalOnCheck, @PostedDate  End  Close CheckRcd  Deallocate CheckRcd  End  if @v_HistProj = 2 or @v_HistProj = 0  Begin   Select   @PostedDate = dateadd(day, 1, Max(isnull(POSTEDDT, '1/1/1900')))  From UPR30100 a   inner join (Select PYADNMBR, AUCTRLCD From UPR30300 Where PYRLRTYP = 1 and JOBTITLE = @JobTitle   Group By PYADNMBR, AUCTRLCD) f on a.PYADNMBR = f.PYADNMBR and a.AUCTRLCD = f.AUCTRLCD   Where VOIDED = 0   Set @PostedDate = isnull(@PostedDate, '1/1/1900')   Declare SeatDetails cursor For  Select a.JOBTITLE,  f.DSCRIPTN,  f.DEPRTMNT,  e.DSCRIPTN,  a.SEAT,  b.DSCRIPTN,   a.EMPLOYID,  (rtrim(c.LASTNAME) + ', ' + rtrim(c.FRSTNAME) + ' ' + rtrim(c.MIDLNAME)),  a.PAYRATEBASEDON,  a.PAYRATE,  a.ENDDATE,  Case  When @PostedDate < a.STRTDATE Then  a.STRTDATE  Else  @PostedDate  End,  c.STRTDATE,  c.BENADJDATE,  isnull(d.SENIORITYDATE_I, '1/1/1900'),  a.INHERITSTATUS,  b.WKHRPRYR   From PC40305 a  Inner Join PC40304 b ON a.PLANCODE = b.PLANCODE and a.JOBTITLE = b.JOBTITLE   and a.TEMPSEAT = b.TEMPSEAT and a.SEAT = b.SEAT  Inner Join PC40301 f On a.PLANCODE = f.PLANCODE and a.JOBTITLE = f.JOBTITLE   Inner Join UPR40300 e On e.DEPRTMNT = f.DEPRTMNT  Inner Join UPR00100 c On a.EMPLOYID = c.EMPLOYID  left Outer Join HR2UNI01 d ON d.EMPID_I = a.EMPLOYID  Where a.PLANCODE = @v_Plan and a.JOBTITLE = @JobTitle  and (ASSIGNMENTSTATUS = 1 or ASSIGNMENTSTATUS = 3 or ASSIGNMENTSTATUS = 6)  and a.EXPIREDCB = 0 and b.INACTIVE = 0  Open SeatDetails  Fetch Next From SeatDetails  Into @JobTitle, @JobDSCRIPTN, @DEPRTMNT, @DeptDSCRIPTN, @Seat, @SeatDesc, @EmployID,   @EmployeeName, @PAYRATEBASEDON, @PAYRATESeat, @EndDate, @StartDate, @HireDate, @AdjHireDate,   @SENIORITYDATE_I, @INHERITSTATUS, @WKHRPRYR  WHILE @@FETCH_STATUS = 0  BEGIN  Set @TaxPos = 0  Set @BenefitPos = 0   Set @PayPos = 0  Set @PAYRATE = 0  Set @DaysRemaining = 0     Select @PAYRATE = Sum(  dbo.PC_GetPositionPayRate(@v_Plan,   @JobTitle,  @PAYRATEBASEDON,   a.PAYRTAMT,  @PAYRATESeat,  a.PYSTPTBLID,  a.Base_Step_Increased_On,  a.Step,  a.PayCode,  b.PAYTYPE,  Case   When @INHERITSTATUS = 1 Then   isnull(c.PAYPEROD, 0)  Else  b.PAYPEROD  End,  Case   When @INHERITSTATUS = 1 Then   isnull(c.PAYUNPER, 0)  Else  b.PAYUNPER  End,  @EmployID,  @WKHRPRYR,  @INHERITSTATUS,  @HireDate,  @AdjHireDate,  @SENIORITYDATE_I,  a.Step_Effective_Date,  @CurrentDate,  a.PRIMARYPOSSEAT))   From PC40302 a  Inner Join UPR40600 b on b.PAYRCORD = a.PayCode  Left Outer Join UPR00400 c On c.EMPLOYID = @EmployID And c.PAYRCORD = a.PayCode  Where a.PLANCODE = @v_Plan and a.JOBTITLE = @JobTitle and a.BUDGETED = 1  Group By a.PLANCODE, a.JOBTITLE   if @StartDate = '1/1/1900' or @StartDate is null  Select @StartDate = isnull(min(STRTDATE), '1/1/1900') From PC40306 Where PLANCODE = @v_Plan and JOBTITLE = @JobTitle   if @EndDate = '1/1/1900'  Begin  Select @EndDate = isnull(Max(ENDDATE), '1/1/1900') From PC40306 Where PLANCODE = @v_Plan and JOBTITLE = @JobTitle  End  if @EndDate < @StartDate  Set @DaysRemaining = 0  Else  Set @DaysRemaining = DateDiff(day, @StartDate, @EndDate)   if DATEPART(d, DATEADD(d, 1, (CONVERT(VARCHAR(4), year(@EndDate)) + '0228'))) = 29   Set @PayPos = (@PAYRATE / 366)  Else  Set @PayPos = (@PAYRATE / 365)   Set @BenefitPos = (@PayPos * @BUGETBENPERCENT)   Set @TaxPos = (@PayPos * @BUDGETTAXPERCENT)  if @DaysRemaining > 0  Begin  Set @CurrentDate = @StartDate  Set @DayPayPos = @PayPos  Set @DayBenefitPos = @BenefitPos + @BUDGETBENAMOUNT  Set @DayTaxPos = @TaxPos + @BUDGETTAXAMOUNT  Set @Counter = @DaysRemaining  While @Counter > 0   Begin   Insert Into @BudgetActual (  PlanCode,  PlanDesc,  Position,  PosDescription,  Department,  DepDescription,  StartDate,  EndDate,  SeatNumber,  SeatDesc,  EmployeeID,  EmployeeName,  Date,  WageAmount,  BenefitsAmount,  TaxAmount)  Select  @v_Plan,   @PlanDSCRIPTN,   @JobTitle,   @JobDSCRIPTN,   @DEPRTMNT,   @DeptDSCRIPTN,   @StartDate,   @EndDate,   @Seat,   @SeatDesc,   @EmployID,   @EmployeeName,   @CurrentDate,   @DayPayPos,   @DayBenefitPos,   @DayTaxPos    Set @CurrentDate = dateadd(d, 1, @CurrentDate)  Set @Counter = @Counter - 1  End  End  Fetch Next From SeatDetails  Into @JobTitle, @JobDSCRIPTN, @DEPRTMNT, @DeptDSCRIPTN, @Seat, @SeatDesc, @EmployID, @EmployeeName, @PAYRATEBASEDON, @PAYRATESeat, @EndDate, @StartDate, @HireDate, @AdjHireDate,   @SENIORITYDATE_I, @INHERITSTATUS, @WKHRPRYR  END  Close SeatDetails  Deallocate SeatDetails  Fetch Next From Positions  Into @JobTitle, @BUGETBENPERCENT, @BUDGETTAXPERCENT, @BUDGETBENAMOUNT, @BUDGETTAXAMOUNT,   @JobDSCRIPTN, @DEPRTMNT, @DeptDSCRIPTN, @PosStartDate, @PosEndDate  End  End   Close Positions  Deallocate Positions   Return End    
GO
GRANT SELECT ON  [dbo].[PC_EmployerCostDaily] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[mcFuncCalculateAmount]  (  @I_sRateCalcMethod smallint = NULL,   @I_sViewMode smallint = NULL,   @I_nExchangeRate numeric(15,7) = NULL,  @I_nDenomExchangeRate numeric(15,7) = NULL,  @I_sMCTrxState smallint = NULL,  @I_sDecimalPlaces smallint = NULL,  @I_mAmount numeric(19,5) = NULL  )  RETURNS numeric(19,5) AS BEGIN  declare  @iStatus int,  @O_mCalcAmount numeric(22,5),  @O_iErrorState int,  @TRUE            tinyint,   @FALSE     tinyint,   @sFUNCTIONAL smallint,  @sORIGINATING smallint,  @sMULTIPLY smallint,  @sDIVIDE smallint,  @sMCNOEURO smallint,  @tEuroFirst   tinyint,  @sEuroRateCalcMethod smallint,  @sMCDENOM_TO_NONDENOM smallint,  @tEuroEnabled tinyint,  @tFunctionalEnabled tinyint  select  @O_mCalcAmount  = 0.0,  @O_iErrorState   = 0  if  @I_sRateCalcMethod is NULL or  @I_sViewMode is NULL or  @I_nExchangeRate is NULL or  @I_nDenomExchangeRate is NULL or  @I_sMCTrxState is NULL or  @I_sDecimalPlaces is NULL or  @I_mAmount is NULL begin  select @O_iErrorState = 21043  return(@O_mCalcAmount);  end   select @O_mCalcAmount = dbo.mcFuncCalculateAmountExtended(@I_sRateCalcMethod,  @I_sViewMode,  @I_nExchangeRate,  @I_nDenomExchangeRate,  @I_sMCTrxState,  @I_sDecimalPlaces,  @I_mAmount)  select @O_mCalcAmount =  case @I_sDecimalPlaces  when 0 then   case when @O_mCalcAmount>99999999999999 then 99999999999999   when @O_mCalcAmount<-99999999999999 then -99999999999999   else @O_mCalcAmount   end  when 1 then   case when @O_mCalcAmount>99999999999999.9 then 99999999999999.9   when @O_mCalcAmount<-99999999999999.9 then -99999999999999.9   else @O_mCalcAmount   end  when 2 then   case when @O_mCalcAmount>99999999999999.99 then 99999999999999.99   when @O_mCalcAmount<-99999999999999.99 then -99999999999999.99   else @O_mCalcAmount   end  when 3 then   case when @O_mCalcAmount>99999999999999.999 then 99999999999999.999   when @O_mCalcAmount<-99999999999999.999 then -99999999999999.999   else @O_mCalcAmount   end  when 4 then   case when @O_mCalcAmount>99999999999999.9999 then 99999999999999.9999   when @O_mCalcAmount<-99999999999999.9999 then -99999999999999.9999   else @O_mCalcAmount   end  when 5 then   case when @O_mCalcAmount>99999999999999.99999 then 99999999999999.99999   when @O_mCalcAmount<-99999999999999.99999 then -99999999999999.99999   else @O_mCalcAmount   end  else  case when @O_mCalcAmount>99999999999999.99999 then 99999999999999.99999   when @O_mCalcAmount<-99999999999999.99999 then -99999999999999.99999   else @O_mCalcAmount   end  end    RETURN(@O_mCalcAmount) END   
GO
GRANT EXECUTE ON  [dbo].[mcFuncCalculateAmount] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 Create Function [dbo].[PC_ProcessCheckAmounts] (  @v_PYADNMBR int,   @v_AUCTRLCD char(13),   @v_EmployID char(15),   @v_SSTaxTotalOnCheck numeric(19,5),   @v_MedTaxTotalOnCheck numeric(19,5),   @v_SSWageTotalOnCheck numeric(19,5),   @v_MedWageTotalOnCheck numeric(19,5),  @v_JobTitle char(6)  ) Returns @PosAmounts table (  SSTaxPos numeric(19,5),  MedTaxPos numeric(19,5),  BenefitPos numeric(19,5),  PayPos numeric(19,5))  As   Begin  Declare  @SSTaxPos numeric(19,5),  @MedTaxPos numeric(19,5),  @BenefitPos numeric(19,5),  @PayPos numeric(19,5),  @SSTaxRate numeric(19,5),  @MedTaxRate numeric(19,5),  @TrnSSAmt numeric(19,5),  @TrnMedAmt numeric(19,5),  @Benefit char(6),  @BORCDTYP int,  @TotalWageForBasedOn numeric(19,5),  @PosWageForBasedOn numeric(19,5),  @TotalWageForBasedOnTaxable numeric(19,5),  @PosWageForBasedOnTaxable numeric(19,5),  @DEDUCTION char(7),  @BSDORCDS char(7),  @BSDORCDS2 int,  @BenefitPosAmt numeric(19,5),  @PosWageSSTaxable numeric(19,5),  @PosWageMedTaxable numeric(19,5),  @TrnFICAAmt numeric(19,5);   if @v_SSWageTotalOnCheck <> 0   Set @SSTaxRate = @v_SSTaxTotalOnCheck / @v_SSWageTotalOnCheck  Else  Set @SSTaxRate = 0  if @v_MedWageTotalOnCheck <> 0   Set @MedTaxRate = @v_MedTaxTotalOnCheck / @v_MedWageTotalOnCheck  Else  Set @MedTaxRate = 0   Set @SSTaxPos = 0  Set @MedTaxPos = 0  Set @BenefitPos = 0  Set @PayPos = 0  Set @TrnSSAmt = 0  Set @TrnMedAmt = 0  Set @Benefit = ''  Set @BORCDTYP = 0  Set @TotalWageForBasedOn = 0  Set @PosWageForBasedOn = 0  Set @TotalWageForBasedOnTaxable = 0  Set @PosWageForBasedOnTaxable = 0  Set @DEDUCTION = ''  Set @BSDORCDS = ''  Set @BSDORCDS2 = 0  Set @BenefitPosAmt = 0  Set @PosWageSSTaxable = 0  Set @PosWageMedTaxable = 0   Select   @PayPos = @PayPos + sum(  Case  When a.JOBTITLE = @v_JobTitle Then  a.UPRTRXAM   Else  0  End),  @PosWageSSTaxable = sum(  Case  When d.SBJTSSEC = 1 and a.JOBTITLE = @v_JobTitle Then  a.UPRTRXAM   Else  0  End),   @PosWageMedTaxable = sum(  Case  When d.SBJTMCAR = 1 and a.JOBTITLE = @v_JobTitle Then  a.UPRTRXAM   Else  0  End)   From UPR30300 a  inner join UPR00400 d On d.EMPLOYID = @v_EmployID and d.PAYRCORD = a.PAYROLCD   where a.PYRLRTYP = 1 and a.PYADNMBR = @v_PYADNMBR and a.AUCTRLCD = @v_AUCTRLCD  Group By a.PYADNMBR, a.AUCTRLCD   Set @SSTaxPos = @SSTaxPos + (@PosWageSSTaxable * @SSTaxRate)  Set @MedTaxPos = @MedTaxPos + (@PosWageMedTaxable * @MedTaxRate)   Declare CheckTrnsBen Cursor For  Select   a.PAYROLCD,  Sum(UPRTRXAM),  Case  When min(SBJTSSEC) = 1 Then  Sum(UPRTRXAM)   Else  0  End,   Case  When min(SBJTMCAR) = 1 Then  Sum(UPRTRXAM)   Else  0  End,  min(d.BORCDTYP),  min(BSDORCDS)   From UPR30300 a  inner join UPR00600 d On d.EMPLOYID = @v_EmployID and d.BENEFIT = a.PAYROLCD   where a.PYRLRTYP = 3 and a.PYADNMBR = @v_PYADNMBR and a.AUCTRLCD = @v_AUCTRLCD  Group By a.PYADNMBR, a.AUCTRLCD, a.PAYROLCD  Open CheckTrnsBen  Fetch Next From CheckTrnsBen  Into @Benefit, @BenefitPosAmt, @TrnSSAmt, @TrnMedAmt, @BORCDTYP, @BSDORCDS  WHILE @@FETCH_STATUS = 0  BEGIN  Set @TotalWageForBasedOn = 0  Set @PosWageForBasedOn = 0   if @BORCDTYP = 1   Begin  Select   @TotalWageForBasedOn = Sum(UPRTRXAM),  @PosWageForBasedOn = Sum(  Case  When a.JOBTITLE = @v_JobTitle Then  UPRTRXAM  Else  0  End)  From UPR30300 a   inner join UPR00400 b On b.EMPLOYID = a.EMPLOYID and a.PAYROLCD = b.PAYRCORD  Where  a.PYRLRTYP = 1 and a.PYADNMBR = @v_PYADNMBR and a.AUCTRLCD = @v_AUCTRLCD   and (@BSDORCDS = 0 or a.PAYROLCD in (Select BSDONCDE from UPR00601 d Where d.EMPLOYID = @v_EmployID and d.BENEFIT = @Benefit))   End   Else    Begin    Select @DEDUCTION = a.BSDONCDE,  @BSDORCDS2 = b.BSDORCDS  From UPR00601 a   inner join UPR00500 b On b.EMPLOYID = a.EMPLOYID and a.BSDONCDE = b.DEDUCTON   Where b.EMPLOYID = @v_EmployID and a.BENEFIT = @Benefit  Select   @TotalWageForBasedOn = Sum(UPRTRXAM),  @PosWageForBasedOn = Sum(  Case  When a.JOBTITLE = @v_JobTitle Then  UPRTRXAM  Else  0  End)  From UPR30300 a   inner join UPR00400 b On b.EMPLOYID = a.EMPLOYID and a.PAYROLCD = b.PAYRCORD  Where  a.PYRLRTYP = 1 and a.PYADNMBR = @v_PYADNMBR and a.AUCTRLCD = @v_AUCTRLCD   and (@BSDORCDS2 = 0 or a.PAYROLCD in (Select BSDONCDE from UPR00501 d Where d.EMPLOYID = @v_EmployID and d.DEDUCTON = @DEDUCTION))  End    if @TotalWageForBasedOn <> 0  Set @SSTaxPos = @SSTaxPos + (@SSTaxRate * @TrnSSAmt * @PosWageForBasedOn / @TotalWageForBasedOn)   if @TotalWageForBasedOn <> 0  Set @MedTaxPos = @MedTaxPos + (@MedTaxRate * @TrnMedAmt * @PosWageForBasedOn / @TotalWageForBasedOn)   if @TotalWageForBasedOn <> 0  set @BenefitPos = @BenefitPos + (@BenefitPosAmt * (@PosWageForBasedOn / @TotalWageForBasedOn))  Fetch Next From CheckTrnsBen  Into @Benefit, @BenefitPosAmt, @TrnSSAmt, @TrnMedAmt, @BORCDTYP, @BSDORCDS   End  Close CheckTrnsBen  Deallocate CheckTrnsBen   Set @TrnFICAAmt = 0  Set @Benefit = ''  Set @BORCDTYP = 0  Set @TotalWageForBasedOn = 0  Set @PosWageForBasedOn = 0  Set @TotalWageForBasedOnTaxable = 0  Set @PosWageForBasedOnTaxable = 0  Set @DEDUCTION = ''  Set @BSDORCDS = ''  Set @BSDORCDS2 = 0   Declare CheckTrnsDed Cursor For  Select   a.PAYROLCD,  Sum(UPRTRXAM),  Sum(  Case  When d.SHFRFICA = 1 Then  UPRTRXAM   Else  0  End),  min(BSDORCDS)   From UPR30300 a  inner join UPR00500 d On d.EMPLOYID = @v_EmployID and d.DEDUCTON = a.PAYROLCD   where a.PYRLRTYP = 2 and a.PYADNMBR = @v_PYADNMBR and a.AUCTRLCD = @v_AUCTRLCD  Group By a.PYADNMBR, a.AUCTRLCD, a.PAYROLCD  Open CheckTrnsDed  Fetch Next From CheckTrnsDed  Into @DEDUCTION, @BenefitPosAmt, @TrnFICAAmt, @BSDORCDS  WHILE @@FETCH_STATUS = 0  BEGIN   Set @TotalWageForBasedOn = 0  Set @PosWageForBasedOn = 0   Select   @TotalWageForBasedOn = Sum(UPRTRXAM),  @PosWageForBasedOn = Sum(  Case  When a.JOBTITLE = @v_JobTitle Then  UPRTRXAM  Else  0  End)  From UPR30300 a   inner join UPR00400 b On b.EMPLOYID = a.EMPLOYID and a.PAYROLCD = b.PAYRCORD  Where  a.PYRLRTYP = 1 and a.PYADNMBR = @v_PYADNMBR and a.AUCTRLCD = @v_AUCTRLCD   and (@BSDORCDS = 0 or a.PAYROLCD in (Select BSDONCDE from UPR00501 d Where d.EMPLOYID = @v_EmployID and d.DEDUCTON = @DEDUCTION))   if @v_SSWageTotalOnCheck <> 0 and @TotalWageForBasedOn <> 0  Set @SSTaxPos = @SSTaxPos - (@SSTaxRate * @TrnFICAAmt * @PosWageForBasedOn / @TotalWageForBasedOn)   if @v_MedWageTotalOnCheck <> 0 and @TotalWageForBasedOn <> 0  Set @MedTaxPos = @MedTaxPos - (@MedTaxRate * @TrnFICAAmt * @PosWageForBasedOn / @TotalWageForBasedOn)   Fetch Next From CheckTrnsDed  Into @DEDUCTION, @BenefitPosAmt, @TrnFICAAmt, @BSDORCDS  End  Close CheckTrnsDed  Deallocate CheckTrnsDed  Insert Into @PosAmounts (  SSTaxPos,  MedTaxPos,  BenefitPos,  PayPos)  Select   @SSTaxPos,  @MedTaxPos,  @BenefitPos,  @PayPos  return End   
GO
GRANT SELECT ON  [dbo].[PC_ProcessCheckAmounts] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 create  function [dbo].[aagGetActualBalance]() returns @ACTUALTABLE table (YEAR1 int, PERIODDT DATETIME,  aaFiscalPeriod int, PERDBLNC NUMERIC(19,5), Actual_Amount numeric(19,5), aaLvlCodeString nvarchar(51), DEX_ROW_ID            int IDENTITY(1,1) ) as begin  declare @aaBudgetID int,  @ACTINDX int,  @aaAmtQty int,  @aaActType int,  @aaRange int,  @NETCHNG int,  @aaCodeSequence int,  @aaTrxDimCodeID int,  @aaNodeCode int,  @aaBudgetTreeID int,  @YEAR1 int,  @YEARFR int,  @YEARTO int,  @YEAR2 int,  @DATEFR datetime,  @DATETO   datetime,  @aaLvlCodeString nvarchar(51),  @USERID   CHAR(15),  @WINTYPE   SMALLINT,  @CMPANYID INTEGER,  @ReportingLedgerNames VARCHAR(50),  @pos SMALLINT,  @i SMALLINT  DECLARE @temp TABLE ([tempLedgerid] SMALLINT)   SELECT @USERID  = SYSTEM_USER  SELECT @WINTYPE = 2   SELECT @CMPANYID = dbo.aagGetCompanyID()   select @ACTINDX = ACTINDX ,@aaRange=aaRange,@NETCHNG=NETCHNG,@aaAmtQty = aaAmtQty, @aaCodeSequence = aaCodeSequence,@aaBudgetID=aaBudgetID,@aaNodeCode=aaNodeCode,@ReportingLedgerNames=ReportingLedgerNames from AAG00906  WHERE USERID = @USERID AND WINTYPE = @WINTYPE AND CMPANYID = @CMPANYID   IF (SELECT Allow_Reporting_Ledgers FROM GL40000) = 0   BEGIN   INSERT INTO @temp values (1)  END  ELSE  BEGIN  IF @ReportingLedgerNames = NULL or LTRIM(RTRIM(@ReportingLedgerNames))=''  BEGIN   INSERT INTO @temp values (0)   END   ELSE  BEGIN  SET @pos = 1  SET @i=0  WHILE @pos <= LEN(@ReportingLedgerNames)  BEGIN  INSERT INTO @temp VALUES (SUBSTRING(@ReportingLedgerNames,@pos,1))  SET @pos=@pos+2  SET @i=@i+1  END  END  END  select @aaBudgetTreeID = aaBudgetTreeID , @YEAR1 = AAG00903.YEAR1  from AAG00903 where aaBudgetID = @aaBudgetID   if exists(select 1 from AAG00903 where aaBudgetID = @aaBudgetID and Based_On = 1)  begin  select @YEARFR=YEAR(FSTFSCDY)  from SY40101 where SY40101.YEAR1 = @YEAR1  select @YEARTO=YEAR(LSTFSCDY)  from SY40101 where SY40101.YEAR1 = @YEAR1   select @DATEFR=FSTFSCDY  from SY40101 where SY40101.YEAR1 = @YEAR1  select @DATETO=LSTFSCDY  from SY40101 where SY40101.YEAR1 = @YEAR1  end  else  begin  select @YEARFR=YEAR(From_Date)  from AAG00903 where aaBudgetID = @aaBudgetID  select @YEARTO=YEAR(TODATE)  from AAG00903 where aaBudgetID = @aaBudgetID   select @DATEFR=From_Date  from AAG00903 where aaBudgetID = @aaBudgetID  select @DATETO=TODATE  from AAG00903 where aaBudgetID = @aaBudgetID  end   IF @aaNodeCode=1  BEGIN  select @aaLvlCodeString = aaLvlCodeString from AAG00902  where aaBudgetTreeID = @aaBudgetTreeID and aaCodeSequence = @aaCodeSequence  END  ELSE  BEGIN  select @aaLvlCodeString = aaTrxDimCodeID  from AAG00902 where aaCodeSequence=@aaCodeSequence and aaBudgetTreeID=@aaBudgetTreeID  END   IF @ACTINDX > 0 AND @aaRange=0  BEGIN  IF @aaAmtQty = 0  BEGIN   insert into @ACTUALTABLE (YEAR1, PERIODDT, aaFiscalPeriod, PERDBLNC, Actual_Amount, aaLvlCodeString)  select aaCalYear,  PERIODDT,  aaFiscalPeriod,  PERDBLNC,  Actual_Amount,  aaLvlCodeString   from   (  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,  @aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG30000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1   and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG30001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG30002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID and   dist.ACTINDX =@ACTINDX  JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  dist.ACTINDX = @ACTINDX  where exists (select 1 from AAG30003 with(nolock) where hdr.aaGLHdrID = AAG30003.aaGLHdrID)   and acct.ACCTTYPE = 1 and  acct.PSTNGTYP IN(1,0) and  FORIGIN = 1 AND   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString   group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  UNION ALL  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,  @aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG40000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG40001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG40002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID and   dist.ACTINDX =@ACTINDX  JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  dist.ACTINDX = @ACTINDX  where exists (select 1 from AAG40003 with(nolock) where hdr.aaGLHdrID = AAG40003.aaGLHdrID)   and acct.ACCTTYPE = 1 and  acct.PSTNGTYP IN(1,0) and  FORIGIN = 1 AND   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString   group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  ) deriv  END   IF @aaAmtQty = 1  BEGIN   insert into @ACTUALTABLE (YEAR1, PERIODDT, aaFiscalPeriod, PERDBLNC, Actual_Amount, aaLvlCodeString)  select aaCalYear,  PERIODDT,  aaFiscalPeriod,  PERDBLNC,  Actual_Amount,  aaLvlCodeString   from   (  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG30000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG30001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG30002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID and   dist.ACTINDX =@ACTINDX  JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  FORIGIN = 1  where exists (select 1 from AAG30003 with(nolock) where hdr.aaGLHdrID = AAG30003.aaGLHdrID) and   acct.ACCTTYPE = 2 and  dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  union all   select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG40000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG40001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG40002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID and   dist.ACTINDX =@ACTINDX  JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  FORIGIN = 1  where exists (select 1 from AAG40003 with(nolock) where hdr.aaGLHdrID = AAG40003.aaGLHdrID) and   acct.ACCTTYPE = 2 and  dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  ) deriv  END  END   IF @aaRange=1  BEGIN  IF @aaAmtQty = 0  BEGIN  insert into @ACTUALTABLE (YEAR1, PERIODDT, aaFiscalPeriod, PERDBLNC, Actual_Amount, aaLvlCodeString)  select aaCalYear,  PERIODDT,  aaFiscalPeriod,  PERDBLNC,  Actual_Amount,  aaLvlCodeString   from   (  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG30000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG30001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG30002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  FORIGIN = 1  where  exists (select 1 from AAG30003 with(nolock) where hdr.aaGLHdrID = AAG30003.aaGLHdrID) and  acct.ACCTTYPE = 1 and  acct.PSTNGTYP IN(1,0) and   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  union all  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG40000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG40001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG40002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  FORIGIN = 1  where  exists (select 1 from AAG40003 with(nolock) where hdr.aaGLHdrID = AAG40003.aaGLHdrID) and  acct.ACCTTYPE = 1 and  acct.PSTNGTYP IN(1,0) and   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  ) deriv  END  IF @aaAmtQty = 1  BEGIN   insert into @ACTUALTABLE (YEAR1, PERIODDT, aaFiscalPeriod, PERDBLNC, Actual_Amount, aaLvlCodeString)  select aaCalYear,  PERIODDT,  aaFiscalPeriod,  PERDBLNC,  Actual_Amount,  aaLvlCodeString   from   (  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG30000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG30001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG30002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND   FORIGIN = 1  where exists (select 1 from AAG30003 with(nolock) where hdr.aaGLHdrID = AAG30003.aaGLHdrID) and   acct.ACCTTYPE = 2 and  dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  union all  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG40000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG40001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG40002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND   FORIGIN = 1  where exists (select 1 from AAG40003 with(nolock) where hdr.aaGLHdrID = AAG40003.aaGLHdrID) and   acct.ACCTTYPE = 2 and  dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  ) deriv  END   END   IF @ACTINDX <= 0 AND @aaRange=0  BEGIN  IF @aaCodeSequence>1  BEGIN  IF @aaAmtQty = 0  BEGIN  insert into @ACTUALTABLE (YEAR1, PERIODDT, aaFiscalPeriod, PERDBLNC, Actual_Amount, aaLvlCodeString)  select aaCalYear,  PERIODDT,  aaFiscalPeriod,  PERDBLNC,  Actual_Amount,  aaLvlCodeString   from   (  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG30000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG30001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG30002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID and  FORIGIN = 1  where exists (select 1 from AAG30003 with(nolock) where hdr.aaGLHdrID = AAG30003.aaGLHdrID) and   acct.ACCTTYPE = 1 and  acct.PSTNGTYP IN(1,0) and   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  union all  select date.aaCalYear,  PeriodSetup.PERIODDT,  date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG40000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG40001 with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG40002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID and  FORIGIN = 1  where exists (select 1 from AAG40003 with(nolock) where hdr.aaGLHdrID = AAG40003.aaGLHdrID) and   acct.ACCTTYPE = 1 and  acct.PSTNGTYP IN(1,0) and   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  ) deriv  END  IF @aaAmtQty = 1  BEGIN  insert into @ACTUALTABLE (YEAR1, PERIODDT, aaFiscalPeriod, PERDBLNC, Actual_Amount, aaLvlCodeString)  select aaCalYear,  PERIODDT,  aaFiscalPeriod,  PERDBLNC,  Actual_Amount,  aaLvlCodeString   from   (  select date.aaCalYear,  PeriodSetup.PERIODDT,   date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG30000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG30001  with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG30002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  FORIGIN = 1  where exists (select 1 from AAG30003 with(nolock) where hdr.aaGLHdrID = AAG30003.aaGLHdrID) and   acct.ACCTTYPE = 2  and   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  union all  select date.aaCalYear,  PeriodSetup.PERIODDT,   date.aaFiscalPeriod,   0 as PERDBLNC,  isnull(sum(assign.DEBITAMT - assign.CRDTAMNT), 0) as Actual_Amount,@aaLvlCodeString as aaLvlCodeString  from (select aaGLHdrID, GLPOSTDT from AAG40000 with(nolock) where Ledger_ID in (select tempLedgerid from @temp)) hdr join AAG00500 date with(nolock) on hdr.GLPOSTDT = date.DATE1  and (date.aaCalYear between @YEARFR and @YEARTO) and   (date.DATE1 between @DATEFR and @DATETO)   join (select aaGLHdrID, aaGLDistID, ACTINDX from AAG40001  with(nolock)) dist on hdr.aaGLHdrID = dist.aaGLHdrID  join GL00100 acct with(nolock) on dist.ACTINDX = acct.ACTINDX   join (select aaGLHdrID, aaGLDistID, aaGLAssignID, DEBITAMT, CRDTAMNT from AAG40002 with(nolock)) assign on dist.aaGLHdrID = assign.aaGLHdrID   and  dist.aaGLDistID = assign.aaGLDistID   JOIN SY40100 PeriodSetup with(nolock) ON date.aaFiscalYear = PeriodSetup.YEAR1 AND  date.aaFiscalPeriod = PERIODID AND  FORIGIN = 1  where exists (select 1 from AAG40003 with(nolock) where hdr.aaGLHdrID = AAG40003.aaGLHdrID) and   acct.ACCTTYPE = 2  and   dbo.aagGetActualCodeString(@aaBudgetTreeID,assign.aaGLHdrID, assign.aaGLDistID, assign.aaGLAssignID,@aaCodeSequence) =@aaLvlCodeString  group by date.aaCalYear,PeriodSetup.PERIODDT,date.aaFiscalPeriod  ) deriv  END  END  END  return END    
GO
GRANT SELECT ON  [dbo].[aagGetActualBalance] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[GetKPIDates] (  @UserDate datetime = NULL,  @CalendarType varchar(10) = 'Fiscal',  @TimeUnit varchar(10) = 'Period' ) RETURNS @Dates TABLE (  SDCurrent datetime,  EDCurrent datetime,  SDPrevious datetime,  EDPrevious datetime,  SDLastYear datetime,  EDLastYear datetime ) AS  BEGIN  DECLARE @SDCurrent datetime DECLARE @EDCurrent datetime DECLARE @SDPrevious datetime DECLARE @EDPrevious datetime DECLARE @SDLastYear datetime DECLARE @EDLastYear datetime DECLARE @CurrPeriodElapsed int DECLARE @CurrentPeriodId int DECLARE @DATEMAX datetime DECLARE @CurrentYEAR1 int DECLARE @PreviousYEAR1 int DECLARE @FirstDayCurrentFY datetime  SET @DATEMAX = dbo.GetDefaultMaxDate() SET @SDCurrent = @DATEMAX SET @EDCurrent = @DATEMAX SET @SDPrevious = @DATEMAX SET @EDPrevious = @DATEMAX SET @SDLastYear = @DATEMAX SET @EDLastYear = @DATEMAX SET @CurrentPeriodId = -1 SET @CurrentYEAR1 = -1 SET @PreviousYEAR1 = -1 SET @FirstDayCurrentFY = @DATEMAX  SELECT @UserDate = dbo.GetDateStripTime(@UserDate)   IF @CalendarType = 'Fiscal' BEGIN   SELECT   @FirstDayCurrentFY = FSTFSCDY,   @CurrentYEAR1 = YEAR1   FROM   SY40101   WHERE   @UserDate between FSTFSCDY and LSTFSCDY   SELECT   @PreviousYEAR1 = YEAR1   FROM   SY40101   WHERE   DATEADD(dd, -1, @FirstDayCurrentFY) between FSTFSCDY and LSTFSCDY   IF @TimeUnit = 'Period'  BEGIN  IF EXISTS(SELECT PERIODDT FROM SY40100 WHERE @UserDate between PERIODDT and PERDENDT and PERIODID <> 0 AND FORIGIN = 1)  BEGIN  SELECT  @SDCurrent = PERIODDT,  @EDCurrent = PERDENDT,  @CurrentPeriodId = PERIODID  FROM  SY40100  WHERE  @UserDate between PERIODDT and PERDENDT AND   PERIODID <> 0 AND   FORIGIN = 1  END   IF EXISTS(SELECT PERIODDT FROM SY40100 WHERE DATEADD(dd, -1, @SDCurrent) between PERIODDT and PERDENDT and PERIODID <> 0 AND FORIGIN = 1)  BEGIN  SELECT  @SDPrevious = PERIODDT,  @EDPrevious = PERDENDT  FROM  SY40100  WHERE  DATEADD(dd, -1, @SDCurrent) between PERIODDT and PERDENDT and PERIODID <> 0 and FORIGIN = 1  END   IF EXISTS(SELECT PERIODDT FROM SY40100 WHERE YEAR1 = @PreviousYEAR1 and PERIODID = @CurrentPeriodId AND FORIGIN = 1)  BEGIN  SELECT  @SDLastYear = PERIODDT,  @EDLastYear = PERDENDT  FROM  SY40100  WHERE  YEAR1 = @PreviousYEAR1 and PERIODID = @CurrentPeriodId and FORIGIN = 1  END  END   IF @TimeUnit = 'Year'  BEGIN  IF EXISTS(SELECT FSTFSCDY FROM SY40101 WHERE @UserDate between FSTFSCDY and LSTFSCDY)  BEGIN  SELECT  @SDCurrent = FSTFSCDY,  @EDCurrent = LSTFSCDY  FROM  SY40101  WHERE  @UserDate between FSTFSCDY and LSTFSCDY  END   IF EXISTS(SELECT FSTFSCDY FROM SY40101 WHERE DATEADD(dd, -1, @SDCurrent) between FSTFSCDY and LSTFSCDY)  BEGIN  SELECT  @SDPrevious = FSTFSCDY,  @EDPrevious = LSTFSCDY  FROM  SY40101  WHERE  DATEADD(dd, -1, @SDCurrent) between FSTFSCDY and LSTFSCDY  END  END END  else begin  select @SDCurrent =  case @TimeUnit  when 'Day' then  @UserDate  when 'Week' then  DATEADD(DAY, -1, DATEADD(wk, DATEDIFF(wk,0,@UserDate), 0))   when 'Month' then  DATEADD(DAY, -DAY(@UserDate)+1, @UserDate)  when 'Quarter' then  CAST(YEAR(@UserDate) AS varchar(4)) +  CASE WHEN MONTH(@UserDate) IN ( 1,  2,  3) THEN '0101'  WHEN MONTH(@UserDate) IN ( 4,  5,  6) THEN '0401'  WHEN MONTH(@UserDate) IN ( 7,  8,  9) THEN '0701'  WHEN MONTH(@UserDate) IN (10, 11, 12) THEN '1001'  END  when 'Year' then  DATEADD(yy, DATEDIFF(yy,0,@UserDate), 0)  end   select @EDCurrent =  case @TimeUnit  when 'Day' then  @UserDate  when 'Week' then  DATEADD(DAY, 6, @SDCurrent)   when 'Month' then  DATEADD(DAY, -1, DATEADD(MONTH, 1, @SDCurrent))  when 'Quarter' then  CAST(YEAR(@UserDate) AS varchar(4)) +  CASE WHEN MONTH(@UserDate) IN ( 1,  2,  3) THEN '0331'  WHEN MONTH(@UserDate) IN ( 4,  5,  6) THEN '0630'  WHEN MONTH(@UserDate) IN ( 7,  8,  9) THEN '0930'  WHEN MONTH(@UserDate) IN (10, 11, 12) THEN '1231'  END  when 'Year' then  DATEADD(DAY, -1, DATEADD(yy, 1, @SDCurrent))  end   select @SDPrevious =  case @TimeUnit  when 'Day' then  DATEADD(DAY, -1, @SDCurrent)  when 'Week' then  DATEADD(WK, -1, @SDCurrent)  when 'Month' then  DATEADD(MONTH, -1, @SDCurrent)  when 'Quarter' then  DATEADD(month, -3, @SDCurrent)  when 'Year' then  DATEADD(YEAR, -1,@SDCurrent)  end   select @EDPrevious =  case @TimeUnit  when 'Day' THEN  @SDPrevious  when 'Week' then  DATEADD(DAY, 6, @SDPrevious)  when 'Month' then  DATEADD(DAY, -DAY(@UserDate), @UserDate)  when 'Quarter' then  DATEADD(DAY, -1, DATEADD(MONTH, 3, @SDPrevious))  when 'Year' then  DATEADD(ms,-3,DATEADD(yy, DATEDIFF(yy,0,@UserDate), 0))  end   select @SDLastYear =  case @TimeUnit  when 'Day' THEN  DATEADD(yy, -1, @SDCurrent)  when 'Week' then  DATEADD(wk, -52, @SDCurrent)  when 'Month' then  DATEADD(YEAR, -1, @SDCurrent)  when 'Quarter' then  DATEADD(YEAR, -1, @SDCurrent)  when 'Year' then  @DATEMAX   end   select @EDLastYear =  case @TimeUnit  when 'Day' THEN  @SDLastYear  when 'Week' then  DATEADD(wk, -51,@EDPrevious)  when 'Month' then  DATEADD(yy, -1, DATEADD(d,-1,DATEADD(mm, DATEDIFF(m,0,@UserDate)+1,0)))  when 'Quarter' then  DATEADD(DAY, -1, DATEADD(MONTH, 3, @SDLastYear))  when 'Year' then  @DATEMAX   end end  IF @UserDate <> @EDCurrent AND @EDCurrent <> @DATEMAX BEGIN  SELECT @CurrPeriodElapsed = DATEDIFF(DAY, @SDCurrent, @UserDate)  SELECT @EDCurrent = @UserDate   IF @EDPrevious <> @DATEMAX  IF DATEADD(DAY, @CurrPeriodElapsed, @SDPrevious) <= @EDPrevious  SELECT @EDPrevious =  CASE WHEN @TimeUnit = 'Year' THEN DATEADD(yy, -1, @EDCurrent)  ELSE DATEADD(DAY, @CurrPeriodElapsed, @SDPrevious) END   IF @EDLastYear <> @DATEMAX  IF DATEADD(DAY, @CurrPeriodElapsed, @SDLastYear) <= @EDLastYear  SELECT @EDLastYear =  CASE WHEN @TimeUnit = 'Year' THEN DATEADD(yy, -1, @EDCurrent)  ELSE DATEADD(DAY, @CurrPeriodElapsed, @SDLastYear) END END  INSERT INTO @Dates SELECT  dbo.GetDateStripTime(@SDCurrent),  dbo.GetDateStripTime(@EDCurrent),  dbo.GetDateStripTime(@SDPrevious),  dbo.GetDateStripTime(@EDPrevious),  dbo.GetDateStripTime(@SDLastYear),  dbo.GetDateStripTime(@EDLastYear) RETURN END   
GO
GRANT SELECT ON  [dbo].[GetKPIDates] TO [DYNGRP]
GO

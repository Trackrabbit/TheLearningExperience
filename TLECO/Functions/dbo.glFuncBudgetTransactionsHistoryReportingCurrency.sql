SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[glFuncBudgetTransactionsHistoryReportingCurrency] (  @TranslationCurrency char(15),  @TranslationDate datetime,   @StartDate datetime,  @EndDate datetime )  returns @glBudgetTrxHist table (  JRNENTRY int,  BUDGETID char(15),  YEAR1 smallint,  PERIODDT datetime,  PERIODID smallint,  ACTINDX int,  TranslationCurrencyID char(15),  TranslationExchangeRate numeric(19,7),  BUDGETAMT numeric(19,5),  TranslationBUDGETAMT numeric(22,5),  BudgerAdjustment numeric(19,5),  TranslationBudgerAdjustment numeric(22,5),  REFRENCE char(31),  TRXDATE datetime,  SOURCDOC char(11),  TRXSORCE char(13),  USWHPSTD char(15),  NOTEINDX numeric(19,5) ) as  BEGIN   Declare @CurrencyTranslationType int  set @CurrencyTranslationType=4 insert into @glBudgetTrxHist select   [GL32000Final].[JRNENTRY],   [GL32000Final].[BUDGETID],   [GL32000Final].[YEAR1],  [GL32000Final].[PERIODDT],   [GL32000Final].[PERIODID],  [GL32000Final].[ACTINDX],  [GL32000Final].[TranslationCurrencyID],  [GL32000Final].[TranslationExchangeRate],  [GL32000Final].[BUDGETAMT],  case GL32000Final.BUDGETAMT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL32000Final].[RTCLCMTD], 3,   [GL32000Final].[TranslationExchangeRate],  [GL32000Final].[DENXRATE],  [GL32000Final].[MCTRXSTT],  [GL32000Final].[DECPLCUR],   [GL32000Final].[BUDGETAMT])  end as TranslationBUDGETAMT,  [GL32000Final].[BudgerAdjustment],  case GL32000Final.BudgerAdjustment  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL32000Final].[RTCLCMTD], 3,   [GL32000Final].[TranslationExchangeRate],  [GL32000Final].[DENXRATE],  [GL32000Final].[MCTRXSTT],  [GL32000Final].[DECPLCUR],   [GL32000Final].[BudgerAdjustment])  end as TranslationBudgerAdjustment,  [GL32000Final].[REFRENCE],  [GL32000Final].[TRXDATE],  [GL32000Final].[SOURCDOC],  [GL32000Final].[TRXSORCE],  [GL32000Final].[USWHPSTD],  [GL32000Final].[NOTEINDX] from (select distinct   [GL_Budget_TRX_HIST].[JRNENTRY],   [GL_Budget_TRX_HIST].[BUDGETID],   [GL_Budget_TRX_HIST].[YEAR1],  [GL_Budget_TRX_HIST].[PERIODDT],   [GL_Budget_TRX_HIST].[PERIODID],  [GL_Budget_TRX_HIST].[ACTINDX],  [GL_Budget_TRX_HIST].[BUDGETAMT],  [GL_Budget_TRX_HIST].[REFRENCE],  [GL_Budget_TRX_HIST].[TRXDATE],  [GL_Budget_TRX_HIST].[SOURCDOC],  [GL_Budget_TRX_HIST].[TRXSORCE],  [GL_Budget_TRX_HIST].[USWHPSTD],  [GL_Budget_TRX_HIST].[NOTEINDX],  [GL_Budget_TRX_HIST].[BudgerAdjustment],  [GL_Budget_TRX_HIST].[TranslationCurrencyID],  [GL_Budget_TRX_HIST].[PERDENDT],  F.XCHGRATE as TranslationExchangeRate,  E.[CURRNIDX],  (E.[DECPLCUR]-1) as DECPLCUR,  [GL_Budget_TRX_HIST].[EXGTBLID],  D.[RTCLCMTD],  dbo.mcFuncGetDenExchRate(@TranslationCurrency,D.RTCLCMTD) as DENXRATE,  [GL_Budget_TRX_HIST].[MCTRXSTT] from DYNAMICS..MC40200 E, DYNAMICS..MC40300 D cross apply  (select a.JRNENTRY, a.BUDGETID, a.YEAR1, a.PERIODDT, a.PERIODID,   a.ACTINDX, a.BUDGETAMT, a.BudgerAdjustment, a.REFRENCE, a.TRXDATE, a.SOURCDOC, a.TRXSORCE,  a.USWHPSTD, a.NOTEINDX,   b.CURNCYID as TranslationCurrencyID,  dbo.glFuncGetPeriodEndDate(a.YEAR1,2,a.PERIODID) as PERDENDT,  b.BudgetExchangeTableID as EXGTBLID,  dbo.mcFuncGetMCTrxState(b.CURNCYID) as MCTRXSTT  from GL32000 a, MC40600 b  where b.CURNCYID=@TranslationCurrency   and a.PERIODDT >=@StartDate and a.PERIODDT <=@EndDate) GL_Budget_TRX_HIST  cross apply dbo.mcFuncGetExchangeRateTable(GL_Budget_TRX_HIST.PERDENDT, GL_Budget_TRX_HIST.EXGTBLID, D.TRXDTDEF, D.DATELMTS,D.PRVDSLMT,D.Base_Exchange_Rate_On,GL_Budget_TRX_HIST.MCTRXSTT,@CurrencyTranslationType) F  where GL_Budget_TRX_HIST.EXGTBLID = D.EXGTBLID and D.CURNCYID=E.CURNCYID) GL32000Final  return END    
GO
GRANT SELECT ON  [dbo].[glFuncBudgetTransactionsHistoryReportingCurrency] TO [DYNGRP]
GO

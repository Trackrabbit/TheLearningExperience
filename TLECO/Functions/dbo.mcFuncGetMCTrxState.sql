SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[mcFuncGetMCTrxState]  (  @RptCurrencyID varchar(15)  )  RETURNS smallint AS  BEGIN   declare  @MCTRXSTT smallint,  @FALSE int,  @TRUE int,  @O_SQL_Error_State int,  @cFunctionalCurrency char(15),  @cEuroCurrency char(15),  @I_tEuroEnabled tinyint,  @tFunctionalEnabled tinyint,  @RptCurrencyEnabled tinyint,  @MC_NOEURO tinyint,  @MC_NONDENOM_TO_NONDENOM tinyint,  @MC_NONDENOM_TO_EURO tinyint,  @MC_NONDENOM_TO_DENOM tinyint,  @MC_DENOM_TO_NONDENOM tinyint,  @MC_DENOM_TO_DENOM tinyint,  @MC_DENOM_TO_EURO tinyint,  @MC_EURO_TO_DENOM tinyint,  @MC_EURO_TO_NONDENOM tinyint   select @FALSE = 0  select @TRUE = 1  select @MC_NOEURO=0,   @MC_NONDENOM_TO_NONDENOM=1,   @MC_NONDENOM_TO_EURO=2,   @MC_NONDENOM_TO_DENOM=3,  @MC_DENOM_TO_NONDENOM=4,  @MC_DENOM_TO_DENOM=5,  @MC_DENOM_TO_EURO=6,  @MC_EURO_TO_DENOM=7,  @MC_EURO_TO_NONDENOM=8   select @I_tEuroEnabled = isnull((select DISTINCT(ENABLED) from MC60400 where ENABLED = @TRUE), @FALSE)   if @I_tEuroEnabled=@TRUE  begin  select @cEuroCurrency = Euro_Currency_ID from DYNAMICS..MC40400   select @cFunctionalCurrency = MC40000.FUNLCURR from MC40000  select @tFunctionalEnabled = isnull((select ENABLED from MC60400 where DENOMCURR = @cFunctionalCurrency), @FALSE)  select @RptCurrencyEnabled = isnull(( select ENABLED from MC60400 where DENOMCURR = @RptCurrencyID), @FALSE )  end   if (@FALSE = @I_tEuroEnabled)  begin  select @MCTRXSTT = @MC_NOEURO  end    else if  (@FALSE = @tFunctionalEnabled)  and (@FALSE = @RptCurrencyEnabled)   and (@cEuroCurrency != @RptCurrencyID)  and (@cEuroCurrency != @cFunctionalCurrency)  begin  select @MCTRXSTT = @MC_NONDENOM_TO_NONDENOM  end   else if (@FALSE = @RptCurrencyEnabled)   and (@cEuroCurrency = @cFunctionalCurrency)  begin  select @MCTRXSTT = @MC_NONDENOM_TO_EURO  end   else if (@TRUE = @tFunctionalEnabled)   and (@FALSE = @RptCurrencyEnabled)   and (@RptCurrencyID != @cEuroCurrency)  begin  select @MCTRXSTT = @MC_NONDENOM_TO_DENOM  end    else if (@FALSE = @tFunctionalEnabled)   and (@TRUE = @RptCurrencyEnabled)   and (@cEuroCurrency != @cFunctionalCurrency)  begin  select @MCTRXSTT = @MC_DENOM_TO_NONDENOM  end    else if (@TRUE = @tFunctionalEnabled)   and (@TRUE = @RptCurrencyEnabled)  begin  select @MCTRXSTT = @MC_DENOM_TO_DENOM  end   else if (@TRUE = @RptCurrencyEnabled)   and (@cFunctionalCurrency = @cEuroCurrency)  begin  select @MCTRXSTT = @MC_DENOM_TO_EURO  end  else if (@TRUE = @tFunctionalEnabled)   and (@RptCurrencyID = @cEuroCurrency)  begin  select @MCTRXSTT = @MC_EURO_TO_DENOM  end  else if (@FALSE = @tFunctionalEnabled)   and (@cFunctionalCurrency != @cEuroCurrency)  and (@RptCurrencyID = @cEuroCurrency)  begin  select @MCTRXSTT = @MC_EURO_TO_NONDENOM  end  else   select @MCTRXSTT = -1   RETURN(@MCTRXSTT) END   
GO
GRANT EXECUTE ON  [dbo].[mcFuncGetMCTrxState] TO [DYNGRP]
GO

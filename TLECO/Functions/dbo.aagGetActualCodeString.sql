SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE function  [dbo].[aagGetActualCodeString]( @aaBudgetTreeID int,  @aaGLHdrID int, @aaGLDistID int, @aaGLAssignID int, @aaCodeSequence int) returns nvarchar(51) as  begin  declare @aaLvlCodeString nvarchar(51),  @aaLevel char(50),   @aaTrxDimCodeID int,  @Cnt int,  @aaNodeCode int,  @USERID   CHAR(15),  @WINTYPE   SMALLINT,  @CMPANYID INTEGER   select @aaLvlCodeString  = N''  declare @aaTemp TABLE(aaTrxDimCodeID int, DEX_ROW_ID int identity)   SELECT @USERID  = SYSTEM_USER  SELECT @WINTYPE = 2   SELECT @CMPANYID = dbo.aagGetCompanyID()  select @aaNodeCode=aaNodeCode from AAG00906 WHERE USERID = @USERID AND WINTYPE = @WINTYPE AND CMPANYID = @CMPANYID  set @Cnt  = 0   if @aaNodeCode=1  begin  insert into @aaTemp (aaTrxDimCodeID)  select aaTrxCodeID  from  (  select aaTrxCodeID,AAG00901.aaOrder from AAG30003 with(nolock)  inner join AAG00901 with(nolock) on AAG30003.aaTrxDimID =  AAG00901.aaTrxDimID   and AAG00901.aaBudgetTreeID = @aaBudgetTreeID and   AAG30003.aaGLHdrID = @aaGLHdrID and  AAG30003.aaGLDistID = @aaGLDistID and  AAG30003.aaGLAssignID = @aaGLAssignID   inner join AAG30001 on AAG30003.aaGLHdrID = AAG30001.aaGLHdrID and  AAG30003.aaGLDistID = AAG30001.aaGLDistID   where ltrim(rtrim(AAG30001.SOURCDOC)) = ''  union all  select aaTrxCodeID, AAG00901.aaOrder from AAG40003 with(nolock)  inner join AAG00901 with(nolock) on AAG40003.aaTrxDimID =  AAG00901.aaTrxDimID   and AAG00901.aaBudgetTreeID = @aaBudgetTreeID and   AAG40003.aaGLHdrID = @aaGLHdrID and  AAG40003.aaGLDistID = @aaGLDistID and  AAG40003.aaGLAssignID = @aaGLAssignID   inner join AAG40001 on AAG40003.aaGLHdrID = AAG40001.aaGLHdrID and  AAG40003.aaGLDistID = AAG40001.aaGLDistID   where ltrim(rtrim(AAG40001.SOURCDOC)) = ''  ) derivCode  order by derivCode.aaOrder  select @aaLevel = aaLevel from AAG00902   where aaBudgetTreeID =  @aaBudgetTreeID and   aaCodeSequence = @aaCodeSequence   end  else  begin  insert into @aaTemp (aaTrxDimCodeID)  select distinct aaTrxCodeID  from  (  select distinct aaTrxCodeID from AAG30003 with(nolock)   inner join AAG00901 with(nolock) on AAG30003.aaTrxDimID =  AAG00901.aaTrxDimID   and AAG00901.aaBudgetTreeID = @aaBudgetTreeID and   AAG30003.aaGLHdrID = @aaGLHdrID and  AAG30003.aaGLDistID = @aaGLDistID and  AAG30003.aaGLAssignID = @aaGLAssignID   inner join AAG00902 with(nolock) on aaTrxCodeID = AAG00902.aaTrxDimCodeID   and AAG00902.aaBudgetTreeID = @aaBudgetTreeID and AAG00902.aaCodeSequence=@aaCodeSequence  inner join AAG30001 on AAG30003.aaGLHdrID = AAG30001.aaGLHdrID and  AAG30003.aaGLDistID = AAG30001.aaGLDistID  where ltrim(rtrim(AAG30001.SOURCDOC)) = ''  union all   select distinct aaTrxCodeID from AAG40003 with(nolock)   inner join AAG00901 with(nolock) on AAG40003.aaTrxDimID =  AAG00901.aaTrxDimID   and AAG00901.aaBudgetTreeID = @aaBudgetTreeID and   AAG40003.aaGLHdrID = @aaGLHdrID and  AAG40003.aaGLDistID = @aaGLDistID and  AAG40003.aaGLAssignID = @aaGLAssignID   inner join AAG00902 with(nolock) on aaTrxCodeID = AAG00902.aaTrxDimCodeID   and AAG00902.aaBudgetTreeID = @aaBudgetTreeID and AAG00902.aaCodeSequence=@aaCodeSequence  inner join AAG40001 on AAG40003.aaGLHdrID = AAG40001.aaGLHdrID and  AAG40003.aaGLDistID = AAG40001.aaGLDistID  where ltrim(rtrim(AAG40001.SOURCDOC)) = ''  ) derivCode   set @aaLevel=1   end    while @Cnt <> @aaLevel   begin   if @Cnt = 0  begin  select @aaTrxDimCodeID = aaTrxDimCodeID   from @aaTemp where DEX_ROW_ID = 1  set @Cnt = 1  set @aaLvlCodeString = ltrim(rtrim(str(@aaTrxDimCodeID)))   end  else  begin  set @Cnt = @Cnt + 1  select @aaTrxDimCodeID = aaTrxDimCodeID   from @aaTemp where DEX_ROW_ID = @Cnt  set @aaLvlCodeString = @aaLvlCodeString + ','+ ltrim(rtrim(str(@aaTrxDimCodeID)))  end  end   return  @aaLvlCodeString   end    
GO
GRANT EXECUTE ON  [dbo].[aagGetActualCodeString] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[glFuncAccountTransactionsOpenReportingCurrency] (  @TranslationCurrency char(15),  @TranslationDate datetime,   @StartDate datetime,  @EndDate datetime )  returns @glAccountTrxOpen table(  OPENYEAR smallint,  JRNENTRY int,  SOURCDOC char(11),  REFRENCE char(31),  DSCRIPTN char(31),  TRXDATE datetime,  TRXSORCE char(13),  ACTINDX int,  ORTRXTYP smallint,  SERIES smallint,  ORMSTRID char(31),  ORMSTRNM char(65),  ORDOCNUM char(21),  ORTRXSRC char(13),  SequenceNumber int,  CURNCYID char(15),  TranslationCurrencyID char(15),  CURRNIDX smallint,  RATETPID char(15),  EXGTBLID char(15),  Original_Exchange_Rate numeric(19,7),  TranslationExchangeRate numeric(19,7),  EXCHDATE datetime,  TIME1 datetime,  RTCLCMTD smallint,  PERIODID smallint,  CRDTAMNT numeric(19,5),  DEBITAMT numeric(19,5),  ORCRDAMT numeric(19,5),  ORDBTAMT numeric(19,5),  TranslationCreditAmount numeric(22,5),  TranslationDebitAmount numeric(22,5),  PERDENDT datetime,  DENXRATE numeric(19,7),  MCTRXSTT smallint,  CurrencyTranslationType smallint,  VOIDED tinyint,  Ledger_ID smallint,  DECPLCUR smallint,  Adjustment_Transaction tinyint )  as BEGIN  insert into @glAccountTrxOpen select   [GL20000Final].[OPENYEAR],   [GL20000Final].[JRNENTRY],  [GL20000Final].[SOURCDOC],   [GL20000Final].[REFRENCE],  [GL20000Final].[DSCRIPTN],  [GL20000Final].[TRXDATE],  [GL20000Final].[TRXSORCE],  [GL20000Final].[ACTINDX],  [GL20000Final].[SERIES],  [GL20000Final].[ORTRXTYP],  [GL20000Final].[ORMSTRID],  [GL20000Final].[ORMSTRNM],  [GL20000Final].[ORDOCNUM],  [GL20000Final].[ORTRXSRC],  [GL20000Final].[SequenceNumber],  [GL20000Final].[CURNCYID],  [GL20000Final].[TranslationCurrencyID],  [GL20000Final].[CURRNIDX],  [GL20000Final].[RATETPID],  [GL20000Final].[EXGTBLID],  [GL20000Final].[Original_Exchange_Rate],  [GL20000Final].[TranslationExchangeRate],  [GL20000Final].[EXCHDATE],  [GL20000Final].[TIME1],  [GL20000Final].[RTCLCMTD],  [GL20000Final].[PERIODID],  [GL20000Final].[CRDTAMNT],  [GL20000Final].[DEBITAMT],  [GL20000Final].[ORCRDAMT],  [GL20000Final].[ORDBTAMT],  case GL20000Final.CRDTAMNT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL20000Final].[RTCLCMTD], 3,   [GL20000Final].[TranslationExchangeRate],  [GL20000Final].[DENXRATE],  [GL20000Final].[MCTRXSTT],  [GL20000Final].[DECPLCUR],   [GL20000Final].[CRDTAMNT])  end as TranslationCreditAmount,  case GL20000Final.DEBITAMT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL20000Final].[RTCLCMTD], 3,   [GL20000Final].[TranslationExchangeRate],  [GL20000Final].[DENXRATE],  [GL20000Final].[MCTRXSTT],  [GL20000Final].[DECPLCUR],   [GL20000Final].[DEBITAMT])  end as TranslationDebitAmount,  [GL20000Final].[PERDENDT],  [GL20000Final].[DENXRATE],  [GL20000Final].[MCTRXSTT],  [GL20000Final].[CurrencyTranslationType],  [GL20000Final].[VOIDED],  [GL20000Final].[Ledger_ID],  [GL20000Final].[DECPLCUR],  [GL20000Final].[Adjustment_Transaction] from (select   [GL_YTD_TRX_OPEN].[OPENYEAR],   [GL_YTD_TRX_OPEN].[JRNENTRY],  [GL_YTD_TRX_OPEN].[SOURCDOC],   [GL_YTD_TRX_OPEN].[REFRENCE],  [GL_YTD_TRX_OPEN].[DSCRIPTN],  [GL_YTD_TRX_OPEN].[TRXDATE],  [GL_YTD_TRX_OPEN].[TRXSORCE],  [GL_YTD_TRX_OPEN].[ACTINDX],  [GL_YTD_TRX_OPEN].[SERIES],  [GL_YTD_TRX_OPEN].[ORTRXTYP],  [GL_YTD_TRX_OPEN].[ORMSTRID],  [GL_YTD_TRX_OPEN].[ORMSTRNM],  [GL_YTD_TRX_OPEN].[ORDOCNUM],  [GL_YTD_TRX_OPEN].[ORTRXSRC],  [GL_YTD_TRX_OPEN].[SequenceNumber],  [GL_YTD_TRX_OPEN].[CURNCYID],  [GL_YTD_TRX_OPEN].[TranslationCurrencyID],  E.[CURRNIDX],  [GL_YTD_TRX_OPEN].[RATETPID],  [GL_YTD_TRX_OPEN].[EXGTBLID],  [GL_YTD_TRX_OPEN].[Original_Exchange_Rate],  F.XCHGRATE as TranslationExchangeRate,  F.[EXCHDATE],  F.[TIME1],  D.[RTCLCMTD],  [GL_YTD_TRX_OPEN].[PERIODID],  [GL_YTD_TRX_OPEN].[CRDTAMNT],  [GL_YTD_TRX_OPEN].[DEBITAMT],  [GL_YTD_TRX_OPEN].[ORCRDAMT],  [GL_YTD_TRX_OPEN].[ORDBTAMT],  [GL_YTD_TRX_OPEN].[PERDENDT],  dbo.mcFuncGetDenExchRate(@TranslationCurrency,D.RTCLCMTD) as DENXRATE,  [GL_YTD_TRX_OPEN].[MCTRXSTT],  [GL_YTD_TRX_OPEN].[CurrencyTranslationType],  [GL_YTD_TRX_OPEN].[VOIDED],  [GL_YTD_TRX_OPEN].[Ledger_ID],  (E.[DECPLCUR]-1) as DECPLCUR,  [GL_YTD_TRX_OPEN].[Adjustment_Transaction] from DYNAMICS..MC40200 E, DYNAMICS..MC40300 D cross apply  (select a.OPENYEAR,a.JRNENTRY,a.SOURCDOC,a.REFRENCE,a.DSCRIPTN,a.TRXDATE,  a.TRXSORCE,a.ACTINDX,a.SERIES,a.ORTRXTYP,a.ORMSTRID,a.ORMSTRNM,  a.ORDOCNUM,a.ORTRXSRC,a.SEQNUMBR as SequenceNumber,a.CURNCYID,@TranslationCurrency as TranslationCurrencyID,  a.CURRNIDX,a.RATETPID,b.CurrentExchangeTableID as EXGTBLID,a.XCHGRATE as Original_Exchange_Rate,  a.EXCHDATE,a.TIME1,a.RTCLCMTD,dbo.glFuncGetPeriodID(a.TRXDATE,a.OPENYEAR,a.SERIES) as PERIODID,a.CRDTAMNT,a.DEBITAMT,a.ORCRDAMT,a.ORDBTAMT,  d.PERDENDT,dbo.mcFuncGetMCTrxState(b.CURNCYID) as MCTRXSTT,c.CurrencyTranslationType,  a.VOIDED,a.Ledger_ID,a.Adjustment_Transaction  from GL20000 a, MC40600 b, MC00200 c, (select distinct YEAR1,PERIODID,PERIODDT,PERDENDT from SY40100) d  where c.CurrencyTranslationType =2  and a.ACTINDX=c.ACTINDX and c.CURNCYID=''   and b.CURNCYID=@TranslationCurrency  and a.OPENYEAR=d.YEAR1 and a.PERIODID=d.PERIODID   and d.PERIODDT >=@StartDate and d.PERDENDT <=@EndDate) GL_YTD_TRX_OPEN  cross apply dbo.mcFuncGetExchangeRateTable(@TranslationDate, GL_YTD_TRX_OPEN.EXGTBLID, D.TRXDTDEF, D.DATELMTS,D.PRVDSLMT,D.Base_Exchange_Rate_On,GL_YTD_TRX_OPEN.MCTRXSTT,GL_YTD_TRX_OPEN.CurrencyTranslationType) F  where GL_YTD_TRX_OPEN.EXGTBLID = D.EXGTBLID and D.CURNCYID=E.CURNCYID) GL20000Final  union   select   OPENYEAR,  JRNENTRY,  SOURCDOC,  REFRENCE,  DSCRIPTN,  TRXDATE,  TRXSORCE,  ACTINDX,  SERIES,  ORTRXTYP,  ORMSTRID,  ORMSTRNM,  ORDOCNUM,  ORTRXSRC,  SequenceNumber,  CURNCYID,  TranslationCurrencyID,  CURRNIDX,  RATETPID,  EXGTBLID,  Original_Exchange_Rate,  TranslationExchangeRate,  EXCHDATE,  TIME1,  RTCLCMTD,  PERIODID,  CRDTAMNT,DEBITAMT,  ORCRDAMT,ORDBTAMT,  TranslationCreditAmount,TranslationDebitAmount,  PERDENDT,  DENXRATE,MCTRXSTT,  CurrencyTranslationType,  VOIDED,Ledger_ID,  DECPLCUR,  Adjustment_Transaction  from GL20000CurrencyTranslationView  where TranslationCurrencyID=@TranslationCurrency  and TRXDATE >=@StartDate and TRXDATE<=@EndDate  union  select   a.OPENYEAR,  a.JRNENTRY,  a.SOURCDOC,  a.REFRENCE,  b.DSCRIPTN,  a.TRXDATE,  a.TRXSORCE,  a.ACTINDX,  b.SERIES,  b.ORTRXTYP,  b.ORMSTRID,  b.ORMSTRNM,  b.ORDOCNUM,  b.ORTRXSRC,  a.SEQNUMBR as SequenceNumber,  a.CURNCYID,  a.TranslationCurrencyID,  a.CURRNIDX,  a.RATETPID,  a.EXGTBLID,  a.Original_Exchange_Rate,  a.XCHGRATE as TranslationExchangeRate,  a.EXCHDATE,  a.TIME1,  a.RTCLCMTD,  a.PERIODID,  a.CRDTAMNT,a.DEBITAMT,  a.ORCRDAMT,a.ORDBTAMT,  a.TranslationCreditAmount,a.TranslationDebitAmount,  d.PERDENDT,  a.DENXRATE,a.MCTRXSTT,  a.CurrencyTranslationType,  b.VOIDED,  a.Ledger_ID,  a.DECPLCUR,  0 as Adjustment_Transaction  from GL20001 a, GL20000 b, (select distinct YEAR1,PERIODID,PERIODDT,PERDENDT from SY40100) d  where a.OPENYEAR=b.OPENYEAR and a.JRNENTRY=b.JRNENTRY  and a.ACTINDX=b.ACTINDX and a.TRXDATE=b.TRXDATE and a.SEQNUMBR=b.SEQNUMBR  and a.OPENYEAR=d.YEAR1 and a.PERIODID=d.PERIODID   and a.TranslationCurrencyID=@TranslationCurrency  and a.TRXDATE >=@StartDate and a.TRXDATE<=@EndDate return  end   
GO
GRANT SELECT ON  [dbo].[glFuncAccountTransactionsOpenReportingCurrency] TO [DYNGRP]
GO

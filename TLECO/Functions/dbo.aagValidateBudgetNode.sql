SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[aagValidateBudgetNode] ( @aaCodeSequence INTEGER ) RETURNS INTEGER AS BEGIN DECLARE @TempPeriod TABLE ( PERIODDT DATETIME,  aaFiscalPeriod SMALLINT ) DECLARE @IsRoot INTEGER DECLARE @aaBudgetTreeID INTEGER DECLARE @Result INTEGER DECLARE @aaParCodeSeq INTEGER DECLARE @nCount  INTEGER DECLARE @Count   INTEGER DECLARE @aaBudgetID INTEGER  , @aaActualPriliminary INTEGER  , @aaFiscalPeriod INTEGER  , @aaPerCount INTEGER  , @USERID CHAR (15)  , @WINTYPE INTEGER  , @CMPANYID   INTEGER,  @PeriodDate DATETIME   SELECT @USERID  = SYSTEM_USER SELECT @WINTYPE = 1  SELECT @CMPANYID = dbo.aagGetCompanyID() IF @aaCodeSequence = 0 BEGIN SELECT @aaBudgetID = aaBudgetID , @aaCodeSequence = aaCodeSequence , @aaActualPriliminary = aaActualPriliminary FROM AAG00906 WHERE USERID = @USERID and WINTYPE = @WINTYPE AND CMPANYID = @CMPANYID END ELSE BEGIN SELECT @aaBudgetID = aaBudgetID , @aaActualPriliminary = aaActualPriliminary FROM AAG00906 WHERE USERID = @USERID and WINTYPE = @WINTYPE AND CMPANYID = @CMPANYID END  SELECT TOP 1 @aaBudgetTreeID = aaBudgetTreeID FROM AAG00903 WHERE aaBudgetID = @aaBudgetID SELECT @IsRoot = aaCodeSequence FROM AAG00902 WHERE aaCodeSequence = @aaCodeSequence AND aaBudgetTreeID = @aaBudgetTreeID and aaTrxDimCodeID = aaTrxDimParCodeID SELECT TOP 1 @aaParCodeSeq = aaCodeSequence FROM AAG00902 WHERE aaTrxDimCodeID =(SELECT DISTINCT aaTrxDimParCodeID FROM AAG00902 WHERE aaCodeSequence = @aaCodeSequence AND aaBudgetTreeID = @aaBudgetTreeID)AND aaBudgetTreeID = @aaBudgetTreeID AND aaCodeSequence < @aaCodeSequence ORDER BY aaCodeSequence DESC SELECT @nCount = COUNT (*) FROM dbo.aagGetChildNodes( @aaBudgetTreeID, @aaCodeSequence ) INSERT INTO @TempPeriod SELECT PERIODDT,  aaFiscalPeriod  FROM AAG00904  WHERE aaBudgetID = @aaBudgetID AND  aaCodeSequence = @aaCodeSequence AND aaActualPriliminary = @aaActualPriliminary  WHILE( 1 = 1 ) BEGIN SELECT @Count = COUNT (*) FROM @TempPeriod IF @Count <= 0 BREAK SELECT top 1 @PeriodDate = PERIODDT,  @aaFiscalPeriod = aaFiscalPeriod  FROM @TempPeriod  ORDER BY PERIODDT  IF @IsRoot = @aaCodeSequence BEGIN SELECT @Result =  dbo.aagValidatePeriodBudgetAmount(0,@aaParCodeSeq,2, @PeriodDate) END IF @nCount > 0 BEGIN SELECT @Result = dbo.aagValidatePeriodBudgetAmount(@aaFiscalPeriod,@aaParCodeSeq,1, @PeriodDate) IF ((@Result = 0) OR (@Result = 1) OR (@Result = 3)) BEGIN SELECT @Result = dbo.aagValidatePeriodBudgetAmount ( @aaFiscalPeriod, @aaParCodeSeq, 2, @PeriodDate) IF ( @Result < 0 ) BEGIN IF @Result <> -13  RETURN @Result END END ELSE BEGIN RETURN @Result END END ELSE BEGIN SELECT @Result = dbo.aagValidatePeriodBudgetAmount ( @aaFiscalPeriod, @aaParCodeSeq, 1, @PeriodDate) END  DELETE FROM @TempPeriod where PERIODDT = @PeriodDate AND aaFiscalPeriod = @aaFiscalPeriod END RETURN @Result END    
GO
GRANT EXECUTE ON  [dbo].[aagValidateBudgetNode] TO [DYNGRP]
GO

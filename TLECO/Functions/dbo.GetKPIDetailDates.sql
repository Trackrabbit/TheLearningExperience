SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[GetKPIDetailDates] (  @UserDate datetime = NULL,  @CalendarType varchar(10) = 'Fiscal' ) RETURNS @Dates TABLE (  StartDate datetime,  EndDate datetime,  DateLabel varchar(30),  CurrPrevType int ) AS BEGIN  DECLARE @DATEMAX datetime DECLARE @PREVIOUSTYPE int DECLARE @CURRENTTYPE int SET @PREVIOUSTYPE = 0 SET @CURRENTTYPE = 1 SET @DATEMAX = dbo.GetDefaultMaxDate()  DECLARE @PreviousYearStartDate datetime DECLARE @CurrentMonthStartDate datetime DECLARE @DateIterator datetime DECLARE @MonthCounter int DECLARE @FirstDayCurrentFY datetime DECLARE @PreviousYEAR1 int SET @PreviousYEAR1 = -1 SET @FirstDayCurrentFY = @DATEMAX  DECLARE @MonthTemp TABLE (  AddMonthCount int,  CurrentType int )  SELECT @UserDate = dbo.GetDateStripTime(@UserDate)   IF @CalendarType = 'Fiscal' BEGIN  SELECT @FirstDayCurrentFY = FSTFSCDY FROM SY40101 WHERE @UserDate between FSTFSCDY and LSTFSCDY  SELECT @PreviousYEAR1 = YEAR1 FROM SY40101 WHERE DATEADD(dd, -1, @FirstDayCurrentFY) between FSTFSCDY and LSTFSCDY   INSERT INTO @Dates  SELECT DISTINCT  PERIODDT,  PERDENDT,  dbo.GetDateLabel(PERIODDT, @CalendarType, 'Period'),   @PREVIOUSTYPE  FROM  SY40100 JOIN SY40101 on SY40100.YEAR1 = SY40101.YEAR1  WHERE  SY40101.YEAR1 = @PreviousYEAR1 AND  PERIODID <> 0 AND  FORIGIN = 1   INSERT INTO @Dates  SELECT DISTINCT  PERIODDT,  CASE  WHEN @UserDate >= PERDENDT THEN PERDENDT   ELSE @UserDate  END,  dbo.GetDateLabel(PERIODDT, @CalendarType, 'Period'),   @CURRENTTYPE  FROM  SY40100 JOIN SY40101 on SY40100.YEAR1 = SY40101.YEAR1  WHERE  @UserDate BETWEEN FSTFSCDY AND LSTFSCDY AND  @UserDate >= PERIODDT AND  PERIODID <> 0 AND  FORIGIN = 1 END  ELSE BEGIN  SET @PreviousYearStartDate = DATEADD(yy, -1, DATEADD(MONTH, -MONTH(@UserDate) + 1, DATEADD(DAY, -DAY(@UserDate) + 1, @UserDate)))  SET @CurrentMonthStartDate = DATEADD(DAY, -DAY(@UserDate) + 1, @UserDate)  SET @DateIterator = @PreviousYearStartDate  SET @MonthCounter = 0   WHILE @DateIterator < @CurrentMonthStartDate  BEGIN  INSERT INTO @MonthTemp SELECT @MonthCounter, CASE WHEN @MonthCounter < 12 THEN @PREVIOUSTYPE ELSE @CURRENTTYPE END  SET @MonthCounter = @MonthCounter + 1  SET @DateIterator = DATEADD(MONTH, 1, @DateIterator)  END   INSERT INTO @Dates  SELECT  DATEADD(MONTH, AddMonthCount, @PreviousYearStartDate),   DATEADD(DAY, -1, DATEADD(MONTH, AddMonthCount + 1, @PreviousYearStartDate)),   dbo.GetDateLabel(DATEADD(MONTH, AddMonthCount, @PreviousYearStartDate), @CalendarType, 'Month'),   CurrentType   FROM  @MonthTemp   INSERT INTO @Dates  SELECT  @CurrentMonthStartDate,  @UserDate,  dbo.GetDateLabel(@UserDate, @CalendarType, 'Month'),  @CURRENTTYPE END   RETURN END   
GO
GRANT SELECT ON  [dbo].[GetKPIDetailDates] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
 CREATE FUNCTION [dbo].[glFuncAccountTransactionsWorkReportingCurrency] (  @TranslationCurrency char(15),  @TranslationDate datetime,   @StartDate datetime,  @EndDate datetime )  returns @glAccountTrxWork table (  OPENYEAR smallint,  JRNENTRY int,  SOURCDOC char(11),  REFRENCE char(31),  DSCRIPTN char(31),  TRXDATE datetime,  TRXSORCE char(13),  ACTINDX int,  SERIES smallint,  ORTRXTYP smallint,  ORMSTRID char(31),  ORMSTRNM char(65),  ORDOCNUM char(21),  ORTRXSRC char(13),  SequenceNumber int,  CURNCYID char(15),  TranslationCurrencyID char(15),  CURRNIDX smallint,  RATETPID char(15),  EXGTBLID char(15),  Original_Exchange_Rate numeric(19,7),  TranslationExchangeRate numeric(19,7),  EXCHDATE datetime,  TIME1 datetime,  RTCLCMTD smallint,  PERIODID smallint,  CRDTAMNT numeric(19,5),  DEBITAMT numeric(19,5),  ORCRDAMT numeric(19,5),  ORDBTAMT numeric(19,5),  TranslationCreditAmount numeric(22,5),  TranslationDebitAmount numeric(22,5),  PERDENDT datetime,  DENXRATE numeric(19,7),  MCTRXSTT smallint,  CurrencyTranslationType smallint,  VOIDED tinyint,  Ledger_ID smallint,  DECPLCUR smallint,  Adjustment_Transaction tinyint )   as  BEGIN  insert into @glAccountTrxWork  select   [GL10000Final].[OPENYEAR],   [GL10000Final].[JRNENTRY],  [GL10000Final].[SOURCDOC],   [GL10000Final].[REFRENCE],  [GL10000Final].[DSCRIPTN],  [GL10000Final].[TRXDATE],  [GL10000Final].[TRXSORCE],  [GL10000Final].[ACTINDX],  [GL10000Final].[SERIES],  [GL10000Final].[ORTRXTYP],  [GL10000Final].[ORMSTRID],  [GL10000Final].[ORMSTRNM],  [GL10000Final].[ORDOCNUM],  [GL10000Final].[ORTRXSRC],  [GL10000Final].[SequenceNumber],  [GL10000Final].[CURNCYID],  [GL10000Final].[TranslationCurrencyID],  [GL10000Final].[CURRNIDX],  [GL10000Final].[RATETPID],  [GL10000Final].[EXGTBLID],  [GL10000Final].[Original_Exchange_Rate],  [GL10000Final].[TranslationExchangeRate],  [GL10000Final].[EXCHDATE],  [GL10000Final].[TIME1],  [GL10000Final].[RTCLCMTD],  [GL10000Final].[PERIODID],  [GL10000Final].[CRDTAMNT],  [GL10000Final].[DEBITAMT],  [GL10000Final].[ORCRDAMT],  [GL10000Final].[ORDBTAMT],  case GL10000Final.CRDTAMNT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL10000Final].[RTCLCMTD], 3,   [GL10000Final].[TranslationExchangeRate],  [GL10000Final].[DENXRATE],  [GL10000Final].[MCTRXSTT],  [GL10000Final].[DECPLCUR],   [GL10000Final].[CRDTAMNT])  end as TranslationCreditAmount,  case GL10000Final.DEBITAMT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL10000Final].[RTCLCMTD], 3,   [GL10000Final].[TranslationExchangeRate],  [GL10000Final].[DENXRATE],  [GL10000Final].[MCTRXSTT],  [GL10000Final].[DECPLCUR],   [GL10000Final].[DEBITAMT])  end as TranslationDebitAmount,  [GL10000Final].[PERDENDT],  [GL10000Final].[DENXRATE],  [GL10000Final].[MCTRXSTT],  [GL10000Final].[CurrencyTranslationType],  [GL10000Final].[VOIDED],  [GL10000Final].[Ledger_ID],  [GL10000Final].[DECPLCUR],  [GL10000Final].[Adjustment_Transaction] from (select   [GL_TRX_WORK].[OPENYEAR],   [GL_TRX_WORK].[JRNENTRY],  [GL_TRX_WORK].[SOURCDOC],   [GL_TRX_WORK].[REFRENCE],  [GL_TRX_WORK].[DSCRIPTN],  [GL_TRX_WORK].[TRXDATE],  [GL_TRX_WORK].[TRXSORCE],  [GL_TRX_WORK].[ACTINDX],  [GL_TRX_WORK].[SERIES],  [GL_TRX_WORK].[ORTRXTYP],  [GL_TRX_WORK].[ORMSTRID],  [GL_TRX_WORK].[ORMSTRNM],  [GL_TRX_WORK].[ORDOCNUM],  [GL_TRX_WORK].[ORTRXSRC],  [GL_TRX_WORK].[SequenceNumber],  [GL_TRX_WORK].[CURNCYID],  [GL_TRX_WORK].[TranslationCurrencyID],  E.[CURRNIDX],  [GL_TRX_WORK].[RATETPID],  [GL_TRX_WORK].[EXGTBLID],  [GL_TRX_WORK].[Original_Exchange_Rate],  F.XCHGRATE as TranslationExchangeRate,  F.[EXCHDATE],  F.[TIME1],  D.[RTCLCMTD],  [GL_TRX_WORK].[PERIODID],  [GL_TRX_WORK].[CRDTAMNT],  [GL_TRX_WORK].[DEBITAMT],  [GL_TRX_WORK].[ORCRDAMT],  [GL_TRX_WORK].[ORDBTAMT],  [GL_TRX_WORK].[PERDENDT],  dbo.mcFuncGetDenExchRate(@TranslationCurrency,D.RTCLCMTD) as DENXRATE,  [GL_TRX_WORK].[MCTRXSTT],  [GL_TRX_WORK].[CurrencyTranslationType],  [GL_TRX_WORK].[VOIDED],  [GL_TRX_WORK].[Ledger_ID],  (E.[DECPLCUR]-1) as DECPLCUR,  [GL_TRX_WORK].[Adjustment_Transaction] from DYNAMICS..MC40200 E, DYNAMICS..MC40300 D cross apply  (select e.YEAR1 as OPENYEAR,a.JRNENTRY,a.SOURCDOC,a.REFRENCE,f.DSCRIPTN,a.TRXDATE,  a.TRXSORCE,f.ACTINDX,a.SERIES,f.ORTRXTYP,f.ORMSTRID,f.ORMSTRNM,  f.ORDOCNUM,a.ORTRXSRC,a.SQNCLINE as SequenceNumber,a.CURNCYID,@TranslationCurrency as TranslationCurrencyID,  a.CURRNIDX,a.RATETPID,b.CurrentExchangeTableID as EXGTBLID,a.XCHGRATE as Original_Exchange_Rate,  a.EXCHDATE,a.TIME1,a.RTCLCMTD,dbo.glFuncGetPeriodID(a.TRXDATE,a.OPENYEAR,2) as PERIODID,f.CRDTAMNT,f.DEBITAMT,f.ORCRDAMT,f.ORDBTAMT,  a.TRXDATE as PERDENDT,  dbo.mcFuncGetMCTrxState(b.CURNCYID) as MCTRXSTT,b.CurrencyTranslationType,  a.VOIDED,a.Ledger_ID,a.Adjustment_Transaction  from GL10000 a, GL10001 f,   (select c.ACTINDX,b.CURNCYID,b.CurrentExchangeTableID,c.CurrencyTranslationType  from MC00200 c,MC40600 b  where c.CURNCYID='' and c.CurrencyTranslationType=2   and b.CURNCYID=@TranslationCurrency) b,  (select distinct b.PERIODID, a.YEAR1,a.FSTFSCDY,a.LSTFSCDY from SY40101 a, SY40100 b   where a.YEAR1=b.YEAR1 and b.SERIES=2 and  (@StartDate>=a.FSTFSCDY and @StartDate<=a.LSTFSCDY)  or (@EndDate>=a.FSTFSCDY and @EndDate<=a.LSTFSCDY)  or (@StartDate <=a.FSTFSCDY and @EndDate>=a.LSTFSCDY)) e  where a.JRNENTRY=f.JRNENTRY and f.ACTINDX=b.ACTINDX  and a.PERIODID=e.PERIODID   and e.YEAR1=e.YEAR1   and a.TRXDATE >=@StartDate and a.TRXDATE <=@EndDate  and a.TRXDATE >=e.FSTFSCDY and a.TRXDATE <=e.LSTFSCDY) GL_TRX_WORK  cross apply dbo.mcFuncGetExchangeRateTable(@TranslationDate, GL_TRX_WORK.EXGTBLID, D.TRXDTDEF, D.DATELMTS,D.PRVDSLMT,D.Base_Exchange_Rate_On,GL_TRX_WORK.MCTRXSTT,GL_TRX_WORK.CurrencyTranslationType) F  where GL_TRX_WORK.EXGTBLID = D.EXGTBLID and  D.CURNCYID=E.CURNCYID) GL10000Final  union   select   OPENYEAR,  JRNENTRY,  SOURCDOC,  REFRENCE,  DSCRIPTN,  TRXDATE,  TRXSORCE,  ACTINDX,  SERIES,  ORTRXTYP,  ORMSTRID,  ORMSTRNM,  ORDOCNUM,  ORTRXSRC,  SequenceNumber,  CURNCYID,  TranslationCurrencyID,  CURRNIDX,  RATETPID,  EXGTBLID,  Original_Exchange_Rate,  TranslationExchangeRate,  EXCHDATE,  TIME1,  RTCLCMTD,  PERIODID,  CRDTAMNT,DEBITAMT,  ORCRDAMT,ORDBTAMT,  TranslationCreditAmount,TranslationDebitAmount,  PERDENDT,  DENXRATE,MCTRXSTT,  CurrencyTranslationType,  VOIDED,Ledger_ID,  DECPLCUR,  Adjustment_Transaction  from GL10000CurrencyTranslationView  where TranslationCurrencyID=@TranslationCurrency  and TRXDATE >=@StartDate and TRXDATE<=@EndDate  union  select   [GL10100Final].[OPENYEAR],   [GL10100Final].[JRNENTRY],  [GL10100Final].[SOURCDOC],   [GL10100Final].[REFRENCE],  [GL10100Final].[DSCRIPTN],  [GL10100Final].[TRXDATE],  [GL10100Final].[TRXSORCE],  [GL10100Final].[ACTINDX],  [GL10100Final].[SERIES],  [GL10100Final].[ORTRXTYP],  [GL10100Final].[ORMSTRID],  [GL10100Final].[ORMSTRNM],  [GL10100Final].[ORDOCNUM],  [GL10100Final].[ORTRXSRC],  [GL10100Final].[SequenceNumber],  [GL10100Final].[CURNCYID],  [GL10100Final].[TranslationCurrencyID],  [GL10100Final].[CURRNIDX],  [GL10100Final].[RATETPID],  [GL10100Final].[EXGTBLID],  [GL10100Final].[Original_Exchange_Rate],  [GL10100Final].[TranslationExchangeRate],  [GL10100Final].[EXCHDATE],  [GL10100Final].[TIME1],  [GL10100Final].[RTCLCMTD],  [GL10100Final].[PERIODID],  [GL10100Final].[CRDTAMNT],  [GL10100Final].[DEBITAMT],  [GL10100Final].[ORCRDAMT],  [GL10100Final].[ORDBTAMT],  case GL10100Final.CRDTAMNT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL10100Final].[RTCLCMTD], 3,   [GL10100Final].[TranslationExchangeRate],  [GL10100Final].[DENXRATE],  [GL10100Final].[MCTRXSTT],  [GL10100Final].[DECPLCUR],   [GL10100Final].[CRDTAMNT])  end as TranslationCreditAmount,  case GL10100Final.DEBITAMT  when 0.0 then  0.0  else  dbo.mcFuncCalculateAmountExtended([GL10100Final].[RTCLCMTD], 3,   [GL10100Final].[TranslationExchangeRate],  [GL10100Final].[DENXRATE],  [GL10100Final].[MCTRXSTT],  [GL10100Final].[DECPLCUR],   [GL10100Final].[DEBITAMT])  end as TranslationDebitAmount,  [GL10100Final].[PERDENDT],  [GL10100Final].[DENXRATE],  [GL10100Final].[MCTRXSTT],  [GL10100Final].[CurrencyTranslationType],  [GL10100Final].[VOIDED],  [GL10100Final].[Ledger_ID],  [GL10100Final].[DECPLCUR],  0 as Adjustment_Transaction from (select   [GL_TRX_WORK].[OPENYEAR],   [GL_TRX_WORK].[JRNENTRY],  [GL_TRX_WORK].[SOURCDOC],   [GL_TRX_WORK].[REFRENCE],  [GL_TRX_WORK].[DSCRIPTN],  [GL_TRX_WORK].[TRXDATE],  [GL_TRX_WORK].[TRXSORCE],  [GL_TRX_WORK].[ACTINDX],  [GL_TRX_WORK].[SERIES],  [GL_TRX_WORK].[ORTRXTYP],  [GL_TRX_WORK].[ORMSTRID],  [GL_TRX_WORK].[ORMSTRNM],  [GL_TRX_WORK].[ORDOCNUM],  [GL_TRX_WORK].[ORTRXSRC],  [GL_TRX_WORK].[SequenceNumber],  [GL_TRX_WORK].[CURNCYID],  [GL_TRX_WORK].[TranslationCurrencyID],  E.[CURRNIDX],  [GL_TRX_WORK].[RATETPID],  [GL_TRX_WORK].[EXGTBLID],  [GL_TRX_WORK].[Original_Exchange_Rate],  F.XCHGRATE as TranslationExchangeRate,  F.[EXCHDATE],  F.[TIME1],  D.[RTCLCMTD],  [GL_TRX_WORK].[PERIODID],  [GL_TRX_WORK].[CRDTAMNT],  [GL_TRX_WORK].[DEBITAMT],  [GL_TRX_WORK].[ORCRDAMT],  [GL_TRX_WORK].[ORDBTAMT],  [GL_TRX_WORK].[PERDENDT],  dbo.mcFuncGetDenExchRate(@TranslationCurrency,D.RTCLCMTD) as DENXRATE,  [GL_TRX_WORK].[MCTRXSTT],  [GL_TRX_WORK].[CurrencyTranslationType],  [GL_TRX_WORK].[VOIDED],  [GL_TRX_WORK].[Ledger_ID],  (E.[DECPLCUR]-1) as DECPLCUR from DYNAMICS..MC40200 E, DYNAMICS..MC40300 D cross apply  (select distinct a.OPENYEAR,a.JRNENTRY,a.SOURCDOC,a.REFRENCE,f.DSCRIPTN,a.TRXDATE,  a.TRXSORCE,f.ACTINDX,2 as SERIES,0 as ORTRXTYP,'' as ORMSTRID,'' as ORMSTRNM,  '' as ORDOCNUM,'' as ORTRXSRC,a.SQNCLINE as SequenceNumber,a.CURNCYID,@TranslationCurrency as TranslationCurrencyID,  '' as RATETPID,b.CurrentExchangeTableID as EXGTBLID,0 as Original_Exchange_Rate,  dbo.glFuncGetMinDate() as EXCHDATE,dbo.glFuncGetMinDate() as TIME1,a.PERIODID,  CRDTAMNT = case when f.TRXAMNT<0 then abs(f.TRXAMNT) else 0.0 end,  DEBITAMT = case when f.TRXAMNT>0 then f.TRXAMNT else 0.0 end,  ORCRDAMT = case when f.TRXAMNT<0 then abs(f.TRXAMNT) else 0.0 end,  ORDBTAMT = case when f.TRXAMNT>0 then f.TRXAMNT else 0.0 end,  a.TRXDATE as PERDENDT,dbo.mcFuncGetMCTrxState(b.CURNCYID) as MCTRXSTT,c.CurrencyTranslationType,  a.VOIDED,1 as Ledger_ID  from GL10100 a, GL10101 f, MC40600 b, MC00200 c, (select distinct YEAR1, PERIODID, PERIODDT, PERDENDT from SY40100) d  where a.BSNSFMID=f.BSNSFMID and a.JRNENTRY=f.JRNENTRY and c.CurrencyTranslationType =2    and f.ACTINDX=c.ACTINDX and c.CURNCYID=''   and b.CURNCYID=@TranslationCurrency  and a.OPENYEAR=d.YEAR1 and a.PERIODID=d.PERIODID  and a.TRXDATE >=@StartDate and a.TRXDATE <=@EndDate) GL_TRX_WORK  cross apply dbo.mcFuncGetExchangeRateTable(@TranslationDate, GL_TRX_WORK.EXGTBLID, D.TRXDTDEF, D.DATELMTS,D.PRVDSLMT,D.Base_Exchange_Rate_On,GL_TRX_WORK.MCTRXSTT,GL_TRX_WORK.CurrencyTranslationType) F  where GL_TRX_WORK.EXGTBLID = D.EXGTBLID and D.CURNCYID=E.CURNCYID) GL10100Final  union   select   OPENYEAR,  JRNENTRY,  SOURCDOC,  REFRENCE,  DSCRIPTN,  TRXDATE,  TRXSORCE,  ACTINDX,  SERIES,  ORTRXTYP,  ORMSTRID,  ORMSTRNM,  ORDOCNUM,  ORTRXSRC,  SequenceNumber,  CURNCYID,  TranslationCurrencyID,  CURRNIDX,  RATETPID,  EXGTBLID,  Original_Exchange_Rate,  TranslationExchangeRate,  EXCHDATE,  TIME1,  RTCLCMTD,  PERIODID,  CRDTAMNT,DEBITAMT,  ORCRDAMT,ORDBTAMT,  TranslationCreditAmount,TranslationDebitAmount,  PERDENDT,  DENXRATE,MCTRXSTT,  CurrencyTranslationType,  VOIDED,Ledger_ID,  DECPLCUR,  Adjustment_Transaction  from GL10100CurrencyTranslationView  where TranslationCurrencyID=@TranslationCurrency  and TRXDATE >=@StartDate and TRXDATE<=@EndDate  union  select   a.OPENYEAR,  a.JRNENTRY,  a.SOURCDOC,  a.REFRENCE,  c.DSCRIPTN,  a.TRXDATE,  a.TRXSORCE,  a.ACTINDX,  b.SERIES,  c.ORTRXTYP,  c.ORMSTRID,  c.ORMSTRNM,  c.ORDOCNUM,  b.ORTRXSRC,  a.SEQNUMBR as SequenceNumber,  a.CURNCYID,  a.TranslationCurrencyID,  a.CURRNIDX,  a.RATETPID,  a.EXGTBLID,  a.Original_Exchange_Rate,  a.XCHGRATE as TranslationExchangeRate,  a.EXCHDATE,  a.TIME1,  a.RTCLCMTD,  a.PERIODID,  a.CRDTAMNT,a.DEBITAMT,  a.ORCRDAMT,a.ORDBTAMT,  a.TranslationCreditAmount,a.TranslationDebitAmount,  d.PERDENDT,  a.DENXRATE,a.MCTRXSTT,  a.CurrencyTranslationType,  b.VOIDED,  a.Ledger_ID,  a.DECPLCUR,  0 as Adjustment_Transaction  from GL20001 a, GL10000 b, GL10001 c, (select distinct YEAR1,PERIODID,PERIODDT,PERDENDT from SY40100) d  where b.JRNENTRY=c.JRNENTRY and a.OPENYEAR=b.OPENYEAR and a.JRNENTRY=b.JRNENTRY  and a.ACTINDX=c.ACTINDX and a.TRXDATE=b.TRXDATE and a.SEQNUMBR=c.SQNCLINE  and a.OPENYEAR=d.YEAR1 and a.PERIODID=d.PERIODID   and a.TranslationCurrencyID=@TranslationCurrency  and a.TRXDATE >=@StartDate and a.TRXDATE<=@EndDate  union  select   a.OPENYEAR,  a.JRNENTRY,  a.SOURCDOC,  a.REFRENCE,  c.DSCRIPTN,  a.TRXDATE,  a.TRXSORCE,  a.ACTINDX,  2 as SERIES,  0 as ORTRXTYP,  '' as ORMSTRID,  '' as ORMSTRNM,  '' as ORDOCNUM,  '' as ORTRXSRC,  a.SEQNUMBR as SequenceNumber,  a.CURNCYID,  a.TranslationCurrencyID,  a.CURRNIDX,  a.RATETPID,  a.EXGTBLID,  a.Original_Exchange_Rate,  a.XCHGRATE as TranslationExchangeRate,  a.EXCHDATE,  a.TIME1,  a.RTCLCMTD,  a.PERIODID,  a.CRDTAMNT,a.DEBITAMT,  a.ORCRDAMT,a.ORDBTAMT,  a.TranslationCreditAmount,a.TranslationDebitAmount,  d.PERDENDT,  a.DENXRATE,a.MCTRXSTT,  a.CurrencyTranslationType,  b.VOIDED,  a.Ledger_ID,  a.DECPLCUR,  0 as Adjustment_Transaction  from GL20001 a, GL10100 b, GL10101 c, (select distinct YEAR1,PERIODID,PERIODDT,PERDENDT from SY40100) d  where b.JRNENTRY=c.JRNENTRY and a.OPENYEAR=b.OPENYEAR and a.JRNENTRY=b.JRNENTRY  and a.ACTINDX=c.ACTINDX and a.TRXDATE=b.TRXDATE and a.SEQNUMBR=c.SQNCLINE  and a.OPENYEAR=d.YEAR1 and a.PERIODID=d.PERIODID   and a.TranslationCurrencyID=@TranslationCurrency  and a.TRXDATE >=@StartDate and a.TRXDATE<=@EndDate  return END   
GO
GRANT SELECT ON  [dbo].[glFuncAccountTransactionsWorkReportingCurrency] TO [DYNGRP]
GO

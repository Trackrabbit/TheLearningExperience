SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smCopyToAll]   @I_iFromRelID int   = NULL,  @I_iToRelID int   = NULL,  @I_tReplace smallint = NULL,  @I_tSingleCopy smallint = NULL,  @O_SQL_Error_State int   = NULL output as  declare   @iToRelID int,  @tTransaction tinyint,  @iStatus int,  @sLevel smallint  set NOCOUNT on  select @O_SQL_Error_State = 0  if @I_iFromRelID is NULL or  @I_tReplace is NULL begin   select @O_SQL_Error_State = 20929   return  end   create table #Relations(  RELID int not null,  PARNTRLTID int not null,  ENTYLVL int not null,  ENTITYID int not null,  RELSTRNG char(31) not null)  create table #RelIDs(  RELSTRNG char(31) not null,  DEX_ROW_ID int identity(1,1) not null)  if @I_tSingleCopy = 1 begin  exec @iStatus = smCopyRelations  @I_iFromRelID,  @I_iToRelID,  @I_tReplace,  @O_SQL_Error_State output    if @iStatus <> 0 or @O_SQL_Error_State <> 0  return @iStatus end else begin  select   @sLevel = ENTYLVL   from   ORG40100 e,   ORG00100 r  where   r.RELID = @I_iFromRelID  and r.ENTITYID = e.ENTITYID   DECLARE sibling_cursor CURSOR for   select   RELID  from  ORG00100 r, ORG40100 e   where   r.ENTITYID = e.ENTITYID   and e.ENTYLVL = @sLevel   open sibling_cursor   if @@trancount = 0  begin  select @tTransaction = 1  begin transaction  end   FETCH NEXT FROM sibling_cursor INTO @iToRelID  while (@@fetch_status <> -1)  begin  if (@@fetch_status <> -2)   begin  if (@iToRelID <> @I_iFromRelID)  begin  exec @iStatus = smCopyRelations  @I_iFromRelID,  @iToRelID,  @I_tReplace,  @O_SQL_Error_State output    if @iStatus <> 0 or @O_SQL_Error_State <> 0  begin  if @tTransaction = 1  rollback transaction  DEALLOCATE sibling_cursor  return @iStatus  end   delete #Relations  delete #RelIDs  end  end  FETCH NEXT FROM sibling_cursor into @iToRelID  end   DEALLOCATE sibling_cursor   if @tTransaction = 1  commit transaction  end  return    
GO
GRANT EXECUTE ON  [dbo].[smCopyToAll] TO [DYNGRP]
GO

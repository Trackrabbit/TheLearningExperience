SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taDeleteSkills]  @I_vSKILLTITLE_I char(31),    @I_vRequesterTrx smallint = 0,   @I_vUSRDEFND1 char(50) = '',      @I_vUSRDEFND2 char(50) = '',      @I_vUSRDEFND3 char(50) = '',      @I_vUSRDEFND4 varchar(8000) = '',  @I_vUSRDEFND5 varchar(8000) = '',  @O_iErrorState int output, @oErrString varchar(255) output  with encryption as  set transaction isolation level read uncommitted set nocount on  declare   @SKILLNUMBER_I smallint,  @NUMBERAVAILABLE_I tinyint,  @O_oErrorState int,  @iCustomState int,  @iCustomErrString varchar(255),  @iStatus int,      @iError int       select   @SKILLNUMBER_I = 0,   @NUMBERAVAILABLE_I = 0,  @iCustomState = 0,  @O_oErrorState = 0,  @iCustomErrString = '',  @O_iErrorState = 0  if (@oErrString is null) begin  select @oErrString = '' end  exec @iStatus = taDeleteSkillsPre  @I_vSKILLTITLE_I output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState  = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 8715    exec @iStatus = taUpdateString  @O_iErrorState,  @iCustomErrString,  @oErrString output,  @O_oErrorState output end  if ( @I_vSKILLTITLE_I is null or  @I_vRequesterTrx is null  ) begin  select @O_iErrorState = 8716    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vSKILLTITLE_I = '') begin  select @O_iErrorState = 8717    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@I_vSKILLTITLE_I <> '') begin  if not exists(select 1 from DYNAMICS..HR2SKL01 (nolock) where SKILLTITLE_I = @I_vSKILLTITLE_I)  begin   select @O_iErrorState = 8718    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  end end  if (@I_vSKILLTITLE_I <> '') begin  select @SKILLNUMBER_I = SKILLNUMBER_I from DYNAMICS..HR2SKL01 (nolock) where SKILLTITLE_I = @I_vSKILLTITLE_I end   if (@I_vRequesterTrx not in (0,1)) begin  select @O_iErrorState = 8719     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output end  if (@O_iErrorState <> 0) begin  return (@O_iErrorState) end  if exists (select 1 from DYNAMICS..HR2SKL06 where SKILLNUMBER_I = @SKILLNUMBER_I) begin  select @NUMBERAVAILABLE_I = 1 end   delete DYNAMICS..HR2SKL01 where SKILLTITLE_I = @I_vSKILLTITLE_I if (@@error <> 0) begin  select @O_iErrorState = 8720    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@NUMBERAVAILABLE_I = 1) begin  update DYNAMICS..HR2SKL05 set NUMBERAVAILABLE_I = NUMBERAVAILABLE_I - 1 where SKILLSETNUMBER_I in(select SKILLSETNUMBER_I from DYNAMICS..HR2SKL06 where SKILLNUMBER_I = @SKILLNUMBER_I) end  delete DYNAMICS..HR2SKL06 where SKILLNUMBER_I = @SKILLNUMBER_I if (@@error <> 0) begin  select @O_iErrorState = 8721    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  delete DYNAMICS..HR2APP09 where SKILLNUMBER_I = @SKILLNUMBER_I if (@@error <> 0) begin  select @O_iErrorState = 8722    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  exec @iStatus = taDeleteSkillsPost  @I_vSKILLTITLE_I,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState  = @iCustomState output,  @oErrString = @iCustomErrString output  select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @O_iErrorState = 8723    exec @iStatus = taUpdateString  @O_iErrorState,  @iCustomErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taDeleteSkills] TO [DYNGRP]
GO

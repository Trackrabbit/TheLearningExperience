SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taApplicantInterviewUpdate]  @I_vLLASTNAME_I char(21)=null,      @I_vFFIRSTNAME_I char(15)='',      @I_vAPPLYDATE_I datetime,       @I_vAPPINTTYPESTR_I char(21),       @I_vCATEGORY_I char(31),       @I_vAPPLICANTNUMBER_I numeric(19,5)=null,    @I_vCOMPANYCODE_I char(5),       @I_vREVIEWSCORE_I numeric(19,5) = null,    @I_vPOSITIONCODE_I char(7) = null,     @I_vNOTE varchar(8000) = null,       @I_vCHANGEBY_I char(15) = null,      @I_vUpdateIfExists tinyint = 1,      @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @exists tinyint,  @ActualDate datetime,        @count tinyint,          @segcount tinyint,         @existingnoteindex int,        @APPINTTYPECODE_I smallint,       @APPINTCATCODE_I smallint,       @REVIEWRANGE_I smallint,       @WEIGHTSUM_I smallint,        @REVIEWRATINGDECIMA_I numeric(19,5),   @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,        @iGetNextNoteIdxErrState int,      @iAddCodeErrState int,  @O_oErrorState int,  @iError int           select  @exists = 0,          @ActualDate = '',         @count = 0,  @segcount = 0,  @existingnoteindex = 0,   @APPINTTYPECODE_I = 0,  @APPINTCATCODE_I = 0,  @REVIEWRANGE_I = 0,   @WEIGHTSUM_I = 0,   @REVIEWRATINGDECIMA_I = 0,   @nNextNoteIndex = 0,        @O_iErrorState = 0         if (@oErrString is NULL) begin  select @oErrString = '' end  select @I_vUpdateIfExists = 1  exec @iStatus = taApplicantInterviewUpdatePre  @I_vLLASTNAME_I output,  @I_vFFIRSTNAME_I output,  @I_vAPPLYDATE_I output,  @I_vAPPINTTYPESTR_I output,  @I_vCATEGORY_I output,  @I_vAPPLICANTNUMBER_I output,  @I_vCOMPANYCODE_I output,  @I_vREVIEWSCORE_I output,  @I_vPOSITIONCODE_I output,  @I_vNOTE output,  @I_vCHANGEBY_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 10455    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vFFIRSTNAME_I is NULL or  @I_vAPPLYDATE_I is NULL or  @I_vAPPINTTYPESTR_I is NULL or  @I_vCATEGORY_I is NULL or   @I_vUpdateIfExists is NULL or  @I_vCOMPANYCODE_I is NULL or   @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 11284    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vCATEGORY_I = UPPER(@I_vCATEGORY_I),  @I_vPOSITIONCODE_I = UPPER(@I_vPOSITIONCODE_I),  @I_vCOMPANYCODE_I = UPPER(@I_vCOMPANYCODE_I)  select @ActualDate = convert(varchar(12),getdate())  if (@I_vCHANGEBY_I is null)  begin   select @I_vCHANGEBY_I = 'eConnect' end  if (@I_vLLASTNAME_I is null) and (@I_vAPPLICANTNUMBER_I is null) begin  select @O_iErrorState = 11285     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vAPPLICANTNUMBER_I is null) begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)))  begin  select @O_iErrorState = 11286     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLYDATE_I = '') begin  select @O_iErrorState = 11287     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vAPPINTTYPESTR_I = '')  begin  select @O_iErrorState = 11331     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vCOMPANYCODE_I = '') begin  select @O_iErrorState = 11325     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vCOMPANYCODE_I <> '') begin  if (not exists(select INTERID from DYNAMICS..SY01500 (nolock) where INTERID = @I_vCOMPANYCODE_I))  begin  select @O_iErrorState = 11326     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPINTTYPESTR_I <> '')  begin  if not exists (select 1 from DYNAMICS..HRAPP001 (nolock) where  APPINTTYPESTR_I = @I_vAPPINTTYPESTR_I)  begin  select @O_iErrorState = 11288     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else   begin  select @APPINTTYPECODE_I = APPINTTYPECODE_I,  @REVIEWRANGE_I = REVIEWRANGE_I  from DYNAMICS..HRAPP001 (nolock) where APPINTTYPESTR_I = @I_vAPPINTTYPESTR_I  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is not null) begin if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) and APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I))  begin  select @O_iErrorState = 11289     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is null) begin  select  @I_vLLASTNAME_I = LLASTNAME_I,  @I_vFFIRSTNAME_I = FFIRSTNAME_I  from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I end  if (@I_vLLASTNAME_I is null) begin  select @O_iErrorState = 11359     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @count = count(*) from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) if (@count > 1) begin   if (@I_vAPPLICANTNUMBER_I is null)   begin  select @O_iErrorState = 11291     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end else begin  if (@I_vAPPLICANTNUMBER_I is null)   begin  select @I_vAPPLICANTNUMBER_I = APPLICANTNUMBER_I from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)  end end  if (@I_vCATEGORY_I = '') begin  select @O_iErrorState = 11295     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vCATEGORY_I <> '') begin  if not exists (select 1 from DYNAMICS..HRAPP002 (nolock) where APPINTTYPECODE_I = @APPINTTYPECODE_I and UPPER(CATEGORY_I) = @I_vCATEGORY_I)  begin  select @O_iErrorState = 11296     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else   begin  select @APPINTCATCODE_I = APPINTCATCODE_I from DYNAMICS..HRAPP002 (nolock) where APPINTTYPECODE_I = @APPINTTYPECODE_I and UPPER(CATEGORY_I) = @I_vCATEGORY_I  end end  if not exists (select 1 from DYNAMICS..HRAPP004 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPINTCATCODE_I = @APPINTCATCODE_I and APPLYDATE_I = @I_vAPPLYDATE_I) begin  select @O_iErrorState = 10457     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end else  begin  select @exists = 1 end  select @existingnoteindex = NOTESINDEX_I from DYNAMICS..HRAPP004 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPINTCATCODE_I = @APPINTCATCODE_I and APPLYDATE_I = @I_vAPPLYDATE_I  if (@I_vUpdateIfExists = 1) and (@I_vNOTE is not null) and (@existingnoteindex = 0) begin  select @nNextNoteIndex = NOTESINDEX_I from DYNAMICS..HR3NOTE1 WITH (TABLOCKX HOLDLOCK)  update DYNAMICS..HR3NOTE1 set NOTESINDEX_I = @nNextNoteIndex + 1  if @@error <> 0  begin  select @O_iErrorState = 11297    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vUpdateIfExists = 1) begin  select   @I_vREVIEWSCORE_I =   case  when @I_vREVIEWSCORE_I is null  then REVIEWSCORE_I  when  @I_vREVIEWSCORE_I is not null  then @I_vREVIEWSCORE_I  end,  @nNextNoteIndex =   case   when @I_vNOTE is null   then NOTESINDEX_I  when @I_vNOTE is not null and @existingnoteindex = 0   then @nNextNoteIndex  when @I_vNOTE is not null and @existingnoteindex = 1   then NOTESINDEX_I  else NOTESINDEX_I  end  from DYNAMICS..HRAPP004 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I and APPINTCATCODE_I = @APPINTCATCODE_I  select   @I_vPOSITIONCODE_I =   case  when @I_vPOSITIONCODE_I is null  then POSITIONCODE_I  when @I_vPOSITIONCODE_I is not null  then @I_vPOSITIONCODE_I  else ''  end  from DYNAMICS..HRAPP003 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I end   if (@I_vPOSITIONCODE_I <> '')  begin  if not exists (select 1 from DYNAMICS..HRPMPS01 (nolock) where  POSITIONCODE_I = @I_vPOSITIONCODE_I and COMPANYCODE_I = @I_vCOMPANYCODE_I)  begin  select @O_iErrorState = 10456     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vREVIEWSCORE_I < -99) or (@I_vREVIEWSCORE_I > @REVIEWRANGE_I) begin   select @O_iErrorState = 10458     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 11294     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 11293     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @REVIEWRATINGDECIMA_I = sum(@REVIEWRANGE_I * WEIGHTFACTOR_I) from DYNAMICS..HRAPP002 (nolock) where APPINTTYPECODE_I = @APPINTTYPECODE_I  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if (@I_vUpdateIfExists = 1) and (@exists = 1)  begin  update DYNAMICS..HRAPP004   set   REVIEWSCORE_I =   case  when @I_vREVIEWSCORE_I is null  then REVIEWSCORE_I  else @I_vREVIEWSCORE_I  end,  NOTESINDEX_I = @nNextNoteIndex  where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I and APPINTCATCODE_I = @APPINTCATCODE_I  if @@error <> 0  begin  select @O_iErrorState = 11332    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  select @WEIGHTSUM_I = sum(WEIGHTFACTOR_I * REVIEWSCORE_I) from DYNAMICS..HRAPP004 where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I  select @REVIEWRATINGDECIMA_I = (@WEIGHTSUM_I/@REVIEWRATINGDECIMA_I) * @REVIEWRANGE_I  begin  if (@I_vUpdateIfExists = 1) and (@exists = 1)  begin  update DYNAMICS..HRAPP003  set REVIEWRATINGDECIMA_I = @REVIEWRATINGDECIMA_I,  WEIGHTSUM_I = @WEIGHTSUM_I   where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I  end  if @@error <> 0  begin  select @O_iErrorState = 11298    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  begin  if (@nNextNoteIndex <> 0) and not exists(select 1 from DYNAMICS..HR2NOT01 (nolock) where NOTESINDEX_I = @nNextNoteIndex)  begin  insert into DYNAMICS..HR2NOT01 (  NOTESINDEX_I,  EMPID_I,  APPLICANTNUMBER_I,  CHANGEBY_I,  CHANGEDATE_I,  NOTES32000_I  )  select   @nNextNoteIndex,      '',          @I_vAPPLICANTNUMBER_I,     @I_vCHANGEBY_I,       @ActualDate,       @I_vNOTE        if @@error <> 0  begin  select @O_iErrorState = 11299    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else   if (@I_vUpdateIfExists = 1) and (@exists = 1)  begin  update DYNAMICS..HR2NOT01   set   CHANGEBY_I = @I_vCHANGEBY_I,  CHANGEDATE_I = @ActualDate,  NOTES32000_I =   case   when @I_vNOTE is null  then NOTES32000_I  else @I_vNOTE  end  where NOTESINDEX_I = @nNextNoteIndex  if @@error <> 0  begin  select @O_iErrorState = 11330    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  end  exec @iStatus = taApplicantInterviewUpdatePost  @I_vLLASTNAME_I,  @I_vFFIRSTNAME_I,  @I_vAPPLYDATE_I,  @I_vAPPINTTYPESTR_I,  @I_vCATEGORY_I,  @I_vAPPLICANTNUMBER_I,  @I_vCOMPANYCODE_I,  @I_vREVIEWSCORE_I,  @I_vPOSITIONCODE_I,  @I_vNOTE,  @I_vCHANGEBY_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11292    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taApplicantInterviewUpdate] TO [DYNGRP]
GO

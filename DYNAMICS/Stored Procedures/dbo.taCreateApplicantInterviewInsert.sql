SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateApplicantInterviewInsert]  @I_vLLASTNAME_I char(21)=null,      @I_vFFIRSTNAME_I char(15)='',      @I_vAPPLYDATE_I datetime,       @I_vAPPINTTYPESTR_I char(21),       @I_vAPPLICANTNUMBER_I numeric(19,5)=null,    @I_vCOMPANYCODE_I char(5),       @I_vPOSITIONCODE_I char(7) = null,     @I_vUpdateIfExists tinyint = 0,      @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @exists tinyint,  @ActualDate datetime,        @count tinyint,          @APPINTTYPECODE_I smallint,       @REVIEWRANGE_I smallint,       @TOTALWEIGHT_I smallint,       @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,        @iGetNextNoteIdxErrState int,      @iAddCodeErrState int,  @O_oErrorState int,  @iError int           select  @exists = 0,          @ActualDate = '',         @count = 0,  @APPINTTYPECODE_I = 0,  @REVIEWRANGE_I = 0,   @TOTALWEIGHT_I = 0,   @nNextNoteIndex = 0,        @O_iErrorState = 0         if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateApplicantInterviewInsertPre  @I_vLLASTNAME_I output,  @I_vFFIRSTNAME_I output,  @I_vAPPLYDATE_I output,  @I_vAPPINTTYPESTR_I output,  @I_vAPPLICANTNUMBER_I output,  @I_vCOMPANYCODE_I output,  @I_vPOSITIONCODE_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11261    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vFFIRSTNAME_I is NULL or  @I_vAPPLYDATE_I is NULL or  @I_vAPPINTTYPESTR_I is NULL or  @I_vCOMPANYCODE_I is NULL or   @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 11262    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select  @I_vPOSITIONCODE_I = UPPER(@I_vPOSITIONCODE_I)  select @ActualDate = convert(varchar(12),getdate())  if (@I_vLLASTNAME_I is null) and (@I_vAPPLICANTNUMBER_I is null)  begin  select @O_iErrorState = 11263     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vAPPLICANTNUMBER_I is null) begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)))  begin  select @O_iErrorState = 11264     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vCOMPANYCODE_I = '') begin  select @O_iErrorState = 11327     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vCOMPANYCODE_I <> '') begin  if (not exists(select INTERID from DYNAMICS..SY01500 (nolock) where INTERID = @I_vCOMPANYCODE_I))  begin  select @O_iErrorState = 11328     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is not null)  begin if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) and APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I))  begin  select @O_iErrorState = 11265     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is null) begin  select  @I_vLLASTNAME_I = LLASTNAME_I,  @I_vFFIRSTNAME_I = FFIRSTNAME_I  from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I end  if (@I_vLLASTNAME_I is null) begin  select @O_iErrorState = 11360     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vAPPLYDATE_I = '') begin  select @O_iErrorState = 11266     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vAPPINTTYPESTR_I = '')  begin  select @O_iErrorState = 11267     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vAPPINTTYPESTR_I <> '')  begin  if not exists (select 1 from DYNAMICS..HRAPP001 (nolock) where  APPINTTYPESTR_I = @I_vAPPINTTYPESTR_I)  begin  select @O_iErrorState = 11268     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else  begin  select @APPINTTYPECODE_I = APPINTTYPECODE_I from DYNAMICS..HRAPP001 (nolock) where APPINTTYPESTR_I = @I_vAPPINTTYPESTR_I  end end  select @I_vAPPINTTYPESTR_I = APPINTTYPESTR_I from DYNAMICS..HRAPP001 (nolock) where APPINTTYPECODE_I = @APPINTTYPECODE_I  select  @REVIEWRANGE_I = REVIEWRANGE_I,  @TOTALWEIGHT_I = TOTALWEIGHT_I  from DYNAMICS..HRAPP001 (nolock) where APPINTTYPECODE_I = @APPINTTYPECODE_I  select @count = count(*) from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) if (@count > 1) begin   if (@I_vAPPLICANTNUMBER_I is null)   begin  select @O_iErrorState = 11269     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end else begin  if (@I_vAPPLICANTNUMBER_I is null)   begin  select @I_vAPPLICANTNUMBER_I = APPLICANTNUMBER_I from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)  end end  if (@I_vUpdateIfExists = 1) begin  select   @I_vPOSITIONCODE_I =   case  when @I_vPOSITIONCODE_I is null  then POSITIONCODE_I  when @I_vPOSITIONCODE_I is not null  then @I_vPOSITIONCODE_I  else ''  end  from DYNAMICS..HRAPP003 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I end  else  begin    select @I_vPOSITIONCODE_I =   case   when @I_vPOSITIONCODE_I is null   then ''  else @I_vPOSITIONCODE_I  end end  if (@I_vPOSITIONCODE_I = '') begin   select @I_vPOSITIONCODE_I = POSITIONCODE_I from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I end  if (@I_vPOSITIONCODE_I <> '')  begin  if not exists (select 1 from DYNAMICS..HRPMPS01 (nolock) where  POSITIONCODE_I = @I_vPOSITIONCODE_I and COMPANYCODE_I = @I_vCOMPANYCODE_I)  begin  select @O_iErrorState = 11270     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 11271     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (exists(select 1 from DYNAMICS..HRAPP003 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I)) begin  select @exists = 1 end  if (@exists = 1 and @I_vUpdateIfExists = 0) begin  select @O_iErrorState = 11272     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@exists = 0 and @I_vUpdateIfExists = 1) begin  select @O_iErrorState = 11278     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 11273     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if not exists(select 1 from DYNAMICS..HRAPP003 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I)  begin  insert DYNAMICS..HRAPP003(  APPLICANTNUMBER_I,  APPINTTYPECODE_I,  APPINTTYPESTR_I,  APPLYDATE_I,  COMPANYCODE_I,  DIVISIONCODE_I,  DEPARTMENTCODE_I,  POSITIONCODE_I,  EFFECTIVEDATE_I,  REVIEWRATINGDECIMA_I,  REVIEWRANGE_I,  WEIGHTSUM_I,  TOTALWEIGHT_I,  NOTESINDEX_I  )  select  @I_vAPPLICANTNUMBER_I,      @APPINTTYPECODE_I,       @I_vAPPINTTYPESTR_I,      @I_vAPPLYDATE_I,       @I_vCOMPANYCODE_I,       '',           '',           @I_vPOSITIONCODE_I,       @ActualDate,        0,           @REVIEWRANGE_I,        0,           @TOTALWEIGHT_I,        @nNextNoteIndex        if @@error <> 0  begin  select @O_iErrorState = 11274    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if (@I_vUpdateIfExists = 1) and (@exists = 1)  begin  update DYNAMICS..HRAPP003   set   POSITIONCODE_I = @I_vPOSITIONCODE_I  where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I  if @@error <> 0  begin  select @O_iErrorState = 11275    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  begin if not exists(select 1 from DYNAMICS..HRAPP004 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and APPINTTYPECODE_I = @APPINTTYPECODE_I and APPLYDATE_I = @I_vAPPLYDATE_I)  begin  insert DYNAMICS..HRAPP004(  APPLICANTNUMBER_I,  APPINTTYPECODE_I,  APPLYDATE_I,  SEQORDER_I,  APPINTCATCODE_I,  CATEGORY_I,  WEIGHTFACTOR_I,  REVIEWSCORE_I,  NOTESINDEX_I  )  select  @I_vAPPLICANTNUMBER_I,      @APPINTTYPECODE_I,       @I_vAPPLYDATE_I,       SEQORDER_I,         APPINTCATCODE_I,       CATEGORY_I,         WEIGHTFACTOR_I,        0,           @nNextNoteIndex        from DYNAMICS..HRAPP002 (nolock) where APPINTTYPECODE_I = @APPINTTYPECODE_I  if @@error <> 0  begin  select @O_iErrorState = 11276    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end   exec @iStatus = taCreateApplicantInterviewInsertPost  @I_vLLASTNAME_I,  @I_vFFIRSTNAME_I,  @I_vAPPLYDATE_I,  @I_vAPPINTTYPESTR_I,  @I_vAPPLICANTNUMBER_I,  @I_vCOMPANYCODE_I,  @I_vPOSITIONCODE_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11277    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateApplicantInterviewInsert] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateApplicantWorkHistory] @I_vLLASTNAME_I char(21)=null,      @I_vFFIRSTNAME_I char(15)='',      @I_vNAME char(31),         @I_vAPPLICANTNUMBER_I numeric(19,5)=null,    @I_vISEQUENCENUMBER_I smallint=null,    @I_vWAGE_I numeric(19,5) = null,     @I_vCOMPENSATIONPERIOD_I smallint = null,    @I_vPOSITION_I char(31) = null,      @I_vSTRTDATE datetime = null,      @I_vENDDATE datetime = null,      @I_vYEARSOFEXP_I char(3) = null,     @I_vNOTE varchar(8000) = null,       @I_vCHANGEBY_I char(15) = null,      @I_vUpdateIfExists tinyint = 1,      @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @exists tinyint,  @iStatus int,  @ActualDate datetime,  @count tinyint,          @segcount tinyint,         @existingnoteindex int,        @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,        @iGetNextNoteIdxErrState int,      @iAddCodeErrState int,  @O_oErrorState int,  @iError int           select  @exists = 0,          @ActualDate = '',  @count = 0,  @segcount = 0,  @existingnoteindex = 0,   @nNextNoteIndex = 0,        @O_iErrorState = 0         if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateApplicantWorkHistoryPre  @I_vLLASTNAME_I output,  @I_vFFIRSTNAME_I output,  @I_vNAME output,  @I_vAPPLICANTNUMBER_I output,   @I_vISEQUENCENUMBER_I output,  @I_vWAGE_I output,  @I_vCOMPENSATIONPERIOD_I output,  @I_vPOSITION_I output,  @I_vSTRTDATE output,  @I_vENDDATE output,  @I_vYEARSOFEXP_I output,  @I_vNOTE output,  @I_vCHANGEBY_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8380    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vFFIRSTNAME_I is NULL or   @I_vNAME is NULL or  @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 8381    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @ActualDate = convert(varchar(12),getdate())  if (@I_vLLASTNAME_I is null) and (@I_vAPPLICANTNUMBER_I is null) begin  select @O_iErrorState = 8382     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vAPPLICANTNUMBER_I is null) begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)))  begin  select @O_iErrorState = 8383     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is not null)  begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) and APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I))  begin  select @O_iErrorState = 8384     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is null) begin  select  @I_vLLASTNAME_I = LLASTNAME_I,  @I_vFFIRSTNAME_I = FFIRSTNAME_I  from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I end  if (@I_vLLASTNAME_I is null) begin  select @O_iErrorState = 8385     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @count = count(*) from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) if (@count > 1) begin   if (@I_vAPPLICANTNUMBER_I is null)   begin  select @O_iErrorState = 8386     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end else begin  if (@I_vAPPLICANTNUMBER_I is null)   begin  select @I_vAPPLICANTNUMBER_I = APPLICANTNUMBER_I from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)  end end  if (@I_vUpdateIfExists = 0) and (@I_vISEQUENCENUMBER_I is not null)  begin  select @O_iErrorState = 8387     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vUpdateIfExists = 0) and (@I_vISEQUENCENUMBER_I is null)  begin   select @I_vISEQUENCENUMBER_I = isnull(max(ISEQUENCENUMBER_I),0) + 1 from DYNAMICS..HR2APP05 (nolock) where @I_vAPPLICANTNUMBER_I = APPLICANTNUMBER_I end  if (@I_vUpdateIfExists = 1)  begin   select @segcount = count(*) from DYNAMICS..HR2APP05 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I  if (@segcount > 1)  begin   if (@I_vISEQUENCENUMBER_I is null)   begin  select @O_iErrorState = 8388     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   end  else  begin  if (@I_vISEQUENCENUMBER_I is null)   begin  select @I_vISEQUENCENUMBER_I = ISEQUENCENUMBER_I from DYNAMICS..HR2APP05 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I  end  end end   if (@I_vUpdateIfExists = 1)  begin  if (not exists(select 1 from DYNAMICS..HR2APP05 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and ISEQUENCENUMBER_I = @I_vISEQUENCENUMBER_I))  begin  select @O_iErrorState = 8389     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else  begin  select @exists = 1  end end  select @existingnoteindex = NOTESINDEX_I from DYNAMICS..HR2APP05 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and ISEQUENCENUMBER_I = @I_vISEQUENCENUMBER_I  if (@I_vUpdateIfExists = 0) and (@I_vNOTE is not null) begin  select @nNextNoteIndex = NOTESINDEX_I from DYNAMICS..HR3NOTE1 WITH (TABLOCKX HOLDLOCK)  if @nNextNoteIndex = 0   begin   insert into DYNAMICS..HR3NOTE1 values (2)  select @nNextNoteIndex = 1  end  else   begin   update DYNAMICS..HR3NOTE1 set NOTESINDEX_I = @nNextNoteIndex + 1  if @@error <> 0  begin  select @O_iErrorState = 8390    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  if (@I_vUpdateIfExists = 1) and (@I_vNOTE is not null) and (@existingnoteindex = 0) begin  select @nNextNoteIndex = NOTESINDEX_I from DYNAMICS..HR3NOTE1 WITH (TABLOCKX HOLDLOCK)  update DYNAMICS..HR3NOTE1 set NOTESINDEX_I = @nNextNoteIndex + 1  if @@error <> 0  begin  select @O_iErrorState = 8391    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vUpdateIfExists = 1) begin  select   @I_vWAGE_I =   case  when @I_vWAGE_I is null  then WAGE_I  when @I_vWAGE_I is not null  then @I_vWAGE_I  else 0  end,  @I_vCOMPENSATIONPERIOD_I =   case  when @I_vCOMPENSATIONPERIOD_I is null  then COMPENSATIONPERIOD_I  when @I_vCOMPENSATIONPERIOD_I is not null  then @I_vCOMPENSATIONPERIOD_I  else 0  end,  @I_vPOSITION_I =   case  when @I_vPOSITION_I is null  then POSITION_I  when @I_vPOSITION_I is not null  then @I_vPOSITION_I  else ''  end,  @I_vSTRTDATE =   case  when @I_vSTRTDATE is null  then STRTDATE  when @I_vSTRTDATE is not null  then @I_vSTRTDATE  else ''  end,  @I_vENDDATE =   case  when @I_vENDDATE is null  then ENDDATE  when @I_vENDDATE is not null  then @I_vENDDATE  else ''  end,  @I_vYEARSOFEXP_I =   case  when @I_vYEARSOFEXP_I is null  then YEARSOFEXP_I  when @I_vYEARSOFEXP_I is not null  then @I_vYEARSOFEXP_I  else ''  end,  @nNextNoteIndex =   case   when @I_vNOTE is null   then NOTESINDEX_I  when @I_vNOTE is not null and @existingnoteindex = 0   then @nNextNoteIndex  when @I_vNOTE is not null and @existingnoteindex = 1   then NOTESINDEX_I  else NOTESINDEX_I  end,  @I_vCHANGEBY_I =   case   when @I_vCHANGEBY_I is null  then CHANGEBY_I   when @I_vCHANGEBY_I is not null  then @I_vCHANGEBY_I  else 'eConnect'  end  from DYNAMICS..HR2APP05 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I end  else  begin    select @I_vWAGE_I =   case   when @I_vWAGE_I is null   then 0  else @I_vWAGE_I  end,  @I_vCOMPENSATIONPERIOD_I =   case   when @I_vCOMPENSATIONPERIOD_I is null   then 0  else @I_vCOMPENSATIONPERIOD_I  end,  @I_vPOSITION_I =   case   when @I_vPOSITION_I is null   then ''  else @I_vPOSITION_I  end,  @I_vSTRTDATE =   case  when @I_vSTRTDATE is null  then ''  else @I_vSTRTDATE  end,  @I_vENDDATE =   case  when @I_vENDDATE is null  then ''  else @I_vENDDATE  end,  @I_vYEARSOFEXP_I =   case  when @I_vYEARSOFEXP_I is null  then ''  else @I_vYEARSOFEXP_I  end,  @I_vCHANGEBY_I =   case   when @I_vCHANGEBY_I is null  then 'eConnect'  else @I_vCHANGEBY_I  end end  if (@I_vNAME = '') begin  select @O_iErrorState = 8392     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 8393     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@exists = 1 and @I_vUpdateIfExists = 0) begin  select @O_iErrorState = 8394     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vWAGE_I < -99999999.99 or @I_vWAGE_I > 99999999.99) begin  select @O_iErrorState = 8395     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vYEARSOFEXP_I <  -9 or @I_vYEARSOFEXP_I > 99)  begin  select @O_iErrorState = 8402     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vENDDATE <> '') and (@I_vSTRTDATE > @I_vENDDATE)  begin  select @O_iErrorState = 20139     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 8396     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if not exists(select 1 from DYNAMICS..HR2APP05 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and ISEQUENCENUMBER_I = @I_vISEQUENCENUMBER_I)  begin  insert DYNAMICS..HR2APP05(  APPLICANTNUMBER_I,  ISEQUENCENUMBER_I,  NAME,  WAGE_I,  COMPENSATIONPERIOD_I,  POSITION_I,  STRTDATE,  ENDDATE,  YEARSOFEXP_I,  NOTESINDEX_I,  CHANGEBY_I,  CHANGEDATE_I  )  select  @I_vAPPLICANTNUMBER_I,      @I_vISEQUENCENUMBER_I,      @I_vNAME,         @I_vWAGE_I,         @I_vCOMPENSATIONPERIOD_I,     @I_vPOSITION_I,        @I_vSTRTDATE,        @I_vENDDATE,        @I_vYEARSOFEXP_I,       @nNextNoteIndex,       @I_vCHANGEBY_I,        @ActualDate         if @@error <> 0  begin  select @O_iErrorState = 8397    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if (@I_vUpdateIfExists = 1) and (@exists = 1)  begin  update DYNAMICS..HR2APP05   set   WAGE_I = @I_vWAGE_I,  COMPENSATIONPERIOD_I = @I_vCOMPENSATIONPERIOD_I,  POSITION_I = @I_vPOSITION_I,  STRTDATE = @I_vSTRTDATE,  ENDDATE = @I_vENDDATE,  YEARSOFEXP_I = @I_vYEARSOFEXP_I,  NOTESINDEX_I = @nNextNoteIndex,  CHANGEBY_I = @I_vCHANGEBY_I,  CHANGEDATE_I = @ActualDate  where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and ISEQUENCENUMBER_I = @I_vISEQUENCENUMBER_I  if @@error <> 0  begin  select @O_iErrorState = 8398    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  begin  if (@nNextNoteIndex <> 0) and not exists(select 1 from DYNAMICS..HR2NOT01 (nolock) where NOTESINDEX_I = @nNextNoteIndex)  begin  insert into DYNAMICS..HR2NOT01 (  NOTESINDEX_I,  EMPID_I,  APPLICANTNUMBER_I,  CHANGEBY_I,  CHANGEDATE_I,  NOTES32000_I  )  select   @nNextNoteIndex,      '',          @I_vAPPLICANTNUMBER_I,     @I_vCHANGEBY_I,       @ActualDate,       @I_vNOTE        if @@error <> 0  begin  select @O_iErrorState = 8399    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else   if (@I_vUpdateIfExists = 1) and (@exists = 1)  begin  update DYNAMICS..HR2NOT01   set   CHANGEBY_I = @I_vCHANGEBY_I,  CHANGEDATE_I = @ActualDate,  NOTES32000_I =   case   when @I_vNOTE is null  then NOTES32000_I  else @I_vNOTE  end  where NOTESINDEX_I = @nNextNoteIndex  if @@error <> 0  begin  select @O_iErrorState = 8400    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  end  exec @iStatus = taCreateApplicantWorkHistoryPost  @I_vLLASTNAME_I,  @I_vFFIRSTNAME_I,  @I_vNAME,  @I_vAPPLICANTNUMBER_I,   @I_vISEQUENCENUMBER_I,  @I_vWAGE_I,  @I_vCOMPENSATIONPERIOD_I,  @I_vPOSITION_I,  @I_vSTRTDATE,  @I_vENDDATE,  @I_vYEARSOFEXP_I,  @I_vNOTE,  @I_vCHANGEBY_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8401    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateApplicantWorkHistory] TO [DYNGRP]
GO

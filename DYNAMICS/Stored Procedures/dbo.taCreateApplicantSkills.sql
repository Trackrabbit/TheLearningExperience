SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateApplicantSkills] @I_vLLASTNAME_I char(21)=null,      @I_vFFIRSTNAME_I char(15)='',      @I_vSKILL char(31),         @I_vAPPLICANTNUMBER_I numeric(19,5)=null,    @I_vCOMMENT20_I char(21) = null,     @I_vPOINTS_I int = null,       @I_vUpdateIfExists tinyint = 1,      @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @SKILLSETNUMBER_I int,  @SKILLNUMBER_I smallint,  @exists tinyint,  @count tinyint,          @segcount tinyint,         @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,        @iGetNextNoteIdxErrState int,      @iAddCodeErrState int,  @O_oErrorState int,  @iError int           select  @SKILLSETNUMBER_I = 0,  @SKILLNUMBER_I = 0,  @exists = 0,          @count = 0,  @segcount = 0,  @nNextNoteIndex = 0,        @O_iErrorState = 0         if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateApplicantSkillsPre  @I_vLLASTNAME_I output,  @I_vFFIRSTNAME_I output,  @I_vSKILL output,  @I_vAPPLICANTNUMBER_I output,  @I_vCOMMENT20_I output,  @I_vPOINTS_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11729    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@I_vFFIRSTNAME_I is NULL or   @I_vSKILL is NULL or   @I_vUpdateIfExists is NULL or  @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 11230    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vLLASTNAME_I is null) and (@I_vAPPLICANTNUMBER_I is null)  begin  select @O_iErrorState = 11231     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vSKILL = '')  begin  select @O_iErrorState = 11234     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vSKILL <> '') begin  if (not exists(select 1 from DYNAMICS..HR2SKL01 (nolock) where UPPER(SKILLTITLE_I) = UPPER(@I_vSKILL)))  begin  select @O_iErrorState = 11235     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else   begin  select @SKILLNUMBER_I = SKILLNUMBER_I from DYNAMICS..HR2SKL01 (nolock) where SKILLTITLE_I = @I_vSKILL  end end  if (not exists(select 1 from DYNAMICS..HR2SKL06 (nolock) where SKILLNUMBER_I = @SKILLNUMBER_I)) begin  select @O_iErrorState = 11236     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vAPPLICANTNUMBER_I is null) begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)))  begin  select @O_iErrorState = 11237     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is not null)  begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) and APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I))  begin  select @O_iErrorState = 11362     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null) and (@I_vLLASTNAME_I is null) begin  select  @I_vLLASTNAME_I = LLASTNAME_I,  @I_vFFIRSTNAME_I = FFIRSTNAME_I  from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I end  if (@I_vLLASTNAME_I is null) begin  select @O_iErrorState = 11363     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  select @count = count(*) from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I) if (@count > 1) begin   if (@I_vAPPLICANTNUMBER_I is null)   begin  select @O_iErrorState = 11238     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end else begin  if (@I_vAPPLICANTNUMBER_I is null)   begin  select @I_vAPPLICANTNUMBER_I = APPLICANTNUMBER_I from DYNAMICS..HR2APP12 (nolock) where UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)  end end  if (@I_vAPPLICANTNUMBER_I is not null)  begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I))  begin  select @O_iErrorState = 11248     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vAPPLICANTNUMBER_I is not null)  begin  if (not exists(select 1 from DYNAMICS..HR2APP12 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and UPPER(FFIRSTNAME_I) = UPPER(@I_vFFIRSTNAME_I) and UPPER(LLASTNAME_I) = UPPER(@I_vLLASTNAME_I)))  begin  select @O_iErrorState = 11249     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vUpdateIfExists in (0,2))  begin   if (not exists(select 1 from DYNAMICS..HR2APP09 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I))  begin  select @O_iErrorState = 11239     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  else  begin  select @exists = 1  end end   if (@I_vUpdateIfExists in (0,2)) begin  select   @I_vPOINTS_I =   case   when @I_vPOINTS_I is null   then POINTS_I  when @I_vPOINTS_I is not null  then @I_vPOINTS_I  else 0  end,  @I_vCOMMENT20_I =   case  when @I_vCOMMENT20_I is null  then COMMENT20_I  when @I_vCOMMENT20_I is not null  then @I_vCOMMENT20_I  else ''  end  from DYNAMICS..HR2APP09 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I end  else  begin    select @I_vPOINTS_I =   case   when @I_vPOINTS_I is null   then 0  else @I_vPOINTS_I  end,  @I_vCOMMENT20_I =   case  when @I_vCOMMENT20_I is null  then ''  else @I_vCOMMENT20_I  end end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 2)  begin  select @O_iErrorState = 11240     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vPOINTS_I < 0 or @I_vPOINTS_I > 9999)  begin  select @O_iErrorState = 11241     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vUpdateIfExists in (1))  begin   if (exists(select 1 from DYNAMICS..HR2APP09 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I))  begin  select @O_iErrorState = 11242     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end   if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 11243     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if not exists(select 1 from DYNAMICS..HR2APP09 (nolock) where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I)  begin  insert DYNAMICS..HR2APP09(  APPLICANTNUMBER_I,  SKILLNUMBER_I,  POINTS_I,  COMMENT20_I  )  select  @I_vAPPLICANTNUMBER_I,     @SKILLNUMBER_I,       @I_vPOINTS_I,        @I_vCOMMENT20_I        if @@error <> 0  begin  select @O_iErrorState = 11244    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else  if (@I_vUpdateIfExists = 2) and (@exists = 1)  begin  update DYNAMICS..HR2APP09   set   POINTS_I = @I_vPOINTS_I,  COMMENT20_I = @I_vCOMMENT20_I  where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I  if @@error <> 0  begin  select @O_iErrorState = 11245    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end  else   if (@I_vUpdateIfExists = 0) and (@exists = 1)  begin  delete DYNAMICS..HR2APP09 where APPLICANTNUMBER_I = @I_vAPPLICANTNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I  if @@error <> 0  begin  select @O_iErrorState = 11247    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateApplicantSkillsPost  @I_vLLASTNAME_I,  @I_vFFIRSTNAME_I,  @I_vSKILL,  @I_vAPPLICANTNUMBER_I,  @I_vCOMMENT20_I,  @I_vPOINTS_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11246    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateApplicantSkills] TO [DYNGRP]
GO

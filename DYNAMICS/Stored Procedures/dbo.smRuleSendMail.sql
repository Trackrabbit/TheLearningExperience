SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[smRuleSendMail]   @BARULEID  int,  @cDBName  char(6)  as   declare   @emailmsg   varchar(255),    @ruledesc   varchar(30),     @subjectln  varchar(255),    @busalert   varchar(15),     @emailid    varchar(101),    @maillist  varchar(255),     @histmail   varchar(255),    @cclist    varchar(255),    @bcclist    varchar(255),    @queryname  varchar(30),     @querystr   varchar(30),     @tablename  varchar(30),     @incres     int,    @keephist   int,    @iError     int,      @iStatus    int,  @CH_SPACE char(1),    @CH_DASH char(1),    @vCc varchar(20),  @vBcc varchar(20),  @vAlert varchar(20),  @vSysDb varchar(50),  @iErrorState integer,  @iStringPos integer   select @cclist = '',  @bcclist = '', @maillist = ''   exec    @iStatus = DYNAMICS.dbo.smGetMsgString 2841, @cDBName, @vSysDb output, @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@iErrorState <> 0) )  return (@iStatus)   exec    @iStatus = DYNAMICS.dbo.smGetMsgString 2766, @cDBName, @vCc output, @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@iErrorState <> 0) )  return (@iStatus)   exec    @iStatus = DYNAMICS.dbo.smGetMsgString 2767, @cDBName, @vBcc output, @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@iErrorState <> 0) )  return (@iStatus)   exec    @iStatus = DYNAMICS.dbo.smGetMsgString 2838, @cDBName, @vAlert output, @iErrorState output  select @iError = @@error  if @iStatus = 0 and @iError <> 0  select @iStatus = @iError  if ( (@iStatus <> 0) or (@iErrorState <> 0) )  return (@iStatus)   exec @iStatus = DYNAMICS..smGetConstantString  'CH_DASH',   @CH_DASH output,  @iErrorState output   select @iError = @@error  if @iStatus <> 0 or @iError <> 0 or @iErrorState <> 0  return (@iStatus)   select @CH_SPACE = ' '   select  @busalert = BUSALRTID, @ruledesc = DSCRIPTN, @emailmsg = EMAILMSG,  @incres = INCLDRSLTS,@keephist = KEEPHIST  from  SY40500  where   BARULEID = @BARULEID   declare Email_cursor cursor for select NOTFCTNID   from SY40505  where BARULEID = @BARULEID  set nocount on  OPEN Email_cursor  FETCH NEXT FROM Email_cursor INTO @emailid   if @@FETCH_STATUS <> -1  begin  select @histmail = rtrim(@emailid)  select @iStringPos = patindex(@vCc + '%', @emailid)  if @iStringPos != 0  begin  select @cclist = rtrim(substring(@emailid,len(@vCc)+1 ,200))  end  else  begin  select @iStringPos = patindex(@vBcc + '%', @emailid)  if @iStringPos != 0  begin  select @bcclist = rtrim(substring(@emailid,len(@vBcc)+1 ,200))  end  else  begin  select @maillist = rtrim(@emailid)  end  end  end   while (@@FETCH_STATUS <> -1)  begin  FETCH NEXT FROM Email_cursor INTO @emailid  if @@FETCH_STATUS <> -1  begin  select @histmail = @histmail + @CH_SPACE + rtrim(@emailid)  select @iStringPos = patindex(@vCc + '%', @emailid)  if @iStringPos != 0  begin  if @cclist <> ''   select @cclist = @cclist + ';'   select @cclist = @cclist + ';' + rtrim(substring(@emailid,len(@vCc)+1,200))  end  else  begin  select @iStringPos = patindex(@vBcc + '%', @emailid)  if @iStringPos != 0  begin  if @bcclist <> ''   select @bcclist = @bcclist + ';'   select @bcclist = @bcclist + ';' + rtrim(substring(@emailid,len(@vBcc)+1,200))  end  else  begin  if @maillist <> ''   select @maillist = @maillist + ';'  select @maillist = @maillist + ';' + rtrim(@emailid)  end  end  end  end   if len (@maillist) > 0   begin  if @incres = 1  begin  select @queryname = substring(@busalert,1,8) + '.txt'  select @querystr = 'select * from ##smRuleID' + ltrim(str(@BARULEID))  select @subjectln = @vSysDb + replicate(@CH_SPACE, 3) + @vAlert + replicate(@CH_SPACE, 3) +  rtrim(@busalert) + @CH_SPACE + @CH_DASH + @CH_SPACE + rtrim(@ruledesc)  exec sp_executesql N'exec @iError =  msdb.dbo.sp_send_dbmail   @recipients=@maillist,   @copy_recipients=@cclist,   @blind_copy_recipients=@bcclist,   @body=@emailmsg,   @subject=@subjectln,   @query_attachment_filename = @queryname,   @query=@querystr,   @query_result_width=255,   @attach_query_result_as_file=1',  N'@iError int output, @maillist varchar(255), @cclist varchar(255), @bcclist varchar(255), @emailmsg varchar(255),   @subjectln varchar(255), @queryname varchar(30), @querystr varchar(30)',  @iError output, @maillist, @cclist, @bcclist, @emailmsg, @subjectln, @queryname, @querystr  end  else  begin  select @subjectln = @vSysDb + replicate(@CH_SPACE, 3) + @vAlert + replicate(@CH_SPACE, 3)   + rtrim(@busalert) + @CH_SPACE + @CH_DASH + @CH_SPACE + rtrim(@ruledesc)  exec sp_executesql N'exec @iError =  msdb.dbo.sp_send_dbmail   @recipients=@maillist,   @copy_recipients=@cclist,   @blind_copy_recipients=@bcclist,   @body=@emailmsg,   @subject=@subjectln',   N'@iError int output, @maillist varchar(255), @cclist varchar(255), @bcclist varchar(255), @emailmsg varchar(255), @subjectln varchar(255)',  @iError output, @maillist, @cclist, @bcclist, @emailmsg, @subjectln  end  end  if @iError <> 0   begin  deallocate Email_cursor   select @tablename ='##smRuleID' + ltrim(str(@BARULEID))  exec ('drop table ' + @tablename)  RETURN  end   if @keephist = 1   begin  insert into SY40506   values(@BARULEID,convert(char(12), getdate(), 102),convert(char(12), getdate(), 108),@histmail)   end   update   SY40500  set   NMBRTIME = NMBRTIME + 1  where   BARULEID = @BARULEID   deallocate Email_cursor   select @tablename ='##smRuleID' + ltrim(str(@BARULEID))  exec ('drop table ' + @tablename)    
GO
GRANT EXECUTE ON  [dbo].[smRuleSendMail] TO [DYNGRP]
GO

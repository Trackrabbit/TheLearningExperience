SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateTests] @I_vTEST_I char(31),        @I_vTESTCODE_I char(7),        @I_vCHANGEBY_I char(15) = null,      @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @exists tinyint,  @ActualDate datetime,      @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,      @iGetNextNoteIdxErrState int,    @iAddCodeErrState int,  @O_oErrorState int,  @iError int         select  @exists = 0,  @ActualDate = '',       @O_iErrorState = 0       if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateTestsPre  @I_vTEST_I output,  @I_vTESTCODE_I output,  @I_vCHANGEBY_I output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8724    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vTEST_I is NULL or  @I_vTESTCODE_I is NULL or   @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 8725    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  select @I_vTESTCODE_I = UPPER(@I_vTESTCODE_I)  select @ActualDate = convert(varchar(12),getdate())  if (@I_vCHANGEBY_I is null)  begin  select @I_vCHANGEBY_I = 'eConnect' end  if (@I_vTEST_I = '') begin  select @O_iErrorState = 8726     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vTESTCODE_I = '') begin  select @O_iErrorState = 8727     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (exists(select 1 from DYNAMICS..HRTST012 (nolock) where UPPER(TEST_I) = UPPER(@I_vTEST_I))) begin  select @exists = 1 end   if (exists(select 1 from DYNAMICS..HRTST012 (nolock) where TESTCODE_I = @I_vTESTCODE_I)) begin  select @exists = 2 end   if (@exists = 1) begin  select @O_iErrorState = 8728     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (@exists = 2) begin  select @O_iErrorState = 8729     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if ( @I_vRequesterTrx < 0 or @I_vRequesterTrx > 1 )  begin  select @O_iErrorState = 8730     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if not exists(select 1 from DYNAMICS..HRTST012 (nolock) where TESTCODE_I = @I_vTESTCODE_I and TEST_I = @I_vTEST_I)  begin  insert DYNAMICS..HRTST012(  TESTCODE_I,  TEST_I,  NOTESINDEX_I,  CHANGEBY_I,  CHANGEDATE_I  )  select  @I_vTESTCODE_I,     @I_vTEST_I,      0,        @I_vCHANGEBY_I,     @ActualDate      if @@error <> 0  begin  select @O_iErrorState = 8731    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateTestsPost  @I_vTEST_I,  @I_vTESTCODE_I,  @I_vCHANGEBY_I,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8732    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateTests] TO [DYNGRP]
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateSkillSetsLine] @I_vSKILLSET_I char(31),       @I_vSKILLTITLE_I char(31),       @I_vUpdateIfExists smallint = 0,     @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @SKILLSETNUMBER_I smallint,    @SKILLNUMBER_I smallint,    @SEQORDER_I smallint,     @exists tinyint,      @numberavail smallint,     @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,     @iGetNextNoteIdxErrState int,   @iAddCodeErrState int,  @O_oErrorState int,  @iError int        select  @SKILLSETNUMBER_I = 0,  @SKILLNUMBER_I = 0,  @SEQORDER_I = 0,  @exists = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateSkillSetsLinePre  @I_vSKILLSET_I output,  @I_vSKILLTITLE_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8742    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vSKILLSET_I is NULL or  @I_vSKILLTITLE_I is NULL or   @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 8743    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (exists(select 1 from DYNAMICS..HR2SKL05 (nolock) where SKILLSET_I = @I_vSKILLSET_I)) begin  select @SKILLSETNUMBER_I = SKILLSETNUMBER_I from DYNAMICS..HR2SKL05 (nolock) where SKILLSET_I = @I_vSKILLSET_I  select @exists = 1 end  else  begin  select @O_iErrorState = 11348    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vSKILLSET_I = '') begin  select @O_iErrorState = 8744    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vSKILLTITLE_I = '') begin  select @O_iErrorState = 11345    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vSKILLTITLE_I <> '') begin  if (not exists(select top 1 SKILLTITLE_I from DYNAMICS..HR2SKL01 (nolock) where SKILLTITLE_I = @I_vSKILLTITLE_I))  begin  select @O_iErrorState = 8745     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 11346     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 8746     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vSKILLTITLE_I <> '') and (exists(select top 1 SKILLTITLE_I from DYNAMICS..HR2SKL01 (nolock) where SKILLTITLE_I = @I_vSKILLTITLE_I)) begin  select @SKILLNUMBER_I = SKILLNUMBER_I from DYNAMICS..HR2SKL01 (nolock) where SKILLTITLE_I = @I_vSKILLTITLE_I end   if (@SKILLNUMBER_I <> 0) begin  if (exists(select SKILLNUMBER_I from DYNAMICS..HR2SKL06 (nolock) where SKILLNUMBER_I = @SKILLNUMBER_I and SKILLSETNUMBER_I = @SKILLSETNUMBER_I))  begin  select @O_iErrorState = 11347     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end   if (@SKILLSETNUMBER_I <> 0) and (@SKILLNUMBER_I <> 0) and (not exists(select top 1 SEQORDER_I from DYNAMICS..HR2SKL06 (nolock) where SKILLSETNUMBER_I = @SKILLSETNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I)) begin  select @SEQORDER_I = isnull(max(SEQORDER_I),0)+10 from DYNAMICS..HR2SKL06 (nolock) where @SKILLSETNUMBER_I = SKILLSETNUMBER_I and @SKILLNUMBER_I = @SKILLNUMBER_I end   if @O_iErrorState <> 0  return (@O_iErrorState)  if (@SKILLNUMBER_I <> 0) begin  if not exists(select 1 from DYNAMICS..HR2SKL06 (nolock) where SKILLSETNUMBER_I = @SKILLSETNUMBER_I and SKILLNUMBER_I = @SKILLNUMBER_I)  begin  insert into DYNAMICS..HR2SKL06(  SKILLSETNUMBER_I,  SKILLNUMBER_I,  SEQORDER_I,  STR20DUMMY_I,  CHECK1_I  )  select   @SKILLSETNUMBER_I,  @SKILLNUMBER_I,  @SEQORDER_I,  '',  1  if @@error <> 0  begin  select @O_iErrorState = 8748    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   end end  begin  select @numberavail = count(*) from DYNAMICS..HR2SKL06 where SKILLSETNUMBER_I = @SKILLSETNUMBER_I  begin  update DYNAMICS..HR2SKL05 set NUMBERAVAILABLE_I = @numberavail where SKILLSETNUMBER_I = @SKILLSETNUMBER_I  if @@error <> 0  begin  select @O_iErrorState = 8749    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end   end end  exec @iStatus = taCreateSkillSetsLinePost  @I_vSKILLSET_I,  @I_vSKILLTITLE_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 8750    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateSkillSetsLine] TO [DYNGRP]
GO

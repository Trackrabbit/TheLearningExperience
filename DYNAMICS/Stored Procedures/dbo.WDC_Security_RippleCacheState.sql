SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
 CREATE procedure [dbo].[WDC_Security_RippleCacheState] (   @pNodeImage smallint = 0,   @pNodeData int = 0,   @pBranch smallint = 0,   @pEntityID int = 0,   @O_iErrorState int = NULL output)   AS SET NOCOUNT ON   declare @iCBOFF smallint, @iCBON smallint, @iCBPART smallint, @iCBDISABLED smallint, @iCBUNKNOWN smallint, @iNODEPENDING smallint, @iNODENODISPLAY smallint  select @iCBOFF = 1, @iCBON = 2, @iCBPART = 3, @iCBDISABLED = 4, @iCBUNKNOWN = 5, @iNODEPENDING = 30, @iNODENODISPLAY = 0  declare @iNodeImageNext smallint  declare @iNodeDataNext int  declare @iNodeState smallint, @iCurrentNodeState smallint  declare @iNodeOverlay smallint, @iCurrentNodeOverlay smallint  declare @iRetVal int, @tTransaction tinyint, @iErrorState int   select @iNodeImageNext = 0 select @iNodeState = 0 if @pNodeImage = 0 and @pNodeData = 0 begin   select @O_iErrorState = 50101 return  end  if @pBranch <> 1 and @pBranch <> 2  and @pBranch <> 3 begin   select @O_iErrorState = 50102 return  end  if @pEntityID = 0 begin   select @O_iErrorState = 50103 return  end  if not exists(select 1 from DYNAMICS.dbo.WDC51100 where WDC_Entity_ID = @pEntityID) begin   select @O_iErrorState = 50104  return  end  if not exists(select 1 from DYNAMICS.dbo.WDC51101 where WDC_Entity_ID = @pEntityID) begin   select @O_iErrorState = 50105  return  end  select @O_iErrorState = 0, @iErrorState = 0  if @@trancount = 0 begin   select @tTransaction = 1 begin transaction  end  if @pBranch = 1 begin   SELECT top 1 @iNodeImageNext = Node_Image_Parent1, @iNodeDataNext = Node_Data_Parent1, @iCurrentNodeState = Node_State, @iCurrentNodeOverlay = Node_Overlay   from DYNAMICS.dbo.WDC51101   where Node_Image = @pNodeImage and Node_Data = @pNodeData and WDC_Entity_ID = @pEntityID   if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50106  return   end   SELECT @iNodeOverlay = NODEPENDING, @iNodeState =   case   when ( CBON > 0 and CBOFF > 0 ) or CBPART > 0 then @iCBPART   when CBON > 0 and CBOFF = 0 then @iCBON   when CBON = 0 and CBOFF > 0 then @iCBOFF   when CBON = 0 and CBOFF = 0 and CBDISABLED > 0 then @iCBDISABLED   else @iCBUNKNOWN   end   from (   select   isnull ( sum( case when Node_State = @iCBOFF then 1 else 0 end ) ,0 ) as CBOFF,   isnull ( sum( case when Node_State = @iCBON then 1 else 0 end ) ,0 ) as CBON,   isnull ( sum( case when Node_State = @iCBPART then 1 else 0 end ) ,0 ) as CBPART,   isnull ( sum( case when Node_State = @iCBDISABLED then 1 else 0 end ) ,0 ) as CBDISABLED,   isnull ( max( case when Node_Overlay = @iNODEPENDING then @iNODEPENDING else @iNODENODISPLAY end ) ,@iNODENODISPLAY ) as NODEPENDING   from DYNAMICS.dbo.WDC51101   where Node_Image_Parent1 = @pNodeImage and Node_Data_Parent1 = @pNodeData and WDC_Entity_ID = @pEntityID   group by Node_Image_Parent1, Node_Data_Parent1) as WDC_States  if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50107  return   end   if @iNodeState = @iCurrentNodeState and @iNodeOverlay = @iCurrentNodeOverlay begin   if @tTransaction = 1 commit transaction   return end  else begin   UPDATE DYNAMICS.dbo.WDC51101 set   Node_State = @iNodeState, Node_Overlay = @iNodeOverlay   where Node_Image = @pNodeImage and Node_Data = @pNodeData and WDC_Entity_ID = @pEntityID   if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50108  return   end    If (@iNodeImageNext = 0 and @iNodeDataNext = 0) or (@iNodeImageNext is NULL or @iNodeDataNext is NULL) begin   if @tTransaction = 1 commit transaction   return end  else begin   exec @iRetVal = DYNAMICS.dbo.WDC_Security_RippleCacheState @pNodeData = @iNodeDataNext,@pNodeImage = @iNodeImageNext,@pBranch = @pBranch,@pEntityID = @pEntityID, @O_iErrorState = @iErrorState   if @iRetVal  <> 0 or @iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50109  return   end   end   end  end  else if @pBranch = 2 begin   SELECT top 1 @iNodeImageNext = Node_Image_Parent2, @iNodeDataNext = Node_Data_Parent2, @iCurrentNodeState = Node_State, @iCurrentNodeOverlay = Node_Overlay   from DYNAMICS.dbo.WDC51101   where Node_Image = @pNodeImage and Node_Data = @pNodeData and WDC_Entity_ID = @pEntityID   if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50110  return   end   SELECT @iNodeOverlay = NODEPENDING, @iNodeState =   case   when ( CBON > 0 and CBOFF > 0 ) or CBPART > 0 then @iCBPART   when CBON > 0 and CBOFF = 0 then @iCBON   when CBON = 0 and CBOFF > 0 then @iCBOFF   when CBON = 0 and CBOFF = 0 and CBDISABLED > 0 then @iCBDISABLED   else @iCBUNKNOWN   end   from (   select   isnull ( sum( case when Node_State = @iCBOFF then 1 else 0 end ) ,0 ) as CBOFF,   isnull ( sum( case when Node_State = @iCBON then 1 else 0 end ) ,0 ) as CBON,   isnull ( sum( case when Node_State = @iCBPART then 1 else 0 end ) ,0 ) as CBPART,   isnull ( sum( case when Node_State = @iCBDISABLED then 1 else 0 end ) ,0 ) as CBDISABLED,   isnull ( max( case when Node_Overlay = @iNODEPENDING then @iNODEPENDING else @iNODENODISPLAY end ) ,@iNODENODISPLAY ) as NODEPENDING   from DYNAMICS.dbo.WDC51101   where Node_Image_Parent2 = @pNodeImage and Node_Data_Parent2 = @pNodeData and WDC_Entity_ID = @pEntityID   group by Node_Image_Parent2, Node_Data_Parent2) as WDC_States  if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50111  return   end   if @iNodeState = @iCurrentNodeState and @iNodeOverlay = @iCurrentNodeOverlay begin   if @tTransaction = 1 commit transaction   return end  else begin   UPDATE DYNAMICS.dbo.WDC51101 set   Node_State = @iNodeState, Node_Overlay = @iNodeOverlay   where Node_Image = @pNodeImage and Node_Data = @pNodeData and WDC_Entity_ID = @pEntityID   if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50112  return   end    If (@iNodeImageNext = 0 and @iNodeDataNext = 0) or (@iNodeImageNext is NULL or @iNodeDataNext is NULL) begin   if @tTransaction = 1 commit transaction   return end  else begin   exec @iRetVal = DYNAMICS.dbo.WDC_Security_RippleCacheState @pNodeData = @iNodeDataNext,@pNodeImage = @iNodeImageNext,@pBranch = @pBranch,@pEntityID = @pEntityID, @O_iErrorState = @iErrorState   if @iRetVal  <> 0 or @iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50113  return   end   end   end  end  else if @pBranch = 3 begin   SELECT top 1 @iNodeImageNext = Node_Image_Parent3, @iNodeDataNext = Node_Data_Parent3, @iCurrentNodeState = Node_State, @iCurrentNodeOverlay = Node_Overlay   from DYNAMICS.dbo.WDC51101   where Node_Image = @pNodeImage and Node_Data = @pNodeData and WDC_Entity_ID = @pEntityID   if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50114  return   end   SELECT @iNodeOverlay = NODEPENDING, @iNodeState =   case   when ( CBON > 0 and CBOFF > 0 ) or CBPART > 0 then @iCBPART   when CBON > 0 and CBOFF = 0 then @iCBON   when CBON = 0 and CBOFF > 0 then @iCBOFF   when CBON = 0 and CBOFF = 0 and CBDISABLED > 0 then @iCBDISABLED   else @iCBUNKNOWN   end   from (   select   isnull ( sum( case when Node_State = @iCBOFF then 1 else 0 end ) ,0 ) as CBOFF,   isnull ( sum( case when Node_State = @iCBON then 1 else 0 end ) ,0 ) as CBON,   isnull ( sum( case when Node_State = @iCBPART then 1 else 0 end ) ,0 ) as CBPART,   isnull ( sum( case when Node_State = @iCBDISABLED then 1 else 0 end ) ,0 ) as CBDISABLED,   isnull ( max( case when Node_Overlay = @iNODEPENDING then @iNODEPENDING else @iNODENODISPLAY end ) ,@iNODENODISPLAY ) as NODEPENDING   from DYNAMICS.dbo.WDC51101   where Node_Image_Parent3 = @pNodeImage and Node_Data_Parent3 = @pNodeData and WDC_Entity_ID = @pEntityID   group by Node_Image_Parent3, Node_Data_Parent3) as WDC_States  if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50115  return   end   if @iNodeState = @iCurrentNodeState and @iNodeOverlay = @iCurrentNodeOverlay begin   if @tTransaction = 1 commit transaction   return end  else begin   UPDATE DYNAMICS.dbo.WDC51101 set   Node_State = @iNodeState, Node_Overlay = @iNodeOverlay   where Node_Image = @pNodeImage and Node_Data = @pNodeData and WDC_Entity_ID = @pEntityID   if @@ERROR <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50116  return   end    If (@iNodeImageNext = 0 and @iNodeDataNext = 0) or (@iNodeImageNext is NULL or @iNodeDataNext is NULL) begin   if @tTransaction = 1 commit transaction   return end  else begin   exec @iRetVal = DYNAMICS.dbo.WDC_Security_RippleCacheState @pNodeData = @iNodeDataNext,@pNodeImage = @iNodeImageNext,@pBranch = @pBranch,@pEntityID = @pEntityID, @O_iErrorState = @iErrorState   if @iRetVal  <> 0 or @iErrorState <> 0 begin   if @tTransaction = 1  rollback transaction   select @O_iErrorState = 50117  return   end   end   end  end  if @tTransaction = 1 commit transaction  return     
GO
GRANT EXECUTE ON  [dbo].[WDC_Security_RippleCacheState] TO [DYNGRP]
GO

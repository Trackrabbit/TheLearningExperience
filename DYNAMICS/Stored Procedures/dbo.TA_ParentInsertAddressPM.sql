SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
CREATE procedure [dbo].[TA_ParentInsertAddressPM] @MASTERDB char(25), @VENDORID char(30), @ADRSCODE char(30), @VNDCNTCT char(40), @ADDRESS1 char(40), @ADDRESS2 char(40), @ADDRESS3 char(40), @CITY char(40), @STATE char(40), @ZIPCODE char(20), @COUNTRY char(30),  @UPSZONE char(5), @PHNUMBR1 char(15), @PHNUMBR2 char(15), @PHONE3 char(15), @FAXNUMBR char(21),  @SHIPMTHD char(30), @TAXSCHID char(30), @EmailPOs tinyint,			 @POEmailRecipient char(90),		 @EmailPOFormat smallint,		 @FaxPOs tinyint,			 @POFaxNumber char(23),			 @FaxPOFormat smallint,			 @CCode char(10),			 @DECLID char(16),			 @O_SQL_Error_State int = NULL  output with encryption as set transaction isolation level read uncommitted set nocount on declare @CMPNYNAM char(255), @VENDORID2 char(17),		 @CStatement varchar(1000), @CStatement1 varchar(1000),  @CStatement2 varchar(1000), @CStatement3 varchar(1000), @CStatement4 varchar(1000), @CStatement5 varchar(1000), @CStatement6 varchar(1000), @CStatement7 varchar(1000), @CStatement8 varchar(1000), @CStatement9 varchar(1000), @CStatement10 varchar(1000), @CStatement11 varchar(1000), @CStatement12 varchar(1000), @CStatement13 varchar(1000), @CStatement14 varchar(1000), @CStatement15 varchar(1000), @CStatement16 varchar(1000), @iStatus int,			 @O_iErrorState int		 select @VENDORID2 = @VENDORID Exec @iStatus = DYNAMICS..taFormatStringsForExecs @VENDORID, @VENDORID output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @ADRSCODE, @ADRSCODE output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @VNDCNTCT, @VNDCNTCT output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @ADDRESS1, @ADDRESS1 output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @ADDRESS2, @ADDRESS2 output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @ADDRESS3, @ADDRESS3 output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @CITY, @CITY output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @STATE, @STATE output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @ZIPCODE, @ZIPCODE output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @COUNTRY, @COUNTRY output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @UPSZONE, @UPSZONE output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @SHIPMTHD, @SHIPMTHD output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @TAXSCHID, @TAXSCHID output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @POEmailRecipient, @POEmailRecipient output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @CCode, @CCode output, @O_iErrorState output Exec @iStatus = DYNAMICS..taFormatStringsForExecs @DECLID, @DECLID output, @O_iErrorState output if not exists( select 1 from tempdb..sysobjects where name = '##REPLMSTR2') begin create table ##REPLMSTR2 ( TYPE int, VALUE char (200), VALUE2 char (200) ) end if not exists( select 1 from ##REPLMSTR2 where TYPE = 2 and VALUE = @VENDORID2 and VALUE2 = @ADRSCODE) and (@VENDORID2 is not null and @ADRSCODE is not null) begin insert into ##REPLMSTR2 select 2,@VENDORID2, @ADRSCODE   declare TAParentInsertAddressPM insensitive CURSOR for select REPLICATE_TO_DB from DYNAMICS..TA_Map where MASTERDB = @MASTERDB and Vendors = 1 set nocount on OPEN TAParentInsertAddressPM FETCH NEXT FROM TAParentInsertAddressPM INTO @CMPNYNAM WHILE (@@FETCH_STATUS <> -1) begin select @CStatement =  'if exists (select 1 from '+ rtrim(@CMPNYNAM) + '..PM00200 where VENDORID ='+''+rtrim(@VENDORID)+')'  select @CStatement1 = 'if not exists (select 1 from '+ rtrim(@CMPNYNAM)+'..PM00300 where VENDORID ='+''+rtrim(@VENDORID)+ ' and ADRSCODE = ' + rtrim(@ADRSCODE)+')' select @CStatement2 = 'insert into '+rtrim(@CMPNYNAM) + '..PM00300 (VENDORID,ADRSCODE,VNDCNTCT,ADDRESS1,ADDRESS2,ADDRESS3,' select @CStatement3 = 'CITY,STATE,ZIPCODE,COUNTRY,CCode,DECLID,UPSZONE,PHNUMBR1, PHNUMBR2,PHONE3,FAXNUMBR,SHIPMTHD,TAXSCHID, EmailPOs,POEmailRecipient,EmailPOFormat,FaxPOs,POFaxNumber,FaxPOFormat)' select @CStatement4 = ' select '+rtrim(@VENDORID)+','+rtrim(@ADRSCODE)+','+rtrim(@VNDCNTCT)+','+rtrim(@ADDRESS1)+','+rtrim(@ADDRESS2)+','+rtrim(@ADDRESS3)+',' select @CStatement5 =	''+rtrim(@CITY)+','+rtrim(@STATE)+','+rtrim(@ZIPCODE)+','+rtrim(@COUNTRY)+','+rtrim(@CCode)+','+rtrim(@DECLID)+','+rtrim(@UPSZONE)+','''+rtrim(@PHNUMBR1)+''',' select @CStatement6 =	''''+rtrim(@PHNUMBR2)+''','''+rtrim(@PHONE3)+''','''+rtrim(@FAXNUMBR)+''','+rtrim(@SHIPMTHD)+','+rtrim(@TAXSCHID)+',' select @CStatement7 = str(@EmailPOs)+','+rtrim(@POEmailRecipient)+','+str(@EmailPOFormat)+','+str(@FaxPOs)+','''+rtrim(@POFaxNumber)+''','+str(@FaxPOFormat) select @CStatement8 = 'else update '+rtrim(@CMPNYNAM) + '..PM00300 ' select @CStatement9 = ' set  ADRSCODE = '+rtrim(@ADRSCODE)+', VNDCNTCT = '+rtrim(@VNDCNTCT)+',' select @CStatement10 = '      ADDRESS1 = '+rtrim(@ADDRESS1)+', ADDRESS2 = '+rtrim(@ADDRESS2)+', ADDRESS3 = '+rtrim(@ADDRESS3)+',' select @CStatement11 = '      CITY = '+rtrim(@CITY)+', STATE = '+rtrim(@STATE)+',' select @CStatement12 = '      ZIPCODE = '+rtrim(@ZIPCODE)+',  COUNTRY = '+rtrim(@COUNTRY)+', CCode = '+rtrim(@CCode)+', DECLID = '+rtrim(@DECLID)+', UPSZONE = '+rtrim(@UPSZONE)+',' select @CStatement13 = '      PHNUMBR1 = '''+rtrim(@PHNUMBR1)+''', PHNUMBR2 = '''+rtrim(@PHNUMBR2)+''', PHONE3 = '''+rtrim(@PHONE3)+''',' select @CStatement14 = '      FAXNUMBR = '''+rtrim(@FAXNUMBR)+''', SHIPMTHD = '+rtrim(@SHIPMTHD)+', TAXSCHID = '+rtrim(@TAXSCHID)+',' select @CStatement15 = '     EmailPOs = '+str(@EmailPOs)+',   POEmailRecipient = '+rtrim(@POEmailRecipient)+', EmailPOFormat = '+str(@EmailPOFormat)+', FaxPOs = '+str(@FaxPOs)+', POFaxNumber = '''+rtrim(@POFaxNumber)+''', FaxPOFormat = '+str(@FaxPOFormat)+'' select @CStatement16 = '      where VENDORID = '+rtrim(@VENDORID)+' and ADRSCODE = ' + rtrim(@ADRSCODE) +'' exec (@CStatement + @CStatement1 + @CStatement2 + @CStatement3 + @CStatement4 + @CStatement5 + @CStatement6 + @CStatement7 + @CStatement8 + @CStatement9 + @CStatement10 + @CStatement11 + @CStatement12 +  @CStatement13 + @CStatement14 + @CStatement15 + @CStatement16 ) FETCH NEXT FROM TAParentInsertAddressPM INTO @CMPNYNAM end DEALLOCATE TAParentInsertAddressPM delete ##REPLMSTR2 where VALUE = @VENDORID2 and VALUE2 = @ADRSCODE and TYPE = 2 end 
GO
GRANT EXECUTE ON  [dbo].[TA_ParentInsertAddressPM] TO [DYNGRP]
GO

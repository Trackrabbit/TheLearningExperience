SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
 create procedure [dbo].[taCreateSkillSets] @I_vSKILLSET_I char(31),       @I_vUpdateIfExists smallint = 0,     @I_vRequesterTrx smallint = 0,      @I_vUSRDEFND1 char(50) = '',         @I_vUSRDEFND2 char(50) = '',         @I_vUSRDEFND3 char(50) = '',         @I_vUSRDEFND4 varchar(8000) = '',     @I_vUSRDEFND5 varchar(8000) = '',     @O_iErrorState int output,       @oErrString varchar(255) output       with encryption as  set transaction isolation level read uncommitted set nocount on  declare  @SKILLSETNUMBER_I smallint,    @exists tinyint,      @numberavail smallint,     @iStatus int,  @iCustomState int,  @iCustomErrString varchar(255),  @nNextNoteIndex int,     @iGetNextNoteIdxErrState int,   @iAddCodeErrState int,  @O_oErrorState int,  @iError int        select  @SKILLSETNUMBER_I = 0,  @exists = 0,  @O_iErrorState = 0     if (@oErrString is NULL) begin  select @oErrString = '' end  exec @iStatus = taCreateSkillSetsPre  @I_vSKILLSET_I output,  @I_vUpdateIfExists output,  @I_vRequesterTrx output,  @I_vUSRDEFND1 output,  @I_vUSRDEFND2 output,  @I_vUSRDEFND3 output,  @I_vUSRDEFND4 output,  @I_vUSRDEFND5 output,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11349    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  if (  @I_vSKILLSET_I is NULL or  @I_vUpdateIfExists is NULL or   @I_vRequesterTrx is NULL or  @I_vUSRDEFND1 is NULL or  @I_vUSRDEFND2 is NULL or  @I_vUSRDEFND3 is NULL or  @I_vUSRDEFND4 is NULL or  @I_vUSRDEFND5 is NULL   ) begin  select @O_iErrorState = 11350    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vSKILLSET_I = '') begin  select @O_iErrorState = 11351    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState) end  if (@I_vSKILLSET_I <> '') begin  if (exists(select SKILLSET_I from DYNAMICS..HR2SKL05 (nolock) where SKILLSET_I = @I_vSKILLSET_I))  begin  select @O_iErrorState = 11352    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end end   if (not exists(select 1 from DYNAMICS..HR2SKL05 (nolock) where SKILLSET_I = @I_vSKILLSET_I)) begin  select @SKILLSETNUMBER_I = isnull(max(SKILLSETNUMBER_I),0) + 1 from DYNAMICS..HR2SKL05 (nolock)  end  if (@I_vUpdateIfExists < 0 or @I_vUpdateIfExists > 1)  begin  select @O_iErrorState = 11353     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if (@I_vRequesterTrx < 0 or @I_vRequesterTrx > 1)  begin  select @O_iErrorState = 11354     exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output end  if @O_iErrorState <> 0  return (@O_iErrorState)  begin  if not exists(select 1 from DYNAMICS..HR2SKL05 (nolock) where SKILLSET_I = @I_vSKILLSET_I)  begin  insert DYNAMICS..HR2SKL05(  SKILLSETNUMBER_I,  SKILLSET_I,  NUMBERAVAILABLE_I  )  select  @SKILLSETNUMBER_I,     @I_vSKILLSET_I,      0          if @@error <> 0  begin  select @O_iErrorState = 11355    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @iAddCodeErrState output  return (@O_iErrorState)  end  end end  exec @iStatus = taCreateSkillSetsPost  @I_vSKILLSET_I,  @I_vUpdateIfExists,  @I_vRequesterTrx,  @I_vUSRDEFND1,  @I_vUSRDEFND2,  @I_vUSRDEFND3,  @I_vUSRDEFND4,  @I_vUSRDEFND5,  @O_iErrorState = @iCustomState output,  @oErrString = @iCustomErrString output select @iError = @@error if ((@iStatus <> 0) or (@iCustomState <> 0) or (@iError <> 0)) begin  select @oErrString = rtrim(@oErrString) + ' ' + ltrim(rtrim(@iCustomErrString))  select @O_iErrorState = 11356    exec @iStatus = taUpdateString  @O_iErrorState,  @oErrString,  @oErrString output,  @O_oErrorState output  return (@O_iErrorState) end  return (@O_iErrorState)   
GO
GRANT EXECUTE ON  [dbo].[taCreateSkillSets] TO [DYNGRP]
GO
